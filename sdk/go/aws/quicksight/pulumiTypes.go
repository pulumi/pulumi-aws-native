// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysiserror.html
type AnalysisAnalysisError struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysiserror.html#cfn-quicksight-analysis-analysiserror-message
	Message *string `pulumi:"message"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysiserror.html#cfn-quicksight-analysis-analysiserror-type
	Type *string `pulumi:"type"`
}

// AnalysisAnalysisErrorInput is an input type that accepts AnalysisAnalysisErrorArgs and AnalysisAnalysisErrorOutput values.
// You can construct a concrete instance of `AnalysisAnalysisErrorInput` via:
//
//          AnalysisAnalysisErrorArgs{...}
type AnalysisAnalysisErrorInput interface {
	pulumi.Input

	ToAnalysisAnalysisErrorOutput() AnalysisAnalysisErrorOutput
	ToAnalysisAnalysisErrorOutputWithContext(context.Context) AnalysisAnalysisErrorOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysiserror.html
type AnalysisAnalysisErrorArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysiserror.html#cfn-quicksight-analysis-analysiserror-message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysiserror.html#cfn-quicksight-analysis-analysiserror-type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AnalysisAnalysisErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnalysisError)(nil)).Elem()
}

func (i AnalysisAnalysisErrorArgs) ToAnalysisAnalysisErrorOutput() AnalysisAnalysisErrorOutput {
	return i.ToAnalysisAnalysisErrorOutputWithContext(context.Background())
}

func (i AnalysisAnalysisErrorArgs) ToAnalysisAnalysisErrorOutputWithContext(ctx context.Context) AnalysisAnalysisErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnalysisErrorOutput)
}

// AnalysisAnalysisErrorArrayInput is an input type that accepts AnalysisAnalysisErrorArray and AnalysisAnalysisErrorArrayOutput values.
// You can construct a concrete instance of `AnalysisAnalysisErrorArrayInput` via:
//
//          AnalysisAnalysisErrorArray{ AnalysisAnalysisErrorArgs{...} }
type AnalysisAnalysisErrorArrayInput interface {
	pulumi.Input

	ToAnalysisAnalysisErrorArrayOutput() AnalysisAnalysisErrorArrayOutput
	ToAnalysisAnalysisErrorArrayOutputWithContext(context.Context) AnalysisAnalysisErrorArrayOutput
}

type AnalysisAnalysisErrorArray []AnalysisAnalysisErrorInput

func (AnalysisAnalysisErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisAnalysisError)(nil)).Elem()
}

func (i AnalysisAnalysisErrorArray) ToAnalysisAnalysisErrorArrayOutput() AnalysisAnalysisErrorArrayOutput {
	return i.ToAnalysisAnalysisErrorArrayOutputWithContext(context.Background())
}

func (i AnalysisAnalysisErrorArray) ToAnalysisAnalysisErrorArrayOutputWithContext(ctx context.Context) AnalysisAnalysisErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnalysisErrorArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysiserror.html
type AnalysisAnalysisErrorOutput struct{ *pulumi.OutputState }

func (AnalysisAnalysisErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnalysisError)(nil)).Elem()
}

func (o AnalysisAnalysisErrorOutput) ToAnalysisAnalysisErrorOutput() AnalysisAnalysisErrorOutput {
	return o
}

func (o AnalysisAnalysisErrorOutput) ToAnalysisAnalysisErrorOutputWithContext(ctx context.Context) AnalysisAnalysisErrorOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysiserror.html#cfn-quicksight-analysis-analysiserror-message
func (o AnalysisAnalysisErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisAnalysisError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysiserror.html#cfn-quicksight-analysis-analysiserror-type
func (o AnalysisAnalysisErrorOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisAnalysisError) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AnalysisAnalysisErrorArrayOutput struct{ *pulumi.OutputState }

func (AnalysisAnalysisErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisAnalysisError)(nil)).Elem()
}

func (o AnalysisAnalysisErrorArrayOutput) ToAnalysisAnalysisErrorArrayOutput() AnalysisAnalysisErrorArrayOutput {
	return o
}

func (o AnalysisAnalysisErrorArrayOutput) ToAnalysisAnalysisErrorArrayOutputWithContext(ctx context.Context) AnalysisAnalysisErrorArrayOutput {
	return o
}

func (o AnalysisAnalysisErrorArrayOutput) Index(i pulumi.IntInput) AnalysisAnalysisErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisAnalysisError {
		return vs[0].([]AnalysisAnalysisError)[vs[1].(int)]
	}).(AnalysisAnalysisErrorOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourceentity.html
type AnalysisAnalysisSourceEntity struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourceentity.html#cfn-quicksight-analysis-analysissourceentity-sourcetemplate
	SourceTemplate *AnalysisAnalysisSourceTemplate `pulumi:"sourceTemplate"`
}

// AnalysisAnalysisSourceEntityInput is an input type that accepts AnalysisAnalysisSourceEntityArgs and AnalysisAnalysisSourceEntityOutput values.
// You can construct a concrete instance of `AnalysisAnalysisSourceEntityInput` via:
//
//          AnalysisAnalysisSourceEntityArgs{...}
type AnalysisAnalysisSourceEntityInput interface {
	pulumi.Input

	ToAnalysisAnalysisSourceEntityOutput() AnalysisAnalysisSourceEntityOutput
	ToAnalysisAnalysisSourceEntityOutputWithContext(context.Context) AnalysisAnalysisSourceEntityOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourceentity.html
type AnalysisAnalysisSourceEntityArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourceentity.html#cfn-quicksight-analysis-analysissourceentity-sourcetemplate
	SourceTemplate AnalysisAnalysisSourceTemplatePtrInput `pulumi:"sourceTemplate"`
}

func (AnalysisAnalysisSourceEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnalysisSourceEntity)(nil)).Elem()
}

func (i AnalysisAnalysisSourceEntityArgs) ToAnalysisAnalysisSourceEntityOutput() AnalysisAnalysisSourceEntityOutput {
	return i.ToAnalysisAnalysisSourceEntityOutputWithContext(context.Background())
}

func (i AnalysisAnalysisSourceEntityArgs) ToAnalysisAnalysisSourceEntityOutputWithContext(ctx context.Context) AnalysisAnalysisSourceEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnalysisSourceEntityOutput)
}

func (i AnalysisAnalysisSourceEntityArgs) ToAnalysisAnalysisSourceEntityPtrOutput() AnalysisAnalysisSourceEntityPtrOutput {
	return i.ToAnalysisAnalysisSourceEntityPtrOutputWithContext(context.Background())
}

func (i AnalysisAnalysisSourceEntityArgs) ToAnalysisAnalysisSourceEntityPtrOutputWithContext(ctx context.Context) AnalysisAnalysisSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnalysisSourceEntityOutput).ToAnalysisAnalysisSourceEntityPtrOutputWithContext(ctx)
}

// AnalysisAnalysisSourceEntityPtrInput is an input type that accepts AnalysisAnalysisSourceEntityArgs, AnalysisAnalysisSourceEntityPtr and AnalysisAnalysisSourceEntityPtrOutput values.
// You can construct a concrete instance of `AnalysisAnalysisSourceEntityPtrInput` via:
//
//          AnalysisAnalysisSourceEntityArgs{...}
//
//  or:
//
//          nil
type AnalysisAnalysisSourceEntityPtrInput interface {
	pulumi.Input

	ToAnalysisAnalysisSourceEntityPtrOutput() AnalysisAnalysisSourceEntityPtrOutput
	ToAnalysisAnalysisSourceEntityPtrOutputWithContext(context.Context) AnalysisAnalysisSourceEntityPtrOutput
}

type analysisAnalysisSourceEntityPtrType AnalysisAnalysisSourceEntityArgs

func AnalysisAnalysisSourceEntityPtr(v *AnalysisAnalysisSourceEntityArgs) AnalysisAnalysisSourceEntityPtrInput {
	return (*analysisAnalysisSourceEntityPtrType)(v)
}

func (*analysisAnalysisSourceEntityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAnalysisSourceEntity)(nil)).Elem()
}

func (i *analysisAnalysisSourceEntityPtrType) ToAnalysisAnalysisSourceEntityPtrOutput() AnalysisAnalysisSourceEntityPtrOutput {
	return i.ToAnalysisAnalysisSourceEntityPtrOutputWithContext(context.Background())
}

func (i *analysisAnalysisSourceEntityPtrType) ToAnalysisAnalysisSourceEntityPtrOutputWithContext(ctx context.Context) AnalysisAnalysisSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnalysisSourceEntityPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourceentity.html
type AnalysisAnalysisSourceEntityOutput struct{ *pulumi.OutputState }

func (AnalysisAnalysisSourceEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnalysisSourceEntity)(nil)).Elem()
}

func (o AnalysisAnalysisSourceEntityOutput) ToAnalysisAnalysisSourceEntityOutput() AnalysisAnalysisSourceEntityOutput {
	return o
}

func (o AnalysisAnalysisSourceEntityOutput) ToAnalysisAnalysisSourceEntityOutputWithContext(ctx context.Context) AnalysisAnalysisSourceEntityOutput {
	return o
}

func (o AnalysisAnalysisSourceEntityOutput) ToAnalysisAnalysisSourceEntityPtrOutput() AnalysisAnalysisSourceEntityPtrOutput {
	return o.ToAnalysisAnalysisSourceEntityPtrOutputWithContext(context.Background())
}

func (o AnalysisAnalysisSourceEntityOutput) ToAnalysisAnalysisSourceEntityPtrOutputWithContext(ctx context.Context) AnalysisAnalysisSourceEntityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAnalysisSourceEntity) *AnalysisAnalysisSourceEntity {
		return &v
	}).(AnalysisAnalysisSourceEntityPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourceentity.html#cfn-quicksight-analysis-analysissourceentity-sourcetemplate
func (o AnalysisAnalysisSourceEntityOutput) SourceTemplate() AnalysisAnalysisSourceTemplatePtrOutput {
	return o.ApplyT(func(v AnalysisAnalysisSourceEntity) *AnalysisAnalysisSourceTemplate { return v.SourceTemplate }).(AnalysisAnalysisSourceTemplatePtrOutput)
}

type AnalysisAnalysisSourceEntityPtrOutput struct{ *pulumi.OutputState }

func (AnalysisAnalysisSourceEntityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAnalysisSourceEntity)(nil)).Elem()
}

func (o AnalysisAnalysisSourceEntityPtrOutput) ToAnalysisAnalysisSourceEntityPtrOutput() AnalysisAnalysisSourceEntityPtrOutput {
	return o
}

func (o AnalysisAnalysisSourceEntityPtrOutput) ToAnalysisAnalysisSourceEntityPtrOutputWithContext(ctx context.Context) AnalysisAnalysisSourceEntityPtrOutput {
	return o
}

func (o AnalysisAnalysisSourceEntityPtrOutput) Elem() AnalysisAnalysisSourceEntityOutput {
	return o.ApplyT(func(v *AnalysisAnalysisSourceEntity) AnalysisAnalysisSourceEntity {
		if v != nil {
			return *v
		}
		var ret AnalysisAnalysisSourceEntity
		return ret
	}).(AnalysisAnalysisSourceEntityOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourceentity.html#cfn-quicksight-analysis-analysissourceentity-sourcetemplate
func (o AnalysisAnalysisSourceEntityPtrOutput) SourceTemplate() AnalysisAnalysisSourceTemplatePtrOutput {
	return o.ApplyT(func(v *AnalysisAnalysisSourceEntity) *AnalysisAnalysisSourceTemplate {
		if v == nil {
			return nil
		}
		return v.SourceTemplate
	}).(AnalysisAnalysisSourceTemplatePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html
type AnalysisAnalysisSourceTemplate struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html#cfn-quicksight-analysis-analysissourcetemplate-arn
	Arn string `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html#cfn-quicksight-analysis-analysissourcetemplate-datasetreferences
	DataSetReferences []AnalysisDataSetReference `pulumi:"dataSetReferences"`
}

// AnalysisAnalysisSourceTemplateInput is an input type that accepts AnalysisAnalysisSourceTemplateArgs and AnalysisAnalysisSourceTemplateOutput values.
// You can construct a concrete instance of `AnalysisAnalysisSourceTemplateInput` via:
//
//          AnalysisAnalysisSourceTemplateArgs{...}
type AnalysisAnalysisSourceTemplateInput interface {
	pulumi.Input

	ToAnalysisAnalysisSourceTemplateOutput() AnalysisAnalysisSourceTemplateOutput
	ToAnalysisAnalysisSourceTemplateOutputWithContext(context.Context) AnalysisAnalysisSourceTemplateOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html
type AnalysisAnalysisSourceTemplateArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html#cfn-quicksight-analysis-analysissourcetemplate-arn
	Arn pulumi.StringInput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html#cfn-quicksight-analysis-analysissourcetemplate-datasetreferences
	DataSetReferences AnalysisDataSetReferenceArrayInput `pulumi:"dataSetReferences"`
}

func (AnalysisAnalysisSourceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnalysisSourceTemplate)(nil)).Elem()
}

func (i AnalysisAnalysisSourceTemplateArgs) ToAnalysisAnalysisSourceTemplateOutput() AnalysisAnalysisSourceTemplateOutput {
	return i.ToAnalysisAnalysisSourceTemplateOutputWithContext(context.Background())
}

func (i AnalysisAnalysisSourceTemplateArgs) ToAnalysisAnalysisSourceTemplateOutputWithContext(ctx context.Context) AnalysisAnalysisSourceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnalysisSourceTemplateOutput)
}

func (i AnalysisAnalysisSourceTemplateArgs) ToAnalysisAnalysisSourceTemplatePtrOutput() AnalysisAnalysisSourceTemplatePtrOutput {
	return i.ToAnalysisAnalysisSourceTemplatePtrOutputWithContext(context.Background())
}

func (i AnalysisAnalysisSourceTemplateArgs) ToAnalysisAnalysisSourceTemplatePtrOutputWithContext(ctx context.Context) AnalysisAnalysisSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnalysisSourceTemplateOutput).ToAnalysisAnalysisSourceTemplatePtrOutputWithContext(ctx)
}

// AnalysisAnalysisSourceTemplatePtrInput is an input type that accepts AnalysisAnalysisSourceTemplateArgs, AnalysisAnalysisSourceTemplatePtr and AnalysisAnalysisSourceTemplatePtrOutput values.
// You can construct a concrete instance of `AnalysisAnalysisSourceTemplatePtrInput` via:
//
//          AnalysisAnalysisSourceTemplateArgs{...}
//
//  or:
//
//          nil
type AnalysisAnalysisSourceTemplatePtrInput interface {
	pulumi.Input

	ToAnalysisAnalysisSourceTemplatePtrOutput() AnalysisAnalysisSourceTemplatePtrOutput
	ToAnalysisAnalysisSourceTemplatePtrOutputWithContext(context.Context) AnalysisAnalysisSourceTemplatePtrOutput
}

type analysisAnalysisSourceTemplatePtrType AnalysisAnalysisSourceTemplateArgs

func AnalysisAnalysisSourceTemplatePtr(v *AnalysisAnalysisSourceTemplateArgs) AnalysisAnalysisSourceTemplatePtrInput {
	return (*analysisAnalysisSourceTemplatePtrType)(v)
}

func (*analysisAnalysisSourceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAnalysisSourceTemplate)(nil)).Elem()
}

func (i *analysisAnalysisSourceTemplatePtrType) ToAnalysisAnalysisSourceTemplatePtrOutput() AnalysisAnalysisSourceTemplatePtrOutput {
	return i.ToAnalysisAnalysisSourceTemplatePtrOutputWithContext(context.Background())
}

func (i *analysisAnalysisSourceTemplatePtrType) ToAnalysisAnalysisSourceTemplatePtrOutputWithContext(ctx context.Context) AnalysisAnalysisSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnalysisSourceTemplatePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html
type AnalysisAnalysisSourceTemplateOutput struct{ *pulumi.OutputState }

func (AnalysisAnalysisSourceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnalysisSourceTemplate)(nil)).Elem()
}

func (o AnalysisAnalysisSourceTemplateOutput) ToAnalysisAnalysisSourceTemplateOutput() AnalysisAnalysisSourceTemplateOutput {
	return o
}

func (o AnalysisAnalysisSourceTemplateOutput) ToAnalysisAnalysisSourceTemplateOutputWithContext(ctx context.Context) AnalysisAnalysisSourceTemplateOutput {
	return o
}

func (o AnalysisAnalysisSourceTemplateOutput) ToAnalysisAnalysisSourceTemplatePtrOutput() AnalysisAnalysisSourceTemplatePtrOutput {
	return o.ToAnalysisAnalysisSourceTemplatePtrOutputWithContext(context.Background())
}

func (o AnalysisAnalysisSourceTemplateOutput) ToAnalysisAnalysisSourceTemplatePtrOutputWithContext(ctx context.Context) AnalysisAnalysisSourceTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAnalysisSourceTemplate) *AnalysisAnalysisSourceTemplate {
		return &v
	}).(AnalysisAnalysisSourceTemplatePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html#cfn-quicksight-analysis-analysissourcetemplate-arn
func (o AnalysisAnalysisSourceTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisAnalysisSourceTemplate) string { return v.Arn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html#cfn-quicksight-analysis-analysissourcetemplate-datasetreferences
func (o AnalysisAnalysisSourceTemplateOutput) DataSetReferences() AnalysisDataSetReferenceArrayOutput {
	return o.ApplyT(func(v AnalysisAnalysisSourceTemplate) []AnalysisDataSetReference { return v.DataSetReferences }).(AnalysisDataSetReferenceArrayOutput)
}

type AnalysisAnalysisSourceTemplatePtrOutput struct{ *pulumi.OutputState }

func (AnalysisAnalysisSourceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAnalysisSourceTemplate)(nil)).Elem()
}

func (o AnalysisAnalysisSourceTemplatePtrOutput) ToAnalysisAnalysisSourceTemplatePtrOutput() AnalysisAnalysisSourceTemplatePtrOutput {
	return o
}

func (o AnalysisAnalysisSourceTemplatePtrOutput) ToAnalysisAnalysisSourceTemplatePtrOutputWithContext(ctx context.Context) AnalysisAnalysisSourceTemplatePtrOutput {
	return o
}

func (o AnalysisAnalysisSourceTemplatePtrOutput) Elem() AnalysisAnalysisSourceTemplateOutput {
	return o.ApplyT(func(v *AnalysisAnalysisSourceTemplate) AnalysisAnalysisSourceTemplate {
		if v != nil {
			return *v
		}
		var ret AnalysisAnalysisSourceTemplate
		return ret
	}).(AnalysisAnalysisSourceTemplateOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html#cfn-quicksight-analysis-analysissourcetemplate-arn
func (o AnalysisAnalysisSourceTemplatePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisAnalysisSourceTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-analysissourcetemplate.html#cfn-quicksight-analysis-analysissourcetemplate-datasetreferences
func (o AnalysisAnalysisSourceTemplatePtrOutput) DataSetReferences() AnalysisDataSetReferenceArrayOutput {
	return o.ApplyT(func(v *AnalysisAnalysisSourceTemplate) []AnalysisDataSetReference {
		if v == nil {
			return nil
		}
		return v.DataSetReferences
	}).(AnalysisDataSetReferenceArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datasetreference.html
type AnalysisDataSetReference struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datasetreference.html#cfn-quicksight-analysis-datasetreference-datasetarn
	DataSetArn string `pulumi:"dataSetArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datasetreference.html#cfn-quicksight-analysis-datasetreference-datasetplaceholder
	DataSetPlaceholder string `pulumi:"dataSetPlaceholder"`
}

// AnalysisDataSetReferenceInput is an input type that accepts AnalysisDataSetReferenceArgs and AnalysisDataSetReferenceOutput values.
// You can construct a concrete instance of `AnalysisDataSetReferenceInput` via:
//
//          AnalysisDataSetReferenceArgs{...}
type AnalysisDataSetReferenceInput interface {
	pulumi.Input

	ToAnalysisDataSetReferenceOutput() AnalysisDataSetReferenceOutput
	ToAnalysisDataSetReferenceOutputWithContext(context.Context) AnalysisDataSetReferenceOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datasetreference.html
type AnalysisDataSetReferenceArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datasetreference.html#cfn-quicksight-analysis-datasetreference-datasetarn
	DataSetArn pulumi.StringInput `pulumi:"dataSetArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datasetreference.html#cfn-quicksight-analysis-datasetreference-datasetplaceholder
	DataSetPlaceholder pulumi.StringInput `pulumi:"dataSetPlaceholder"`
}

func (AnalysisDataSetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataSetReference)(nil)).Elem()
}

func (i AnalysisDataSetReferenceArgs) ToAnalysisDataSetReferenceOutput() AnalysisDataSetReferenceOutput {
	return i.ToAnalysisDataSetReferenceOutputWithContext(context.Background())
}

func (i AnalysisDataSetReferenceArgs) ToAnalysisDataSetReferenceOutputWithContext(ctx context.Context) AnalysisDataSetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataSetReferenceOutput)
}

// AnalysisDataSetReferenceArrayInput is an input type that accepts AnalysisDataSetReferenceArray and AnalysisDataSetReferenceArrayOutput values.
// You can construct a concrete instance of `AnalysisDataSetReferenceArrayInput` via:
//
//          AnalysisDataSetReferenceArray{ AnalysisDataSetReferenceArgs{...} }
type AnalysisDataSetReferenceArrayInput interface {
	pulumi.Input

	ToAnalysisDataSetReferenceArrayOutput() AnalysisDataSetReferenceArrayOutput
	ToAnalysisDataSetReferenceArrayOutputWithContext(context.Context) AnalysisDataSetReferenceArrayOutput
}

type AnalysisDataSetReferenceArray []AnalysisDataSetReferenceInput

func (AnalysisDataSetReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataSetReference)(nil)).Elem()
}

func (i AnalysisDataSetReferenceArray) ToAnalysisDataSetReferenceArrayOutput() AnalysisDataSetReferenceArrayOutput {
	return i.ToAnalysisDataSetReferenceArrayOutputWithContext(context.Background())
}

func (i AnalysisDataSetReferenceArray) ToAnalysisDataSetReferenceArrayOutputWithContext(ctx context.Context) AnalysisDataSetReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataSetReferenceArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datasetreference.html
type AnalysisDataSetReferenceOutput struct{ *pulumi.OutputState }

func (AnalysisDataSetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataSetReference)(nil)).Elem()
}

func (o AnalysisDataSetReferenceOutput) ToAnalysisDataSetReferenceOutput() AnalysisDataSetReferenceOutput {
	return o
}

func (o AnalysisDataSetReferenceOutput) ToAnalysisDataSetReferenceOutputWithContext(ctx context.Context) AnalysisDataSetReferenceOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datasetreference.html#cfn-quicksight-analysis-datasetreference-datasetarn
func (o AnalysisDataSetReferenceOutput) DataSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataSetReference) string { return v.DataSetArn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datasetreference.html#cfn-quicksight-analysis-datasetreference-datasetplaceholder
func (o AnalysisDataSetReferenceOutput) DataSetPlaceholder() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataSetReference) string { return v.DataSetPlaceholder }).(pulumi.StringOutput)
}

type AnalysisDataSetReferenceArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDataSetReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataSetReference)(nil)).Elem()
}

func (o AnalysisDataSetReferenceArrayOutput) ToAnalysisDataSetReferenceArrayOutput() AnalysisDataSetReferenceArrayOutput {
	return o
}

func (o AnalysisDataSetReferenceArrayOutput) ToAnalysisDataSetReferenceArrayOutputWithContext(ctx context.Context) AnalysisDataSetReferenceArrayOutput {
	return o
}

func (o AnalysisDataSetReferenceArrayOutput) Index(i pulumi.IntInput) AnalysisDataSetReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDataSetReference {
		return vs[0].([]AnalysisDataSetReference)[vs[1].(int)]
	}).(AnalysisDataSetReferenceOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datetimeparameter.html
type AnalysisDateTimeParameter struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datetimeparameter.html#cfn-quicksight-analysis-datetimeparameter-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datetimeparameter.html#cfn-quicksight-analysis-datetimeparameter-values
	Values []string `pulumi:"values"`
}

// AnalysisDateTimeParameterInput is an input type that accepts AnalysisDateTimeParameterArgs and AnalysisDateTimeParameterOutput values.
// You can construct a concrete instance of `AnalysisDateTimeParameterInput` via:
//
//          AnalysisDateTimeParameterArgs{...}
type AnalysisDateTimeParameterInput interface {
	pulumi.Input

	ToAnalysisDateTimeParameterOutput() AnalysisDateTimeParameterOutput
	ToAnalysisDateTimeParameterOutputWithContext(context.Context) AnalysisDateTimeParameterOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datetimeparameter.html
type AnalysisDateTimeParameterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datetimeparameter.html#cfn-quicksight-analysis-datetimeparameter-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datetimeparameter.html#cfn-quicksight-analysis-datetimeparameter-values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AnalysisDateTimeParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeParameter)(nil)).Elem()
}

func (i AnalysisDateTimeParameterArgs) ToAnalysisDateTimeParameterOutput() AnalysisDateTimeParameterOutput {
	return i.ToAnalysisDateTimeParameterOutputWithContext(context.Background())
}

func (i AnalysisDateTimeParameterArgs) ToAnalysisDateTimeParameterOutputWithContext(ctx context.Context) AnalysisDateTimeParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeParameterOutput)
}

// AnalysisDateTimeParameterArrayInput is an input type that accepts AnalysisDateTimeParameterArray and AnalysisDateTimeParameterArrayOutput values.
// You can construct a concrete instance of `AnalysisDateTimeParameterArrayInput` via:
//
//          AnalysisDateTimeParameterArray{ AnalysisDateTimeParameterArgs{...} }
type AnalysisDateTimeParameterArrayInput interface {
	pulumi.Input

	ToAnalysisDateTimeParameterArrayOutput() AnalysisDateTimeParameterArrayOutput
	ToAnalysisDateTimeParameterArrayOutputWithContext(context.Context) AnalysisDateTimeParameterArrayOutput
}

type AnalysisDateTimeParameterArray []AnalysisDateTimeParameterInput

func (AnalysisDateTimeParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDateTimeParameter)(nil)).Elem()
}

func (i AnalysisDateTimeParameterArray) ToAnalysisDateTimeParameterArrayOutput() AnalysisDateTimeParameterArrayOutput {
	return i.ToAnalysisDateTimeParameterArrayOutputWithContext(context.Background())
}

func (i AnalysisDateTimeParameterArray) ToAnalysisDateTimeParameterArrayOutputWithContext(ctx context.Context) AnalysisDateTimeParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datetimeparameter.html
type AnalysisDateTimeParameterOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeParameter)(nil)).Elem()
}

func (o AnalysisDateTimeParameterOutput) ToAnalysisDateTimeParameterOutput() AnalysisDateTimeParameterOutput {
	return o
}

func (o AnalysisDateTimeParameterOutput) ToAnalysisDateTimeParameterOutputWithContext(ctx context.Context) AnalysisDateTimeParameterOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datetimeparameter.html#cfn-quicksight-analysis-datetimeparameter-name
func (o AnalysisDateTimeParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDateTimeParameter) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-datetimeparameter.html#cfn-quicksight-analysis-datetimeparameter-values
func (o AnalysisDateTimeParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisDateTimeParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AnalysisDateTimeParameterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDateTimeParameter)(nil)).Elem()
}

func (o AnalysisDateTimeParameterArrayOutput) ToAnalysisDateTimeParameterArrayOutput() AnalysisDateTimeParameterArrayOutput {
	return o
}

func (o AnalysisDateTimeParameterArrayOutput) ToAnalysisDateTimeParameterArrayOutputWithContext(ctx context.Context) AnalysisDateTimeParameterArrayOutput {
	return o
}

func (o AnalysisDateTimeParameterArrayOutput) Index(i pulumi.IntInput) AnalysisDateTimeParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDateTimeParameter {
		return vs[0].([]AnalysisDateTimeParameter)[vs[1].(int)]
	}).(AnalysisDateTimeParameterOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-decimalparameter.html
type AnalysisDecimalParameter struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-decimalparameter.html#cfn-quicksight-analysis-decimalparameter-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-decimalparameter.html#cfn-quicksight-analysis-decimalparameter-values
	Values []float64 `pulumi:"values"`
}

// AnalysisDecimalParameterInput is an input type that accepts AnalysisDecimalParameterArgs and AnalysisDecimalParameterOutput values.
// You can construct a concrete instance of `AnalysisDecimalParameterInput` via:
//
//          AnalysisDecimalParameterArgs{...}
type AnalysisDecimalParameterInput interface {
	pulumi.Input

	ToAnalysisDecimalParameterOutput() AnalysisDecimalParameterOutput
	ToAnalysisDecimalParameterOutputWithContext(context.Context) AnalysisDecimalParameterOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-decimalparameter.html
type AnalysisDecimalParameterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-decimalparameter.html#cfn-quicksight-analysis-decimalparameter-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-decimalparameter.html#cfn-quicksight-analysis-decimalparameter-values
	Values pulumi.Float64ArrayInput `pulumi:"values"`
}

func (AnalysisDecimalParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalParameter)(nil)).Elem()
}

func (i AnalysisDecimalParameterArgs) ToAnalysisDecimalParameterOutput() AnalysisDecimalParameterOutput {
	return i.ToAnalysisDecimalParameterOutputWithContext(context.Background())
}

func (i AnalysisDecimalParameterArgs) ToAnalysisDecimalParameterOutputWithContext(ctx context.Context) AnalysisDecimalParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalParameterOutput)
}

// AnalysisDecimalParameterArrayInput is an input type that accepts AnalysisDecimalParameterArray and AnalysisDecimalParameterArrayOutput values.
// You can construct a concrete instance of `AnalysisDecimalParameterArrayInput` via:
//
//          AnalysisDecimalParameterArray{ AnalysisDecimalParameterArgs{...} }
type AnalysisDecimalParameterArrayInput interface {
	pulumi.Input

	ToAnalysisDecimalParameterArrayOutput() AnalysisDecimalParameterArrayOutput
	ToAnalysisDecimalParameterArrayOutputWithContext(context.Context) AnalysisDecimalParameterArrayOutput
}

type AnalysisDecimalParameterArray []AnalysisDecimalParameterInput

func (AnalysisDecimalParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDecimalParameter)(nil)).Elem()
}

func (i AnalysisDecimalParameterArray) ToAnalysisDecimalParameterArrayOutput() AnalysisDecimalParameterArrayOutput {
	return i.ToAnalysisDecimalParameterArrayOutputWithContext(context.Background())
}

func (i AnalysisDecimalParameterArray) ToAnalysisDecimalParameterArrayOutputWithContext(ctx context.Context) AnalysisDecimalParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-decimalparameter.html
type AnalysisDecimalParameterOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalParameter)(nil)).Elem()
}

func (o AnalysisDecimalParameterOutput) ToAnalysisDecimalParameterOutput() AnalysisDecimalParameterOutput {
	return o
}

func (o AnalysisDecimalParameterOutput) ToAnalysisDecimalParameterOutputWithContext(ctx context.Context) AnalysisDecimalParameterOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-decimalparameter.html#cfn-quicksight-analysis-decimalparameter-name
func (o AnalysisDecimalParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDecimalParameter) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-decimalparameter.html#cfn-quicksight-analysis-decimalparameter-values
func (o AnalysisDecimalParameterOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v AnalysisDecimalParameter) []float64 { return v.Values }).(pulumi.Float64ArrayOutput)
}

type AnalysisDecimalParameterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDecimalParameter)(nil)).Elem()
}

func (o AnalysisDecimalParameterArrayOutput) ToAnalysisDecimalParameterArrayOutput() AnalysisDecimalParameterArrayOutput {
	return o
}

func (o AnalysisDecimalParameterArrayOutput) ToAnalysisDecimalParameterArrayOutputWithContext(ctx context.Context) AnalysisDecimalParameterArrayOutput {
	return o
}

func (o AnalysisDecimalParameterArrayOutput) Index(i pulumi.IntInput) AnalysisDecimalParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDecimalParameter {
		return vs[0].([]AnalysisDecimalParameter)[vs[1].(int)]
	}).(AnalysisDecimalParameterOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-integerparameter.html
type AnalysisIntegerParameter struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-integerparameter.html#cfn-quicksight-analysis-integerparameter-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-integerparameter.html#cfn-quicksight-analysis-integerparameter-values
	Values []float64 `pulumi:"values"`
}

// AnalysisIntegerParameterInput is an input type that accepts AnalysisIntegerParameterArgs and AnalysisIntegerParameterOutput values.
// You can construct a concrete instance of `AnalysisIntegerParameterInput` via:
//
//          AnalysisIntegerParameterArgs{...}
type AnalysisIntegerParameterInput interface {
	pulumi.Input

	ToAnalysisIntegerParameterOutput() AnalysisIntegerParameterOutput
	ToAnalysisIntegerParameterOutputWithContext(context.Context) AnalysisIntegerParameterOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-integerparameter.html
type AnalysisIntegerParameterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-integerparameter.html#cfn-quicksight-analysis-integerparameter-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-integerparameter.html#cfn-quicksight-analysis-integerparameter-values
	Values pulumi.Float64ArrayInput `pulumi:"values"`
}

func (AnalysisIntegerParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIntegerParameter)(nil)).Elem()
}

func (i AnalysisIntegerParameterArgs) ToAnalysisIntegerParameterOutput() AnalysisIntegerParameterOutput {
	return i.ToAnalysisIntegerParameterOutputWithContext(context.Background())
}

func (i AnalysisIntegerParameterArgs) ToAnalysisIntegerParameterOutputWithContext(ctx context.Context) AnalysisIntegerParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerParameterOutput)
}

// AnalysisIntegerParameterArrayInput is an input type that accepts AnalysisIntegerParameterArray and AnalysisIntegerParameterArrayOutput values.
// You can construct a concrete instance of `AnalysisIntegerParameterArrayInput` via:
//
//          AnalysisIntegerParameterArray{ AnalysisIntegerParameterArgs{...} }
type AnalysisIntegerParameterArrayInput interface {
	pulumi.Input

	ToAnalysisIntegerParameterArrayOutput() AnalysisIntegerParameterArrayOutput
	ToAnalysisIntegerParameterArrayOutputWithContext(context.Context) AnalysisIntegerParameterArrayOutput
}

type AnalysisIntegerParameterArray []AnalysisIntegerParameterInput

func (AnalysisIntegerParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisIntegerParameter)(nil)).Elem()
}

func (i AnalysisIntegerParameterArray) ToAnalysisIntegerParameterArrayOutput() AnalysisIntegerParameterArrayOutput {
	return i.ToAnalysisIntegerParameterArrayOutputWithContext(context.Background())
}

func (i AnalysisIntegerParameterArray) ToAnalysisIntegerParameterArrayOutputWithContext(ctx context.Context) AnalysisIntegerParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-integerparameter.html
type AnalysisIntegerParameterOutput struct{ *pulumi.OutputState }

func (AnalysisIntegerParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIntegerParameter)(nil)).Elem()
}

func (o AnalysisIntegerParameterOutput) ToAnalysisIntegerParameterOutput() AnalysisIntegerParameterOutput {
	return o
}

func (o AnalysisIntegerParameterOutput) ToAnalysisIntegerParameterOutputWithContext(ctx context.Context) AnalysisIntegerParameterOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-integerparameter.html#cfn-quicksight-analysis-integerparameter-name
func (o AnalysisIntegerParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisIntegerParameter) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-integerparameter.html#cfn-quicksight-analysis-integerparameter-values
func (o AnalysisIntegerParameterOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v AnalysisIntegerParameter) []float64 { return v.Values }).(pulumi.Float64ArrayOutput)
}

type AnalysisIntegerParameterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisIntegerParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisIntegerParameter)(nil)).Elem()
}

func (o AnalysisIntegerParameterArrayOutput) ToAnalysisIntegerParameterArrayOutput() AnalysisIntegerParameterArrayOutput {
	return o
}

func (o AnalysisIntegerParameterArrayOutput) ToAnalysisIntegerParameterArrayOutputWithContext(ctx context.Context) AnalysisIntegerParameterArrayOutput {
	return o
}

func (o AnalysisIntegerParameterArrayOutput) Index(i pulumi.IntInput) AnalysisIntegerParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisIntegerParameter {
		return vs[0].([]AnalysisIntegerParameter)[vs[1].(int)]
	}).(AnalysisIntegerParameterOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html
type AnalysisParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-datetimeparameters
	DateTimeParameters []AnalysisDateTimeParameter `pulumi:"dateTimeParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-decimalparameters
	DecimalParameters []AnalysisDecimalParameter `pulumi:"decimalParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-integerparameters
	IntegerParameters []AnalysisIntegerParameter `pulumi:"integerParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-stringparameters
	StringParameters []AnalysisStringParameter `pulumi:"stringParameters"`
}

// AnalysisParametersInput is an input type that accepts AnalysisParametersArgs and AnalysisParametersOutput values.
// You can construct a concrete instance of `AnalysisParametersInput` via:
//
//          AnalysisParametersArgs{...}
type AnalysisParametersInput interface {
	pulumi.Input

	ToAnalysisParametersOutput() AnalysisParametersOutput
	ToAnalysisParametersOutputWithContext(context.Context) AnalysisParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html
type AnalysisParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-datetimeparameters
	DateTimeParameters AnalysisDateTimeParameterArrayInput `pulumi:"dateTimeParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-decimalparameters
	DecimalParameters AnalysisDecimalParameterArrayInput `pulumi:"decimalParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-integerparameters
	IntegerParameters AnalysisIntegerParameterArrayInput `pulumi:"integerParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-stringparameters
	StringParameters AnalysisStringParameterArrayInput `pulumi:"stringParameters"`
}

func (AnalysisParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameters)(nil)).Elem()
}

func (i AnalysisParametersArgs) ToAnalysisParametersOutput() AnalysisParametersOutput {
	return i.ToAnalysisParametersOutputWithContext(context.Background())
}

func (i AnalysisParametersArgs) ToAnalysisParametersOutputWithContext(ctx context.Context) AnalysisParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParametersOutput)
}

func (i AnalysisParametersArgs) ToAnalysisParametersPtrOutput() AnalysisParametersPtrOutput {
	return i.ToAnalysisParametersPtrOutputWithContext(context.Background())
}

func (i AnalysisParametersArgs) ToAnalysisParametersPtrOutputWithContext(ctx context.Context) AnalysisParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParametersOutput).ToAnalysisParametersPtrOutputWithContext(ctx)
}

// AnalysisParametersPtrInput is an input type that accepts AnalysisParametersArgs, AnalysisParametersPtr and AnalysisParametersPtrOutput values.
// You can construct a concrete instance of `AnalysisParametersPtrInput` via:
//
//          AnalysisParametersArgs{...}
//
//  or:
//
//          nil
type AnalysisParametersPtrInput interface {
	pulumi.Input

	ToAnalysisParametersPtrOutput() AnalysisParametersPtrOutput
	ToAnalysisParametersPtrOutputWithContext(context.Context) AnalysisParametersPtrOutput
}

type analysisParametersPtrType AnalysisParametersArgs

func AnalysisParametersPtr(v *AnalysisParametersArgs) AnalysisParametersPtrInput {
	return (*analysisParametersPtrType)(v)
}

func (*analysisParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameters)(nil)).Elem()
}

func (i *analysisParametersPtrType) ToAnalysisParametersPtrOutput() AnalysisParametersPtrOutput {
	return i.ToAnalysisParametersPtrOutputWithContext(context.Background())
}

func (i *analysisParametersPtrType) ToAnalysisParametersPtrOutputWithContext(ctx context.Context) AnalysisParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html
type AnalysisParametersOutput struct{ *pulumi.OutputState }

func (AnalysisParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameters)(nil)).Elem()
}

func (o AnalysisParametersOutput) ToAnalysisParametersOutput() AnalysisParametersOutput {
	return o
}

func (o AnalysisParametersOutput) ToAnalysisParametersOutputWithContext(ctx context.Context) AnalysisParametersOutput {
	return o
}

func (o AnalysisParametersOutput) ToAnalysisParametersPtrOutput() AnalysisParametersPtrOutput {
	return o.ToAnalysisParametersPtrOutputWithContext(context.Background())
}

func (o AnalysisParametersOutput) ToAnalysisParametersPtrOutputWithContext(ctx context.Context) AnalysisParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisParameters) *AnalysisParameters {
		return &v
	}).(AnalysisParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-datetimeparameters
func (o AnalysisParametersOutput) DateTimeParameters() AnalysisDateTimeParameterArrayOutput {
	return o.ApplyT(func(v AnalysisParameters) []AnalysisDateTimeParameter { return v.DateTimeParameters }).(AnalysisDateTimeParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-decimalparameters
func (o AnalysisParametersOutput) DecimalParameters() AnalysisDecimalParameterArrayOutput {
	return o.ApplyT(func(v AnalysisParameters) []AnalysisDecimalParameter { return v.DecimalParameters }).(AnalysisDecimalParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-integerparameters
func (o AnalysisParametersOutput) IntegerParameters() AnalysisIntegerParameterArrayOutput {
	return o.ApplyT(func(v AnalysisParameters) []AnalysisIntegerParameter { return v.IntegerParameters }).(AnalysisIntegerParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-stringparameters
func (o AnalysisParametersOutput) StringParameters() AnalysisStringParameterArrayOutput {
	return o.ApplyT(func(v AnalysisParameters) []AnalysisStringParameter { return v.StringParameters }).(AnalysisStringParameterArrayOutput)
}

type AnalysisParametersPtrOutput struct{ *pulumi.OutputState }

func (AnalysisParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameters)(nil)).Elem()
}

func (o AnalysisParametersPtrOutput) ToAnalysisParametersPtrOutput() AnalysisParametersPtrOutput {
	return o
}

func (o AnalysisParametersPtrOutput) ToAnalysisParametersPtrOutputWithContext(ctx context.Context) AnalysisParametersPtrOutput {
	return o
}

func (o AnalysisParametersPtrOutput) Elem() AnalysisParametersOutput {
	return o.ApplyT(func(v *AnalysisParameters) AnalysisParameters {
		if v != nil {
			return *v
		}
		var ret AnalysisParameters
		return ret
	}).(AnalysisParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-datetimeparameters
func (o AnalysisParametersPtrOutput) DateTimeParameters() AnalysisDateTimeParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisParameters) []AnalysisDateTimeParameter {
		if v == nil {
			return nil
		}
		return v.DateTimeParameters
	}).(AnalysisDateTimeParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-decimalparameters
func (o AnalysisParametersPtrOutput) DecimalParameters() AnalysisDecimalParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisParameters) []AnalysisDecimalParameter {
		if v == nil {
			return nil
		}
		return v.DecimalParameters
	}).(AnalysisDecimalParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-integerparameters
func (o AnalysisParametersPtrOutput) IntegerParameters() AnalysisIntegerParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisParameters) []AnalysisIntegerParameter {
		if v == nil {
			return nil
		}
		return v.IntegerParameters
	}).(AnalysisIntegerParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-parameters.html#cfn-quicksight-analysis-parameters-stringparameters
func (o AnalysisParametersPtrOutput) StringParameters() AnalysisStringParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisParameters) []AnalysisStringParameter {
		if v == nil {
			return nil
		}
		return v.StringParameters
	}).(AnalysisStringParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-resourcepermission.html
type AnalysisResourcePermission struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-resourcepermission.html#cfn-quicksight-analysis-resourcepermission-actions
	Actions []string `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-resourcepermission.html#cfn-quicksight-analysis-resourcepermission-principal
	Principal string `pulumi:"principal"`
}

// AnalysisResourcePermissionInput is an input type that accepts AnalysisResourcePermissionArgs and AnalysisResourcePermissionOutput values.
// You can construct a concrete instance of `AnalysisResourcePermissionInput` via:
//
//          AnalysisResourcePermissionArgs{...}
type AnalysisResourcePermissionInput interface {
	pulumi.Input

	ToAnalysisResourcePermissionOutput() AnalysisResourcePermissionOutput
	ToAnalysisResourcePermissionOutputWithContext(context.Context) AnalysisResourcePermissionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-resourcepermission.html
type AnalysisResourcePermissionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-resourcepermission.html#cfn-quicksight-analysis-resourcepermission-actions
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-resourcepermission.html#cfn-quicksight-analysis-resourcepermission-principal
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (AnalysisResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResourcePermission)(nil)).Elem()
}

func (i AnalysisResourcePermissionArgs) ToAnalysisResourcePermissionOutput() AnalysisResourcePermissionOutput {
	return i.ToAnalysisResourcePermissionOutputWithContext(context.Background())
}

func (i AnalysisResourcePermissionArgs) ToAnalysisResourcePermissionOutputWithContext(ctx context.Context) AnalysisResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisResourcePermissionOutput)
}

// AnalysisResourcePermissionArrayInput is an input type that accepts AnalysisResourcePermissionArray and AnalysisResourcePermissionArrayOutput values.
// You can construct a concrete instance of `AnalysisResourcePermissionArrayInput` via:
//
//          AnalysisResourcePermissionArray{ AnalysisResourcePermissionArgs{...} }
type AnalysisResourcePermissionArrayInput interface {
	pulumi.Input

	ToAnalysisResourcePermissionArrayOutput() AnalysisResourcePermissionArrayOutput
	ToAnalysisResourcePermissionArrayOutputWithContext(context.Context) AnalysisResourcePermissionArrayOutput
}

type AnalysisResourcePermissionArray []AnalysisResourcePermissionInput

func (AnalysisResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisResourcePermission)(nil)).Elem()
}

func (i AnalysisResourcePermissionArray) ToAnalysisResourcePermissionArrayOutput() AnalysisResourcePermissionArrayOutput {
	return i.ToAnalysisResourcePermissionArrayOutputWithContext(context.Background())
}

func (i AnalysisResourcePermissionArray) ToAnalysisResourcePermissionArrayOutputWithContext(ctx context.Context) AnalysisResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisResourcePermissionArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-resourcepermission.html
type AnalysisResourcePermissionOutput struct{ *pulumi.OutputState }

func (AnalysisResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResourcePermission)(nil)).Elem()
}

func (o AnalysisResourcePermissionOutput) ToAnalysisResourcePermissionOutput() AnalysisResourcePermissionOutput {
	return o
}

func (o AnalysisResourcePermissionOutput) ToAnalysisResourcePermissionOutputWithContext(ctx context.Context) AnalysisResourcePermissionOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-resourcepermission.html#cfn-quicksight-analysis-resourcepermission-actions
func (o AnalysisResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-resourcepermission.html#cfn-quicksight-analysis-resourcepermission-principal
func (o AnalysisResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

type AnalysisResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisResourcePermission)(nil)).Elem()
}

func (o AnalysisResourcePermissionArrayOutput) ToAnalysisResourcePermissionArrayOutput() AnalysisResourcePermissionArrayOutput {
	return o
}

func (o AnalysisResourcePermissionArrayOutput) ToAnalysisResourcePermissionArrayOutputWithContext(ctx context.Context) AnalysisResourcePermissionArrayOutput {
	return o
}

func (o AnalysisResourcePermissionArrayOutput) Index(i pulumi.IntInput) AnalysisResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisResourcePermission {
		return vs[0].([]AnalysisResourcePermission)[vs[1].(int)]
	}).(AnalysisResourcePermissionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-sheet.html
type AnalysisSheet struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-sheet.html#cfn-quicksight-analysis-sheet-name
	Name *string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-sheet.html#cfn-quicksight-analysis-sheet-sheetid
	SheetId *string `pulumi:"sheetId"`
}

// AnalysisSheetInput is an input type that accepts AnalysisSheetArgs and AnalysisSheetOutput values.
// You can construct a concrete instance of `AnalysisSheetInput` via:
//
//          AnalysisSheetArgs{...}
type AnalysisSheetInput interface {
	pulumi.Input

	ToAnalysisSheetOutput() AnalysisSheetOutput
	ToAnalysisSheetOutputWithContext(context.Context) AnalysisSheetOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-sheet.html
type AnalysisSheetArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-sheet.html#cfn-quicksight-analysis-sheet-name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-sheet.html#cfn-quicksight-analysis-sheet-sheetid
	SheetId pulumi.StringPtrInput `pulumi:"sheetId"`
}

func (AnalysisSheetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheet)(nil)).Elem()
}

func (i AnalysisSheetArgs) ToAnalysisSheetOutput() AnalysisSheetOutput {
	return i.ToAnalysisSheetOutputWithContext(context.Background())
}

func (i AnalysisSheetArgs) ToAnalysisSheetOutputWithContext(ctx context.Context) AnalysisSheetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetOutput)
}

// AnalysisSheetArrayInput is an input type that accepts AnalysisSheetArray and AnalysisSheetArrayOutput values.
// You can construct a concrete instance of `AnalysisSheetArrayInput` via:
//
//          AnalysisSheetArray{ AnalysisSheetArgs{...} }
type AnalysisSheetArrayInput interface {
	pulumi.Input

	ToAnalysisSheetArrayOutput() AnalysisSheetArrayOutput
	ToAnalysisSheetArrayOutputWithContext(context.Context) AnalysisSheetArrayOutput
}

type AnalysisSheetArray []AnalysisSheetInput

func (AnalysisSheetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheet)(nil)).Elem()
}

func (i AnalysisSheetArray) ToAnalysisSheetArrayOutput() AnalysisSheetArrayOutput {
	return i.ToAnalysisSheetArrayOutputWithContext(context.Background())
}

func (i AnalysisSheetArray) ToAnalysisSheetArrayOutputWithContext(ctx context.Context) AnalysisSheetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-sheet.html
type AnalysisSheetOutput struct{ *pulumi.OutputState }

func (AnalysisSheetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheet)(nil)).Elem()
}

func (o AnalysisSheetOutput) ToAnalysisSheetOutput() AnalysisSheetOutput {
	return o
}

func (o AnalysisSheetOutput) ToAnalysisSheetOutputWithContext(ctx context.Context) AnalysisSheetOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-sheet.html#cfn-quicksight-analysis-sheet-name
func (o AnalysisSheetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSheet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-sheet.html#cfn-quicksight-analysis-sheet-sheetid
func (o AnalysisSheetOutput) SheetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSheet) *string { return v.SheetId }).(pulumi.StringPtrOutput)
}

type AnalysisSheetArrayOutput struct{ *pulumi.OutputState }

func (AnalysisSheetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheet)(nil)).Elem()
}

func (o AnalysisSheetArrayOutput) ToAnalysisSheetArrayOutput() AnalysisSheetArrayOutput {
	return o
}

func (o AnalysisSheetArrayOutput) ToAnalysisSheetArrayOutputWithContext(ctx context.Context) AnalysisSheetArrayOutput {
	return o
}

func (o AnalysisSheetArrayOutput) Index(i pulumi.IntInput) AnalysisSheetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisSheet {
		return vs[0].([]AnalysisSheet)[vs[1].(int)]
	}).(AnalysisSheetOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-stringparameter.html
type AnalysisStringParameter struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-stringparameter.html#cfn-quicksight-analysis-stringparameter-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-stringparameter.html#cfn-quicksight-analysis-stringparameter-values
	Values []string `pulumi:"values"`
}

// AnalysisStringParameterInput is an input type that accepts AnalysisStringParameterArgs and AnalysisStringParameterOutput values.
// You can construct a concrete instance of `AnalysisStringParameterInput` via:
//
//          AnalysisStringParameterArgs{...}
type AnalysisStringParameterInput interface {
	pulumi.Input

	ToAnalysisStringParameterOutput() AnalysisStringParameterOutput
	ToAnalysisStringParameterOutputWithContext(context.Context) AnalysisStringParameterOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-stringparameter.html
type AnalysisStringParameterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-stringparameter.html#cfn-quicksight-analysis-stringparameter-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-stringparameter.html#cfn-quicksight-analysis-stringparameter-values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AnalysisStringParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringParameter)(nil)).Elem()
}

func (i AnalysisStringParameterArgs) ToAnalysisStringParameterOutput() AnalysisStringParameterOutput {
	return i.ToAnalysisStringParameterOutputWithContext(context.Background())
}

func (i AnalysisStringParameterArgs) ToAnalysisStringParameterOutputWithContext(ctx context.Context) AnalysisStringParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringParameterOutput)
}

// AnalysisStringParameterArrayInput is an input type that accepts AnalysisStringParameterArray and AnalysisStringParameterArrayOutput values.
// You can construct a concrete instance of `AnalysisStringParameterArrayInput` via:
//
//          AnalysisStringParameterArray{ AnalysisStringParameterArgs{...} }
type AnalysisStringParameterArrayInput interface {
	pulumi.Input

	ToAnalysisStringParameterArrayOutput() AnalysisStringParameterArrayOutput
	ToAnalysisStringParameterArrayOutputWithContext(context.Context) AnalysisStringParameterArrayOutput
}

type AnalysisStringParameterArray []AnalysisStringParameterInput

func (AnalysisStringParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisStringParameter)(nil)).Elem()
}

func (i AnalysisStringParameterArray) ToAnalysisStringParameterArrayOutput() AnalysisStringParameterArrayOutput {
	return i.ToAnalysisStringParameterArrayOutputWithContext(context.Background())
}

func (i AnalysisStringParameterArray) ToAnalysisStringParameterArrayOutputWithContext(ctx context.Context) AnalysisStringParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-stringparameter.html
type AnalysisStringParameterOutput struct{ *pulumi.OutputState }

func (AnalysisStringParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringParameter)(nil)).Elem()
}

func (o AnalysisStringParameterOutput) ToAnalysisStringParameterOutput() AnalysisStringParameterOutput {
	return o
}

func (o AnalysisStringParameterOutput) ToAnalysisStringParameterOutputWithContext(ctx context.Context) AnalysisStringParameterOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-stringparameter.html#cfn-quicksight-analysis-stringparameter-name
func (o AnalysisStringParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisStringParameter) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-analysis-stringparameter.html#cfn-quicksight-analysis-stringparameter-values
func (o AnalysisStringParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisStringParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AnalysisStringParameterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisStringParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisStringParameter)(nil)).Elem()
}

func (o AnalysisStringParameterArrayOutput) ToAnalysisStringParameterArrayOutput() AnalysisStringParameterArrayOutput {
	return o
}

func (o AnalysisStringParameterArrayOutput) ToAnalysisStringParameterArrayOutputWithContext(ctx context.Context) AnalysisStringParameterArrayOutput {
	return o
}

func (o AnalysisStringParameterArrayOutput) Index(i pulumi.IntInput) AnalysisStringParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisStringParameter {
		return vs[0].([]AnalysisStringParameter)[vs[1].(int)]
	}).(AnalysisStringParameterOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-adhocfilteringoption.html
type DashboardAdHocFilteringOption struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-adhocfilteringoption.html#cfn-quicksight-dashboard-adhocfilteringoption-availabilitystatus
	AvailabilityStatus *string `pulumi:"availabilityStatus"`
}

// DashboardAdHocFilteringOptionInput is an input type that accepts DashboardAdHocFilteringOptionArgs and DashboardAdHocFilteringOptionOutput values.
// You can construct a concrete instance of `DashboardAdHocFilteringOptionInput` via:
//
//          DashboardAdHocFilteringOptionArgs{...}
type DashboardAdHocFilteringOptionInput interface {
	pulumi.Input

	ToDashboardAdHocFilteringOptionOutput() DashboardAdHocFilteringOptionOutput
	ToDashboardAdHocFilteringOptionOutputWithContext(context.Context) DashboardAdHocFilteringOptionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-adhocfilteringoption.html
type DashboardAdHocFilteringOptionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-adhocfilteringoption.html#cfn-quicksight-dashboard-adhocfilteringoption-availabilitystatus
	AvailabilityStatus pulumi.StringPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardAdHocFilteringOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAdHocFilteringOption)(nil)).Elem()
}

func (i DashboardAdHocFilteringOptionArgs) ToDashboardAdHocFilteringOptionOutput() DashboardAdHocFilteringOptionOutput {
	return i.ToDashboardAdHocFilteringOptionOutputWithContext(context.Background())
}

func (i DashboardAdHocFilteringOptionArgs) ToDashboardAdHocFilteringOptionOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAdHocFilteringOptionOutput)
}

func (i DashboardAdHocFilteringOptionArgs) ToDashboardAdHocFilteringOptionPtrOutput() DashboardAdHocFilteringOptionPtrOutput {
	return i.ToDashboardAdHocFilteringOptionPtrOutputWithContext(context.Background())
}

func (i DashboardAdHocFilteringOptionArgs) ToDashboardAdHocFilteringOptionPtrOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAdHocFilteringOptionOutput).ToDashboardAdHocFilteringOptionPtrOutputWithContext(ctx)
}

// DashboardAdHocFilteringOptionPtrInput is an input type that accepts DashboardAdHocFilteringOptionArgs, DashboardAdHocFilteringOptionPtr and DashboardAdHocFilteringOptionPtrOutput values.
// You can construct a concrete instance of `DashboardAdHocFilteringOptionPtrInput` via:
//
//          DashboardAdHocFilteringOptionArgs{...}
//
//  or:
//
//          nil
type DashboardAdHocFilteringOptionPtrInput interface {
	pulumi.Input

	ToDashboardAdHocFilteringOptionPtrOutput() DashboardAdHocFilteringOptionPtrOutput
	ToDashboardAdHocFilteringOptionPtrOutputWithContext(context.Context) DashboardAdHocFilteringOptionPtrOutput
}

type dashboardAdHocFilteringOptionPtrType DashboardAdHocFilteringOptionArgs

func DashboardAdHocFilteringOptionPtr(v *DashboardAdHocFilteringOptionArgs) DashboardAdHocFilteringOptionPtrInput {
	return (*dashboardAdHocFilteringOptionPtrType)(v)
}

func (*dashboardAdHocFilteringOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAdHocFilteringOption)(nil)).Elem()
}

func (i *dashboardAdHocFilteringOptionPtrType) ToDashboardAdHocFilteringOptionPtrOutput() DashboardAdHocFilteringOptionPtrOutput {
	return i.ToDashboardAdHocFilteringOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardAdHocFilteringOptionPtrType) ToDashboardAdHocFilteringOptionPtrOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAdHocFilteringOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-adhocfilteringoption.html
type DashboardAdHocFilteringOptionOutput struct{ *pulumi.OutputState }

func (DashboardAdHocFilteringOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAdHocFilteringOption)(nil)).Elem()
}

func (o DashboardAdHocFilteringOptionOutput) ToDashboardAdHocFilteringOptionOutput() DashboardAdHocFilteringOptionOutput {
	return o
}

func (o DashboardAdHocFilteringOptionOutput) ToDashboardAdHocFilteringOptionOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionOutput {
	return o
}

func (o DashboardAdHocFilteringOptionOutput) ToDashboardAdHocFilteringOptionPtrOutput() DashboardAdHocFilteringOptionPtrOutput {
	return o.ToDashboardAdHocFilteringOptionPtrOutputWithContext(context.Background())
}

func (o DashboardAdHocFilteringOptionOutput) ToDashboardAdHocFilteringOptionPtrOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAdHocFilteringOption) *DashboardAdHocFilteringOption {
		return &v
	}).(DashboardAdHocFilteringOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-adhocfilteringoption.html#cfn-quicksight-dashboard-adhocfilteringoption-availabilitystatus
func (o DashboardAdHocFilteringOptionOutput) AvailabilityStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardAdHocFilteringOption) *string { return v.AvailabilityStatus }).(pulumi.StringPtrOutput)
}

type DashboardAdHocFilteringOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardAdHocFilteringOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAdHocFilteringOption)(nil)).Elem()
}

func (o DashboardAdHocFilteringOptionPtrOutput) ToDashboardAdHocFilteringOptionPtrOutput() DashboardAdHocFilteringOptionPtrOutput {
	return o
}

func (o DashboardAdHocFilteringOptionPtrOutput) ToDashboardAdHocFilteringOptionPtrOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionPtrOutput {
	return o
}

func (o DashboardAdHocFilteringOptionPtrOutput) Elem() DashboardAdHocFilteringOptionOutput {
	return o.ApplyT(func(v *DashboardAdHocFilteringOption) DashboardAdHocFilteringOption {
		if v != nil {
			return *v
		}
		var ret DashboardAdHocFilteringOption
		return ret
	}).(DashboardAdHocFilteringOptionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-adhocfilteringoption.html#cfn-quicksight-dashboard-adhocfilteringoption-availabilitystatus
func (o DashboardAdHocFilteringOptionPtrOutput) AvailabilityStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardAdHocFilteringOption) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html
type DashboardDashboardPublishOptions struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-adhocfilteringoption
	AdHocFilteringOption *DashboardAdHocFilteringOption `pulumi:"adHocFilteringOption"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-exporttocsvoption
	ExportToCSVOption *DashboardExportToCSVOption `pulumi:"exportToCSVOption"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-sheetcontrolsoption
	SheetControlsOption *DashboardSheetControlsOption `pulumi:"sheetControlsOption"`
}

// DashboardDashboardPublishOptionsInput is an input type that accepts DashboardDashboardPublishOptionsArgs and DashboardDashboardPublishOptionsOutput values.
// You can construct a concrete instance of `DashboardDashboardPublishOptionsInput` via:
//
//          DashboardDashboardPublishOptionsArgs{...}
type DashboardDashboardPublishOptionsInput interface {
	pulumi.Input

	ToDashboardDashboardPublishOptionsOutput() DashboardDashboardPublishOptionsOutput
	ToDashboardDashboardPublishOptionsOutputWithContext(context.Context) DashboardDashboardPublishOptionsOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html
type DashboardDashboardPublishOptionsArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-adhocfilteringoption
	AdHocFilteringOption DashboardAdHocFilteringOptionPtrInput `pulumi:"adHocFilteringOption"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-exporttocsvoption
	ExportToCSVOption DashboardExportToCSVOptionPtrInput `pulumi:"exportToCSVOption"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-sheetcontrolsoption
	SheetControlsOption DashboardSheetControlsOptionPtrInput `pulumi:"sheetControlsOption"`
}

func (DashboardDashboardPublishOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardPublishOptions)(nil)).Elem()
}

func (i DashboardDashboardPublishOptionsArgs) ToDashboardDashboardPublishOptionsOutput() DashboardDashboardPublishOptionsOutput {
	return i.ToDashboardDashboardPublishOptionsOutputWithContext(context.Background())
}

func (i DashboardDashboardPublishOptionsArgs) ToDashboardDashboardPublishOptionsOutputWithContext(ctx context.Context) DashboardDashboardPublishOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDashboardPublishOptionsOutput)
}

func (i DashboardDashboardPublishOptionsArgs) ToDashboardDashboardPublishOptionsPtrOutput() DashboardDashboardPublishOptionsPtrOutput {
	return i.ToDashboardDashboardPublishOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardDashboardPublishOptionsArgs) ToDashboardDashboardPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardDashboardPublishOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDashboardPublishOptionsOutput).ToDashboardDashboardPublishOptionsPtrOutputWithContext(ctx)
}

// DashboardDashboardPublishOptionsPtrInput is an input type that accepts DashboardDashboardPublishOptionsArgs, DashboardDashboardPublishOptionsPtr and DashboardDashboardPublishOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardDashboardPublishOptionsPtrInput` via:
//
//          DashboardDashboardPublishOptionsArgs{...}
//
//  or:
//
//          nil
type DashboardDashboardPublishOptionsPtrInput interface {
	pulumi.Input

	ToDashboardDashboardPublishOptionsPtrOutput() DashboardDashboardPublishOptionsPtrOutput
	ToDashboardDashboardPublishOptionsPtrOutputWithContext(context.Context) DashboardDashboardPublishOptionsPtrOutput
}

type dashboardDashboardPublishOptionsPtrType DashboardDashboardPublishOptionsArgs

func DashboardDashboardPublishOptionsPtr(v *DashboardDashboardPublishOptionsArgs) DashboardDashboardPublishOptionsPtrInput {
	return (*dashboardDashboardPublishOptionsPtrType)(v)
}

func (*dashboardDashboardPublishOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDashboardPublishOptions)(nil)).Elem()
}

func (i *dashboardDashboardPublishOptionsPtrType) ToDashboardDashboardPublishOptionsPtrOutput() DashboardDashboardPublishOptionsPtrOutput {
	return i.ToDashboardDashboardPublishOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardDashboardPublishOptionsPtrType) ToDashboardDashboardPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardDashboardPublishOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDashboardPublishOptionsPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html
type DashboardDashboardPublishOptionsOutput struct{ *pulumi.OutputState }

func (DashboardDashboardPublishOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardPublishOptions)(nil)).Elem()
}

func (o DashboardDashboardPublishOptionsOutput) ToDashboardDashboardPublishOptionsOutput() DashboardDashboardPublishOptionsOutput {
	return o
}

func (o DashboardDashboardPublishOptionsOutput) ToDashboardDashboardPublishOptionsOutputWithContext(ctx context.Context) DashboardDashboardPublishOptionsOutput {
	return o
}

func (o DashboardDashboardPublishOptionsOutput) ToDashboardDashboardPublishOptionsPtrOutput() DashboardDashboardPublishOptionsPtrOutput {
	return o.ToDashboardDashboardPublishOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardDashboardPublishOptionsOutput) ToDashboardDashboardPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardDashboardPublishOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDashboardPublishOptions) *DashboardDashboardPublishOptions {
		return &v
	}).(DashboardDashboardPublishOptionsPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-adhocfilteringoption
func (o DashboardDashboardPublishOptionsOutput) AdHocFilteringOption() DashboardAdHocFilteringOptionPtrOutput {
	return o.ApplyT(func(v DashboardDashboardPublishOptions) *DashboardAdHocFilteringOption { return v.AdHocFilteringOption }).(DashboardAdHocFilteringOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-exporttocsvoption
func (o DashboardDashboardPublishOptionsOutput) ExportToCSVOption() DashboardExportToCSVOptionPtrOutput {
	return o.ApplyT(func(v DashboardDashboardPublishOptions) *DashboardExportToCSVOption { return v.ExportToCSVOption }).(DashboardExportToCSVOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-sheetcontrolsoption
func (o DashboardDashboardPublishOptionsOutput) SheetControlsOption() DashboardSheetControlsOptionPtrOutput {
	return o.ApplyT(func(v DashboardDashboardPublishOptions) *DashboardSheetControlsOption { return v.SheetControlsOption }).(DashboardSheetControlsOptionPtrOutput)
}

type DashboardDashboardPublishOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardDashboardPublishOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDashboardPublishOptions)(nil)).Elem()
}

func (o DashboardDashboardPublishOptionsPtrOutput) ToDashboardDashboardPublishOptionsPtrOutput() DashboardDashboardPublishOptionsPtrOutput {
	return o
}

func (o DashboardDashboardPublishOptionsPtrOutput) ToDashboardDashboardPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardDashboardPublishOptionsPtrOutput {
	return o
}

func (o DashboardDashboardPublishOptionsPtrOutput) Elem() DashboardDashboardPublishOptionsOutput {
	return o.ApplyT(func(v *DashboardDashboardPublishOptions) DashboardDashboardPublishOptions {
		if v != nil {
			return *v
		}
		var ret DashboardDashboardPublishOptions
		return ret
	}).(DashboardDashboardPublishOptionsOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-adhocfilteringoption
func (o DashboardDashboardPublishOptionsPtrOutput) AdHocFilteringOption() DashboardAdHocFilteringOptionPtrOutput {
	return o.ApplyT(func(v *DashboardDashboardPublishOptions) *DashboardAdHocFilteringOption {
		if v == nil {
			return nil
		}
		return v.AdHocFilteringOption
	}).(DashboardAdHocFilteringOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-exporttocsvoption
func (o DashboardDashboardPublishOptionsPtrOutput) ExportToCSVOption() DashboardExportToCSVOptionPtrOutput {
	return o.ApplyT(func(v *DashboardDashboardPublishOptions) *DashboardExportToCSVOption {
		if v == nil {
			return nil
		}
		return v.ExportToCSVOption
	}).(DashboardExportToCSVOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardpublishoptions.html#cfn-quicksight-dashboard-dashboardpublishoptions-sheetcontrolsoption
func (o DashboardDashboardPublishOptionsPtrOutput) SheetControlsOption() DashboardSheetControlsOptionPtrOutput {
	return o.ApplyT(func(v *DashboardDashboardPublishOptions) *DashboardSheetControlsOption {
		if v == nil {
			return nil
		}
		return v.SheetControlsOption
	}).(DashboardSheetControlsOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourceentity.html
type DashboardDashboardSourceEntity struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourceentity.html#cfn-quicksight-dashboard-dashboardsourceentity-sourcetemplate
	SourceTemplate *DashboardDashboardSourceTemplate `pulumi:"sourceTemplate"`
}

// DashboardDashboardSourceEntityInput is an input type that accepts DashboardDashboardSourceEntityArgs and DashboardDashboardSourceEntityOutput values.
// You can construct a concrete instance of `DashboardDashboardSourceEntityInput` via:
//
//          DashboardDashboardSourceEntityArgs{...}
type DashboardDashboardSourceEntityInput interface {
	pulumi.Input

	ToDashboardDashboardSourceEntityOutput() DashboardDashboardSourceEntityOutput
	ToDashboardDashboardSourceEntityOutputWithContext(context.Context) DashboardDashboardSourceEntityOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourceentity.html
type DashboardDashboardSourceEntityArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourceentity.html#cfn-quicksight-dashboard-dashboardsourceentity-sourcetemplate
	SourceTemplate DashboardDashboardSourceTemplatePtrInput `pulumi:"sourceTemplate"`
}

func (DashboardDashboardSourceEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardSourceEntity)(nil)).Elem()
}

func (i DashboardDashboardSourceEntityArgs) ToDashboardDashboardSourceEntityOutput() DashboardDashboardSourceEntityOutput {
	return i.ToDashboardDashboardSourceEntityOutputWithContext(context.Background())
}

func (i DashboardDashboardSourceEntityArgs) ToDashboardDashboardSourceEntityOutputWithContext(ctx context.Context) DashboardDashboardSourceEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDashboardSourceEntityOutput)
}

func (i DashboardDashboardSourceEntityArgs) ToDashboardDashboardSourceEntityPtrOutput() DashboardDashboardSourceEntityPtrOutput {
	return i.ToDashboardDashboardSourceEntityPtrOutputWithContext(context.Background())
}

func (i DashboardDashboardSourceEntityArgs) ToDashboardDashboardSourceEntityPtrOutputWithContext(ctx context.Context) DashboardDashboardSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDashboardSourceEntityOutput).ToDashboardDashboardSourceEntityPtrOutputWithContext(ctx)
}

// DashboardDashboardSourceEntityPtrInput is an input type that accepts DashboardDashboardSourceEntityArgs, DashboardDashboardSourceEntityPtr and DashboardDashboardSourceEntityPtrOutput values.
// You can construct a concrete instance of `DashboardDashboardSourceEntityPtrInput` via:
//
//          DashboardDashboardSourceEntityArgs{...}
//
//  or:
//
//          nil
type DashboardDashboardSourceEntityPtrInput interface {
	pulumi.Input

	ToDashboardDashboardSourceEntityPtrOutput() DashboardDashboardSourceEntityPtrOutput
	ToDashboardDashboardSourceEntityPtrOutputWithContext(context.Context) DashboardDashboardSourceEntityPtrOutput
}

type dashboardDashboardSourceEntityPtrType DashboardDashboardSourceEntityArgs

func DashboardDashboardSourceEntityPtr(v *DashboardDashboardSourceEntityArgs) DashboardDashboardSourceEntityPtrInput {
	return (*dashboardDashboardSourceEntityPtrType)(v)
}

func (*dashboardDashboardSourceEntityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDashboardSourceEntity)(nil)).Elem()
}

func (i *dashboardDashboardSourceEntityPtrType) ToDashboardDashboardSourceEntityPtrOutput() DashboardDashboardSourceEntityPtrOutput {
	return i.ToDashboardDashboardSourceEntityPtrOutputWithContext(context.Background())
}

func (i *dashboardDashboardSourceEntityPtrType) ToDashboardDashboardSourceEntityPtrOutputWithContext(ctx context.Context) DashboardDashboardSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDashboardSourceEntityPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourceentity.html
type DashboardDashboardSourceEntityOutput struct{ *pulumi.OutputState }

func (DashboardDashboardSourceEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardSourceEntity)(nil)).Elem()
}

func (o DashboardDashboardSourceEntityOutput) ToDashboardDashboardSourceEntityOutput() DashboardDashboardSourceEntityOutput {
	return o
}

func (o DashboardDashboardSourceEntityOutput) ToDashboardDashboardSourceEntityOutputWithContext(ctx context.Context) DashboardDashboardSourceEntityOutput {
	return o
}

func (o DashboardDashboardSourceEntityOutput) ToDashboardDashboardSourceEntityPtrOutput() DashboardDashboardSourceEntityPtrOutput {
	return o.ToDashboardDashboardSourceEntityPtrOutputWithContext(context.Background())
}

func (o DashboardDashboardSourceEntityOutput) ToDashboardDashboardSourceEntityPtrOutputWithContext(ctx context.Context) DashboardDashboardSourceEntityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDashboardSourceEntity) *DashboardDashboardSourceEntity {
		return &v
	}).(DashboardDashboardSourceEntityPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourceentity.html#cfn-quicksight-dashboard-dashboardsourceentity-sourcetemplate
func (o DashboardDashboardSourceEntityOutput) SourceTemplate() DashboardDashboardSourceTemplatePtrOutput {
	return o.ApplyT(func(v DashboardDashboardSourceEntity) *DashboardDashboardSourceTemplate { return v.SourceTemplate }).(DashboardDashboardSourceTemplatePtrOutput)
}

type DashboardDashboardSourceEntityPtrOutput struct{ *pulumi.OutputState }

func (DashboardDashboardSourceEntityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDashboardSourceEntity)(nil)).Elem()
}

func (o DashboardDashboardSourceEntityPtrOutput) ToDashboardDashboardSourceEntityPtrOutput() DashboardDashboardSourceEntityPtrOutput {
	return o
}

func (o DashboardDashboardSourceEntityPtrOutput) ToDashboardDashboardSourceEntityPtrOutputWithContext(ctx context.Context) DashboardDashboardSourceEntityPtrOutput {
	return o
}

func (o DashboardDashboardSourceEntityPtrOutput) Elem() DashboardDashboardSourceEntityOutput {
	return o.ApplyT(func(v *DashboardDashboardSourceEntity) DashboardDashboardSourceEntity {
		if v != nil {
			return *v
		}
		var ret DashboardDashboardSourceEntity
		return ret
	}).(DashboardDashboardSourceEntityOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourceentity.html#cfn-quicksight-dashboard-dashboardsourceentity-sourcetemplate
func (o DashboardDashboardSourceEntityPtrOutput) SourceTemplate() DashboardDashboardSourceTemplatePtrOutput {
	return o.ApplyT(func(v *DashboardDashboardSourceEntity) *DashboardDashboardSourceTemplate {
		if v == nil {
			return nil
		}
		return v.SourceTemplate
	}).(DashboardDashboardSourceTemplatePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html
type DashboardDashboardSourceTemplate struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html#cfn-quicksight-dashboard-dashboardsourcetemplate-arn
	Arn string `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html#cfn-quicksight-dashboard-dashboardsourcetemplate-datasetreferences
	DataSetReferences []DashboardDataSetReference `pulumi:"dataSetReferences"`
}

// DashboardDashboardSourceTemplateInput is an input type that accepts DashboardDashboardSourceTemplateArgs and DashboardDashboardSourceTemplateOutput values.
// You can construct a concrete instance of `DashboardDashboardSourceTemplateInput` via:
//
//          DashboardDashboardSourceTemplateArgs{...}
type DashboardDashboardSourceTemplateInput interface {
	pulumi.Input

	ToDashboardDashboardSourceTemplateOutput() DashboardDashboardSourceTemplateOutput
	ToDashboardDashboardSourceTemplateOutputWithContext(context.Context) DashboardDashboardSourceTemplateOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html
type DashboardDashboardSourceTemplateArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html#cfn-quicksight-dashboard-dashboardsourcetemplate-arn
	Arn pulumi.StringInput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html#cfn-quicksight-dashboard-dashboardsourcetemplate-datasetreferences
	DataSetReferences DashboardDataSetReferenceArrayInput `pulumi:"dataSetReferences"`
}

func (DashboardDashboardSourceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardSourceTemplate)(nil)).Elem()
}

func (i DashboardDashboardSourceTemplateArgs) ToDashboardDashboardSourceTemplateOutput() DashboardDashboardSourceTemplateOutput {
	return i.ToDashboardDashboardSourceTemplateOutputWithContext(context.Background())
}

func (i DashboardDashboardSourceTemplateArgs) ToDashboardDashboardSourceTemplateOutputWithContext(ctx context.Context) DashboardDashboardSourceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDashboardSourceTemplateOutput)
}

func (i DashboardDashboardSourceTemplateArgs) ToDashboardDashboardSourceTemplatePtrOutput() DashboardDashboardSourceTemplatePtrOutput {
	return i.ToDashboardDashboardSourceTemplatePtrOutputWithContext(context.Background())
}

func (i DashboardDashboardSourceTemplateArgs) ToDashboardDashboardSourceTemplatePtrOutputWithContext(ctx context.Context) DashboardDashboardSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDashboardSourceTemplateOutput).ToDashboardDashboardSourceTemplatePtrOutputWithContext(ctx)
}

// DashboardDashboardSourceTemplatePtrInput is an input type that accepts DashboardDashboardSourceTemplateArgs, DashboardDashboardSourceTemplatePtr and DashboardDashboardSourceTemplatePtrOutput values.
// You can construct a concrete instance of `DashboardDashboardSourceTemplatePtrInput` via:
//
//          DashboardDashboardSourceTemplateArgs{...}
//
//  or:
//
//          nil
type DashboardDashboardSourceTemplatePtrInput interface {
	pulumi.Input

	ToDashboardDashboardSourceTemplatePtrOutput() DashboardDashboardSourceTemplatePtrOutput
	ToDashboardDashboardSourceTemplatePtrOutputWithContext(context.Context) DashboardDashboardSourceTemplatePtrOutput
}

type dashboardDashboardSourceTemplatePtrType DashboardDashboardSourceTemplateArgs

func DashboardDashboardSourceTemplatePtr(v *DashboardDashboardSourceTemplateArgs) DashboardDashboardSourceTemplatePtrInput {
	return (*dashboardDashboardSourceTemplatePtrType)(v)
}

func (*dashboardDashboardSourceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDashboardSourceTemplate)(nil)).Elem()
}

func (i *dashboardDashboardSourceTemplatePtrType) ToDashboardDashboardSourceTemplatePtrOutput() DashboardDashboardSourceTemplatePtrOutput {
	return i.ToDashboardDashboardSourceTemplatePtrOutputWithContext(context.Background())
}

func (i *dashboardDashboardSourceTemplatePtrType) ToDashboardDashboardSourceTemplatePtrOutputWithContext(ctx context.Context) DashboardDashboardSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDashboardSourceTemplatePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html
type DashboardDashboardSourceTemplateOutput struct{ *pulumi.OutputState }

func (DashboardDashboardSourceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardSourceTemplate)(nil)).Elem()
}

func (o DashboardDashboardSourceTemplateOutput) ToDashboardDashboardSourceTemplateOutput() DashboardDashboardSourceTemplateOutput {
	return o
}

func (o DashboardDashboardSourceTemplateOutput) ToDashboardDashboardSourceTemplateOutputWithContext(ctx context.Context) DashboardDashboardSourceTemplateOutput {
	return o
}

func (o DashboardDashboardSourceTemplateOutput) ToDashboardDashboardSourceTemplatePtrOutput() DashboardDashboardSourceTemplatePtrOutput {
	return o.ToDashboardDashboardSourceTemplatePtrOutputWithContext(context.Background())
}

func (o DashboardDashboardSourceTemplateOutput) ToDashboardDashboardSourceTemplatePtrOutputWithContext(ctx context.Context) DashboardDashboardSourceTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDashboardSourceTemplate) *DashboardDashboardSourceTemplate {
		return &v
	}).(DashboardDashboardSourceTemplatePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html#cfn-quicksight-dashboard-dashboardsourcetemplate-arn
func (o DashboardDashboardSourceTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDashboardSourceTemplate) string { return v.Arn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html#cfn-quicksight-dashboard-dashboardsourcetemplate-datasetreferences
func (o DashboardDashboardSourceTemplateOutput) DataSetReferences() DashboardDataSetReferenceArrayOutput {
	return o.ApplyT(func(v DashboardDashboardSourceTemplate) []DashboardDataSetReference { return v.DataSetReferences }).(DashboardDataSetReferenceArrayOutput)
}

type DashboardDashboardSourceTemplatePtrOutput struct{ *pulumi.OutputState }

func (DashboardDashboardSourceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDashboardSourceTemplate)(nil)).Elem()
}

func (o DashboardDashboardSourceTemplatePtrOutput) ToDashboardDashboardSourceTemplatePtrOutput() DashboardDashboardSourceTemplatePtrOutput {
	return o
}

func (o DashboardDashboardSourceTemplatePtrOutput) ToDashboardDashboardSourceTemplatePtrOutputWithContext(ctx context.Context) DashboardDashboardSourceTemplatePtrOutput {
	return o
}

func (o DashboardDashboardSourceTemplatePtrOutput) Elem() DashboardDashboardSourceTemplateOutput {
	return o.ApplyT(func(v *DashboardDashboardSourceTemplate) DashboardDashboardSourceTemplate {
		if v != nil {
			return *v
		}
		var ret DashboardDashboardSourceTemplate
		return ret
	}).(DashboardDashboardSourceTemplateOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html#cfn-quicksight-dashboard-dashboardsourcetemplate-arn
func (o DashboardDashboardSourceTemplatePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDashboardSourceTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-dashboardsourcetemplate.html#cfn-quicksight-dashboard-dashboardsourcetemplate-datasetreferences
func (o DashboardDashboardSourceTemplatePtrOutput) DataSetReferences() DashboardDataSetReferenceArrayOutput {
	return o.ApplyT(func(v *DashboardDashboardSourceTemplate) []DashboardDataSetReference {
		if v == nil {
			return nil
		}
		return v.DataSetReferences
	}).(DashboardDataSetReferenceArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datasetreference.html
type DashboardDataSetReference struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datasetreference.html#cfn-quicksight-dashboard-datasetreference-datasetarn
	DataSetArn string `pulumi:"dataSetArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datasetreference.html#cfn-quicksight-dashboard-datasetreference-datasetplaceholder
	DataSetPlaceholder string `pulumi:"dataSetPlaceholder"`
}

// DashboardDataSetReferenceInput is an input type that accepts DashboardDataSetReferenceArgs and DashboardDataSetReferenceOutput values.
// You can construct a concrete instance of `DashboardDataSetReferenceInput` via:
//
//          DashboardDataSetReferenceArgs{...}
type DashboardDataSetReferenceInput interface {
	pulumi.Input

	ToDashboardDataSetReferenceOutput() DashboardDataSetReferenceOutput
	ToDashboardDataSetReferenceOutputWithContext(context.Context) DashboardDataSetReferenceOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datasetreference.html
type DashboardDataSetReferenceArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datasetreference.html#cfn-quicksight-dashboard-datasetreference-datasetarn
	DataSetArn pulumi.StringInput `pulumi:"dataSetArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datasetreference.html#cfn-quicksight-dashboard-datasetreference-datasetplaceholder
	DataSetPlaceholder pulumi.StringInput `pulumi:"dataSetPlaceholder"`
}

func (DashboardDataSetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataSetReference)(nil)).Elem()
}

func (i DashboardDataSetReferenceArgs) ToDashboardDataSetReferenceOutput() DashboardDataSetReferenceOutput {
	return i.ToDashboardDataSetReferenceOutputWithContext(context.Background())
}

func (i DashboardDataSetReferenceArgs) ToDashboardDataSetReferenceOutputWithContext(ctx context.Context) DashboardDataSetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataSetReferenceOutput)
}

// DashboardDataSetReferenceArrayInput is an input type that accepts DashboardDataSetReferenceArray and DashboardDataSetReferenceArrayOutput values.
// You can construct a concrete instance of `DashboardDataSetReferenceArrayInput` via:
//
//          DashboardDataSetReferenceArray{ DashboardDataSetReferenceArgs{...} }
type DashboardDataSetReferenceArrayInput interface {
	pulumi.Input

	ToDashboardDataSetReferenceArrayOutput() DashboardDataSetReferenceArrayOutput
	ToDashboardDataSetReferenceArrayOutputWithContext(context.Context) DashboardDataSetReferenceArrayOutput
}

type DashboardDataSetReferenceArray []DashboardDataSetReferenceInput

func (DashboardDataSetReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataSetReference)(nil)).Elem()
}

func (i DashboardDataSetReferenceArray) ToDashboardDataSetReferenceArrayOutput() DashboardDataSetReferenceArrayOutput {
	return i.ToDashboardDataSetReferenceArrayOutputWithContext(context.Background())
}

func (i DashboardDataSetReferenceArray) ToDashboardDataSetReferenceArrayOutputWithContext(ctx context.Context) DashboardDataSetReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataSetReferenceArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datasetreference.html
type DashboardDataSetReferenceOutput struct{ *pulumi.OutputState }

func (DashboardDataSetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataSetReference)(nil)).Elem()
}

func (o DashboardDataSetReferenceOutput) ToDashboardDataSetReferenceOutput() DashboardDataSetReferenceOutput {
	return o
}

func (o DashboardDataSetReferenceOutput) ToDashboardDataSetReferenceOutputWithContext(ctx context.Context) DashboardDataSetReferenceOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datasetreference.html#cfn-quicksight-dashboard-datasetreference-datasetarn
func (o DashboardDataSetReferenceOutput) DataSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataSetReference) string { return v.DataSetArn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datasetreference.html#cfn-quicksight-dashboard-datasetreference-datasetplaceholder
func (o DashboardDataSetReferenceOutput) DataSetPlaceholder() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataSetReference) string { return v.DataSetPlaceholder }).(pulumi.StringOutput)
}

type DashboardDataSetReferenceArrayOutput struct{ *pulumi.OutputState }

func (DashboardDataSetReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataSetReference)(nil)).Elem()
}

func (o DashboardDataSetReferenceArrayOutput) ToDashboardDataSetReferenceArrayOutput() DashboardDataSetReferenceArrayOutput {
	return o
}

func (o DashboardDataSetReferenceArrayOutput) ToDashboardDataSetReferenceArrayOutputWithContext(ctx context.Context) DashboardDataSetReferenceArrayOutput {
	return o
}

func (o DashboardDataSetReferenceArrayOutput) Index(i pulumi.IntInput) DashboardDataSetReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDataSetReference {
		return vs[0].([]DashboardDataSetReference)[vs[1].(int)]
	}).(DashboardDataSetReferenceOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datetimeparameter.html
type DashboardDateTimeParameter struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datetimeparameter.html#cfn-quicksight-dashboard-datetimeparameter-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datetimeparameter.html#cfn-quicksight-dashboard-datetimeparameter-values
	Values []string `pulumi:"values"`
}

// DashboardDateTimeParameterInput is an input type that accepts DashboardDateTimeParameterArgs and DashboardDateTimeParameterOutput values.
// You can construct a concrete instance of `DashboardDateTimeParameterInput` via:
//
//          DashboardDateTimeParameterArgs{...}
type DashboardDateTimeParameterInput interface {
	pulumi.Input

	ToDashboardDateTimeParameterOutput() DashboardDateTimeParameterOutput
	ToDashboardDateTimeParameterOutputWithContext(context.Context) DashboardDateTimeParameterOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datetimeparameter.html
type DashboardDateTimeParameterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datetimeparameter.html#cfn-quicksight-dashboard-datetimeparameter-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datetimeparameter.html#cfn-quicksight-dashboard-datetimeparameter-values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DashboardDateTimeParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeParameter)(nil)).Elem()
}

func (i DashboardDateTimeParameterArgs) ToDashboardDateTimeParameterOutput() DashboardDateTimeParameterOutput {
	return i.ToDashboardDateTimeParameterOutputWithContext(context.Background())
}

func (i DashboardDateTimeParameterArgs) ToDashboardDateTimeParameterOutputWithContext(ctx context.Context) DashboardDateTimeParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeParameterOutput)
}

// DashboardDateTimeParameterArrayInput is an input type that accepts DashboardDateTimeParameterArray and DashboardDateTimeParameterArrayOutput values.
// You can construct a concrete instance of `DashboardDateTimeParameterArrayInput` via:
//
//          DashboardDateTimeParameterArray{ DashboardDateTimeParameterArgs{...} }
type DashboardDateTimeParameterArrayInput interface {
	pulumi.Input

	ToDashboardDateTimeParameterArrayOutput() DashboardDateTimeParameterArrayOutput
	ToDashboardDateTimeParameterArrayOutputWithContext(context.Context) DashboardDateTimeParameterArrayOutput
}

type DashboardDateTimeParameterArray []DashboardDateTimeParameterInput

func (DashboardDateTimeParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDateTimeParameter)(nil)).Elem()
}

func (i DashboardDateTimeParameterArray) ToDashboardDateTimeParameterArrayOutput() DashboardDateTimeParameterArrayOutput {
	return i.ToDashboardDateTimeParameterArrayOutputWithContext(context.Background())
}

func (i DashboardDateTimeParameterArray) ToDashboardDateTimeParameterArrayOutputWithContext(ctx context.Context) DashboardDateTimeParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datetimeparameter.html
type DashboardDateTimeParameterOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeParameter)(nil)).Elem()
}

func (o DashboardDateTimeParameterOutput) ToDashboardDateTimeParameterOutput() DashboardDateTimeParameterOutput {
	return o
}

func (o DashboardDateTimeParameterOutput) ToDashboardDateTimeParameterOutputWithContext(ctx context.Context) DashboardDateTimeParameterOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datetimeparameter.html#cfn-quicksight-dashboard-datetimeparameter-name
func (o DashboardDateTimeParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDateTimeParameter) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-datetimeparameter.html#cfn-quicksight-dashboard-datetimeparameter-values
func (o DashboardDateTimeParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardDateTimeParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DashboardDateTimeParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDateTimeParameter)(nil)).Elem()
}

func (o DashboardDateTimeParameterArrayOutput) ToDashboardDateTimeParameterArrayOutput() DashboardDateTimeParameterArrayOutput {
	return o
}

func (o DashboardDateTimeParameterArrayOutput) ToDashboardDateTimeParameterArrayOutputWithContext(ctx context.Context) DashboardDateTimeParameterArrayOutput {
	return o
}

func (o DashboardDateTimeParameterArrayOutput) Index(i pulumi.IntInput) DashboardDateTimeParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDateTimeParameter {
		return vs[0].([]DashboardDateTimeParameter)[vs[1].(int)]
	}).(DashboardDateTimeParameterOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-decimalparameter.html
type DashboardDecimalParameter struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-decimalparameter.html#cfn-quicksight-dashboard-decimalparameter-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-decimalparameter.html#cfn-quicksight-dashboard-decimalparameter-values
	Values []float64 `pulumi:"values"`
}

// DashboardDecimalParameterInput is an input type that accepts DashboardDecimalParameterArgs and DashboardDecimalParameterOutput values.
// You can construct a concrete instance of `DashboardDecimalParameterInput` via:
//
//          DashboardDecimalParameterArgs{...}
type DashboardDecimalParameterInput interface {
	pulumi.Input

	ToDashboardDecimalParameterOutput() DashboardDecimalParameterOutput
	ToDashboardDecimalParameterOutputWithContext(context.Context) DashboardDecimalParameterOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-decimalparameter.html
type DashboardDecimalParameterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-decimalparameter.html#cfn-quicksight-dashboard-decimalparameter-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-decimalparameter.html#cfn-quicksight-dashboard-decimalparameter-values
	Values pulumi.Float64ArrayInput `pulumi:"values"`
}

func (DashboardDecimalParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalParameter)(nil)).Elem()
}

func (i DashboardDecimalParameterArgs) ToDashboardDecimalParameterOutput() DashboardDecimalParameterOutput {
	return i.ToDashboardDecimalParameterOutputWithContext(context.Background())
}

func (i DashboardDecimalParameterArgs) ToDashboardDecimalParameterOutputWithContext(ctx context.Context) DashboardDecimalParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalParameterOutput)
}

// DashboardDecimalParameterArrayInput is an input type that accepts DashboardDecimalParameterArray and DashboardDecimalParameterArrayOutput values.
// You can construct a concrete instance of `DashboardDecimalParameterArrayInput` via:
//
//          DashboardDecimalParameterArray{ DashboardDecimalParameterArgs{...} }
type DashboardDecimalParameterArrayInput interface {
	pulumi.Input

	ToDashboardDecimalParameterArrayOutput() DashboardDecimalParameterArrayOutput
	ToDashboardDecimalParameterArrayOutputWithContext(context.Context) DashboardDecimalParameterArrayOutput
}

type DashboardDecimalParameterArray []DashboardDecimalParameterInput

func (DashboardDecimalParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDecimalParameter)(nil)).Elem()
}

func (i DashboardDecimalParameterArray) ToDashboardDecimalParameterArrayOutput() DashboardDecimalParameterArrayOutput {
	return i.ToDashboardDecimalParameterArrayOutputWithContext(context.Background())
}

func (i DashboardDecimalParameterArray) ToDashboardDecimalParameterArrayOutputWithContext(ctx context.Context) DashboardDecimalParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-decimalparameter.html
type DashboardDecimalParameterOutput struct{ *pulumi.OutputState }

func (DashboardDecimalParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalParameter)(nil)).Elem()
}

func (o DashboardDecimalParameterOutput) ToDashboardDecimalParameterOutput() DashboardDecimalParameterOutput {
	return o
}

func (o DashboardDecimalParameterOutput) ToDashboardDecimalParameterOutputWithContext(ctx context.Context) DashboardDecimalParameterOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-decimalparameter.html#cfn-quicksight-dashboard-decimalparameter-name
func (o DashboardDecimalParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDecimalParameter) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-decimalparameter.html#cfn-quicksight-dashboard-decimalparameter-values
func (o DashboardDecimalParameterOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v DashboardDecimalParameter) []float64 { return v.Values }).(pulumi.Float64ArrayOutput)
}

type DashboardDecimalParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardDecimalParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDecimalParameter)(nil)).Elem()
}

func (o DashboardDecimalParameterArrayOutput) ToDashboardDecimalParameterArrayOutput() DashboardDecimalParameterArrayOutput {
	return o
}

func (o DashboardDecimalParameterArrayOutput) ToDashboardDecimalParameterArrayOutputWithContext(ctx context.Context) DashboardDecimalParameterArrayOutput {
	return o
}

func (o DashboardDecimalParameterArrayOutput) Index(i pulumi.IntInput) DashboardDecimalParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDecimalParameter {
		return vs[0].([]DashboardDecimalParameter)[vs[1].(int)]
	}).(DashboardDecimalParameterOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-exporttocsvoption.html
type DashboardExportToCSVOption struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-exporttocsvoption.html#cfn-quicksight-dashboard-exporttocsvoption-availabilitystatus
	AvailabilityStatus *string `pulumi:"availabilityStatus"`
}

// DashboardExportToCSVOptionInput is an input type that accepts DashboardExportToCSVOptionArgs and DashboardExportToCSVOptionOutput values.
// You can construct a concrete instance of `DashboardExportToCSVOptionInput` via:
//
//          DashboardExportToCSVOptionArgs{...}
type DashboardExportToCSVOptionInput interface {
	pulumi.Input

	ToDashboardExportToCSVOptionOutput() DashboardExportToCSVOptionOutput
	ToDashboardExportToCSVOptionOutputWithContext(context.Context) DashboardExportToCSVOptionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-exporttocsvoption.html
type DashboardExportToCSVOptionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-exporttocsvoption.html#cfn-quicksight-dashboard-exporttocsvoption-availabilitystatus
	AvailabilityStatus pulumi.StringPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardExportToCSVOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExportToCSVOption)(nil)).Elem()
}

func (i DashboardExportToCSVOptionArgs) ToDashboardExportToCSVOptionOutput() DashboardExportToCSVOptionOutput {
	return i.ToDashboardExportToCSVOptionOutputWithContext(context.Background())
}

func (i DashboardExportToCSVOptionArgs) ToDashboardExportToCSVOptionOutputWithContext(ctx context.Context) DashboardExportToCSVOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportToCSVOptionOutput)
}

func (i DashboardExportToCSVOptionArgs) ToDashboardExportToCSVOptionPtrOutput() DashboardExportToCSVOptionPtrOutput {
	return i.ToDashboardExportToCSVOptionPtrOutputWithContext(context.Background())
}

func (i DashboardExportToCSVOptionArgs) ToDashboardExportToCSVOptionPtrOutputWithContext(ctx context.Context) DashboardExportToCSVOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportToCSVOptionOutput).ToDashboardExportToCSVOptionPtrOutputWithContext(ctx)
}

// DashboardExportToCSVOptionPtrInput is an input type that accepts DashboardExportToCSVOptionArgs, DashboardExportToCSVOptionPtr and DashboardExportToCSVOptionPtrOutput values.
// You can construct a concrete instance of `DashboardExportToCSVOptionPtrInput` via:
//
//          DashboardExportToCSVOptionArgs{...}
//
//  or:
//
//          nil
type DashboardExportToCSVOptionPtrInput interface {
	pulumi.Input

	ToDashboardExportToCSVOptionPtrOutput() DashboardExportToCSVOptionPtrOutput
	ToDashboardExportToCSVOptionPtrOutputWithContext(context.Context) DashboardExportToCSVOptionPtrOutput
}

type dashboardExportToCSVOptionPtrType DashboardExportToCSVOptionArgs

func DashboardExportToCSVOptionPtr(v *DashboardExportToCSVOptionArgs) DashboardExportToCSVOptionPtrInput {
	return (*dashboardExportToCSVOptionPtrType)(v)
}

func (*dashboardExportToCSVOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExportToCSVOption)(nil)).Elem()
}

func (i *dashboardExportToCSVOptionPtrType) ToDashboardExportToCSVOptionPtrOutput() DashboardExportToCSVOptionPtrOutput {
	return i.ToDashboardExportToCSVOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardExportToCSVOptionPtrType) ToDashboardExportToCSVOptionPtrOutputWithContext(ctx context.Context) DashboardExportToCSVOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportToCSVOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-exporttocsvoption.html
type DashboardExportToCSVOptionOutput struct{ *pulumi.OutputState }

func (DashboardExportToCSVOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExportToCSVOption)(nil)).Elem()
}

func (o DashboardExportToCSVOptionOutput) ToDashboardExportToCSVOptionOutput() DashboardExportToCSVOptionOutput {
	return o
}

func (o DashboardExportToCSVOptionOutput) ToDashboardExportToCSVOptionOutputWithContext(ctx context.Context) DashboardExportToCSVOptionOutput {
	return o
}

func (o DashboardExportToCSVOptionOutput) ToDashboardExportToCSVOptionPtrOutput() DashboardExportToCSVOptionPtrOutput {
	return o.ToDashboardExportToCSVOptionPtrOutputWithContext(context.Background())
}

func (o DashboardExportToCSVOptionOutput) ToDashboardExportToCSVOptionPtrOutputWithContext(ctx context.Context) DashboardExportToCSVOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardExportToCSVOption) *DashboardExportToCSVOption {
		return &v
	}).(DashboardExportToCSVOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-exporttocsvoption.html#cfn-quicksight-dashboard-exporttocsvoption-availabilitystatus
func (o DashboardExportToCSVOptionOutput) AvailabilityStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardExportToCSVOption) *string { return v.AvailabilityStatus }).(pulumi.StringPtrOutput)
}

type DashboardExportToCSVOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardExportToCSVOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExportToCSVOption)(nil)).Elem()
}

func (o DashboardExportToCSVOptionPtrOutput) ToDashboardExportToCSVOptionPtrOutput() DashboardExportToCSVOptionPtrOutput {
	return o
}

func (o DashboardExportToCSVOptionPtrOutput) ToDashboardExportToCSVOptionPtrOutputWithContext(ctx context.Context) DashboardExportToCSVOptionPtrOutput {
	return o
}

func (o DashboardExportToCSVOptionPtrOutput) Elem() DashboardExportToCSVOptionOutput {
	return o.ApplyT(func(v *DashboardExportToCSVOption) DashboardExportToCSVOption {
		if v != nil {
			return *v
		}
		var ret DashboardExportToCSVOption
		return ret
	}).(DashboardExportToCSVOptionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-exporttocsvoption.html#cfn-quicksight-dashboard-exporttocsvoption-availabilitystatus
func (o DashboardExportToCSVOptionPtrOutput) AvailabilityStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardExportToCSVOption) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-integerparameter.html
type DashboardIntegerParameter struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-integerparameter.html#cfn-quicksight-dashboard-integerparameter-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-integerparameter.html#cfn-quicksight-dashboard-integerparameter-values
	Values []float64 `pulumi:"values"`
}

// DashboardIntegerParameterInput is an input type that accepts DashboardIntegerParameterArgs and DashboardIntegerParameterOutput values.
// You can construct a concrete instance of `DashboardIntegerParameterInput` via:
//
//          DashboardIntegerParameterArgs{...}
type DashboardIntegerParameterInput interface {
	pulumi.Input

	ToDashboardIntegerParameterOutput() DashboardIntegerParameterOutput
	ToDashboardIntegerParameterOutputWithContext(context.Context) DashboardIntegerParameterOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-integerparameter.html
type DashboardIntegerParameterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-integerparameter.html#cfn-quicksight-dashboard-integerparameter-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-integerparameter.html#cfn-quicksight-dashboard-integerparameter-values
	Values pulumi.Float64ArrayInput `pulumi:"values"`
}

func (DashboardIntegerParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIntegerParameter)(nil)).Elem()
}

func (i DashboardIntegerParameterArgs) ToDashboardIntegerParameterOutput() DashboardIntegerParameterOutput {
	return i.ToDashboardIntegerParameterOutputWithContext(context.Background())
}

func (i DashboardIntegerParameterArgs) ToDashboardIntegerParameterOutputWithContext(ctx context.Context) DashboardIntegerParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerParameterOutput)
}

// DashboardIntegerParameterArrayInput is an input type that accepts DashboardIntegerParameterArray and DashboardIntegerParameterArrayOutput values.
// You can construct a concrete instance of `DashboardIntegerParameterArrayInput` via:
//
//          DashboardIntegerParameterArray{ DashboardIntegerParameterArgs{...} }
type DashboardIntegerParameterArrayInput interface {
	pulumi.Input

	ToDashboardIntegerParameterArrayOutput() DashboardIntegerParameterArrayOutput
	ToDashboardIntegerParameterArrayOutputWithContext(context.Context) DashboardIntegerParameterArrayOutput
}

type DashboardIntegerParameterArray []DashboardIntegerParameterInput

func (DashboardIntegerParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardIntegerParameter)(nil)).Elem()
}

func (i DashboardIntegerParameterArray) ToDashboardIntegerParameterArrayOutput() DashboardIntegerParameterArrayOutput {
	return i.ToDashboardIntegerParameterArrayOutputWithContext(context.Background())
}

func (i DashboardIntegerParameterArray) ToDashboardIntegerParameterArrayOutputWithContext(ctx context.Context) DashboardIntegerParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-integerparameter.html
type DashboardIntegerParameterOutput struct{ *pulumi.OutputState }

func (DashboardIntegerParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIntegerParameter)(nil)).Elem()
}

func (o DashboardIntegerParameterOutput) ToDashboardIntegerParameterOutput() DashboardIntegerParameterOutput {
	return o
}

func (o DashboardIntegerParameterOutput) ToDashboardIntegerParameterOutputWithContext(ctx context.Context) DashboardIntegerParameterOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-integerparameter.html#cfn-quicksight-dashboard-integerparameter-name
func (o DashboardIntegerParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardIntegerParameter) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-integerparameter.html#cfn-quicksight-dashboard-integerparameter-values
func (o DashboardIntegerParameterOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v DashboardIntegerParameter) []float64 { return v.Values }).(pulumi.Float64ArrayOutput)
}

type DashboardIntegerParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardIntegerParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardIntegerParameter)(nil)).Elem()
}

func (o DashboardIntegerParameterArrayOutput) ToDashboardIntegerParameterArrayOutput() DashboardIntegerParameterArrayOutput {
	return o
}

func (o DashboardIntegerParameterArrayOutput) ToDashboardIntegerParameterArrayOutputWithContext(ctx context.Context) DashboardIntegerParameterArrayOutput {
	return o
}

func (o DashboardIntegerParameterArrayOutput) Index(i pulumi.IntInput) DashboardIntegerParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardIntegerParameter {
		return vs[0].([]DashboardIntegerParameter)[vs[1].(int)]
	}).(DashboardIntegerParameterOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html
type DashboardParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-datetimeparameters
	DateTimeParameters []DashboardDateTimeParameter `pulumi:"dateTimeParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-decimalparameters
	DecimalParameters []DashboardDecimalParameter `pulumi:"decimalParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-integerparameters
	IntegerParameters []DashboardIntegerParameter `pulumi:"integerParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-stringparameters
	StringParameters []DashboardStringParameter `pulumi:"stringParameters"`
}

// DashboardParametersInput is an input type that accepts DashboardParametersArgs and DashboardParametersOutput values.
// You can construct a concrete instance of `DashboardParametersInput` via:
//
//          DashboardParametersArgs{...}
type DashboardParametersInput interface {
	pulumi.Input

	ToDashboardParametersOutput() DashboardParametersOutput
	ToDashboardParametersOutputWithContext(context.Context) DashboardParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html
type DashboardParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-datetimeparameters
	DateTimeParameters DashboardDateTimeParameterArrayInput `pulumi:"dateTimeParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-decimalparameters
	DecimalParameters DashboardDecimalParameterArrayInput `pulumi:"decimalParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-integerparameters
	IntegerParameters DashboardIntegerParameterArrayInput `pulumi:"integerParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-stringparameters
	StringParameters DashboardStringParameterArrayInput `pulumi:"stringParameters"`
}

func (DashboardParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameters)(nil)).Elem()
}

func (i DashboardParametersArgs) ToDashboardParametersOutput() DashboardParametersOutput {
	return i.ToDashboardParametersOutputWithContext(context.Background())
}

func (i DashboardParametersArgs) ToDashboardParametersOutputWithContext(ctx context.Context) DashboardParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParametersOutput)
}

func (i DashboardParametersArgs) ToDashboardParametersPtrOutput() DashboardParametersPtrOutput {
	return i.ToDashboardParametersPtrOutputWithContext(context.Background())
}

func (i DashboardParametersArgs) ToDashboardParametersPtrOutputWithContext(ctx context.Context) DashboardParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParametersOutput).ToDashboardParametersPtrOutputWithContext(ctx)
}

// DashboardParametersPtrInput is an input type that accepts DashboardParametersArgs, DashboardParametersPtr and DashboardParametersPtrOutput values.
// You can construct a concrete instance of `DashboardParametersPtrInput` via:
//
//          DashboardParametersArgs{...}
//
//  or:
//
//          nil
type DashboardParametersPtrInput interface {
	pulumi.Input

	ToDashboardParametersPtrOutput() DashboardParametersPtrOutput
	ToDashboardParametersPtrOutputWithContext(context.Context) DashboardParametersPtrOutput
}

type dashboardParametersPtrType DashboardParametersArgs

func DashboardParametersPtr(v *DashboardParametersArgs) DashboardParametersPtrInput {
	return (*dashboardParametersPtrType)(v)
}

func (*dashboardParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameters)(nil)).Elem()
}

func (i *dashboardParametersPtrType) ToDashboardParametersPtrOutput() DashboardParametersPtrOutput {
	return i.ToDashboardParametersPtrOutputWithContext(context.Background())
}

func (i *dashboardParametersPtrType) ToDashboardParametersPtrOutputWithContext(ctx context.Context) DashboardParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html
type DashboardParametersOutput struct{ *pulumi.OutputState }

func (DashboardParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameters)(nil)).Elem()
}

func (o DashboardParametersOutput) ToDashboardParametersOutput() DashboardParametersOutput {
	return o
}

func (o DashboardParametersOutput) ToDashboardParametersOutputWithContext(ctx context.Context) DashboardParametersOutput {
	return o
}

func (o DashboardParametersOutput) ToDashboardParametersPtrOutput() DashboardParametersPtrOutput {
	return o.ToDashboardParametersPtrOutputWithContext(context.Background())
}

func (o DashboardParametersOutput) ToDashboardParametersPtrOutputWithContext(ctx context.Context) DashboardParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardParameters) *DashboardParameters {
		return &v
	}).(DashboardParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-datetimeparameters
func (o DashboardParametersOutput) DateTimeParameters() DashboardDateTimeParameterArrayOutput {
	return o.ApplyT(func(v DashboardParameters) []DashboardDateTimeParameter { return v.DateTimeParameters }).(DashboardDateTimeParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-decimalparameters
func (o DashboardParametersOutput) DecimalParameters() DashboardDecimalParameterArrayOutput {
	return o.ApplyT(func(v DashboardParameters) []DashboardDecimalParameter { return v.DecimalParameters }).(DashboardDecimalParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-integerparameters
func (o DashboardParametersOutput) IntegerParameters() DashboardIntegerParameterArrayOutput {
	return o.ApplyT(func(v DashboardParameters) []DashboardIntegerParameter { return v.IntegerParameters }).(DashboardIntegerParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-stringparameters
func (o DashboardParametersOutput) StringParameters() DashboardStringParameterArrayOutput {
	return o.ApplyT(func(v DashboardParameters) []DashboardStringParameter { return v.StringParameters }).(DashboardStringParameterArrayOutput)
}

type DashboardParametersPtrOutput struct{ *pulumi.OutputState }

func (DashboardParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameters)(nil)).Elem()
}

func (o DashboardParametersPtrOutput) ToDashboardParametersPtrOutput() DashboardParametersPtrOutput {
	return o
}

func (o DashboardParametersPtrOutput) ToDashboardParametersPtrOutputWithContext(ctx context.Context) DashboardParametersPtrOutput {
	return o
}

func (o DashboardParametersPtrOutput) Elem() DashboardParametersOutput {
	return o.ApplyT(func(v *DashboardParameters) DashboardParameters {
		if v != nil {
			return *v
		}
		var ret DashboardParameters
		return ret
	}).(DashboardParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-datetimeparameters
func (o DashboardParametersPtrOutput) DateTimeParameters() DashboardDateTimeParameterArrayOutput {
	return o.ApplyT(func(v *DashboardParameters) []DashboardDateTimeParameter {
		if v == nil {
			return nil
		}
		return v.DateTimeParameters
	}).(DashboardDateTimeParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-decimalparameters
func (o DashboardParametersPtrOutput) DecimalParameters() DashboardDecimalParameterArrayOutput {
	return o.ApplyT(func(v *DashboardParameters) []DashboardDecimalParameter {
		if v == nil {
			return nil
		}
		return v.DecimalParameters
	}).(DashboardDecimalParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-integerparameters
func (o DashboardParametersPtrOutput) IntegerParameters() DashboardIntegerParameterArrayOutput {
	return o.ApplyT(func(v *DashboardParameters) []DashboardIntegerParameter {
		if v == nil {
			return nil
		}
		return v.IntegerParameters
	}).(DashboardIntegerParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-parameters.html#cfn-quicksight-dashboard-parameters-stringparameters
func (o DashboardParametersPtrOutput) StringParameters() DashboardStringParameterArrayOutput {
	return o.ApplyT(func(v *DashboardParameters) []DashboardStringParameter {
		if v == nil {
			return nil
		}
		return v.StringParameters
	}).(DashboardStringParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-resourcepermission.html
type DashboardResourcePermission struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-resourcepermission.html#cfn-quicksight-dashboard-resourcepermission-actions
	Actions []string `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-resourcepermission.html#cfn-quicksight-dashboard-resourcepermission-principal
	Principal string `pulumi:"principal"`
}

// DashboardResourcePermissionInput is an input type that accepts DashboardResourcePermissionArgs and DashboardResourcePermissionOutput values.
// You can construct a concrete instance of `DashboardResourcePermissionInput` via:
//
//          DashboardResourcePermissionArgs{...}
type DashboardResourcePermissionInput interface {
	pulumi.Input

	ToDashboardResourcePermissionOutput() DashboardResourcePermissionOutput
	ToDashboardResourcePermissionOutputWithContext(context.Context) DashboardResourcePermissionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-resourcepermission.html
type DashboardResourcePermissionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-resourcepermission.html#cfn-quicksight-dashboard-resourcepermission-actions
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-resourcepermission.html#cfn-quicksight-dashboard-resourcepermission-principal
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (DashboardResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResourcePermission)(nil)).Elem()
}

func (i DashboardResourcePermissionArgs) ToDashboardResourcePermissionOutput() DashboardResourcePermissionOutput {
	return i.ToDashboardResourcePermissionOutputWithContext(context.Background())
}

func (i DashboardResourcePermissionArgs) ToDashboardResourcePermissionOutputWithContext(ctx context.Context) DashboardResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardResourcePermissionOutput)
}

// DashboardResourcePermissionArrayInput is an input type that accepts DashboardResourcePermissionArray and DashboardResourcePermissionArrayOutput values.
// You can construct a concrete instance of `DashboardResourcePermissionArrayInput` via:
//
//          DashboardResourcePermissionArray{ DashboardResourcePermissionArgs{...} }
type DashboardResourcePermissionArrayInput interface {
	pulumi.Input

	ToDashboardResourcePermissionArrayOutput() DashboardResourcePermissionArrayOutput
	ToDashboardResourcePermissionArrayOutputWithContext(context.Context) DashboardResourcePermissionArrayOutput
}

type DashboardResourcePermissionArray []DashboardResourcePermissionInput

func (DashboardResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardResourcePermission)(nil)).Elem()
}

func (i DashboardResourcePermissionArray) ToDashboardResourcePermissionArrayOutput() DashboardResourcePermissionArrayOutput {
	return i.ToDashboardResourcePermissionArrayOutputWithContext(context.Background())
}

func (i DashboardResourcePermissionArray) ToDashboardResourcePermissionArrayOutputWithContext(ctx context.Context) DashboardResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardResourcePermissionArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-resourcepermission.html
type DashboardResourcePermissionOutput struct{ *pulumi.OutputState }

func (DashboardResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResourcePermission)(nil)).Elem()
}

func (o DashboardResourcePermissionOutput) ToDashboardResourcePermissionOutput() DashboardResourcePermissionOutput {
	return o
}

func (o DashboardResourcePermissionOutput) ToDashboardResourcePermissionOutputWithContext(ctx context.Context) DashboardResourcePermissionOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-resourcepermission.html#cfn-quicksight-dashboard-resourcepermission-actions
func (o DashboardResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-resourcepermission.html#cfn-quicksight-dashboard-resourcepermission-principal
func (o DashboardResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

type DashboardResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (DashboardResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardResourcePermission)(nil)).Elem()
}

func (o DashboardResourcePermissionArrayOutput) ToDashboardResourcePermissionArrayOutput() DashboardResourcePermissionArrayOutput {
	return o
}

func (o DashboardResourcePermissionArrayOutput) ToDashboardResourcePermissionArrayOutputWithContext(ctx context.Context) DashboardResourcePermissionArrayOutput {
	return o
}

func (o DashboardResourcePermissionArrayOutput) Index(i pulumi.IntInput) DashboardResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardResourcePermission {
		return vs[0].([]DashboardResourcePermission)[vs[1].(int)]
	}).(DashboardResourcePermissionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-sheetcontrolsoption.html
type DashboardSheetControlsOption struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-sheetcontrolsoption.html#cfn-quicksight-dashboard-sheetcontrolsoption-visibilitystate
	VisibilityState *string `pulumi:"visibilityState"`
}

// DashboardSheetControlsOptionInput is an input type that accepts DashboardSheetControlsOptionArgs and DashboardSheetControlsOptionOutput values.
// You can construct a concrete instance of `DashboardSheetControlsOptionInput` via:
//
//          DashboardSheetControlsOptionArgs{...}
type DashboardSheetControlsOptionInput interface {
	pulumi.Input

	ToDashboardSheetControlsOptionOutput() DashboardSheetControlsOptionOutput
	ToDashboardSheetControlsOptionOutputWithContext(context.Context) DashboardSheetControlsOptionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-sheetcontrolsoption.html
type DashboardSheetControlsOptionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-sheetcontrolsoption.html#cfn-quicksight-dashboard-sheetcontrolsoption-visibilitystate
	VisibilityState pulumi.StringPtrInput `pulumi:"visibilityState"`
}

func (DashboardSheetControlsOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlsOption)(nil)).Elem()
}

func (i DashboardSheetControlsOptionArgs) ToDashboardSheetControlsOptionOutput() DashboardSheetControlsOptionOutput {
	return i.ToDashboardSheetControlsOptionOutputWithContext(context.Background())
}

func (i DashboardSheetControlsOptionArgs) ToDashboardSheetControlsOptionOutputWithContext(ctx context.Context) DashboardSheetControlsOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetControlsOptionOutput)
}

func (i DashboardSheetControlsOptionArgs) ToDashboardSheetControlsOptionPtrOutput() DashboardSheetControlsOptionPtrOutput {
	return i.ToDashboardSheetControlsOptionPtrOutputWithContext(context.Background())
}

func (i DashboardSheetControlsOptionArgs) ToDashboardSheetControlsOptionPtrOutputWithContext(ctx context.Context) DashboardSheetControlsOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetControlsOptionOutput).ToDashboardSheetControlsOptionPtrOutputWithContext(ctx)
}

// DashboardSheetControlsOptionPtrInput is an input type that accepts DashboardSheetControlsOptionArgs, DashboardSheetControlsOptionPtr and DashboardSheetControlsOptionPtrOutput values.
// You can construct a concrete instance of `DashboardSheetControlsOptionPtrInput` via:
//
//          DashboardSheetControlsOptionArgs{...}
//
//  or:
//
//          nil
type DashboardSheetControlsOptionPtrInput interface {
	pulumi.Input

	ToDashboardSheetControlsOptionPtrOutput() DashboardSheetControlsOptionPtrOutput
	ToDashboardSheetControlsOptionPtrOutputWithContext(context.Context) DashboardSheetControlsOptionPtrOutput
}

type dashboardSheetControlsOptionPtrType DashboardSheetControlsOptionArgs

func DashboardSheetControlsOptionPtr(v *DashboardSheetControlsOptionArgs) DashboardSheetControlsOptionPtrInput {
	return (*dashboardSheetControlsOptionPtrType)(v)
}

func (*dashboardSheetControlsOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSheetControlsOption)(nil)).Elem()
}

func (i *dashboardSheetControlsOptionPtrType) ToDashboardSheetControlsOptionPtrOutput() DashboardSheetControlsOptionPtrOutput {
	return i.ToDashboardSheetControlsOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardSheetControlsOptionPtrType) ToDashboardSheetControlsOptionPtrOutputWithContext(ctx context.Context) DashboardSheetControlsOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetControlsOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-sheetcontrolsoption.html
type DashboardSheetControlsOptionOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlsOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlsOption)(nil)).Elem()
}

func (o DashboardSheetControlsOptionOutput) ToDashboardSheetControlsOptionOutput() DashboardSheetControlsOptionOutput {
	return o
}

func (o DashboardSheetControlsOptionOutput) ToDashboardSheetControlsOptionOutputWithContext(ctx context.Context) DashboardSheetControlsOptionOutput {
	return o
}

func (o DashboardSheetControlsOptionOutput) ToDashboardSheetControlsOptionPtrOutput() DashboardSheetControlsOptionPtrOutput {
	return o.ToDashboardSheetControlsOptionPtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlsOptionOutput) ToDashboardSheetControlsOptionPtrOutputWithContext(ctx context.Context) DashboardSheetControlsOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSheetControlsOption) *DashboardSheetControlsOption {
		return &v
	}).(DashboardSheetControlsOptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-sheetcontrolsoption.html#cfn-quicksight-dashboard-sheetcontrolsoption-visibilitystate
func (o DashboardSheetControlsOptionOutput) VisibilityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSheetControlsOption) *string { return v.VisibilityState }).(pulumi.StringPtrOutput)
}

type DashboardSheetControlsOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlsOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSheetControlsOption)(nil)).Elem()
}

func (o DashboardSheetControlsOptionPtrOutput) ToDashboardSheetControlsOptionPtrOutput() DashboardSheetControlsOptionPtrOutput {
	return o
}

func (o DashboardSheetControlsOptionPtrOutput) ToDashboardSheetControlsOptionPtrOutputWithContext(ctx context.Context) DashboardSheetControlsOptionPtrOutput {
	return o
}

func (o DashboardSheetControlsOptionPtrOutput) Elem() DashboardSheetControlsOptionOutput {
	return o.ApplyT(func(v *DashboardSheetControlsOption) DashboardSheetControlsOption {
		if v != nil {
			return *v
		}
		var ret DashboardSheetControlsOption
		return ret
	}).(DashboardSheetControlsOptionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-sheetcontrolsoption.html#cfn-quicksight-dashboard-sheetcontrolsoption-visibilitystate
func (o DashboardSheetControlsOptionPtrOutput) VisibilityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardSheetControlsOption) *string {
		if v == nil {
			return nil
		}
		return v.VisibilityState
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-stringparameter.html
type DashboardStringParameter struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-stringparameter.html#cfn-quicksight-dashboard-stringparameter-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-stringparameter.html#cfn-quicksight-dashboard-stringparameter-values
	Values []string `pulumi:"values"`
}

// DashboardStringParameterInput is an input type that accepts DashboardStringParameterArgs and DashboardStringParameterOutput values.
// You can construct a concrete instance of `DashboardStringParameterInput` via:
//
//          DashboardStringParameterArgs{...}
type DashboardStringParameterInput interface {
	pulumi.Input

	ToDashboardStringParameterOutput() DashboardStringParameterOutput
	ToDashboardStringParameterOutputWithContext(context.Context) DashboardStringParameterOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-stringparameter.html
type DashboardStringParameterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-stringparameter.html#cfn-quicksight-dashboard-stringparameter-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-stringparameter.html#cfn-quicksight-dashboard-stringparameter-values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DashboardStringParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringParameter)(nil)).Elem()
}

func (i DashboardStringParameterArgs) ToDashboardStringParameterOutput() DashboardStringParameterOutput {
	return i.ToDashboardStringParameterOutputWithContext(context.Background())
}

func (i DashboardStringParameterArgs) ToDashboardStringParameterOutputWithContext(ctx context.Context) DashboardStringParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringParameterOutput)
}

// DashboardStringParameterArrayInput is an input type that accepts DashboardStringParameterArray and DashboardStringParameterArrayOutput values.
// You can construct a concrete instance of `DashboardStringParameterArrayInput` via:
//
//          DashboardStringParameterArray{ DashboardStringParameterArgs{...} }
type DashboardStringParameterArrayInput interface {
	pulumi.Input

	ToDashboardStringParameterArrayOutput() DashboardStringParameterArrayOutput
	ToDashboardStringParameterArrayOutputWithContext(context.Context) DashboardStringParameterArrayOutput
}

type DashboardStringParameterArray []DashboardStringParameterInput

func (DashboardStringParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardStringParameter)(nil)).Elem()
}

func (i DashboardStringParameterArray) ToDashboardStringParameterArrayOutput() DashboardStringParameterArrayOutput {
	return i.ToDashboardStringParameterArrayOutputWithContext(context.Background())
}

func (i DashboardStringParameterArray) ToDashboardStringParameterArrayOutputWithContext(ctx context.Context) DashboardStringParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringParameterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-stringparameter.html
type DashboardStringParameterOutput struct{ *pulumi.OutputState }

func (DashboardStringParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringParameter)(nil)).Elem()
}

func (o DashboardStringParameterOutput) ToDashboardStringParameterOutput() DashboardStringParameterOutput {
	return o
}

func (o DashboardStringParameterOutput) ToDashboardStringParameterOutputWithContext(ctx context.Context) DashboardStringParameterOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-stringparameter.html#cfn-quicksight-dashboard-stringparameter-name
func (o DashboardStringParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardStringParameter) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dashboard-stringparameter.html#cfn-quicksight-dashboard-stringparameter-values
func (o DashboardStringParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardStringParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DashboardStringParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardStringParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardStringParameter)(nil)).Elem()
}

func (o DashboardStringParameterArrayOutput) ToDashboardStringParameterArrayOutput() DashboardStringParameterArrayOutput {
	return o
}

func (o DashboardStringParameterArrayOutput) ToDashboardStringParameterArrayOutputWithContext(ctx context.Context) DashboardStringParameterArrayOutput {
	return o
}

func (o DashboardStringParameterArrayOutput) Index(i pulumi.IntInput) DashboardStringParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardStringParameter {
		return vs[0].([]DashboardStringParameter)[vs[1].(int)]
	}).(DashboardStringParameterOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html
type DataSetCalculatedColumn struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html#cfn-quicksight-dataset-calculatedcolumn-columnid
	ColumnId string `pulumi:"columnId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html#cfn-quicksight-dataset-calculatedcolumn-columnname
	ColumnName string `pulumi:"columnName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html#cfn-quicksight-dataset-calculatedcolumn-expression
	Expression string `pulumi:"expression"`
}

// DataSetCalculatedColumnInput is an input type that accepts DataSetCalculatedColumnArgs and DataSetCalculatedColumnOutput values.
// You can construct a concrete instance of `DataSetCalculatedColumnInput` via:
//
//          DataSetCalculatedColumnArgs{...}
type DataSetCalculatedColumnInput interface {
	pulumi.Input

	ToDataSetCalculatedColumnOutput() DataSetCalculatedColumnOutput
	ToDataSetCalculatedColumnOutputWithContext(context.Context) DataSetCalculatedColumnOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html
type DataSetCalculatedColumnArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html#cfn-quicksight-dataset-calculatedcolumn-columnid
	ColumnId pulumi.StringInput `pulumi:"columnId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html#cfn-quicksight-dataset-calculatedcolumn-columnname
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html#cfn-quicksight-dataset-calculatedcolumn-expression
	Expression pulumi.StringInput `pulumi:"expression"`
}

func (DataSetCalculatedColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetCalculatedColumn)(nil)).Elem()
}

func (i DataSetCalculatedColumnArgs) ToDataSetCalculatedColumnOutput() DataSetCalculatedColumnOutput {
	return i.ToDataSetCalculatedColumnOutputWithContext(context.Background())
}

func (i DataSetCalculatedColumnArgs) ToDataSetCalculatedColumnOutputWithContext(ctx context.Context) DataSetCalculatedColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCalculatedColumnOutput)
}

// DataSetCalculatedColumnArrayInput is an input type that accepts DataSetCalculatedColumnArray and DataSetCalculatedColumnArrayOutput values.
// You can construct a concrete instance of `DataSetCalculatedColumnArrayInput` via:
//
//          DataSetCalculatedColumnArray{ DataSetCalculatedColumnArgs{...} }
type DataSetCalculatedColumnArrayInput interface {
	pulumi.Input

	ToDataSetCalculatedColumnArrayOutput() DataSetCalculatedColumnArrayOutput
	ToDataSetCalculatedColumnArrayOutputWithContext(context.Context) DataSetCalculatedColumnArrayOutput
}

type DataSetCalculatedColumnArray []DataSetCalculatedColumnInput

func (DataSetCalculatedColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetCalculatedColumn)(nil)).Elem()
}

func (i DataSetCalculatedColumnArray) ToDataSetCalculatedColumnArrayOutput() DataSetCalculatedColumnArrayOutput {
	return i.ToDataSetCalculatedColumnArrayOutputWithContext(context.Background())
}

func (i DataSetCalculatedColumnArray) ToDataSetCalculatedColumnArrayOutputWithContext(ctx context.Context) DataSetCalculatedColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCalculatedColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html
type DataSetCalculatedColumnOutput struct{ *pulumi.OutputState }

func (DataSetCalculatedColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetCalculatedColumn)(nil)).Elem()
}

func (o DataSetCalculatedColumnOutput) ToDataSetCalculatedColumnOutput() DataSetCalculatedColumnOutput {
	return o
}

func (o DataSetCalculatedColumnOutput) ToDataSetCalculatedColumnOutputWithContext(ctx context.Context) DataSetCalculatedColumnOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html#cfn-quicksight-dataset-calculatedcolumn-columnid
func (o DataSetCalculatedColumnOutput) ColumnId() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetCalculatedColumn) string { return v.ColumnId }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html#cfn-quicksight-dataset-calculatedcolumn-columnname
func (o DataSetCalculatedColumnOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetCalculatedColumn) string { return v.ColumnName }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-calculatedcolumn.html#cfn-quicksight-dataset-calculatedcolumn-expression
func (o DataSetCalculatedColumnOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetCalculatedColumn) string { return v.Expression }).(pulumi.StringOutput)
}

type DataSetCalculatedColumnArrayOutput struct{ *pulumi.OutputState }

func (DataSetCalculatedColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetCalculatedColumn)(nil)).Elem()
}

func (o DataSetCalculatedColumnArrayOutput) ToDataSetCalculatedColumnArrayOutput() DataSetCalculatedColumnArrayOutput {
	return o
}

func (o DataSetCalculatedColumnArrayOutput) ToDataSetCalculatedColumnArrayOutputWithContext(ctx context.Context) DataSetCalculatedColumnArrayOutput {
	return o
}

func (o DataSetCalculatedColumnArrayOutput) Index(i pulumi.IntInput) DataSetCalculatedColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetCalculatedColumn {
		return vs[0].([]DataSetCalculatedColumn)[vs[1].(int)]
	}).(DataSetCalculatedColumnOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html
type DataSetCastColumnTypeOperation struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-columnname
	ColumnName string `pulumi:"columnName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-format
	Format *string `pulumi:"format"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-newcolumntype
	NewColumnType string `pulumi:"newColumnType"`
}

// DataSetCastColumnTypeOperationInput is an input type that accepts DataSetCastColumnTypeOperationArgs and DataSetCastColumnTypeOperationOutput values.
// You can construct a concrete instance of `DataSetCastColumnTypeOperationInput` via:
//
//          DataSetCastColumnTypeOperationArgs{...}
type DataSetCastColumnTypeOperationInput interface {
	pulumi.Input

	ToDataSetCastColumnTypeOperationOutput() DataSetCastColumnTypeOperationOutput
	ToDataSetCastColumnTypeOperationOutputWithContext(context.Context) DataSetCastColumnTypeOperationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html
type DataSetCastColumnTypeOperationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-columnname
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-format
	Format pulumi.StringPtrInput `pulumi:"format"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-newcolumntype
	NewColumnType pulumi.StringInput `pulumi:"newColumnType"`
}

func (DataSetCastColumnTypeOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetCastColumnTypeOperation)(nil)).Elem()
}

func (i DataSetCastColumnTypeOperationArgs) ToDataSetCastColumnTypeOperationOutput() DataSetCastColumnTypeOperationOutput {
	return i.ToDataSetCastColumnTypeOperationOutputWithContext(context.Background())
}

func (i DataSetCastColumnTypeOperationArgs) ToDataSetCastColumnTypeOperationOutputWithContext(ctx context.Context) DataSetCastColumnTypeOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCastColumnTypeOperationOutput)
}

func (i DataSetCastColumnTypeOperationArgs) ToDataSetCastColumnTypeOperationPtrOutput() DataSetCastColumnTypeOperationPtrOutput {
	return i.ToDataSetCastColumnTypeOperationPtrOutputWithContext(context.Background())
}

func (i DataSetCastColumnTypeOperationArgs) ToDataSetCastColumnTypeOperationPtrOutputWithContext(ctx context.Context) DataSetCastColumnTypeOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCastColumnTypeOperationOutput).ToDataSetCastColumnTypeOperationPtrOutputWithContext(ctx)
}

// DataSetCastColumnTypeOperationPtrInput is an input type that accepts DataSetCastColumnTypeOperationArgs, DataSetCastColumnTypeOperationPtr and DataSetCastColumnTypeOperationPtrOutput values.
// You can construct a concrete instance of `DataSetCastColumnTypeOperationPtrInput` via:
//
//          DataSetCastColumnTypeOperationArgs{...}
//
//  or:
//
//          nil
type DataSetCastColumnTypeOperationPtrInput interface {
	pulumi.Input

	ToDataSetCastColumnTypeOperationPtrOutput() DataSetCastColumnTypeOperationPtrOutput
	ToDataSetCastColumnTypeOperationPtrOutputWithContext(context.Context) DataSetCastColumnTypeOperationPtrOutput
}

type dataSetCastColumnTypeOperationPtrType DataSetCastColumnTypeOperationArgs

func DataSetCastColumnTypeOperationPtr(v *DataSetCastColumnTypeOperationArgs) DataSetCastColumnTypeOperationPtrInput {
	return (*dataSetCastColumnTypeOperationPtrType)(v)
}

func (*dataSetCastColumnTypeOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetCastColumnTypeOperation)(nil)).Elem()
}

func (i *dataSetCastColumnTypeOperationPtrType) ToDataSetCastColumnTypeOperationPtrOutput() DataSetCastColumnTypeOperationPtrOutput {
	return i.ToDataSetCastColumnTypeOperationPtrOutputWithContext(context.Background())
}

func (i *dataSetCastColumnTypeOperationPtrType) ToDataSetCastColumnTypeOperationPtrOutputWithContext(ctx context.Context) DataSetCastColumnTypeOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCastColumnTypeOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html
type DataSetCastColumnTypeOperationOutput struct{ *pulumi.OutputState }

func (DataSetCastColumnTypeOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetCastColumnTypeOperation)(nil)).Elem()
}

func (o DataSetCastColumnTypeOperationOutput) ToDataSetCastColumnTypeOperationOutput() DataSetCastColumnTypeOperationOutput {
	return o
}

func (o DataSetCastColumnTypeOperationOutput) ToDataSetCastColumnTypeOperationOutputWithContext(ctx context.Context) DataSetCastColumnTypeOperationOutput {
	return o
}

func (o DataSetCastColumnTypeOperationOutput) ToDataSetCastColumnTypeOperationPtrOutput() DataSetCastColumnTypeOperationPtrOutput {
	return o.ToDataSetCastColumnTypeOperationPtrOutputWithContext(context.Background())
}

func (o DataSetCastColumnTypeOperationOutput) ToDataSetCastColumnTypeOperationPtrOutputWithContext(ctx context.Context) DataSetCastColumnTypeOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetCastColumnTypeOperation) *DataSetCastColumnTypeOperation {
		return &v
	}).(DataSetCastColumnTypeOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-columnname
func (o DataSetCastColumnTypeOperationOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetCastColumnTypeOperation) string { return v.ColumnName }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-format
func (o DataSetCastColumnTypeOperationOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetCastColumnTypeOperation) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-newcolumntype
func (o DataSetCastColumnTypeOperationOutput) NewColumnType() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetCastColumnTypeOperation) string { return v.NewColumnType }).(pulumi.StringOutput)
}

type DataSetCastColumnTypeOperationPtrOutput struct{ *pulumi.OutputState }

func (DataSetCastColumnTypeOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetCastColumnTypeOperation)(nil)).Elem()
}

func (o DataSetCastColumnTypeOperationPtrOutput) ToDataSetCastColumnTypeOperationPtrOutput() DataSetCastColumnTypeOperationPtrOutput {
	return o
}

func (o DataSetCastColumnTypeOperationPtrOutput) ToDataSetCastColumnTypeOperationPtrOutputWithContext(ctx context.Context) DataSetCastColumnTypeOperationPtrOutput {
	return o
}

func (o DataSetCastColumnTypeOperationPtrOutput) Elem() DataSetCastColumnTypeOperationOutput {
	return o.ApplyT(func(v *DataSetCastColumnTypeOperation) DataSetCastColumnTypeOperation {
		if v != nil {
			return *v
		}
		var ret DataSetCastColumnTypeOperation
		return ret
	}).(DataSetCastColumnTypeOperationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-columnname
func (o DataSetCastColumnTypeOperationPtrOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetCastColumnTypeOperation) *string {
		if v == nil {
			return nil
		}
		return &v.ColumnName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-format
func (o DataSetCastColumnTypeOperationPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetCastColumnTypeOperation) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-castcolumntypeoperation.html#cfn-quicksight-dataset-castcolumntypeoperation-newcolumntype
func (o DataSetCastColumnTypeOperationPtrOutput) NewColumnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetCastColumnTypeOperation) *string {
		if v == nil {
			return nil
		}
		return &v.NewColumnType
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columndescription.html
type DataSetColumnDescription struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columndescription.html#cfn-quicksight-dataset-columndescription-text
	Text *string `pulumi:"text"`
}

// DataSetColumnDescriptionInput is an input type that accepts DataSetColumnDescriptionArgs and DataSetColumnDescriptionOutput values.
// You can construct a concrete instance of `DataSetColumnDescriptionInput` via:
//
//          DataSetColumnDescriptionArgs{...}
type DataSetColumnDescriptionInput interface {
	pulumi.Input

	ToDataSetColumnDescriptionOutput() DataSetColumnDescriptionOutput
	ToDataSetColumnDescriptionOutputWithContext(context.Context) DataSetColumnDescriptionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columndescription.html
type DataSetColumnDescriptionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columndescription.html#cfn-quicksight-dataset-columndescription-text
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (DataSetColumnDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnDescription)(nil)).Elem()
}

func (i DataSetColumnDescriptionArgs) ToDataSetColumnDescriptionOutput() DataSetColumnDescriptionOutput {
	return i.ToDataSetColumnDescriptionOutputWithContext(context.Background())
}

func (i DataSetColumnDescriptionArgs) ToDataSetColumnDescriptionOutputWithContext(ctx context.Context) DataSetColumnDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnDescriptionOutput)
}

func (i DataSetColumnDescriptionArgs) ToDataSetColumnDescriptionPtrOutput() DataSetColumnDescriptionPtrOutput {
	return i.ToDataSetColumnDescriptionPtrOutputWithContext(context.Background())
}

func (i DataSetColumnDescriptionArgs) ToDataSetColumnDescriptionPtrOutputWithContext(ctx context.Context) DataSetColumnDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnDescriptionOutput).ToDataSetColumnDescriptionPtrOutputWithContext(ctx)
}

// DataSetColumnDescriptionPtrInput is an input type that accepts DataSetColumnDescriptionArgs, DataSetColumnDescriptionPtr and DataSetColumnDescriptionPtrOutput values.
// You can construct a concrete instance of `DataSetColumnDescriptionPtrInput` via:
//
//          DataSetColumnDescriptionArgs{...}
//
//  or:
//
//          nil
type DataSetColumnDescriptionPtrInput interface {
	pulumi.Input

	ToDataSetColumnDescriptionPtrOutput() DataSetColumnDescriptionPtrOutput
	ToDataSetColumnDescriptionPtrOutputWithContext(context.Context) DataSetColumnDescriptionPtrOutput
}

type dataSetColumnDescriptionPtrType DataSetColumnDescriptionArgs

func DataSetColumnDescriptionPtr(v *DataSetColumnDescriptionArgs) DataSetColumnDescriptionPtrInput {
	return (*dataSetColumnDescriptionPtrType)(v)
}

func (*dataSetColumnDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetColumnDescription)(nil)).Elem()
}

func (i *dataSetColumnDescriptionPtrType) ToDataSetColumnDescriptionPtrOutput() DataSetColumnDescriptionPtrOutput {
	return i.ToDataSetColumnDescriptionPtrOutputWithContext(context.Background())
}

func (i *dataSetColumnDescriptionPtrType) ToDataSetColumnDescriptionPtrOutputWithContext(ctx context.Context) DataSetColumnDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnDescriptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columndescription.html
type DataSetColumnDescriptionOutput struct{ *pulumi.OutputState }

func (DataSetColumnDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnDescription)(nil)).Elem()
}

func (o DataSetColumnDescriptionOutput) ToDataSetColumnDescriptionOutput() DataSetColumnDescriptionOutput {
	return o
}

func (o DataSetColumnDescriptionOutput) ToDataSetColumnDescriptionOutputWithContext(ctx context.Context) DataSetColumnDescriptionOutput {
	return o
}

func (o DataSetColumnDescriptionOutput) ToDataSetColumnDescriptionPtrOutput() DataSetColumnDescriptionPtrOutput {
	return o.ToDataSetColumnDescriptionPtrOutputWithContext(context.Background())
}

func (o DataSetColumnDescriptionOutput) ToDataSetColumnDescriptionPtrOutputWithContext(ctx context.Context) DataSetColumnDescriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetColumnDescription) *DataSetColumnDescription {
		return &v
	}).(DataSetColumnDescriptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columndescription.html#cfn-quicksight-dataset-columndescription-text
func (o DataSetColumnDescriptionOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetColumnDescription) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type DataSetColumnDescriptionPtrOutput struct{ *pulumi.OutputState }

func (DataSetColumnDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetColumnDescription)(nil)).Elem()
}

func (o DataSetColumnDescriptionPtrOutput) ToDataSetColumnDescriptionPtrOutput() DataSetColumnDescriptionPtrOutput {
	return o
}

func (o DataSetColumnDescriptionPtrOutput) ToDataSetColumnDescriptionPtrOutputWithContext(ctx context.Context) DataSetColumnDescriptionPtrOutput {
	return o
}

func (o DataSetColumnDescriptionPtrOutput) Elem() DataSetColumnDescriptionOutput {
	return o.ApplyT(func(v *DataSetColumnDescription) DataSetColumnDescription {
		if v != nil {
			return *v
		}
		var ret DataSetColumnDescription
		return ret
	}).(DataSetColumnDescriptionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columndescription.html#cfn-quicksight-dataset-columndescription-text
func (o DataSetColumnDescriptionPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetColumnDescription) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columngroup.html
type DataSetColumnGroup struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columngroup.html#cfn-quicksight-dataset-columngroup-geospatialcolumngroup
	GeoSpatialColumnGroup *DataSetGeoSpatialColumnGroup `pulumi:"geoSpatialColumnGroup"`
}

// DataSetColumnGroupInput is an input type that accepts DataSetColumnGroupArgs and DataSetColumnGroupOutput values.
// You can construct a concrete instance of `DataSetColumnGroupInput` via:
//
//          DataSetColumnGroupArgs{...}
type DataSetColumnGroupInput interface {
	pulumi.Input

	ToDataSetColumnGroupOutput() DataSetColumnGroupOutput
	ToDataSetColumnGroupOutputWithContext(context.Context) DataSetColumnGroupOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columngroup.html
type DataSetColumnGroupArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columngroup.html#cfn-quicksight-dataset-columngroup-geospatialcolumngroup
	GeoSpatialColumnGroup DataSetGeoSpatialColumnGroupPtrInput `pulumi:"geoSpatialColumnGroup"`
}

func (DataSetColumnGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnGroup)(nil)).Elem()
}

func (i DataSetColumnGroupArgs) ToDataSetColumnGroupOutput() DataSetColumnGroupOutput {
	return i.ToDataSetColumnGroupOutputWithContext(context.Background())
}

func (i DataSetColumnGroupArgs) ToDataSetColumnGroupOutputWithContext(ctx context.Context) DataSetColumnGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnGroupOutput)
}

// DataSetColumnGroupArrayInput is an input type that accepts DataSetColumnGroupArray and DataSetColumnGroupArrayOutput values.
// You can construct a concrete instance of `DataSetColumnGroupArrayInput` via:
//
//          DataSetColumnGroupArray{ DataSetColumnGroupArgs{...} }
type DataSetColumnGroupArrayInput interface {
	pulumi.Input

	ToDataSetColumnGroupArrayOutput() DataSetColumnGroupArrayOutput
	ToDataSetColumnGroupArrayOutputWithContext(context.Context) DataSetColumnGroupArrayOutput
}

type DataSetColumnGroupArray []DataSetColumnGroupInput

func (DataSetColumnGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetColumnGroup)(nil)).Elem()
}

func (i DataSetColumnGroupArray) ToDataSetColumnGroupArrayOutput() DataSetColumnGroupArrayOutput {
	return i.ToDataSetColumnGroupArrayOutputWithContext(context.Background())
}

func (i DataSetColumnGroupArray) ToDataSetColumnGroupArrayOutputWithContext(ctx context.Context) DataSetColumnGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnGroupArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columngroup.html
type DataSetColumnGroupOutput struct{ *pulumi.OutputState }

func (DataSetColumnGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnGroup)(nil)).Elem()
}

func (o DataSetColumnGroupOutput) ToDataSetColumnGroupOutput() DataSetColumnGroupOutput {
	return o
}

func (o DataSetColumnGroupOutput) ToDataSetColumnGroupOutputWithContext(ctx context.Context) DataSetColumnGroupOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columngroup.html#cfn-quicksight-dataset-columngroup-geospatialcolumngroup
func (o DataSetColumnGroupOutput) GeoSpatialColumnGroup() DataSetGeoSpatialColumnGroupPtrOutput {
	return o.ApplyT(func(v DataSetColumnGroup) *DataSetGeoSpatialColumnGroup { return v.GeoSpatialColumnGroup }).(DataSetGeoSpatialColumnGroupPtrOutput)
}

type DataSetColumnGroupArrayOutput struct{ *pulumi.OutputState }

func (DataSetColumnGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetColumnGroup)(nil)).Elem()
}

func (o DataSetColumnGroupArrayOutput) ToDataSetColumnGroupArrayOutput() DataSetColumnGroupArrayOutput {
	return o
}

func (o DataSetColumnGroupArrayOutput) ToDataSetColumnGroupArrayOutputWithContext(ctx context.Context) DataSetColumnGroupArrayOutput {
	return o
}

func (o DataSetColumnGroupArrayOutput) Index(i pulumi.IntInput) DataSetColumnGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetColumnGroup {
		return vs[0].([]DataSetColumnGroup)[vs[1].(int)]
	}).(DataSetColumnGroupOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columnlevelpermissionrule.html
type DataSetColumnLevelPermissionRule struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columnlevelpermissionrule.html#cfn-quicksight-dataset-columnlevelpermissionrule-columnnames
	ColumnNames []string `pulumi:"columnNames"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columnlevelpermissionrule.html#cfn-quicksight-dataset-columnlevelpermissionrule-principals
	Principals []string `pulumi:"principals"`
}

// DataSetColumnLevelPermissionRuleInput is an input type that accepts DataSetColumnLevelPermissionRuleArgs and DataSetColumnLevelPermissionRuleOutput values.
// You can construct a concrete instance of `DataSetColumnLevelPermissionRuleInput` via:
//
//          DataSetColumnLevelPermissionRuleArgs{...}
type DataSetColumnLevelPermissionRuleInput interface {
	pulumi.Input

	ToDataSetColumnLevelPermissionRuleOutput() DataSetColumnLevelPermissionRuleOutput
	ToDataSetColumnLevelPermissionRuleOutputWithContext(context.Context) DataSetColumnLevelPermissionRuleOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columnlevelpermissionrule.html
type DataSetColumnLevelPermissionRuleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columnlevelpermissionrule.html#cfn-quicksight-dataset-columnlevelpermissionrule-columnnames
	ColumnNames pulumi.StringArrayInput `pulumi:"columnNames"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columnlevelpermissionrule.html#cfn-quicksight-dataset-columnlevelpermissionrule-principals
	Principals pulumi.StringArrayInput `pulumi:"principals"`
}

func (DataSetColumnLevelPermissionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnLevelPermissionRule)(nil)).Elem()
}

func (i DataSetColumnLevelPermissionRuleArgs) ToDataSetColumnLevelPermissionRuleOutput() DataSetColumnLevelPermissionRuleOutput {
	return i.ToDataSetColumnLevelPermissionRuleOutputWithContext(context.Background())
}

func (i DataSetColumnLevelPermissionRuleArgs) ToDataSetColumnLevelPermissionRuleOutputWithContext(ctx context.Context) DataSetColumnLevelPermissionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnLevelPermissionRuleOutput)
}

// DataSetColumnLevelPermissionRuleArrayInput is an input type that accepts DataSetColumnLevelPermissionRuleArray and DataSetColumnLevelPermissionRuleArrayOutput values.
// You can construct a concrete instance of `DataSetColumnLevelPermissionRuleArrayInput` via:
//
//          DataSetColumnLevelPermissionRuleArray{ DataSetColumnLevelPermissionRuleArgs{...} }
type DataSetColumnLevelPermissionRuleArrayInput interface {
	pulumi.Input

	ToDataSetColumnLevelPermissionRuleArrayOutput() DataSetColumnLevelPermissionRuleArrayOutput
	ToDataSetColumnLevelPermissionRuleArrayOutputWithContext(context.Context) DataSetColumnLevelPermissionRuleArrayOutput
}

type DataSetColumnLevelPermissionRuleArray []DataSetColumnLevelPermissionRuleInput

func (DataSetColumnLevelPermissionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetColumnLevelPermissionRule)(nil)).Elem()
}

func (i DataSetColumnLevelPermissionRuleArray) ToDataSetColumnLevelPermissionRuleArrayOutput() DataSetColumnLevelPermissionRuleArrayOutput {
	return i.ToDataSetColumnLevelPermissionRuleArrayOutputWithContext(context.Background())
}

func (i DataSetColumnLevelPermissionRuleArray) ToDataSetColumnLevelPermissionRuleArrayOutputWithContext(ctx context.Context) DataSetColumnLevelPermissionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnLevelPermissionRuleArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columnlevelpermissionrule.html
type DataSetColumnLevelPermissionRuleOutput struct{ *pulumi.OutputState }

func (DataSetColumnLevelPermissionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnLevelPermissionRule)(nil)).Elem()
}

func (o DataSetColumnLevelPermissionRuleOutput) ToDataSetColumnLevelPermissionRuleOutput() DataSetColumnLevelPermissionRuleOutput {
	return o
}

func (o DataSetColumnLevelPermissionRuleOutput) ToDataSetColumnLevelPermissionRuleOutputWithContext(ctx context.Context) DataSetColumnLevelPermissionRuleOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columnlevelpermissionrule.html#cfn-quicksight-dataset-columnlevelpermissionrule-columnnames
func (o DataSetColumnLevelPermissionRuleOutput) ColumnNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetColumnLevelPermissionRule) []string { return v.ColumnNames }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columnlevelpermissionrule.html#cfn-quicksight-dataset-columnlevelpermissionrule-principals
func (o DataSetColumnLevelPermissionRuleOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetColumnLevelPermissionRule) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

type DataSetColumnLevelPermissionRuleArrayOutput struct{ *pulumi.OutputState }

func (DataSetColumnLevelPermissionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetColumnLevelPermissionRule)(nil)).Elem()
}

func (o DataSetColumnLevelPermissionRuleArrayOutput) ToDataSetColumnLevelPermissionRuleArrayOutput() DataSetColumnLevelPermissionRuleArrayOutput {
	return o
}

func (o DataSetColumnLevelPermissionRuleArrayOutput) ToDataSetColumnLevelPermissionRuleArrayOutputWithContext(ctx context.Context) DataSetColumnLevelPermissionRuleArrayOutput {
	return o
}

func (o DataSetColumnLevelPermissionRuleArrayOutput) Index(i pulumi.IntInput) DataSetColumnLevelPermissionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetColumnLevelPermissionRule {
		return vs[0].([]DataSetColumnLevelPermissionRule)[vs[1].(int)]
	}).(DataSetColumnLevelPermissionRuleOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columntag.html
type DataSetColumnTag struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columntag.html#cfn-quicksight-dataset-columntag-columndescription
	ColumnDescription *DataSetColumnDescription `pulumi:"columnDescription"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columntag.html#cfn-quicksight-dataset-columntag-columngeographicrole
	ColumnGeographicRole *string `pulumi:"columnGeographicRole"`
}

// DataSetColumnTagInput is an input type that accepts DataSetColumnTagArgs and DataSetColumnTagOutput values.
// You can construct a concrete instance of `DataSetColumnTagInput` via:
//
//          DataSetColumnTagArgs{...}
type DataSetColumnTagInput interface {
	pulumi.Input

	ToDataSetColumnTagOutput() DataSetColumnTagOutput
	ToDataSetColumnTagOutputWithContext(context.Context) DataSetColumnTagOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columntag.html
type DataSetColumnTagArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columntag.html#cfn-quicksight-dataset-columntag-columndescription
	ColumnDescription DataSetColumnDescriptionPtrInput `pulumi:"columnDescription"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columntag.html#cfn-quicksight-dataset-columntag-columngeographicrole
	ColumnGeographicRole pulumi.StringPtrInput `pulumi:"columnGeographicRole"`
}

func (DataSetColumnTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnTag)(nil)).Elem()
}

func (i DataSetColumnTagArgs) ToDataSetColumnTagOutput() DataSetColumnTagOutput {
	return i.ToDataSetColumnTagOutputWithContext(context.Background())
}

func (i DataSetColumnTagArgs) ToDataSetColumnTagOutputWithContext(ctx context.Context) DataSetColumnTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnTagOutput)
}

// DataSetColumnTagArrayInput is an input type that accepts DataSetColumnTagArray and DataSetColumnTagArrayOutput values.
// You can construct a concrete instance of `DataSetColumnTagArrayInput` via:
//
//          DataSetColumnTagArray{ DataSetColumnTagArgs{...} }
type DataSetColumnTagArrayInput interface {
	pulumi.Input

	ToDataSetColumnTagArrayOutput() DataSetColumnTagArrayOutput
	ToDataSetColumnTagArrayOutputWithContext(context.Context) DataSetColumnTagArrayOutput
}

type DataSetColumnTagArray []DataSetColumnTagInput

func (DataSetColumnTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetColumnTag)(nil)).Elem()
}

func (i DataSetColumnTagArray) ToDataSetColumnTagArrayOutput() DataSetColumnTagArrayOutput {
	return i.ToDataSetColumnTagArrayOutputWithContext(context.Background())
}

func (i DataSetColumnTagArray) ToDataSetColumnTagArrayOutputWithContext(ctx context.Context) DataSetColumnTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnTagArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columntag.html
type DataSetColumnTagOutput struct{ *pulumi.OutputState }

func (DataSetColumnTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnTag)(nil)).Elem()
}

func (o DataSetColumnTagOutput) ToDataSetColumnTagOutput() DataSetColumnTagOutput {
	return o
}

func (o DataSetColumnTagOutput) ToDataSetColumnTagOutputWithContext(ctx context.Context) DataSetColumnTagOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columntag.html#cfn-quicksight-dataset-columntag-columndescription
func (o DataSetColumnTagOutput) ColumnDescription() DataSetColumnDescriptionPtrOutput {
	return o.ApplyT(func(v DataSetColumnTag) *DataSetColumnDescription { return v.ColumnDescription }).(DataSetColumnDescriptionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-columntag.html#cfn-quicksight-dataset-columntag-columngeographicrole
func (o DataSetColumnTagOutput) ColumnGeographicRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetColumnTag) *string { return v.ColumnGeographicRole }).(pulumi.StringPtrOutput)
}

type DataSetColumnTagArrayOutput struct{ *pulumi.OutputState }

func (DataSetColumnTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetColumnTag)(nil)).Elem()
}

func (o DataSetColumnTagArrayOutput) ToDataSetColumnTagArrayOutput() DataSetColumnTagArrayOutput {
	return o
}

func (o DataSetColumnTagArrayOutput) ToDataSetColumnTagArrayOutputWithContext(ctx context.Context) DataSetColumnTagArrayOutput {
	return o
}

func (o DataSetColumnTagArrayOutput) Index(i pulumi.IntInput) DataSetColumnTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetColumnTag {
		return vs[0].([]DataSetColumnTag)[vs[1].(int)]
	}).(DataSetColumnTagOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-createcolumnsoperation.html
type DataSetCreateColumnsOperation struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-createcolumnsoperation.html#cfn-quicksight-dataset-createcolumnsoperation-columns
	Columns []DataSetCalculatedColumn `pulumi:"columns"`
}

// DataSetCreateColumnsOperationInput is an input type that accepts DataSetCreateColumnsOperationArgs and DataSetCreateColumnsOperationOutput values.
// You can construct a concrete instance of `DataSetCreateColumnsOperationInput` via:
//
//          DataSetCreateColumnsOperationArgs{...}
type DataSetCreateColumnsOperationInput interface {
	pulumi.Input

	ToDataSetCreateColumnsOperationOutput() DataSetCreateColumnsOperationOutput
	ToDataSetCreateColumnsOperationOutputWithContext(context.Context) DataSetCreateColumnsOperationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-createcolumnsoperation.html
type DataSetCreateColumnsOperationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-createcolumnsoperation.html#cfn-quicksight-dataset-createcolumnsoperation-columns
	Columns DataSetCalculatedColumnArrayInput `pulumi:"columns"`
}

func (DataSetCreateColumnsOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetCreateColumnsOperation)(nil)).Elem()
}

func (i DataSetCreateColumnsOperationArgs) ToDataSetCreateColumnsOperationOutput() DataSetCreateColumnsOperationOutput {
	return i.ToDataSetCreateColumnsOperationOutputWithContext(context.Background())
}

func (i DataSetCreateColumnsOperationArgs) ToDataSetCreateColumnsOperationOutputWithContext(ctx context.Context) DataSetCreateColumnsOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCreateColumnsOperationOutput)
}

func (i DataSetCreateColumnsOperationArgs) ToDataSetCreateColumnsOperationPtrOutput() DataSetCreateColumnsOperationPtrOutput {
	return i.ToDataSetCreateColumnsOperationPtrOutputWithContext(context.Background())
}

func (i DataSetCreateColumnsOperationArgs) ToDataSetCreateColumnsOperationPtrOutputWithContext(ctx context.Context) DataSetCreateColumnsOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCreateColumnsOperationOutput).ToDataSetCreateColumnsOperationPtrOutputWithContext(ctx)
}

// DataSetCreateColumnsOperationPtrInput is an input type that accepts DataSetCreateColumnsOperationArgs, DataSetCreateColumnsOperationPtr and DataSetCreateColumnsOperationPtrOutput values.
// You can construct a concrete instance of `DataSetCreateColumnsOperationPtrInput` via:
//
//          DataSetCreateColumnsOperationArgs{...}
//
//  or:
//
//          nil
type DataSetCreateColumnsOperationPtrInput interface {
	pulumi.Input

	ToDataSetCreateColumnsOperationPtrOutput() DataSetCreateColumnsOperationPtrOutput
	ToDataSetCreateColumnsOperationPtrOutputWithContext(context.Context) DataSetCreateColumnsOperationPtrOutput
}

type dataSetCreateColumnsOperationPtrType DataSetCreateColumnsOperationArgs

func DataSetCreateColumnsOperationPtr(v *DataSetCreateColumnsOperationArgs) DataSetCreateColumnsOperationPtrInput {
	return (*dataSetCreateColumnsOperationPtrType)(v)
}

func (*dataSetCreateColumnsOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetCreateColumnsOperation)(nil)).Elem()
}

func (i *dataSetCreateColumnsOperationPtrType) ToDataSetCreateColumnsOperationPtrOutput() DataSetCreateColumnsOperationPtrOutput {
	return i.ToDataSetCreateColumnsOperationPtrOutputWithContext(context.Background())
}

func (i *dataSetCreateColumnsOperationPtrType) ToDataSetCreateColumnsOperationPtrOutputWithContext(ctx context.Context) DataSetCreateColumnsOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCreateColumnsOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-createcolumnsoperation.html
type DataSetCreateColumnsOperationOutput struct{ *pulumi.OutputState }

func (DataSetCreateColumnsOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetCreateColumnsOperation)(nil)).Elem()
}

func (o DataSetCreateColumnsOperationOutput) ToDataSetCreateColumnsOperationOutput() DataSetCreateColumnsOperationOutput {
	return o
}

func (o DataSetCreateColumnsOperationOutput) ToDataSetCreateColumnsOperationOutputWithContext(ctx context.Context) DataSetCreateColumnsOperationOutput {
	return o
}

func (o DataSetCreateColumnsOperationOutput) ToDataSetCreateColumnsOperationPtrOutput() DataSetCreateColumnsOperationPtrOutput {
	return o.ToDataSetCreateColumnsOperationPtrOutputWithContext(context.Background())
}

func (o DataSetCreateColumnsOperationOutput) ToDataSetCreateColumnsOperationPtrOutputWithContext(ctx context.Context) DataSetCreateColumnsOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetCreateColumnsOperation) *DataSetCreateColumnsOperation {
		return &v
	}).(DataSetCreateColumnsOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-createcolumnsoperation.html#cfn-quicksight-dataset-createcolumnsoperation-columns
func (o DataSetCreateColumnsOperationOutput) Columns() DataSetCalculatedColumnArrayOutput {
	return o.ApplyT(func(v DataSetCreateColumnsOperation) []DataSetCalculatedColumn { return v.Columns }).(DataSetCalculatedColumnArrayOutput)
}

type DataSetCreateColumnsOperationPtrOutput struct{ *pulumi.OutputState }

func (DataSetCreateColumnsOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetCreateColumnsOperation)(nil)).Elem()
}

func (o DataSetCreateColumnsOperationPtrOutput) ToDataSetCreateColumnsOperationPtrOutput() DataSetCreateColumnsOperationPtrOutput {
	return o
}

func (o DataSetCreateColumnsOperationPtrOutput) ToDataSetCreateColumnsOperationPtrOutputWithContext(ctx context.Context) DataSetCreateColumnsOperationPtrOutput {
	return o
}

func (o DataSetCreateColumnsOperationPtrOutput) Elem() DataSetCreateColumnsOperationOutput {
	return o.ApplyT(func(v *DataSetCreateColumnsOperation) DataSetCreateColumnsOperation {
		if v != nil {
			return *v
		}
		var ret DataSetCreateColumnsOperation
		return ret
	}).(DataSetCreateColumnsOperationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-createcolumnsoperation.html#cfn-quicksight-dataset-createcolumnsoperation-columns
func (o DataSetCreateColumnsOperationPtrOutput) Columns() DataSetCalculatedColumnArrayOutput {
	return o.ApplyT(func(v *DataSetCreateColumnsOperation) []DataSetCalculatedColumn {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(DataSetCalculatedColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html
type DataSetCustomSql struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-columns
	Columns []DataSetInputColumn `pulumi:"columns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-datasourcearn
	DataSourceArn string `pulumi:"dataSourceArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-sqlquery
	SqlQuery string `pulumi:"sqlQuery"`
}

// DataSetCustomSqlInput is an input type that accepts DataSetCustomSqlArgs and DataSetCustomSqlOutput values.
// You can construct a concrete instance of `DataSetCustomSqlInput` via:
//
//          DataSetCustomSqlArgs{...}
type DataSetCustomSqlInput interface {
	pulumi.Input

	ToDataSetCustomSqlOutput() DataSetCustomSqlOutput
	ToDataSetCustomSqlOutputWithContext(context.Context) DataSetCustomSqlOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html
type DataSetCustomSqlArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-columns
	Columns DataSetInputColumnArrayInput `pulumi:"columns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-datasourcearn
	DataSourceArn pulumi.StringInput `pulumi:"dataSourceArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-sqlquery
	SqlQuery pulumi.StringInput `pulumi:"sqlQuery"`
}

func (DataSetCustomSqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetCustomSql)(nil)).Elem()
}

func (i DataSetCustomSqlArgs) ToDataSetCustomSqlOutput() DataSetCustomSqlOutput {
	return i.ToDataSetCustomSqlOutputWithContext(context.Background())
}

func (i DataSetCustomSqlArgs) ToDataSetCustomSqlOutputWithContext(ctx context.Context) DataSetCustomSqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCustomSqlOutput)
}

func (i DataSetCustomSqlArgs) ToDataSetCustomSqlPtrOutput() DataSetCustomSqlPtrOutput {
	return i.ToDataSetCustomSqlPtrOutputWithContext(context.Background())
}

func (i DataSetCustomSqlArgs) ToDataSetCustomSqlPtrOutputWithContext(ctx context.Context) DataSetCustomSqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCustomSqlOutput).ToDataSetCustomSqlPtrOutputWithContext(ctx)
}

// DataSetCustomSqlPtrInput is an input type that accepts DataSetCustomSqlArgs, DataSetCustomSqlPtr and DataSetCustomSqlPtrOutput values.
// You can construct a concrete instance of `DataSetCustomSqlPtrInput` via:
//
//          DataSetCustomSqlArgs{...}
//
//  or:
//
//          nil
type DataSetCustomSqlPtrInput interface {
	pulumi.Input

	ToDataSetCustomSqlPtrOutput() DataSetCustomSqlPtrOutput
	ToDataSetCustomSqlPtrOutputWithContext(context.Context) DataSetCustomSqlPtrOutput
}

type dataSetCustomSqlPtrType DataSetCustomSqlArgs

func DataSetCustomSqlPtr(v *DataSetCustomSqlArgs) DataSetCustomSqlPtrInput {
	return (*dataSetCustomSqlPtrType)(v)
}

func (*dataSetCustomSqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetCustomSql)(nil)).Elem()
}

func (i *dataSetCustomSqlPtrType) ToDataSetCustomSqlPtrOutput() DataSetCustomSqlPtrOutput {
	return i.ToDataSetCustomSqlPtrOutputWithContext(context.Background())
}

func (i *dataSetCustomSqlPtrType) ToDataSetCustomSqlPtrOutputWithContext(ctx context.Context) DataSetCustomSqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetCustomSqlPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html
type DataSetCustomSqlOutput struct{ *pulumi.OutputState }

func (DataSetCustomSqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetCustomSql)(nil)).Elem()
}

func (o DataSetCustomSqlOutput) ToDataSetCustomSqlOutput() DataSetCustomSqlOutput {
	return o
}

func (o DataSetCustomSqlOutput) ToDataSetCustomSqlOutputWithContext(ctx context.Context) DataSetCustomSqlOutput {
	return o
}

func (o DataSetCustomSqlOutput) ToDataSetCustomSqlPtrOutput() DataSetCustomSqlPtrOutput {
	return o.ToDataSetCustomSqlPtrOutputWithContext(context.Background())
}

func (o DataSetCustomSqlOutput) ToDataSetCustomSqlPtrOutputWithContext(ctx context.Context) DataSetCustomSqlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetCustomSql) *DataSetCustomSql {
		return &v
	}).(DataSetCustomSqlPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-columns
func (o DataSetCustomSqlOutput) Columns() DataSetInputColumnArrayOutput {
	return o.ApplyT(func(v DataSetCustomSql) []DataSetInputColumn { return v.Columns }).(DataSetInputColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-datasourcearn
func (o DataSetCustomSqlOutput) DataSourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetCustomSql) string { return v.DataSourceArn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-name
func (o DataSetCustomSqlOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetCustomSql) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-sqlquery
func (o DataSetCustomSqlOutput) SqlQuery() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetCustomSql) string { return v.SqlQuery }).(pulumi.StringOutput)
}

type DataSetCustomSqlPtrOutput struct{ *pulumi.OutputState }

func (DataSetCustomSqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetCustomSql)(nil)).Elem()
}

func (o DataSetCustomSqlPtrOutput) ToDataSetCustomSqlPtrOutput() DataSetCustomSqlPtrOutput {
	return o
}

func (o DataSetCustomSqlPtrOutput) ToDataSetCustomSqlPtrOutputWithContext(ctx context.Context) DataSetCustomSqlPtrOutput {
	return o
}

func (o DataSetCustomSqlPtrOutput) Elem() DataSetCustomSqlOutput {
	return o.ApplyT(func(v *DataSetCustomSql) DataSetCustomSql {
		if v != nil {
			return *v
		}
		var ret DataSetCustomSql
		return ret
	}).(DataSetCustomSqlOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-columns
func (o DataSetCustomSqlPtrOutput) Columns() DataSetInputColumnArrayOutput {
	return o.ApplyT(func(v *DataSetCustomSql) []DataSetInputColumn {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(DataSetInputColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-datasourcearn
func (o DataSetCustomSqlPtrOutput) DataSourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetCustomSql) *string {
		if v == nil {
			return nil
		}
		return &v.DataSourceArn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-name
func (o DataSetCustomSqlPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetCustomSql) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-customsql.html#cfn-quicksight-dataset-customsql-sqlquery
func (o DataSetCustomSqlPtrOutput) SqlQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetCustomSql) *string {
		if v == nil {
			return nil
		}
		return &v.SqlQuery
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-fieldfolder.html
type DataSetFieldFolder struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-fieldfolder.html#cfn-quicksight-dataset-fieldfolder-columns
	Columns []string `pulumi:"columns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-fieldfolder.html#cfn-quicksight-dataset-fieldfolder-description
	Description *string `pulumi:"description"`
}

// DataSetFieldFolderInput is an input type that accepts DataSetFieldFolderArgs and DataSetFieldFolderOutput values.
// You can construct a concrete instance of `DataSetFieldFolderInput` via:
//
//          DataSetFieldFolderArgs{...}
type DataSetFieldFolderInput interface {
	pulumi.Input

	ToDataSetFieldFolderOutput() DataSetFieldFolderOutput
	ToDataSetFieldFolderOutputWithContext(context.Context) DataSetFieldFolderOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-fieldfolder.html
type DataSetFieldFolderArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-fieldfolder.html#cfn-quicksight-dataset-fieldfolder-columns
	Columns pulumi.StringArrayInput `pulumi:"columns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-fieldfolder.html#cfn-quicksight-dataset-fieldfolder-description
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (DataSetFieldFolderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetFieldFolder)(nil)).Elem()
}

func (i DataSetFieldFolderArgs) ToDataSetFieldFolderOutput() DataSetFieldFolderOutput {
	return i.ToDataSetFieldFolderOutputWithContext(context.Background())
}

func (i DataSetFieldFolderArgs) ToDataSetFieldFolderOutputWithContext(ctx context.Context) DataSetFieldFolderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetFieldFolderOutput)
}

// DataSetFieldFolderMapInput is an input type that accepts DataSetFieldFolderMap and DataSetFieldFolderMapOutput values.
// You can construct a concrete instance of `DataSetFieldFolderMapInput` via:
//
//          DataSetFieldFolderMap{ "key": DataSetFieldFolderArgs{...} }
type DataSetFieldFolderMapInput interface {
	pulumi.Input

	ToDataSetFieldFolderMapOutput() DataSetFieldFolderMapOutput
	ToDataSetFieldFolderMapOutputWithContext(context.Context) DataSetFieldFolderMapOutput
}

type DataSetFieldFolderMap map[string]DataSetFieldFolderInput

func (DataSetFieldFolderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataSetFieldFolder)(nil)).Elem()
}

func (i DataSetFieldFolderMap) ToDataSetFieldFolderMapOutput() DataSetFieldFolderMapOutput {
	return i.ToDataSetFieldFolderMapOutputWithContext(context.Background())
}

func (i DataSetFieldFolderMap) ToDataSetFieldFolderMapOutputWithContext(ctx context.Context) DataSetFieldFolderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetFieldFolderMapOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-fieldfolder.html
type DataSetFieldFolderOutput struct{ *pulumi.OutputState }

func (DataSetFieldFolderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetFieldFolder)(nil)).Elem()
}

func (o DataSetFieldFolderOutput) ToDataSetFieldFolderOutput() DataSetFieldFolderOutput {
	return o
}

func (o DataSetFieldFolderOutput) ToDataSetFieldFolderOutputWithContext(ctx context.Context) DataSetFieldFolderOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-fieldfolder.html#cfn-quicksight-dataset-fieldfolder-columns
func (o DataSetFieldFolderOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetFieldFolder) []string { return v.Columns }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-fieldfolder.html#cfn-quicksight-dataset-fieldfolder-description
func (o DataSetFieldFolderOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetFieldFolder) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type DataSetFieldFolderMapOutput struct{ *pulumi.OutputState }

func (DataSetFieldFolderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataSetFieldFolder)(nil)).Elem()
}

func (o DataSetFieldFolderMapOutput) ToDataSetFieldFolderMapOutput() DataSetFieldFolderMapOutput {
	return o
}

func (o DataSetFieldFolderMapOutput) ToDataSetFieldFolderMapOutputWithContext(ctx context.Context) DataSetFieldFolderMapOutput {
	return o
}

func (o DataSetFieldFolderMapOutput) MapIndex(k pulumi.StringInput) DataSetFieldFolderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DataSetFieldFolder {
		return vs[0].(map[string]DataSetFieldFolder)[vs[1].(string)]
	}).(DataSetFieldFolderOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-filteroperation.html
type DataSetFilterOperation struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-filteroperation.html#cfn-quicksight-dataset-filteroperation-conditionexpression
	ConditionExpression string `pulumi:"conditionExpression"`
}

// DataSetFilterOperationInput is an input type that accepts DataSetFilterOperationArgs and DataSetFilterOperationOutput values.
// You can construct a concrete instance of `DataSetFilterOperationInput` via:
//
//          DataSetFilterOperationArgs{...}
type DataSetFilterOperationInput interface {
	pulumi.Input

	ToDataSetFilterOperationOutput() DataSetFilterOperationOutput
	ToDataSetFilterOperationOutputWithContext(context.Context) DataSetFilterOperationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-filteroperation.html
type DataSetFilterOperationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-filteroperation.html#cfn-quicksight-dataset-filteroperation-conditionexpression
	ConditionExpression pulumi.StringInput `pulumi:"conditionExpression"`
}

func (DataSetFilterOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetFilterOperation)(nil)).Elem()
}

func (i DataSetFilterOperationArgs) ToDataSetFilterOperationOutput() DataSetFilterOperationOutput {
	return i.ToDataSetFilterOperationOutputWithContext(context.Background())
}

func (i DataSetFilterOperationArgs) ToDataSetFilterOperationOutputWithContext(ctx context.Context) DataSetFilterOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetFilterOperationOutput)
}

func (i DataSetFilterOperationArgs) ToDataSetFilterOperationPtrOutput() DataSetFilterOperationPtrOutput {
	return i.ToDataSetFilterOperationPtrOutputWithContext(context.Background())
}

func (i DataSetFilterOperationArgs) ToDataSetFilterOperationPtrOutputWithContext(ctx context.Context) DataSetFilterOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetFilterOperationOutput).ToDataSetFilterOperationPtrOutputWithContext(ctx)
}

// DataSetFilterOperationPtrInput is an input type that accepts DataSetFilterOperationArgs, DataSetFilterOperationPtr and DataSetFilterOperationPtrOutput values.
// You can construct a concrete instance of `DataSetFilterOperationPtrInput` via:
//
//          DataSetFilterOperationArgs{...}
//
//  or:
//
//          nil
type DataSetFilterOperationPtrInput interface {
	pulumi.Input

	ToDataSetFilterOperationPtrOutput() DataSetFilterOperationPtrOutput
	ToDataSetFilterOperationPtrOutputWithContext(context.Context) DataSetFilterOperationPtrOutput
}

type dataSetFilterOperationPtrType DataSetFilterOperationArgs

func DataSetFilterOperationPtr(v *DataSetFilterOperationArgs) DataSetFilterOperationPtrInput {
	return (*dataSetFilterOperationPtrType)(v)
}

func (*dataSetFilterOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetFilterOperation)(nil)).Elem()
}

func (i *dataSetFilterOperationPtrType) ToDataSetFilterOperationPtrOutput() DataSetFilterOperationPtrOutput {
	return i.ToDataSetFilterOperationPtrOutputWithContext(context.Background())
}

func (i *dataSetFilterOperationPtrType) ToDataSetFilterOperationPtrOutputWithContext(ctx context.Context) DataSetFilterOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetFilterOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-filteroperation.html
type DataSetFilterOperationOutput struct{ *pulumi.OutputState }

func (DataSetFilterOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetFilterOperation)(nil)).Elem()
}

func (o DataSetFilterOperationOutput) ToDataSetFilterOperationOutput() DataSetFilterOperationOutput {
	return o
}

func (o DataSetFilterOperationOutput) ToDataSetFilterOperationOutputWithContext(ctx context.Context) DataSetFilterOperationOutput {
	return o
}

func (o DataSetFilterOperationOutput) ToDataSetFilterOperationPtrOutput() DataSetFilterOperationPtrOutput {
	return o.ToDataSetFilterOperationPtrOutputWithContext(context.Background())
}

func (o DataSetFilterOperationOutput) ToDataSetFilterOperationPtrOutputWithContext(ctx context.Context) DataSetFilterOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetFilterOperation) *DataSetFilterOperation {
		return &v
	}).(DataSetFilterOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-filteroperation.html#cfn-quicksight-dataset-filteroperation-conditionexpression
func (o DataSetFilterOperationOutput) ConditionExpression() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetFilterOperation) string { return v.ConditionExpression }).(pulumi.StringOutput)
}

type DataSetFilterOperationPtrOutput struct{ *pulumi.OutputState }

func (DataSetFilterOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetFilterOperation)(nil)).Elem()
}

func (o DataSetFilterOperationPtrOutput) ToDataSetFilterOperationPtrOutput() DataSetFilterOperationPtrOutput {
	return o
}

func (o DataSetFilterOperationPtrOutput) ToDataSetFilterOperationPtrOutputWithContext(ctx context.Context) DataSetFilterOperationPtrOutput {
	return o
}

func (o DataSetFilterOperationPtrOutput) Elem() DataSetFilterOperationOutput {
	return o.ApplyT(func(v *DataSetFilterOperation) DataSetFilterOperation {
		if v != nil {
			return *v
		}
		var ret DataSetFilterOperation
		return ret
	}).(DataSetFilterOperationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-filteroperation.html#cfn-quicksight-dataset-filteroperation-conditionexpression
func (o DataSetFilterOperationPtrOutput) ConditionExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetFilterOperation) *string {
		if v == nil {
			return nil
		}
		return &v.ConditionExpression
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html
type DataSetGeoSpatialColumnGroup struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-columns
	Columns []string `pulumi:"columns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-countrycode
	CountryCode *string `pulumi:"countryCode"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-name
	Name string `pulumi:"name"`
}

// DataSetGeoSpatialColumnGroupInput is an input type that accepts DataSetGeoSpatialColumnGroupArgs and DataSetGeoSpatialColumnGroupOutput values.
// You can construct a concrete instance of `DataSetGeoSpatialColumnGroupInput` via:
//
//          DataSetGeoSpatialColumnGroupArgs{...}
type DataSetGeoSpatialColumnGroupInput interface {
	pulumi.Input

	ToDataSetGeoSpatialColumnGroupOutput() DataSetGeoSpatialColumnGroupOutput
	ToDataSetGeoSpatialColumnGroupOutputWithContext(context.Context) DataSetGeoSpatialColumnGroupOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html
type DataSetGeoSpatialColumnGroupArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-columns
	Columns pulumi.StringArrayInput `pulumi:"columns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-countrycode
	CountryCode pulumi.StringPtrInput `pulumi:"countryCode"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-name
	Name pulumi.StringInput `pulumi:"name"`
}

func (DataSetGeoSpatialColumnGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialColumnGroup)(nil)).Elem()
}

func (i DataSetGeoSpatialColumnGroupArgs) ToDataSetGeoSpatialColumnGroupOutput() DataSetGeoSpatialColumnGroupOutput {
	return i.ToDataSetGeoSpatialColumnGroupOutputWithContext(context.Background())
}

func (i DataSetGeoSpatialColumnGroupArgs) ToDataSetGeoSpatialColumnGroupOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetGeoSpatialColumnGroupOutput)
}

func (i DataSetGeoSpatialColumnGroupArgs) ToDataSetGeoSpatialColumnGroupPtrOutput() DataSetGeoSpatialColumnGroupPtrOutput {
	return i.ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(context.Background())
}

func (i DataSetGeoSpatialColumnGroupArgs) ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetGeoSpatialColumnGroupOutput).ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(ctx)
}

// DataSetGeoSpatialColumnGroupPtrInput is an input type that accepts DataSetGeoSpatialColumnGroupArgs, DataSetGeoSpatialColumnGroupPtr and DataSetGeoSpatialColumnGroupPtrOutput values.
// You can construct a concrete instance of `DataSetGeoSpatialColumnGroupPtrInput` via:
//
//          DataSetGeoSpatialColumnGroupArgs{...}
//
//  or:
//
//          nil
type DataSetGeoSpatialColumnGroupPtrInput interface {
	pulumi.Input

	ToDataSetGeoSpatialColumnGroupPtrOutput() DataSetGeoSpatialColumnGroupPtrOutput
	ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(context.Context) DataSetGeoSpatialColumnGroupPtrOutput
}

type dataSetGeoSpatialColumnGroupPtrType DataSetGeoSpatialColumnGroupArgs

func DataSetGeoSpatialColumnGroupPtr(v *DataSetGeoSpatialColumnGroupArgs) DataSetGeoSpatialColumnGroupPtrInput {
	return (*dataSetGeoSpatialColumnGroupPtrType)(v)
}

func (*dataSetGeoSpatialColumnGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetGeoSpatialColumnGroup)(nil)).Elem()
}

func (i *dataSetGeoSpatialColumnGroupPtrType) ToDataSetGeoSpatialColumnGroupPtrOutput() DataSetGeoSpatialColumnGroupPtrOutput {
	return i.ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(context.Background())
}

func (i *dataSetGeoSpatialColumnGroupPtrType) ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetGeoSpatialColumnGroupPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html
type DataSetGeoSpatialColumnGroupOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialColumnGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialColumnGroup)(nil)).Elem()
}

func (o DataSetGeoSpatialColumnGroupOutput) ToDataSetGeoSpatialColumnGroupOutput() DataSetGeoSpatialColumnGroupOutput {
	return o
}

func (o DataSetGeoSpatialColumnGroupOutput) ToDataSetGeoSpatialColumnGroupOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupOutput {
	return o
}

func (o DataSetGeoSpatialColumnGroupOutput) ToDataSetGeoSpatialColumnGroupPtrOutput() DataSetGeoSpatialColumnGroupPtrOutput {
	return o.ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialColumnGroupOutput) ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetGeoSpatialColumnGroup) *DataSetGeoSpatialColumnGroup {
		return &v
	}).(DataSetGeoSpatialColumnGroupPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-columns
func (o DataSetGeoSpatialColumnGroupOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetGeoSpatialColumnGroup) []string { return v.Columns }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-countrycode
func (o DataSetGeoSpatialColumnGroupOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetGeoSpatialColumnGroup) *string { return v.CountryCode }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-name
func (o DataSetGeoSpatialColumnGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetGeoSpatialColumnGroup) string { return v.Name }).(pulumi.StringOutput)
}

type DataSetGeoSpatialColumnGroupPtrOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialColumnGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetGeoSpatialColumnGroup)(nil)).Elem()
}

func (o DataSetGeoSpatialColumnGroupPtrOutput) ToDataSetGeoSpatialColumnGroupPtrOutput() DataSetGeoSpatialColumnGroupPtrOutput {
	return o
}

func (o DataSetGeoSpatialColumnGroupPtrOutput) ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupPtrOutput {
	return o
}

func (o DataSetGeoSpatialColumnGroupPtrOutput) Elem() DataSetGeoSpatialColumnGroupOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialColumnGroup) DataSetGeoSpatialColumnGroup {
		if v != nil {
			return *v
		}
		var ret DataSetGeoSpatialColumnGroup
		return ret
	}).(DataSetGeoSpatialColumnGroupOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-columns
func (o DataSetGeoSpatialColumnGroupPtrOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialColumnGroup) []string {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-countrycode
func (o DataSetGeoSpatialColumnGroupPtrOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialColumnGroup) *string {
		if v == nil {
			return nil
		}
		return v.CountryCode
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-geospatialcolumngroup.html#cfn-quicksight-dataset-geospatialcolumngroup-name
func (o DataSetGeoSpatialColumnGroupPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialColumnGroup) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html
type DataSetIngestionWaitPolicy struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html#cfn-quicksight-dataset-ingestionwaitpolicy-ingestionwaittimeinhours
	IngestionWaitTimeInHours *float64 `pulumi:"ingestionWaitTimeInHours"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html#cfn-quicksight-dataset-ingestionwaitpolicy-waitforspiceingestion
	WaitForSpiceIngestion *bool `pulumi:"waitForSpiceIngestion"`
}

// DataSetIngestionWaitPolicyInput is an input type that accepts DataSetIngestionWaitPolicyArgs and DataSetIngestionWaitPolicyOutput values.
// You can construct a concrete instance of `DataSetIngestionWaitPolicyInput` via:
//
//          DataSetIngestionWaitPolicyArgs{...}
type DataSetIngestionWaitPolicyInput interface {
	pulumi.Input

	ToDataSetIngestionWaitPolicyOutput() DataSetIngestionWaitPolicyOutput
	ToDataSetIngestionWaitPolicyOutputWithContext(context.Context) DataSetIngestionWaitPolicyOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html
type DataSetIngestionWaitPolicyArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html#cfn-quicksight-dataset-ingestionwaitpolicy-ingestionwaittimeinhours
	IngestionWaitTimeInHours pulumi.Float64PtrInput `pulumi:"ingestionWaitTimeInHours"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html#cfn-quicksight-dataset-ingestionwaitpolicy-waitforspiceingestion
	WaitForSpiceIngestion pulumi.BoolPtrInput `pulumi:"waitForSpiceIngestion"`
}

func (DataSetIngestionWaitPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetIngestionWaitPolicy)(nil)).Elem()
}

func (i DataSetIngestionWaitPolicyArgs) ToDataSetIngestionWaitPolicyOutput() DataSetIngestionWaitPolicyOutput {
	return i.ToDataSetIngestionWaitPolicyOutputWithContext(context.Background())
}

func (i DataSetIngestionWaitPolicyArgs) ToDataSetIngestionWaitPolicyOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetIngestionWaitPolicyOutput)
}

func (i DataSetIngestionWaitPolicyArgs) ToDataSetIngestionWaitPolicyPtrOutput() DataSetIngestionWaitPolicyPtrOutput {
	return i.ToDataSetIngestionWaitPolicyPtrOutputWithContext(context.Background())
}

func (i DataSetIngestionWaitPolicyArgs) ToDataSetIngestionWaitPolicyPtrOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetIngestionWaitPolicyOutput).ToDataSetIngestionWaitPolicyPtrOutputWithContext(ctx)
}

// DataSetIngestionWaitPolicyPtrInput is an input type that accepts DataSetIngestionWaitPolicyArgs, DataSetIngestionWaitPolicyPtr and DataSetIngestionWaitPolicyPtrOutput values.
// You can construct a concrete instance of `DataSetIngestionWaitPolicyPtrInput` via:
//
//          DataSetIngestionWaitPolicyArgs{...}
//
//  or:
//
//          nil
type DataSetIngestionWaitPolicyPtrInput interface {
	pulumi.Input

	ToDataSetIngestionWaitPolicyPtrOutput() DataSetIngestionWaitPolicyPtrOutput
	ToDataSetIngestionWaitPolicyPtrOutputWithContext(context.Context) DataSetIngestionWaitPolicyPtrOutput
}

type dataSetIngestionWaitPolicyPtrType DataSetIngestionWaitPolicyArgs

func DataSetIngestionWaitPolicyPtr(v *DataSetIngestionWaitPolicyArgs) DataSetIngestionWaitPolicyPtrInput {
	return (*dataSetIngestionWaitPolicyPtrType)(v)
}

func (*dataSetIngestionWaitPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetIngestionWaitPolicy)(nil)).Elem()
}

func (i *dataSetIngestionWaitPolicyPtrType) ToDataSetIngestionWaitPolicyPtrOutput() DataSetIngestionWaitPolicyPtrOutput {
	return i.ToDataSetIngestionWaitPolicyPtrOutputWithContext(context.Background())
}

func (i *dataSetIngestionWaitPolicyPtrType) ToDataSetIngestionWaitPolicyPtrOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetIngestionWaitPolicyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html
type DataSetIngestionWaitPolicyOutput struct{ *pulumi.OutputState }

func (DataSetIngestionWaitPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetIngestionWaitPolicy)(nil)).Elem()
}

func (o DataSetIngestionWaitPolicyOutput) ToDataSetIngestionWaitPolicyOutput() DataSetIngestionWaitPolicyOutput {
	return o
}

func (o DataSetIngestionWaitPolicyOutput) ToDataSetIngestionWaitPolicyOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyOutput {
	return o
}

func (o DataSetIngestionWaitPolicyOutput) ToDataSetIngestionWaitPolicyPtrOutput() DataSetIngestionWaitPolicyPtrOutput {
	return o.ToDataSetIngestionWaitPolicyPtrOutputWithContext(context.Background())
}

func (o DataSetIngestionWaitPolicyOutput) ToDataSetIngestionWaitPolicyPtrOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetIngestionWaitPolicy) *DataSetIngestionWaitPolicy {
		return &v
	}).(DataSetIngestionWaitPolicyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html#cfn-quicksight-dataset-ingestionwaitpolicy-ingestionwaittimeinhours
func (o DataSetIngestionWaitPolicyOutput) IngestionWaitTimeInHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DataSetIngestionWaitPolicy) *float64 { return v.IngestionWaitTimeInHours }).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html#cfn-quicksight-dataset-ingestionwaitpolicy-waitforspiceingestion
func (o DataSetIngestionWaitPolicyOutput) WaitForSpiceIngestion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSetIngestionWaitPolicy) *bool { return v.WaitForSpiceIngestion }).(pulumi.BoolPtrOutput)
}

type DataSetIngestionWaitPolicyPtrOutput struct{ *pulumi.OutputState }

func (DataSetIngestionWaitPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetIngestionWaitPolicy)(nil)).Elem()
}

func (o DataSetIngestionWaitPolicyPtrOutput) ToDataSetIngestionWaitPolicyPtrOutput() DataSetIngestionWaitPolicyPtrOutput {
	return o
}

func (o DataSetIngestionWaitPolicyPtrOutput) ToDataSetIngestionWaitPolicyPtrOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyPtrOutput {
	return o
}

func (o DataSetIngestionWaitPolicyPtrOutput) Elem() DataSetIngestionWaitPolicyOutput {
	return o.ApplyT(func(v *DataSetIngestionWaitPolicy) DataSetIngestionWaitPolicy {
		if v != nil {
			return *v
		}
		var ret DataSetIngestionWaitPolicy
		return ret
	}).(DataSetIngestionWaitPolicyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html#cfn-quicksight-dataset-ingestionwaitpolicy-ingestionwaittimeinhours
func (o DataSetIngestionWaitPolicyPtrOutput) IngestionWaitTimeInHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSetIngestionWaitPolicy) *float64 {
		if v == nil {
			return nil
		}
		return v.IngestionWaitTimeInHours
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html#cfn-quicksight-dataset-ingestionwaitpolicy-waitforspiceingestion
func (o DataSetIngestionWaitPolicyPtrOutput) WaitForSpiceIngestion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSetIngestionWaitPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForSpiceIngestion
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-inputcolumn.html
type DataSetInputColumn struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-inputcolumn.html#cfn-quicksight-dataset-inputcolumn-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-inputcolumn.html#cfn-quicksight-dataset-inputcolumn-type
	Type string `pulumi:"type"`
}

// DataSetInputColumnInput is an input type that accepts DataSetInputColumnArgs and DataSetInputColumnOutput values.
// You can construct a concrete instance of `DataSetInputColumnInput` via:
//
//          DataSetInputColumnArgs{...}
type DataSetInputColumnInput interface {
	pulumi.Input

	ToDataSetInputColumnOutput() DataSetInputColumnOutput
	ToDataSetInputColumnOutputWithContext(context.Context) DataSetInputColumnOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-inputcolumn.html
type DataSetInputColumnArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-inputcolumn.html#cfn-quicksight-dataset-inputcolumn-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-inputcolumn.html#cfn-quicksight-dataset-inputcolumn-type
	Type pulumi.StringInput `pulumi:"type"`
}

func (DataSetInputColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetInputColumn)(nil)).Elem()
}

func (i DataSetInputColumnArgs) ToDataSetInputColumnOutput() DataSetInputColumnOutput {
	return i.ToDataSetInputColumnOutputWithContext(context.Background())
}

func (i DataSetInputColumnArgs) ToDataSetInputColumnOutputWithContext(ctx context.Context) DataSetInputColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetInputColumnOutput)
}

// DataSetInputColumnArrayInput is an input type that accepts DataSetInputColumnArray and DataSetInputColumnArrayOutput values.
// You can construct a concrete instance of `DataSetInputColumnArrayInput` via:
//
//          DataSetInputColumnArray{ DataSetInputColumnArgs{...} }
type DataSetInputColumnArrayInput interface {
	pulumi.Input

	ToDataSetInputColumnArrayOutput() DataSetInputColumnArrayOutput
	ToDataSetInputColumnArrayOutputWithContext(context.Context) DataSetInputColumnArrayOutput
}

type DataSetInputColumnArray []DataSetInputColumnInput

func (DataSetInputColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetInputColumn)(nil)).Elem()
}

func (i DataSetInputColumnArray) ToDataSetInputColumnArrayOutput() DataSetInputColumnArrayOutput {
	return i.ToDataSetInputColumnArrayOutputWithContext(context.Background())
}

func (i DataSetInputColumnArray) ToDataSetInputColumnArrayOutputWithContext(ctx context.Context) DataSetInputColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetInputColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-inputcolumn.html
type DataSetInputColumnOutput struct{ *pulumi.OutputState }

func (DataSetInputColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetInputColumn)(nil)).Elem()
}

func (o DataSetInputColumnOutput) ToDataSetInputColumnOutput() DataSetInputColumnOutput {
	return o
}

func (o DataSetInputColumnOutput) ToDataSetInputColumnOutputWithContext(ctx context.Context) DataSetInputColumnOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-inputcolumn.html#cfn-quicksight-dataset-inputcolumn-name
func (o DataSetInputColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetInputColumn) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-inputcolumn.html#cfn-quicksight-dataset-inputcolumn-type
func (o DataSetInputColumnOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetInputColumn) string { return v.Type }).(pulumi.StringOutput)
}

type DataSetInputColumnArrayOutput struct{ *pulumi.OutputState }

func (DataSetInputColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetInputColumn)(nil)).Elem()
}

func (o DataSetInputColumnArrayOutput) ToDataSetInputColumnArrayOutput() DataSetInputColumnArrayOutput {
	return o
}

func (o DataSetInputColumnArrayOutput) ToDataSetInputColumnArrayOutputWithContext(ctx context.Context) DataSetInputColumnArrayOutput {
	return o
}

func (o DataSetInputColumnArrayOutput) Index(i pulumi.IntInput) DataSetInputColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetInputColumn {
		return vs[0].([]DataSetInputColumn)[vs[1].(int)]
	}).(DataSetInputColumnOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html
type DataSetJoinInstruction struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-leftjoinkeyproperties
	LeftJoinKeyProperties *DataSetJoinKeyProperties `pulumi:"leftJoinKeyProperties"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-leftoperand
	LeftOperand string `pulumi:"leftOperand"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-onclause
	OnClause string `pulumi:"onClause"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-rightjoinkeyproperties
	RightJoinKeyProperties *DataSetJoinKeyProperties `pulumi:"rightJoinKeyProperties"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-rightoperand
	RightOperand string `pulumi:"rightOperand"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-type
	Type string `pulumi:"type"`
}

// DataSetJoinInstructionInput is an input type that accepts DataSetJoinInstructionArgs and DataSetJoinInstructionOutput values.
// You can construct a concrete instance of `DataSetJoinInstructionInput` via:
//
//          DataSetJoinInstructionArgs{...}
type DataSetJoinInstructionInput interface {
	pulumi.Input

	ToDataSetJoinInstructionOutput() DataSetJoinInstructionOutput
	ToDataSetJoinInstructionOutputWithContext(context.Context) DataSetJoinInstructionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html
type DataSetJoinInstructionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-leftjoinkeyproperties
	LeftJoinKeyProperties DataSetJoinKeyPropertiesPtrInput `pulumi:"leftJoinKeyProperties"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-leftoperand
	LeftOperand pulumi.StringInput `pulumi:"leftOperand"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-onclause
	OnClause pulumi.StringInput `pulumi:"onClause"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-rightjoinkeyproperties
	RightJoinKeyProperties DataSetJoinKeyPropertiesPtrInput `pulumi:"rightJoinKeyProperties"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-rightoperand
	RightOperand pulumi.StringInput `pulumi:"rightOperand"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-type
	Type pulumi.StringInput `pulumi:"type"`
}

func (DataSetJoinInstructionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetJoinInstruction)(nil)).Elem()
}

func (i DataSetJoinInstructionArgs) ToDataSetJoinInstructionOutput() DataSetJoinInstructionOutput {
	return i.ToDataSetJoinInstructionOutputWithContext(context.Background())
}

func (i DataSetJoinInstructionArgs) ToDataSetJoinInstructionOutputWithContext(ctx context.Context) DataSetJoinInstructionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetJoinInstructionOutput)
}

func (i DataSetJoinInstructionArgs) ToDataSetJoinInstructionPtrOutput() DataSetJoinInstructionPtrOutput {
	return i.ToDataSetJoinInstructionPtrOutputWithContext(context.Background())
}

func (i DataSetJoinInstructionArgs) ToDataSetJoinInstructionPtrOutputWithContext(ctx context.Context) DataSetJoinInstructionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetJoinInstructionOutput).ToDataSetJoinInstructionPtrOutputWithContext(ctx)
}

// DataSetJoinInstructionPtrInput is an input type that accepts DataSetJoinInstructionArgs, DataSetJoinInstructionPtr and DataSetJoinInstructionPtrOutput values.
// You can construct a concrete instance of `DataSetJoinInstructionPtrInput` via:
//
//          DataSetJoinInstructionArgs{...}
//
//  or:
//
//          nil
type DataSetJoinInstructionPtrInput interface {
	pulumi.Input

	ToDataSetJoinInstructionPtrOutput() DataSetJoinInstructionPtrOutput
	ToDataSetJoinInstructionPtrOutputWithContext(context.Context) DataSetJoinInstructionPtrOutput
}

type dataSetJoinInstructionPtrType DataSetJoinInstructionArgs

func DataSetJoinInstructionPtr(v *DataSetJoinInstructionArgs) DataSetJoinInstructionPtrInput {
	return (*dataSetJoinInstructionPtrType)(v)
}

func (*dataSetJoinInstructionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetJoinInstruction)(nil)).Elem()
}

func (i *dataSetJoinInstructionPtrType) ToDataSetJoinInstructionPtrOutput() DataSetJoinInstructionPtrOutput {
	return i.ToDataSetJoinInstructionPtrOutputWithContext(context.Background())
}

func (i *dataSetJoinInstructionPtrType) ToDataSetJoinInstructionPtrOutputWithContext(ctx context.Context) DataSetJoinInstructionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetJoinInstructionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html
type DataSetJoinInstructionOutput struct{ *pulumi.OutputState }

func (DataSetJoinInstructionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetJoinInstruction)(nil)).Elem()
}

func (o DataSetJoinInstructionOutput) ToDataSetJoinInstructionOutput() DataSetJoinInstructionOutput {
	return o
}

func (o DataSetJoinInstructionOutput) ToDataSetJoinInstructionOutputWithContext(ctx context.Context) DataSetJoinInstructionOutput {
	return o
}

func (o DataSetJoinInstructionOutput) ToDataSetJoinInstructionPtrOutput() DataSetJoinInstructionPtrOutput {
	return o.ToDataSetJoinInstructionPtrOutputWithContext(context.Background())
}

func (o DataSetJoinInstructionOutput) ToDataSetJoinInstructionPtrOutputWithContext(ctx context.Context) DataSetJoinInstructionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetJoinInstruction) *DataSetJoinInstruction {
		return &v
	}).(DataSetJoinInstructionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-leftjoinkeyproperties
func (o DataSetJoinInstructionOutput) LeftJoinKeyProperties() DataSetJoinKeyPropertiesPtrOutput {
	return o.ApplyT(func(v DataSetJoinInstruction) *DataSetJoinKeyProperties { return v.LeftJoinKeyProperties }).(DataSetJoinKeyPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-leftoperand
func (o DataSetJoinInstructionOutput) LeftOperand() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetJoinInstruction) string { return v.LeftOperand }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-onclause
func (o DataSetJoinInstructionOutput) OnClause() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetJoinInstruction) string { return v.OnClause }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-rightjoinkeyproperties
func (o DataSetJoinInstructionOutput) RightJoinKeyProperties() DataSetJoinKeyPropertiesPtrOutput {
	return o.ApplyT(func(v DataSetJoinInstruction) *DataSetJoinKeyProperties { return v.RightJoinKeyProperties }).(DataSetJoinKeyPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-rightoperand
func (o DataSetJoinInstructionOutput) RightOperand() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetJoinInstruction) string { return v.RightOperand }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-type
func (o DataSetJoinInstructionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetJoinInstruction) string { return v.Type }).(pulumi.StringOutput)
}

type DataSetJoinInstructionPtrOutput struct{ *pulumi.OutputState }

func (DataSetJoinInstructionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetJoinInstruction)(nil)).Elem()
}

func (o DataSetJoinInstructionPtrOutput) ToDataSetJoinInstructionPtrOutput() DataSetJoinInstructionPtrOutput {
	return o
}

func (o DataSetJoinInstructionPtrOutput) ToDataSetJoinInstructionPtrOutputWithContext(ctx context.Context) DataSetJoinInstructionPtrOutput {
	return o
}

func (o DataSetJoinInstructionPtrOutput) Elem() DataSetJoinInstructionOutput {
	return o.ApplyT(func(v *DataSetJoinInstruction) DataSetJoinInstruction {
		if v != nil {
			return *v
		}
		var ret DataSetJoinInstruction
		return ret
	}).(DataSetJoinInstructionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-leftjoinkeyproperties
func (o DataSetJoinInstructionPtrOutput) LeftJoinKeyProperties() DataSetJoinKeyPropertiesPtrOutput {
	return o.ApplyT(func(v *DataSetJoinInstruction) *DataSetJoinKeyProperties {
		if v == nil {
			return nil
		}
		return v.LeftJoinKeyProperties
	}).(DataSetJoinKeyPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-leftoperand
func (o DataSetJoinInstructionPtrOutput) LeftOperand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetJoinInstruction) *string {
		if v == nil {
			return nil
		}
		return &v.LeftOperand
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-onclause
func (o DataSetJoinInstructionPtrOutput) OnClause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetJoinInstruction) *string {
		if v == nil {
			return nil
		}
		return &v.OnClause
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-rightjoinkeyproperties
func (o DataSetJoinInstructionPtrOutput) RightJoinKeyProperties() DataSetJoinKeyPropertiesPtrOutput {
	return o.ApplyT(func(v *DataSetJoinInstruction) *DataSetJoinKeyProperties {
		if v == nil {
			return nil
		}
		return v.RightJoinKeyProperties
	}).(DataSetJoinKeyPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-rightoperand
func (o DataSetJoinInstructionPtrOutput) RightOperand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetJoinInstruction) *string {
		if v == nil {
			return nil
		}
		return &v.RightOperand
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joininstruction.html#cfn-quicksight-dataset-joininstruction-type
func (o DataSetJoinInstructionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetJoinInstruction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joinkeyproperties.html
type DataSetJoinKeyProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joinkeyproperties.html#cfn-quicksight-dataset-joinkeyproperties-uniquekey
	UniqueKey *bool `pulumi:"uniqueKey"`
}

// DataSetJoinKeyPropertiesInput is an input type that accepts DataSetJoinKeyPropertiesArgs and DataSetJoinKeyPropertiesOutput values.
// You can construct a concrete instance of `DataSetJoinKeyPropertiesInput` via:
//
//          DataSetJoinKeyPropertiesArgs{...}
type DataSetJoinKeyPropertiesInput interface {
	pulumi.Input

	ToDataSetJoinKeyPropertiesOutput() DataSetJoinKeyPropertiesOutput
	ToDataSetJoinKeyPropertiesOutputWithContext(context.Context) DataSetJoinKeyPropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joinkeyproperties.html
type DataSetJoinKeyPropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joinkeyproperties.html#cfn-quicksight-dataset-joinkeyproperties-uniquekey
	UniqueKey pulumi.BoolPtrInput `pulumi:"uniqueKey"`
}

func (DataSetJoinKeyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetJoinKeyProperties)(nil)).Elem()
}

func (i DataSetJoinKeyPropertiesArgs) ToDataSetJoinKeyPropertiesOutput() DataSetJoinKeyPropertiesOutput {
	return i.ToDataSetJoinKeyPropertiesOutputWithContext(context.Background())
}

func (i DataSetJoinKeyPropertiesArgs) ToDataSetJoinKeyPropertiesOutputWithContext(ctx context.Context) DataSetJoinKeyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetJoinKeyPropertiesOutput)
}

func (i DataSetJoinKeyPropertiesArgs) ToDataSetJoinKeyPropertiesPtrOutput() DataSetJoinKeyPropertiesPtrOutput {
	return i.ToDataSetJoinKeyPropertiesPtrOutputWithContext(context.Background())
}

func (i DataSetJoinKeyPropertiesArgs) ToDataSetJoinKeyPropertiesPtrOutputWithContext(ctx context.Context) DataSetJoinKeyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetJoinKeyPropertiesOutput).ToDataSetJoinKeyPropertiesPtrOutputWithContext(ctx)
}

// DataSetJoinKeyPropertiesPtrInput is an input type that accepts DataSetJoinKeyPropertiesArgs, DataSetJoinKeyPropertiesPtr and DataSetJoinKeyPropertiesPtrOutput values.
// You can construct a concrete instance of `DataSetJoinKeyPropertiesPtrInput` via:
//
//          DataSetJoinKeyPropertiesArgs{...}
//
//  or:
//
//          nil
type DataSetJoinKeyPropertiesPtrInput interface {
	pulumi.Input

	ToDataSetJoinKeyPropertiesPtrOutput() DataSetJoinKeyPropertiesPtrOutput
	ToDataSetJoinKeyPropertiesPtrOutputWithContext(context.Context) DataSetJoinKeyPropertiesPtrOutput
}

type dataSetJoinKeyPropertiesPtrType DataSetJoinKeyPropertiesArgs

func DataSetJoinKeyPropertiesPtr(v *DataSetJoinKeyPropertiesArgs) DataSetJoinKeyPropertiesPtrInput {
	return (*dataSetJoinKeyPropertiesPtrType)(v)
}

func (*dataSetJoinKeyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetJoinKeyProperties)(nil)).Elem()
}

func (i *dataSetJoinKeyPropertiesPtrType) ToDataSetJoinKeyPropertiesPtrOutput() DataSetJoinKeyPropertiesPtrOutput {
	return i.ToDataSetJoinKeyPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataSetJoinKeyPropertiesPtrType) ToDataSetJoinKeyPropertiesPtrOutputWithContext(ctx context.Context) DataSetJoinKeyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetJoinKeyPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joinkeyproperties.html
type DataSetJoinKeyPropertiesOutput struct{ *pulumi.OutputState }

func (DataSetJoinKeyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetJoinKeyProperties)(nil)).Elem()
}

func (o DataSetJoinKeyPropertiesOutput) ToDataSetJoinKeyPropertiesOutput() DataSetJoinKeyPropertiesOutput {
	return o
}

func (o DataSetJoinKeyPropertiesOutput) ToDataSetJoinKeyPropertiesOutputWithContext(ctx context.Context) DataSetJoinKeyPropertiesOutput {
	return o
}

func (o DataSetJoinKeyPropertiesOutput) ToDataSetJoinKeyPropertiesPtrOutput() DataSetJoinKeyPropertiesPtrOutput {
	return o.ToDataSetJoinKeyPropertiesPtrOutputWithContext(context.Background())
}

func (o DataSetJoinKeyPropertiesOutput) ToDataSetJoinKeyPropertiesPtrOutputWithContext(ctx context.Context) DataSetJoinKeyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetJoinKeyProperties) *DataSetJoinKeyProperties {
		return &v
	}).(DataSetJoinKeyPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joinkeyproperties.html#cfn-quicksight-dataset-joinkeyproperties-uniquekey
func (o DataSetJoinKeyPropertiesOutput) UniqueKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSetJoinKeyProperties) *bool { return v.UniqueKey }).(pulumi.BoolPtrOutput)
}

type DataSetJoinKeyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataSetJoinKeyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetJoinKeyProperties)(nil)).Elem()
}

func (o DataSetJoinKeyPropertiesPtrOutput) ToDataSetJoinKeyPropertiesPtrOutput() DataSetJoinKeyPropertiesPtrOutput {
	return o
}

func (o DataSetJoinKeyPropertiesPtrOutput) ToDataSetJoinKeyPropertiesPtrOutputWithContext(ctx context.Context) DataSetJoinKeyPropertiesPtrOutput {
	return o
}

func (o DataSetJoinKeyPropertiesPtrOutput) Elem() DataSetJoinKeyPropertiesOutput {
	return o.ApplyT(func(v *DataSetJoinKeyProperties) DataSetJoinKeyProperties {
		if v != nil {
			return *v
		}
		var ret DataSetJoinKeyProperties
		return ret
	}).(DataSetJoinKeyPropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-joinkeyproperties.html#cfn-quicksight-dataset-joinkeyproperties-uniquekey
func (o DataSetJoinKeyPropertiesPtrOutput) UniqueKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSetJoinKeyProperties) *bool {
		if v == nil {
			return nil
		}
		return v.UniqueKey
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html
type DataSetLogicalTable struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html#cfn-quicksight-dataset-logicaltable-alias
	Alias string `pulumi:"alias"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html#cfn-quicksight-dataset-logicaltable-datatransforms
	DataTransforms []DataSetTransformOperation `pulumi:"dataTransforms"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html#cfn-quicksight-dataset-logicaltable-source
	Source DataSetLogicalTableSource `pulumi:"source"`
}

// DataSetLogicalTableInput is an input type that accepts DataSetLogicalTableArgs and DataSetLogicalTableOutput values.
// You can construct a concrete instance of `DataSetLogicalTableInput` via:
//
//          DataSetLogicalTableArgs{...}
type DataSetLogicalTableInput interface {
	pulumi.Input

	ToDataSetLogicalTableOutput() DataSetLogicalTableOutput
	ToDataSetLogicalTableOutputWithContext(context.Context) DataSetLogicalTableOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html
type DataSetLogicalTableArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html#cfn-quicksight-dataset-logicaltable-alias
	Alias pulumi.StringInput `pulumi:"alias"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html#cfn-quicksight-dataset-logicaltable-datatransforms
	DataTransforms DataSetTransformOperationArrayInput `pulumi:"dataTransforms"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html#cfn-quicksight-dataset-logicaltable-source
	Source DataSetLogicalTableSourceInput `pulumi:"source"`
}

func (DataSetLogicalTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetLogicalTable)(nil)).Elem()
}

func (i DataSetLogicalTableArgs) ToDataSetLogicalTableOutput() DataSetLogicalTableOutput {
	return i.ToDataSetLogicalTableOutputWithContext(context.Background())
}

func (i DataSetLogicalTableArgs) ToDataSetLogicalTableOutputWithContext(ctx context.Context) DataSetLogicalTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetLogicalTableOutput)
}

// DataSetLogicalTableMapInput is an input type that accepts DataSetLogicalTableMap and DataSetLogicalTableMapOutput values.
// You can construct a concrete instance of `DataSetLogicalTableMapInput` via:
//
//          DataSetLogicalTableMap{ "key": DataSetLogicalTableArgs{...} }
type DataSetLogicalTableMapInput interface {
	pulumi.Input

	ToDataSetLogicalTableMapOutput() DataSetLogicalTableMapOutput
	ToDataSetLogicalTableMapOutputWithContext(context.Context) DataSetLogicalTableMapOutput
}

type DataSetLogicalTableMap map[string]DataSetLogicalTableInput

func (DataSetLogicalTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataSetLogicalTable)(nil)).Elem()
}

func (i DataSetLogicalTableMap) ToDataSetLogicalTableMapOutput() DataSetLogicalTableMapOutput {
	return i.ToDataSetLogicalTableMapOutputWithContext(context.Background())
}

func (i DataSetLogicalTableMap) ToDataSetLogicalTableMapOutputWithContext(ctx context.Context) DataSetLogicalTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetLogicalTableMapOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html
type DataSetLogicalTableOutput struct{ *pulumi.OutputState }

func (DataSetLogicalTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetLogicalTable)(nil)).Elem()
}

func (o DataSetLogicalTableOutput) ToDataSetLogicalTableOutput() DataSetLogicalTableOutput {
	return o
}

func (o DataSetLogicalTableOutput) ToDataSetLogicalTableOutputWithContext(ctx context.Context) DataSetLogicalTableOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html#cfn-quicksight-dataset-logicaltable-alias
func (o DataSetLogicalTableOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetLogicalTable) string { return v.Alias }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html#cfn-quicksight-dataset-logicaltable-datatransforms
func (o DataSetLogicalTableOutput) DataTransforms() DataSetTransformOperationArrayOutput {
	return o.ApplyT(func(v DataSetLogicalTable) []DataSetTransformOperation { return v.DataTransforms }).(DataSetTransformOperationArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltable.html#cfn-quicksight-dataset-logicaltable-source
func (o DataSetLogicalTableOutput) Source() DataSetLogicalTableSourceOutput {
	return o.ApplyT(func(v DataSetLogicalTable) DataSetLogicalTableSource { return v.Source }).(DataSetLogicalTableSourceOutput)
}

type DataSetLogicalTableMapOutput struct{ *pulumi.OutputState }

func (DataSetLogicalTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataSetLogicalTable)(nil)).Elem()
}

func (o DataSetLogicalTableMapOutput) ToDataSetLogicalTableMapOutput() DataSetLogicalTableMapOutput {
	return o
}

func (o DataSetLogicalTableMapOutput) ToDataSetLogicalTableMapOutputWithContext(ctx context.Context) DataSetLogicalTableMapOutput {
	return o
}

func (o DataSetLogicalTableMapOutput) MapIndex(k pulumi.StringInput) DataSetLogicalTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DataSetLogicalTable {
		return vs[0].(map[string]DataSetLogicalTable)[vs[1].(string)]
	}).(DataSetLogicalTableOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltablesource.html
type DataSetLogicalTableSource struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltablesource.html#cfn-quicksight-dataset-logicaltablesource-joininstruction
	JoinInstruction *DataSetJoinInstruction `pulumi:"joinInstruction"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltablesource.html#cfn-quicksight-dataset-logicaltablesource-physicaltableid
	PhysicalTableId *string `pulumi:"physicalTableId"`
}

// DataSetLogicalTableSourceInput is an input type that accepts DataSetLogicalTableSourceArgs and DataSetLogicalTableSourceOutput values.
// You can construct a concrete instance of `DataSetLogicalTableSourceInput` via:
//
//          DataSetLogicalTableSourceArgs{...}
type DataSetLogicalTableSourceInput interface {
	pulumi.Input

	ToDataSetLogicalTableSourceOutput() DataSetLogicalTableSourceOutput
	ToDataSetLogicalTableSourceOutputWithContext(context.Context) DataSetLogicalTableSourceOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltablesource.html
type DataSetLogicalTableSourceArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltablesource.html#cfn-quicksight-dataset-logicaltablesource-joininstruction
	JoinInstruction DataSetJoinInstructionPtrInput `pulumi:"joinInstruction"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltablesource.html#cfn-quicksight-dataset-logicaltablesource-physicaltableid
	PhysicalTableId pulumi.StringPtrInput `pulumi:"physicalTableId"`
}

func (DataSetLogicalTableSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetLogicalTableSource)(nil)).Elem()
}

func (i DataSetLogicalTableSourceArgs) ToDataSetLogicalTableSourceOutput() DataSetLogicalTableSourceOutput {
	return i.ToDataSetLogicalTableSourceOutputWithContext(context.Background())
}

func (i DataSetLogicalTableSourceArgs) ToDataSetLogicalTableSourceOutputWithContext(ctx context.Context) DataSetLogicalTableSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetLogicalTableSourceOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltablesource.html
type DataSetLogicalTableSourceOutput struct{ *pulumi.OutputState }

func (DataSetLogicalTableSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetLogicalTableSource)(nil)).Elem()
}

func (o DataSetLogicalTableSourceOutput) ToDataSetLogicalTableSourceOutput() DataSetLogicalTableSourceOutput {
	return o
}

func (o DataSetLogicalTableSourceOutput) ToDataSetLogicalTableSourceOutputWithContext(ctx context.Context) DataSetLogicalTableSourceOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltablesource.html#cfn-quicksight-dataset-logicaltablesource-joininstruction
func (o DataSetLogicalTableSourceOutput) JoinInstruction() DataSetJoinInstructionPtrOutput {
	return o.ApplyT(func(v DataSetLogicalTableSource) *DataSetJoinInstruction { return v.JoinInstruction }).(DataSetJoinInstructionPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-logicaltablesource.html#cfn-quicksight-dataset-logicaltablesource-physicaltableid
func (o DataSetLogicalTableSourceOutput) PhysicalTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetLogicalTableSource) *string { return v.PhysicalTableId }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html
type DataSetOutputColumn struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html#cfn-quicksight-dataset-outputcolumn-description
	Description *string `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html#cfn-quicksight-dataset-outputcolumn-name
	Name *string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html#cfn-quicksight-dataset-outputcolumn-type
	Type *string `pulumi:"type"`
}

// DataSetOutputColumnInput is an input type that accepts DataSetOutputColumnArgs and DataSetOutputColumnOutput values.
// You can construct a concrete instance of `DataSetOutputColumnInput` via:
//
//          DataSetOutputColumnArgs{...}
type DataSetOutputColumnInput interface {
	pulumi.Input

	ToDataSetOutputColumnOutput() DataSetOutputColumnOutput
	ToDataSetOutputColumnOutputWithContext(context.Context) DataSetOutputColumnOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html
type DataSetOutputColumnArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html#cfn-quicksight-dataset-outputcolumn-description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html#cfn-quicksight-dataset-outputcolumn-name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html#cfn-quicksight-dataset-outputcolumn-type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DataSetOutputColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetOutputColumn)(nil)).Elem()
}

func (i DataSetOutputColumnArgs) ToDataSetOutputColumnOutput() DataSetOutputColumnOutput {
	return i.ToDataSetOutputColumnOutputWithContext(context.Background())
}

func (i DataSetOutputColumnArgs) ToDataSetOutputColumnOutputWithContext(ctx context.Context) DataSetOutputColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetOutputColumnOutput)
}

// DataSetOutputColumnArrayInput is an input type that accepts DataSetOutputColumnArray and DataSetOutputColumnArrayOutput values.
// You can construct a concrete instance of `DataSetOutputColumnArrayInput` via:
//
//          DataSetOutputColumnArray{ DataSetOutputColumnArgs{...} }
type DataSetOutputColumnArrayInput interface {
	pulumi.Input

	ToDataSetOutputColumnArrayOutput() DataSetOutputColumnArrayOutput
	ToDataSetOutputColumnArrayOutputWithContext(context.Context) DataSetOutputColumnArrayOutput
}

type DataSetOutputColumnArray []DataSetOutputColumnInput

func (DataSetOutputColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetOutputColumn)(nil)).Elem()
}

func (i DataSetOutputColumnArray) ToDataSetOutputColumnArrayOutput() DataSetOutputColumnArrayOutput {
	return i.ToDataSetOutputColumnArrayOutputWithContext(context.Background())
}

func (i DataSetOutputColumnArray) ToDataSetOutputColumnArrayOutputWithContext(ctx context.Context) DataSetOutputColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetOutputColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html
type DataSetOutputColumnOutput struct{ *pulumi.OutputState }

func (DataSetOutputColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetOutputColumn)(nil)).Elem()
}

func (o DataSetOutputColumnOutput) ToDataSetOutputColumnOutput() DataSetOutputColumnOutput {
	return o
}

func (o DataSetOutputColumnOutput) ToDataSetOutputColumnOutputWithContext(ctx context.Context) DataSetOutputColumnOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html#cfn-quicksight-dataset-outputcolumn-description
func (o DataSetOutputColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetOutputColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html#cfn-quicksight-dataset-outputcolumn-name
func (o DataSetOutputColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetOutputColumn) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-outputcolumn.html#cfn-quicksight-dataset-outputcolumn-type
func (o DataSetOutputColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetOutputColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataSetOutputColumnArrayOutput struct{ *pulumi.OutputState }

func (DataSetOutputColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetOutputColumn)(nil)).Elem()
}

func (o DataSetOutputColumnArrayOutput) ToDataSetOutputColumnArrayOutput() DataSetOutputColumnArrayOutput {
	return o
}

func (o DataSetOutputColumnArrayOutput) ToDataSetOutputColumnArrayOutputWithContext(ctx context.Context) DataSetOutputColumnArrayOutput {
	return o
}

func (o DataSetOutputColumnArrayOutput) Index(i pulumi.IntInput) DataSetOutputColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetOutputColumn {
		return vs[0].([]DataSetOutputColumn)[vs[1].(int)]
	}).(DataSetOutputColumnOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html
type DataSetPhysicalTable struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html#cfn-quicksight-dataset-physicaltable-customsql
	CustomSql *DataSetCustomSql `pulumi:"customSql"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html#cfn-quicksight-dataset-physicaltable-relationaltable
	RelationalTable *DataSetRelationalTable `pulumi:"relationalTable"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html#cfn-quicksight-dataset-physicaltable-s3source
	S3Source *DataSetS3Source `pulumi:"s3Source"`
}

// DataSetPhysicalTableInput is an input type that accepts DataSetPhysicalTableArgs and DataSetPhysicalTableOutput values.
// You can construct a concrete instance of `DataSetPhysicalTableInput` via:
//
//          DataSetPhysicalTableArgs{...}
type DataSetPhysicalTableInput interface {
	pulumi.Input

	ToDataSetPhysicalTableOutput() DataSetPhysicalTableOutput
	ToDataSetPhysicalTableOutputWithContext(context.Context) DataSetPhysicalTableOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html
type DataSetPhysicalTableArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html#cfn-quicksight-dataset-physicaltable-customsql
	CustomSql DataSetCustomSqlPtrInput `pulumi:"customSql"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html#cfn-quicksight-dataset-physicaltable-relationaltable
	RelationalTable DataSetRelationalTablePtrInput `pulumi:"relationalTable"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html#cfn-quicksight-dataset-physicaltable-s3source
	S3Source DataSetS3SourcePtrInput `pulumi:"s3Source"`
}

func (DataSetPhysicalTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetPhysicalTable)(nil)).Elem()
}

func (i DataSetPhysicalTableArgs) ToDataSetPhysicalTableOutput() DataSetPhysicalTableOutput {
	return i.ToDataSetPhysicalTableOutputWithContext(context.Background())
}

func (i DataSetPhysicalTableArgs) ToDataSetPhysicalTableOutputWithContext(ctx context.Context) DataSetPhysicalTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetPhysicalTableOutput)
}

// DataSetPhysicalTableMapInput is an input type that accepts DataSetPhysicalTableMap and DataSetPhysicalTableMapOutput values.
// You can construct a concrete instance of `DataSetPhysicalTableMapInput` via:
//
//          DataSetPhysicalTableMap{ "key": DataSetPhysicalTableArgs{...} }
type DataSetPhysicalTableMapInput interface {
	pulumi.Input

	ToDataSetPhysicalTableMapOutput() DataSetPhysicalTableMapOutput
	ToDataSetPhysicalTableMapOutputWithContext(context.Context) DataSetPhysicalTableMapOutput
}

type DataSetPhysicalTableMap map[string]DataSetPhysicalTableInput

func (DataSetPhysicalTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataSetPhysicalTable)(nil)).Elem()
}

func (i DataSetPhysicalTableMap) ToDataSetPhysicalTableMapOutput() DataSetPhysicalTableMapOutput {
	return i.ToDataSetPhysicalTableMapOutputWithContext(context.Background())
}

func (i DataSetPhysicalTableMap) ToDataSetPhysicalTableMapOutputWithContext(ctx context.Context) DataSetPhysicalTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetPhysicalTableMapOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html
type DataSetPhysicalTableOutput struct{ *pulumi.OutputState }

func (DataSetPhysicalTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetPhysicalTable)(nil)).Elem()
}

func (o DataSetPhysicalTableOutput) ToDataSetPhysicalTableOutput() DataSetPhysicalTableOutput {
	return o
}

func (o DataSetPhysicalTableOutput) ToDataSetPhysicalTableOutputWithContext(ctx context.Context) DataSetPhysicalTableOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html#cfn-quicksight-dataset-physicaltable-customsql
func (o DataSetPhysicalTableOutput) CustomSql() DataSetCustomSqlPtrOutput {
	return o.ApplyT(func(v DataSetPhysicalTable) *DataSetCustomSql { return v.CustomSql }).(DataSetCustomSqlPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html#cfn-quicksight-dataset-physicaltable-relationaltable
func (o DataSetPhysicalTableOutput) RelationalTable() DataSetRelationalTablePtrOutput {
	return o.ApplyT(func(v DataSetPhysicalTable) *DataSetRelationalTable { return v.RelationalTable }).(DataSetRelationalTablePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-physicaltable.html#cfn-quicksight-dataset-physicaltable-s3source
func (o DataSetPhysicalTableOutput) S3Source() DataSetS3SourcePtrOutput {
	return o.ApplyT(func(v DataSetPhysicalTable) *DataSetS3Source { return v.S3Source }).(DataSetS3SourcePtrOutput)
}

type DataSetPhysicalTableMapOutput struct{ *pulumi.OutputState }

func (DataSetPhysicalTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataSetPhysicalTable)(nil)).Elem()
}

func (o DataSetPhysicalTableMapOutput) ToDataSetPhysicalTableMapOutput() DataSetPhysicalTableMapOutput {
	return o
}

func (o DataSetPhysicalTableMapOutput) ToDataSetPhysicalTableMapOutputWithContext(ctx context.Context) DataSetPhysicalTableMapOutput {
	return o
}

func (o DataSetPhysicalTableMapOutput) MapIndex(k pulumi.StringInput) DataSetPhysicalTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DataSetPhysicalTable {
		return vs[0].(map[string]DataSetPhysicalTable)[vs[1].(string)]
	}).(DataSetPhysicalTableOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-projectoperation.html
type DataSetProjectOperation struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-projectoperation.html#cfn-quicksight-dataset-projectoperation-projectedcolumns
	ProjectedColumns []string `pulumi:"projectedColumns"`
}

// DataSetProjectOperationInput is an input type that accepts DataSetProjectOperationArgs and DataSetProjectOperationOutput values.
// You can construct a concrete instance of `DataSetProjectOperationInput` via:
//
//          DataSetProjectOperationArgs{...}
type DataSetProjectOperationInput interface {
	pulumi.Input

	ToDataSetProjectOperationOutput() DataSetProjectOperationOutput
	ToDataSetProjectOperationOutputWithContext(context.Context) DataSetProjectOperationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-projectoperation.html
type DataSetProjectOperationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-projectoperation.html#cfn-quicksight-dataset-projectoperation-projectedcolumns
	ProjectedColumns pulumi.StringArrayInput `pulumi:"projectedColumns"`
}

func (DataSetProjectOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetProjectOperation)(nil)).Elem()
}

func (i DataSetProjectOperationArgs) ToDataSetProjectOperationOutput() DataSetProjectOperationOutput {
	return i.ToDataSetProjectOperationOutputWithContext(context.Background())
}

func (i DataSetProjectOperationArgs) ToDataSetProjectOperationOutputWithContext(ctx context.Context) DataSetProjectOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetProjectOperationOutput)
}

func (i DataSetProjectOperationArgs) ToDataSetProjectOperationPtrOutput() DataSetProjectOperationPtrOutput {
	return i.ToDataSetProjectOperationPtrOutputWithContext(context.Background())
}

func (i DataSetProjectOperationArgs) ToDataSetProjectOperationPtrOutputWithContext(ctx context.Context) DataSetProjectOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetProjectOperationOutput).ToDataSetProjectOperationPtrOutputWithContext(ctx)
}

// DataSetProjectOperationPtrInput is an input type that accepts DataSetProjectOperationArgs, DataSetProjectOperationPtr and DataSetProjectOperationPtrOutput values.
// You can construct a concrete instance of `DataSetProjectOperationPtrInput` via:
//
//          DataSetProjectOperationArgs{...}
//
//  or:
//
//          nil
type DataSetProjectOperationPtrInput interface {
	pulumi.Input

	ToDataSetProjectOperationPtrOutput() DataSetProjectOperationPtrOutput
	ToDataSetProjectOperationPtrOutputWithContext(context.Context) DataSetProjectOperationPtrOutput
}

type dataSetProjectOperationPtrType DataSetProjectOperationArgs

func DataSetProjectOperationPtr(v *DataSetProjectOperationArgs) DataSetProjectOperationPtrInput {
	return (*dataSetProjectOperationPtrType)(v)
}

func (*dataSetProjectOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetProjectOperation)(nil)).Elem()
}

func (i *dataSetProjectOperationPtrType) ToDataSetProjectOperationPtrOutput() DataSetProjectOperationPtrOutput {
	return i.ToDataSetProjectOperationPtrOutputWithContext(context.Background())
}

func (i *dataSetProjectOperationPtrType) ToDataSetProjectOperationPtrOutputWithContext(ctx context.Context) DataSetProjectOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetProjectOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-projectoperation.html
type DataSetProjectOperationOutput struct{ *pulumi.OutputState }

func (DataSetProjectOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetProjectOperation)(nil)).Elem()
}

func (o DataSetProjectOperationOutput) ToDataSetProjectOperationOutput() DataSetProjectOperationOutput {
	return o
}

func (o DataSetProjectOperationOutput) ToDataSetProjectOperationOutputWithContext(ctx context.Context) DataSetProjectOperationOutput {
	return o
}

func (o DataSetProjectOperationOutput) ToDataSetProjectOperationPtrOutput() DataSetProjectOperationPtrOutput {
	return o.ToDataSetProjectOperationPtrOutputWithContext(context.Background())
}

func (o DataSetProjectOperationOutput) ToDataSetProjectOperationPtrOutputWithContext(ctx context.Context) DataSetProjectOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetProjectOperation) *DataSetProjectOperation {
		return &v
	}).(DataSetProjectOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-projectoperation.html#cfn-quicksight-dataset-projectoperation-projectedcolumns
func (o DataSetProjectOperationOutput) ProjectedColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetProjectOperation) []string { return v.ProjectedColumns }).(pulumi.StringArrayOutput)
}

type DataSetProjectOperationPtrOutput struct{ *pulumi.OutputState }

func (DataSetProjectOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetProjectOperation)(nil)).Elem()
}

func (o DataSetProjectOperationPtrOutput) ToDataSetProjectOperationPtrOutput() DataSetProjectOperationPtrOutput {
	return o
}

func (o DataSetProjectOperationPtrOutput) ToDataSetProjectOperationPtrOutputWithContext(ctx context.Context) DataSetProjectOperationPtrOutput {
	return o
}

func (o DataSetProjectOperationPtrOutput) Elem() DataSetProjectOperationOutput {
	return o.ApplyT(func(v *DataSetProjectOperation) DataSetProjectOperation {
		if v != nil {
			return *v
		}
		var ret DataSetProjectOperation
		return ret
	}).(DataSetProjectOperationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-projectoperation.html#cfn-quicksight-dataset-projectoperation-projectedcolumns
func (o DataSetProjectOperationPtrOutput) ProjectedColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataSetProjectOperation) []string {
		if v == nil {
			return nil
		}
		return v.ProjectedColumns
	}).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html
type DataSetRelationalTable struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-catalog
	Catalog *string `pulumi:"catalog"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-datasourcearn
	DataSourceArn string `pulumi:"dataSourceArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-inputcolumns
	InputColumns []DataSetInputColumn `pulumi:"inputColumns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-schema
	Schema *string `pulumi:"schema"`
}

// DataSetRelationalTableInput is an input type that accepts DataSetRelationalTableArgs and DataSetRelationalTableOutput values.
// You can construct a concrete instance of `DataSetRelationalTableInput` via:
//
//          DataSetRelationalTableArgs{...}
type DataSetRelationalTableInput interface {
	pulumi.Input

	ToDataSetRelationalTableOutput() DataSetRelationalTableOutput
	ToDataSetRelationalTableOutputWithContext(context.Context) DataSetRelationalTableOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html
type DataSetRelationalTableArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-catalog
	Catalog pulumi.StringPtrInput `pulumi:"catalog"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-datasourcearn
	DataSourceArn pulumi.StringInput `pulumi:"dataSourceArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-inputcolumns
	InputColumns DataSetInputColumnArrayInput `pulumi:"inputColumns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-schema
	Schema pulumi.StringPtrInput `pulumi:"schema"`
}

func (DataSetRelationalTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRelationalTable)(nil)).Elem()
}

func (i DataSetRelationalTableArgs) ToDataSetRelationalTableOutput() DataSetRelationalTableOutput {
	return i.ToDataSetRelationalTableOutputWithContext(context.Background())
}

func (i DataSetRelationalTableArgs) ToDataSetRelationalTableOutputWithContext(ctx context.Context) DataSetRelationalTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRelationalTableOutput)
}

func (i DataSetRelationalTableArgs) ToDataSetRelationalTablePtrOutput() DataSetRelationalTablePtrOutput {
	return i.ToDataSetRelationalTablePtrOutputWithContext(context.Background())
}

func (i DataSetRelationalTableArgs) ToDataSetRelationalTablePtrOutputWithContext(ctx context.Context) DataSetRelationalTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRelationalTableOutput).ToDataSetRelationalTablePtrOutputWithContext(ctx)
}

// DataSetRelationalTablePtrInput is an input type that accepts DataSetRelationalTableArgs, DataSetRelationalTablePtr and DataSetRelationalTablePtrOutput values.
// You can construct a concrete instance of `DataSetRelationalTablePtrInput` via:
//
//          DataSetRelationalTableArgs{...}
//
//  or:
//
//          nil
type DataSetRelationalTablePtrInput interface {
	pulumi.Input

	ToDataSetRelationalTablePtrOutput() DataSetRelationalTablePtrOutput
	ToDataSetRelationalTablePtrOutputWithContext(context.Context) DataSetRelationalTablePtrOutput
}

type dataSetRelationalTablePtrType DataSetRelationalTableArgs

func DataSetRelationalTablePtr(v *DataSetRelationalTableArgs) DataSetRelationalTablePtrInput {
	return (*dataSetRelationalTablePtrType)(v)
}

func (*dataSetRelationalTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRelationalTable)(nil)).Elem()
}

func (i *dataSetRelationalTablePtrType) ToDataSetRelationalTablePtrOutput() DataSetRelationalTablePtrOutput {
	return i.ToDataSetRelationalTablePtrOutputWithContext(context.Background())
}

func (i *dataSetRelationalTablePtrType) ToDataSetRelationalTablePtrOutputWithContext(ctx context.Context) DataSetRelationalTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRelationalTablePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html
type DataSetRelationalTableOutput struct{ *pulumi.OutputState }

func (DataSetRelationalTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRelationalTable)(nil)).Elem()
}

func (o DataSetRelationalTableOutput) ToDataSetRelationalTableOutput() DataSetRelationalTableOutput {
	return o
}

func (o DataSetRelationalTableOutput) ToDataSetRelationalTableOutputWithContext(ctx context.Context) DataSetRelationalTableOutput {
	return o
}

func (o DataSetRelationalTableOutput) ToDataSetRelationalTablePtrOutput() DataSetRelationalTablePtrOutput {
	return o.ToDataSetRelationalTablePtrOutputWithContext(context.Background())
}

func (o DataSetRelationalTableOutput) ToDataSetRelationalTablePtrOutputWithContext(ctx context.Context) DataSetRelationalTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRelationalTable) *DataSetRelationalTable {
		return &v
	}).(DataSetRelationalTablePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-catalog
func (o DataSetRelationalTableOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetRelationalTable) *string { return v.Catalog }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-datasourcearn
func (o DataSetRelationalTableOutput) DataSourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetRelationalTable) string { return v.DataSourceArn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-inputcolumns
func (o DataSetRelationalTableOutput) InputColumns() DataSetInputColumnArrayOutput {
	return o.ApplyT(func(v DataSetRelationalTable) []DataSetInputColumn { return v.InputColumns }).(DataSetInputColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-name
func (o DataSetRelationalTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetRelationalTable) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-schema
func (o DataSetRelationalTableOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetRelationalTable) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

type DataSetRelationalTablePtrOutput struct{ *pulumi.OutputState }

func (DataSetRelationalTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRelationalTable)(nil)).Elem()
}

func (o DataSetRelationalTablePtrOutput) ToDataSetRelationalTablePtrOutput() DataSetRelationalTablePtrOutput {
	return o
}

func (o DataSetRelationalTablePtrOutput) ToDataSetRelationalTablePtrOutputWithContext(ctx context.Context) DataSetRelationalTablePtrOutput {
	return o
}

func (o DataSetRelationalTablePtrOutput) Elem() DataSetRelationalTableOutput {
	return o.ApplyT(func(v *DataSetRelationalTable) DataSetRelationalTable {
		if v != nil {
			return *v
		}
		var ret DataSetRelationalTable
		return ret
	}).(DataSetRelationalTableOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-catalog
func (o DataSetRelationalTablePtrOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRelationalTable) *string {
		if v == nil {
			return nil
		}
		return v.Catalog
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-datasourcearn
func (o DataSetRelationalTablePtrOutput) DataSourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRelationalTable) *string {
		if v == nil {
			return nil
		}
		return &v.DataSourceArn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-inputcolumns
func (o DataSetRelationalTablePtrOutput) InputColumns() DataSetInputColumnArrayOutput {
	return o.ApplyT(func(v *DataSetRelationalTable) []DataSetInputColumn {
		if v == nil {
			return nil
		}
		return v.InputColumns
	}).(DataSetInputColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-name
func (o DataSetRelationalTablePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRelationalTable) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-relationaltable.html#cfn-quicksight-dataset-relationaltable-schema
func (o DataSetRelationalTablePtrOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRelationalTable) *string {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html
type DataSetRenameColumnOperation struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html#cfn-quicksight-dataset-renamecolumnoperation-columnname
	ColumnName string `pulumi:"columnName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html#cfn-quicksight-dataset-renamecolumnoperation-newcolumnname
	NewColumnName string `pulumi:"newColumnName"`
}

// DataSetRenameColumnOperationInput is an input type that accepts DataSetRenameColumnOperationArgs and DataSetRenameColumnOperationOutput values.
// You can construct a concrete instance of `DataSetRenameColumnOperationInput` via:
//
//          DataSetRenameColumnOperationArgs{...}
type DataSetRenameColumnOperationInput interface {
	pulumi.Input

	ToDataSetRenameColumnOperationOutput() DataSetRenameColumnOperationOutput
	ToDataSetRenameColumnOperationOutputWithContext(context.Context) DataSetRenameColumnOperationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html
type DataSetRenameColumnOperationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html#cfn-quicksight-dataset-renamecolumnoperation-columnname
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html#cfn-quicksight-dataset-renamecolumnoperation-newcolumnname
	NewColumnName pulumi.StringInput `pulumi:"newColumnName"`
}

func (DataSetRenameColumnOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRenameColumnOperation)(nil)).Elem()
}

func (i DataSetRenameColumnOperationArgs) ToDataSetRenameColumnOperationOutput() DataSetRenameColumnOperationOutput {
	return i.ToDataSetRenameColumnOperationOutputWithContext(context.Background())
}

func (i DataSetRenameColumnOperationArgs) ToDataSetRenameColumnOperationOutputWithContext(ctx context.Context) DataSetRenameColumnOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRenameColumnOperationOutput)
}

func (i DataSetRenameColumnOperationArgs) ToDataSetRenameColumnOperationPtrOutput() DataSetRenameColumnOperationPtrOutput {
	return i.ToDataSetRenameColumnOperationPtrOutputWithContext(context.Background())
}

func (i DataSetRenameColumnOperationArgs) ToDataSetRenameColumnOperationPtrOutputWithContext(ctx context.Context) DataSetRenameColumnOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRenameColumnOperationOutput).ToDataSetRenameColumnOperationPtrOutputWithContext(ctx)
}

// DataSetRenameColumnOperationPtrInput is an input type that accepts DataSetRenameColumnOperationArgs, DataSetRenameColumnOperationPtr and DataSetRenameColumnOperationPtrOutput values.
// You can construct a concrete instance of `DataSetRenameColumnOperationPtrInput` via:
//
//          DataSetRenameColumnOperationArgs{...}
//
//  or:
//
//          nil
type DataSetRenameColumnOperationPtrInput interface {
	pulumi.Input

	ToDataSetRenameColumnOperationPtrOutput() DataSetRenameColumnOperationPtrOutput
	ToDataSetRenameColumnOperationPtrOutputWithContext(context.Context) DataSetRenameColumnOperationPtrOutput
}

type dataSetRenameColumnOperationPtrType DataSetRenameColumnOperationArgs

func DataSetRenameColumnOperationPtr(v *DataSetRenameColumnOperationArgs) DataSetRenameColumnOperationPtrInput {
	return (*dataSetRenameColumnOperationPtrType)(v)
}

func (*dataSetRenameColumnOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRenameColumnOperation)(nil)).Elem()
}

func (i *dataSetRenameColumnOperationPtrType) ToDataSetRenameColumnOperationPtrOutput() DataSetRenameColumnOperationPtrOutput {
	return i.ToDataSetRenameColumnOperationPtrOutputWithContext(context.Background())
}

func (i *dataSetRenameColumnOperationPtrType) ToDataSetRenameColumnOperationPtrOutputWithContext(ctx context.Context) DataSetRenameColumnOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRenameColumnOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html
type DataSetRenameColumnOperationOutput struct{ *pulumi.OutputState }

func (DataSetRenameColumnOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRenameColumnOperation)(nil)).Elem()
}

func (o DataSetRenameColumnOperationOutput) ToDataSetRenameColumnOperationOutput() DataSetRenameColumnOperationOutput {
	return o
}

func (o DataSetRenameColumnOperationOutput) ToDataSetRenameColumnOperationOutputWithContext(ctx context.Context) DataSetRenameColumnOperationOutput {
	return o
}

func (o DataSetRenameColumnOperationOutput) ToDataSetRenameColumnOperationPtrOutput() DataSetRenameColumnOperationPtrOutput {
	return o.ToDataSetRenameColumnOperationPtrOutputWithContext(context.Background())
}

func (o DataSetRenameColumnOperationOutput) ToDataSetRenameColumnOperationPtrOutputWithContext(ctx context.Context) DataSetRenameColumnOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRenameColumnOperation) *DataSetRenameColumnOperation {
		return &v
	}).(DataSetRenameColumnOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html#cfn-quicksight-dataset-renamecolumnoperation-columnname
func (o DataSetRenameColumnOperationOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetRenameColumnOperation) string { return v.ColumnName }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html#cfn-quicksight-dataset-renamecolumnoperation-newcolumnname
func (o DataSetRenameColumnOperationOutput) NewColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetRenameColumnOperation) string { return v.NewColumnName }).(pulumi.StringOutput)
}

type DataSetRenameColumnOperationPtrOutput struct{ *pulumi.OutputState }

func (DataSetRenameColumnOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRenameColumnOperation)(nil)).Elem()
}

func (o DataSetRenameColumnOperationPtrOutput) ToDataSetRenameColumnOperationPtrOutput() DataSetRenameColumnOperationPtrOutput {
	return o
}

func (o DataSetRenameColumnOperationPtrOutput) ToDataSetRenameColumnOperationPtrOutputWithContext(ctx context.Context) DataSetRenameColumnOperationPtrOutput {
	return o
}

func (o DataSetRenameColumnOperationPtrOutput) Elem() DataSetRenameColumnOperationOutput {
	return o.ApplyT(func(v *DataSetRenameColumnOperation) DataSetRenameColumnOperation {
		if v != nil {
			return *v
		}
		var ret DataSetRenameColumnOperation
		return ret
	}).(DataSetRenameColumnOperationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html#cfn-quicksight-dataset-renamecolumnoperation-columnname
func (o DataSetRenameColumnOperationPtrOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRenameColumnOperation) *string {
		if v == nil {
			return nil
		}
		return &v.ColumnName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-renamecolumnoperation.html#cfn-quicksight-dataset-renamecolumnoperation-newcolumnname
func (o DataSetRenameColumnOperationPtrOutput) NewColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRenameColumnOperation) *string {
		if v == nil {
			return nil
		}
		return &v.NewColumnName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-resourcepermission.html
type DataSetResourcePermission struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-resourcepermission.html#cfn-quicksight-dataset-resourcepermission-actions
	Actions []string `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-resourcepermission.html#cfn-quicksight-dataset-resourcepermission-principal
	Principal string `pulumi:"principal"`
}

// DataSetResourcePermissionInput is an input type that accepts DataSetResourcePermissionArgs and DataSetResourcePermissionOutput values.
// You can construct a concrete instance of `DataSetResourcePermissionInput` via:
//
//          DataSetResourcePermissionArgs{...}
type DataSetResourcePermissionInput interface {
	pulumi.Input

	ToDataSetResourcePermissionOutput() DataSetResourcePermissionOutput
	ToDataSetResourcePermissionOutputWithContext(context.Context) DataSetResourcePermissionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-resourcepermission.html
type DataSetResourcePermissionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-resourcepermission.html#cfn-quicksight-dataset-resourcepermission-actions
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-resourcepermission.html#cfn-quicksight-dataset-resourcepermission-principal
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (DataSetResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetResourcePermission)(nil)).Elem()
}

func (i DataSetResourcePermissionArgs) ToDataSetResourcePermissionOutput() DataSetResourcePermissionOutput {
	return i.ToDataSetResourcePermissionOutputWithContext(context.Background())
}

func (i DataSetResourcePermissionArgs) ToDataSetResourcePermissionOutputWithContext(ctx context.Context) DataSetResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetResourcePermissionOutput)
}

// DataSetResourcePermissionArrayInput is an input type that accepts DataSetResourcePermissionArray and DataSetResourcePermissionArrayOutput values.
// You can construct a concrete instance of `DataSetResourcePermissionArrayInput` via:
//
//          DataSetResourcePermissionArray{ DataSetResourcePermissionArgs{...} }
type DataSetResourcePermissionArrayInput interface {
	pulumi.Input

	ToDataSetResourcePermissionArrayOutput() DataSetResourcePermissionArrayOutput
	ToDataSetResourcePermissionArrayOutputWithContext(context.Context) DataSetResourcePermissionArrayOutput
}

type DataSetResourcePermissionArray []DataSetResourcePermissionInput

func (DataSetResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetResourcePermission)(nil)).Elem()
}

func (i DataSetResourcePermissionArray) ToDataSetResourcePermissionArrayOutput() DataSetResourcePermissionArrayOutput {
	return i.ToDataSetResourcePermissionArrayOutputWithContext(context.Background())
}

func (i DataSetResourcePermissionArray) ToDataSetResourcePermissionArrayOutputWithContext(ctx context.Context) DataSetResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetResourcePermissionArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-resourcepermission.html
type DataSetResourcePermissionOutput struct{ *pulumi.OutputState }

func (DataSetResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetResourcePermission)(nil)).Elem()
}

func (o DataSetResourcePermissionOutput) ToDataSetResourcePermissionOutput() DataSetResourcePermissionOutput {
	return o
}

func (o DataSetResourcePermissionOutput) ToDataSetResourcePermissionOutputWithContext(ctx context.Context) DataSetResourcePermissionOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-resourcepermission.html#cfn-quicksight-dataset-resourcepermission-actions
func (o DataSetResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-resourcepermission.html#cfn-quicksight-dataset-resourcepermission-principal
func (o DataSetResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

type DataSetResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (DataSetResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetResourcePermission)(nil)).Elem()
}

func (o DataSetResourcePermissionArrayOutput) ToDataSetResourcePermissionArrayOutput() DataSetResourcePermissionArrayOutput {
	return o
}

func (o DataSetResourcePermissionArrayOutput) ToDataSetResourcePermissionArrayOutputWithContext(ctx context.Context) DataSetResourcePermissionArrayOutput {
	return o
}

func (o DataSetResourcePermissionArrayOutput) Index(i pulumi.IntInput) DataSetResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetResourcePermission {
		return vs[0].([]DataSetResourcePermission)[vs[1].(int)]
	}).(DataSetResourcePermissionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html
type DataSetRowLevelPermissionDataSet struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-arn
	Arn string `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-formatversion
	FormatVersion *string `pulumi:"formatVersion"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-namespace
	Namespace *string `pulumi:"namespace"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-permissionpolicy
	PermissionPolicy string `pulumi:"permissionPolicy"`
}

// DataSetRowLevelPermissionDataSetInput is an input type that accepts DataSetRowLevelPermissionDataSetArgs and DataSetRowLevelPermissionDataSetOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionDataSetInput` via:
//
//          DataSetRowLevelPermissionDataSetArgs{...}
type DataSetRowLevelPermissionDataSetInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionDataSetOutput() DataSetRowLevelPermissionDataSetOutput
	ToDataSetRowLevelPermissionDataSetOutputWithContext(context.Context) DataSetRowLevelPermissionDataSetOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html
type DataSetRowLevelPermissionDataSetArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-arn
	Arn pulumi.StringInput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-formatversion
	FormatVersion pulumi.StringPtrInput `pulumi:"formatVersion"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-namespace
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-permissionpolicy
	PermissionPolicy pulumi.StringInput `pulumi:"permissionPolicy"`
}

func (DataSetRowLevelPermissionDataSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionDataSet)(nil)).Elem()
}

func (i DataSetRowLevelPermissionDataSetArgs) ToDataSetRowLevelPermissionDataSetOutput() DataSetRowLevelPermissionDataSetOutput {
	return i.ToDataSetRowLevelPermissionDataSetOutputWithContext(context.Background())
}

func (i DataSetRowLevelPermissionDataSetArgs) ToDataSetRowLevelPermissionDataSetOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionDataSetOutput)
}

func (i DataSetRowLevelPermissionDataSetArgs) ToDataSetRowLevelPermissionDataSetPtrOutput() DataSetRowLevelPermissionDataSetPtrOutput {
	return i.ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(context.Background())
}

func (i DataSetRowLevelPermissionDataSetArgs) ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionDataSetOutput).ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(ctx)
}

// DataSetRowLevelPermissionDataSetPtrInput is an input type that accepts DataSetRowLevelPermissionDataSetArgs, DataSetRowLevelPermissionDataSetPtr and DataSetRowLevelPermissionDataSetPtrOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionDataSetPtrInput` via:
//
//          DataSetRowLevelPermissionDataSetArgs{...}
//
//  or:
//
//          nil
type DataSetRowLevelPermissionDataSetPtrInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionDataSetPtrOutput() DataSetRowLevelPermissionDataSetPtrOutput
	ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(context.Context) DataSetRowLevelPermissionDataSetPtrOutput
}

type dataSetRowLevelPermissionDataSetPtrType DataSetRowLevelPermissionDataSetArgs

func DataSetRowLevelPermissionDataSetPtr(v *DataSetRowLevelPermissionDataSetArgs) DataSetRowLevelPermissionDataSetPtrInput {
	return (*dataSetRowLevelPermissionDataSetPtrType)(v)
}

func (*dataSetRowLevelPermissionDataSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionDataSet)(nil)).Elem()
}

func (i *dataSetRowLevelPermissionDataSetPtrType) ToDataSetRowLevelPermissionDataSetPtrOutput() DataSetRowLevelPermissionDataSetPtrOutput {
	return i.ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(context.Background())
}

func (i *dataSetRowLevelPermissionDataSetPtrType) ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionDataSetPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html
type DataSetRowLevelPermissionDataSetOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionDataSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionDataSet)(nil)).Elem()
}

func (o DataSetRowLevelPermissionDataSetOutput) ToDataSetRowLevelPermissionDataSetOutput() DataSetRowLevelPermissionDataSetOutput {
	return o
}

func (o DataSetRowLevelPermissionDataSetOutput) ToDataSetRowLevelPermissionDataSetOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetOutput {
	return o
}

func (o DataSetRowLevelPermissionDataSetOutput) ToDataSetRowLevelPermissionDataSetPtrOutput() DataSetRowLevelPermissionDataSetPtrOutput {
	return o.ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionDataSetOutput) ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRowLevelPermissionDataSet) *DataSetRowLevelPermissionDataSet {
		return &v
	}).(DataSetRowLevelPermissionDataSetPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-arn
func (o DataSetRowLevelPermissionDataSetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionDataSet) string { return v.Arn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-formatversion
func (o DataSetRowLevelPermissionDataSetOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionDataSet) *string { return v.FormatVersion }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-namespace
func (o DataSetRowLevelPermissionDataSetOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionDataSet) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-permissionpolicy
func (o DataSetRowLevelPermissionDataSetOutput) PermissionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionDataSet) string { return v.PermissionPolicy }).(pulumi.StringOutput)
}

type DataSetRowLevelPermissionDataSetPtrOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionDataSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionDataSet)(nil)).Elem()
}

func (o DataSetRowLevelPermissionDataSetPtrOutput) ToDataSetRowLevelPermissionDataSetPtrOutput() DataSetRowLevelPermissionDataSetPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionDataSetPtrOutput) ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionDataSetPtrOutput) Elem() DataSetRowLevelPermissionDataSetOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionDataSet) DataSetRowLevelPermissionDataSet {
		if v != nil {
			return *v
		}
		var ret DataSetRowLevelPermissionDataSet
		return ret
	}).(DataSetRowLevelPermissionDataSetOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-arn
func (o DataSetRowLevelPermissionDataSetPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionDataSet) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-formatversion
func (o DataSetRowLevelPermissionDataSetPtrOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionDataSet) *string {
		if v == nil {
			return nil
		}
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-namespace
func (o DataSetRowLevelPermissionDataSetPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionDataSet) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-rowlevelpermissiondataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset-permissionpolicy
func (o DataSetRowLevelPermissionDataSetPtrOutput) PermissionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionDataSet) *string {
		if v == nil {
			return nil
		}
		return &v.PermissionPolicy
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html
type DataSetS3Source struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-datasourcearn
	DataSourceArn string `pulumi:"dataSourceArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-inputcolumns
	InputColumns []DataSetInputColumn `pulumi:"inputColumns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-uploadsettings
	UploadSettings *DataSetUploadSettings `pulumi:"uploadSettings"`
}

// DataSetS3SourceInput is an input type that accepts DataSetS3SourceArgs and DataSetS3SourceOutput values.
// You can construct a concrete instance of `DataSetS3SourceInput` via:
//
//          DataSetS3SourceArgs{...}
type DataSetS3SourceInput interface {
	pulumi.Input

	ToDataSetS3SourceOutput() DataSetS3SourceOutput
	ToDataSetS3SourceOutputWithContext(context.Context) DataSetS3SourceOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html
type DataSetS3SourceArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-datasourcearn
	DataSourceArn pulumi.StringInput `pulumi:"dataSourceArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-inputcolumns
	InputColumns DataSetInputColumnArrayInput `pulumi:"inputColumns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-uploadsettings
	UploadSettings DataSetUploadSettingsPtrInput `pulumi:"uploadSettings"`
}

func (DataSetS3SourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetS3Source)(nil)).Elem()
}

func (i DataSetS3SourceArgs) ToDataSetS3SourceOutput() DataSetS3SourceOutput {
	return i.ToDataSetS3SourceOutputWithContext(context.Background())
}

func (i DataSetS3SourceArgs) ToDataSetS3SourceOutputWithContext(ctx context.Context) DataSetS3SourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetS3SourceOutput)
}

func (i DataSetS3SourceArgs) ToDataSetS3SourcePtrOutput() DataSetS3SourcePtrOutput {
	return i.ToDataSetS3SourcePtrOutputWithContext(context.Background())
}

func (i DataSetS3SourceArgs) ToDataSetS3SourcePtrOutputWithContext(ctx context.Context) DataSetS3SourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetS3SourceOutput).ToDataSetS3SourcePtrOutputWithContext(ctx)
}

// DataSetS3SourcePtrInput is an input type that accepts DataSetS3SourceArgs, DataSetS3SourcePtr and DataSetS3SourcePtrOutput values.
// You can construct a concrete instance of `DataSetS3SourcePtrInput` via:
//
//          DataSetS3SourceArgs{...}
//
//  or:
//
//          nil
type DataSetS3SourcePtrInput interface {
	pulumi.Input

	ToDataSetS3SourcePtrOutput() DataSetS3SourcePtrOutput
	ToDataSetS3SourcePtrOutputWithContext(context.Context) DataSetS3SourcePtrOutput
}

type dataSetS3SourcePtrType DataSetS3SourceArgs

func DataSetS3SourcePtr(v *DataSetS3SourceArgs) DataSetS3SourcePtrInput {
	return (*dataSetS3SourcePtrType)(v)
}

func (*dataSetS3SourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetS3Source)(nil)).Elem()
}

func (i *dataSetS3SourcePtrType) ToDataSetS3SourcePtrOutput() DataSetS3SourcePtrOutput {
	return i.ToDataSetS3SourcePtrOutputWithContext(context.Background())
}

func (i *dataSetS3SourcePtrType) ToDataSetS3SourcePtrOutputWithContext(ctx context.Context) DataSetS3SourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetS3SourcePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html
type DataSetS3SourceOutput struct{ *pulumi.OutputState }

func (DataSetS3SourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetS3Source)(nil)).Elem()
}

func (o DataSetS3SourceOutput) ToDataSetS3SourceOutput() DataSetS3SourceOutput {
	return o
}

func (o DataSetS3SourceOutput) ToDataSetS3SourceOutputWithContext(ctx context.Context) DataSetS3SourceOutput {
	return o
}

func (o DataSetS3SourceOutput) ToDataSetS3SourcePtrOutput() DataSetS3SourcePtrOutput {
	return o.ToDataSetS3SourcePtrOutputWithContext(context.Background())
}

func (o DataSetS3SourceOutput) ToDataSetS3SourcePtrOutputWithContext(ctx context.Context) DataSetS3SourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetS3Source) *DataSetS3Source {
		return &v
	}).(DataSetS3SourcePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-datasourcearn
func (o DataSetS3SourceOutput) DataSourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetS3Source) string { return v.DataSourceArn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-inputcolumns
func (o DataSetS3SourceOutput) InputColumns() DataSetInputColumnArrayOutput {
	return o.ApplyT(func(v DataSetS3Source) []DataSetInputColumn { return v.InputColumns }).(DataSetInputColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-uploadsettings
func (o DataSetS3SourceOutput) UploadSettings() DataSetUploadSettingsPtrOutput {
	return o.ApplyT(func(v DataSetS3Source) *DataSetUploadSettings { return v.UploadSettings }).(DataSetUploadSettingsPtrOutput)
}

type DataSetS3SourcePtrOutput struct{ *pulumi.OutputState }

func (DataSetS3SourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetS3Source)(nil)).Elem()
}

func (o DataSetS3SourcePtrOutput) ToDataSetS3SourcePtrOutput() DataSetS3SourcePtrOutput {
	return o
}

func (o DataSetS3SourcePtrOutput) ToDataSetS3SourcePtrOutputWithContext(ctx context.Context) DataSetS3SourcePtrOutput {
	return o
}

func (o DataSetS3SourcePtrOutput) Elem() DataSetS3SourceOutput {
	return o.ApplyT(func(v *DataSetS3Source) DataSetS3Source {
		if v != nil {
			return *v
		}
		var ret DataSetS3Source
		return ret
	}).(DataSetS3SourceOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-datasourcearn
func (o DataSetS3SourcePtrOutput) DataSourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetS3Source) *string {
		if v == nil {
			return nil
		}
		return &v.DataSourceArn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-inputcolumns
func (o DataSetS3SourcePtrOutput) InputColumns() DataSetInputColumnArrayOutput {
	return o.ApplyT(func(v *DataSetS3Source) []DataSetInputColumn {
		if v == nil {
			return nil
		}
		return v.InputColumns
	}).(DataSetInputColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-s3source.html#cfn-quicksight-dataset-s3source-uploadsettings
func (o DataSetS3SourcePtrOutput) UploadSettings() DataSetUploadSettingsPtrOutput {
	return o.ApplyT(func(v *DataSetS3Source) *DataSetUploadSettings {
		if v == nil {
			return nil
		}
		return v.UploadSettings
	}).(DataSetUploadSettingsPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html
type DataSetTagColumnOperation struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html#cfn-quicksight-dataset-tagcolumnoperation-columnname
	ColumnName string `pulumi:"columnName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html#cfn-quicksight-dataset-tagcolumnoperation-tags
	Tags []DataSetColumnTag `pulumi:"tags"`
}

// DataSetTagColumnOperationInput is an input type that accepts DataSetTagColumnOperationArgs and DataSetTagColumnOperationOutput values.
// You can construct a concrete instance of `DataSetTagColumnOperationInput` via:
//
//          DataSetTagColumnOperationArgs{...}
type DataSetTagColumnOperationInput interface {
	pulumi.Input

	ToDataSetTagColumnOperationOutput() DataSetTagColumnOperationOutput
	ToDataSetTagColumnOperationOutputWithContext(context.Context) DataSetTagColumnOperationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html
type DataSetTagColumnOperationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html#cfn-quicksight-dataset-tagcolumnoperation-columnname
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html#cfn-quicksight-dataset-tagcolumnoperation-tags
	Tags DataSetColumnTagArrayInput `pulumi:"tags"`
}

func (DataSetTagColumnOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTagColumnOperation)(nil)).Elem()
}

func (i DataSetTagColumnOperationArgs) ToDataSetTagColumnOperationOutput() DataSetTagColumnOperationOutput {
	return i.ToDataSetTagColumnOperationOutputWithContext(context.Background())
}

func (i DataSetTagColumnOperationArgs) ToDataSetTagColumnOperationOutputWithContext(ctx context.Context) DataSetTagColumnOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTagColumnOperationOutput)
}

func (i DataSetTagColumnOperationArgs) ToDataSetTagColumnOperationPtrOutput() DataSetTagColumnOperationPtrOutput {
	return i.ToDataSetTagColumnOperationPtrOutputWithContext(context.Background())
}

func (i DataSetTagColumnOperationArgs) ToDataSetTagColumnOperationPtrOutputWithContext(ctx context.Context) DataSetTagColumnOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTagColumnOperationOutput).ToDataSetTagColumnOperationPtrOutputWithContext(ctx)
}

// DataSetTagColumnOperationPtrInput is an input type that accepts DataSetTagColumnOperationArgs, DataSetTagColumnOperationPtr and DataSetTagColumnOperationPtrOutput values.
// You can construct a concrete instance of `DataSetTagColumnOperationPtrInput` via:
//
//          DataSetTagColumnOperationArgs{...}
//
//  or:
//
//          nil
type DataSetTagColumnOperationPtrInput interface {
	pulumi.Input

	ToDataSetTagColumnOperationPtrOutput() DataSetTagColumnOperationPtrOutput
	ToDataSetTagColumnOperationPtrOutputWithContext(context.Context) DataSetTagColumnOperationPtrOutput
}

type dataSetTagColumnOperationPtrType DataSetTagColumnOperationArgs

func DataSetTagColumnOperationPtr(v *DataSetTagColumnOperationArgs) DataSetTagColumnOperationPtrInput {
	return (*dataSetTagColumnOperationPtrType)(v)
}

func (*dataSetTagColumnOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetTagColumnOperation)(nil)).Elem()
}

func (i *dataSetTagColumnOperationPtrType) ToDataSetTagColumnOperationPtrOutput() DataSetTagColumnOperationPtrOutput {
	return i.ToDataSetTagColumnOperationPtrOutputWithContext(context.Background())
}

func (i *dataSetTagColumnOperationPtrType) ToDataSetTagColumnOperationPtrOutputWithContext(ctx context.Context) DataSetTagColumnOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTagColumnOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html
type DataSetTagColumnOperationOutput struct{ *pulumi.OutputState }

func (DataSetTagColumnOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTagColumnOperation)(nil)).Elem()
}

func (o DataSetTagColumnOperationOutput) ToDataSetTagColumnOperationOutput() DataSetTagColumnOperationOutput {
	return o
}

func (o DataSetTagColumnOperationOutput) ToDataSetTagColumnOperationOutputWithContext(ctx context.Context) DataSetTagColumnOperationOutput {
	return o
}

func (o DataSetTagColumnOperationOutput) ToDataSetTagColumnOperationPtrOutput() DataSetTagColumnOperationPtrOutput {
	return o.ToDataSetTagColumnOperationPtrOutputWithContext(context.Background())
}

func (o DataSetTagColumnOperationOutput) ToDataSetTagColumnOperationPtrOutputWithContext(ctx context.Context) DataSetTagColumnOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetTagColumnOperation) *DataSetTagColumnOperation {
		return &v
	}).(DataSetTagColumnOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html#cfn-quicksight-dataset-tagcolumnoperation-columnname
func (o DataSetTagColumnOperationOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetTagColumnOperation) string { return v.ColumnName }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html#cfn-quicksight-dataset-tagcolumnoperation-tags
func (o DataSetTagColumnOperationOutput) Tags() DataSetColumnTagArrayOutput {
	return o.ApplyT(func(v DataSetTagColumnOperation) []DataSetColumnTag { return v.Tags }).(DataSetColumnTagArrayOutput)
}

type DataSetTagColumnOperationPtrOutput struct{ *pulumi.OutputState }

func (DataSetTagColumnOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetTagColumnOperation)(nil)).Elem()
}

func (o DataSetTagColumnOperationPtrOutput) ToDataSetTagColumnOperationPtrOutput() DataSetTagColumnOperationPtrOutput {
	return o
}

func (o DataSetTagColumnOperationPtrOutput) ToDataSetTagColumnOperationPtrOutputWithContext(ctx context.Context) DataSetTagColumnOperationPtrOutput {
	return o
}

func (o DataSetTagColumnOperationPtrOutput) Elem() DataSetTagColumnOperationOutput {
	return o.ApplyT(func(v *DataSetTagColumnOperation) DataSetTagColumnOperation {
		if v != nil {
			return *v
		}
		var ret DataSetTagColumnOperation
		return ret
	}).(DataSetTagColumnOperationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html#cfn-quicksight-dataset-tagcolumnoperation-columnname
func (o DataSetTagColumnOperationPtrOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetTagColumnOperation) *string {
		if v == nil {
			return nil
		}
		return &v.ColumnName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-tagcolumnoperation.html#cfn-quicksight-dataset-tagcolumnoperation-tags
func (o DataSetTagColumnOperationPtrOutput) Tags() DataSetColumnTagArrayOutput {
	return o.ApplyT(func(v *DataSetTagColumnOperation) []DataSetColumnTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(DataSetColumnTagArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html
type DataSetTransformOperation struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-castcolumntypeoperation
	CastColumnTypeOperation *DataSetCastColumnTypeOperation `pulumi:"castColumnTypeOperation"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-createcolumnsoperation
	CreateColumnsOperation *DataSetCreateColumnsOperation `pulumi:"createColumnsOperation"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-filteroperation
	FilterOperation *DataSetFilterOperation `pulumi:"filterOperation"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-projectoperation
	ProjectOperation *DataSetProjectOperation `pulumi:"projectOperation"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-renamecolumnoperation
	RenameColumnOperation *DataSetRenameColumnOperation `pulumi:"renameColumnOperation"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-tagcolumnoperation
	TagColumnOperation *DataSetTagColumnOperation `pulumi:"tagColumnOperation"`
}

// DataSetTransformOperationInput is an input type that accepts DataSetTransformOperationArgs and DataSetTransformOperationOutput values.
// You can construct a concrete instance of `DataSetTransformOperationInput` via:
//
//          DataSetTransformOperationArgs{...}
type DataSetTransformOperationInput interface {
	pulumi.Input

	ToDataSetTransformOperationOutput() DataSetTransformOperationOutput
	ToDataSetTransformOperationOutputWithContext(context.Context) DataSetTransformOperationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html
type DataSetTransformOperationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-castcolumntypeoperation
	CastColumnTypeOperation DataSetCastColumnTypeOperationPtrInput `pulumi:"castColumnTypeOperation"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-createcolumnsoperation
	CreateColumnsOperation DataSetCreateColumnsOperationPtrInput `pulumi:"createColumnsOperation"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-filteroperation
	FilterOperation DataSetFilterOperationPtrInput `pulumi:"filterOperation"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-projectoperation
	ProjectOperation DataSetProjectOperationPtrInput `pulumi:"projectOperation"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-renamecolumnoperation
	RenameColumnOperation DataSetRenameColumnOperationPtrInput `pulumi:"renameColumnOperation"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-tagcolumnoperation
	TagColumnOperation DataSetTagColumnOperationPtrInput `pulumi:"tagColumnOperation"`
}

func (DataSetTransformOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTransformOperation)(nil)).Elem()
}

func (i DataSetTransformOperationArgs) ToDataSetTransformOperationOutput() DataSetTransformOperationOutput {
	return i.ToDataSetTransformOperationOutputWithContext(context.Background())
}

func (i DataSetTransformOperationArgs) ToDataSetTransformOperationOutputWithContext(ctx context.Context) DataSetTransformOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTransformOperationOutput)
}

// DataSetTransformOperationArrayInput is an input type that accepts DataSetTransformOperationArray and DataSetTransformOperationArrayOutput values.
// You can construct a concrete instance of `DataSetTransformOperationArrayInput` via:
//
//          DataSetTransformOperationArray{ DataSetTransformOperationArgs{...} }
type DataSetTransformOperationArrayInput interface {
	pulumi.Input

	ToDataSetTransformOperationArrayOutput() DataSetTransformOperationArrayOutput
	ToDataSetTransformOperationArrayOutputWithContext(context.Context) DataSetTransformOperationArrayOutput
}

type DataSetTransformOperationArray []DataSetTransformOperationInput

func (DataSetTransformOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetTransformOperation)(nil)).Elem()
}

func (i DataSetTransformOperationArray) ToDataSetTransformOperationArrayOutput() DataSetTransformOperationArrayOutput {
	return i.ToDataSetTransformOperationArrayOutputWithContext(context.Background())
}

func (i DataSetTransformOperationArray) ToDataSetTransformOperationArrayOutputWithContext(ctx context.Context) DataSetTransformOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTransformOperationArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html
type DataSetTransformOperationOutput struct{ *pulumi.OutputState }

func (DataSetTransformOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTransformOperation)(nil)).Elem()
}

func (o DataSetTransformOperationOutput) ToDataSetTransformOperationOutput() DataSetTransformOperationOutput {
	return o
}

func (o DataSetTransformOperationOutput) ToDataSetTransformOperationOutputWithContext(ctx context.Context) DataSetTransformOperationOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-castcolumntypeoperation
func (o DataSetTransformOperationOutput) CastColumnTypeOperation() DataSetCastColumnTypeOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetCastColumnTypeOperation { return v.CastColumnTypeOperation }).(DataSetCastColumnTypeOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-createcolumnsoperation
func (o DataSetTransformOperationOutput) CreateColumnsOperation() DataSetCreateColumnsOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetCreateColumnsOperation { return v.CreateColumnsOperation }).(DataSetCreateColumnsOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-filteroperation
func (o DataSetTransformOperationOutput) FilterOperation() DataSetFilterOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetFilterOperation { return v.FilterOperation }).(DataSetFilterOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-projectoperation
func (o DataSetTransformOperationOutput) ProjectOperation() DataSetProjectOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetProjectOperation { return v.ProjectOperation }).(DataSetProjectOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-renamecolumnoperation
func (o DataSetTransformOperationOutput) RenameColumnOperation() DataSetRenameColumnOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetRenameColumnOperation { return v.RenameColumnOperation }).(DataSetRenameColumnOperationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-transformoperation.html#cfn-quicksight-dataset-transformoperation-tagcolumnoperation
func (o DataSetTransformOperationOutput) TagColumnOperation() DataSetTagColumnOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetTagColumnOperation { return v.TagColumnOperation }).(DataSetTagColumnOperationPtrOutput)
}

type DataSetTransformOperationArrayOutput struct{ *pulumi.OutputState }

func (DataSetTransformOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetTransformOperation)(nil)).Elem()
}

func (o DataSetTransformOperationArrayOutput) ToDataSetTransformOperationArrayOutput() DataSetTransformOperationArrayOutput {
	return o
}

func (o DataSetTransformOperationArrayOutput) ToDataSetTransformOperationArrayOutputWithContext(ctx context.Context) DataSetTransformOperationArrayOutput {
	return o
}

func (o DataSetTransformOperationArrayOutput) Index(i pulumi.IntInput) DataSetTransformOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetTransformOperation {
		return vs[0].([]DataSetTransformOperation)[vs[1].(int)]
	}).(DataSetTransformOperationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html
type DataSetUploadSettings struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-containsheader
	ContainsHeader *bool `pulumi:"containsHeader"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-delimiter
	Delimiter *string `pulumi:"delimiter"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-format
	Format *string `pulumi:"format"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-startfromrow
	StartFromRow *float64 `pulumi:"startFromRow"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-textqualifier
	TextQualifier *string `pulumi:"textQualifier"`
}

// DataSetUploadSettingsInput is an input type that accepts DataSetUploadSettingsArgs and DataSetUploadSettingsOutput values.
// You can construct a concrete instance of `DataSetUploadSettingsInput` via:
//
//          DataSetUploadSettingsArgs{...}
type DataSetUploadSettingsInput interface {
	pulumi.Input

	ToDataSetUploadSettingsOutput() DataSetUploadSettingsOutput
	ToDataSetUploadSettingsOutputWithContext(context.Context) DataSetUploadSettingsOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html
type DataSetUploadSettingsArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-containsheader
	ContainsHeader pulumi.BoolPtrInput `pulumi:"containsHeader"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-delimiter
	Delimiter pulumi.StringPtrInput `pulumi:"delimiter"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-format
	Format pulumi.StringPtrInput `pulumi:"format"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-startfromrow
	StartFromRow pulumi.Float64PtrInput `pulumi:"startFromRow"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-textqualifier
	TextQualifier pulumi.StringPtrInput `pulumi:"textQualifier"`
}

func (DataSetUploadSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetUploadSettings)(nil)).Elem()
}

func (i DataSetUploadSettingsArgs) ToDataSetUploadSettingsOutput() DataSetUploadSettingsOutput {
	return i.ToDataSetUploadSettingsOutputWithContext(context.Background())
}

func (i DataSetUploadSettingsArgs) ToDataSetUploadSettingsOutputWithContext(ctx context.Context) DataSetUploadSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUploadSettingsOutput)
}

func (i DataSetUploadSettingsArgs) ToDataSetUploadSettingsPtrOutput() DataSetUploadSettingsPtrOutput {
	return i.ToDataSetUploadSettingsPtrOutputWithContext(context.Background())
}

func (i DataSetUploadSettingsArgs) ToDataSetUploadSettingsPtrOutputWithContext(ctx context.Context) DataSetUploadSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUploadSettingsOutput).ToDataSetUploadSettingsPtrOutputWithContext(ctx)
}

// DataSetUploadSettingsPtrInput is an input type that accepts DataSetUploadSettingsArgs, DataSetUploadSettingsPtr and DataSetUploadSettingsPtrOutput values.
// You can construct a concrete instance of `DataSetUploadSettingsPtrInput` via:
//
//          DataSetUploadSettingsArgs{...}
//
//  or:
//
//          nil
type DataSetUploadSettingsPtrInput interface {
	pulumi.Input

	ToDataSetUploadSettingsPtrOutput() DataSetUploadSettingsPtrOutput
	ToDataSetUploadSettingsPtrOutputWithContext(context.Context) DataSetUploadSettingsPtrOutput
}

type dataSetUploadSettingsPtrType DataSetUploadSettingsArgs

func DataSetUploadSettingsPtr(v *DataSetUploadSettingsArgs) DataSetUploadSettingsPtrInput {
	return (*dataSetUploadSettingsPtrType)(v)
}

func (*dataSetUploadSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetUploadSettings)(nil)).Elem()
}

func (i *dataSetUploadSettingsPtrType) ToDataSetUploadSettingsPtrOutput() DataSetUploadSettingsPtrOutput {
	return i.ToDataSetUploadSettingsPtrOutputWithContext(context.Background())
}

func (i *dataSetUploadSettingsPtrType) ToDataSetUploadSettingsPtrOutputWithContext(ctx context.Context) DataSetUploadSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUploadSettingsPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html
type DataSetUploadSettingsOutput struct{ *pulumi.OutputState }

func (DataSetUploadSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetUploadSettings)(nil)).Elem()
}

func (o DataSetUploadSettingsOutput) ToDataSetUploadSettingsOutput() DataSetUploadSettingsOutput {
	return o
}

func (o DataSetUploadSettingsOutput) ToDataSetUploadSettingsOutputWithContext(ctx context.Context) DataSetUploadSettingsOutput {
	return o
}

func (o DataSetUploadSettingsOutput) ToDataSetUploadSettingsPtrOutput() DataSetUploadSettingsPtrOutput {
	return o.ToDataSetUploadSettingsPtrOutputWithContext(context.Background())
}

func (o DataSetUploadSettingsOutput) ToDataSetUploadSettingsPtrOutputWithContext(ctx context.Context) DataSetUploadSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetUploadSettings) *DataSetUploadSettings {
		return &v
	}).(DataSetUploadSettingsPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-containsheader
func (o DataSetUploadSettingsOutput) ContainsHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSetUploadSettings) *bool { return v.ContainsHeader }).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-delimiter
func (o DataSetUploadSettingsOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetUploadSettings) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-format
func (o DataSetUploadSettingsOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetUploadSettings) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-startfromrow
func (o DataSetUploadSettingsOutput) StartFromRow() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DataSetUploadSettings) *float64 { return v.StartFromRow }).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-textqualifier
func (o DataSetUploadSettingsOutput) TextQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetUploadSettings) *string { return v.TextQualifier }).(pulumi.StringPtrOutput)
}

type DataSetUploadSettingsPtrOutput struct{ *pulumi.OutputState }

func (DataSetUploadSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetUploadSettings)(nil)).Elem()
}

func (o DataSetUploadSettingsPtrOutput) ToDataSetUploadSettingsPtrOutput() DataSetUploadSettingsPtrOutput {
	return o
}

func (o DataSetUploadSettingsPtrOutput) ToDataSetUploadSettingsPtrOutputWithContext(ctx context.Context) DataSetUploadSettingsPtrOutput {
	return o
}

func (o DataSetUploadSettingsPtrOutput) Elem() DataSetUploadSettingsOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) DataSetUploadSettings {
		if v != nil {
			return *v
		}
		var ret DataSetUploadSettings
		return ret
	}).(DataSetUploadSettingsOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-containsheader
func (o DataSetUploadSettingsPtrOutput) ContainsHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) *bool {
		if v == nil {
			return nil
		}
		return v.ContainsHeader
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-delimiter
func (o DataSetUploadSettingsPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-format
func (o DataSetUploadSettingsPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-startfromrow
func (o DataSetUploadSettingsPtrOutput) StartFromRow() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.StartFromRow
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-textqualifier
func (o DataSetUploadSettingsPtrOutput) TextQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) *string {
		if v == nil {
			return nil
		}
		return v.TextQualifier
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-amazonelasticsearchparameters.html
type DataSourceAmazonElasticsearchParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-amazonelasticsearchparameters.html#cfn-quicksight-datasource-amazonelasticsearchparameters-domain
	Domain string `pulumi:"domain"`
}

// DataSourceAmazonElasticsearchParametersInput is an input type that accepts DataSourceAmazonElasticsearchParametersArgs and DataSourceAmazonElasticsearchParametersOutput values.
// You can construct a concrete instance of `DataSourceAmazonElasticsearchParametersInput` via:
//
//          DataSourceAmazonElasticsearchParametersArgs{...}
type DataSourceAmazonElasticsearchParametersInput interface {
	pulumi.Input

	ToDataSourceAmazonElasticsearchParametersOutput() DataSourceAmazonElasticsearchParametersOutput
	ToDataSourceAmazonElasticsearchParametersOutputWithContext(context.Context) DataSourceAmazonElasticsearchParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-amazonelasticsearchparameters.html
type DataSourceAmazonElasticsearchParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-amazonelasticsearchparameters.html#cfn-quicksight-datasource-amazonelasticsearchparameters-domain
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (DataSourceAmazonElasticsearchParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersOutput() DataSourceAmazonElasticsearchParametersOutput {
	return i.ToDataSourceAmazonElasticsearchParametersOutputWithContext(context.Background())
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonElasticsearchParametersOutput)
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return i.ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonElasticsearchParametersOutput).ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx)
}

// DataSourceAmazonElasticsearchParametersPtrInput is an input type that accepts DataSourceAmazonElasticsearchParametersArgs, DataSourceAmazonElasticsearchParametersPtr and DataSourceAmazonElasticsearchParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAmazonElasticsearchParametersPtrInput` via:
//
//          DataSourceAmazonElasticsearchParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceAmazonElasticsearchParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput
	ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Context) DataSourceAmazonElasticsearchParametersPtrOutput
}

type dataSourceAmazonElasticsearchParametersPtrType DataSourceAmazonElasticsearchParametersArgs

func DataSourceAmazonElasticsearchParametersPtr(v *DataSourceAmazonElasticsearchParametersArgs) DataSourceAmazonElasticsearchParametersPtrInput {
	return (*dataSourceAmazonElasticsearchParametersPtrType)(v)
}

func (*dataSourceAmazonElasticsearchParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (i *dataSourceAmazonElasticsearchParametersPtrType) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return i.ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAmazonElasticsearchParametersPtrType) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-amazonelasticsearchparameters.html
type DataSourceAmazonElasticsearchParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAmazonElasticsearchParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersOutput() DataSourceAmazonElasticsearchParametersOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAmazonElasticsearchParameters) *DataSourceAmazonElasticsearchParameters {
		return &v
	}).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-amazonelasticsearchparameters.html#cfn-quicksight-datasource-amazonelasticsearchparameters-domain
func (o DataSourceAmazonElasticsearchParametersOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAmazonElasticsearchParameters) string { return v.Domain }).(pulumi.StringOutput)
}

type DataSourceAmazonElasticsearchParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAmazonElasticsearchParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (o DataSourceAmazonElasticsearchParametersPtrOutput) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersPtrOutput) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersPtrOutput) Elem() DataSourceAmazonElasticsearchParametersOutput {
	return o.ApplyT(func(v *DataSourceAmazonElasticsearchParameters) DataSourceAmazonElasticsearchParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAmazonElasticsearchParameters
		return ret
	}).(DataSourceAmazonElasticsearchParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-amazonelasticsearchparameters.html#cfn-quicksight-datasource-amazonelasticsearchparameters-domain
func (o DataSourceAmazonElasticsearchParametersPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAmazonElasticsearchParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-athenaparameters.html
type DataSourceAthenaParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-athenaparameters.html#cfn-quicksight-datasource-athenaparameters-workgroup
	WorkGroup *string `pulumi:"workGroup"`
}

// DataSourceAthenaParametersInput is an input type that accepts DataSourceAthenaParametersArgs and DataSourceAthenaParametersOutput values.
// You can construct a concrete instance of `DataSourceAthenaParametersInput` via:
//
//          DataSourceAthenaParametersArgs{...}
type DataSourceAthenaParametersInput interface {
	pulumi.Input

	ToDataSourceAthenaParametersOutput() DataSourceAthenaParametersOutput
	ToDataSourceAthenaParametersOutputWithContext(context.Context) DataSourceAthenaParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-athenaparameters.html
type DataSourceAthenaParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-athenaparameters.html#cfn-quicksight-datasource-athenaparameters-workgroup
	WorkGroup pulumi.StringPtrInput `pulumi:"workGroup"`
}

func (DataSourceAthenaParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAthenaParameters)(nil)).Elem()
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersOutput() DataSourceAthenaParametersOutput {
	return i.ToDataSourceAthenaParametersOutputWithContext(context.Background())
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersOutputWithContext(ctx context.Context) DataSourceAthenaParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAthenaParametersOutput)
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return i.ToDataSourceAthenaParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAthenaParametersOutput).ToDataSourceAthenaParametersPtrOutputWithContext(ctx)
}

// DataSourceAthenaParametersPtrInput is an input type that accepts DataSourceAthenaParametersArgs, DataSourceAthenaParametersPtr and DataSourceAthenaParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAthenaParametersPtrInput` via:
//
//          DataSourceAthenaParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceAthenaParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput
	ToDataSourceAthenaParametersPtrOutputWithContext(context.Context) DataSourceAthenaParametersPtrOutput
}

type dataSourceAthenaParametersPtrType DataSourceAthenaParametersArgs

func DataSourceAthenaParametersPtr(v *DataSourceAthenaParametersArgs) DataSourceAthenaParametersPtrInput {
	return (*dataSourceAthenaParametersPtrType)(v)
}

func (*dataSourceAthenaParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAthenaParameters)(nil)).Elem()
}

func (i *dataSourceAthenaParametersPtrType) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return i.ToDataSourceAthenaParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAthenaParametersPtrType) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAthenaParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-athenaparameters.html
type DataSourceAthenaParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAthenaParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAthenaParameters)(nil)).Elem()
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersOutput() DataSourceAthenaParametersOutput {
	return o
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersOutputWithContext(ctx context.Context) DataSourceAthenaParametersOutput {
	return o
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return o.ToDataSourceAthenaParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAthenaParameters) *DataSourceAthenaParameters {
		return &v
	}).(DataSourceAthenaParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-athenaparameters.html#cfn-quicksight-datasource-athenaparameters-workgroup
func (o DataSourceAthenaParametersOutput) WorkGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceAthenaParameters) *string { return v.WorkGroup }).(pulumi.StringPtrOutput)
}

type DataSourceAthenaParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAthenaParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAthenaParameters)(nil)).Elem()
}

func (o DataSourceAthenaParametersPtrOutput) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return o
}

func (o DataSourceAthenaParametersPtrOutput) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return o
}

func (o DataSourceAthenaParametersPtrOutput) Elem() DataSourceAthenaParametersOutput {
	return o.ApplyT(func(v *DataSourceAthenaParameters) DataSourceAthenaParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAthenaParameters
		return ret
	}).(DataSourceAthenaParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-athenaparameters.html#cfn-quicksight-datasource-athenaparameters-workgroup
func (o DataSourceAthenaParametersPtrOutput) WorkGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAthenaParameters) *string {
		if v == nil {
			return nil
		}
		return v.WorkGroup
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html
type DataSourceAuroraParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-port
	Port float64 `pulumi:"port"`
}

// DataSourceAuroraParametersInput is an input type that accepts DataSourceAuroraParametersArgs and DataSourceAuroraParametersOutput values.
// You can construct a concrete instance of `DataSourceAuroraParametersInput` via:
//
//          DataSourceAuroraParametersArgs{...}
type DataSourceAuroraParametersInput interface {
	pulumi.Input

	ToDataSourceAuroraParametersOutput() DataSourceAuroraParametersOutput
	ToDataSourceAuroraParametersOutputWithContext(context.Context) DataSourceAuroraParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html
type DataSourceAuroraParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-port
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceAuroraParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraParameters)(nil)).Elem()
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersOutput() DataSourceAuroraParametersOutput {
	return i.ToDataSourceAuroraParametersOutputWithContext(context.Background())
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersOutputWithContext(ctx context.Context) DataSourceAuroraParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraParametersOutput)
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return i.ToDataSourceAuroraParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraParametersOutput).ToDataSourceAuroraParametersPtrOutputWithContext(ctx)
}

// DataSourceAuroraParametersPtrInput is an input type that accepts DataSourceAuroraParametersArgs, DataSourceAuroraParametersPtr and DataSourceAuroraParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAuroraParametersPtrInput` via:
//
//          DataSourceAuroraParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceAuroraParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput
	ToDataSourceAuroraParametersPtrOutputWithContext(context.Context) DataSourceAuroraParametersPtrOutput
}

type dataSourceAuroraParametersPtrType DataSourceAuroraParametersArgs

func DataSourceAuroraParametersPtr(v *DataSourceAuroraParametersArgs) DataSourceAuroraParametersPtrInput {
	return (*dataSourceAuroraParametersPtrType)(v)
}

func (*dataSourceAuroraParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraParameters)(nil)).Elem()
}

func (i *dataSourceAuroraParametersPtrType) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return i.ToDataSourceAuroraParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAuroraParametersPtrType) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html
type DataSourceAuroraParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraParameters)(nil)).Elem()
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersOutput() DataSourceAuroraParametersOutput {
	return o
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersOutputWithContext(ctx context.Context) DataSourceAuroraParametersOutput {
	return o
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return o.ToDataSourceAuroraParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAuroraParameters) *DataSourceAuroraParameters {
		return &v
	}).(DataSourceAuroraParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-database
func (o DataSourceAuroraParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-host
func (o DataSourceAuroraParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-port
func (o DataSourceAuroraParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceAuroraParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceAuroraParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraParameters)(nil)).Elem()
}

func (o DataSourceAuroraParametersPtrOutput) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return o
}

func (o DataSourceAuroraParametersPtrOutput) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return o
}

func (o DataSourceAuroraParametersPtrOutput) Elem() DataSourceAuroraParametersOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) DataSourceAuroraParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAuroraParameters
		return ret
	}).(DataSourceAuroraParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-database
func (o DataSourceAuroraParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-host
func (o DataSourceAuroraParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-auroraparameters.html#cfn-quicksight-datasource-auroraparameters-port
func (o DataSourceAuroraParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html
type DataSourceAuroraPostgreSqlParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-port
	Port float64 `pulumi:"port"`
}

// DataSourceAuroraPostgreSqlParametersInput is an input type that accepts DataSourceAuroraPostgreSqlParametersArgs and DataSourceAuroraPostgreSqlParametersOutput values.
// You can construct a concrete instance of `DataSourceAuroraPostgreSqlParametersInput` via:
//
//          DataSourceAuroraPostgreSqlParametersArgs{...}
type DataSourceAuroraPostgreSqlParametersInput interface {
	pulumi.Input

	ToDataSourceAuroraPostgreSqlParametersOutput() DataSourceAuroraPostgreSqlParametersOutput
	ToDataSourceAuroraPostgreSqlParametersOutputWithContext(context.Context) DataSourceAuroraPostgreSqlParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html
type DataSourceAuroraPostgreSqlParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-port
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceAuroraPostgreSqlParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersOutput() DataSourceAuroraPostgreSqlParametersOutput {
	return i.ToDataSourceAuroraPostgreSqlParametersOutputWithContext(context.Background())
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraPostgreSqlParametersOutput)
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return i.ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraPostgreSqlParametersOutput).ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx)
}

// DataSourceAuroraPostgreSqlParametersPtrInput is an input type that accepts DataSourceAuroraPostgreSqlParametersArgs, DataSourceAuroraPostgreSqlParametersPtr and DataSourceAuroraPostgreSqlParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAuroraPostgreSqlParametersPtrInput` via:
//
//          DataSourceAuroraPostgreSqlParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceAuroraPostgreSqlParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput
	ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput
}

type dataSourceAuroraPostgreSqlParametersPtrType DataSourceAuroraPostgreSqlParametersArgs

func DataSourceAuroraPostgreSqlParametersPtr(v *DataSourceAuroraPostgreSqlParametersArgs) DataSourceAuroraPostgreSqlParametersPtrInput {
	return (*dataSourceAuroraPostgreSqlParametersPtrType)(v)
}

func (*dataSourceAuroraPostgreSqlParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (i *dataSourceAuroraPostgreSqlParametersPtrType) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return i.ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAuroraPostgreSqlParametersPtrType) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html
type DataSourceAuroraPostgreSqlParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraPostgreSqlParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersOutput() DataSourceAuroraPostgreSqlParametersOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAuroraPostgreSqlParameters) *DataSourceAuroraPostgreSqlParameters {
		return &v
	}).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-database
func (o DataSourceAuroraPostgreSqlParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraPostgreSqlParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-host
func (o DataSourceAuroraPostgreSqlParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraPostgreSqlParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-port
func (o DataSourceAuroraPostgreSqlParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceAuroraPostgreSqlParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceAuroraPostgreSqlParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraPostgreSqlParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (o DataSourceAuroraPostgreSqlParametersPtrOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersPtrOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Elem() DataSourceAuroraPostgreSqlParametersOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) DataSourceAuroraPostgreSqlParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAuroraPostgreSqlParameters
		return ret
	}).(DataSourceAuroraPostgreSqlParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-database
func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-host
func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-aurorapostgresqlparameters.html#cfn-quicksight-datasource-aurorapostgresqlparameters-port
func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html
type DataSourceCredentialPair struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-alternatedatasourceparameters
	AlternateDataSourceParameters []DataSourceDataSourceParameters `pulumi:"alternateDataSourceParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-password
	Password string `pulumi:"password"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-username
	Username string `pulumi:"username"`
}

// DataSourceCredentialPairInput is an input type that accepts DataSourceCredentialPairArgs and DataSourceCredentialPairOutput values.
// You can construct a concrete instance of `DataSourceCredentialPairInput` via:
//
//          DataSourceCredentialPairArgs{...}
type DataSourceCredentialPairInput interface {
	pulumi.Input

	ToDataSourceCredentialPairOutput() DataSourceCredentialPairOutput
	ToDataSourceCredentialPairOutputWithContext(context.Context) DataSourceCredentialPairOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html
type DataSourceCredentialPairArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-alternatedatasourceparameters
	AlternateDataSourceParameters DataSourceDataSourceParametersArrayInput `pulumi:"alternateDataSourceParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-password
	Password pulumi.StringInput `pulumi:"password"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-username
	Username pulumi.StringInput `pulumi:"username"`
}

func (DataSourceCredentialPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCredentialPair)(nil)).Elem()
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairOutput() DataSourceCredentialPairOutput {
	return i.ToDataSourceCredentialPairOutputWithContext(context.Background())
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairOutputWithContext(ctx context.Context) DataSourceCredentialPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialPairOutput)
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return i.ToDataSourceCredentialPairPtrOutputWithContext(context.Background())
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialPairOutput).ToDataSourceCredentialPairPtrOutputWithContext(ctx)
}

// DataSourceCredentialPairPtrInput is an input type that accepts DataSourceCredentialPairArgs, DataSourceCredentialPairPtr and DataSourceCredentialPairPtrOutput values.
// You can construct a concrete instance of `DataSourceCredentialPairPtrInput` via:
//
//          DataSourceCredentialPairArgs{...}
//
//  or:
//
//          nil
type DataSourceCredentialPairPtrInput interface {
	pulumi.Input

	ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput
	ToDataSourceCredentialPairPtrOutputWithContext(context.Context) DataSourceCredentialPairPtrOutput
}

type dataSourceCredentialPairPtrType DataSourceCredentialPairArgs

func DataSourceCredentialPairPtr(v *DataSourceCredentialPairArgs) DataSourceCredentialPairPtrInput {
	return (*dataSourceCredentialPairPtrType)(v)
}

func (*dataSourceCredentialPairPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCredentialPair)(nil)).Elem()
}

func (i *dataSourceCredentialPairPtrType) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return i.ToDataSourceCredentialPairPtrOutputWithContext(context.Background())
}

func (i *dataSourceCredentialPairPtrType) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialPairPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html
type DataSourceCredentialPairOutput struct{ *pulumi.OutputState }

func (DataSourceCredentialPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCredentialPair)(nil)).Elem()
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairOutput() DataSourceCredentialPairOutput {
	return o
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairOutputWithContext(ctx context.Context) DataSourceCredentialPairOutput {
	return o
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return o.ToDataSourceCredentialPairPtrOutputWithContext(context.Background())
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceCredentialPair) *DataSourceCredentialPair {
		return &v
	}).(DataSourceCredentialPairPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-alternatedatasourceparameters
func (o DataSourceCredentialPairOutput) AlternateDataSourceParameters() DataSourceDataSourceParametersArrayOutput {
	return o.ApplyT(func(v DataSourceCredentialPair) []DataSourceDataSourceParameters {
		return v.AlternateDataSourceParameters
	}).(DataSourceDataSourceParametersArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-password
func (o DataSourceCredentialPairOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceCredentialPair) string { return v.Password }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-username
func (o DataSourceCredentialPairOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceCredentialPair) string { return v.Username }).(pulumi.StringOutput)
}

type DataSourceCredentialPairPtrOutput struct{ *pulumi.OutputState }

func (DataSourceCredentialPairPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCredentialPair)(nil)).Elem()
}

func (o DataSourceCredentialPairPtrOutput) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return o
}

func (o DataSourceCredentialPairPtrOutput) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return o
}

func (o DataSourceCredentialPairPtrOutput) Elem() DataSourceCredentialPairOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) DataSourceCredentialPair {
		if v != nil {
			return *v
		}
		var ret DataSourceCredentialPair
		return ret
	}).(DataSourceCredentialPairOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-alternatedatasourceparameters
func (o DataSourceCredentialPairPtrOutput) AlternateDataSourceParameters() DataSourceDataSourceParametersArrayOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) []DataSourceDataSourceParameters {
		if v == nil {
			return nil
		}
		return v.AlternateDataSourceParameters
	}).(DataSourceDataSourceParametersArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-password
func (o DataSourceCredentialPairPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-username
func (o DataSourceCredentialPairPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html
type DataSourceDataSourceCredentials struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html#cfn-quicksight-datasource-datasourcecredentials-copysourcearn
	CopySourceArn *string `pulumi:"copySourceArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html#cfn-quicksight-datasource-datasourcecredentials-credentialpair
	CredentialPair *DataSourceCredentialPair `pulumi:"credentialPair"`
}

// DataSourceDataSourceCredentialsInput is an input type that accepts DataSourceDataSourceCredentialsArgs and DataSourceDataSourceCredentialsOutput values.
// You can construct a concrete instance of `DataSourceDataSourceCredentialsInput` via:
//
//          DataSourceDataSourceCredentialsArgs{...}
type DataSourceDataSourceCredentialsInput interface {
	pulumi.Input

	ToDataSourceDataSourceCredentialsOutput() DataSourceDataSourceCredentialsOutput
	ToDataSourceDataSourceCredentialsOutputWithContext(context.Context) DataSourceDataSourceCredentialsOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html
type DataSourceDataSourceCredentialsArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html#cfn-quicksight-datasource-datasourcecredentials-copysourcearn
	CopySourceArn pulumi.StringPtrInput `pulumi:"copySourceArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html#cfn-quicksight-datasource-datasourcecredentials-credentialpair
	CredentialPair DataSourceCredentialPairPtrInput `pulumi:"credentialPair"`
}

func (DataSourceDataSourceCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDataSourceCredentials)(nil)).Elem()
}

func (i DataSourceDataSourceCredentialsArgs) ToDataSourceDataSourceCredentialsOutput() DataSourceDataSourceCredentialsOutput {
	return i.ToDataSourceDataSourceCredentialsOutputWithContext(context.Background())
}

func (i DataSourceDataSourceCredentialsArgs) ToDataSourceDataSourceCredentialsOutputWithContext(ctx context.Context) DataSourceDataSourceCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDataSourceCredentialsOutput)
}

func (i DataSourceDataSourceCredentialsArgs) ToDataSourceDataSourceCredentialsPtrOutput() DataSourceDataSourceCredentialsPtrOutput {
	return i.ToDataSourceDataSourceCredentialsPtrOutputWithContext(context.Background())
}

func (i DataSourceDataSourceCredentialsArgs) ToDataSourceDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceDataSourceCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDataSourceCredentialsOutput).ToDataSourceDataSourceCredentialsPtrOutputWithContext(ctx)
}

// DataSourceDataSourceCredentialsPtrInput is an input type that accepts DataSourceDataSourceCredentialsArgs, DataSourceDataSourceCredentialsPtr and DataSourceDataSourceCredentialsPtrOutput values.
// You can construct a concrete instance of `DataSourceDataSourceCredentialsPtrInput` via:
//
//          DataSourceDataSourceCredentialsArgs{...}
//
//  or:
//
//          nil
type DataSourceDataSourceCredentialsPtrInput interface {
	pulumi.Input

	ToDataSourceDataSourceCredentialsPtrOutput() DataSourceDataSourceCredentialsPtrOutput
	ToDataSourceDataSourceCredentialsPtrOutputWithContext(context.Context) DataSourceDataSourceCredentialsPtrOutput
}

type dataSourceDataSourceCredentialsPtrType DataSourceDataSourceCredentialsArgs

func DataSourceDataSourceCredentialsPtr(v *DataSourceDataSourceCredentialsArgs) DataSourceDataSourceCredentialsPtrInput {
	return (*dataSourceDataSourceCredentialsPtrType)(v)
}

func (*dataSourceDataSourceCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDataSourceCredentials)(nil)).Elem()
}

func (i *dataSourceDataSourceCredentialsPtrType) ToDataSourceDataSourceCredentialsPtrOutput() DataSourceDataSourceCredentialsPtrOutput {
	return i.ToDataSourceDataSourceCredentialsPtrOutputWithContext(context.Background())
}

func (i *dataSourceDataSourceCredentialsPtrType) ToDataSourceDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceDataSourceCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDataSourceCredentialsPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html
type DataSourceDataSourceCredentialsOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDataSourceCredentials)(nil)).Elem()
}

func (o DataSourceDataSourceCredentialsOutput) ToDataSourceDataSourceCredentialsOutput() DataSourceDataSourceCredentialsOutput {
	return o
}

func (o DataSourceDataSourceCredentialsOutput) ToDataSourceDataSourceCredentialsOutputWithContext(ctx context.Context) DataSourceDataSourceCredentialsOutput {
	return o
}

func (o DataSourceDataSourceCredentialsOutput) ToDataSourceDataSourceCredentialsPtrOutput() DataSourceDataSourceCredentialsPtrOutput {
	return o.ToDataSourceDataSourceCredentialsPtrOutputWithContext(context.Background())
}

func (o DataSourceDataSourceCredentialsOutput) ToDataSourceDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceDataSourceCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDataSourceCredentials) *DataSourceDataSourceCredentials {
		return &v
	}).(DataSourceDataSourceCredentialsPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html#cfn-quicksight-datasource-datasourcecredentials-copysourcearn
func (o DataSourceDataSourceCredentialsOutput) CopySourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceCredentials) *string { return v.CopySourceArn }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html#cfn-quicksight-datasource-datasourcecredentials-credentialpair
func (o DataSourceDataSourceCredentialsOutput) CredentialPair() DataSourceCredentialPairPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceCredentials) *DataSourceCredentialPair { return v.CredentialPair }).(DataSourceCredentialPairPtrOutput)
}

type DataSourceDataSourceCredentialsPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDataSourceCredentials)(nil)).Elem()
}

func (o DataSourceDataSourceCredentialsPtrOutput) ToDataSourceDataSourceCredentialsPtrOutput() DataSourceDataSourceCredentialsPtrOutput {
	return o
}

func (o DataSourceDataSourceCredentialsPtrOutput) ToDataSourceDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceDataSourceCredentialsPtrOutput {
	return o
}

func (o DataSourceDataSourceCredentialsPtrOutput) Elem() DataSourceDataSourceCredentialsOutput {
	return o.ApplyT(func(v *DataSourceDataSourceCredentials) DataSourceDataSourceCredentials {
		if v != nil {
			return *v
		}
		var ret DataSourceDataSourceCredentials
		return ret
	}).(DataSourceDataSourceCredentialsOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html#cfn-quicksight-datasource-datasourcecredentials-copysourcearn
func (o DataSourceDataSourceCredentialsPtrOutput) CopySourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceCredentials) *string {
		if v == nil {
			return nil
		}
		return v.CopySourceArn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourcecredentials.html#cfn-quicksight-datasource-datasourcecredentials-credentialpair
func (o DataSourceDataSourceCredentialsPtrOutput) CredentialPair() DataSourceCredentialPairPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceCredentials) *DataSourceCredentialPair {
		if v == nil {
			return nil
		}
		return v.CredentialPair
	}).(DataSourceCredentialPairPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html
type DataSourceDataSourceErrorInfo struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html#cfn-quicksight-datasource-datasourceerrorinfo-message
	Message *string `pulumi:"message"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html#cfn-quicksight-datasource-datasourceerrorinfo-type
	Type *string `pulumi:"type"`
}

// DataSourceDataSourceErrorInfoInput is an input type that accepts DataSourceDataSourceErrorInfoArgs and DataSourceDataSourceErrorInfoOutput values.
// You can construct a concrete instance of `DataSourceDataSourceErrorInfoInput` via:
//
//          DataSourceDataSourceErrorInfoArgs{...}
type DataSourceDataSourceErrorInfoInput interface {
	pulumi.Input

	ToDataSourceDataSourceErrorInfoOutput() DataSourceDataSourceErrorInfoOutput
	ToDataSourceDataSourceErrorInfoOutputWithContext(context.Context) DataSourceDataSourceErrorInfoOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html
type DataSourceDataSourceErrorInfoArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html#cfn-quicksight-datasource-datasourceerrorinfo-message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html#cfn-quicksight-datasource-datasourceerrorinfo-type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DataSourceDataSourceErrorInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDataSourceErrorInfo)(nil)).Elem()
}

func (i DataSourceDataSourceErrorInfoArgs) ToDataSourceDataSourceErrorInfoOutput() DataSourceDataSourceErrorInfoOutput {
	return i.ToDataSourceDataSourceErrorInfoOutputWithContext(context.Background())
}

func (i DataSourceDataSourceErrorInfoArgs) ToDataSourceDataSourceErrorInfoOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDataSourceErrorInfoOutput)
}

func (i DataSourceDataSourceErrorInfoArgs) ToDataSourceDataSourceErrorInfoPtrOutput() DataSourceDataSourceErrorInfoPtrOutput {
	return i.ToDataSourceDataSourceErrorInfoPtrOutputWithContext(context.Background())
}

func (i DataSourceDataSourceErrorInfoArgs) ToDataSourceDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDataSourceErrorInfoOutput).ToDataSourceDataSourceErrorInfoPtrOutputWithContext(ctx)
}

// DataSourceDataSourceErrorInfoPtrInput is an input type that accepts DataSourceDataSourceErrorInfoArgs, DataSourceDataSourceErrorInfoPtr and DataSourceDataSourceErrorInfoPtrOutput values.
// You can construct a concrete instance of `DataSourceDataSourceErrorInfoPtrInput` via:
//
//          DataSourceDataSourceErrorInfoArgs{...}
//
//  or:
//
//          nil
type DataSourceDataSourceErrorInfoPtrInput interface {
	pulumi.Input

	ToDataSourceDataSourceErrorInfoPtrOutput() DataSourceDataSourceErrorInfoPtrOutput
	ToDataSourceDataSourceErrorInfoPtrOutputWithContext(context.Context) DataSourceDataSourceErrorInfoPtrOutput
}

type dataSourceDataSourceErrorInfoPtrType DataSourceDataSourceErrorInfoArgs

func DataSourceDataSourceErrorInfoPtr(v *DataSourceDataSourceErrorInfoArgs) DataSourceDataSourceErrorInfoPtrInput {
	return (*dataSourceDataSourceErrorInfoPtrType)(v)
}

func (*dataSourceDataSourceErrorInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDataSourceErrorInfo)(nil)).Elem()
}

func (i *dataSourceDataSourceErrorInfoPtrType) ToDataSourceDataSourceErrorInfoPtrOutput() DataSourceDataSourceErrorInfoPtrOutput {
	return i.ToDataSourceDataSourceErrorInfoPtrOutputWithContext(context.Background())
}

func (i *dataSourceDataSourceErrorInfoPtrType) ToDataSourceDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDataSourceErrorInfoPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html
type DataSourceDataSourceErrorInfoOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceErrorInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDataSourceErrorInfo)(nil)).Elem()
}

func (o DataSourceDataSourceErrorInfoOutput) ToDataSourceDataSourceErrorInfoOutput() DataSourceDataSourceErrorInfoOutput {
	return o
}

func (o DataSourceDataSourceErrorInfoOutput) ToDataSourceDataSourceErrorInfoOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoOutput {
	return o
}

func (o DataSourceDataSourceErrorInfoOutput) ToDataSourceDataSourceErrorInfoPtrOutput() DataSourceDataSourceErrorInfoPtrOutput {
	return o.ToDataSourceDataSourceErrorInfoPtrOutputWithContext(context.Background())
}

func (o DataSourceDataSourceErrorInfoOutput) ToDataSourceDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDataSourceErrorInfo) *DataSourceDataSourceErrorInfo {
		return &v
	}).(DataSourceDataSourceErrorInfoPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html#cfn-quicksight-datasource-datasourceerrorinfo-message
func (o DataSourceDataSourceErrorInfoOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceErrorInfo) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html#cfn-quicksight-datasource-datasourceerrorinfo-type
func (o DataSourceDataSourceErrorInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceErrorInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataSourceDataSourceErrorInfoPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceErrorInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDataSourceErrorInfo)(nil)).Elem()
}

func (o DataSourceDataSourceErrorInfoPtrOutput) ToDataSourceDataSourceErrorInfoPtrOutput() DataSourceDataSourceErrorInfoPtrOutput {
	return o
}

func (o DataSourceDataSourceErrorInfoPtrOutput) ToDataSourceDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoPtrOutput {
	return o
}

func (o DataSourceDataSourceErrorInfoPtrOutput) Elem() DataSourceDataSourceErrorInfoOutput {
	return o.ApplyT(func(v *DataSourceDataSourceErrorInfo) DataSourceDataSourceErrorInfo {
		if v != nil {
			return *v
		}
		var ret DataSourceDataSourceErrorInfo
		return ret
	}).(DataSourceDataSourceErrorInfoOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html#cfn-quicksight-datasource-datasourceerrorinfo-message
func (o DataSourceDataSourceErrorInfoPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceErrorInfo) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceerrorinfo.html#cfn-quicksight-datasource-datasourceerrorinfo-type
func (o DataSourceDataSourceErrorInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceErrorInfo) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html
type DataSourceDataSourceParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-amazonelasticsearchparameters
	AmazonElasticsearchParameters *DataSourceAmazonElasticsearchParameters `pulumi:"amazonElasticsearchParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-athenaparameters
	AthenaParameters *DataSourceAthenaParameters `pulumi:"athenaParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-auroraparameters
	AuroraParameters *DataSourceAuroraParameters `pulumi:"auroraParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-aurorapostgresqlparameters
	AuroraPostgreSqlParameters *DataSourceAuroraPostgreSqlParameters `pulumi:"auroraPostgreSqlParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-mariadbparameters
	MariaDbParameters *DataSourceMariaDbParameters `pulumi:"mariaDbParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-mysqlparameters
	MySqlParameters *DataSourceMySqlParameters `pulumi:"mySqlParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-oracleparameters
	OracleParameters *DataSourceOracleParameters `pulumi:"oracleParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-postgresqlparameters
	PostgreSqlParameters *DataSourcePostgreSqlParameters `pulumi:"postgreSqlParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-prestoparameters
	PrestoParameters *DataSourcePrestoParameters `pulumi:"prestoParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-rdsparameters
	RdsParameters *DataSourceRdsParameters `pulumi:"rdsParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-redshiftparameters
	RedshiftParameters *DataSourceRedshiftParameters `pulumi:"redshiftParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-s3parameters
	S3Parameters *DataSourceS3Parameters `pulumi:"s3Parameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-snowflakeparameters
	SnowflakeParameters *DataSourceSnowflakeParameters `pulumi:"snowflakeParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-sparkparameters
	SparkParameters *DataSourceSparkParameters `pulumi:"sparkParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-sqlserverparameters
	SqlServerParameters *DataSourceSqlServerParameters `pulumi:"sqlServerParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-teradataparameters
	TeradataParameters *DataSourceTeradataParameters `pulumi:"teradataParameters"`
}

// DataSourceDataSourceParametersInput is an input type that accepts DataSourceDataSourceParametersArgs and DataSourceDataSourceParametersOutput values.
// You can construct a concrete instance of `DataSourceDataSourceParametersInput` via:
//
//          DataSourceDataSourceParametersArgs{...}
type DataSourceDataSourceParametersInput interface {
	pulumi.Input

	ToDataSourceDataSourceParametersOutput() DataSourceDataSourceParametersOutput
	ToDataSourceDataSourceParametersOutputWithContext(context.Context) DataSourceDataSourceParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html
type DataSourceDataSourceParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-amazonelasticsearchparameters
	AmazonElasticsearchParameters DataSourceAmazonElasticsearchParametersPtrInput `pulumi:"amazonElasticsearchParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-athenaparameters
	AthenaParameters DataSourceAthenaParametersPtrInput `pulumi:"athenaParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-auroraparameters
	AuroraParameters DataSourceAuroraParametersPtrInput `pulumi:"auroraParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-aurorapostgresqlparameters
	AuroraPostgreSqlParameters DataSourceAuroraPostgreSqlParametersPtrInput `pulumi:"auroraPostgreSqlParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-mariadbparameters
	MariaDbParameters DataSourceMariaDbParametersPtrInput `pulumi:"mariaDbParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-mysqlparameters
	MySqlParameters DataSourceMySqlParametersPtrInput `pulumi:"mySqlParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-oracleparameters
	OracleParameters DataSourceOracleParametersPtrInput `pulumi:"oracleParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-postgresqlparameters
	PostgreSqlParameters DataSourcePostgreSqlParametersPtrInput `pulumi:"postgreSqlParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-prestoparameters
	PrestoParameters DataSourcePrestoParametersPtrInput `pulumi:"prestoParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-rdsparameters
	RdsParameters DataSourceRdsParametersPtrInput `pulumi:"rdsParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-redshiftparameters
	RedshiftParameters DataSourceRedshiftParametersPtrInput `pulumi:"redshiftParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-s3parameters
	S3Parameters DataSourceS3ParametersPtrInput `pulumi:"s3Parameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-snowflakeparameters
	SnowflakeParameters DataSourceSnowflakeParametersPtrInput `pulumi:"snowflakeParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-sparkparameters
	SparkParameters DataSourceSparkParametersPtrInput `pulumi:"sparkParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-sqlserverparameters
	SqlServerParameters DataSourceSqlServerParametersPtrInput `pulumi:"sqlServerParameters"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-teradataparameters
	TeradataParameters DataSourceTeradataParametersPtrInput `pulumi:"teradataParameters"`
}

func (DataSourceDataSourceParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDataSourceParameters)(nil)).Elem()
}

func (i DataSourceDataSourceParametersArgs) ToDataSourceDataSourceParametersOutput() DataSourceDataSourceParametersOutput {
	return i.ToDataSourceDataSourceParametersOutputWithContext(context.Background())
}

func (i DataSourceDataSourceParametersArgs) ToDataSourceDataSourceParametersOutputWithContext(ctx context.Context) DataSourceDataSourceParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDataSourceParametersOutput)
}

func (i DataSourceDataSourceParametersArgs) ToDataSourceDataSourceParametersPtrOutput() DataSourceDataSourceParametersPtrOutput {
	return i.ToDataSourceDataSourceParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceDataSourceParametersArgs) ToDataSourceDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceDataSourceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDataSourceParametersOutput).ToDataSourceDataSourceParametersPtrOutputWithContext(ctx)
}

// DataSourceDataSourceParametersPtrInput is an input type that accepts DataSourceDataSourceParametersArgs, DataSourceDataSourceParametersPtr and DataSourceDataSourceParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceDataSourceParametersPtrInput` via:
//
//          DataSourceDataSourceParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceDataSourceParametersPtrInput interface {
	pulumi.Input

	ToDataSourceDataSourceParametersPtrOutput() DataSourceDataSourceParametersPtrOutput
	ToDataSourceDataSourceParametersPtrOutputWithContext(context.Context) DataSourceDataSourceParametersPtrOutput
}

type dataSourceDataSourceParametersPtrType DataSourceDataSourceParametersArgs

func DataSourceDataSourceParametersPtr(v *DataSourceDataSourceParametersArgs) DataSourceDataSourceParametersPtrInput {
	return (*dataSourceDataSourceParametersPtrType)(v)
}

func (*dataSourceDataSourceParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDataSourceParameters)(nil)).Elem()
}

func (i *dataSourceDataSourceParametersPtrType) ToDataSourceDataSourceParametersPtrOutput() DataSourceDataSourceParametersPtrOutput {
	return i.ToDataSourceDataSourceParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceDataSourceParametersPtrType) ToDataSourceDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceDataSourceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDataSourceParametersPtrOutput)
}

// DataSourceDataSourceParametersArrayInput is an input type that accepts DataSourceDataSourceParametersArray and DataSourceDataSourceParametersArrayOutput values.
// You can construct a concrete instance of `DataSourceDataSourceParametersArrayInput` via:
//
//          DataSourceDataSourceParametersArray{ DataSourceDataSourceParametersArgs{...} }
type DataSourceDataSourceParametersArrayInput interface {
	pulumi.Input

	ToDataSourceDataSourceParametersArrayOutput() DataSourceDataSourceParametersArrayOutput
	ToDataSourceDataSourceParametersArrayOutputWithContext(context.Context) DataSourceDataSourceParametersArrayOutput
}

type DataSourceDataSourceParametersArray []DataSourceDataSourceParametersInput

func (DataSourceDataSourceParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceDataSourceParameters)(nil)).Elem()
}

func (i DataSourceDataSourceParametersArray) ToDataSourceDataSourceParametersArrayOutput() DataSourceDataSourceParametersArrayOutput {
	return i.ToDataSourceDataSourceParametersArrayOutputWithContext(context.Background())
}

func (i DataSourceDataSourceParametersArray) ToDataSourceDataSourceParametersArrayOutputWithContext(ctx context.Context) DataSourceDataSourceParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDataSourceParametersArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html
type DataSourceDataSourceParametersOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDataSourceParameters)(nil)).Elem()
}

func (o DataSourceDataSourceParametersOutput) ToDataSourceDataSourceParametersOutput() DataSourceDataSourceParametersOutput {
	return o
}

func (o DataSourceDataSourceParametersOutput) ToDataSourceDataSourceParametersOutputWithContext(ctx context.Context) DataSourceDataSourceParametersOutput {
	return o
}

func (o DataSourceDataSourceParametersOutput) ToDataSourceDataSourceParametersPtrOutput() DataSourceDataSourceParametersPtrOutput {
	return o.ToDataSourceDataSourceParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceDataSourceParametersOutput) ToDataSourceDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceDataSourceParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDataSourceParameters) *DataSourceDataSourceParameters {
		return &v
	}).(DataSourceDataSourceParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-amazonelasticsearchparameters
func (o DataSourceDataSourceParametersOutput) AmazonElasticsearchParameters() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceAmazonElasticsearchParameters {
		return v.AmazonElasticsearchParameters
	}).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-athenaparameters
func (o DataSourceDataSourceParametersOutput) AthenaParameters() DataSourceAthenaParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceAthenaParameters { return v.AthenaParameters }).(DataSourceAthenaParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-auroraparameters
func (o DataSourceDataSourceParametersOutput) AuroraParameters() DataSourceAuroraParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceAuroraParameters { return v.AuroraParameters }).(DataSourceAuroraParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-aurorapostgresqlparameters
func (o DataSourceDataSourceParametersOutput) AuroraPostgreSqlParameters() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceAuroraPostgreSqlParameters {
		return v.AuroraPostgreSqlParameters
	}).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-mariadbparameters
func (o DataSourceDataSourceParametersOutput) MariaDbParameters() DataSourceMariaDbParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceMariaDbParameters { return v.MariaDbParameters }).(DataSourceMariaDbParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-mysqlparameters
func (o DataSourceDataSourceParametersOutput) MySqlParameters() DataSourceMySqlParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceMySqlParameters { return v.MySqlParameters }).(DataSourceMySqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-oracleparameters
func (o DataSourceDataSourceParametersOutput) OracleParameters() DataSourceOracleParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceOracleParameters { return v.OracleParameters }).(DataSourceOracleParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-postgresqlparameters
func (o DataSourceDataSourceParametersOutput) PostgreSqlParameters() DataSourcePostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourcePostgreSqlParameters { return v.PostgreSqlParameters }).(DataSourcePostgreSqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-prestoparameters
func (o DataSourceDataSourceParametersOutput) PrestoParameters() DataSourcePrestoParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourcePrestoParameters { return v.PrestoParameters }).(DataSourcePrestoParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-rdsparameters
func (o DataSourceDataSourceParametersOutput) RdsParameters() DataSourceRdsParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceRdsParameters { return v.RdsParameters }).(DataSourceRdsParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-redshiftparameters
func (o DataSourceDataSourceParametersOutput) RedshiftParameters() DataSourceRedshiftParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceRedshiftParameters { return v.RedshiftParameters }).(DataSourceRedshiftParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-s3parameters
func (o DataSourceDataSourceParametersOutput) S3Parameters() DataSourceS3ParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceS3Parameters { return v.S3Parameters }).(DataSourceS3ParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-snowflakeparameters
func (o DataSourceDataSourceParametersOutput) SnowflakeParameters() DataSourceSnowflakeParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceSnowflakeParameters { return v.SnowflakeParameters }).(DataSourceSnowflakeParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-sparkparameters
func (o DataSourceDataSourceParametersOutput) SparkParameters() DataSourceSparkParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceSparkParameters { return v.SparkParameters }).(DataSourceSparkParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-sqlserverparameters
func (o DataSourceDataSourceParametersOutput) SqlServerParameters() DataSourceSqlServerParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceSqlServerParameters { return v.SqlServerParameters }).(DataSourceSqlServerParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-teradataparameters
func (o DataSourceDataSourceParametersOutput) TeradataParameters() DataSourceTeradataParametersPtrOutput {
	return o.ApplyT(func(v DataSourceDataSourceParameters) *DataSourceTeradataParameters { return v.TeradataParameters }).(DataSourceTeradataParametersPtrOutput)
}

type DataSourceDataSourceParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDataSourceParameters)(nil)).Elem()
}

func (o DataSourceDataSourceParametersPtrOutput) ToDataSourceDataSourceParametersPtrOutput() DataSourceDataSourceParametersPtrOutput {
	return o
}

func (o DataSourceDataSourceParametersPtrOutput) ToDataSourceDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceDataSourceParametersPtrOutput {
	return o
}

func (o DataSourceDataSourceParametersPtrOutput) Elem() DataSourceDataSourceParametersOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) DataSourceDataSourceParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceDataSourceParameters
		return ret
	}).(DataSourceDataSourceParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-amazonelasticsearchparameters
func (o DataSourceDataSourceParametersPtrOutput) AmazonElasticsearchParameters() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceAmazonElasticsearchParameters {
		if v == nil {
			return nil
		}
		return v.AmazonElasticsearchParameters
	}).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-athenaparameters
func (o DataSourceDataSourceParametersPtrOutput) AthenaParameters() DataSourceAthenaParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceAthenaParameters {
		if v == nil {
			return nil
		}
		return v.AthenaParameters
	}).(DataSourceAthenaParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-auroraparameters
func (o DataSourceDataSourceParametersPtrOutput) AuroraParameters() DataSourceAuroraParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceAuroraParameters {
		if v == nil {
			return nil
		}
		return v.AuroraParameters
	}).(DataSourceAuroraParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-aurorapostgresqlparameters
func (o DataSourceDataSourceParametersPtrOutput) AuroraPostgreSqlParameters() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceAuroraPostgreSqlParameters {
		if v == nil {
			return nil
		}
		return v.AuroraPostgreSqlParameters
	}).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-mariadbparameters
func (o DataSourceDataSourceParametersPtrOutput) MariaDbParameters() DataSourceMariaDbParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceMariaDbParameters {
		if v == nil {
			return nil
		}
		return v.MariaDbParameters
	}).(DataSourceMariaDbParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-mysqlparameters
func (o DataSourceDataSourceParametersPtrOutput) MySqlParameters() DataSourceMySqlParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceMySqlParameters {
		if v == nil {
			return nil
		}
		return v.MySqlParameters
	}).(DataSourceMySqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-oracleparameters
func (o DataSourceDataSourceParametersPtrOutput) OracleParameters() DataSourceOracleParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceOracleParameters {
		if v == nil {
			return nil
		}
		return v.OracleParameters
	}).(DataSourceOracleParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-postgresqlparameters
func (o DataSourceDataSourceParametersPtrOutput) PostgreSqlParameters() DataSourcePostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourcePostgreSqlParameters {
		if v == nil {
			return nil
		}
		return v.PostgreSqlParameters
	}).(DataSourcePostgreSqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-prestoparameters
func (o DataSourceDataSourceParametersPtrOutput) PrestoParameters() DataSourcePrestoParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourcePrestoParameters {
		if v == nil {
			return nil
		}
		return v.PrestoParameters
	}).(DataSourcePrestoParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-rdsparameters
func (o DataSourceDataSourceParametersPtrOutput) RdsParameters() DataSourceRdsParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceRdsParameters {
		if v == nil {
			return nil
		}
		return v.RdsParameters
	}).(DataSourceRdsParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-redshiftparameters
func (o DataSourceDataSourceParametersPtrOutput) RedshiftParameters() DataSourceRedshiftParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceRedshiftParameters {
		if v == nil {
			return nil
		}
		return v.RedshiftParameters
	}).(DataSourceRedshiftParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-s3parameters
func (o DataSourceDataSourceParametersPtrOutput) S3Parameters() DataSourceS3ParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceS3Parameters {
		if v == nil {
			return nil
		}
		return v.S3Parameters
	}).(DataSourceS3ParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-snowflakeparameters
func (o DataSourceDataSourceParametersPtrOutput) SnowflakeParameters() DataSourceSnowflakeParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceSnowflakeParameters {
		if v == nil {
			return nil
		}
		return v.SnowflakeParameters
	}).(DataSourceSnowflakeParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-sparkparameters
func (o DataSourceDataSourceParametersPtrOutput) SparkParameters() DataSourceSparkParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceSparkParameters {
		if v == nil {
			return nil
		}
		return v.SparkParameters
	}).(DataSourceSparkParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-sqlserverparameters
func (o DataSourceDataSourceParametersPtrOutput) SqlServerParameters() DataSourceSqlServerParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceSqlServerParameters {
		if v == nil {
			return nil
		}
		return v.SqlServerParameters
	}).(DataSourceSqlServerParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-datasourceparameters.html#cfn-quicksight-datasource-datasourceparameters-teradataparameters
func (o DataSourceDataSourceParametersPtrOutput) TeradataParameters() DataSourceTeradataParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceDataSourceParameters) *DataSourceTeradataParameters {
		if v == nil {
			return nil
		}
		return v.TeradataParameters
	}).(DataSourceTeradataParametersPtrOutput)
}

type DataSourceDataSourceParametersArrayOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceDataSourceParameters)(nil)).Elem()
}

func (o DataSourceDataSourceParametersArrayOutput) ToDataSourceDataSourceParametersArrayOutput() DataSourceDataSourceParametersArrayOutput {
	return o
}

func (o DataSourceDataSourceParametersArrayOutput) ToDataSourceDataSourceParametersArrayOutputWithContext(ctx context.Context) DataSourceDataSourceParametersArrayOutput {
	return o
}

func (o DataSourceDataSourceParametersArrayOutput) Index(i pulumi.IntInput) DataSourceDataSourceParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceDataSourceParameters {
		return vs[0].([]DataSourceDataSourceParameters)[vs[1].(int)]
	}).(DataSourceDataSourceParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html
type DataSourceManifestFileLocation struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html#cfn-quicksight-datasource-manifestfilelocation-bucket
	Bucket string `pulumi:"bucket"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html#cfn-quicksight-datasource-manifestfilelocation-key
	Key string `pulumi:"key"`
}

// DataSourceManifestFileLocationInput is an input type that accepts DataSourceManifestFileLocationArgs and DataSourceManifestFileLocationOutput values.
// You can construct a concrete instance of `DataSourceManifestFileLocationInput` via:
//
//          DataSourceManifestFileLocationArgs{...}
type DataSourceManifestFileLocationInput interface {
	pulumi.Input

	ToDataSourceManifestFileLocationOutput() DataSourceManifestFileLocationOutput
	ToDataSourceManifestFileLocationOutputWithContext(context.Context) DataSourceManifestFileLocationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html
type DataSourceManifestFileLocationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html#cfn-quicksight-datasource-manifestfilelocation-bucket
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html#cfn-quicksight-datasource-manifestfilelocation-key
	Key pulumi.StringInput `pulumi:"key"`
}

func (DataSourceManifestFileLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceManifestFileLocation)(nil)).Elem()
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationOutput() DataSourceManifestFileLocationOutput {
	return i.ToDataSourceManifestFileLocationOutputWithContext(context.Background())
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationOutputWithContext(ctx context.Context) DataSourceManifestFileLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceManifestFileLocationOutput)
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return i.ToDataSourceManifestFileLocationPtrOutputWithContext(context.Background())
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceManifestFileLocationOutput).ToDataSourceManifestFileLocationPtrOutputWithContext(ctx)
}

// DataSourceManifestFileLocationPtrInput is an input type that accepts DataSourceManifestFileLocationArgs, DataSourceManifestFileLocationPtr and DataSourceManifestFileLocationPtrOutput values.
// You can construct a concrete instance of `DataSourceManifestFileLocationPtrInput` via:
//
//          DataSourceManifestFileLocationArgs{...}
//
//  or:
//
//          nil
type DataSourceManifestFileLocationPtrInput interface {
	pulumi.Input

	ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput
	ToDataSourceManifestFileLocationPtrOutputWithContext(context.Context) DataSourceManifestFileLocationPtrOutput
}

type dataSourceManifestFileLocationPtrType DataSourceManifestFileLocationArgs

func DataSourceManifestFileLocationPtr(v *DataSourceManifestFileLocationArgs) DataSourceManifestFileLocationPtrInput {
	return (*dataSourceManifestFileLocationPtrType)(v)
}

func (*dataSourceManifestFileLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceManifestFileLocation)(nil)).Elem()
}

func (i *dataSourceManifestFileLocationPtrType) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return i.ToDataSourceManifestFileLocationPtrOutputWithContext(context.Background())
}

func (i *dataSourceManifestFileLocationPtrType) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceManifestFileLocationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html
type DataSourceManifestFileLocationOutput struct{ *pulumi.OutputState }

func (DataSourceManifestFileLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceManifestFileLocation)(nil)).Elem()
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationOutput() DataSourceManifestFileLocationOutput {
	return o
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationOutputWithContext(ctx context.Context) DataSourceManifestFileLocationOutput {
	return o
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return o.ToDataSourceManifestFileLocationPtrOutputWithContext(context.Background())
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceManifestFileLocation) *DataSourceManifestFileLocation {
		return &v
	}).(DataSourceManifestFileLocationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html#cfn-quicksight-datasource-manifestfilelocation-bucket
func (o DataSourceManifestFileLocationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceManifestFileLocation) string { return v.Bucket }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html#cfn-quicksight-datasource-manifestfilelocation-key
func (o DataSourceManifestFileLocationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceManifestFileLocation) string { return v.Key }).(pulumi.StringOutput)
}

type DataSourceManifestFileLocationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceManifestFileLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceManifestFileLocation)(nil)).Elem()
}

func (o DataSourceManifestFileLocationPtrOutput) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return o
}

func (o DataSourceManifestFileLocationPtrOutput) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return o
}

func (o DataSourceManifestFileLocationPtrOutput) Elem() DataSourceManifestFileLocationOutput {
	return o.ApplyT(func(v *DataSourceManifestFileLocation) DataSourceManifestFileLocation {
		if v != nil {
			return *v
		}
		var ret DataSourceManifestFileLocation
		return ret
	}).(DataSourceManifestFileLocationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html#cfn-quicksight-datasource-manifestfilelocation-bucket
func (o DataSourceManifestFileLocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceManifestFileLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-manifestfilelocation.html#cfn-quicksight-datasource-manifestfilelocation-key
func (o DataSourceManifestFileLocationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceManifestFileLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html
type DataSourceMariaDbParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-port
	Port float64 `pulumi:"port"`
}

// DataSourceMariaDbParametersInput is an input type that accepts DataSourceMariaDbParametersArgs and DataSourceMariaDbParametersOutput values.
// You can construct a concrete instance of `DataSourceMariaDbParametersInput` via:
//
//          DataSourceMariaDbParametersArgs{...}
type DataSourceMariaDbParametersInput interface {
	pulumi.Input

	ToDataSourceMariaDbParametersOutput() DataSourceMariaDbParametersOutput
	ToDataSourceMariaDbParametersOutputWithContext(context.Context) DataSourceMariaDbParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html
type DataSourceMariaDbParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-port
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceMariaDbParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMariaDbParameters)(nil)).Elem()
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersOutput() DataSourceMariaDbParametersOutput {
	return i.ToDataSourceMariaDbParametersOutputWithContext(context.Background())
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersOutputWithContext(ctx context.Context) DataSourceMariaDbParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMariaDbParametersOutput)
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return i.ToDataSourceMariaDbParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMariaDbParametersOutput).ToDataSourceMariaDbParametersPtrOutputWithContext(ctx)
}

// DataSourceMariaDbParametersPtrInput is an input type that accepts DataSourceMariaDbParametersArgs, DataSourceMariaDbParametersPtr and DataSourceMariaDbParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceMariaDbParametersPtrInput` via:
//
//          DataSourceMariaDbParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceMariaDbParametersPtrInput interface {
	pulumi.Input

	ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput
	ToDataSourceMariaDbParametersPtrOutputWithContext(context.Context) DataSourceMariaDbParametersPtrOutput
}

type dataSourceMariaDbParametersPtrType DataSourceMariaDbParametersArgs

func DataSourceMariaDbParametersPtr(v *DataSourceMariaDbParametersArgs) DataSourceMariaDbParametersPtrInput {
	return (*dataSourceMariaDbParametersPtrType)(v)
}

func (*dataSourceMariaDbParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMariaDbParameters)(nil)).Elem()
}

func (i *dataSourceMariaDbParametersPtrType) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return i.ToDataSourceMariaDbParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceMariaDbParametersPtrType) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMariaDbParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html
type DataSourceMariaDbParametersOutput struct{ *pulumi.OutputState }

func (DataSourceMariaDbParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMariaDbParameters)(nil)).Elem()
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersOutput() DataSourceMariaDbParametersOutput {
	return o
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersOutputWithContext(ctx context.Context) DataSourceMariaDbParametersOutput {
	return o
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return o.ToDataSourceMariaDbParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceMariaDbParameters) *DataSourceMariaDbParameters {
		return &v
	}).(DataSourceMariaDbParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-database
func (o DataSourceMariaDbParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMariaDbParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-host
func (o DataSourceMariaDbParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMariaDbParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-port
func (o DataSourceMariaDbParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceMariaDbParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceMariaDbParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceMariaDbParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMariaDbParameters)(nil)).Elem()
}

func (o DataSourceMariaDbParametersPtrOutput) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return o
}

func (o DataSourceMariaDbParametersPtrOutput) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return o
}

func (o DataSourceMariaDbParametersPtrOutput) Elem() DataSourceMariaDbParametersOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) DataSourceMariaDbParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceMariaDbParameters
		return ret
	}).(DataSourceMariaDbParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-database
func (o DataSourceMariaDbParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-host
func (o DataSourceMariaDbParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mariadbparameters.html#cfn-quicksight-datasource-mariadbparameters-port
func (o DataSourceMariaDbParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html
type DataSourceMySqlParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-port
	Port float64 `pulumi:"port"`
}

// DataSourceMySqlParametersInput is an input type that accepts DataSourceMySqlParametersArgs and DataSourceMySqlParametersOutput values.
// You can construct a concrete instance of `DataSourceMySqlParametersInput` via:
//
//          DataSourceMySqlParametersArgs{...}
type DataSourceMySqlParametersInput interface {
	pulumi.Input

	ToDataSourceMySqlParametersOutput() DataSourceMySqlParametersOutput
	ToDataSourceMySqlParametersOutputWithContext(context.Context) DataSourceMySqlParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html
type DataSourceMySqlParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-port
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceMySqlParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMySqlParameters)(nil)).Elem()
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersOutput() DataSourceMySqlParametersOutput {
	return i.ToDataSourceMySqlParametersOutputWithContext(context.Background())
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersOutputWithContext(ctx context.Context) DataSourceMySqlParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMySqlParametersOutput)
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return i.ToDataSourceMySqlParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMySqlParametersOutput).ToDataSourceMySqlParametersPtrOutputWithContext(ctx)
}

// DataSourceMySqlParametersPtrInput is an input type that accepts DataSourceMySqlParametersArgs, DataSourceMySqlParametersPtr and DataSourceMySqlParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceMySqlParametersPtrInput` via:
//
//          DataSourceMySqlParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceMySqlParametersPtrInput interface {
	pulumi.Input

	ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput
	ToDataSourceMySqlParametersPtrOutputWithContext(context.Context) DataSourceMySqlParametersPtrOutput
}

type dataSourceMySqlParametersPtrType DataSourceMySqlParametersArgs

func DataSourceMySqlParametersPtr(v *DataSourceMySqlParametersArgs) DataSourceMySqlParametersPtrInput {
	return (*dataSourceMySqlParametersPtrType)(v)
}

func (*dataSourceMySqlParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMySqlParameters)(nil)).Elem()
}

func (i *dataSourceMySqlParametersPtrType) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return i.ToDataSourceMySqlParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceMySqlParametersPtrType) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMySqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html
type DataSourceMySqlParametersOutput struct{ *pulumi.OutputState }

func (DataSourceMySqlParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMySqlParameters)(nil)).Elem()
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersOutput() DataSourceMySqlParametersOutput {
	return o
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersOutputWithContext(ctx context.Context) DataSourceMySqlParametersOutput {
	return o
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return o.ToDataSourceMySqlParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceMySqlParameters) *DataSourceMySqlParameters {
		return &v
	}).(DataSourceMySqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-database
func (o DataSourceMySqlParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMySqlParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-host
func (o DataSourceMySqlParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMySqlParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-port
func (o DataSourceMySqlParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceMySqlParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceMySqlParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceMySqlParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMySqlParameters)(nil)).Elem()
}

func (o DataSourceMySqlParametersPtrOutput) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return o
}

func (o DataSourceMySqlParametersPtrOutput) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return o
}

func (o DataSourceMySqlParametersPtrOutput) Elem() DataSourceMySqlParametersOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) DataSourceMySqlParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceMySqlParameters
		return ret
	}).(DataSourceMySqlParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-database
func (o DataSourceMySqlParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-host
func (o DataSourceMySqlParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-mysqlparameters.html#cfn-quicksight-datasource-mysqlparameters-port
func (o DataSourceMySqlParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html
type DataSourceOracleParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-port
	Port float64 `pulumi:"port"`
}

// DataSourceOracleParametersInput is an input type that accepts DataSourceOracleParametersArgs and DataSourceOracleParametersOutput values.
// You can construct a concrete instance of `DataSourceOracleParametersInput` via:
//
//          DataSourceOracleParametersArgs{...}
type DataSourceOracleParametersInput interface {
	pulumi.Input

	ToDataSourceOracleParametersOutput() DataSourceOracleParametersOutput
	ToDataSourceOracleParametersOutputWithContext(context.Context) DataSourceOracleParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html
type DataSourceOracleParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-port
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceOracleParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceOracleParameters)(nil)).Elem()
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersOutput() DataSourceOracleParametersOutput {
	return i.ToDataSourceOracleParametersOutputWithContext(context.Background())
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersOutputWithContext(ctx context.Context) DataSourceOracleParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOracleParametersOutput)
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return i.ToDataSourceOracleParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOracleParametersOutput).ToDataSourceOracleParametersPtrOutputWithContext(ctx)
}

// DataSourceOracleParametersPtrInput is an input type that accepts DataSourceOracleParametersArgs, DataSourceOracleParametersPtr and DataSourceOracleParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceOracleParametersPtrInput` via:
//
//          DataSourceOracleParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceOracleParametersPtrInput interface {
	pulumi.Input

	ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput
	ToDataSourceOracleParametersPtrOutputWithContext(context.Context) DataSourceOracleParametersPtrOutput
}

type dataSourceOracleParametersPtrType DataSourceOracleParametersArgs

func DataSourceOracleParametersPtr(v *DataSourceOracleParametersArgs) DataSourceOracleParametersPtrInput {
	return (*dataSourceOracleParametersPtrType)(v)
}

func (*dataSourceOracleParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceOracleParameters)(nil)).Elem()
}

func (i *dataSourceOracleParametersPtrType) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return i.ToDataSourceOracleParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceOracleParametersPtrType) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOracleParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html
type DataSourceOracleParametersOutput struct{ *pulumi.OutputState }

func (DataSourceOracleParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceOracleParameters)(nil)).Elem()
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersOutput() DataSourceOracleParametersOutput {
	return o
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersOutputWithContext(ctx context.Context) DataSourceOracleParametersOutput {
	return o
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return o.ToDataSourceOracleParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceOracleParameters) *DataSourceOracleParameters {
		return &v
	}).(DataSourceOracleParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-database
func (o DataSourceOracleParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceOracleParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-host
func (o DataSourceOracleParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceOracleParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-port
func (o DataSourceOracleParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceOracleParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceOracleParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceOracleParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceOracleParameters)(nil)).Elem()
}

func (o DataSourceOracleParametersPtrOutput) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return o
}

func (o DataSourceOracleParametersPtrOutput) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return o
}

func (o DataSourceOracleParametersPtrOutput) Elem() DataSourceOracleParametersOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) DataSourceOracleParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceOracleParameters
		return ret
	}).(DataSourceOracleParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-database
func (o DataSourceOracleParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-host
func (o DataSourceOracleParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-oracleparameters.html#cfn-quicksight-datasource-oracleparameters-port
func (o DataSourceOracleParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html
type DataSourcePostgreSqlParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-port
	Port float64 `pulumi:"port"`
}

// DataSourcePostgreSqlParametersInput is an input type that accepts DataSourcePostgreSqlParametersArgs and DataSourcePostgreSqlParametersOutput values.
// You can construct a concrete instance of `DataSourcePostgreSqlParametersInput` via:
//
//          DataSourcePostgreSqlParametersArgs{...}
type DataSourcePostgreSqlParametersInput interface {
	pulumi.Input

	ToDataSourcePostgreSqlParametersOutput() DataSourcePostgreSqlParametersOutput
	ToDataSourcePostgreSqlParametersOutputWithContext(context.Context) DataSourcePostgreSqlParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html
type DataSourcePostgreSqlParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-port
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourcePostgreSqlParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersOutput() DataSourcePostgreSqlParametersOutput {
	return i.ToDataSourcePostgreSqlParametersOutputWithContext(context.Background())
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePostgreSqlParametersOutput)
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return i.ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePostgreSqlParametersOutput).ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx)
}

// DataSourcePostgreSqlParametersPtrInput is an input type that accepts DataSourcePostgreSqlParametersArgs, DataSourcePostgreSqlParametersPtr and DataSourcePostgreSqlParametersPtrOutput values.
// You can construct a concrete instance of `DataSourcePostgreSqlParametersPtrInput` via:
//
//          DataSourcePostgreSqlParametersArgs{...}
//
//  or:
//
//          nil
type DataSourcePostgreSqlParametersPtrInput interface {
	pulumi.Input

	ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput
	ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Context) DataSourcePostgreSqlParametersPtrOutput
}

type dataSourcePostgreSqlParametersPtrType DataSourcePostgreSqlParametersArgs

func DataSourcePostgreSqlParametersPtr(v *DataSourcePostgreSqlParametersArgs) DataSourcePostgreSqlParametersPtrInput {
	return (*dataSourcePostgreSqlParametersPtrType)(v)
}

func (*dataSourcePostgreSqlParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (i *dataSourcePostgreSqlParametersPtrType) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return i.ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourcePostgreSqlParametersPtrType) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePostgreSqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html
type DataSourcePostgreSqlParametersOutput struct{ *pulumi.OutputState }

func (DataSourcePostgreSqlParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersOutput() DataSourcePostgreSqlParametersOutput {
	return o
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersOutput {
	return o
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return o.ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourcePostgreSqlParameters) *DataSourcePostgreSqlParameters {
		return &v
	}).(DataSourcePostgreSqlParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-database
func (o DataSourcePostgreSqlParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePostgreSqlParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-host
func (o DataSourcePostgreSqlParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePostgreSqlParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-port
func (o DataSourcePostgreSqlParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourcePostgreSqlParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourcePostgreSqlParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourcePostgreSqlParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (o DataSourcePostgreSqlParametersPtrOutput) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourcePostgreSqlParametersPtrOutput) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourcePostgreSqlParametersPtrOutput) Elem() DataSourcePostgreSqlParametersOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) DataSourcePostgreSqlParameters {
		if v != nil {
			return *v
		}
		var ret DataSourcePostgreSqlParameters
		return ret
	}).(DataSourcePostgreSqlParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-database
func (o DataSourcePostgreSqlParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-host
func (o DataSourcePostgreSqlParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-postgresqlparameters.html#cfn-quicksight-datasource-postgresqlparameters-port
func (o DataSourcePostgreSqlParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html
type DataSourcePrestoParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-catalog
	Catalog string `pulumi:"catalog"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-port
	Port float64 `pulumi:"port"`
}

// DataSourcePrestoParametersInput is an input type that accepts DataSourcePrestoParametersArgs and DataSourcePrestoParametersOutput values.
// You can construct a concrete instance of `DataSourcePrestoParametersInput` via:
//
//          DataSourcePrestoParametersArgs{...}
type DataSourcePrestoParametersInput interface {
	pulumi.Input

	ToDataSourcePrestoParametersOutput() DataSourcePrestoParametersOutput
	ToDataSourcePrestoParametersOutputWithContext(context.Context) DataSourcePrestoParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html
type DataSourcePrestoParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-catalog
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-port
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourcePrestoParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePrestoParameters)(nil)).Elem()
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersOutput() DataSourcePrestoParametersOutput {
	return i.ToDataSourcePrestoParametersOutputWithContext(context.Background())
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersOutputWithContext(ctx context.Context) DataSourcePrestoParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePrestoParametersOutput)
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return i.ToDataSourcePrestoParametersPtrOutputWithContext(context.Background())
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePrestoParametersOutput).ToDataSourcePrestoParametersPtrOutputWithContext(ctx)
}

// DataSourcePrestoParametersPtrInput is an input type that accepts DataSourcePrestoParametersArgs, DataSourcePrestoParametersPtr and DataSourcePrestoParametersPtrOutput values.
// You can construct a concrete instance of `DataSourcePrestoParametersPtrInput` via:
//
//          DataSourcePrestoParametersArgs{...}
//
//  or:
//
//          nil
type DataSourcePrestoParametersPtrInput interface {
	pulumi.Input

	ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput
	ToDataSourcePrestoParametersPtrOutputWithContext(context.Context) DataSourcePrestoParametersPtrOutput
}

type dataSourcePrestoParametersPtrType DataSourcePrestoParametersArgs

func DataSourcePrestoParametersPtr(v *DataSourcePrestoParametersArgs) DataSourcePrestoParametersPtrInput {
	return (*dataSourcePrestoParametersPtrType)(v)
}

func (*dataSourcePrestoParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePrestoParameters)(nil)).Elem()
}

func (i *dataSourcePrestoParametersPtrType) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return i.ToDataSourcePrestoParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourcePrestoParametersPtrType) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePrestoParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html
type DataSourcePrestoParametersOutput struct{ *pulumi.OutputState }

func (DataSourcePrestoParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePrestoParameters)(nil)).Elem()
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersOutput() DataSourcePrestoParametersOutput {
	return o
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersOutputWithContext(ctx context.Context) DataSourcePrestoParametersOutput {
	return o
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return o.ToDataSourcePrestoParametersPtrOutputWithContext(context.Background())
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourcePrestoParameters) *DataSourcePrestoParameters {
		return &v
	}).(DataSourcePrestoParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-catalog
func (o DataSourcePrestoParametersOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePrestoParameters) string { return v.Catalog }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-host
func (o DataSourcePrestoParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePrestoParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-port
func (o DataSourcePrestoParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourcePrestoParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourcePrestoParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourcePrestoParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePrestoParameters)(nil)).Elem()
}

func (o DataSourcePrestoParametersPtrOutput) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return o
}

func (o DataSourcePrestoParametersPtrOutput) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return o
}

func (o DataSourcePrestoParametersPtrOutput) Elem() DataSourcePrestoParametersOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) DataSourcePrestoParameters {
		if v != nil {
			return *v
		}
		var ret DataSourcePrestoParameters
		return ret
	}).(DataSourcePrestoParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-catalog
func (o DataSourcePrestoParametersPtrOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Catalog
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-host
func (o DataSourcePrestoParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-prestoparameters.html#cfn-quicksight-datasource-prestoparameters-port
func (o DataSourcePrestoParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html
type DataSourceRdsParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html#cfn-quicksight-datasource-rdsparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html#cfn-quicksight-datasource-rdsparameters-instanceid
	InstanceId string `pulumi:"instanceId"`
}

// DataSourceRdsParametersInput is an input type that accepts DataSourceRdsParametersArgs and DataSourceRdsParametersOutput values.
// You can construct a concrete instance of `DataSourceRdsParametersInput` via:
//
//          DataSourceRdsParametersArgs{...}
type DataSourceRdsParametersInput interface {
	pulumi.Input

	ToDataSourceRdsParametersOutput() DataSourceRdsParametersOutput
	ToDataSourceRdsParametersOutputWithContext(context.Context) DataSourceRdsParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html
type DataSourceRdsParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html#cfn-quicksight-datasource-rdsparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html#cfn-quicksight-datasource-rdsparameters-instanceid
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (DataSourceRdsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRdsParameters)(nil)).Elem()
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersOutput() DataSourceRdsParametersOutput {
	return i.ToDataSourceRdsParametersOutputWithContext(context.Background())
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersOutputWithContext(ctx context.Context) DataSourceRdsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsParametersOutput)
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return i.ToDataSourceRdsParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsParametersOutput).ToDataSourceRdsParametersPtrOutputWithContext(ctx)
}

// DataSourceRdsParametersPtrInput is an input type that accepts DataSourceRdsParametersArgs, DataSourceRdsParametersPtr and DataSourceRdsParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceRdsParametersPtrInput` via:
//
//          DataSourceRdsParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceRdsParametersPtrInput interface {
	pulumi.Input

	ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput
	ToDataSourceRdsParametersPtrOutputWithContext(context.Context) DataSourceRdsParametersPtrOutput
}

type dataSourceRdsParametersPtrType DataSourceRdsParametersArgs

func DataSourceRdsParametersPtr(v *DataSourceRdsParametersArgs) DataSourceRdsParametersPtrInput {
	return (*dataSourceRdsParametersPtrType)(v)
}

func (*dataSourceRdsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRdsParameters)(nil)).Elem()
}

func (i *dataSourceRdsParametersPtrType) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return i.ToDataSourceRdsParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceRdsParametersPtrType) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html
type DataSourceRdsParametersOutput struct{ *pulumi.OutputState }

func (DataSourceRdsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRdsParameters)(nil)).Elem()
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersOutput() DataSourceRdsParametersOutput {
	return o
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersOutputWithContext(ctx context.Context) DataSourceRdsParametersOutput {
	return o
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return o.ToDataSourceRdsParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRdsParameters) *DataSourceRdsParameters {
		return &v
	}).(DataSourceRdsParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html#cfn-quicksight-datasource-rdsparameters-database
func (o DataSourceRdsParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRdsParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html#cfn-quicksight-datasource-rdsparameters-instanceid
func (o DataSourceRdsParametersOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRdsParameters) string { return v.InstanceId }).(pulumi.StringOutput)
}

type DataSourceRdsParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRdsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRdsParameters)(nil)).Elem()
}

func (o DataSourceRdsParametersPtrOutput) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return o
}

func (o DataSourceRdsParametersPtrOutput) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return o
}

func (o DataSourceRdsParametersPtrOutput) Elem() DataSourceRdsParametersOutput {
	return o.ApplyT(func(v *DataSourceRdsParameters) DataSourceRdsParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceRdsParameters
		return ret
	}).(DataSourceRdsParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html#cfn-quicksight-datasource-rdsparameters-database
func (o DataSourceRdsParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-rdsparameters.html#cfn-quicksight-datasource-rdsparameters-instanceid
func (o DataSourceRdsParametersPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceId
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html
type DataSourceRedshiftParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-clusterid
	ClusterId *string `pulumi:"clusterId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-host
	Host *string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-port
	Port *float64 `pulumi:"port"`
}

// DataSourceRedshiftParametersInput is an input type that accepts DataSourceRedshiftParametersArgs and DataSourceRedshiftParametersOutput values.
// You can construct a concrete instance of `DataSourceRedshiftParametersInput` via:
//
//          DataSourceRedshiftParametersArgs{...}
type DataSourceRedshiftParametersInput interface {
	pulumi.Input

	ToDataSourceRedshiftParametersOutput() DataSourceRedshiftParametersOutput
	ToDataSourceRedshiftParametersOutputWithContext(context.Context) DataSourceRedshiftParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html
type DataSourceRedshiftParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-clusterid
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-host
	Host pulumi.StringPtrInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-port
	Port pulumi.Float64PtrInput `pulumi:"port"`
}

func (DataSourceRedshiftParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRedshiftParameters)(nil)).Elem()
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersOutput() DataSourceRedshiftParametersOutput {
	return i.ToDataSourceRedshiftParametersOutputWithContext(context.Background())
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersOutputWithContext(ctx context.Context) DataSourceRedshiftParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRedshiftParametersOutput)
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return i.ToDataSourceRedshiftParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRedshiftParametersOutput).ToDataSourceRedshiftParametersPtrOutputWithContext(ctx)
}

// DataSourceRedshiftParametersPtrInput is an input type that accepts DataSourceRedshiftParametersArgs, DataSourceRedshiftParametersPtr and DataSourceRedshiftParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceRedshiftParametersPtrInput` via:
//
//          DataSourceRedshiftParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceRedshiftParametersPtrInput interface {
	pulumi.Input

	ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput
	ToDataSourceRedshiftParametersPtrOutputWithContext(context.Context) DataSourceRedshiftParametersPtrOutput
}

type dataSourceRedshiftParametersPtrType DataSourceRedshiftParametersArgs

func DataSourceRedshiftParametersPtr(v *DataSourceRedshiftParametersArgs) DataSourceRedshiftParametersPtrInput {
	return (*dataSourceRedshiftParametersPtrType)(v)
}

func (*dataSourceRedshiftParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRedshiftParameters)(nil)).Elem()
}

func (i *dataSourceRedshiftParametersPtrType) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return i.ToDataSourceRedshiftParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceRedshiftParametersPtrType) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRedshiftParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html
type DataSourceRedshiftParametersOutput struct{ *pulumi.OutputState }

func (DataSourceRedshiftParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRedshiftParameters)(nil)).Elem()
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersOutput() DataSourceRedshiftParametersOutput {
	return o
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersOutputWithContext(ctx context.Context) DataSourceRedshiftParametersOutput {
	return o
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return o.ToDataSourceRedshiftParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRedshiftParameters) *DataSourceRedshiftParameters {
		return &v
	}).(DataSourceRedshiftParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-clusterid
func (o DataSourceRedshiftParametersOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-database
func (o DataSourceRedshiftParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-host
func (o DataSourceRedshiftParametersOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-port
func (o DataSourceRedshiftParametersOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) *float64 { return v.Port }).(pulumi.Float64PtrOutput)
}

type DataSourceRedshiftParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRedshiftParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRedshiftParameters)(nil)).Elem()
}

func (o DataSourceRedshiftParametersPtrOutput) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return o
}

func (o DataSourceRedshiftParametersPtrOutput) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return o
}

func (o DataSourceRedshiftParametersPtrOutput) Elem() DataSourceRedshiftParametersOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) DataSourceRedshiftParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceRedshiftParameters
		return ret
	}).(DataSourceRedshiftParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-clusterid
func (o DataSourceRedshiftParametersPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *string {
		if v == nil {
			return nil
		}
		return v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-database
func (o DataSourceRedshiftParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-host
func (o DataSourceRedshiftParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-redshiftparameters.html#cfn-quicksight-datasource-redshiftparameters-port
func (o DataSourceRedshiftParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *float64 {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-resourcepermission.html
type DataSourceResourcePermission struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-resourcepermission.html#cfn-quicksight-datasource-resourcepermission-actions
	Actions []string `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-resourcepermission.html#cfn-quicksight-datasource-resourcepermission-principal
	Principal string `pulumi:"principal"`
}

// DataSourceResourcePermissionInput is an input type that accepts DataSourceResourcePermissionArgs and DataSourceResourcePermissionOutput values.
// You can construct a concrete instance of `DataSourceResourcePermissionInput` via:
//
//          DataSourceResourcePermissionArgs{...}
type DataSourceResourcePermissionInput interface {
	pulumi.Input

	ToDataSourceResourcePermissionOutput() DataSourceResourcePermissionOutput
	ToDataSourceResourcePermissionOutputWithContext(context.Context) DataSourceResourcePermissionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-resourcepermission.html
type DataSourceResourcePermissionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-resourcepermission.html#cfn-quicksight-datasource-resourcepermission-actions
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-resourcepermission.html#cfn-quicksight-datasource-resourcepermission-principal
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (DataSourceResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourcePermission)(nil)).Elem()
}

func (i DataSourceResourcePermissionArgs) ToDataSourceResourcePermissionOutput() DataSourceResourcePermissionOutput {
	return i.ToDataSourceResourcePermissionOutputWithContext(context.Background())
}

func (i DataSourceResourcePermissionArgs) ToDataSourceResourcePermissionOutputWithContext(ctx context.Context) DataSourceResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceResourcePermissionOutput)
}

// DataSourceResourcePermissionArrayInput is an input type that accepts DataSourceResourcePermissionArray and DataSourceResourcePermissionArrayOutput values.
// You can construct a concrete instance of `DataSourceResourcePermissionArrayInput` via:
//
//          DataSourceResourcePermissionArray{ DataSourceResourcePermissionArgs{...} }
type DataSourceResourcePermissionArrayInput interface {
	pulumi.Input

	ToDataSourceResourcePermissionArrayOutput() DataSourceResourcePermissionArrayOutput
	ToDataSourceResourcePermissionArrayOutputWithContext(context.Context) DataSourceResourcePermissionArrayOutput
}

type DataSourceResourcePermissionArray []DataSourceResourcePermissionInput

func (DataSourceResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceResourcePermission)(nil)).Elem()
}

func (i DataSourceResourcePermissionArray) ToDataSourceResourcePermissionArrayOutput() DataSourceResourcePermissionArrayOutput {
	return i.ToDataSourceResourcePermissionArrayOutputWithContext(context.Background())
}

func (i DataSourceResourcePermissionArray) ToDataSourceResourcePermissionArrayOutputWithContext(ctx context.Context) DataSourceResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceResourcePermissionArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-resourcepermission.html
type DataSourceResourcePermissionOutput struct{ *pulumi.OutputState }

func (DataSourceResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourcePermission)(nil)).Elem()
}

func (o DataSourceResourcePermissionOutput) ToDataSourceResourcePermissionOutput() DataSourceResourcePermissionOutput {
	return o
}

func (o DataSourceResourcePermissionOutput) ToDataSourceResourcePermissionOutputWithContext(ctx context.Context) DataSourceResourcePermissionOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-resourcepermission.html#cfn-quicksight-datasource-resourcepermission-actions
func (o DataSourceResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSourceResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-resourcepermission.html#cfn-quicksight-datasource-resourcepermission-principal
func (o DataSourceResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

type DataSourceResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (DataSourceResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceResourcePermission)(nil)).Elem()
}

func (o DataSourceResourcePermissionArrayOutput) ToDataSourceResourcePermissionArrayOutput() DataSourceResourcePermissionArrayOutput {
	return o
}

func (o DataSourceResourcePermissionArrayOutput) ToDataSourceResourcePermissionArrayOutputWithContext(ctx context.Context) DataSourceResourcePermissionArrayOutput {
	return o
}

func (o DataSourceResourcePermissionArrayOutput) Index(i pulumi.IntInput) DataSourceResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceResourcePermission {
		return vs[0].([]DataSourceResourcePermission)[vs[1].(int)]
	}).(DataSourceResourcePermissionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-s3parameters.html
type DataSourceS3Parameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-s3parameters.html#cfn-quicksight-datasource-s3parameters-manifestfilelocation
	ManifestFileLocation DataSourceManifestFileLocation `pulumi:"manifestFileLocation"`
}

// DataSourceS3ParametersInput is an input type that accepts DataSourceS3ParametersArgs and DataSourceS3ParametersOutput values.
// You can construct a concrete instance of `DataSourceS3ParametersInput` via:
//
//          DataSourceS3ParametersArgs{...}
type DataSourceS3ParametersInput interface {
	pulumi.Input

	ToDataSourceS3ParametersOutput() DataSourceS3ParametersOutput
	ToDataSourceS3ParametersOutputWithContext(context.Context) DataSourceS3ParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-s3parameters.html
type DataSourceS3ParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-s3parameters.html#cfn-quicksight-datasource-s3parameters-manifestfilelocation
	ManifestFileLocation DataSourceManifestFileLocationInput `pulumi:"manifestFileLocation"`
}

func (DataSourceS3ParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3Parameters)(nil)).Elem()
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersOutput() DataSourceS3ParametersOutput {
	return i.ToDataSourceS3ParametersOutputWithContext(context.Background())
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersOutputWithContext(ctx context.Context) DataSourceS3ParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3ParametersOutput)
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return i.ToDataSourceS3ParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3ParametersOutput).ToDataSourceS3ParametersPtrOutputWithContext(ctx)
}

// DataSourceS3ParametersPtrInput is an input type that accepts DataSourceS3ParametersArgs, DataSourceS3ParametersPtr and DataSourceS3ParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceS3ParametersPtrInput` via:
//
//          DataSourceS3ParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceS3ParametersPtrInput interface {
	pulumi.Input

	ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput
	ToDataSourceS3ParametersPtrOutputWithContext(context.Context) DataSourceS3ParametersPtrOutput
}

type dataSourceS3ParametersPtrType DataSourceS3ParametersArgs

func DataSourceS3ParametersPtr(v *DataSourceS3ParametersArgs) DataSourceS3ParametersPtrInput {
	return (*dataSourceS3ParametersPtrType)(v)
}

func (*dataSourceS3ParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3Parameters)(nil)).Elem()
}

func (i *dataSourceS3ParametersPtrType) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return i.ToDataSourceS3ParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceS3ParametersPtrType) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3ParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-s3parameters.html
type DataSourceS3ParametersOutput struct{ *pulumi.OutputState }

func (DataSourceS3ParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3Parameters)(nil)).Elem()
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersOutput() DataSourceS3ParametersOutput {
	return o
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersOutputWithContext(ctx context.Context) DataSourceS3ParametersOutput {
	return o
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return o.ToDataSourceS3ParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceS3Parameters) *DataSourceS3Parameters {
		return &v
	}).(DataSourceS3ParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-s3parameters.html#cfn-quicksight-datasource-s3parameters-manifestfilelocation
func (o DataSourceS3ParametersOutput) ManifestFileLocation() DataSourceManifestFileLocationOutput {
	return o.ApplyT(func(v DataSourceS3Parameters) DataSourceManifestFileLocation { return v.ManifestFileLocation }).(DataSourceManifestFileLocationOutput)
}

type DataSourceS3ParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceS3ParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3Parameters)(nil)).Elem()
}

func (o DataSourceS3ParametersPtrOutput) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return o
}

func (o DataSourceS3ParametersPtrOutput) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return o
}

func (o DataSourceS3ParametersPtrOutput) Elem() DataSourceS3ParametersOutput {
	return o.ApplyT(func(v *DataSourceS3Parameters) DataSourceS3Parameters {
		if v != nil {
			return *v
		}
		var ret DataSourceS3Parameters
		return ret
	}).(DataSourceS3ParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-s3parameters.html#cfn-quicksight-datasource-s3parameters-manifestfilelocation
func (o DataSourceS3ParametersPtrOutput) ManifestFileLocation() DataSourceManifestFileLocationPtrOutput {
	return o.ApplyT(func(v *DataSourceS3Parameters) *DataSourceManifestFileLocation {
		if v == nil {
			return nil
		}
		return &v.ManifestFileLocation
	}).(DataSourceManifestFileLocationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html
type DataSourceSnowflakeParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-warehouse
	Warehouse string `pulumi:"warehouse"`
}

// DataSourceSnowflakeParametersInput is an input type that accepts DataSourceSnowflakeParametersArgs and DataSourceSnowflakeParametersOutput values.
// You can construct a concrete instance of `DataSourceSnowflakeParametersInput` via:
//
//          DataSourceSnowflakeParametersArgs{...}
type DataSourceSnowflakeParametersInput interface {
	pulumi.Input

	ToDataSourceSnowflakeParametersOutput() DataSourceSnowflakeParametersOutput
	ToDataSourceSnowflakeParametersOutputWithContext(context.Context) DataSourceSnowflakeParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html
type DataSourceSnowflakeParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-warehouse
	Warehouse pulumi.StringInput `pulumi:"warehouse"`
}

func (DataSourceSnowflakeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSnowflakeParameters)(nil)).Elem()
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersOutput() DataSourceSnowflakeParametersOutput {
	return i.ToDataSourceSnowflakeParametersOutputWithContext(context.Background())
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSnowflakeParametersOutput)
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return i.ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSnowflakeParametersOutput).ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx)
}

// DataSourceSnowflakeParametersPtrInput is an input type that accepts DataSourceSnowflakeParametersArgs, DataSourceSnowflakeParametersPtr and DataSourceSnowflakeParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceSnowflakeParametersPtrInput` via:
//
//          DataSourceSnowflakeParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceSnowflakeParametersPtrInput interface {
	pulumi.Input

	ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput
	ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Context) DataSourceSnowflakeParametersPtrOutput
}

type dataSourceSnowflakeParametersPtrType DataSourceSnowflakeParametersArgs

func DataSourceSnowflakeParametersPtr(v *DataSourceSnowflakeParametersArgs) DataSourceSnowflakeParametersPtrInput {
	return (*dataSourceSnowflakeParametersPtrType)(v)
}

func (*dataSourceSnowflakeParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSnowflakeParameters)(nil)).Elem()
}

func (i *dataSourceSnowflakeParametersPtrType) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return i.ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceSnowflakeParametersPtrType) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSnowflakeParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html
type DataSourceSnowflakeParametersOutput struct{ *pulumi.OutputState }

func (DataSourceSnowflakeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSnowflakeParameters)(nil)).Elem()
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersOutput() DataSourceSnowflakeParametersOutput {
	return o
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersOutput {
	return o
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return o.ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSnowflakeParameters) *DataSourceSnowflakeParameters {
		return &v
	}).(DataSourceSnowflakeParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-database
func (o DataSourceSnowflakeParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSnowflakeParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-host
func (o DataSourceSnowflakeParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSnowflakeParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-warehouse
func (o DataSourceSnowflakeParametersOutput) Warehouse() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSnowflakeParameters) string { return v.Warehouse }).(pulumi.StringOutput)
}

type DataSourceSnowflakeParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSnowflakeParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSnowflakeParameters)(nil)).Elem()
}

func (o DataSourceSnowflakeParametersPtrOutput) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return o
}

func (o DataSourceSnowflakeParametersPtrOutput) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return o
}

func (o DataSourceSnowflakeParametersPtrOutput) Elem() DataSourceSnowflakeParametersOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) DataSourceSnowflakeParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceSnowflakeParameters
		return ret
	}).(DataSourceSnowflakeParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-database
func (o DataSourceSnowflakeParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-host
func (o DataSourceSnowflakeParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-snowflakeparameters.html#cfn-quicksight-datasource-snowflakeparameters-warehouse
func (o DataSourceSnowflakeParametersPtrOutput) Warehouse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Warehouse
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html
type DataSourceSparkParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html#cfn-quicksight-datasource-sparkparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html#cfn-quicksight-datasource-sparkparameters-port
	Port float64 `pulumi:"port"`
}

// DataSourceSparkParametersInput is an input type that accepts DataSourceSparkParametersArgs and DataSourceSparkParametersOutput values.
// You can construct a concrete instance of `DataSourceSparkParametersInput` via:
//
//          DataSourceSparkParametersArgs{...}
type DataSourceSparkParametersInput interface {
	pulumi.Input

	ToDataSourceSparkParametersOutput() DataSourceSparkParametersOutput
	ToDataSourceSparkParametersOutputWithContext(context.Context) DataSourceSparkParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html
type DataSourceSparkParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html#cfn-quicksight-datasource-sparkparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html#cfn-quicksight-datasource-sparkparameters-port
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceSparkParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSparkParameters)(nil)).Elem()
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersOutput() DataSourceSparkParametersOutput {
	return i.ToDataSourceSparkParametersOutputWithContext(context.Background())
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersOutputWithContext(ctx context.Context) DataSourceSparkParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSparkParametersOutput)
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return i.ToDataSourceSparkParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSparkParametersOutput).ToDataSourceSparkParametersPtrOutputWithContext(ctx)
}

// DataSourceSparkParametersPtrInput is an input type that accepts DataSourceSparkParametersArgs, DataSourceSparkParametersPtr and DataSourceSparkParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceSparkParametersPtrInput` via:
//
//          DataSourceSparkParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceSparkParametersPtrInput interface {
	pulumi.Input

	ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput
	ToDataSourceSparkParametersPtrOutputWithContext(context.Context) DataSourceSparkParametersPtrOutput
}

type dataSourceSparkParametersPtrType DataSourceSparkParametersArgs

func DataSourceSparkParametersPtr(v *DataSourceSparkParametersArgs) DataSourceSparkParametersPtrInput {
	return (*dataSourceSparkParametersPtrType)(v)
}

func (*dataSourceSparkParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSparkParameters)(nil)).Elem()
}

func (i *dataSourceSparkParametersPtrType) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return i.ToDataSourceSparkParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceSparkParametersPtrType) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSparkParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html
type DataSourceSparkParametersOutput struct{ *pulumi.OutputState }

func (DataSourceSparkParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSparkParameters)(nil)).Elem()
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersOutput() DataSourceSparkParametersOutput {
	return o
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersOutputWithContext(ctx context.Context) DataSourceSparkParametersOutput {
	return o
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return o.ToDataSourceSparkParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSparkParameters) *DataSourceSparkParameters {
		return &v
	}).(DataSourceSparkParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html#cfn-quicksight-datasource-sparkparameters-host
func (o DataSourceSparkParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSparkParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html#cfn-quicksight-datasource-sparkparameters-port
func (o DataSourceSparkParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceSparkParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceSparkParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSparkParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSparkParameters)(nil)).Elem()
}

func (o DataSourceSparkParametersPtrOutput) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return o
}

func (o DataSourceSparkParametersPtrOutput) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return o
}

func (o DataSourceSparkParametersPtrOutput) Elem() DataSourceSparkParametersOutput {
	return o.ApplyT(func(v *DataSourceSparkParameters) DataSourceSparkParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceSparkParameters
		return ret
	}).(DataSourceSparkParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html#cfn-quicksight-datasource-sparkparameters-host
func (o DataSourceSparkParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSparkParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sparkparameters.html#cfn-quicksight-datasource-sparkparameters-port
func (o DataSourceSparkParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceSparkParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html
type DataSourceSqlServerParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-port
	Port float64 `pulumi:"port"`
}

// DataSourceSqlServerParametersInput is an input type that accepts DataSourceSqlServerParametersArgs and DataSourceSqlServerParametersOutput values.
// You can construct a concrete instance of `DataSourceSqlServerParametersInput` via:
//
//          DataSourceSqlServerParametersArgs{...}
type DataSourceSqlServerParametersInput interface {
	pulumi.Input

	ToDataSourceSqlServerParametersOutput() DataSourceSqlServerParametersOutput
	ToDataSourceSqlServerParametersOutputWithContext(context.Context) DataSourceSqlServerParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html
type DataSourceSqlServerParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-port
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceSqlServerParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSqlServerParameters)(nil)).Elem()
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersOutput() DataSourceSqlServerParametersOutput {
	return i.ToDataSourceSqlServerParametersOutputWithContext(context.Background())
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersOutputWithContext(ctx context.Context) DataSourceSqlServerParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSqlServerParametersOutput)
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return i.ToDataSourceSqlServerParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSqlServerParametersOutput).ToDataSourceSqlServerParametersPtrOutputWithContext(ctx)
}

// DataSourceSqlServerParametersPtrInput is an input type that accepts DataSourceSqlServerParametersArgs, DataSourceSqlServerParametersPtr and DataSourceSqlServerParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceSqlServerParametersPtrInput` via:
//
//          DataSourceSqlServerParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceSqlServerParametersPtrInput interface {
	pulumi.Input

	ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput
	ToDataSourceSqlServerParametersPtrOutputWithContext(context.Context) DataSourceSqlServerParametersPtrOutput
}

type dataSourceSqlServerParametersPtrType DataSourceSqlServerParametersArgs

func DataSourceSqlServerParametersPtr(v *DataSourceSqlServerParametersArgs) DataSourceSqlServerParametersPtrInput {
	return (*dataSourceSqlServerParametersPtrType)(v)
}

func (*dataSourceSqlServerParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSqlServerParameters)(nil)).Elem()
}

func (i *dataSourceSqlServerParametersPtrType) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return i.ToDataSourceSqlServerParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceSqlServerParametersPtrType) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSqlServerParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html
type DataSourceSqlServerParametersOutput struct{ *pulumi.OutputState }

func (DataSourceSqlServerParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSqlServerParameters)(nil)).Elem()
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersOutput() DataSourceSqlServerParametersOutput {
	return o
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersOutputWithContext(ctx context.Context) DataSourceSqlServerParametersOutput {
	return o
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return o.ToDataSourceSqlServerParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSqlServerParameters) *DataSourceSqlServerParameters {
		return &v
	}).(DataSourceSqlServerParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-database
func (o DataSourceSqlServerParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSqlServerParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-host
func (o DataSourceSqlServerParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSqlServerParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-port
func (o DataSourceSqlServerParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceSqlServerParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceSqlServerParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSqlServerParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSqlServerParameters)(nil)).Elem()
}

func (o DataSourceSqlServerParametersPtrOutput) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return o
}

func (o DataSourceSqlServerParametersPtrOutput) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return o
}

func (o DataSourceSqlServerParametersPtrOutput) Elem() DataSourceSqlServerParametersOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) DataSourceSqlServerParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceSqlServerParameters
		return ret
	}).(DataSourceSqlServerParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-database
func (o DataSourceSqlServerParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-host
func (o DataSourceSqlServerParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sqlserverparameters.html#cfn-quicksight-datasource-sqlserverparameters-port
func (o DataSourceSqlServerParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sslproperties.html
type DataSourceSslProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sslproperties.html#cfn-quicksight-datasource-sslproperties-disablessl
	DisableSsl *bool `pulumi:"disableSsl"`
}

// DataSourceSslPropertiesInput is an input type that accepts DataSourceSslPropertiesArgs and DataSourceSslPropertiesOutput values.
// You can construct a concrete instance of `DataSourceSslPropertiesInput` via:
//
//          DataSourceSslPropertiesArgs{...}
type DataSourceSslPropertiesInput interface {
	pulumi.Input

	ToDataSourceSslPropertiesOutput() DataSourceSslPropertiesOutput
	ToDataSourceSslPropertiesOutputWithContext(context.Context) DataSourceSslPropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sslproperties.html
type DataSourceSslPropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sslproperties.html#cfn-quicksight-datasource-sslproperties-disablessl
	DisableSsl pulumi.BoolPtrInput `pulumi:"disableSsl"`
}

func (DataSourceSslPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSslProperties)(nil)).Elem()
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesOutput() DataSourceSslPropertiesOutput {
	return i.ToDataSourceSslPropertiesOutputWithContext(context.Background())
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesOutputWithContext(ctx context.Context) DataSourceSslPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSslPropertiesOutput)
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return i.ToDataSourceSslPropertiesPtrOutputWithContext(context.Background())
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSslPropertiesOutput).ToDataSourceSslPropertiesPtrOutputWithContext(ctx)
}

// DataSourceSslPropertiesPtrInput is an input type that accepts DataSourceSslPropertiesArgs, DataSourceSslPropertiesPtr and DataSourceSslPropertiesPtrOutput values.
// You can construct a concrete instance of `DataSourceSslPropertiesPtrInput` via:
//
//          DataSourceSslPropertiesArgs{...}
//
//  or:
//
//          nil
type DataSourceSslPropertiesPtrInput interface {
	pulumi.Input

	ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput
	ToDataSourceSslPropertiesPtrOutputWithContext(context.Context) DataSourceSslPropertiesPtrOutput
}

type dataSourceSslPropertiesPtrType DataSourceSslPropertiesArgs

func DataSourceSslPropertiesPtr(v *DataSourceSslPropertiesArgs) DataSourceSslPropertiesPtrInput {
	return (*dataSourceSslPropertiesPtrType)(v)
}

func (*dataSourceSslPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSslProperties)(nil)).Elem()
}

func (i *dataSourceSslPropertiesPtrType) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return i.ToDataSourceSslPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataSourceSslPropertiesPtrType) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSslPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sslproperties.html
type DataSourceSslPropertiesOutput struct{ *pulumi.OutputState }

func (DataSourceSslPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSslProperties)(nil)).Elem()
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesOutput() DataSourceSslPropertiesOutput {
	return o
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesOutputWithContext(ctx context.Context) DataSourceSslPropertiesOutput {
	return o
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return o.ToDataSourceSslPropertiesPtrOutputWithContext(context.Background())
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSslProperties) *DataSourceSslProperties {
		return &v
	}).(DataSourceSslPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sslproperties.html#cfn-quicksight-datasource-sslproperties-disablessl
func (o DataSourceSslPropertiesOutput) DisableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceSslProperties) *bool { return v.DisableSsl }).(pulumi.BoolPtrOutput)
}

type DataSourceSslPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSslPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSslProperties)(nil)).Elem()
}

func (o DataSourceSslPropertiesPtrOutput) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return o
}

func (o DataSourceSslPropertiesPtrOutput) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return o
}

func (o DataSourceSslPropertiesPtrOutput) Elem() DataSourceSslPropertiesOutput {
	return o.ApplyT(func(v *DataSourceSslProperties) DataSourceSslProperties {
		if v != nil {
			return *v
		}
		var ret DataSourceSslProperties
		return ret
	}).(DataSourceSslPropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-sslproperties.html#cfn-quicksight-datasource-sslproperties-disablessl
func (o DataSourceSslPropertiesPtrOutput) DisableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSourceSslProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSsl
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html
type DataSourceTeradataParameters struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-database
	Database string `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-host
	Host string `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-port
	Port float64 `pulumi:"port"`
}

// DataSourceTeradataParametersInput is an input type that accepts DataSourceTeradataParametersArgs and DataSourceTeradataParametersOutput values.
// You can construct a concrete instance of `DataSourceTeradataParametersInput` via:
//
//          DataSourceTeradataParametersArgs{...}
type DataSourceTeradataParametersInput interface {
	pulumi.Input

	ToDataSourceTeradataParametersOutput() DataSourceTeradataParametersOutput
	ToDataSourceTeradataParametersOutputWithContext(context.Context) DataSourceTeradataParametersOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html
type DataSourceTeradataParametersArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-database
	Database pulumi.StringInput `pulumi:"database"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-host
	Host pulumi.StringInput `pulumi:"host"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-port
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceTeradataParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTeradataParameters)(nil)).Elem()
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersOutput() DataSourceTeradataParametersOutput {
	return i.ToDataSourceTeradataParametersOutputWithContext(context.Background())
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersOutputWithContext(ctx context.Context) DataSourceTeradataParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTeradataParametersOutput)
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return i.ToDataSourceTeradataParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTeradataParametersOutput).ToDataSourceTeradataParametersPtrOutputWithContext(ctx)
}

// DataSourceTeradataParametersPtrInput is an input type that accepts DataSourceTeradataParametersArgs, DataSourceTeradataParametersPtr and DataSourceTeradataParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceTeradataParametersPtrInput` via:
//
//          DataSourceTeradataParametersArgs{...}
//
//  or:
//
//          nil
type DataSourceTeradataParametersPtrInput interface {
	pulumi.Input

	ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput
	ToDataSourceTeradataParametersPtrOutputWithContext(context.Context) DataSourceTeradataParametersPtrOutput
}

type dataSourceTeradataParametersPtrType DataSourceTeradataParametersArgs

func DataSourceTeradataParametersPtr(v *DataSourceTeradataParametersArgs) DataSourceTeradataParametersPtrInput {
	return (*dataSourceTeradataParametersPtrType)(v)
}

func (*dataSourceTeradataParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceTeradataParameters)(nil)).Elem()
}

func (i *dataSourceTeradataParametersPtrType) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return i.ToDataSourceTeradataParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceTeradataParametersPtrType) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTeradataParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html
type DataSourceTeradataParametersOutput struct{ *pulumi.OutputState }

func (DataSourceTeradataParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTeradataParameters)(nil)).Elem()
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersOutput() DataSourceTeradataParametersOutput {
	return o
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersOutputWithContext(ctx context.Context) DataSourceTeradataParametersOutput {
	return o
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return o.ToDataSourceTeradataParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceTeradataParameters) *DataSourceTeradataParameters {
		return &v
	}).(DataSourceTeradataParametersPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-database
func (o DataSourceTeradataParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTeradataParameters) string { return v.Database }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-host
func (o DataSourceTeradataParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTeradataParameters) string { return v.Host }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-port
func (o DataSourceTeradataParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceTeradataParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceTeradataParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceTeradataParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceTeradataParameters)(nil)).Elem()
}

func (o DataSourceTeradataParametersPtrOutput) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return o
}

func (o DataSourceTeradataParametersPtrOutput) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return o
}

func (o DataSourceTeradataParametersPtrOutput) Elem() DataSourceTeradataParametersOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) DataSourceTeradataParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceTeradataParameters
		return ret
	}).(DataSourceTeradataParametersOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-database
func (o DataSourceTeradataParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-host
func (o DataSourceTeradataParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-teradataparameters.html#cfn-quicksight-datasource-teradataparameters-port
func (o DataSourceTeradataParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-vpcconnectionproperties.html
type DataSourceVpcConnectionProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-vpcconnectionproperties.html#cfn-quicksight-datasource-vpcconnectionproperties-vpcconnectionarn
	VpcConnectionArn string `pulumi:"vpcConnectionArn"`
}

// DataSourceVpcConnectionPropertiesInput is an input type that accepts DataSourceVpcConnectionPropertiesArgs and DataSourceVpcConnectionPropertiesOutput values.
// You can construct a concrete instance of `DataSourceVpcConnectionPropertiesInput` via:
//
//          DataSourceVpcConnectionPropertiesArgs{...}
type DataSourceVpcConnectionPropertiesInput interface {
	pulumi.Input

	ToDataSourceVpcConnectionPropertiesOutput() DataSourceVpcConnectionPropertiesOutput
	ToDataSourceVpcConnectionPropertiesOutputWithContext(context.Context) DataSourceVpcConnectionPropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-vpcconnectionproperties.html
type DataSourceVpcConnectionPropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-vpcconnectionproperties.html#cfn-quicksight-datasource-vpcconnectionproperties-vpcconnectionarn
	VpcConnectionArn pulumi.StringInput `pulumi:"vpcConnectionArn"`
}

func (DataSourceVpcConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesOutput() DataSourceVpcConnectionPropertiesOutput {
	return i.ToDataSourceVpcConnectionPropertiesOutputWithContext(context.Background())
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVpcConnectionPropertiesOutput)
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return i.ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVpcConnectionPropertiesOutput).ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx)
}

// DataSourceVpcConnectionPropertiesPtrInput is an input type that accepts DataSourceVpcConnectionPropertiesArgs, DataSourceVpcConnectionPropertiesPtr and DataSourceVpcConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `DataSourceVpcConnectionPropertiesPtrInput` via:
//
//          DataSourceVpcConnectionPropertiesArgs{...}
//
//  or:
//
//          nil
type DataSourceVpcConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput
	ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Context) DataSourceVpcConnectionPropertiesPtrOutput
}

type dataSourceVpcConnectionPropertiesPtrType DataSourceVpcConnectionPropertiesArgs

func DataSourceVpcConnectionPropertiesPtr(v *DataSourceVpcConnectionPropertiesArgs) DataSourceVpcConnectionPropertiesPtrInput {
	return (*dataSourceVpcConnectionPropertiesPtrType)(v)
}

func (*dataSourceVpcConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (i *dataSourceVpcConnectionPropertiesPtrType) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return i.ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataSourceVpcConnectionPropertiesPtrType) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVpcConnectionPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-vpcconnectionproperties.html
type DataSourceVpcConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (DataSourceVpcConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesOutput() DataSourceVpcConnectionPropertiesOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return o.ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceVpcConnectionProperties) *DataSourceVpcConnectionProperties {
		return &v
	}).(DataSourceVpcConnectionPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-vpcconnectionproperties.html#cfn-quicksight-datasource-vpcconnectionproperties-vpcconnectionarn
func (o DataSourceVpcConnectionPropertiesOutput) VpcConnectionArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceVpcConnectionProperties) string { return v.VpcConnectionArn }).(pulumi.StringOutput)
}

type DataSourceVpcConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataSourceVpcConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (o DataSourceVpcConnectionPropertiesPtrOutput) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesPtrOutput) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesPtrOutput) Elem() DataSourceVpcConnectionPropertiesOutput {
	return o.ApplyT(func(v *DataSourceVpcConnectionProperties) DataSourceVpcConnectionProperties {
		if v != nil {
			return *v
		}
		var ret DataSourceVpcConnectionProperties
		return ret
	}).(DataSourceVpcConnectionPropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-vpcconnectionproperties.html#cfn-quicksight-datasource-vpcconnectionproperties-vpcconnectionarn
func (o DataSourceVpcConnectionPropertiesPtrOutput) VpcConnectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceVpcConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VpcConnectionArn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-datasetreference.html
type TemplateDataSetReference struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-datasetreference.html#cfn-quicksight-template-datasetreference-datasetarn
	DataSetArn string `pulumi:"dataSetArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-datasetreference.html#cfn-quicksight-template-datasetreference-datasetplaceholder
	DataSetPlaceholder string `pulumi:"dataSetPlaceholder"`
}

// TemplateDataSetReferenceInput is an input type that accepts TemplateDataSetReferenceArgs and TemplateDataSetReferenceOutput values.
// You can construct a concrete instance of `TemplateDataSetReferenceInput` via:
//
//          TemplateDataSetReferenceArgs{...}
type TemplateDataSetReferenceInput interface {
	pulumi.Input

	ToTemplateDataSetReferenceOutput() TemplateDataSetReferenceOutput
	ToTemplateDataSetReferenceOutputWithContext(context.Context) TemplateDataSetReferenceOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-datasetreference.html
type TemplateDataSetReferenceArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-datasetreference.html#cfn-quicksight-template-datasetreference-datasetarn
	DataSetArn pulumi.StringInput `pulumi:"dataSetArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-datasetreference.html#cfn-quicksight-template-datasetreference-datasetplaceholder
	DataSetPlaceholder pulumi.StringInput `pulumi:"dataSetPlaceholder"`
}

func (TemplateDataSetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataSetReference)(nil)).Elem()
}

func (i TemplateDataSetReferenceArgs) ToTemplateDataSetReferenceOutput() TemplateDataSetReferenceOutput {
	return i.ToTemplateDataSetReferenceOutputWithContext(context.Background())
}

func (i TemplateDataSetReferenceArgs) ToTemplateDataSetReferenceOutputWithContext(ctx context.Context) TemplateDataSetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataSetReferenceOutput)
}

// TemplateDataSetReferenceArrayInput is an input type that accepts TemplateDataSetReferenceArray and TemplateDataSetReferenceArrayOutput values.
// You can construct a concrete instance of `TemplateDataSetReferenceArrayInput` via:
//
//          TemplateDataSetReferenceArray{ TemplateDataSetReferenceArgs{...} }
type TemplateDataSetReferenceArrayInput interface {
	pulumi.Input

	ToTemplateDataSetReferenceArrayOutput() TemplateDataSetReferenceArrayOutput
	ToTemplateDataSetReferenceArrayOutputWithContext(context.Context) TemplateDataSetReferenceArrayOutput
}

type TemplateDataSetReferenceArray []TemplateDataSetReferenceInput

func (TemplateDataSetReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataSetReference)(nil)).Elem()
}

func (i TemplateDataSetReferenceArray) ToTemplateDataSetReferenceArrayOutput() TemplateDataSetReferenceArrayOutput {
	return i.ToTemplateDataSetReferenceArrayOutputWithContext(context.Background())
}

func (i TemplateDataSetReferenceArray) ToTemplateDataSetReferenceArrayOutputWithContext(ctx context.Context) TemplateDataSetReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataSetReferenceArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-datasetreference.html
type TemplateDataSetReferenceOutput struct{ *pulumi.OutputState }

func (TemplateDataSetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataSetReference)(nil)).Elem()
}

func (o TemplateDataSetReferenceOutput) ToTemplateDataSetReferenceOutput() TemplateDataSetReferenceOutput {
	return o
}

func (o TemplateDataSetReferenceOutput) ToTemplateDataSetReferenceOutputWithContext(ctx context.Context) TemplateDataSetReferenceOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-datasetreference.html#cfn-quicksight-template-datasetreference-datasetarn
func (o TemplateDataSetReferenceOutput) DataSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDataSetReference) string { return v.DataSetArn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-datasetreference.html#cfn-quicksight-template-datasetreference-datasetplaceholder
func (o TemplateDataSetReferenceOutput) DataSetPlaceholder() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDataSetReference) string { return v.DataSetPlaceholder }).(pulumi.StringOutput)
}

type TemplateDataSetReferenceArrayOutput struct{ *pulumi.OutputState }

func (TemplateDataSetReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataSetReference)(nil)).Elem()
}

func (o TemplateDataSetReferenceArrayOutput) ToTemplateDataSetReferenceArrayOutput() TemplateDataSetReferenceArrayOutput {
	return o
}

func (o TemplateDataSetReferenceArrayOutput) ToTemplateDataSetReferenceArrayOutputWithContext(ctx context.Context) TemplateDataSetReferenceArrayOutput {
	return o
}

func (o TemplateDataSetReferenceArrayOutput) Index(i pulumi.IntInput) TemplateDataSetReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateDataSetReference {
		return vs[0].([]TemplateDataSetReference)[vs[1].(int)]
	}).(TemplateDataSetReferenceOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-resourcepermission.html
type TemplateResourcePermission struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-resourcepermission.html#cfn-quicksight-template-resourcepermission-actions
	Actions []string `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-resourcepermission.html#cfn-quicksight-template-resourcepermission-principal
	Principal string `pulumi:"principal"`
}

// TemplateResourcePermissionInput is an input type that accepts TemplateResourcePermissionArgs and TemplateResourcePermissionOutput values.
// You can construct a concrete instance of `TemplateResourcePermissionInput` via:
//
//          TemplateResourcePermissionArgs{...}
type TemplateResourcePermissionInput interface {
	pulumi.Input

	ToTemplateResourcePermissionOutput() TemplateResourcePermissionOutput
	ToTemplateResourcePermissionOutputWithContext(context.Context) TemplateResourcePermissionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-resourcepermission.html
type TemplateResourcePermissionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-resourcepermission.html#cfn-quicksight-template-resourcepermission-actions
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-resourcepermission.html#cfn-quicksight-template-resourcepermission-principal
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (TemplateResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResourcePermission)(nil)).Elem()
}

func (i TemplateResourcePermissionArgs) ToTemplateResourcePermissionOutput() TemplateResourcePermissionOutput {
	return i.ToTemplateResourcePermissionOutputWithContext(context.Background())
}

func (i TemplateResourcePermissionArgs) ToTemplateResourcePermissionOutputWithContext(ctx context.Context) TemplateResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateResourcePermissionOutput)
}

// TemplateResourcePermissionArrayInput is an input type that accepts TemplateResourcePermissionArray and TemplateResourcePermissionArrayOutput values.
// You can construct a concrete instance of `TemplateResourcePermissionArrayInput` via:
//
//          TemplateResourcePermissionArray{ TemplateResourcePermissionArgs{...} }
type TemplateResourcePermissionArrayInput interface {
	pulumi.Input

	ToTemplateResourcePermissionArrayOutput() TemplateResourcePermissionArrayOutput
	ToTemplateResourcePermissionArrayOutputWithContext(context.Context) TemplateResourcePermissionArrayOutput
}

type TemplateResourcePermissionArray []TemplateResourcePermissionInput

func (TemplateResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateResourcePermission)(nil)).Elem()
}

func (i TemplateResourcePermissionArray) ToTemplateResourcePermissionArrayOutput() TemplateResourcePermissionArrayOutput {
	return i.ToTemplateResourcePermissionArrayOutputWithContext(context.Background())
}

func (i TemplateResourcePermissionArray) ToTemplateResourcePermissionArrayOutputWithContext(ctx context.Context) TemplateResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateResourcePermissionArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-resourcepermission.html
type TemplateResourcePermissionOutput struct{ *pulumi.OutputState }

func (TemplateResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResourcePermission)(nil)).Elem()
}

func (o TemplateResourcePermissionOutput) ToTemplateResourcePermissionOutput() TemplateResourcePermissionOutput {
	return o
}

func (o TemplateResourcePermissionOutput) ToTemplateResourcePermissionOutputWithContext(ctx context.Context) TemplateResourcePermissionOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-resourcepermission.html#cfn-quicksight-template-resourcepermission-actions
func (o TemplateResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-resourcepermission.html#cfn-quicksight-template-resourcepermission-principal
func (o TemplateResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

type TemplateResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (TemplateResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateResourcePermission)(nil)).Elem()
}

func (o TemplateResourcePermissionArrayOutput) ToTemplateResourcePermissionArrayOutput() TemplateResourcePermissionArrayOutput {
	return o
}

func (o TemplateResourcePermissionArrayOutput) ToTemplateResourcePermissionArrayOutputWithContext(ctx context.Context) TemplateResourcePermissionArrayOutput {
	return o
}

func (o TemplateResourcePermissionArrayOutput) Index(i pulumi.IntInput) TemplateResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateResourcePermission {
		return vs[0].([]TemplateResourcePermission)[vs[1].(int)]
	}).(TemplateResourcePermissionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html
type TemplateTemplateSourceAnalysis struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html#cfn-quicksight-template-templatesourceanalysis-arn
	Arn string `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html#cfn-quicksight-template-templatesourceanalysis-datasetreferences
	DataSetReferences []TemplateDataSetReference `pulumi:"dataSetReferences"`
}

// TemplateTemplateSourceAnalysisInput is an input type that accepts TemplateTemplateSourceAnalysisArgs and TemplateTemplateSourceAnalysisOutput values.
// You can construct a concrete instance of `TemplateTemplateSourceAnalysisInput` via:
//
//          TemplateTemplateSourceAnalysisArgs{...}
type TemplateTemplateSourceAnalysisInput interface {
	pulumi.Input

	ToTemplateTemplateSourceAnalysisOutput() TemplateTemplateSourceAnalysisOutput
	ToTemplateTemplateSourceAnalysisOutputWithContext(context.Context) TemplateTemplateSourceAnalysisOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html
type TemplateTemplateSourceAnalysisArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html#cfn-quicksight-template-templatesourceanalysis-arn
	Arn pulumi.StringInput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html#cfn-quicksight-template-templatesourceanalysis-datasetreferences
	DataSetReferences TemplateDataSetReferenceArrayInput `pulumi:"dataSetReferences"`
}

func (TemplateTemplateSourceAnalysisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTemplateSourceAnalysis)(nil)).Elem()
}

func (i TemplateTemplateSourceAnalysisArgs) ToTemplateTemplateSourceAnalysisOutput() TemplateTemplateSourceAnalysisOutput {
	return i.ToTemplateTemplateSourceAnalysisOutputWithContext(context.Background())
}

func (i TemplateTemplateSourceAnalysisArgs) ToTemplateTemplateSourceAnalysisOutputWithContext(ctx context.Context) TemplateTemplateSourceAnalysisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateSourceAnalysisOutput)
}

func (i TemplateTemplateSourceAnalysisArgs) ToTemplateTemplateSourceAnalysisPtrOutput() TemplateTemplateSourceAnalysisPtrOutput {
	return i.ToTemplateTemplateSourceAnalysisPtrOutputWithContext(context.Background())
}

func (i TemplateTemplateSourceAnalysisArgs) ToTemplateTemplateSourceAnalysisPtrOutputWithContext(ctx context.Context) TemplateTemplateSourceAnalysisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateSourceAnalysisOutput).ToTemplateTemplateSourceAnalysisPtrOutputWithContext(ctx)
}

// TemplateTemplateSourceAnalysisPtrInput is an input type that accepts TemplateTemplateSourceAnalysisArgs, TemplateTemplateSourceAnalysisPtr and TemplateTemplateSourceAnalysisPtrOutput values.
// You can construct a concrete instance of `TemplateTemplateSourceAnalysisPtrInput` via:
//
//          TemplateTemplateSourceAnalysisArgs{...}
//
//  or:
//
//          nil
type TemplateTemplateSourceAnalysisPtrInput interface {
	pulumi.Input

	ToTemplateTemplateSourceAnalysisPtrOutput() TemplateTemplateSourceAnalysisPtrOutput
	ToTemplateTemplateSourceAnalysisPtrOutputWithContext(context.Context) TemplateTemplateSourceAnalysisPtrOutput
}

type templateTemplateSourceAnalysisPtrType TemplateTemplateSourceAnalysisArgs

func TemplateTemplateSourceAnalysisPtr(v *TemplateTemplateSourceAnalysisArgs) TemplateTemplateSourceAnalysisPtrInput {
	return (*templateTemplateSourceAnalysisPtrType)(v)
}

func (*templateTemplateSourceAnalysisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTemplateSourceAnalysis)(nil)).Elem()
}

func (i *templateTemplateSourceAnalysisPtrType) ToTemplateTemplateSourceAnalysisPtrOutput() TemplateTemplateSourceAnalysisPtrOutput {
	return i.ToTemplateTemplateSourceAnalysisPtrOutputWithContext(context.Background())
}

func (i *templateTemplateSourceAnalysisPtrType) ToTemplateTemplateSourceAnalysisPtrOutputWithContext(ctx context.Context) TemplateTemplateSourceAnalysisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateSourceAnalysisPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html
type TemplateTemplateSourceAnalysisOutput struct{ *pulumi.OutputState }

func (TemplateTemplateSourceAnalysisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTemplateSourceAnalysis)(nil)).Elem()
}

func (o TemplateTemplateSourceAnalysisOutput) ToTemplateTemplateSourceAnalysisOutput() TemplateTemplateSourceAnalysisOutput {
	return o
}

func (o TemplateTemplateSourceAnalysisOutput) ToTemplateTemplateSourceAnalysisOutputWithContext(ctx context.Context) TemplateTemplateSourceAnalysisOutput {
	return o
}

func (o TemplateTemplateSourceAnalysisOutput) ToTemplateTemplateSourceAnalysisPtrOutput() TemplateTemplateSourceAnalysisPtrOutput {
	return o.ToTemplateTemplateSourceAnalysisPtrOutputWithContext(context.Background())
}

func (o TemplateTemplateSourceAnalysisOutput) ToTemplateTemplateSourceAnalysisPtrOutputWithContext(ctx context.Context) TemplateTemplateSourceAnalysisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTemplateSourceAnalysis) *TemplateTemplateSourceAnalysis {
		return &v
	}).(TemplateTemplateSourceAnalysisPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html#cfn-quicksight-template-templatesourceanalysis-arn
func (o TemplateTemplateSourceAnalysisOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTemplateSourceAnalysis) string { return v.Arn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html#cfn-quicksight-template-templatesourceanalysis-datasetreferences
func (o TemplateTemplateSourceAnalysisOutput) DataSetReferences() TemplateDataSetReferenceArrayOutput {
	return o.ApplyT(func(v TemplateTemplateSourceAnalysis) []TemplateDataSetReference { return v.DataSetReferences }).(TemplateDataSetReferenceArrayOutput)
}

type TemplateTemplateSourceAnalysisPtrOutput struct{ *pulumi.OutputState }

func (TemplateTemplateSourceAnalysisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTemplateSourceAnalysis)(nil)).Elem()
}

func (o TemplateTemplateSourceAnalysisPtrOutput) ToTemplateTemplateSourceAnalysisPtrOutput() TemplateTemplateSourceAnalysisPtrOutput {
	return o
}

func (o TemplateTemplateSourceAnalysisPtrOutput) ToTemplateTemplateSourceAnalysisPtrOutputWithContext(ctx context.Context) TemplateTemplateSourceAnalysisPtrOutput {
	return o
}

func (o TemplateTemplateSourceAnalysisPtrOutput) Elem() TemplateTemplateSourceAnalysisOutput {
	return o.ApplyT(func(v *TemplateTemplateSourceAnalysis) TemplateTemplateSourceAnalysis {
		if v != nil {
			return *v
		}
		var ret TemplateTemplateSourceAnalysis
		return ret
	}).(TemplateTemplateSourceAnalysisOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html#cfn-quicksight-template-templatesourceanalysis-arn
func (o TemplateTemplateSourceAnalysisPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTemplateSourceAnalysis) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceanalysis.html#cfn-quicksight-template-templatesourceanalysis-datasetreferences
func (o TemplateTemplateSourceAnalysisPtrOutput) DataSetReferences() TemplateDataSetReferenceArrayOutput {
	return o.ApplyT(func(v *TemplateTemplateSourceAnalysis) []TemplateDataSetReference {
		if v == nil {
			return nil
		}
		return v.DataSetReferences
	}).(TemplateDataSetReferenceArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html
type TemplateTemplateSourceEntity struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html#cfn-quicksight-template-templatesourceentity-sourceanalysis
	SourceAnalysis *TemplateTemplateSourceAnalysis `pulumi:"sourceAnalysis"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html#cfn-quicksight-template-templatesourceentity-sourcetemplate
	SourceTemplate *TemplateTemplateSourceTemplate `pulumi:"sourceTemplate"`
}

// TemplateTemplateSourceEntityInput is an input type that accepts TemplateTemplateSourceEntityArgs and TemplateTemplateSourceEntityOutput values.
// You can construct a concrete instance of `TemplateTemplateSourceEntityInput` via:
//
//          TemplateTemplateSourceEntityArgs{...}
type TemplateTemplateSourceEntityInput interface {
	pulumi.Input

	ToTemplateTemplateSourceEntityOutput() TemplateTemplateSourceEntityOutput
	ToTemplateTemplateSourceEntityOutputWithContext(context.Context) TemplateTemplateSourceEntityOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html
type TemplateTemplateSourceEntityArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html#cfn-quicksight-template-templatesourceentity-sourceanalysis
	SourceAnalysis TemplateTemplateSourceAnalysisPtrInput `pulumi:"sourceAnalysis"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html#cfn-quicksight-template-templatesourceentity-sourcetemplate
	SourceTemplate TemplateTemplateSourceTemplatePtrInput `pulumi:"sourceTemplate"`
}

func (TemplateTemplateSourceEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTemplateSourceEntity)(nil)).Elem()
}

func (i TemplateTemplateSourceEntityArgs) ToTemplateTemplateSourceEntityOutput() TemplateTemplateSourceEntityOutput {
	return i.ToTemplateTemplateSourceEntityOutputWithContext(context.Background())
}

func (i TemplateTemplateSourceEntityArgs) ToTemplateTemplateSourceEntityOutputWithContext(ctx context.Context) TemplateTemplateSourceEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateSourceEntityOutput)
}

func (i TemplateTemplateSourceEntityArgs) ToTemplateTemplateSourceEntityPtrOutput() TemplateTemplateSourceEntityPtrOutput {
	return i.ToTemplateTemplateSourceEntityPtrOutputWithContext(context.Background())
}

func (i TemplateTemplateSourceEntityArgs) ToTemplateTemplateSourceEntityPtrOutputWithContext(ctx context.Context) TemplateTemplateSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateSourceEntityOutput).ToTemplateTemplateSourceEntityPtrOutputWithContext(ctx)
}

// TemplateTemplateSourceEntityPtrInput is an input type that accepts TemplateTemplateSourceEntityArgs, TemplateTemplateSourceEntityPtr and TemplateTemplateSourceEntityPtrOutput values.
// You can construct a concrete instance of `TemplateTemplateSourceEntityPtrInput` via:
//
//          TemplateTemplateSourceEntityArgs{...}
//
//  or:
//
//          nil
type TemplateTemplateSourceEntityPtrInput interface {
	pulumi.Input

	ToTemplateTemplateSourceEntityPtrOutput() TemplateTemplateSourceEntityPtrOutput
	ToTemplateTemplateSourceEntityPtrOutputWithContext(context.Context) TemplateTemplateSourceEntityPtrOutput
}

type templateTemplateSourceEntityPtrType TemplateTemplateSourceEntityArgs

func TemplateTemplateSourceEntityPtr(v *TemplateTemplateSourceEntityArgs) TemplateTemplateSourceEntityPtrInput {
	return (*templateTemplateSourceEntityPtrType)(v)
}

func (*templateTemplateSourceEntityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTemplateSourceEntity)(nil)).Elem()
}

func (i *templateTemplateSourceEntityPtrType) ToTemplateTemplateSourceEntityPtrOutput() TemplateTemplateSourceEntityPtrOutput {
	return i.ToTemplateTemplateSourceEntityPtrOutputWithContext(context.Background())
}

func (i *templateTemplateSourceEntityPtrType) ToTemplateTemplateSourceEntityPtrOutputWithContext(ctx context.Context) TemplateTemplateSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateSourceEntityPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html
type TemplateTemplateSourceEntityOutput struct{ *pulumi.OutputState }

func (TemplateTemplateSourceEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTemplateSourceEntity)(nil)).Elem()
}

func (o TemplateTemplateSourceEntityOutput) ToTemplateTemplateSourceEntityOutput() TemplateTemplateSourceEntityOutput {
	return o
}

func (o TemplateTemplateSourceEntityOutput) ToTemplateTemplateSourceEntityOutputWithContext(ctx context.Context) TemplateTemplateSourceEntityOutput {
	return o
}

func (o TemplateTemplateSourceEntityOutput) ToTemplateTemplateSourceEntityPtrOutput() TemplateTemplateSourceEntityPtrOutput {
	return o.ToTemplateTemplateSourceEntityPtrOutputWithContext(context.Background())
}

func (o TemplateTemplateSourceEntityOutput) ToTemplateTemplateSourceEntityPtrOutputWithContext(ctx context.Context) TemplateTemplateSourceEntityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTemplateSourceEntity) *TemplateTemplateSourceEntity {
		return &v
	}).(TemplateTemplateSourceEntityPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html#cfn-quicksight-template-templatesourceentity-sourceanalysis
func (o TemplateTemplateSourceEntityOutput) SourceAnalysis() TemplateTemplateSourceAnalysisPtrOutput {
	return o.ApplyT(func(v TemplateTemplateSourceEntity) *TemplateTemplateSourceAnalysis { return v.SourceAnalysis }).(TemplateTemplateSourceAnalysisPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html#cfn-quicksight-template-templatesourceentity-sourcetemplate
func (o TemplateTemplateSourceEntityOutput) SourceTemplate() TemplateTemplateSourceTemplatePtrOutput {
	return o.ApplyT(func(v TemplateTemplateSourceEntity) *TemplateTemplateSourceTemplate { return v.SourceTemplate }).(TemplateTemplateSourceTemplatePtrOutput)
}

type TemplateTemplateSourceEntityPtrOutput struct{ *pulumi.OutputState }

func (TemplateTemplateSourceEntityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTemplateSourceEntity)(nil)).Elem()
}

func (o TemplateTemplateSourceEntityPtrOutput) ToTemplateTemplateSourceEntityPtrOutput() TemplateTemplateSourceEntityPtrOutput {
	return o
}

func (o TemplateTemplateSourceEntityPtrOutput) ToTemplateTemplateSourceEntityPtrOutputWithContext(ctx context.Context) TemplateTemplateSourceEntityPtrOutput {
	return o
}

func (o TemplateTemplateSourceEntityPtrOutput) Elem() TemplateTemplateSourceEntityOutput {
	return o.ApplyT(func(v *TemplateTemplateSourceEntity) TemplateTemplateSourceEntity {
		if v != nil {
			return *v
		}
		var ret TemplateTemplateSourceEntity
		return ret
	}).(TemplateTemplateSourceEntityOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html#cfn-quicksight-template-templatesourceentity-sourceanalysis
func (o TemplateTemplateSourceEntityPtrOutput) SourceAnalysis() TemplateTemplateSourceAnalysisPtrOutput {
	return o.ApplyT(func(v *TemplateTemplateSourceEntity) *TemplateTemplateSourceAnalysis {
		if v == nil {
			return nil
		}
		return v.SourceAnalysis
	}).(TemplateTemplateSourceAnalysisPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourceentity.html#cfn-quicksight-template-templatesourceentity-sourcetemplate
func (o TemplateTemplateSourceEntityPtrOutput) SourceTemplate() TemplateTemplateSourceTemplatePtrOutput {
	return o.ApplyT(func(v *TemplateTemplateSourceEntity) *TemplateTemplateSourceTemplate {
		if v == nil {
			return nil
		}
		return v.SourceTemplate
	}).(TemplateTemplateSourceTemplatePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourcetemplate.html
type TemplateTemplateSourceTemplate struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourcetemplate.html#cfn-quicksight-template-templatesourcetemplate-arn
	Arn string `pulumi:"arn"`
}

// TemplateTemplateSourceTemplateInput is an input type that accepts TemplateTemplateSourceTemplateArgs and TemplateTemplateSourceTemplateOutput values.
// You can construct a concrete instance of `TemplateTemplateSourceTemplateInput` via:
//
//          TemplateTemplateSourceTemplateArgs{...}
type TemplateTemplateSourceTemplateInput interface {
	pulumi.Input

	ToTemplateTemplateSourceTemplateOutput() TemplateTemplateSourceTemplateOutput
	ToTemplateTemplateSourceTemplateOutputWithContext(context.Context) TemplateTemplateSourceTemplateOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourcetemplate.html
type TemplateTemplateSourceTemplateArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourcetemplate.html#cfn-quicksight-template-templatesourcetemplate-arn
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (TemplateTemplateSourceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTemplateSourceTemplate)(nil)).Elem()
}

func (i TemplateTemplateSourceTemplateArgs) ToTemplateTemplateSourceTemplateOutput() TemplateTemplateSourceTemplateOutput {
	return i.ToTemplateTemplateSourceTemplateOutputWithContext(context.Background())
}

func (i TemplateTemplateSourceTemplateArgs) ToTemplateTemplateSourceTemplateOutputWithContext(ctx context.Context) TemplateTemplateSourceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateSourceTemplateOutput)
}

func (i TemplateTemplateSourceTemplateArgs) ToTemplateTemplateSourceTemplatePtrOutput() TemplateTemplateSourceTemplatePtrOutput {
	return i.ToTemplateTemplateSourceTemplatePtrOutputWithContext(context.Background())
}

func (i TemplateTemplateSourceTemplateArgs) ToTemplateTemplateSourceTemplatePtrOutputWithContext(ctx context.Context) TemplateTemplateSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateSourceTemplateOutput).ToTemplateTemplateSourceTemplatePtrOutputWithContext(ctx)
}

// TemplateTemplateSourceTemplatePtrInput is an input type that accepts TemplateTemplateSourceTemplateArgs, TemplateTemplateSourceTemplatePtr and TemplateTemplateSourceTemplatePtrOutput values.
// You can construct a concrete instance of `TemplateTemplateSourceTemplatePtrInput` via:
//
//          TemplateTemplateSourceTemplateArgs{...}
//
//  or:
//
//          nil
type TemplateTemplateSourceTemplatePtrInput interface {
	pulumi.Input

	ToTemplateTemplateSourceTemplatePtrOutput() TemplateTemplateSourceTemplatePtrOutput
	ToTemplateTemplateSourceTemplatePtrOutputWithContext(context.Context) TemplateTemplateSourceTemplatePtrOutput
}

type templateTemplateSourceTemplatePtrType TemplateTemplateSourceTemplateArgs

func TemplateTemplateSourceTemplatePtr(v *TemplateTemplateSourceTemplateArgs) TemplateTemplateSourceTemplatePtrInput {
	return (*templateTemplateSourceTemplatePtrType)(v)
}

func (*templateTemplateSourceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTemplateSourceTemplate)(nil)).Elem()
}

func (i *templateTemplateSourceTemplatePtrType) ToTemplateTemplateSourceTemplatePtrOutput() TemplateTemplateSourceTemplatePtrOutput {
	return i.ToTemplateTemplateSourceTemplatePtrOutputWithContext(context.Background())
}

func (i *templateTemplateSourceTemplatePtrType) ToTemplateTemplateSourceTemplatePtrOutputWithContext(ctx context.Context) TemplateTemplateSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateSourceTemplatePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourcetemplate.html
type TemplateTemplateSourceTemplateOutput struct{ *pulumi.OutputState }

func (TemplateTemplateSourceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTemplateSourceTemplate)(nil)).Elem()
}

func (o TemplateTemplateSourceTemplateOutput) ToTemplateTemplateSourceTemplateOutput() TemplateTemplateSourceTemplateOutput {
	return o
}

func (o TemplateTemplateSourceTemplateOutput) ToTemplateTemplateSourceTemplateOutputWithContext(ctx context.Context) TemplateTemplateSourceTemplateOutput {
	return o
}

func (o TemplateTemplateSourceTemplateOutput) ToTemplateTemplateSourceTemplatePtrOutput() TemplateTemplateSourceTemplatePtrOutput {
	return o.ToTemplateTemplateSourceTemplatePtrOutputWithContext(context.Background())
}

func (o TemplateTemplateSourceTemplateOutput) ToTemplateTemplateSourceTemplatePtrOutputWithContext(ctx context.Context) TemplateTemplateSourceTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTemplateSourceTemplate) *TemplateTemplateSourceTemplate {
		return &v
	}).(TemplateTemplateSourceTemplatePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourcetemplate.html#cfn-quicksight-template-templatesourcetemplate-arn
func (o TemplateTemplateSourceTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTemplateSourceTemplate) string { return v.Arn }).(pulumi.StringOutput)
}

type TemplateTemplateSourceTemplatePtrOutput struct{ *pulumi.OutputState }

func (TemplateTemplateSourceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTemplateSourceTemplate)(nil)).Elem()
}

func (o TemplateTemplateSourceTemplatePtrOutput) ToTemplateTemplateSourceTemplatePtrOutput() TemplateTemplateSourceTemplatePtrOutput {
	return o
}

func (o TemplateTemplateSourceTemplatePtrOutput) ToTemplateTemplateSourceTemplatePtrOutputWithContext(ctx context.Context) TemplateTemplateSourceTemplatePtrOutput {
	return o
}

func (o TemplateTemplateSourceTemplatePtrOutput) Elem() TemplateTemplateSourceTemplateOutput {
	return o.ApplyT(func(v *TemplateTemplateSourceTemplate) TemplateTemplateSourceTemplate {
		if v != nil {
			return *v
		}
		var ret TemplateTemplateSourceTemplate
		return ret
	}).(TemplateTemplateSourceTemplateOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-template-templatesourcetemplate.html#cfn-quicksight-template-templatesourcetemplate-arn
func (o TemplateTemplateSourceTemplatePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTemplateSourceTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-borderstyle.html
type ThemeBorderStyle struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-borderstyle.html#cfn-quicksight-theme-borderstyle-show
	Show *bool `pulumi:"show"`
}

// ThemeBorderStyleInput is an input type that accepts ThemeBorderStyleArgs and ThemeBorderStyleOutput values.
// You can construct a concrete instance of `ThemeBorderStyleInput` via:
//
//          ThemeBorderStyleArgs{...}
type ThemeBorderStyleInput interface {
	pulumi.Input

	ToThemeBorderStyleOutput() ThemeBorderStyleOutput
	ToThemeBorderStyleOutputWithContext(context.Context) ThemeBorderStyleOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-borderstyle.html
type ThemeBorderStyleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-borderstyle.html#cfn-quicksight-theme-borderstyle-show
	Show pulumi.BoolPtrInput `pulumi:"show"`
}

func (ThemeBorderStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeBorderStyle)(nil)).Elem()
}

func (i ThemeBorderStyleArgs) ToThemeBorderStyleOutput() ThemeBorderStyleOutput {
	return i.ToThemeBorderStyleOutputWithContext(context.Background())
}

func (i ThemeBorderStyleArgs) ToThemeBorderStyleOutputWithContext(ctx context.Context) ThemeBorderStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeBorderStyleOutput)
}

func (i ThemeBorderStyleArgs) ToThemeBorderStylePtrOutput() ThemeBorderStylePtrOutput {
	return i.ToThemeBorderStylePtrOutputWithContext(context.Background())
}

func (i ThemeBorderStyleArgs) ToThemeBorderStylePtrOutputWithContext(ctx context.Context) ThemeBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeBorderStyleOutput).ToThemeBorderStylePtrOutputWithContext(ctx)
}

// ThemeBorderStylePtrInput is an input type that accepts ThemeBorderStyleArgs, ThemeBorderStylePtr and ThemeBorderStylePtrOutput values.
// You can construct a concrete instance of `ThemeBorderStylePtrInput` via:
//
//          ThemeBorderStyleArgs{...}
//
//  or:
//
//          nil
type ThemeBorderStylePtrInput interface {
	pulumi.Input

	ToThemeBorderStylePtrOutput() ThemeBorderStylePtrOutput
	ToThemeBorderStylePtrOutputWithContext(context.Context) ThemeBorderStylePtrOutput
}

type themeBorderStylePtrType ThemeBorderStyleArgs

func ThemeBorderStylePtr(v *ThemeBorderStyleArgs) ThemeBorderStylePtrInput {
	return (*themeBorderStylePtrType)(v)
}

func (*themeBorderStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeBorderStyle)(nil)).Elem()
}

func (i *themeBorderStylePtrType) ToThemeBorderStylePtrOutput() ThemeBorderStylePtrOutput {
	return i.ToThemeBorderStylePtrOutputWithContext(context.Background())
}

func (i *themeBorderStylePtrType) ToThemeBorderStylePtrOutputWithContext(ctx context.Context) ThemeBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeBorderStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-borderstyle.html
type ThemeBorderStyleOutput struct{ *pulumi.OutputState }

func (ThemeBorderStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeBorderStyle)(nil)).Elem()
}

func (o ThemeBorderStyleOutput) ToThemeBorderStyleOutput() ThemeBorderStyleOutput {
	return o
}

func (o ThemeBorderStyleOutput) ToThemeBorderStyleOutputWithContext(ctx context.Context) ThemeBorderStyleOutput {
	return o
}

func (o ThemeBorderStyleOutput) ToThemeBorderStylePtrOutput() ThemeBorderStylePtrOutput {
	return o.ToThemeBorderStylePtrOutputWithContext(context.Background())
}

func (o ThemeBorderStyleOutput) ToThemeBorderStylePtrOutputWithContext(ctx context.Context) ThemeBorderStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeBorderStyle) *ThemeBorderStyle {
		return &v
	}).(ThemeBorderStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-borderstyle.html#cfn-quicksight-theme-borderstyle-show
func (o ThemeBorderStyleOutput) Show() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ThemeBorderStyle) *bool { return v.Show }).(pulumi.BoolPtrOutput)
}

type ThemeBorderStylePtrOutput struct{ *pulumi.OutputState }

func (ThemeBorderStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeBorderStyle)(nil)).Elem()
}

func (o ThemeBorderStylePtrOutput) ToThemeBorderStylePtrOutput() ThemeBorderStylePtrOutput {
	return o
}

func (o ThemeBorderStylePtrOutput) ToThemeBorderStylePtrOutputWithContext(ctx context.Context) ThemeBorderStylePtrOutput {
	return o
}

func (o ThemeBorderStylePtrOutput) Elem() ThemeBorderStyleOutput {
	return o.ApplyT(func(v *ThemeBorderStyle) ThemeBorderStyle {
		if v != nil {
			return *v
		}
		var ret ThemeBorderStyle
		return ret
	}).(ThemeBorderStyleOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-borderstyle.html#cfn-quicksight-theme-borderstyle-show
func (o ThemeBorderStylePtrOutput) Show() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ThemeBorderStyle) *bool {
		if v == nil {
			return nil
		}
		return v.Show
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html
type ThemeDataColorPalette struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-colors
	Colors []string `pulumi:"colors"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-emptyfillcolor
	EmptyFillColor *string `pulumi:"emptyFillColor"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-minmaxgradient
	MinMaxGradient []string `pulumi:"minMaxGradient"`
}

// ThemeDataColorPaletteInput is an input type that accepts ThemeDataColorPaletteArgs and ThemeDataColorPaletteOutput values.
// You can construct a concrete instance of `ThemeDataColorPaletteInput` via:
//
//          ThemeDataColorPaletteArgs{...}
type ThemeDataColorPaletteInput interface {
	pulumi.Input

	ToThemeDataColorPaletteOutput() ThemeDataColorPaletteOutput
	ToThemeDataColorPaletteOutputWithContext(context.Context) ThemeDataColorPaletteOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html
type ThemeDataColorPaletteArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-colors
	Colors pulumi.StringArrayInput `pulumi:"colors"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-emptyfillcolor
	EmptyFillColor pulumi.StringPtrInput `pulumi:"emptyFillColor"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-minmaxgradient
	MinMaxGradient pulumi.StringArrayInput `pulumi:"minMaxGradient"`
}

func (ThemeDataColorPaletteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeDataColorPalette)(nil)).Elem()
}

func (i ThemeDataColorPaletteArgs) ToThemeDataColorPaletteOutput() ThemeDataColorPaletteOutput {
	return i.ToThemeDataColorPaletteOutputWithContext(context.Background())
}

func (i ThemeDataColorPaletteArgs) ToThemeDataColorPaletteOutputWithContext(ctx context.Context) ThemeDataColorPaletteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeDataColorPaletteOutput)
}

func (i ThemeDataColorPaletteArgs) ToThemeDataColorPalettePtrOutput() ThemeDataColorPalettePtrOutput {
	return i.ToThemeDataColorPalettePtrOutputWithContext(context.Background())
}

func (i ThemeDataColorPaletteArgs) ToThemeDataColorPalettePtrOutputWithContext(ctx context.Context) ThemeDataColorPalettePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeDataColorPaletteOutput).ToThemeDataColorPalettePtrOutputWithContext(ctx)
}

// ThemeDataColorPalettePtrInput is an input type that accepts ThemeDataColorPaletteArgs, ThemeDataColorPalettePtr and ThemeDataColorPalettePtrOutput values.
// You can construct a concrete instance of `ThemeDataColorPalettePtrInput` via:
//
//          ThemeDataColorPaletteArgs{...}
//
//  or:
//
//          nil
type ThemeDataColorPalettePtrInput interface {
	pulumi.Input

	ToThemeDataColorPalettePtrOutput() ThemeDataColorPalettePtrOutput
	ToThemeDataColorPalettePtrOutputWithContext(context.Context) ThemeDataColorPalettePtrOutput
}

type themeDataColorPalettePtrType ThemeDataColorPaletteArgs

func ThemeDataColorPalettePtr(v *ThemeDataColorPaletteArgs) ThemeDataColorPalettePtrInput {
	return (*themeDataColorPalettePtrType)(v)
}

func (*themeDataColorPalettePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeDataColorPalette)(nil)).Elem()
}

func (i *themeDataColorPalettePtrType) ToThemeDataColorPalettePtrOutput() ThemeDataColorPalettePtrOutput {
	return i.ToThemeDataColorPalettePtrOutputWithContext(context.Background())
}

func (i *themeDataColorPalettePtrType) ToThemeDataColorPalettePtrOutputWithContext(ctx context.Context) ThemeDataColorPalettePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeDataColorPalettePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html
type ThemeDataColorPaletteOutput struct{ *pulumi.OutputState }

func (ThemeDataColorPaletteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeDataColorPalette)(nil)).Elem()
}

func (o ThemeDataColorPaletteOutput) ToThemeDataColorPaletteOutput() ThemeDataColorPaletteOutput {
	return o
}

func (o ThemeDataColorPaletteOutput) ToThemeDataColorPaletteOutputWithContext(ctx context.Context) ThemeDataColorPaletteOutput {
	return o
}

func (o ThemeDataColorPaletteOutput) ToThemeDataColorPalettePtrOutput() ThemeDataColorPalettePtrOutput {
	return o.ToThemeDataColorPalettePtrOutputWithContext(context.Background())
}

func (o ThemeDataColorPaletteOutput) ToThemeDataColorPalettePtrOutputWithContext(ctx context.Context) ThemeDataColorPalettePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeDataColorPalette) *ThemeDataColorPalette {
		return &v
	}).(ThemeDataColorPalettePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-colors
func (o ThemeDataColorPaletteOutput) Colors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ThemeDataColorPalette) []string { return v.Colors }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-emptyfillcolor
func (o ThemeDataColorPaletteOutput) EmptyFillColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeDataColorPalette) *string { return v.EmptyFillColor }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-minmaxgradient
func (o ThemeDataColorPaletteOutput) MinMaxGradient() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ThemeDataColorPalette) []string { return v.MinMaxGradient }).(pulumi.StringArrayOutput)
}

type ThemeDataColorPalettePtrOutput struct{ *pulumi.OutputState }

func (ThemeDataColorPalettePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeDataColorPalette)(nil)).Elem()
}

func (o ThemeDataColorPalettePtrOutput) ToThemeDataColorPalettePtrOutput() ThemeDataColorPalettePtrOutput {
	return o
}

func (o ThemeDataColorPalettePtrOutput) ToThemeDataColorPalettePtrOutputWithContext(ctx context.Context) ThemeDataColorPalettePtrOutput {
	return o
}

func (o ThemeDataColorPalettePtrOutput) Elem() ThemeDataColorPaletteOutput {
	return o.ApplyT(func(v *ThemeDataColorPalette) ThemeDataColorPalette {
		if v != nil {
			return *v
		}
		var ret ThemeDataColorPalette
		return ret
	}).(ThemeDataColorPaletteOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-colors
func (o ThemeDataColorPalettePtrOutput) Colors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ThemeDataColorPalette) []string {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-emptyfillcolor
func (o ThemeDataColorPalettePtrOutput) EmptyFillColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeDataColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.EmptyFillColor
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-datacolorpalette.html#cfn-quicksight-theme-datacolorpalette-minmaxgradient
func (o ThemeDataColorPalettePtrOutput) MinMaxGradient() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ThemeDataColorPalette) []string {
		if v == nil {
			return nil
		}
		return v.MinMaxGradient
	}).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-font.html
type ThemeFont struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-font.html#cfn-quicksight-theme-font-fontfamily
	FontFamily *string `pulumi:"fontFamily"`
}

// ThemeFontInput is an input type that accepts ThemeFontArgs and ThemeFontOutput values.
// You can construct a concrete instance of `ThemeFontInput` via:
//
//          ThemeFontArgs{...}
type ThemeFontInput interface {
	pulumi.Input

	ToThemeFontOutput() ThemeFontOutput
	ToThemeFontOutputWithContext(context.Context) ThemeFontOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-font.html
type ThemeFontArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-font.html#cfn-quicksight-theme-font-fontfamily
	FontFamily pulumi.StringPtrInput `pulumi:"fontFamily"`
}

func (ThemeFontArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeFont)(nil)).Elem()
}

func (i ThemeFontArgs) ToThemeFontOutput() ThemeFontOutput {
	return i.ToThemeFontOutputWithContext(context.Background())
}

func (i ThemeFontArgs) ToThemeFontOutputWithContext(ctx context.Context) ThemeFontOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeFontOutput)
}

// ThemeFontArrayInput is an input type that accepts ThemeFontArray and ThemeFontArrayOutput values.
// You can construct a concrete instance of `ThemeFontArrayInput` via:
//
//          ThemeFontArray{ ThemeFontArgs{...} }
type ThemeFontArrayInput interface {
	pulumi.Input

	ToThemeFontArrayOutput() ThemeFontArrayOutput
	ToThemeFontArrayOutputWithContext(context.Context) ThemeFontArrayOutput
}

type ThemeFontArray []ThemeFontInput

func (ThemeFontArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThemeFont)(nil)).Elem()
}

func (i ThemeFontArray) ToThemeFontArrayOutput() ThemeFontArrayOutput {
	return i.ToThemeFontArrayOutputWithContext(context.Background())
}

func (i ThemeFontArray) ToThemeFontArrayOutputWithContext(ctx context.Context) ThemeFontArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeFontArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-font.html
type ThemeFontOutput struct{ *pulumi.OutputState }

func (ThemeFontOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeFont)(nil)).Elem()
}

func (o ThemeFontOutput) ToThemeFontOutput() ThemeFontOutput {
	return o
}

func (o ThemeFontOutput) ToThemeFontOutputWithContext(ctx context.Context) ThemeFontOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-font.html#cfn-quicksight-theme-font-fontfamily
func (o ThemeFontOutput) FontFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeFont) *string { return v.FontFamily }).(pulumi.StringPtrOutput)
}

type ThemeFontArrayOutput struct{ *pulumi.OutputState }

func (ThemeFontArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThemeFont)(nil)).Elem()
}

func (o ThemeFontArrayOutput) ToThemeFontArrayOutput() ThemeFontArrayOutput {
	return o
}

func (o ThemeFontArrayOutput) ToThemeFontArrayOutputWithContext(ctx context.Context) ThemeFontArrayOutput {
	return o
}

func (o ThemeFontArrayOutput) Index(i pulumi.IntInput) ThemeFontOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThemeFont {
		return vs[0].([]ThemeFont)[vs[1].(int)]
	}).(ThemeFontOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-gutterstyle.html
type ThemeGutterStyle struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-gutterstyle.html#cfn-quicksight-theme-gutterstyle-show
	Show *bool `pulumi:"show"`
}

// ThemeGutterStyleInput is an input type that accepts ThemeGutterStyleArgs and ThemeGutterStyleOutput values.
// You can construct a concrete instance of `ThemeGutterStyleInput` via:
//
//          ThemeGutterStyleArgs{...}
type ThemeGutterStyleInput interface {
	pulumi.Input

	ToThemeGutterStyleOutput() ThemeGutterStyleOutput
	ToThemeGutterStyleOutputWithContext(context.Context) ThemeGutterStyleOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-gutterstyle.html
type ThemeGutterStyleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-gutterstyle.html#cfn-quicksight-theme-gutterstyle-show
	Show pulumi.BoolPtrInput `pulumi:"show"`
}

func (ThemeGutterStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeGutterStyle)(nil)).Elem()
}

func (i ThemeGutterStyleArgs) ToThemeGutterStyleOutput() ThemeGutterStyleOutput {
	return i.ToThemeGutterStyleOutputWithContext(context.Background())
}

func (i ThemeGutterStyleArgs) ToThemeGutterStyleOutputWithContext(ctx context.Context) ThemeGutterStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeGutterStyleOutput)
}

func (i ThemeGutterStyleArgs) ToThemeGutterStylePtrOutput() ThemeGutterStylePtrOutput {
	return i.ToThemeGutterStylePtrOutputWithContext(context.Background())
}

func (i ThemeGutterStyleArgs) ToThemeGutterStylePtrOutputWithContext(ctx context.Context) ThemeGutterStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeGutterStyleOutput).ToThemeGutterStylePtrOutputWithContext(ctx)
}

// ThemeGutterStylePtrInput is an input type that accepts ThemeGutterStyleArgs, ThemeGutterStylePtr and ThemeGutterStylePtrOutput values.
// You can construct a concrete instance of `ThemeGutterStylePtrInput` via:
//
//          ThemeGutterStyleArgs{...}
//
//  or:
//
//          nil
type ThemeGutterStylePtrInput interface {
	pulumi.Input

	ToThemeGutterStylePtrOutput() ThemeGutterStylePtrOutput
	ToThemeGutterStylePtrOutputWithContext(context.Context) ThemeGutterStylePtrOutput
}

type themeGutterStylePtrType ThemeGutterStyleArgs

func ThemeGutterStylePtr(v *ThemeGutterStyleArgs) ThemeGutterStylePtrInput {
	return (*themeGutterStylePtrType)(v)
}

func (*themeGutterStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeGutterStyle)(nil)).Elem()
}

func (i *themeGutterStylePtrType) ToThemeGutterStylePtrOutput() ThemeGutterStylePtrOutput {
	return i.ToThemeGutterStylePtrOutputWithContext(context.Background())
}

func (i *themeGutterStylePtrType) ToThemeGutterStylePtrOutputWithContext(ctx context.Context) ThemeGutterStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeGutterStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-gutterstyle.html
type ThemeGutterStyleOutput struct{ *pulumi.OutputState }

func (ThemeGutterStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeGutterStyle)(nil)).Elem()
}

func (o ThemeGutterStyleOutput) ToThemeGutterStyleOutput() ThemeGutterStyleOutput {
	return o
}

func (o ThemeGutterStyleOutput) ToThemeGutterStyleOutputWithContext(ctx context.Context) ThemeGutterStyleOutput {
	return o
}

func (o ThemeGutterStyleOutput) ToThemeGutterStylePtrOutput() ThemeGutterStylePtrOutput {
	return o.ToThemeGutterStylePtrOutputWithContext(context.Background())
}

func (o ThemeGutterStyleOutput) ToThemeGutterStylePtrOutputWithContext(ctx context.Context) ThemeGutterStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeGutterStyle) *ThemeGutterStyle {
		return &v
	}).(ThemeGutterStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-gutterstyle.html#cfn-quicksight-theme-gutterstyle-show
func (o ThemeGutterStyleOutput) Show() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ThemeGutterStyle) *bool { return v.Show }).(pulumi.BoolPtrOutput)
}

type ThemeGutterStylePtrOutput struct{ *pulumi.OutputState }

func (ThemeGutterStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeGutterStyle)(nil)).Elem()
}

func (o ThemeGutterStylePtrOutput) ToThemeGutterStylePtrOutput() ThemeGutterStylePtrOutput {
	return o
}

func (o ThemeGutterStylePtrOutput) ToThemeGutterStylePtrOutputWithContext(ctx context.Context) ThemeGutterStylePtrOutput {
	return o
}

func (o ThemeGutterStylePtrOutput) Elem() ThemeGutterStyleOutput {
	return o.ApplyT(func(v *ThemeGutterStyle) ThemeGutterStyle {
		if v != nil {
			return *v
		}
		var ret ThemeGutterStyle
		return ret
	}).(ThemeGutterStyleOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-gutterstyle.html#cfn-quicksight-theme-gutterstyle-show
func (o ThemeGutterStylePtrOutput) Show() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ThemeGutterStyle) *bool {
		if v == nil {
			return nil
		}
		return v.Show
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-marginstyle.html
type ThemeMarginStyle struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-marginstyle.html#cfn-quicksight-theme-marginstyle-show
	Show *bool `pulumi:"show"`
}

// ThemeMarginStyleInput is an input type that accepts ThemeMarginStyleArgs and ThemeMarginStyleOutput values.
// You can construct a concrete instance of `ThemeMarginStyleInput` via:
//
//          ThemeMarginStyleArgs{...}
type ThemeMarginStyleInput interface {
	pulumi.Input

	ToThemeMarginStyleOutput() ThemeMarginStyleOutput
	ToThemeMarginStyleOutputWithContext(context.Context) ThemeMarginStyleOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-marginstyle.html
type ThemeMarginStyleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-marginstyle.html#cfn-quicksight-theme-marginstyle-show
	Show pulumi.BoolPtrInput `pulumi:"show"`
}

func (ThemeMarginStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeMarginStyle)(nil)).Elem()
}

func (i ThemeMarginStyleArgs) ToThemeMarginStyleOutput() ThemeMarginStyleOutput {
	return i.ToThemeMarginStyleOutputWithContext(context.Background())
}

func (i ThemeMarginStyleArgs) ToThemeMarginStyleOutputWithContext(ctx context.Context) ThemeMarginStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeMarginStyleOutput)
}

func (i ThemeMarginStyleArgs) ToThemeMarginStylePtrOutput() ThemeMarginStylePtrOutput {
	return i.ToThemeMarginStylePtrOutputWithContext(context.Background())
}

func (i ThemeMarginStyleArgs) ToThemeMarginStylePtrOutputWithContext(ctx context.Context) ThemeMarginStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeMarginStyleOutput).ToThemeMarginStylePtrOutputWithContext(ctx)
}

// ThemeMarginStylePtrInput is an input type that accepts ThemeMarginStyleArgs, ThemeMarginStylePtr and ThemeMarginStylePtrOutput values.
// You can construct a concrete instance of `ThemeMarginStylePtrInput` via:
//
//          ThemeMarginStyleArgs{...}
//
//  or:
//
//          nil
type ThemeMarginStylePtrInput interface {
	pulumi.Input

	ToThemeMarginStylePtrOutput() ThemeMarginStylePtrOutput
	ToThemeMarginStylePtrOutputWithContext(context.Context) ThemeMarginStylePtrOutput
}

type themeMarginStylePtrType ThemeMarginStyleArgs

func ThemeMarginStylePtr(v *ThemeMarginStyleArgs) ThemeMarginStylePtrInput {
	return (*themeMarginStylePtrType)(v)
}

func (*themeMarginStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeMarginStyle)(nil)).Elem()
}

func (i *themeMarginStylePtrType) ToThemeMarginStylePtrOutput() ThemeMarginStylePtrOutput {
	return i.ToThemeMarginStylePtrOutputWithContext(context.Background())
}

func (i *themeMarginStylePtrType) ToThemeMarginStylePtrOutputWithContext(ctx context.Context) ThemeMarginStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeMarginStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-marginstyle.html
type ThemeMarginStyleOutput struct{ *pulumi.OutputState }

func (ThemeMarginStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeMarginStyle)(nil)).Elem()
}

func (o ThemeMarginStyleOutput) ToThemeMarginStyleOutput() ThemeMarginStyleOutput {
	return o
}

func (o ThemeMarginStyleOutput) ToThemeMarginStyleOutputWithContext(ctx context.Context) ThemeMarginStyleOutput {
	return o
}

func (o ThemeMarginStyleOutput) ToThemeMarginStylePtrOutput() ThemeMarginStylePtrOutput {
	return o.ToThemeMarginStylePtrOutputWithContext(context.Background())
}

func (o ThemeMarginStyleOutput) ToThemeMarginStylePtrOutputWithContext(ctx context.Context) ThemeMarginStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeMarginStyle) *ThemeMarginStyle {
		return &v
	}).(ThemeMarginStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-marginstyle.html#cfn-quicksight-theme-marginstyle-show
func (o ThemeMarginStyleOutput) Show() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ThemeMarginStyle) *bool { return v.Show }).(pulumi.BoolPtrOutput)
}

type ThemeMarginStylePtrOutput struct{ *pulumi.OutputState }

func (ThemeMarginStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeMarginStyle)(nil)).Elem()
}

func (o ThemeMarginStylePtrOutput) ToThemeMarginStylePtrOutput() ThemeMarginStylePtrOutput {
	return o
}

func (o ThemeMarginStylePtrOutput) ToThemeMarginStylePtrOutputWithContext(ctx context.Context) ThemeMarginStylePtrOutput {
	return o
}

func (o ThemeMarginStylePtrOutput) Elem() ThemeMarginStyleOutput {
	return o.ApplyT(func(v *ThemeMarginStyle) ThemeMarginStyle {
		if v != nil {
			return *v
		}
		var ret ThemeMarginStyle
		return ret
	}).(ThemeMarginStyleOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-marginstyle.html#cfn-quicksight-theme-marginstyle-show
func (o ThemeMarginStylePtrOutput) Show() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ThemeMarginStyle) *bool {
		if v == nil {
			return nil
		}
		return v.Show
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-resourcepermission.html
type ThemeResourcePermission struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-resourcepermission.html#cfn-quicksight-theme-resourcepermission-actions
	Actions []string `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-resourcepermission.html#cfn-quicksight-theme-resourcepermission-principal
	Principal string `pulumi:"principal"`
}

// ThemeResourcePermissionInput is an input type that accepts ThemeResourcePermissionArgs and ThemeResourcePermissionOutput values.
// You can construct a concrete instance of `ThemeResourcePermissionInput` via:
//
//          ThemeResourcePermissionArgs{...}
type ThemeResourcePermissionInput interface {
	pulumi.Input

	ToThemeResourcePermissionOutput() ThemeResourcePermissionOutput
	ToThemeResourcePermissionOutputWithContext(context.Context) ThemeResourcePermissionOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-resourcepermission.html
type ThemeResourcePermissionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-resourcepermission.html#cfn-quicksight-theme-resourcepermission-actions
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-resourcepermission.html#cfn-quicksight-theme-resourcepermission-principal
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (ThemeResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeResourcePermission)(nil)).Elem()
}

func (i ThemeResourcePermissionArgs) ToThemeResourcePermissionOutput() ThemeResourcePermissionOutput {
	return i.ToThemeResourcePermissionOutputWithContext(context.Background())
}

func (i ThemeResourcePermissionArgs) ToThemeResourcePermissionOutputWithContext(ctx context.Context) ThemeResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeResourcePermissionOutput)
}

// ThemeResourcePermissionArrayInput is an input type that accepts ThemeResourcePermissionArray and ThemeResourcePermissionArrayOutput values.
// You can construct a concrete instance of `ThemeResourcePermissionArrayInput` via:
//
//          ThemeResourcePermissionArray{ ThemeResourcePermissionArgs{...} }
type ThemeResourcePermissionArrayInput interface {
	pulumi.Input

	ToThemeResourcePermissionArrayOutput() ThemeResourcePermissionArrayOutput
	ToThemeResourcePermissionArrayOutputWithContext(context.Context) ThemeResourcePermissionArrayOutput
}

type ThemeResourcePermissionArray []ThemeResourcePermissionInput

func (ThemeResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThemeResourcePermission)(nil)).Elem()
}

func (i ThemeResourcePermissionArray) ToThemeResourcePermissionArrayOutput() ThemeResourcePermissionArrayOutput {
	return i.ToThemeResourcePermissionArrayOutputWithContext(context.Background())
}

func (i ThemeResourcePermissionArray) ToThemeResourcePermissionArrayOutputWithContext(ctx context.Context) ThemeResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeResourcePermissionArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-resourcepermission.html
type ThemeResourcePermissionOutput struct{ *pulumi.OutputState }

func (ThemeResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeResourcePermission)(nil)).Elem()
}

func (o ThemeResourcePermissionOutput) ToThemeResourcePermissionOutput() ThemeResourcePermissionOutput {
	return o
}

func (o ThemeResourcePermissionOutput) ToThemeResourcePermissionOutputWithContext(ctx context.Context) ThemeResourcePermissionOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-resourcepermission.html#cfn-quicksight-theme-resourcepermission-actions
func (o ThemeResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ThemeResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-resourcepermission.html#cfn-quicksight-theme-resourcepermission-principal
func (o ThemeResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v ThemeResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

type ThemeResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (ThemeResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThemeResourcePermission)(nil)).Elem()
}

func (o ThemeResourcePermissionArrayOutput) ToThemeResourcePermissionArrayOutput() ThemeResourcePermissionArrayOutput {
	return o
}

func (o ThemeResourcePermissionArrayOutput) ToThemeResourcePermissionArrayOutputWithContext(ctx context.Context) ThemeResourcePermissionArrayOutput {
	return o
}

func (o ThemeResourcePermissionArrayOutput) Index(i pulumi.IntInput) ThemeResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThemeResourcePermission {
		return vs[0].([]ThemeResourcePermission)[vs[1].(int)]
	}).(ThemeResourcePermissionOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html
type ThemeSheetStyle struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html#cfn-quicksight-theme-sheetstyle-tile
	Tile *ThemeTileStyle `pulumi:"tile"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html#cfn-quicksight-theme-sheetstyle-tilelayout
	TileLayout *ThemeTileLayoutStyle `pulumi:"tileLayout"`
}

// ThemeSheetStyleInput is an input type that accepts ThemeSheetStyleArgs and ThemeSheetStyleOutput values.
// You can construct a concrete instance of `ThemeSheetStyleInput` via:
//
//          ThemeSheetStyleArgs{...}
type ThemeSheetStyleInput interface {
	pulumi.Input

	ToThemeSheetStyleOutput() ThemeSheetStyleOutput
	ToThemeSheetStyleOutputWithContext(context.Context) ThemeSheetStyleOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html
type ThemeSheetStyleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html#cfn-quicksight-theme-sheetstyle-tile
	Tile ThemeTileStylePtrInput `pulumi:"tile"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html#cfn-quicksight-theme-sheetstyle-tilelayout
	TileLayout ThemeTileLayoutStylePtrInput `pulumi:"tileLayout"`
}

func (ThemeSheetStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeSheetStyle)(nil)).Elem()
}

func (i ThemeSheetStyleArgs) ToThemeSheetStyleOutput() ThemeSheetStyleOutput {
	return i.ToThemeSheetStyleOutputWithContext(context.Background())
}

func (i ThemeSheetStyleArgs) ToThemeSheetStyleOutputWithContext(ctx context.Context) ThemeSheetStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeSheetStyleOutput)
}

func (i ThemeSheetStyleArgs) ToThemeSheetStylePtrOutput() ThemeSheetStylePtrOutput {
	return i.ToThemeSheetStylePtrOutputWithContext(context.Background())
}

func (i ThemeSheetStyleArgs) ToThemeSheetStylePtrOutputWithContext(ctx context.Context) ThemeSheetStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeSheetStyleOutput).ToThemeSheetStylePtrOutputWithContext(ctx)
}

// ThemeSheetStylePtrInput is an input type that accepts ThemeSheetStyleArgs, ThemeSheetStylePtr and ThemeSheetStylePtrOutput values.
// You can construct a concrete instance of `ThemeSheetStylePtrInput` via:
//
//          ThemeSheetStyleArgs{...}
//
//  or:
//
//          nil
type ThemeSheetStylePtrInput interface {
	pulumi.Input

	ToThemeSheetStylePtrOutput() ThemeSheetStylePtrOutput
	ToThemeSheetStylePtrOutputWithContext(context.Context) ThemeSheetStylePtrOutput
}

type themeSheetStylePtrType ThemeSheetStyleArgs

func ThemeSheetStylePtr(v *ThemeSheetStyleArgs) ThemeSheetStylePtrInput {
	return (*themeSheetStylePtrType)(v)
}

func (*themeSheetStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeSheetStyle)(nil)).Elem()
}

func (i *themeSheetStylePtrType) ToThemeSheetStylePtrOutput() ThemeSheetStylePtrOutput {
	return i.ToThemeSheetStylePtrOutputWithContext(context.Background())
}

func (i *themeSheetStylePtrType) ToThemeSheetStylePtrOutputWithContext(ctx context.Context) ThemeSheetStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeSheetStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html
type ThemeSheetStyleOutput struct{ *pulumi.OutputState }

func (ThemeSheetStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeSheetStyle)(nil)).Elem()
}

func (o ThemeSheetStyleOutput) ToThemeSheetStyleOutput() ThemeSheetStyleOutput {
	return o
}

func (o ThemeSheetStyleOutput) ToThemeSheetStyleOutputWithContext(ctx context.Context) ThemeSheetStyleOutput {
	return o
}

func (o ThemeSheetStyleOutput) ToThemeSheetStylePtrOutput() ThemeSheetStylePtrOutput {
	return o.ToThemeSheetStylePtrOutputWithContext(context.Background())
}

func (o ThemeSheetStyleOutput) ToThemeSheetStylePtrOutputWithContext(ctx context.Context) ThemeSheetStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeSheetStyle) *ThemeSheetStyle {
		return &v
	}).(ThemeSheetStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html#cfn-quicksight-theme-sheetstyle-tile
func (o ThemeSheetStyleOutput) Tile() ThemeTileStylePtrOutput {
	return o.ApplyT(func(v ThemeSheetStyle) *ThemeTileStyle { return v.Tile }).(ThemeTileStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html#cfn-quicksight-theme-sheetstyle-tilelayout
func (o ThemeSheetStyleOutput) TileLayout() ThemeTileLayoutStylePtrOutput {
	return o.ApplyT(func(v ThemeSheetStyle) *ThemeTileLayoutStyle { return v.TileLayout }).(ThemeTileLayoutStylePtrOutput)
}

type ThemeSheetStylePtrOutput struct{ *pulumi.OutputState }

func (ThemeSheetStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeSheetStyle)(nil)).Elem()
}

func (o ThemeSheetStylePtrOutput) ToThemeSheetStylePtrOutput() ThemeSheetStylePtrOutput {
	return o
}

func (o ThemeSheetStylePtrOutput) ToThemeSheetStylePtrOutputWithContext(ctx context.Context) ThemeSheetStylePtrOutput {
	return o
}

func (o ThemeSheetStylePtrOutput) Elem() ThemeSheetStyleOutput {
	return o.ApplyT(func(v *ThemeSheetStyle) ThemeSheetStyle {
		if v != nil {
			return *v
		}
		var ret ThemeSheetStyle
		return ret
	}).(ThemeSheetStyleOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html#cfn-quicksight-theme-sheetstyle-tile
func (o ThemeSheetStylePtrOutput) Tile() ThemeTileStylePtrOutput {
	return o.ApplyT(func(v *ThemeSheetStyle) *ThemeTileStyle {
		if v == nil {
			return nil
		}
		return v.Tile
	}).(ThemeTileStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-sheetstyle.html#cfn-quicksight-theme-sheetstyle-tilelayout
func (o ThemeSheetStylePtrOutput) TileLayout() ThemeTileLayoutStylePtrOutput {
	return o.ApplyT(func(v *ThemeSheetStyle) *ThemeTileLayoutStyle {
		if v == nil {
			return nil
		}
		return v.TileLayout
	}).(ThemeTileLayoutStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html
type ThemeThemeConfiguration struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-datacolorpalette
	DataColorPalette *ThemeDataColorPalette `pulumi:"dataColorPalette"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-sheet
	Sheet *ThemeSheetStyle `pulumi:"sheet"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-typography
	Typography *ThemeTypography `pulumi:"typography"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-uicolorpalette
	UIColorPalette *ThemeUIColorPalette `pulumi:"uIColorPalette"`
}

// ThemeThemeConfigurationInput is an input type that accepts ThemeThemeConfigurationArgs and ThemeThemeConfigurationOutput values.
// You can construct a concrete instance of `ThemeThemeConfigurationInput` via:
//
//          ThemeThemeConfigurationArgs{...}
type ThemeThemeConfigurationInput interface {
	pulumi.Input

	ToThemeThemeConfigurationOutput() ThemeThemeConfigurationOutput
	ToThemeThemeConfigurationOutputWithContext(context.Context) ThemeThemeConfigurationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html
type ThemeThemeConfigurationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-datacolorpalette
	DataColorPalette ThemeDataColorPalettePtrInput `pulumi:"dataColorPalette"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-sheet
	Sheet ThemeSheetStylePtrInput `pulumi:"sheet"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-typography
	Typography ThemeTypographyPtrInput `pulumi:"typography"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-uicolorpalette
	UIColorPalette ThemeUIColorPalettePtrInput `pulumi:"uIColorPalette"`
}

func (ThemeThemeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeThemeConfiguration)(nil)).Elem()
}

func (i ThemeThemeConfigurationArgs) ToThemeThemeConfigurationOutput() ThemeThemeConfigurationOutput {
	return i.ToThemeThemeConfigurationOutputWithContext(context.Background())
}

func (i ThemeThemeConfigurationArgs) ToThemeThemeConfigurationOutputWithContext(ctx context.Context) ThemeThemeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeThemeConfigurationOutput)
}

func (i ThemeThemeConfigurationArgs) ToThemeThemeConfigurationPtrOutput() ThemeThemeConfigurationPtrOutput {
	return i.ToThemeThemeConfigurationPtrOutputWithContext(context.Background())
}

func (i ThemeThemeConfigurationArgs) ToThemeThemeConfigurationPtrOutputWithContext(ctx context.Context) ThemeThemeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeThemeConfigurationOutput).ToThemeThemeConfigurationPtrOutputWithContext(ctx)
}

// ThemeThemeConfigurationPtrInput is an input type that accepts ThemeThemeConfigurationArgs, ThemeThemeConfigurationPtr and ThemeThemeConfigurationPtrOutput values.
// You can construct a concrete instance of `ThemeThemeConfigurationPtrInput` via:
//
//          ThemeThemeConfigurationArgs{...}
//
//  or:
//
//          nil
type ThemeThemeConfigurationPtrInput interface {
	pulumi.Input

	ToThemeThemeConfigurationPtrOutput() ThemeThemeConfigurationPtrOutput
	ToThemeThemeConfigurationPtrOutputWithContext(context.Context) ThemeThemeConfigurationPtrOutput
}

type themeThemeConfigurationPtrType ThemeThemeConfigurationArgs

func ThemeThemeConfigurationPtr(v *ThemeThemeConfigurationArgs) ThemeThemeConfigurationPtrInput {
	return (*themeThemeConfigurationPtrType)(v)
}

func (*themeThemeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeThemeConfiguration)(nil)).Elem()
}

func (i *themeThemeConfigurationPtrType) ToThemeThemeConfigurationPtrOutput() ThemeThemeConfigurationPtrOutput {
	return i.ToThemeThemeConfigurationPtrOutputWithContext(context.Background())
}

func (i *themeThemeConfigurationPtrType) ToThemeThemeConfigurationPtrOutputWithContext(ctx context.Context) ThemeThemeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeThemeConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html
type ThemeThemeConfigurationOutput struct{ *pulumi.OutputState }

func (ThemeThemeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeThemeConfiguration)(nil)).Elem()
}

func (o ThemeThemeConfigurationOutput) ToThemeThemeConfigurationOutput() ThemeThemeConfigurationOutput {
	return o
}

func (o ThemeThemeConfigurationOutput) ToThemeThemeConfigurationOutputWithContext(ctx context.Context) ThemeThemeConfigurationOutput {
	return o
}

func (o ThemeThemeConfigurationOutput) ToThemeThemeConfigurationPtrOutput() ThemeThemeConfigurationPtrOutput {
	return o.ToThemeThemeConfigurationPtrOutputWithContext(context.Background())
}

func (o ThemeThemeConfigurationOutput) ToThemeThemeConfigurationPtrOutputWithContext(ctx context.Context) ThemeThemeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeThemeConfiguration) *ThemeThemeConfiguration {
		return &v
	}).(ThemeThemeConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-datacolorpalette
func (o ThemeThemeConfigurationOutput) DataColorPalette() ThemeDataColorPalettePtrOutput {
	return o.ApplyT(func(v ThemeThemeConfiguration) *ThemeDataColorPalette { return v.DataColorPalette }).(ThemeDataColorPalettePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-sheet
func (o ThemeThemeConfigurationOutput) Sheet() ThemeSheetStylePtrOutput {
	return o.ApplyT(func(v ThemeThemeConfiguration) *ThemeSheetStyle { return v.Sheet }).(ThemeSheetStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-typography
func (o ThemeThemeConfigurationOutput) Typography() ThemeTypographyPtrOutput {
	return o.ApplyT(func(v ThemeThemeConfiguration) *ThemeTypography { return v.Typography }).(ThemeTypographyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-uicolorpalette
func (o ThemeThemeConfigurationOutput) UIColorPalette() ThemeUIColorPalettePtrOutput {
	return o.ApplyT(func(v ThemeThemeConfiguration) *ThemeUIColorPalette { return v.UIColorPalette }).(ThemeUIColorPalettePtrOutput)
}

type ThemeThemeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ThemeThemeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeThemeConfiguration)(nil)).Elem()
}

func (o ThemeThemeConfigurationPtrOutput) ToThemeThemeConfigurationPtrOutput() ThemeThemeConfigurationPtrOutput {
	return o
}

func (o ThemeThemeConfigurationPtrOutput) ToThemeThemeConfigurationPtrOutputWithContext(ctx context.Context) ThemeThemeConfigurationPtrOutput {
	return o
}

func (o ThemeThemeConfigurationPtrOutput) Elem() ThemeThemeConfigurationOutput {
	return o.ApplyT(func(v *ThemeThemeConfiguration) ThemeThemeConfiguration {
		if v != nil {
			return *v
		}
		var ret ThemeThemeConfiguration
		return ret
	}).(ThemeThemeConfigurationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-datacolorpalette
func (o ThemeThemeConfigurationPtrOutput) DataColorPalette() ThemeDataColorPalettePtrOutput {
	return o.ApplyT(func(v *ThemeThemeConfiguration) *ThemeDataColorPalette {
		if v == nil {
			return nil
		}
		return v.DataColorPalette
	}).(ThemeDataColorPalettePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-sheet
func (o ThemeThemeConfigurationPtrOutput) Sheet() ThemeSheetStylePtrOutput {
	return o.ApplyT(func(v *ThemeThemeConfiguration) *ThemeSheetStyle {
		if v == nil {
			return nil
		}
		return v.Sheet
	}).(ThemeSheetStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-typography
func (o ThemeThemeConfigurationPtrOutput) Typography() ThemeTypographyPtrOutput {
	return o.ApplyT(func(v *ThemeThemeConfiguration) *ThemeTypography {
		if v == nil {
			return nil
		}
		return v.Typography
	}).(ThemeTypographyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-themeconfiguration.html#cfn-quicksight-theme-themeconfiguration-uicolorpalette
func (o ThemeThemeConfigurationPtrOutput) UIColorPalette() ThemeUIColorPalettePtrOutput {
	return o.ApplyT(func(v *ThemeThemeConfiguration) *ThemeUIColorPalette {
		if v == nil {
			return nil
		}
		return v.UIColorPalette
	}).(ThemeUIColorPalettePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html
type ThemeTileLayoutStyle struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html#cfn-quicksight-theme-tilelayoutstyle-gutter
	Gutter *ThemeGutterStyle `pulumi:"gutter"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html#cfn-quicksight-theme-tilelayoutstyle-margin
	Margin *ThemeMarginStyle `pulumi:"margin"`
}

// ThemeTileLayoutStyleInput is an input type that accepts ThemeTileLayoutStyleArgs and ThemeTileLayoutStyleOutput values.
// You can construct a concrete instance of `ThemeTileLayoutStyleInput` via:
//
//          ThemeTileLayoutStyleArgs{...}
type ThemeTileLayoutStyleInput interface {
	pulumi.Input

	ToThemeTileLayoutStyleOutput() ThemeTileLayoutStyleOutput
	ToThemeTileLayoutStyleOutputWithContext(context.Context) ThemeTileLayoutStyleOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html
type ThemeTileLayoutStyleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html#cfn-quicksight-theme-tilelayoutstyle-gutter
	Gutter ThemeGutterStylePtrInput `pulumi:"gutter"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html#cfn-quicksight-theme-tilelayoutstyle-margin
	Margin ThemeMarginStylePtrInput `pulumi:"margin"`
}

func (ThemeTileLayoutStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeTileLayoutStyle)(nil)).Elem()
}

func (i ThemeTileLayoutStyleArgs) ToThemeTileLayoutStyleOutput() ThemeTileLayoutStyleOutput {
	return i.ToThemeTileLayoutStyleOutputWithContext(context.Background())
}

func (i ThemeTileLayoutStyleArgs) ToThemeTileLayoutStyleOutputWithContext(ctx context.Context) ThemeTileLayoutStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeTileLayoutStyleOutput)
}

func (i ThemeTileLayoutStyleArgs) ToThemeTileLayoutStylePtrOutput() ThemeTileLayoutStylePtrOutput {
	return i.ToThemeTileLayoutStylePtrOutputWithContext(context.Background())
}

func (i ThemeTileLayoutStyleArgs) ToThemeTileLayoutStylePtrOutputWithContext(ctx context.Context) ThemeTileLayoutStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeTileLayoutStyleOutput).ToThemeTileLayoutStylePtrOutputWithContext(ctx)
}

// ThemeTileLayoutStylePtrInput is an input type that accepts ThemeTileLayoutStyleArgs, ThemeTileLayoutStylePtr and ThemeTileLayoutStylePtrOutput values.
// You can construct a concrete instance of `ThemeTileLayoutStylePtrInput` via:
//
//          ThemeTileLayoutStyleArgs{...}
//
//  or:
//
//          nil
type ThemeTileLayoutStylePtrInput interface {
	pulumi.Input

	ToThemeTileLayoutStylePtrOutput() ThemeTileLayoutStylePtrOutput
	ToThemeTileLayoutStylePtrOutputWithContext(context.Context) ThemeTileLayoutStylePtrOutput
}

type themeTileLayoutStylePtrType ThemeTileLayoutStyleArgs

func ThemeTileLayoutStylePtr(v *ThemeTileLayoutStyleArgs) ThemeTileLayoutStylePtrInput {
	return (*themeTileLayoutStylePtrType)(v)
}

func (*themeTileLayoutStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeTileLayoutStyle)(nil)).Elem()
}

func (i *themeTileLayoutStylePtrType) ToThemeTileLayoutStylePtrOutput() ThemeTileLayoutStylePtrOutput {
	return i.ToThemeTileLayoutStylePtrOutputWithContext(context.Background())
}

func (i *themeTileLayoutStylePtrType) ToThemeTileLayoutStylePtrOutputWithContext(ctx context.Context) ThemeTileLayoutStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeTileLayoutStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html
type ThemeTileLayoutStyleOutput struct{ *pulumi.OutputState }

func (ThemeTileLayoutStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeTileLayoutStyle)(nil)).Elem()
}

func (o ThemeTileLayoutStyleOutput) ToThemeTileLayoutStyleOutput() ThemeTileLayoutStyleOutput {
	return o
}

func (o ThemeTileLayoutStyleOutput) ToThemeTileLayoutStyleOutputWithContext(ctx context.Context) ThemeTileLayoutStyleOutput {
	return o
}

func (o ThemeTileLayoutStyleOutput) ToThemeTileLayoutStylePtrOutput() ThemeTileLayoutStylePtrOutput {
	return o.ToThemeTileLayoutStylePtrOutputWithContext(context.Background())
}

func (o ThemeTileLayoutStyleOutput) ToThemeTileLayoutStylePtrOutputWithContext(ctx context.Context) ThemeTileLayoutStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeTileLayoutStyle) *ThemeTileLayoutStyle {
		return &v
	}).(ThemeTileLayoutStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html#cfn-quicksight-theme-tilelayoutstyle-gutter
func (o ThemeTileLayoutStyleOutput) Gutter() ThemeGutterStylePtrOutput {
	return o.ApplyT(func(v ThemeTileLayoutStyle) *ThemeGutterStyle { return v.Gutter }).(ThemeGutterStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html#cfn-quicksight-theme-tilelayoutstyle-margin
func (o ThemeTileLayoutStyleOutput) Margin() ThemeMarginStylePtrOutput {
	return o.ApplyT(func(v ThemeTileLayoutStyle) *ThemeMarginStyle { return v.Margin }).(ThemeMarginStylePtrOutput)
}

type ThemeTileLayoutStylePtrOutput struct{ *pulumi.OutputState }

func (ThemeTileLayoutStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeTileLayoutStyle)(nil)).Elem()
}

func (o ThemeTileLayoutStylePtrOutput) ToThemeTileLayoutStylePtrOutput() ThemeTileLayoutStylePtrOutput {
	return o
}

func (o ThemeTileLayoutStylePtrOutput) ToThemeTileLayoutStylePtrOutputWithContext(ctx context.Context) ThemeTileLayoutStylePtrOutput {
	return o
}

func (o ThemeTileLayoutStylePtrOutput) Elem() ThemeTileLayoutStyleOutput {
	return o.ApplyT(func(v *ThemeTileLayoutStyle) ThemeTileLayoutStyle {
		if v != nil {
			return *v
		}
		var ret ThemeTileLayoutStyle
		return ret
	}).(ThemeTileLayoutStyleOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html#cfn-quicksight-theme-tilelayoutstyle-gutter
func (o ThemeTileLayoutStylePtrOutput) Gutter() ThemeGutterStylePtrOutput {
	return o.ApplyT(func(v *ThemeTileLayoutStyle) *ThemeGutterStyle {
		if v == nil {
			return nil
		}
		return v.Gutter
	}).(ThemeGutterStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilelayoutstyle.html#cfn-quicksight-theme-tilelayoutstyle-margin
func (o ThemeTileLayoutStylePtrOutput) Margin() ThemeMarginStylePtrOutput {
	return o.ApplyT(func(v *ThemeTileLayoutStyle) *ThemeMarginStyle {
		if v == nil {
			return nil
		}
		return v.Margin
	}).(ThemeMarginStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilestyle.html
type ThemeTileStyle struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilestyle.html#cfn-quicksight-theme-tilestyle-border
	Border *ThemeBorderStyle `pulumi:"border"`
}

// ThemeTileStyleInput is an input type that accepts ThemeTileStyleArgs and ThemeTileStyleOutput values.
// You can construct a concrete instance of `ThemeTileStyleInput` via:
//
//          ThemeTileStyleArgs{...}
type ThemeTileStyleInput interface {
	pulumi.Input

	ToThemeTileStyleOutput() ThemeTileStyleOutput
	ToThemeTileStyleOutputWithContext(context.Context) ThemeTileStyleOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilestyle.html
type ThemeTileStyleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilestyle.html#cfn-quicksight-theme-tilestyle-border
	Border ThemeBorderStylePtrInput `pulumi:"border"`
}

func (ThemeTileStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeTileStyle)(nil)).Elem()
}

func (i ThemeTileStyleArgs) ToThemeTileStyleOutput() ThemeTileStyleOutput {
	return i.ToThemeTileStyleOutputWithContext(context.Background())
}

func (i ThemeTileStyleArgs) ToThemeTileStyleOutputWithContext(ctx context.Context) ThemeTileStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeTileStyleOutput)
}

func (i ThemeTileStyleArgs) ToThemeTileStylePtrOutput() ThemeTileStylePtrOutput {
	return i.ToThemeTileStylePtrOutputWithContext(context.Background())
}

func (i ThemeTileStyleArgs) ToThemeTileStylePtrOutputWithContext(ctx context.Context) ThemeTileStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeTileStyleOutput).ToThemeTileStylePtrOutputWithContext(ctx)
}

// ThemeTileStylePtrInput is an input type that accepts ThemeTileStyleArgs, ThemeTileStylePtr and ThemeTileStylePtrOutput values.
// You can construct a concrete instance of `ThemeTileStylePtrInput` via:
//
//          ThemeTileStyleArgs{...}
//
//  or:
//
//          nil
type ThemeTileStylePtrInput interface {
	pulumi.Input

	ToThemeTileStylePtrOutput() ThemeTileStylePtrOutput
	ToThemeTileStylePtrOutputWithContext(context.Context) ThemeTileStylePtrOutput
}

type themeTileStylePtrType ThemeTileStyleArgs

func ThemeTileStylePtr(v *ThemeTileStyleArgs) ThemeTileStylePtrInput {
	return (*themeTileStylePtrType)(v)
}

func (*themeTileStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeTileStyle)(nil)).Elem()
}

func (i *themeTileStylePtrType) ToThemeTileStylePtrOutput() ThemeTileStylePtrOutput {
	return i.ToThemeTileStylePtrOutputWithContext(context.Background())
}

func (i *themeTileStylePtrType) ToThemeTileStylePtrOutputWithContext(ctx context.Context) ThemeTileStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeTileStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilestyle.html
type ThemeTileStyleOutput struct{ *pulumi.OutputState }

func (ThemeTileStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeTileStyle)(nil)).Elem()
}

func (o ThemeTileStyleOutput) ToThemeTileStyleOutput() ThemeTileStyleOutput {
	return o
}

func (o ThemeTileStyleOutput) ToThemeTileStyleOutputWithContext(ctx context.Context) ThemeTileStyleOutput {
	return o
}

func (o ThemeTileStyleOutput) ToThemeTileStylePtrOutput() ThemeTileStylePtrOutput {
	return o.ToThemeTileStylePtrOutputWithContext(context.Background())
}

func (o ThemeTileStyleOutput) ToThemeTileStylePtrOutputWithContext(ctx context.Context) ThemeTileStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeTileStyle) *ThemeTileStyle {
		return &v
	}).(ThemeTileStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilestyle.html#cfn-quicksight-theme-tilestyle-border
func (o ThemeTileStyleOutput) Border() ThemeBorderStylePtrOutput {
	return o.ApplyT(func(v ThemeTileStyle) *ThemeBorderStyle { return v.Border }).(ThemeBorderStylePtrOutput)
}

type ThemeTileStylePtrOutput struct{ *pulumi.OutputState }

func (ThemeTileStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeTileStyle)(nil)).Elem()
}

func (o ThemeTileStylePtrOutput) ToThemeTileStylePtrOutput() ThemeTileStylePtrOutput {
	return o
}

func (o ThemeTileStylePtrOutput) ToThemeTileStylePtrOutputWithContext(ctx context.Context) ThemeTileStylePtrOutput {
	return o
}

func (o ThemeTileStylePtrOutput) Elem() ThemeTileStyleOutput {
	return o.ApplyT(func(v *ThemeTileStyle) ThemeTileStyle {
		if v != nil {
			return *v
		}
		var ret ThemeTileStyle
		return ret
	}).(ThemeTileStyleOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-tilestyle.html#cfn-quicksight-theme-tilestyle-border
func (o ThemeTileStylePtrOutput) Border() ThemeBorderStylePtrOutput {
	return o.ApplyT(func(v *ThemeTileStyle) *ThemeBorderStyle {
		if v == nil {
			return nil
		}
		return v.Border
	}).(ThemeBorderStylePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-typography.html
type ThemeTypography struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-typography.html#cfn-quicksight-theme-typography-fontfamilies
	FontFamilies []ThemeFont `pulumi:"fontFamilies"`
}

// ThemeTypographyInput is an input type that accepts ThemeTypographyArgs and ThemeTypographyOutput values.
// You can construct a concrete instance of `ThemeTypographyInput` via:
//
//          ThemeTypographyArgs{...}
type ThemeTypographyInput interface {
	pulumi.Input

	ToThemeTypographyOutput() ThemeTypographyOutput
	ToThemeTypographyOutputWithContext(context.Context) ThemeTypographyOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-typography.html
type ThemeTypographyArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-typography.html#cfn-quicksight-theme-typography-fontfamilies
	FontFamilies ThemeFontArrayInput `pulumi:"fontFamilies"`
}

func (ThemeTypographyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeTypography)(nil)).Elem()
}

func (i ThemeTypographyArgs) ToThemeTypographyOutput() ThemeTypographyOutput {
	return i.ToThemeTypographyOutputWithContext(context.Background())
}

func (i ThemeTypographyArgs) ToThemeTypographyOutputWithContext(ctx context.Context) ThemeTypographyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeTypographyOutput)
}

func (i ThemeTypographyArgs) ToThemeTypographyPtrOutput() ThemeTypographyPtrOutput {
	return i.ToThemeTypographyPtrOutputWithContext(context.Background())
}

func (i ThemeTypographyArgs) ToThemeTypographyPtrOutputWithContext(ctx context.Context) ThemeTypographyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeTypographyOutput).ToThemeTypographyPtrOutputWithContext(ctx)
}

// ThemeTypographyPtrInput is an input type that accepts ThemeTypographyArgs, ThemeTypographyPtr and ThemeTypographyPtrOutput values.
// You can construct a concrete instance of `ThemeTypographyPtrInput` via:
//
//          ThemeTypographyArgs{...}
//
//  or:
//
//          nil
type ThemeTypographyPtrInput interface {
	pulumi.Input

	ToThemeTypographyPtrOutput() ThemeTypographyPtrOutput
	ToThemeTypographyPtrOutputWithContext(context.Context) ThemeTypographyPtrOutput
}

type themeTypographyPtrType ThemeTypographyArgs

func ThemeTypographyPtr(v *ThemeTypographyArgs) ThemeTypographyPtrInput {
	return (*themeTypographyPtrType)(v)
}

func (*themeTypographyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeTypography)(nil)).Elem()
}

func (i *themeTypographyPtrType) ToThemeTypographyPtrOutput() ThemeTypographyPtrOutput {
	return i.ToThemeTypographyPtrOutputWithContext(context.Background())
}

func (i *themeTypographyPtrType) ToThemeTypographyPtrOutputWithContext(ctx context.Context) ThemeTypographyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeTypographyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-typography.html
type ThemeTypographyOutput struct{ *pulumi.OutputState }

func (ThemeTypographyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeTypography)(nil)).Elem()
}

func (o ThemeTypographyOutput) ToThemeTypographyOutput() ThemeTypographyOutput {
	return o
}

func (o ThemeTypographyOutput) ToThemeTypographyOutputWithContext(ctx context.Context) ThemeTypographyOutput {
	return o
}

func (o ThemeTypographyOutput) ToThemeTypographyPtrOutput() ThemeTypographyPtrOutput {
	return o.ToThemeTypographyPtrOutputWithContext(context.Background())
}

func (o ThemeTypographyOutput) ToThemeTypographyPtrOutputWithContext(ctx context.Context) ThemeTypographyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeTypography) *ThemeTypography {
		return &v
	}).(ThemeTypographyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-typography.html#cfn-quicksight-theme-typography-fontfamilies
func (o ThemeTypographyOutput) FontFamilies() ThemeFontArrayOutput {
	return o.ApplyT(func(v ThemeTypography) []ThemeFont { return v.FontFamilies }).(ThemeFontArrayOutput)
}

type ThemeTypographyPtrOutput struct{ *pulumi.OutputState }

func (ThemeTypographyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeTypography)(nil)).Elem()
}

func (o ThemeTypographyPtrOutput) ToThemeTypographyPtrOutput() ThemeTypographyPtrOutput {
	return o
}

func (o ThemeTypographyPtrOutput) ToThemeTypographyPtrOutputWithContext(ctx context.Context) ThemeTypographyPtrOutput {
	return o
}

func (o ThemeTypographyPtrOutput) Elem() ThemeTypographyOutput {
	return o.ApplyT(func(v *ThemeTypography) ThemeTypography {
		if v != nil {
			return *v
		}
		var ret ThemeTypography
		return ret
	}).(ThemeTypographyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-typography.html#cfn-quicksight-theme-typography-fontfamilies
func (o ThemeTypographyPtrOutput) FontFamilies() ThemeFontArrayOutput {
	return o.ApplyT(func(v *ThemeTypography) []ThemeFont {
		if v == nil {
			return nil
		}
		return v.FontFamilies
	}).(ThemeFontArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html
type ThemeUIColorPalette struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-accent
	Accent *string `pulumi:"accent"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-accentforeground
	AccentForeground *string `pulumi:"accentForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-danger
	Danger *string `pulumi:"danger"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dangerforeground
	DangerForeground *string `pulumi:"dangerForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dimension
	Dimension *string `pulumi:"dimension"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dimensionforeground
	DimensionForeground *string `pulumi:"dimensionForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-measure
	Measure *string `pulumi:"measure"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-measureforeground
	MeasureForeground *string `pulumi:"measureForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-primarybackground
	PrimaryBackground *string `pulumi:"primaryBackground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-primaryforeground
	PrimaryForeground *string `pulumi:"primaryForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-secondarybackground
	SecondaryBackground *string `pulumi:"secondaryBackground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-secondaryforeground
	SecondaryForeground *string `pulumi:"secondaryForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-success
	Success *string `pulumi:"success"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-successforeground
	SuccessForeground *string `pulumi:"successForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-warning
	Warning *string `pulumi:"warning"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-warningforeground
	WarningForeground *string `pulumi:"warningForeground"`
}

// ThemeUIColorPaletteInput is an input type that accepts ThemeUIColorPaletteArgs and ThemeUIColorPaletteOutput values.
// You can construct a concrete instance of `ThemeUIColorPaletteInput` via:
//
//          ThemeUIColorPaletteArgs{...}
type ThemeUIColorPaletteInput interface {
	pulumi.Input

	ToThemeUIColorPaletteOutput() ThemeUIColorPaletteOutput
	ToThemeUIColorPaletteOutputWithContext(context.Context) ThemeUIColorPaletteOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html
type ThemeUIColorPaletteArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-accent
	Accent pulumi.StringPtrInput `pulumi:"accent"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-accentforeground
	AccentForeground pulumi.StringPtrInput `pulumi:"accentForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-danger
	Danger pulumi.StringPtrInput `pulumi:"danger"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dangerforeground
	DangerForeground pulumi.StringPtrInput `pulumi:"dangerForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dimension
	Dimension pulumi.StringPtrInput `pulumi:"dimension"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dimensionforeground
	DimensionForeground pulumi.StringPtrInput `pulumi:"dimensionForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-measure
	Measure pulumi.StringPtrInput `pulumi:"measure"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-measureforeground
	MeasureForeground pulumi.StringPtrInput `pulumi:"measureForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-primarybackground
	PrimaryBackground pulumi.StringPtrInput `pulumi:"primaryBackground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-primaryforeground
	PrimaryForeground pulumi.StringPtrInput `pulumi:"primaryForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-secondarybackground
	SecondaryBackground pulumi.StringPtrInput `pulumi:"secondaryBackground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-secondaryforeground
	SecondaryForeground pulumi.StringPtrInput `pulumi:"secondaryForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-success
	Success pulumi.StringPtrInput `pulumi:"success"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-successforeground
	SuccessForeground pulumi.StringPtrInput `pulumi:"successForeground"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-warning
	Warning pulumi.StringPtrInput `pulumi:"warning"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-warningforeground
	WarningForeground pulumi.StringPtrInput `pulumi:"warningForeground"`
}

func (ThemeUIColorPaletteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeUIColorPalette)(nil)).Elem()
}

func (i ThemeUIColorPaletteArgs) ToThemeUIColorPaletteOutput() ThemeUIColorPaletteOutput {
	return i.ToThemeUIColorPaletteOutputWithContext(context.Background())
}

func (i ThemeUIColorPaletteArgs) ToThemeUIColorPaletteOutputWithContext(ctx context.Context) ThemeUIColorPaletteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeUIColorPaletteOutput)
}

func (i ThemeUIColorPaletteArgs) ToThemeUIColorPalettePtrOutput() ThemeUIColorPalettePtrOutput {
	return i.ToThemeUIColorPalettePtrOutputWithContext(context.Background())
}

func (i ThemeUIColorPaletteArgs) ToThemeUIColorPalettePtrOutputWithContext(ctx context.Context) ThemeUIColorPalettePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeUIColorPaletteOutput).ToThemeUIColorPalettePtrOutputWithContext(ctx)
}

// ThemeUIColorPalettePtrInput is an input type that accepts ThemeUIColorPaletteArgs, ThemeUIColorPalettePtr and ThemeUIColorPalettePtrOutput values.
// You can construct a concrete instance of `ThemeUIColorPalettePtrInput` via:
//
//          ThemeUIColorPaletteArgs{...}
//
//  or:
//
//          nil
type ThemeUIColorPalettePtrInput interface {
	pulumi.Input

	ToThemeUIColorPalettePtrOutput() ThemeUIColorPalettePtrOutput
	ToThemeUIColorPalettePtrOutputWithContext(context.Context) ThemeUIColorPalettePtrOutput
}

type themeUIColorPalettePtrType ThemeUIColorPaletteArgs

func ThemeUIColorPalettePtr(v *ThemeUIColorPaletteArgs) ThemeUIColorPalettePtrInput {
	return (*themeUIColorPalettePtrType)(v)
}

func (*themeUIColorPalettePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeUIColorPalette)(nil)).Elem()
}

func (i *themeUIColorPalettePtrType) ToThemeUIColorPalettePtrOutput() ThemeUIColorPalettePtrOutput {
	return i.ToThemeUIColorPalettePtrOutputWithContext(context.Background())
}

func (i *themeUIColorPalettePtrType) ToThemeUIColorPalettePtrOutputWithContext(ctx context.Context) ThemeUIColorPalettePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThemeUIColorPalettePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html
type ThemeUIColorPaletteOutput struct{ *pulumi.OutputState }

func (ThemeUIColorPaletteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeUIColorPalette)(nil)).Elem()
}

func (o ThemeUIColorPaletteOutput) ToThemeUIColorPaletteOutput() ThemeUIColorPaletteOutput {
	return o
}

func (o ThemeUIColorPaletteOutput) ToThemeUIColorPaletteOutputWithContext(ctx context.Context) ThemeUIColorPaletteOutput {
	return o
}

func (o ThemeUIColorPaletteOutput) ToThemeUIColorPalettePtrOutput() ThemeUIColorPalettePtrOutput {
	return o.ToThemeUIColorPalettePtrOutputWithContext(context.Background())
}

func (o ThemeUIColorPaletteOutput) ToThemeUIColorPalettePtrOutputWithContext(ctx context.Context) ThemeUIColorPalettePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeUIColorPalette) *ThemeUIColorPalette {
		return &v
	}).(ThemeUIColorPalettePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-accent
func (o ThemeUIColorPaletteOutput) Accent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.Accent }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-accentforeground
func (o ThemeUIColorPaletteOutput) AccentForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.AccentForeground }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-danger
func (o ThemeUIColorPaletteOutput) Danger() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.Danger }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dangerforeground
func (o ThemeUIColorPaletteOutput) DangerForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.DangerForeground }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dimension
func (o ThemeUIColorPaletteOutput) Dimension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.Dimension }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dimensionforeground
func (o ThemeUIColorPaletteOutput) DimensionForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.DimensionForeground }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-measure
func (o ThemeUIColorPaletteOutput) Measure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.Measure }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-measureforeground
func (o ThemeUIColorPaletteOutput) MeasureForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.MeasureForeground }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-primarybackground
func (o ThemeUIColorPaletteOutput) PrimaryBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.PrimaryBackground }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-primaryforeground
func (o ThemeUIColorPaletteOutput) PrimaryForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.PrimaryForeground }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-secondarybackground
func (o ThemeUIColorPaletteOutput) SecondaryBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.SecondaryBackground }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-secondaryforeground
func (o ThemeUIColorPaletteOutput) SecondaryForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.SecondaryForeground }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-success
func (o ThemeUIColorPaletteOutput) Success() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.Success }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-successforeground
func (o ThemeUIColorPaletteOutput) SuccessForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.SuccessForeground }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-warning
func (o ThemeUIColorPaletteOutput) Warning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.Warning }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-warningforeground
func (o ThemeUIColorPaletteOutput) WarningForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThemeUIColorPalette) *string { return v.WarningForeground }).(pulumi.StringPtrOutput)
}

type ThemeUIColorPalettePtrOutput struct{ *pulumi.OutputState }

func (ThemeUIColorPalettePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeUIColorPalette)(nil)).Elem()
}

func (o ThemeUIColorPalettePtrOutput) ToThemeUIColorPalettePtrOutput() ThemeUIColorPalettePtrOutput {
	return o
}

func (o ThemeUIColorPalettePtrOutput) ToThemeUIColorPalettePtrOutputWithContext(ctx context.Context) ThemeUIColorPalettePtrOutput {
	return o
}

func (o ThemeUIColorPalettePtrOutput) Elem() ThemeUIColorPaletteOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) ThemeUIColorPalette {
		if v != nil {
			return *v
		}
		var ret ThemeUIColorPalette
		return ret
	}).(ThemeUIColorPaletteOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-accent
func (o ThemeUIColorPalettePtrOutput) Accent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.Accent
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-accentforeground
func (o ThemeUIColorPalettePtrOutput) AccentForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.AccentForeground
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-danger
func (o ThemeUIColorPalettePtrOutput) Danger() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.Danger
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dangerforeground
func (o ThemeUIColorPalettePtrOutput) DangerForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.DangerForeground
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dimension
func (o ThemeUIColorPalettePtrOutput) Dimension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.Dimension
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-dimensionforeground
func (o ThemeUIColorPalettePtrOutput) DimensionForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.DimensionForeground
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-measure
func (o ThemeUIColorPalettePtrOutput) Measure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.Measure
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-measureforeground
func (o ThemeUIColorPalettePtrOutput) MeasureForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.MeasureForeground
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-primarybackground
func (o ThemeUIColorPalettePtrOutput) PrimaryBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryBackground
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-primaryforeground
func (o ThemeUIColorPalettePtrOutput) PrimaryForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryForeground
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-secondarybackground
func (o ThemeUIColorPalettePtrOutput) SecondaryBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryBackground
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-secondaryforeground
func (o ThemeUIColorPalettePtrOutput) SecondaryForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryForeground
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-success
func (o ThemeUIColorPalettePtrOutput) Success() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.Success
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-successforeground
func (o ThemeUIColorPalettePtrOutput) SuccessForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.SuccessForeground
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-warning
func (o ThemeUIColorPalettePtrOutput) Warning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-theme-uicolorpalette.html#cfn-quicksight-theme-uicolorpalette-warningforeground
func (o ThemeUIColorPalettePtrOutput) WarningForeground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThemeUIColorPalette) *string {
		if v == nil {
			return nil
		}
		return v.WarningForeground
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalysisAnalysisErrorOutput{})
	pulumi.RegisterOutputType(AnalysisAnalysisErrorArrayOutput{})
	pulumi.RegisterOutputType(AnalysisAnalysisSourceEntityOutput{})
	pulumi.RegisterOutputType(AnalysisAnalysisSourceEntityPtrOutput{})
	pulumi.RegisterOutputType(AnalysisAnalysisSourceTemplateOutput{})
	pulumi.RegisterOutputType(AnalysisAnalysisSourceTemplatePtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataSetReferenceOutput{})
	pulumi.RegisterOutputType(AnalysisDataSetReferenceArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeParameterOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeParameterArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalParameterOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalParameterArrayOutput{})
	pulumi.RegisterOutputType(AnalysisIntegerParameterOutput{})
	pulumi.RegisterOutputType(AnalysisIntegerParameterArrayOutput{})
	pulumi.RegisterOutputType(AnalysisParametersOutput{})
	pulumi.RegisterOutputType(AnalysisParametersPtrOutput{})
	pulumi.RegisterOutputType(AnalysisResourcePermissionOutput{})
	pulumi.RegisterOutputType(AnalysisResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisSheetOutput{})
	pulumi.RegisterOutputType(AnalysisSheetArrayOutput{})
	pulumi.RegisterOutputType(AnalysisStringParameterOutput{})
	pulumi.RegisterOutputType(AnalysisStringParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardAdHocFilteringOptionOutput{})
	pulumi.RegisterOutputType(DashboardAdHocFilteringOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardDashboardPublishOptionsOutput{})
	pulumi.RegisterOutputType(DashboardDashboardPublishOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardDashboardSourceEntityOutput{})
	pulumi.RegisterOutputType(DashboardDashboardSourceEntityPtrOutput{})
	pulumi.RegisterOutputType(DashboardDashboardSourceTemplateOutput{})
	pulumi.RegisterOutputType(DashboardDashboardSourceTemplatePtrOutput{})
	pulumi.RegisterOutputType(DashboardDataSetReferenceOutput{})
	pulumi.RegisterOutputType(DashboardDataSetReferenceArrayOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeParameterOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardDecimalParameterOutput{})
	pulumi.RegisterOutputType(DashboardDecimalParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardExportToCSVOptionOutput{})
	pulumi.RegisterOutputType(DashboardExportToCSVOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardIntegerParameterOutput{})
	pulumi.RegisterOutputType(DashboardIntegerParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardParametersOutput{})
	pulumi.RegisterOutputType(DashboardParametersPtrOutput{})
	pulumi.RegisterOutputType(DashboardResourcePermissionOutput{})
	pulumi.RegisterOutputType(DashboardResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlsOptionOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlsOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardStringParameterOutput{})
	pulumi.RegisterOutputType(DashboardStringParameterArrayOutput{})
	pulumi.RegisterOutputType(DataSetCalculatedColumnOutput{})
	pulumi.RegisterOutputType(DataSetCalculatedColumnArrayOutput{})
	pulumi.RegisterOutputType(DataSetCastColumnTypeOperationOutput{})
	pulumi.RegisterOutputType(DataSetCastColumnTypeOperationPtrOutput{})
	pulumi.RegisterOutputType(DataSetColumnDescriptionOutput{})
	pulumi.RegisterOutputType(DataSetColumnDescriptionPtrOutput{})
	pulumi.RegisterOutputType(DataSetColumnGroupOutput{})
	pulumi.RegisterOutputType(DataSetColumnGroupArrayOutput{})
	pulumi.RegisterOutputType(DataSetColumnLevelPermissionRuleOutput{})
	pulumi.RegisterOutputType(DataSetColumnLevelPermissionRuleArrayOutput{})
	pulumi.RegisterOutputType(DataSetColumnTagOutput{})
	pulumi.RegisterOutputType(DataSetColumnTagArrayOutput{})
	pulumi.RegisterOutputType(DataSetCreateColumnsOperationOutput{})
	pulumi.RegisterOutputType(DataSetCreateColumnsOperationPtrOutput{})
	pulumi.RegisterOutputType(DataSetCustomSqlOutput{})
	pulumi.RegisterOutputType(DataSetCustomSqlPtrOutput{})
	pulumi.RegisterOutputType(DataSetFieldFolderOutput{})
	pulumi.RegisterOutputType(DataSetFieldFolderMapOutput{})
	pulumi.RegisterOutputType(DataSetFilterOperationOutput{})
	pulumi.RegisterOutputType(DataSetFilterOperationPtrOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialColumnGroupOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialColumnGroupPtrOutput{})
	pulumi.RegisterOutputType(DataSetIngestionWaitPolicyOutput{})
	pulumi.RegisterOutputType(DataSetIngestionWaitPolicyPtrOutput{})
	pulumi.RegisterOutputType(DataSetInputColumnOutput{})
	pulumi.RegisterOutputType(DataSetInputColumnArrayOutput{})
	pulumi.RegisterOutputType(DataSetJoinInstructionOutput{})
	pulumi.RegisterOutputType(DataSetJoinInstructionPtrOutput{})
	pulumi.RegisterOutputType(DataSetJoinKeyPropertiesOutput{})
	pulumi.RegisterOutputType(DataSetJoinKeyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataSetLogicalTableOutput{})
	pulumi.RegisterOutputType(DataSetLogicalTableMapOutput{})
	pulumi.RegisterOutputType(DataSetLogicalTableSourceOutput{})
	pulumi.RegisterOutputType(DataSetOutputColumnOutput{})
	pulumi.RegisterOutputType(DataSetOutputColumnArrayOutput{})
	pulumi.RegisterOutputType(DataSetPhysicalTableOutput{})
	pulumi.RegisterOutputType(DataSetPhysicalTableMapOutput{})
	pulumi.RegisterOutputType(DataSetProjectOperationOutput{})
	pulumi.RegisterOutputType(DataSetProjectOperationPtrOutput{})
	pulumi.RegisterOutputType(DataSetRelationalTableOutput{})
	pulumi.RegisterOutputType(DataSetRelationalTablePtrOutput{})
	pulumi.RegisterOutputType(DataSetRenameColumnOperationOutput{})
	pulumi.RegisterOutputType(DataSetRenameColumnOperationPtrOutput{})
	pulumi.RegisterOutputType(DataSetResourcePermissionOutput{})
	pulumi.RegisterOutputType(DataSetResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionDataSetOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionDataSetPtrOutput{})
	pulumi.RegisterOutputType(DataSetS3SourceOutput{})
	pulumi.RegisterOutputType(DataSetS3SourcePtrOutput{})
	pulumi.RegisterOutputType(DataSetTagColumnOperationOutput{})
	pulumi.RegisterOutputType(DataSetTagColumnOperationPtrOutput{})
	pulumi.RegisterOutputType(DataSetTransformOperationOutput{})
	pulumi.RegisterOutputType(DataSetTransformOperationArrayOutput{})
	pulumi.RegisterOutputType(DataSetUploadSettingsOutput{})
	pulumi.RegisterOutputType(DataSetUploadSettingsPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAmazonElasticsearchParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAmazonElasticsearchParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAthenaParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAthenaParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraPostgreSqlParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraPostgreSqlParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceCredentialPairOutput{})
	pulumi.RegisterOutputType(DataSourceCredentialPairPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceCredentialsOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceCredentialsPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceErrorInfoOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceErrorInfoPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceParametersOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceParametersArrayOutput{})
	pulumi.RegisterOutputType(DataSourceManifestFileLocationOutput{})
	pulumi.RegisterOutputType(DataSourceManifestFileLocationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceMariaDbParametersOutput{})
	pulumi.RegisterOutputType(DataSourceMariaDbParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceMySqlParametersOutput{})
	pulumi.RegisterOutputType(DataSourceMySqlParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceOracleParametersOutput{})
	pulumi.RegisterOutputType(DataSourceOracleParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourcePostgreSqlParametersOutput{})
	pulumi.RegisterOutputType(DataSourcePostgreSqlParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourcePrestoParametersOutput{})
	pulumi.RegisterOutputType(DataSourcePrestoParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRdsParametersOutput{})
	pulumi.RegisterOutputType(DataSourceRdsParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRedshiftParametersOutput{})
	pulumi.RegisterOutputType(DataSourceRedshiftParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceResourcePermissionOutput{})
	pulumi.RegisterOutputType(DataSourceResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(DataSourceS3ParametersOutput{})
	pulumi.RegisterOutputType(DataSourceS3ParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSnowflakeParametersOutput{})
	pulumi.RegisterOutputType(DataSourceSnowflakeParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSparkParametersOutput{})
	pulumi.RegisterOutputType(DataSourceSparkParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSqlServerParametersOutput{})
	pulumi.RegisterOutputType(DataSourceSqlServerParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSslPropertiesOutput{})
	pulumi.RegisterOutputType(DataSourceSslPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataSourceTeradataParametersOutput{})
	pulumi.RegisterOutputType(DataSourceTeradataParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceVpcConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(DataSourceVpcConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TemplateDataSetReferenceOutput{})
	pulumi.RegisterOutputType(TemplateDataSetReferenceArrayOutput{})
	pulumi.RegisterOutputType(TemplateResourcePermissionOutput{})
	pulumi.RegisterOutputType(TemplateResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(TemplateTemplateSourceAnalysisOutput{})
	pulumi.RegisterOutputType(TemplateTemplateSourceAnalysisPtrOutput{})
	pulumi.RegisterOutputType(TemplateTemplateSourceEntityOutput{})
	pulumi.RegisterOutputType(TemplateTemplateSourceEntityPtrOutput{})
	pulumi.RegisterOutputType(TemplateTemplateSourceTemplateOutput{})
	pulumi.RegisterOutputType(TemplateTemplateSourceTemplatePtrOutput{})
	pulumi.RegisterOutputType(ThemeBorderStyleOutput{})
	pulumi.RegisterOutputType(ThemeBorderStylePtrOutput{})
	pulumi.RegisterOutputType(ThemeDataColorPaletteOutput{})
	pulumi.RegisterOutputType(ThemeDataColorPalettePtrOutput{})
	pulumi.RegisterOutputType(ThemeFontOutput{})
	pulumi.RegisterOutputType(ThemeFontArrayOutput{})
	pulumi.RegisterOutputType(ThemeGutterStyleOutput{})
	pulumi.RegisterOutputType(ThemeGutterStylePtrOutput{})
	pulumi.RegisterOutputType(ThemeMarginStyleOutput{})
	pulumi.RegisterOutputType(ThemeMarginStylePtrOutput{})
	pulumi.RegisterOutputType(ThemeResourcePermissionOutput{})
	pulumi.RegisterOutputType(ThemeResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(ThemeSheetStyleOutput{})
	pulumi.RegisterOutputType(ThemeSheetStylePtrOutput{})
	pulumi.RegisterOutputType(ThemeThemeConfigurationOutput{})
	pulumi.RegisterOutputType(ThemeThemeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ThemeTileLayoutStyleOutput{})
	pulumi.RegisterOutputType(ThemeTileLayoutStylePtrOutput{})
	pulumi.RegisterOutputType(ThemeTileStyleOutput{})
	pulumi.RegisterOutputType(ThemeTileStylePtrOutput{})
	pulumi.RegisterOutputType(ThemeTypographyOutput{})
	pulumi.RegisterOutputType(ThemeTypographyPtrOutput{})
	pulumi.RegisterOutputType(ThemeUIColorPaletteOutput{})
	pulumi.RegisterOutputType(ThemeUIColorPalettePtrOutput{})
}
