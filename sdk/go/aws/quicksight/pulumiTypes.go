// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AnalysisAggregationFunction struct {
	CategoricalAggregationFunction *AnalysisCategoricalAggregationFunction `pulumi:"categoricalAggregationFunction"`
	DateAggregationFunction        *AnalysisDateAggregationFunction        `pulumi:"dateAggregationFunction"`
	NumericalAggregationFunction   *AnalysisNumericalAggregationFunction   `pulumi:"numericalAggregationFunction"`
}

// AnalysisAggregationFunctionInput is an input type that accepts AnalysisAggregationFunctionArgs and AnalysisAggregationFunctionOutput values.
// You can construct a concrete instance of `AnalysisAggregationFunctionInput` via:
//
//	AnalysisAggregationFunctionArgs{...}
type AnalysisAggregationFunctionInput interface {
	pulumi.Input

	ToAnalysisAggregationFunctionOutput() AnalysisAggregationFunctionOutput
	ToAnalysisAggregationFunctionOutputWithContext(context.Context) AnalysisAggregationFunctionOutput
}

type AnalysisAggregationFunctionArgs struct {
	CategoricalAggregationFunction AnalysisCategoricalAggregationFunctionPtrInput `pulumi:"categoricalAggregationFunction"`
	DateAggregationFunction        AnalysisDateAggregationFunctionPtrInput        `pulumi:"dateAggregationFunction"`
	NumericalAggregationFunction   AnalysisNumericalAggregationFunctionPtrInput   `pulumi:"numericalAggregationFunction"`
}

func (AnalysisAggregationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAggregationFunction)(nil)).Elem()
}

func (i AnalysisAggregationFunctionArgs) ToAnalysisAggregationFunctionOutput() AnalysisAggregationFunctionOutput {
	return i.ToAnalysisAggregationFunctionOutputWithContext(context.Background())
}

func (i AnalysisAggregationFunctionArgs) ToAnalysisAggregationFunctionOutputWithContext(ctx context.Context) AnalysisAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAggregationFunctionOutput)
}

func (i AnalysisAggregationFunctionArgs) ToAnalysisAggregationFunctionPtrOutput() AnalysisAggregationFunctionPtrOutput {
	return i.ToAnalysisAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i AnalysisAggregationFunctionArgs) ToAnalysisAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAggregationFunctionOutput).ToAnalysisAggregationFunctionPtrOutputWithContext(ctx)
}

// AnalysisAggregationFunctionPtrInput is an input type that accepts AnalysisAggregationFunctionArgs, AnalysisAggregationFunctionPtr and AnalysisAggregationFunctionPtrOutput values.
// You can construct a concrete instance of `AnalysisAggregationFunctionPtrInput` via:
//
//	        AnalysisAggregationFunctionArgs{...}
//
//	or:
//
//	        nil
type AnalysisAggregationFunctionPtrInput interface {
	pulumi.Input

	ToAnalysisAggregationFunctionPtrOutput() AnalysisAggregationFunctionPtrOutput
	ToAnalysisAggregationFunctionPtrOutputWithContext(context.Context) AnalysisAggregationFunctionPtrOutput
}

type analysisAggregationFunctionPtrType AnalysisAggregationFunctionArgs

func AnalysisAggregationFunctionPtr(v *AnalysisAggregationFunctionArgs) AnalysisAggregationFunctionPtrInput {
	return (*analysisAggregationFunctionPtrType)(v)
}

func (*analysisAggregationFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAggregationFunction)(nil)).Elem()
}

func (i *analysisAggregationFunctionPtrType) ToAnalysisAggregationFunctionPtrOutput() AnalysisAggregationFunctionPtrOutput {
	return i.ToAnalysisAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i *analysisAggregationFunctionPtrType) ToAnalysisAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAggregationFunctionPtrOutput)
}

type AnalysisAggregationFunctionOutput struct{ *pulumi.OutputState }

func (AnalysisAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAggregationFunction)(nil)).Elem()
}

func (o AnalysisAggregationFunctionOutput) ToAnalysisAggregationFunctionOutput() AnalysisAggregationFunctionOutput {
	return o
}

func (o AnalysisAggregationFunctionOutput) ToAnalysisAggregationFunctionOutputWithContext(ctx context.Context) AnalysisAggregationFunctionOutput {
	return o
}

func (o AnalysisAggregationFunctionOutput) ToAnalysisAggregationFunctionPtrOutput() AnalysisAggregationFunctionPtrOutput {
	return o.ToAnalysisAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o AnalysisAggregationFunctionOutput) ToAnalysisAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAggregationFunction) *AnalysisAggregationFunction {
		return &v
	}).(AnalysisAggregationFunctionPtrOutput)
}

func (o AnalysisAggregationFunctionOutput) CategoricalAggregationFunction() AnalysisCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisAggregationFunction) *AnalysisCategoricalAggregationFunction {
		return v.CategoricalAggregationFunction
	}).(AnalysisCategoricalAggregationFunctionPtrOutput)
}

func (o AnalysisAggregationFunctionOutput) DateAggregationFunction() AnalysisDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisAggregationFunction) *AnalysisDateAggregationFunction { return v.DateAggregationFunction }).(AnalysisDateAggregationFunctionPtrOutput)
}

func (o AnalysisAggregationFunctionOutput) NumericalAggregationFunction() AnalysisNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisAggregationFunction) *AnalysisNumericalAggregationFunction {
		return v.NumericalAggregationFunction
	}).(AnalysisNumericalAggregationFunctionPtrOutput)
}

type AnalysisAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAggregationFunction)(nil)).Elem()
}

func (o AnalysisAggregationFunctionPtrOutput) ToAnalysisAggregationFunctionPtrOutput() AnalysisAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisAggregationFunctionPtrOutput) ToAnalysisAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisAggregationFunctionPtrOutput) Elem() AnalysisAggregationFunctionOutput {
	return o.ApplyT(func(v *AnalysisAggregationFunction) AnalysisAggregationFunction {
		if v != nil {
			return *v
		}
		var ret AnalysisAggregationFunction
		return ret
	}).(AnalysisAggregationFunctionOutput)
}

func (o AnalysisAggregationFunctionPtrOutput) CategoricalAggregationFunction() AnalysisCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisAggregationFunction) *AnalysisCategoricalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.CategoricalAggregationFunction
	}).(AnalysisCategoricalAggregationFunctionPtrOutput)
}

func (o AnalysisAggregationFunctionPtrOutput) DateAggregationFunction() AnalysisDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisAggregationFunction) *AnalysisDateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.DateAggregationFunction
	}).(AnalysisDateAggregationFunctionPtrOutput)
}

func (o AnalysisAggregationFunctionPtrOutput) NumericalAggregationFunction() AnalysisNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisAggregationFunction) *AnalysisNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.NumericalAggregationFunction
	}).(AnalysisNumericalAggregationFunctionPtrOutput)
}

type AnalysisAggregationSortConfiguration struct {
	AggregationFunction AnalysisAggregationFunction `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifier    `pulumi:"column"`
	SortDirection       AnalysisSortDirection       `pulumi:"sortDirection"`
}

// AnalysisAggregationSortConfigurationInput is an input type that accepts AnalysisAggregationSortConfigurationArgs and AnalysisAggregationSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisAggregationSortConfigurationInput` via:
//
//	AnalysisAggregationSortConfigurationArgs{...}
type AnalysisAggregationSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisAggregationSortConfigurationOutput() AnalysisAggregationSortConfigurationOutput
	ToAnalysisAggregationSortConfigurationOutputWithContext(context.Context) AnalysisAggregationSortConfigurationOutput
}

type AnalysisAggregationSortConfigurationArgs struct {
	AggregationFunction AnalysisAggregationFunctionInput `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifierInput    `pulumi:"column"`
	SortDirection       AnalysisSortDirectionInput       `pulumi:"sortDirection"`
}

func (AnalysisAggregationSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAggregationSortConfiguration)(nil)).Elem()
}

func (i AnalysisAggregationSortConfigurationArgs) ToAnalysisAggregationSortConfigurationOutput() AnalysisAggregationSortConfigurationOutput {
	return i.ToAnalysisAggregationSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisAggregationSortConfigurationArgs) ToAnalysisAggregationSortConfigurationOutputWithContext(ctx context.Context) AnalysisAggregationSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAggregationSortConfigurationOutput)
}

// AnalysisAggregationSortConfigurationArrayInput is an input type that accepts AnalysisAggregationSortConfigurationArray and AnalysisAggregationSortConfigurationArrayOutput values.
// You can construct a concrete instance of `AnalysisAggregationSortConfigurationArrayInput` via:
//
//	AnalysisAggregationSortConfigurationArray{ AnalysisAggregationSortConfigurationArgs{...} }
type AnalysisAggregationSortConfigurationArrayInput interface {
	pulumi.Input

	ToAnalysisAggregationSortConfigurationArrayOutput() AnalysisAggregationSortConfigurationArrayOutput
	ToAnalysisAggregationSortConfigurationArrayOutputWithContext(context.Context) AnalysisAggregationSortConfigurationArrayOutput
}

type AnalysisAggregationSortConfigurationArray []AnalysisAggregationSortConfigurationInput

func (AnalysisAggregationSortConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisAggregationSortConfiguration)(nil)).Elem()
}

func (i AnalysisAggregationSortConfigurationArray) ToAnalysisAggregationSortConfigurationArrayOutput() AnalysisAggregationSortConfigurationArrayOutput {
	return i.ToAnalysisAggregationSortConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalysisAggregationSortConfigurationArray) ToAnalysisAggregationSortConfigurationArrayOutputWithContext(ctx context.Context) AnalysisAggregationSortConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAggregationSortConfigurationArrayOutput)
}

type AnalysisAggregationSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisAggregationSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAggregationSortConfiguration)(nil)).Elem()
}

func (o AnalysisAggregationSortConfigurationOutput) ToAnalysisAggregationSortConfigurationOutput() AnalysisAggregationSortConfigurationOutput {
	return o
}

func (o AnalysisAggregationSortConfigurationOutput) ToAnalysisAggregationSortConfigurationOutputWithContext(ctx context.Context) AnalysisAggregationSortConfigurationOutput {
	return o
}

func (o AnalysisAggregationSortConfigurationOutput) AggregationFunction() AnalysisAggregationFunctionOutput {
	return o.ApplyT(func(v AnalysisAggregationSortConfiguration) AnalysisAggregationFunction { return v.AggregationFunction }).(AnalysisAggregationFunctionOutput)
}

func (o AnalysisAggregationSortConfigurationOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisAggregationSortConfiguration) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisAggregationSortConfigurationOutput) SortDirection() AnalysisSortDirectionOutput {
	return o.ApplyT(func(v AnalysisAggregationSortConfiguration) AnalysisSortDirection { return v.SortDirection }).(AnalysisSortDirectionOutput)
}

type AnalysisAggregationSortConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisAggregationSortConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisAggregationSortConfiguration)(nil)).Elem()
}

func (o AnalysisAggregationSortConfigurationArrayOutput) ToAnalysisAggregationSortConfigurationArrayOutput() AnalysisAggregationSortConfigurationArrayOutput {
	return o
}

func (o AnalysisAggregationSortConfigurationArrayOutput) ToAnalysisAggregationSortConfigurationArrayOutputWithContext(ctx context.Context) AnalysisAggregationSortConfigurationArrayOutput {
	return o
}

func (o AnalysisAggregationSortConfigurationArrayOutput) Index(i pulumi.IntInput) AnalysisAggregationSortConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisAggregationSortConfiguration {
		return vs[0].([]AnalysisAggregationSortConfiguration)[vs[1].(int)]
	}).(AnalysisAggregationSortConfigurationOutput)
}

type AnalysisAnchorDateConfiguration struct {
	AnchorOption  *AnalysisAnchorOption `pulumi:"anchorOption"`
	ParameterName *string               `pulumi:"parameterName"`
}

// AnalysisAnchorDateConfigurationInput is an input type that accepts AnalysisAnchorDateConfigurationArgs and AnalysisAnchorDateConfigurationOutput values.
// You can construct a concrete instance of `AnalysisAnchorDateConfigurationInput` via:
//
//	AnalysisAnchorDateConfigurationArgs{...}
type AnalysisAnchorDateConfigurationInput interface {
	pulumi.Input

	ToAnalysisAnchorDateConfigurationOutput() AnalysisAnchorDateConfigurationOutput
	ToAnalysisAnchorDateConfigurationOutputWithContext(context.Context) AnalysisAnchorDateConfigurationOutput
}

type AnalysisAnchorDateConfigurationArgs struct {
	AnchorOption  AnalysisAnchorOptionPtrInput `pulumi:"anchorOption"`
	ParameterName pulumi.StringPtrInput        `pulumi:"parameterName"`
}

func (AnalysisAnchorDateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnchorDateConfiguration)(nil)).Elem()
}

func (i AnalysisAnchorDateConfigurationArgs) ToAnalysisAnchorDateConfigurationOutput() AnalysisAnchorDateConfigurationOutput {
	return i.ToAnalysisAnchorDateConfigurationOutputWithContext(context.Background())
}

func (i AnalysisAnchorDateConfigurationArgs) ToAnalysisAnchorDateConfigurationOutputWithContext(ctx context.Context) AnalysisAnchorDateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnchorDateConfigurationOutput)
}

func (i AnalysisAnchorDateConfigurationArgs) ToAnalysisAnchorDateConfigurationPtrOutput() AnalysisAnchorDateConfigurationPtrOutput {
	return i.ToAnalysisAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisAnchorDateConfigurationArgs) ToAnalysisAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) AnalysisAnchorDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnchorDateConfigurationOutput).ToAnalysisAnchorDateConfigurationPtrOutputWithContext(ctx)
}

// AnalysisAnchorDateConfigurationPtrInput is an input type that accepts AnalysisAnchorDateConfigurationArgs, AnalysisAnchorDateConfigurationPtr and AnalysisAnchorDateConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisAnchorDateConfigurationPtrInput` via:
//
//	        AnalysisAnchorDateConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisAnchorDateConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisAnchorDateConfigurationPtrOutput() AnalysisAnchorDateConfigurationPtrOutput
	ToAnalysisAnchorDateConfigurationPtrOutputWithContext(context.Context) AnalysisAnchorDateConfigurationPtrOutput
}

type analysisAnchorDateConfigurationPtrType AnalysisAnchorDateConfigurationArgs

func AnalysisAnchorDateConfigurationPtr(v *AnalysisAnchorDateConfigurationArgs) AnalysisAnchorDateConfigurationPtrInput {
	return (*analysisAnchorDateConfigurationPtrType)(v)
}

func (*analysisAnchorDateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAnchorDateConfiguration)(nil)).Elem()
}

func (i *analysisAnchorDateConfigurationPtrType) ToAnalysisAnchorDateConfigurationPtrOutput() AnalysisAnchorDateConfigurationPtrOutput {
	return i.ToAnalysisAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisAnchorDateConfigurationPtrType) ToAnalysisAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) AnalysisAnchorDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAnchorDateConfigurationPtrOutput)
}

type AnalysisAnchorDateConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisAnchorDateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnchorDateConfiguration)(nil)).Elem()
}

func (o AnalysisAnchorDateConfigurationOutput) ToAnalysisAnchorDateConfigurationOutput() AnalysisAnchorDateConfigurationOutput {
	return o
}

func (o AnalysisAnchorDateConfigurationOutput) ToAnalysisAnchorDateConfigurationOutputWithContext(ctx context.Context) AnalysisAnchorDateConfigurationOutput {
	return o
}

func (o AnalysisAnchorDateConfigurationOutput) ToAnalysisAnchorDateConfigurationPtrOutput() AnalysisAnchorDateConfigurationPtrOutput {
	return o.ToAnalysisAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisAnchorDateConfigurationOutput) ToAnalysisAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) AnalysisAnchorDateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAnchorDateConfiguration) *AnalysisAnchorDateConfiguration {
		return &v
	}).(AnalysisAnchorDateConfigurationPtrOutput)
}

func (o AnalysisAnchorDateConfigurationOutput) AnchorOption() AnalysisAnchorOptionPtrOutput {
	return o.ApplyT(func(v AnalysisAnchorDateConfiguration) *AnalysisAnchorOption { return v.AnchorOption }).(AnalysisAnchorOptionPtrOutput)
}

func (o AnalysisAnchorDateConfigurationOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisAnchorDateConfiguration) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

type AnalysisAnchorDateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisAnchorDateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAnchorDateConfiguration)(nil)).Elem()
}

func (o AnalysisAnchorDateConfigurationPtrOutput) ToAnalysisAnchorDateConfigurationPtrOutput() AnalysisAnchorDateConfigurationPtrOutput {
	return o
}

func (o AnalysisAnchorDateConfigurationPtrOutput) ToAnalysisAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) AnalysisAnchorDateConfigurationPtrOutput {
	return o
}

func (o AnalysisAnchorDateConfigurationPtrOutput) Elem() AnalysisAnchorDateConfigurationOutput {
	return o.ApplyT(func(v *AnalysisAnchorDateConfiguration) AnalysisAnchorDateConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisAnchorDateConfiguration
		return ret
	}).(AnalysisAnchorDateConfigurationOutput)
}

func (o AnalysisAnchorDateConfigurationPtrOutput) AnchorOption() AnalysisAnchorOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisAnchorDateConfiguration) *AnalysisAnchorOption {
		if v == nil {
			return nil
		}
		return v.AnchorOption
	}).(AnalysisAnchorOptionPtrOutput)
}

func (o AnalysisAnchorDateConfigurationPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisAnchorDateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

type AnalysisArcAxisConfiguration struct {
	Range        *AnalysisArcAxisDisplayRange `pulumi:"range"`
	ReserveRange *float64                     `pulumi:"reserveRange"`
}

// AnalysisArcAxisConfigurationInput is an input type that accepts AnalysisArcAxisConfigurationArgs and AnalysisArcAxisConfigurationOutput values.
// You can construct a concrete instance of `AnalysisArcAxisConfigurationInput` via:
//
//	AnalysisArcAxisConfigurationArgs{...}
type AnalysisArcAxisConfigurationInput interface {
	pulumi.Input

	ToAnalysisArcAxisConfigurationOutput() AnalysisArcAxisConfigurationOutput
	ToAnalysisArcAxisConfigurationOutputWithContext(context.Context) AnalysisArcAxisConfigurationOutput
}

type AnalysisArcAxisConfigurationArgs struct {
	Range        AnalysisArcAxisDisplayRangePtrInput `pulumi:"range"`
	ReserveRange pulumi.Float64PtrInput              `pulumi:"reserveRange"`
}

func (AnalysisArcAxisConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcAxisConfiguration)(nil)).Elem()
}

func (i AnalysisArcAxisConfigurationArgs) ToAnalysisArcAxisConfigurationOutput() AnalysisArcAxisConfigurationOutput {
	return i.ToAnalysisArcAxisConfigurationOutputWithContext(context.Background())
}

func (i AnalysisArcAxisConfigurationArgs) ToAnalysisArcAxisConfigurationOutputWithContext(ctx context.Context) AnalysisArcAxisConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcAxisConfigurationOutput)
}

func (i AnalysisArcAxisConfigurationArgs) ToAnalysisArcAxisConfigurationPtrOutput() AnalysisArcAxisConfigurationPtrOutput {
	return i.ToAnalysisArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisArcAxisConfigurationArgs) ToAnalysisArcAxisConfigurationPtrOutputWithContext(ctx context.Context) AnalysisArcAxisConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcAxisConfigurationOutput).ToAnalysisArcAxisConfigurationPtrOutputWithContext(ctx)
}

// AnalysisArcAxisConfigurationPtrInput is an input type that accepts AnalysisArcAxisConfigurationArgs, AnalysisArcAxisConfigurationPtr and AnalysisArcAxisConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisArcAxisConfigurationPtrInput` via:
//
//	        AnalysisArcAxisConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisArcAxisConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisArcAxisConfigurationPtrOutput() AnalysisArcAxisConfigurationPtrOutput
	ToAnalysisArcAxisConfigurationPtrOutputWithContext(context.Context) AnalysisArcAxisConfigurationPtrOutput
}

type analysisArcAxisConfigurationPtrType AnalysisArcAxisConfigurationArgs

func AnalysisArcAxisConfigurationPtr(v *AnalysisArcAxisConfigurationArgs) AnalysisArcAxisConfigurationPtrInput {
	return (*analysisArcAxisConfigurationPtrType)(v)
}

func (*analysisArcAxisConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisArcAxisConfiguration)(nil)).Elem()
}

func (i *analysisArcAxisConfigurationPtrType) ToAnalysisArcAxisConfigurationPtrOutput() AnalysisArcAxisConfigurationPtrOutput {
	return i.ToAnalysisArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisArcAxisConfigurationPtrType) ToAnalysisArcAxisConfigurationPtrOutputWithContext(ctx context.Context) AnalysisArcAxisConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcAxisConfigurationPtrOutput)
}

type AnalysisArcAxisConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisArcAxisConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcAxisConfiguration)(nil)).Elem()
}

func (o AnalysisArcAxisConfigurationOutput) ToAnalysisArcAxisConfigurationOutput() AnalysisArcAxisConfigurationOutput {
	return o
}

func (o AnalysisArcAxisConfigurationOutput) ToAnalysisArcAxisConfigurationOutputWithContext(ctx context.Context) AnalysisArcAxisConfigurationOutput {
	return o
}

func (o AnalysisArcAxisConfigurationOutput) ToAnalysisArcAxisConfigurationPtrOutput() AnalysisArcAxisConfigurationPtrOutput {
	return o.ToAnalysisArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisArcAxisConfigurationOutput) ToAnalysisArcAxisConfigurationPtrOutputWithContext(ctx context.Context) AnalysisArcAxisConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisArcAxisConfiguration) *AnalysisArcAxisConfiguration {
		return &v
	}).(AnalysisArcAxisConfigurationPtrOutput)
}

func (o AnalysisArcAxisConfigurationOutput) Range() AnalysisArcAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v AnalysisArcAxisConfiguration) *AnalysisArcAxisDisplayRange { return v.Range }).(AnalysisArcAxisDisplayRangePtrOutput)
}

func (o AnalysisArcAxisConfigurationOutput) ReserveRange() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisArcAxisConfiguration) *float64 { return v.ReserveRange }).(pulumi.Float64PtrOutput)
}

type AnalysisArcAxisConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisArcAxisConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisArcAxisConfiguration)(nil)).Elem()
}

func (o AnalysisArcAxisConfigurationPtrOutput) ToAnalysisArcAxisConfigurationPtrOutput() AnalysisArcAxisConfigurationPtrOutput {
	return o
}

func (o AnalysisArcAxisConfigurationPtrOutput) ToAnalysisArcAxisConfigurationPtrOutputWithContext(ctx context.Context) AnalysisArcAxisConfigurationPtrOutput {
	return o
}

func (o AnalysisArcAxisConfigurationPtrOutput) Elem() AnalysisArcAxisConfigurationOutput {
	return o.ApplyT(func(v *AnalysisArcAxisConfiguration) AnalysisArcAxisConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisArcAxisConfiguration
		return ret
	}).(AnalysisArcAxisConfigurationOutput)
}

func (o AnalysisArcAxisConfigurationPtrOutput) Range() AnalysisArcAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v *AnalysisArcAxisConfiguration) *AnalysisArcAxisDisplayRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(AnalysisArcAxisDisplayRangePtrOutput)
}

func (o AnalysisArcAxisConfigurationPtrOutput) ReserveRange() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisArcAxisConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ReserveRange
	}).(pulumi.Float64PtrOutput)
}

type AnalysisArcAxisDisplayRange struct {
	Max *float64 `pulumi:"max"`
	Min *float64 `pulumi:"min"`
}

// AnalysisArcAxisDisplayRangeInput is an input type that accepts AnalysisArcAxisDisplayRangeArgs and AnalysisArcAxisDisplayRangeOutput values.
// You can construct a concrete instance of `AnalysisArcAxisDisplayRangeInput` via:
//
//	AnalysisArcAxisDisplayRangeArgs{...}
type AnalysisArcAxisDisplayRangeInput interface {
	pulumi.Input

	ToAnalysisArcAxisDisplayRangeOutput() AnalysisArcAxisDisplayRangeOutput
	ToAnalysisArcAxisDisplayRangeOutputWithContext(context.Context) AnalysisArcAxisDisplayRangeOutput
}

type AnalysisArcAxisDisplayRangeArgs struct {
	Max pulumi.Float64PtrInput `pulumi:"max"`
	Min pulumi.Float64PtrInput `pulumi:"min"`
}

func (AnalysisArcAxisDisplayRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcAxisDisplayRange)(nil)).Elem()
}

func (i AnalysisArcAxisDisplayRangeArgs) ToAnalysisArcAxisDisplayRangeOutput() AnalysisArcAxisDisplayRangeOutput {
	return i.ToAnalysisArcAxisDisplayRangeOutputWithContext(context.Background())
}

func (i AnalysisArcAxisDisplayRangeArgs) ToAnalysisArcAxisDisplayRangeOutputWithContext(ctx context.Context) AnalysisArcAxisDisplayRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcAxisDisplayRangeOutput)
}

func (i AnalysisArcAxisDisplayRangeArgs) ToAnalysisArcAxisDisplayRangePtrOutput() AnalysisArcAxisDisplayRangePtrOutput {
	return i.ToAnalysisArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i AnalysisArcAxisDisplayRangeArgs) ToAnalysisArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) AnalysisArcAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcAxisDisplayRangeOutput).ToAnalysisArcAxisDisplayRangePtrOutputWithContext(ctx)
}

// AnalysisArcAxisDisplayRangePtrInput is an input type that accepts AnalysisArcAxisDisplayRangeArgs, AnalysisArcAxisDisplayRangePtr and AnalysisArcAxisDisplayRangePtrOutput values.
// You can construct a concrete instance of `AnalysisArcAxisDisplayRangePtrInput` via:
//
//	        AnalysisArcAxisDisplayRangeArgs{...}
//
//	or:
//
//	        nil
type AnalysisArcAxisDisplayRangePtrInput interface {
	pulumi.Input

	ToAnalysisArcAxisDisplayRangePtrOutput() AnalysisArcAxisDisplayRangePtrOutput
	ToAnalysisArcAxisDisplayRangePtrOutputWithContext(context.Context) AnalysisArcAxisDisplayRangePtrOutput
}

type analysisArcAxisDisplayRangePtrType AnalysisArcAxisDisplayRangeArgs

func AnalysisArcAxisDisplayRangePtr(v *AnalysisArcAxisDisplayRangeArgs) AnalysisArcAxisDisplayRangePtrInput {
	return (*analysisArcAxisDisplayRangePtrType)(v)
}

func (*analysisArcAxisDisplayRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisArcAxisDisplayRange)(nil)).Elem()
}

func (i *analysisArcAxisDisplayRangePtrType) ToAnalysisArcAxisDisplayRangePtrOutput() AnalysisArcAxisDisplayRangePtrOutput {
	return i.ToAnalysisArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i *analysisArcAxisDisplayRangePtrType) ToAnalysisArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) AnalysisArcAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcAxisDisplayRangePtrOutput)
}

type AnalysisArcAxisDisplayRangeOutput struct{ *pulumi.OutputState }

func (AnalysisArcAxisDisplayRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcAxisDisplayRange)(nil)).Elem()
}

func (o AnalysisArcAxisDisplayRangeOutput) ToAnalysisArcAxisDisplayRangeOutput() AnalysisArcAxisDisplayRangeOutput {
	return o
}

func (o AnalysisArcAxisDisplayRangeOutput) ToAnalysisArcAxisDisplayRangeOutputWithContext(ctx context.Context) AnalysisArcAxisDisplayRangeOutput {
	return o
}

func (o AnalysisArcAxisDisplayRangeOutput) ToAnalysisArcAxisDisplayRangePtrOutput() AnalysisArcAxisDisplayRangePtrOutput {
	return o.ToAnalysisArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (o AnalysisArcAxisDisplayRangeOutput) ToAnalysisArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) AnalysisArcAxisDisplayRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisArcAxisDisplayRange) *AnalysisArcAxisDisplayRange {
		return &v
	}).(AnalysisArcAxisDisplayRangePtrOutput)
}

func (o AnalysisArcAxisDisplayRangeOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisArcAxisDisplayRange) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

func (o AnalysisArcAxisDisplayRangeOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisArcAxisDisplayRange) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

type AnalysisArcAxisDisplayRangePtrOutput struct{ *pulumi.OutputState }

func (AnalysisArcAxisDisplayRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisArcAxisDisplayRange)(nil)).Elem()
}

func (o AnalysisArcAxisDisplayRangePtrOutput) ToAnalysisArcAxisDisplayRangePtrOutput() AnalysisArcAxisDisplayRangePtrOutput {
	return o
}

func (o AnalysisArcAxisDisplayRangePtrOutput) ToAnalysisArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) AnalysisArcAxisDisplayRangePtrOutput {
	return o
}

func (o AnalysisArcAxisDisplayRangePtrOutput) Elem() AnalysisArcAxisDisplayRangeOutput {
	return o.ApplyT(func(v *AnalysisArcAxisDisplayRange) AnalysisArcAxisDisplayRange {
		if v != nil {
			return *v
		}
		var ret AnalysisArcAxisDisplayRange
		return ret
	}).(AnalysisArcAxisDisplayRangeOutput)
}

func (o AnalysisArcAxisDisplayRangePtrOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisArcAxisDisplayRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisArcAxisDisplayRangePtrOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisArcAxisDisplayRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.Float64PtrOutput)
}

type AnalysisArcConfiguration struct {
	ArcAngle     *float64                     `pulumi:"arcAngle"`
	ArcThickness *AnalysisArcThicknessOptions `pulumi:"arcThickness"`
}

// AnalysisArcConfigurationInput is an input type that accepts AnalysisArcConfigurationArgs and AnalysisArcConfigurationOutput values.
// You can construct a concrete instance of `AnalysisArcConfigurationInput` via:
//
//	AnalysisArcConfigurationArgs{...}
type AnalysisArcConfigurationInput interface {
	pulumi.Input

	ToAnalysisArcConfigurationOutput() AnalysisArcConfigurationOutput
	ToAnalysisArcConfigurationOutputWithContext(context.Context) AnalysisArcConfigurationOutput
}

type AnalysisArcConfigurationArgs struct {
	ArcAngle     pulumi.Float64PtrInput              `pulumi:"arcAngle"`
	ArcThickness AnalysisArcThicknessOptionsPtrInput `pulumi:"arcThickness"`
}

func (AnalysisArcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcConfiguration)(nil)).Elem()
}

func (i AnalysisArcConfigurationArgs) ToAnalysisArcConfigurationOutput() AnalysisArcConfigurationOutput {
	return i.ToAnalysisArcConfigurationOutputWithContext(context.Background())
}

func (i AnalysisArcConfigurationArgs) ToAnalysisArcConfigurationOutputWithContext(ctx context.Context) AnalysisArcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcConfigurationOutput)
}

func (i AnalysisArcConfigurationArgs) ToAnalysisArcConfigurationPtrOutput() AnalysisArcConfigurationPtrOutput {
	return i.ToAnalysisArcConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisArcConfigurationArgs) ToAnalysisArcConfigurationPtrOutputWithContext(ctx context.Context) AnalysisArcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcConfigurationOutput).ToAnalysisArcConfigurationPtrOutputWithContext(ctx)
}

// AnalysisArcConfigurationPtrInput is an input type that accepts AnalysisArcConfigurationArgs, AnalysisArcConfigurationPtr and AnalysisArcConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisArcConfigurationPtrInput` via:
//
//	        AnalysisArcConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisArcConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisArcConfigurationPtrOutput() AnalysisArcConfigurationPtrOutput
	ToAnalysisArcConfigurationPtrOutputWithContext(context.Context) AnalysisArcConfigurationPtrOutput
}

type analysisArcConfigurationPtrType AnalysisArcConfigurationArgs

func AnalysisArcConfigurationPtr(v *AnalysisArcConfigurationArgs) AnalysisArcConfigurationPtrInput {
	return (*analysisArcConfigurationPtrType)(v)
}

func (*analysisArcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisArcConfiguration)(nil)).Elem()
}

func (i *analysisArcConfigurationPtrType) ToAnalysisArcConfigurationPtrOutput() AnalysisArcConfigurationPtrOutput {
	return i.ToAnalysisArcConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisArcConfigurationPtrType) ToAnalysisArcConfigurationPtrOutputWithContext(ctx context.Context) AnalysisArcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcConfigurationPtrOutput)
}

type AnalysisArcConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisArcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcConfiguration)(nil)).Elem()
}

func (o AnalysisArcConfigurationOutput) ToAnalysisArcConfigurationOutput() AnalysisArcConfigurationOutput {
	return o
}

func (o AnalysisArcConfigurationOutput) ToAnalysisArcConfigurationOutputWithContext(ctx context.Context) AnalysisArcConfigurationOutput {
	return o
}

func (o AnalysisArcConfigurationOutput) ToAnalysisArcConfigurationPtrOutput() AnalysisArcConfigurationPtrOutput {
	return o.ToAnalysisArcConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisArcConfigurationOutput) ToAnalysisArcConfigurationPtrOutputWithContext(ctx context.Context) AnalysisArcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisArcConfiguration) *AnalysisArcConfiguration {
		return &v
	}).(AnalysisArcConfigurationPtrOutput)
}

func (o AnalysisArcConfigurationOutput) ArcAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisArcConfiguration) *float64 { return v.ArcAngle }).(pulumi.Float64PtrOutput)
}

func (o AnalysisArcConfigurationOutput) ArcThickness() AnalysisArcThicknessOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisArcConfiguration) *AnalysisArcThicknessOptions { return v.ArcThickness }).(AnalysisArcThicknessOptionsPtrOutput)
}

type AnalysisArcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisArcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisArcConfiguration)(nil)).Elem()
}

func (o AnalysisArcConfigurationPtrOutput) ToAnalysisArcConfigurationPtrOutput() AnalysisArcConfigurationPtrOutput {
	return o
}

func (o AnalysisArcConfigurationPtrOutput) ToAnalysisArcConfigurationPtrOutputWithContext(ctx context.Context) AnalysisArcConfigurationPtrOutput {
	return o
}

func (o AnalysisArcConfigurationPtrOutput) Elem() AnalysisArcConfigurationOutput {
	return o.ApplyT(func(v *AnalysisArcConfiguration) AnalysisArcConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisArcConfiguration
		return ret
	}).(AnalysisArcConfigurationOutput)
}

func (o AnalysisArcConfigurationPtrOutput) ArcAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisArcConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ArcAngle
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisArcConfigurationPtrOutput) ArcThickness() AnalysisArcThicknessOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisArcConfiguration) *AnalysisArcThicknessOptions {
		if v == nil {
			return nil
		}
		return v.ArcThickness
	}).(AnalysisArcThicknessOptionsPtrOutput)
}

type AnalysisArcOptions struct {
	ArcThickness *AnalysisArcThickness `pulumi:"arcThickness"`
}

// AnalysisArcOptionsInput is an input type that accepts AnalysisArcOptionsArgs and AnalysisArcOptionsOutput values.
// You can construct a concrete instance of `AnalysisArcOptionsInput` via:
//
//	AnalysisArcOptionsArgs{...}
type AnalysisArcOptionsInput interface {
	pulumi.Input

	ToAnalysisArcOptionsOutput() AnalysisArcOptionsOutput
	ToAnalysisArcOptionsOutputWithContext(context.Context) AnalysisArcOptionsOutput
}

type AnalysisArcOptionsArgs struct {
	ArcThickness AnalysisArcThicknessPtrInput `pulumi:"arcThickness"`
}

func (AnalysisArcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcOptions)(nil)).Elem()
}

func (i AnalysisArcOptionsArgs) ToAnalysisArcOptionsOutput() AnalysisArcOptionsOutput {
	return i.ToAnalysisArcOptionsOutputWithContext(context.Background())
}

func (i AnalysisArcOptionsArgs) ToAnalysisArcOptionsOutputWithContext(ctx context.Context) AnalysisArcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcOptionsOutput)
}

func (i AnalysisArcOptionsArgs) ToAnalysisArcOptionsPtrOutput() AnalysisArcOptionsPtrOutput {
	return i.ToAnalysisArcOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisArcOptionsArgs) ToAnalysisArcOptionsPtrOutputWithContext(ctx context.Context) AnalysisArcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcOptionsOutput).ToAnalysisArcOptionsPtrOutputWithContext(ctx)
}

// AnalysisArcOptionsPtrInput is an input type that accepts AnalysisArcOptionsArgs, AnalysisArcOptionsPtr and AnalysisArcOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisArcOptionsPtrInput` via:
//
//	        AnalysisArcOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisArcOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisArcOptionsPtrOutput() AnalysisArcOptionsPtrOutput
	ToAnalysisArcOptionsPtrOutputWithContext(context.Context) AnalysisArcOptionsPtrOutput
}

type analysisArcOptionsPtrType AnalysisArcOptionsArgs

func AnalysisArcOptionsPtr(v *AnalysisArcOptionsArgs) AnalysisArcOptionsPtrInput {
	return (*analysisArcOptionsPtrType)(v)
}

func (*analysisArcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisArcOptions)(nil)).Elem()
}

func (i *analysisArcOptionsPtrType) ToAnalysisArcOptionsPtrOutput() AnalysisArcOptionsPtrOutput {
	return i.ToAnalysisArcOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisArcOptionsPtrType) ToAnalysisArcOptionsPtrOutputWithContext(ctx context.Context) AnalysisArcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArcOptionsPtrOutput)
}

type AnalysisArcOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisArcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcOptions)(nil)).Elem()
}

func (o AnalysisArcOptionsOutput) ToAnalysisArcOptionsOutput() AnalysisArcOptionsOutput {
	return o
}

func (o AnalysisArcOptionsOutput) ToAnalysisArcOptionsOutputWithContext(ctx context.Context) AnalysisArcOptionsOutput {
	return o
}

func (o AnalysisArcOptionsOutput) ToAnalysisArcOptionsPtrOutput() AnalysisArcOptionsPtrOutput {
	return o.ToAnalysisArcOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisArcOptionsOutput) ToAnalysisArcOptionsPtrOutputWithContext(ctx context.Context) AnalysisArcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisArcOptions) *AnalysisArcOptions {
		return &v
	}).(AnalysisArcOptionsPtrOutput)
}

func (o AnalysisArcOptionsOutput) ArcThickness() AnalysisArcThicknessPtrOutput {
	return o.ApplyT(func(v AnalysisArcOptions) *AnalysisArcThickness { return v.ArcThickness }).(AnalysisArcThicknessPtrOutput)
}

type AnalysisArcOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisArcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisArcOptions)(nil)).Elem()
}

func (o AnalysisArcOptionsPtrOutput) ToAnalysisArcOptionsPtrOutput() AnalysisArcOptionsPtrOutput {
	return o
}

func (o AnalysisArcOptionsPtrOutput) ToAnalysisArcOptionsPtrOutputWithContext(ctx context.Context) AnalysisArcOptionsPtrOutput {
	return o
}

func (o AnalysisArcOptionsPtrOutput) Elem() AnalysisArcOptionsOutput {
	return o.ApplyT(func(v *AnalysisArcOptions) AnalysisArcOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisArcOptions
		return ret
	}).(AnalysisArcOptionsOutput)
}

func (o AnalysisArcOptionsPtrOutput) ArcThickness() AnalysisArcThicknessPtrOutput {
	return o.ApplyT(func(v *AnalysisArcOptions) *AnalysisArcThickness {
		if v == nil {
			return nil
		}
		return v.ArcThickness
	}).(AnalysisArcThicknessPtrOutput)
}

type AnalysisAxisDataOptions struct {
	DateAxisOptions    *AnalysisDateAxisOptions    `pulumi:"dateAxisOptions"`
	NumericAxisOptions *AnalysisNumericAxisOptions `pulumi:"numericAxisOptions"`
}

// AnalysisAxisDataOptionsInput is an input type that accepts AnalysisAxisDataOptionsArgs and AnalysisAxisDataOptionsOutput values.
// You can construct a concrete instance of `AnalysisAxisDataOptionsInput` via:
//
//	AnalysisAxisDataOptionsArgs{...}
type AnalysisAxisDataOptionsInput interface {
	pulumi.Input

	ToAnalysisAxisDataOptionsOutput() AnalysisAxisDataOptionsOutput
	ToAnalysisAxisDataOptionsOutputWithContext(context.Context) AnalysisAxisDataOptionsOutput
}

type AnalysisAxisDataOptionsArgs struct {
	DateAxisOptions    AnalysisDateAxisOptionsPtrInput    `pulumi:"dateAxisOptions"`
	NumericAxisOptions AnalysisNumericAxisOptionsPtrInput `pulumi:"numericAxisOptions"`
}

func (AnalysisAxisDataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisDataOptions)(nil)).Elem()
}

func (i AnalysisAxisDataOptionsArgs) ToAnalysisAxisDataOptionsOutput() AnalysisAxisDataOptionsOutput {
	return i.ToAnalysisAxisDataOptionsOutputWithContext(context.Background())
}

func (i AnalysisAxisDataOptionsArgs) ToAnalysisAxisDataOptionsOutputWithContext(ctx context.Context) AnalysisAxisDataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDataOptionsOutput)
}

func (i AnalysisAxisDataOptionsArgs) ToAnalysisAxisDataOptionsPtrOutput() AnalysisAxisDataOptionsPtrOutput {
	return i.ToAnalysisAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisAxisDataOptionsArgs) ToAnalysisAxisDataOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDataOptionsOutput).ToAnalysisAxisDataOptionsPtrOutputWithContext(ctx)
}

// AnalysisAxisDataOptionsPtrInput is an input type that accepts AnalysisAxisDataOptionsArgs, AnalysisAxisDataOptionsPtr and AnalysisAxisDataOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisAxisDataOptionsPtrInput` via:
//
//	        AnalysisAxisDataOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisAxisDataOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisAxisDataOptionsPtrOutput() AnalysisAxisDataOptionsPtrOutput
	ToAnalysisAxisDataOptionsPtrOutputWithContext(context.Context) AnalysisAxisDataOptionsPtrOutput
}

type analysisAxisDataOptionsPtrType AnalysisAxisDataOptionsArgs

func AnalysisAxisDataOptionsPtr(v *AnalysisAxisDataOptionsArgs) AnalysisAxisDataOptionsPtrInput {
	return (*analysisAxisDataOptionsPtrType)(v)
}

func (*analysisAxisDataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisDataOptions)(nil)).Elem()
}

func (i *analysisAxisDataOptionsPtrType) ToAnalysisAxisDataOptionsPtrOutput() AnalysisAxisDataOptionsPtrOutput {
	return i.ToAnalysisAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisAxisDataOptionsPtrType) ToAnalysisAxisDataOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDataOptionsPtrOutput)
}

type AnalysisAxisDataOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisAxisDataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisDataOptions)(nil)).Elem()
}

func (o AnalysisAxisDataOptionsOutput) ToAnalysisAxisDataOptionsOutput() AnalysisAxisDataOptionsOutput {
	return o
}

func (o AnalysisAxisDataOptionsOutput) ToAnalysisAxisDataOptionsOutputWithContext(ctx context.Context) AnalysisAxisDataOptionsOutput {
	return o
}

func (o AnalysisAxisDataOptionsOutput) ToAnalysisAxisDataOptionsPtrOutput() AnalysisAxisDataOptionsPtrOutput {
	return o.ToAnalysisAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisAxisDataOptionsOutput) ToAnalysisAxisDataOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisDataOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisDataOptions) *AnalysisAxisDataOptions {
		return &v
	}).(AnalysisAxisDataOptionsPtrOutput)
}

func (o AnalysisAxisDataOptionsOutput) DateAxisOptions() AnalysisDateAxisOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisAxisDataOptions) *AnalysisDateAxisOptions { return v.DateAxisOptions }).(AnalysisDateAxisOptionsPtrOutput)
}

func (o AnalysisAxisDataOptionsOutput) NumericAxisOptions() AnalysisNumericAxisOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisAxisDataOptions) *AnalysisNumericAxisOptions { return v.NumericAxisOptions }).(AnalysisNumericAxisOptionsPtrOutput)
}

type AnalysisAxisDataOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisDataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisDataOptions)(nil)).Elem()
}

func (o AnalysisAxisDataOptionsPtrOutput) ToAnalysisAxisDataOptionsPtrOutput() AnalysisAxisDataOptionsPtrOutput {
	return o
}

func (o AnalysisAxisDataOptionsPtrOutput) ToAnalysisAxisDataOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisDataOptionsPtrOutput {
	return o
}

func (o AnalysisAxisDataOptionsPtrOutput) Elem() AnalysisAxisDataOptionsOutput {
	return o.ApplyT(func(v *AnalysisAxisDataOptions) AnalysisAxisDataOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisDataOptions
		return ret
	}).(AnalysisAxisDataOptionsOutput)
}

func (o AnalysisAxisDataOptionsPtrOutput) DateAxisOptions() AnalysisDateAxisOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDataOptions) *AnalysisDateAxisOptions {
		if v == nil {
			return nil
		}
		return v.DateAxisOptions
	}).(AnalysisDateAxisOptionsPtrOutput)
}

func (o AnalysisAxisDataOptionsPtrOutput) NumericAxisOptions() AnalysisNumericAxisOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDataOptions) *AnalysisNumericAxisOptions {
		if v == nil {
			return nil
		}
		return v.NumericAxisOptions
	}).(AnalysisNumericAxisOptionsPtrOutput)
}

type AnalysisAxisDisplayDataDrivenRange struct {
}

// AnalysisAxisDisplayDataDrivenRangeInput is an input type that accepts AnalysisAxisDisplayDataDrivenRangeArgs and AnalysisAxisDisplayDataDrivenRangeOutput values.
// You can construct a concrete instance of `AnalysisAxisDisplayDataDrivenRangeInput` via:
//
//	AnalysisAxisDisplayDataDrivenRangeArgs{...}
type AnalysisAxisDisplayDataDrivenRangeInput interface {
	pulumi.Input

	ToAnalysisAxisDisplayDataDrivenRangeOutput() AnalysisAxisDisplayDataDrivenRangeOutput
	ToAnalysisAxisDisplayDataDrivenRangeOutputWithContext(context.Context) AnalysisAxisDisplayDataDrivenRangeOutput
}

type AnalysisAxisDisplayDataDrivenRangeArgs struct {
}

func (AnalysisAxisDisplayDataDrivenRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (i AnalysisAxisDisplayDataDrivenRangeArgs) ToAnalysisAxisDisplayDataDrivenRangeOutput() AnalysisAxisDisplayDataDrivenRangeOutput {
	return i.ToAnalysisAxisDisplayDataDrivenRangeOutputWithContext(context.Background())
}

func (i AnalysisAxisDisplayDataDrivenRangeArgs) ToAnalysisAxisDisplayDataDrivenRangeOutputWithContext(ctx context.Context) AnalysisAxisDisplayDataDrivenRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayDataDrivenRangeOutput)
}

func (i AnalysisAxisDisplayDataDrivenRangeArgs) ToAnalysisAxisDisplayDataDrivenRangePtrOutput() AnalysisAxisDisplayDataDrivenRangePtrOutput {
	return i.ToAnalysisAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (i AnalysisAxisDisplayDataDrivenRangeArgs) ToAnalysisAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayDataDrivenRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayDataDrivenRangeOutput).ToAnalysisAxisDisplayDataDrivenRangePtrOutputWithContext(ctx)
}

// AnalysisAxisDisplayDataDrivenRangePtrInput is an input type that accepts AnalysisAxisDisplayDataDrivenRangeArgs, AnalysisAxisDisplayDataDrivenRangePtr and AnalysisAxisDisplayDataDrivenRangePtrOutput values.
// You can construct a concrete instance of `AnalysisAxisDisplayDataDrivenRangePtrInput` via:
//
//	        AnalysisAxisDisplayDataDrivenRangeArgs{...}
//
//	or:
//
//	        nil
type AnalysisAxisDisplayDataDrivenRangePtrInput interface {
	pulumi.Input

	ToAnalysisAxisDisplayDataDrivenRangePtrOutput() AnalysisAxisDisplayDataDrivenRangePtrOutput
	ToAnalysisAxisDisplayDataDrivenRangePtrOutputWithContext(context.Context) AnalysisAxisDisplayDataDrivenRangePtrOutput
}

type analysisAxisDisplayDataDrivenRangePtrType AnalysisAxisDisplayDataDrivenRangeArgs

func AnalysisAxisDisplayDataDrivenRangePtr(v *AnalysisAxisDisplayDataDrivenRangeArgs) AnalysisAxisDisplayDataDrivenRangePtrInput {
	return (*analysisAxisDisplayDataDrivenRangePtrType)(v)
}

func (*analysisAxisDisplayDataDrivenRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (i *analysisAxisDisplayDataDrivenRangePtrType) ToAnalysisAxisDisplayDataDrivenRangePtrOutput() AnalysisAxisDisplayDataDrivenRangePtrOutput {
	return i.ToAnalysisAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (i *analysisAxisDisplayDataDrivenRangePtrType) ToAnalysisAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayDataDrivenRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayDataDrivenRangePtrOutput)
}

type AnalysisAxisDisplayDataDrivenRangeOutput struct{ *pulumi.OutputState }

func (AnalysisAxisDisplayDataDrivenRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (o AnalysisAxisDisplayDataDrivenRangeOutput) ToAnalysisAxisDisplayDataDrivenRangeOutput() AnalysisAxisDisplayDataDrivenRangeOutput {
	return o
}

func (o AnalysisAxisDisplayDataDrivenRangeOutput) ToAnalysisAxisDisplayDataDrivenRangeOutputWithContext(ctx context.Context) AnalysisAxisDisplayDataDrivenRangeOutput {
	return o
}

func (o AnalysisAxisDisplayDataDrivenRangeOutput) ToAnalysisAxisDisplayDataDrivenRangePtrOutput() AnalysisAxisDisplayDataDrivenRangePtrOutput {
	return o.ToAnalysisAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (o AnalysisAxisDisplayDataDrivenRangeOutput) ToAnalysisAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisDisplayDataDrivenRange) *AnalysisAxisDisplayDataDrivenRange {
		return &v
	}).(AnalysisAxisDisplayDataDrivenRangePtrOutput)
}

type AnalysisAxisDisplayDataDrivenRangePtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisDisplayDataDrivenRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (o AnalysisAxisDisplayDataDrivenRangePtrOutput) ToAnalysisAxisDisplayDataDrivenRangePtrOutput() AnalysisAxisDisplayDataDrivenRangePtrOutput {
	return o
}

func (o AnalysisAxisDisplayDataDrivenRangePtrOutput) ToAnalysisAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayDataDrivenRangePtrOutput {
	return o
}

func (o AnalysisAxisDisplayDataDrivenRangePtrOutput) Elem() AnalysisAxisDisplayDataDrivenRangeOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayDataDrivenRange) AnalysisAxisDisplayDataDrivenRange {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisDisplayDataDrivenRange
		return ret
	}).(AnalysisAxisDisplayDataDrivenRangeOutput)
}

type AnalysisAxisDisplayMinMaxRange struct {
	Maximum *float64 `pulumi:"maximum"`
	Minimum *float64 `pulumi:"minimum"`
}

// AnalysisAxisDisplayMinMaxRangeInput is an input type that accepts AnalysisAxisDisplayMinMaxRangeArgs and AnalysisAxisDisplayMinMaxRangeOutput values.
// You can construct a concrete instance of `AnalysisAxisDisplayMinMaxRangeInput` via:
//
//	AnalysisAxisDisplayMinMaxRangeArgs{...}
type AnalysisAxisDisplayMinMaxRangeInput interface {
	pulumi.Input

	ToAnalysisAxisDisplayMinMaxRangeOutput() AnalysisAxisDisplayMinMaxRangeOutput
	ToAnalysisAxisDisplayMinMaxRangeOutputWithContext(context.Context) AnalysisAxisDisplayMinMaxRangeOutput
}

type AnalysisAxisDisplayMinMaxRangeArgs struct {
	Maximum pulumi.Float64PtrInput `pulumi:"maximum"`
	Minimum pulumi.Float64PtrInput `pulumi:"minimum"`
}

func (AnalysisAxisDisplayMinMaxRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisDisplayMinMaxRange)(nil)).Elem()
}

func (i AnalysisAxisDisplayMinMaxRangeArgs) ToAnalysisAxisDisplayMinMaxRangeOutput() AnalysisAxisDisplayMinMaxRangeOutput {
	return i.ToAnalysisAxisDisplayMinMaxRangeOutputWithContext(context.Background())
}

func (i AnalysisAxisDisplayMinMaxRangeArgs) ToAnalysisAxisDisplayMinMaxRangeOutputWithContext(ctx context.Context) AnalysisAxisDisplayMinMaxRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayMinMaxRangeOutput)
}

func (i AnalysisAxisDisplayMinMaxRangeArgs) ToAnalysisAxisDisplayMinMaxRangePtrOutput() AnalysisAxisDisplayMinMaxRangePtrOutput {
	return i.ToAnalysisAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (i AnalysisAxisDisplayMinMaxRangeArgs) ToAnalysisAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayMinMaxRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayMinMaxRangeOutput).ToAnalysisAxisDisplayMinMaxRangePtrOutputWithContext(ctx)
}

// AnalysisAxisDisplayMinMaxRangePtrInput is an input type that accepts AnalysisAxisDisplayMinMaxRangeArgs, AnalysisAxisDisplayMinMaxRangePtr and AnalysisAxisDisplayMinMaxRangePtrOutput values.
// You can construct a concrete instance of `AnalysisAxisDisplayMinMaxRangePtrInput` via:
//
//	        AnalysisAxisDisplayMinMaxRangeArgs{...}
//
//	or:
//
//	        nil
type AnalysisAxisDisplayMinMaxRangePtrInput interface {
	pulumi.Input

	ToAnalysisAxisDisplayMinMaxRangePtrOutput() AnalysisAxisDisplayMinMaxRangePtrOutput
	ToAnalysisAxisDisplayMinMaxRangePtrOutputWithContext(context.Context) AnalysisAxisDisplayMinMaxRangePtrOutput
}

type analysisAxisDisplayMinMaxRangePtrType AnalysisAxisDisplayMinMaxRangeArgs

func AnalysisAxisDisplayMinMaxRangePtr(v *AnalysisAxisDisplayMinMaxRangeArgs) AnalysisAxisDisplayMinMaxRangePtrInput {
	return (*analysisAxisDisplayMinMaxRangePtrType)(v)
}

func (*analysisAxisDisplayMinMaxRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisDisplayMinMaxRange)(nil)).Elem()
}

func (i *analysisAxisDisplayMinMaxRangePtrType) ToAnalysisAxisDisplayMinMaxRangePtrOutput() AnalysisAxisDisplayMinMaxRangePtrOutput {
	return i.ToAnalysisAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (i *analysisAxisDisplayMinMaxRangePtrType) ToAnalysisAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayMinMaxRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayMinMaxRangePtrOutput)
}

type AnalysisAxisDisplayMinMaxRangeOutput struct{ *pulumi.OutputState }

func (AnalysisAxisDisplayMinMaxRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisDisplayMinMaxRange)(nil)).Elem()
}

func (o AnalysisAxisDisplayMinMaxRangeOutput) ToAnalysisAxisDisplayMinMaxRangeOutput() AnalysisAxisDisplayMinMaxRangeOutput {
	return o
}

func (o AnalysisAxisDisplayMinMaxRangeOutput) ToAnalysisAxisDisplayMinMaxRangeOutputWithContext(ctx context.Context) AnalysisAxisDisplayMinMaxRangeOutput {
	return o
}

func (o AnalysisAxisDisplayMinMaxRangeOutput) ToAnalysisAxisDisplayMinMaxRangePtrOutput() AnalysisAxisDisplayMinMaxRangePtrOutput {
	return o.ToAnalysisAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (o AnalysisAxisDisplayMinMaxRangeOutput) ToAnalysisAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisDisplayMinMaxRange) *AnalysisAxisDisplayMinMaxRange {
		return &v
	}).(AnalysisAxisDisplayMinMaxRangePtrOutput)
}

func (o AnalysisAxisDisplayMinMaxRangeOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisAxisDisplayMinMaxRange) *float64 { return v.Maximum }).(pulumi.Float64PtrOutput)
}

func (o AnalysisAxisDisplayMinMaxRangeOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisAxisDisplayMinMaxRange) *float64 { return v.Minimum }).(pulumi.Float64PtrOutput)
}

type AnalysisAxisDisplayMinMaxRangePtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisDisplayMinMaxRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisDisplayMinMaxRange)(nil)).Elem()
}

func (o AnalysisAxisDisplayMinMaxRangePtrOutput) ToAnalysisAxisDisplayMinMaxRangePtrOutput() AnalysisAxisDisplayMinMaxRangePtrOutput {
	return o
}

func (o AnalysisAxisDisplayMinMaxRangePtrOutput) ToAnalysisAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayMinMaxRangePtrOutput {
	return o
}

func (o AnalysisAxisDisplayMinMaxRangePtrOutput) Elem() AnalysisAxisDisplayMinMaxRangeOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayMinMaxRange) AnalysisAxisDisplayMinMaxRange {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisDisplayMinMaxRange
		return ret
	}).(AnalysisAxisDisplayMinMaxRangeOutput)
}

func (o AnalysisAxisDisplayMinMaxRangePtrOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayMinMaxRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisAxisDisplayMinMaxRangePtrOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayMinMaxRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.Float64PtrOutput)
}

type AnalysisAxisDisplayOptions struct {
	AxisLineVisibility *AnalysisVisibility `pulumi:"axisLineVisibility"`
	// String based length that is composed of value and unit in px
	AxisOffset         *string                       `pulumi:"axisOffset"`
	DataOptions        *AnalysisAxisDataOptions      `pulumi:"dataOptions"`
	GridLineVisibility *AnalysisVisibility           `pulumi:"gridLineVisibility"`
	ScrollbarOptions   *AnalysisScrollBarOptions     `pulumi:"scrollbarOptions"`
	TickLabelOptions   *AnalysisAxisTickLabelOptions `pulumi:"tickLabelOptions"`
}

// AnalysisAxisDisplayOptionsInput is an input type that accepts AnalysisAxisDisplayOptionsArgs and AnalysisAxisDisplayOptionsOutput values.
// You can construct a concrete instance of `AnalysisAxisDisplayOptionsInput` via:
//
//	AnalysisAxisDisplayOptionsArgs{...}
type AnalysisAxisDisplayOptionsInput interface {
	pulumi.Input

	ToAnalysisAxisDisplayOptionsOutput() AnalysisAxisDisplayOptionsOutput
	ToAnalysisAxisDisplayOptionsOutputWithContext(context.Context) AnalysisAxisDisplayOptionsOutput
}

type AnalysisAxisDisplayOptionsArgs struct {
	AxisLineVisibility AnalysisVisibilityPtrInput `pulumi:"axisLineVisibility"`
	// String based length that is composed of value and unit in px
	AxisOffset         pulumi.StringPtrInput                `pulumi:"axisOffset"`
	DataOptions        AnalysisAxisDataOptionsPtrInput      `pulumi:"dataOptions"`
	GridLineVisibility AnalysisVisibilityPtrInput           `pulumi:"gridLineVisibility"`
	ScrollbarOptions   AnalysisScrollBarOptionsPtrInput     `pulumi:"scrollbarOptions"`
	TickLabelOptions   AnalysisAxisTickLabelOptionsPtrInput `pulumi:"tickLabelOptions"`
}

func (AnalysisAxisDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisDisplayOptions)(nil)).Elem()
}

func (i AnalysisAxisDisplayOptionsArgs) ToAnalysisAxisDisplayOptionsOutput() AnalysisAxisDisplayOptionsOutput {
	return i.ToAnalysisAxisDisplayOptionsOutputWithContext(context.Background())
}

func (i AnalysisAxisDisplayOptionsArgs) ToAnalysisAxisDisplayOptionsOutputWithContext(ctx context.Context) AnalysisAxisDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayOptionsOutput)
}

func (i AnalysisAxisDisplayOptionsArgs) ToAnalysisAxisDisplayOptionsPtrOutput() AnalysisAxisDisplayOptionsPtrOutput {
	return i.ToAnalysisAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisAxisDisplayOptionsArgs) ToAnalysisAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayOptionsOutput).ToAnalysisAxisDisplayOptionsPtrOutputWithContext(ctx)
}

// AnalysisAxisDisplayOptionsPtrInput is an input type that accepts AnalysisAxisDisplayOptionsArgs, AnalysisAxisDisplayOptionsPtr and AnalysisAxisDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisAxisDisplayOptionsPtrInput` via:
//
//	        AnalysisAxisDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisAxisDisplayOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisAxisDisplayOptionsPtrOutput() AnalysisAxisDisplayOptionsPtrOutput
	ToAnalysisAxisDisplayOptionsPtrOutputWithContext(context.Context) AnalysisAxisDisplayOptionsPtrOutput
}

type analysisAxisDisplayOptionsPtrType AnalysisAxisDisplayOptionsArgs

func AnalysisAxisDisplayOptionsPtr(v *AnalysisAxisDisplayOptionsArgs) AnalysisAxisDisplayOptionsPtrInput {
	return (*analysisAxisDisplayOptionsPtrType)(v)
}

func (*analysisAxisDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisDisplayOptions)(nil)).Elem()
}

func (i *analysisAxisDisplayOptionsPtrType) ToAnalysisAxisDisplayOptionsPtrOutput() AnalysisAxisDisplayOptionsPtrOutput {
	return i.ToAnalysisAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisAxisDisplayOptionsPtrType) ToAnalysisAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayOptionsPtrOutput)
}

type AnalysisAxisDisplayOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisAxisDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisDisplayOptions)(nil)).Elem()
}

func (o AnalysisAxisDisplayOptionsOutput) ToAnalysisAxisDisplayOptionsOutput() AnalysisAxisDisplayOptionsOutput {
	return o
}

func (o AnalysisAxisDisplayOptionsOutput) ToAnalysisAxisDisplayOptionsOutputWithContext(ctx context.Context) AnalysisAxisDisplayOptionsOutput {
	return o
}

func (o AnalysisAxisDisplayOptionsOutput) ToAnalysisAxisDisplayOptionsPtrOutput() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ToAnalysisAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisAxisDisplayOptionsOutput) ToAnalysisAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisDisplayOptions) *AnalysisAxisDisplayOptions {
		return &v
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisAxisDisplayOptionsOutput) AxisLineVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisAxisDisplayOptions) *AnalysisVisibility { return v.AxisLineVisibility }).(AnalysisVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisAxisDisplayOptionsOutput) AxisOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisAxisDisplayOptions) *string { return v.AxisOffset }).(pulumi.StringPtrOutput)
}

func (o AnalysisAxisDisplayOptionsOutput) DataOptions() AnalysisAxisDataOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisAxisDisplayOptions) *AnalysisAxisDataOptions { return v.DataOptions }).(AnalysisAxisDataOptionsPtrOutput)
}

func (o AnalysisAxisDisplayOptionsOutput) GridLineVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisAxisDisplayOptions) *AnalysisVisibility { return v.GridLineVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisAxisDisplayOptionsOutput) ScrollbarOptions() AnalysisScrollBarOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisAxisDisplayOptions) *AnalysisScrollBarOptions { return v.ScrollbarOptions }).(AnalysisScrollBarOptionsPtrOutput)
}

func (o AnalysisAxisDisplayOptionsOutput) TickLabelOptions() AnalysisAxisTickLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisAxisDisplayOptions) *AnalysisAxisTickLabelOptions { return v.TickLabelOptions }).(AnalysisAxisTickLabelOptionsPtrOutput)
}

type AnalysisAxisDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisDisplayOptions)(nil)).Elem()
}

func (o AnalysisAxisDisplayOptionsPtrOutput) ToAnalysisAxisDisplayOptionsPtrOutput() AnalysisAxisDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisAxisDisplayOptionsPtrOutput) ToAnalysisAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisAxisDisplayOptionsPtrOutput) Elem() AnalysisAxisDisplayOptionsOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayOptions) AnalysisAxisDisplayOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisDisplayOptions
		return ret
	}).(AnalysisAxisDisplayOptionsOutput)
}

func (o AnalysisAxisDisplayOptionsPtrOutput) AxisLineVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.AxisLineVisibility
	}).(AnalysisVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisAxisDisplayOptionsPtrOutput) AxisOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayOptions) *string {
		if v == nil {
			return nil
		}
		return v.AxisOffset
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisAxisDisplayOptionsPtrOutput) DataOptions() AnalysisAxisDataOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayOptions) *AnalysisAxisDataOptions {
		if v == nil {
			return nil
		}
		return v.DataOptions
	}).(AnalysisAxisDataOptionsPtrOutput)
}

func (o AnalysisAxisDisplayOptionsPtrOutput) GridLineVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.GridLineVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisAxisDisplayOptionsPtrOutput) ScrollbarOptions() AnalysisScrollBarOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayOptions) *AnalysisScrollBarOptions {
		if v == nil {
			return nil
		}
		return v.ScrollbarOptions
	}).(AnalysisScrollBarOptionsPtrOutput)
}

func (o AnalysisAxisDisplayOptionsPtrOutput) TickLabelOptions() AnalysisAxisTickLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayOptions) *AnalysisAxisTickLabelOptions {
		if v == nil {
			return nil
		}
		return v.TickLabelOptions
	}).(AnalysisAxisTickLabelOptionsPtrOutput)
}

type AnalysisAxisDisplayRange struct {
	DataDriven *AnalysisAxisDisplayDataDrivenRange `pulumi:"dataDriven"`
	MinMax     *AnalysisAxisDisplayMinMaxRange     `pulumi:"minMax"`
}

// AnalysisAxisDisplayRangeInput is an input type that accepts AnalysisAxisDisplayRangeArgs and AnalysisAxisDisplayRangeOutput values.
// You can construct a concrete instance of `AnalysisAxisDisplayRangeInput` via:
//
//	AnalysisAxisDisplayRangeArgs{...}
type AnalysisAxisDisplayRangeInput interface {
	pulumi.Input

	ToAnalysisAxisDisplayRangeOutput() AnalysisAxisDisplayRangeOutput
	ToAnalysisAxisDisplayRangeOutputWithContext(context.Context) AnalysisAxisDisplayRangeOutput
}

type AnalysisAxisDisplayRangeArgs struct {
	DataDriven AnalysisAxisDisplayDataDrivenRangePtrInput `pulumi:"dataDriven"`
	MinMax     AnalysisAxisDisplayMinMaxRangePtrInput     `pulumi:"minMax"`
}

func (AnalysisAxisDisplayRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisDisplayRange)(nil)).Elem()
}

func (i AnalysisAxisDisplayRangeArgs) ToAnalysisAxisDisplayRangeOutput() AnalysisAxisDisplayRangeOutput {
	return i.ToAnalysisAxisDisplayRangeOutputWithContext(context.Background())
}

func (i AnalysisAxisDisplayRangeArgs) ToAnalysisAxisDisplayRangeOutputWithContext(ctx context.Context) AnalysisAxisDisplayRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayRangeOutput)
}

func (i AnalysisAxisDisplayRangeArgs) ToAnalysisAxisDisplayRangePtrOutput() AnalysisAxisDisplayRangePtrOutput {
	return i.ToAnalysisAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i AnalysisAxisDisplayRangeArgs) ToAnalysisAxisDisplayRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayRangeOutput).ToAnalysisAxisDisplayRangePtrOutputWithContext(ctx)
}

// AnalysisAxisDisplayRangePtrInput is an input type that accepts AnalysisAxisDisplayRangeArgs, AnalysisAxisDisplayRangePtr and AnalysisAxisDisplayRangePtrOutput values.
// You can construct a concrete instance of `AnalysisAxisDisplayRangePtrInput` via:
//
//	        AnalysisAxisDisplayRangeArgs{...}
//
//	or:
//
//	        nil
type AnalysisAxisDisplayRangePtrInput interface {
	pulumi.Input

	ToAnalysisAxisDisplayRangePtrOutput() AnalysisAxisDisplayRangePtrOutput
	ToAnalysisAxisDisplayRangePtrOutputWithContext(context.Context) AnalysisAxisDisplayRangePtrOutput
}

type analysisAxisDisplayRangePtrType AnalysisAxisDisplayRangeArgs

func AnalysisAxisDisplayRangePtr(v *AnalysisAxisDisplayRangeArgs) AnalysisAxisDisplayRangePtrInput {
	return (*analysisAxisDisplayRangePtrType)(v)
}

func (*analysisAxisDisplayRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisDisplayRange)(nil)).Elem()
}

func (i *analysisAxisDisplayRangePtrType) ToAnalysisAxisDisplayRangePtrOutput() AnalysisAxisDisplayRangePtrOutput {
	return i.ToAnalysisAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i *analysisAxisDisplayRangePtrType) ToAnalysisAxisDisplayRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisDisplayRangePtrOutput)
}

type AnalysisAxisDisplayRangeOutput struct{ *pulumi.OutputState }

func (AnalysisAxisDisplayRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisDisplayRange)(nil)).Elem()
}

func (o AnalysisAxisDisplayRangeOutput) ToAnalysisAxisDisplayRangeOutput() AnalysisAxisDisplayRangeOutput {
	return o
}

func (o AnalysisAxisDisplayRangeOutput) ToAnalysisAxisDisplayRangeOutputWithContext(ctx context.Context) AnalysisAxisDisplayRangeOutput {
	return o
}

func (o AnalysisAxisDisplayRangeOutput) ToAnalysisAxisDisplayRangePtrOutput() AnalysisAxisDisplayRangePtrOutput {
	return o.ToAnalysisAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (o AnalysisAxisDisplayRangeOutput) ToAnalysisAxisDisplayRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisDisplayRange) *AnalysisAxisDisplayRange {
		return &v
	}).(AnalysisAxisDisplayRangePtrOutput)
}

func (o AnalysisAxisDisplayRangeOutput) DataDriven() AnalysisAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyT(func(v AnalysisAxisDisplayRange) *AnalysisAxisDisplayDataDrivenRange { return v.DataDriven }).(AnalysisAxisDisplayDataDrivenRangePtrOutput)
}

func (o AnalysisAxisDisplayRangeOutput) MinMax() AnalysisAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyT(func(v AnalysisAxisDisplayRange) *AnalysisAxisDisplayMinMaxRange { return v.MinMax }).(AnalysisAxisDisplayMinMaxRangePtrOutput)
}

type AnalysisAxisDisplayRangePtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisDisplayRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisDisplayRange)(nil)).Elem()
}

func (o AnalysisAxisDisplayRangePtrOutput) ToAnalysisAxisDisplayRangePtrOutput() AnalysisAxisDisplayRangePtrOutput {
	return o
}

func (o AnalysisAxisDisplayRangePtrOutput) ToAnalysisAxisDisplayRangePtrOutputWithContext(ctx context.Context) AnalysisAxisDisplayRangePtrOutput {
	return o
}

func (o AnalysisAxisDisplayRangePtrOutput) Elem() AnalysisAxisDisplayRangeOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayRange) AnalysisAxisDisplayRange {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisDisplayRange
		return ret
	}).(AnalysisAxisDisplayRangeOutput)
}

func (o AnalysisAxisDisplayRangePtrOutput) DataDriven() AnalysisAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayRange) *AnalysisAxisDisplayDataDrivenRange {
		if v == nil {
			return nil
		}
		return v.DataDriven
	}).(AnalysisAxisDisplayDataDrivenRangePtrOutput)
}

func (o AnalysisAxisDisplayRangePtrOutput) MinMax() AnalysisAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyT(func(v *AnalysisAxisDisplayRange) *AnalysisAxisDisplayMinMaxRange {
		if v == nil {
			return nil
		}
		return v.MinMax
	}).(AnalysisAxisDisplayMinMaxRangePtrOutput)
}

type AnalysisAxisLabelOptions struct {
	ApplyTo           *AnalysisAxisLabelReferenceOptions `pulumi:"applyTo"`
	CustomLabel       *string                            `pulumi:"customLabel"`
	FontConfiguration *AnalysisFontConfiguration         `pulumi:"fontConfiguration"`
}

// AnalysisAxisLabelOptionsInput is an input type that accepts AnalysisAxisLabelOptionsArgs and AnalysisAxisLabelOptionsOutput values.
// You can construct a concrete instance of `AnalysisAxisLabelOptionsInput` via:
//
//	AnalysisAxisLabelOptionsArgs{...}
type AnalysisAxisLabelOptionsInput interface {
	pulumi.Input

	ToAnalysisAxisLabelOptionsOutput() AnalysisAxisLabelOptionsOutput
	ToAnalysisAxisLabelOptionsOutputWithContext(context.Context) AnalysisAxisLabelOptionsOutput
}

type AnalysisAxisLabelOptionsArgs struct {
	ApplyTo           AnalysisAxisLabelReferenceOptionsPtrInput `pulumi:"applyTo"`
	CustomLabel       pulumi.StringPtrInput                     `pulumi:"customLabel"`
	FontConfiguration AnalysisFontConfigurationPtrInput         `pulumi:"fontConfiguration"`
}

func (AnalysisAxisLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisLabelOptions)(nil)).Elem()
}

func (i AnalysisAxisLabelOptionsArgs) ToAnalysisAxisLabelOptionsOutput() AnalysisAxisLabelOptionsOutput {
	return i.ToAnalysisAxisLabelOptionsOutputWithContext(context.Background())
}

func (i AnalysisAxisLabelOptionsArgs) ToAnalysisAxisLabelOptionsOutputWithContext(ctx context.Context) AnalysisAxisLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLabelOptionsOutput)
}

// AnalysisAxisLabelOptionsArrayInput is an input type that accepts AnalysisAxisLabelOptionsArray and AnalysisAxisLabelOptionsArrayOutput values.
// You can construct a concrete instance of `AnalysisAxisLabelOptionsArrayInput` via:
//
//	AnalysisAxisLabelOptionsArray{ AnalysisAxisLabelOptionsArgs{...} }
type AnalysisAxisLabelOptionsArrayInput interface {
	pulumi.Input

	ToAnalysisAxisLabelOptionsArrayOutput() AnalysisAxisLabelOptionsArrayOutput
	ToAnalysisAxisLabelOptionsArrayOutputWithContext(context.Context) AnalysisAxisLabelOptionsArrayOutput
}

type AnalysisAxisLabelOptionsArray []AnalysisAxisLabelOptionsInput

func (AnalysisAxisLabelOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisAxisLabelOptions)(nil)).Elem()
}

func (i AnalysisAxisLabelOptionsArray) ToAnalysisAxisLabelOptionsArrayOutput() AnalysisAxisLabelOptionsArrayOutput {
	return i.ToAnalysisAxisLabelOptionsArrayOutputWithContext(context.Background())
}

func (i AnalysisAxisLabelOptionsArray) ToAnalysisAxisLabelOptionsArrayOutputWithContext(ctx context.Context) AnalysisAxisLabelOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLabelOptionsArrayOutput)
}

type AnalysisAxisLabelOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisAxisLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisLabelOptions)(nil)).Elem()
}

func (o AnalysisAxisLabelOptionsOutput) ToAnalysisAxisLabelOptionsOutput() AnalysisAxisLabelOptionsOutput {
	return o
}

func (o AnalysisAxisLabelOptionsOutput) ToAnalysisAxisLabelOptionsOutputWithContext(ctx context.Context) AnalysisAxisLabelOptionsOutput {
	return o
}

func (o AnalysisAxisLabelOptionsOutput) ApplyTo() AnalysisAxisLabelReferenceOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisAxisLabelOptions) *AnalysisAxisLabelReferenceOptions { return v.ApplyTo }).(AnalysisAxisLabelReferenceOptionsPtrOutput)
}

func (o AnalysisAxisLabelOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisAxisLabelOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o AnalysisAxisLabelOptionsOutput) FontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisAxisLabelOptions) *AnalysisFontConfiguration { return v.FontConfiguration }).(AnalysisFontConfigurationPtrOutput)
}

type AnalysisAxisLabelOptionsArrayOutput struct{ *pulumi.OutputState }

func (AnalysisAxisLabelOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisAxisLabelOptions)(nil)).Elem()
}

func (o AnalysisAxisLabelOptionsArrayOutput) ToAnalysisAxisLabelOptionsArrayOutput() AnalysisAxisLabelOptionsArrayOutput {
	return o
}

func (o AnalysisAxisLabelOptionsArrayOutput) ToAnalysisAxisLabelOptionsArrayOutputWithContext(ctx context.Context) AnalysisAxisLabelOptionsArrayOutput {
	return o
}

func (o AnalysisAxisLabelOptionsArrayOutput) Index(i pulumi.IntInput) AnalysisAxisLabelOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisAxisLabelOptions {
		return vs[0].([]AnalysisAxisLabelOptions)[vs[1].(int)]
	}).(AnalysisAxisLabelOptionsOutput)
}

type AnalysisAxisLabelReferenceOptions struct {
	Column  AnalysisColumnIdentifier `pulumi:"column"`
	FieldId string                   `pulumi:"fieldId"`
}

// AnalysisAxisLabelReferenceOptionsInput is an input type that accepts AnalysisAxisLabelReferenceOptionsArgs and AnalysisAxisLabelReferenceOptionsOutput values.
// You can construct a concrete instance of `AnalysisAxisLabelReferenceOptionsInput` via:
//
//	AnalysisAxisLabelReferenceOptionsArgs{...}
type AnalysisAxisLabelReferenceOptionsInput interface {
	pulumi.Input

	ToAnalysisAxisLabelReferenceOptionsOutput() AnalysisAxisLabelReferenceOptionsOutput
	ToAnalysisAxisLabelReferenceOptionsOutputWithContext(context.Context) AnalysisAxisLabelReferenceOptionsOutput
}

type AnalysisAxisLabelReferenceOptionsArgs struct {
	Column  AnalysisColumnIdentifierInput `pulumi:"column"`
	FieldId pulumi.StringInput            `pulumi:"fieldId"`
}

func (AnalysisAxisLabelReferenceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisLabelReferenceOptions)(nil)).Elem()
}

func (i AnalysisAxisLabelReferenceOptionsArgs) ToAnalysisAxisLabelReferenceOptionsOutput() AnalysisAxisLabelReferenceOptionsOutput {
	return i.ToAnalysisAxisLabelReferenceOptionsOutputWithContext(context.Background())
}

func (i AnalysisAxisLabelReferenceOptionsArgs) ToAnalysisAxisLabelReferenceOptionsOutputWithContext(ctx context.Context) AnalysisAxisLabelReferenceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLabelReferenceOptionsOutput)
}

func (i AnalysisAxisLabelReferenceOptionsArgs) ToAnalysisAxisLabelReferenceOptionsPtrOutput() AnalysisAxisLabelReferenceOptionsPtrOutput {
	return i.ToAnalysisAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisAxisLabelReferenceOptionsArgs) ToAnalysisAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisLabelReferenceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLabelReferenceOptionsOutput).ToAnalysisAxisLabelReferenceOptionsPtrOutputWithContext(ctx)
}

// AnalysisAxisLabelReferenceOptionsPtrInput is an input type that accepts AnalysisAxisLabelReferenceOptionsArgs, AnalysisAxisLabelReferenceOptionsPtr and AnalysisAxisLabelReferenceOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisAxisLabelReferenceOptionsPtrInput` via:
//
//	        AnalysisAxisLabelReferenceOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisAxisLabelReferenceOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisAxisLabelReferenceOptionsPtrOutput() AnalysisAxisLabelReferenceOptionsPtrOutput
	ToAnalysisAxisLabelReferenceOptionsPtrOutputWithContext(context.Context) AnalysisAxisLabelReferenceOptionsPtrOutput
}

type analysisAxisLabelReferenceOptionsPtrType AnalysisAxisLabelReferenceOptionsArgs

func AnalysisAxisLabelReferenceOptionsPtr(v *AnalysisAxisLabelReferenceOptionsArgs) AnalysisAxisLabelReferenceOptionsPtrInput {
	return (*analysisAxisLabelReferenceOptionsPtrType)(v)
}

func (*analysisAxisLabelReferenceOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisLabelReferenceOptions)(nil)).Elem()
}

func (i *analysisAxisLabelReferenceOptionsPtrType) ToAnalysisAxisLabelReferenceOptionsPtrOutput() AnalysisAxisLabelReferenceOptionsPtrOutput {
	return i.ToAnalysisAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisAxisLabelReferenceOptionsPtrType) ToAnalysisAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisLabelReferenceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLabelReferenceOptionsPtrOutput)
}

type AnalysisAxisLabelReferenceOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisAxisLabelReferenceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisLabelReferenceOptions)(nil)).Elem()
}

func (o AnalysisAxisLabelReferenceOptionsOutput) ToAnalysisAxisLabelReferenceOptionsOutput() AnalysisAxisLabelReferenceOptionsOutput {
	return o
}

func (o AnalysisAxisLabelReferenceOptionsOutput) ToAnalysisAxisLabelReferenceOptionsOutputWithContext(ctx context.Context) AnalysisAxisLabelReferenceOptionsOutput {
	return o
}

func (o AnalysisAxisLabelReferenceOptionsOutput) ToAnalysisAxisLabelReferenceOptionsPtrOutput() AnalysisAxisLabelReferenceOptionsPtrOutput {
	return o.ToAnalysisAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisAxisLabelReferenceOptionsOutput) ToAnalysisAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisLabelReferenceOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisLabelReferenceOptions) *AnalysisAxisLabelReferenceOptions {
		return &v
	}).(AnalysisAxisLabelReferenceOptionsPtrOutput)
}

func (o AnalysisAxisLabelReferenceOptionsOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisAxisLabelReferenceOptions) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisAxisLabelReferenceOptionsOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisAxisLabelReferenceOptions) string { return v.FieldId }).(pulumi.StringOutput)
}

type AnalysisAxisLabelReferenceOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisLabelReferenceOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisLabelReferenceOptions)(nil)).Elem()
}

func (o AnalysisAxisLabelReferenceOptionsPtrOutput) ToAnalysisAxisLabelReferenceOptionsPtrOutput() AnalysisAxisLabelReferenceOptionsPtrOutput {
	return o
}

func (o AnalysisAxisLabelReferenceOptionsPtrOutput) ToAnalysisAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisLabelReferenceOptionsPtrOutput {
	return o
}

func (o AnalysisAxisLabelReferenceOptionsPtrOutput) Elem() AnalysisAxisLabelReferenceOptionsOutput {
	return o.ApplyT(func(v *AnalysisAxisLabelReferenceOptions) AnalysisAxisLabelReferenceOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisLabelReferenceOptions
		return ret
	}).(AnalysisAxisLabelReferenceOptionsOutput)
}

func (o AnalysisAxisLabelReferenceOptionsPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisLabelReferenceOptions) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisAxisLabelReferenceOptionsPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisLabelReferenceOptions) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type AnalysisAxisLinearScale struct {
	StepCount *float64 `pulumi:"stepCount"`
	StepSize  *float64 `pulumi:"stepSize"`
}

// AnalysisAxisLinearScaleInput is an input type that accepts AnalysisAxisLinearScaleArgs and AnalysisAxisLinearScaleOutput values.
// You can construct a concrete instance of `AnalysisAxisLinearScaleInput` via:
//
//	AnalysisAxisLinearScaleArgs{...}
type AnalysisAxisLinearScaleInput interface {
	pulumi.Input

	ToAnalysisAxisLinearScaleOutput() AnalysisAxisLinearScaleOutput
	ToAnalysisAxisLinearScaleOutputWithContext(context.Context) AnalysisAxisLinearScaleOutput
}

type AnalysisAxisLinearScaleArgs struct {
	StepCount pulumi.Float64PtrInput `pulumi:"stepCount"`
	StepSize  pulumi.Float64PtrInput `pulumi:"stepSize"`
}

func (AnalysisAxisLinearScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisLinearScale)(nil)).Elem()
}

func (i AnalysisAxisLinearScaleArgs) ToAnalysisAxisLinearScaleOutput() AnalysisAxisLinearScaleOutput {
	return i.ToAnalysisAxisLinearScaleOutputWithContext(context.Background())
}

func (i AnalysisAxisLinearScaleArgs) ToAnalysisAxisLinearScaleOutputWithContext(ctx context.Context) AnalysisAxisLinearScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLinearScaleOutput)
}

func (i AnalysisAxisLinearScaleArgs) ToAnalysisAxisLinearScalePtrOutput() AnalysisAxisLinearScalePtrOutput {
	return i.ToAnalysisAxisLinearScalePtrOutputWithContext(context.Background())
}

func (i AnalysisAxisLinearScaleArgs) ToAnalysisAxisLinearScalePtrOutputWithContext(ctx context.Context) AnalysisAxisLinearScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLinearScaleOutput).ToAnalysisAxisLinearScalePtrOutputWithContext(ctx)
}

// AnalysisAxisLinearScalePtrInput is an input type that accepts AnalysisAxisLinearScaleArgs, AnalysisAxisLinearScalePtr and AnalysisAxisLinearScalePtrOutput values.
// You can construct a concrete instance of `AnalysisAxisLinearScalePtrInput` via:
//
//	        AnalysisAxisLinearScaleArgs{...}
//
//	or:
//
//	        nil
type AnalysisAxisLinearScalePtrInput interface {
	pulumi.Input

	ToAnalysisAxisLinearScalePtrOutput() AnalysisAxisLinearScalePtrOutput
	ToAnalysisAxisLinearScalePtrOutputWithContext(context.Context) AnalysisAxisLinearScalePtrOutput
}

type analysisAxisLinearScalePtrType AnalysisAxisLinearScaleArgs

func AnalysisAxisLinearScalePtr(v *AnalysisAxisLinearScaleArgs) AnalysisAxisLinearScalePtrInput {
	return (*analysisAxisLinearScalePtrType)(v)
}

func (*analysisAxisLinearScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisLinearScale)(nil)).Elem()
}

func (i *analysisAxisLinearScalePtrType) ToAnalysisAxisLinearScalePtrOutput() AnalysisAxisLinearScalePtrOutput {
	return i.ToAnalysisAxisLinearScalePtrOutputWithContext(context.Background())
}

func (i *analysisAxisLinearScalePtrType) ToAnalysisAxisLinearScalePtrOutputWithContext(ctx context.Context) AnalysisAxisLinearScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLinearScalePtrOutput)
}

type AnalysisAxisLinearScaleOutput struct{ *pulumi.OutputState }

func (AnalysisAxisLinearScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisLinearScale)(nil)).Elem()
}

func (o AnalysisAxisLinearScaleOutput) ToAnalysisAxisLinearScaleOutput() AnalysisAxisLinearScaleOutput {
	return o
}

func (o AnalysisAxisLinearScaleOutput) ToAnalysisAxisLinearScaleOutputWithContext(ctx context.Context) AnalysisAxisLinearScaleOutput {
	return o
}

func (o AnalysisAxisLinearScaleOutput) ToAnalysisAxisLinearScalePtrOutput() AnalysisAxisLinearScalePtrOutput {
	return o.ToAnalysisAxisLinearScalePtrOutputWithContext(context.Background())
}

func (o AnalysisAxisLinearScaleOutput) ToAnalysisAxisLinearScalePtrOutputWithContext(ctx context.Context) AnalysisAxisLinearScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisLinearScale) *AnalysisAxisLinearScale {
		return &v
	}).(AnalysisAxisLinearScalePtrOutput)
}

func (o AnalysisAxisLinearScaleOutput) StepCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisAxisLinearScale) *float64 { return v.StepCount }).(pulumi.Float64PtrOutput)
}

func (o AnalysisAxisLinearScaleOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisAxisLinearScale) *float64 { return v.StepSize }).(pulumi.Float64PtrOutput)
}

type AnalysisAxisLinearScalePtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisLinearScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisLinearScale)(nil)).Elem()
}

func (o AnalysisAxisLinearScalePtrOutput) ToAnalysisAxisLinearScalePtrOutput() AnalysisAxisLinearScalePtrOutput {
	return o
}

func (o AnalysisAxisLinearScalePtrOutput) ToAnalysisAxisLinearScalePtrOutputWithContext(ctx context.Context) AnalysisAxisLinearScalePtrOutput {
	return o
}

func (o AnalysisAxisLinearScalePtrOutput) Elem() AnalysisAxisLinearScaleOutput {
	return o.ApplyT(func(v *AnalysisAxisLinearScale) AnalysisAxisLinearScale {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisLinearScale
		return ret
	}).(AnalysisAxisLinearScaleOutput)
}

func (o AnalysisAxisLinearScalePtrOutput) StepCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisAxisLinearScale) *float64 {
		if v == nil {
			return nil
		}
		return v.StepCount
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisAxisLinearScalePtrOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisAxisLinearScale) *float64 {
		if v == nil {
			return nil
		}
		return v.StepSize
	}).(pulumi.Float64PtrOutput)
}

type AnalysisAxisLogarithmicScale struct {
	Base *float64 `pulumi:"base"`
}

// AnalysisAxisLogarithmicScaleInput is an input type that accepts AnalysisAxisLogarithmicScaleArgs and AnalysisAxisLogarithmicScaleOutput values.
// You can construct a concrete instance of `AnalysisAxisLogarithmicScaleInput` via:
//
//	AnalysisAxisLogarithmicScaleArgs{...}
type AnalysisAxisLogarithmicScaleInput interface {
	pulumi.Input

	ToAnalysisAxisLogarithmicScaleOutput() AnalysisAxisLogarithmicScaleOutput
	ToAnalysisAxisLogarithmicScaleOutputWithContext(context.Context) AnalysisAxisLogarithmicScaleOutput
}

type AnalysisAxisLogarithmicScaleArgs struct {
	Base pulumi.Float64PtrInput `pulumi:"base"`
}

func (AnalysisAxisLogarithmicScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisLogarithmicScale)(nil)).Elem()
}

func (i AnalysisAxisLogarithmicScaleArgs) ToAnalysisAxisLogarithmicScaleOutput() AnalysisAxisLogarithmicScaleOutput {
	return i.ToAnalysisAxisLogarithmicScaleOutputWithContext(context.Background())
}

func (i AnalysisAxisLogarithmicScaleArgs) ToAnalysisAxisLogarithmicScaleOutputWithContext(ctx context.Context) AnalysisAxisLogarithmicScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLogarithmicScaleOutput)
}

func (i AnalysisAxisLogarithmicScaleArgs) ToAnalysisAxisLogarithmicScalePtrOutput() AnalysisAxisLogarithmicScalePtrOutput {
	return i.ToAnalysisAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (i AnalysisAxisLogarithmicScaleArgs) ToAnalysisAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) AnalysisAxisLogarithmicScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLogarithmicScaleOutput).ToAnalysisAxisLogarithmicScalePtrOutputWithContext(ctx)
}

// AnalysisAxisLogarithmicScalePtrInput is an input type that accepts AnalysisAxisLogarithmicScaleArgs, AnalysisAxisLogarithmicScalePtr and AnalysisAxisLogarithmicScalePtrOutput values.
// You can construct a concrete instance of `AnalysisAxisLogarithmicScalePtrInput` via:
//
//	        AnalysisAxisLogarithmicScaleArgs{...}
//
//	or:
//
//	        nil
type AnalysisAxisLogarithmicScalePtrInput interface {
	pulumi.Input

	ToAnalysisAxisLogarithmicScalePtrOutput() AnalysisAxisLogarithmicScalePtrOutput
	ToAnalysisAxisLogarithmicScalePtrOutputWithContext(context.Context) AnalysisAxisLogarithmicScalePtrOutput
}

type analysisAxisLogarithmicScalePtrType AnalysisAxisLogarithmicScaleArgs

func AnalysisAxisLogarithmicScalePtr(v *AnalysisAxisLogarithmicScaleArgs) AnalysisAxisLogarithmicScalePtrInput {
	return (*analysisAxisLogarithmicScalePtrType)(v)
}

func (*analysisAxisLogarithmicScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisLogarithmicScale)(nil)).Elem()
}

func (i *analysisAxisLogarithmicScalePtrType) ToAnalysisAxisLogarithmicScalePtrOutput() AnalysisAxisLogarithmicScalePtrOutput {
	return i.ToAnalysisAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (i *analysisAxisLogarithmicScalePtrType) ToAnalysisAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) AnalysisAxisLogarithmicScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisLogarithmicScalePtrOutput)
}

type AnalysisAxisLogarithmicScaleOutput struct{ *pulumi.OutputState }

func (AnalysisAxisLogarithmicScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisLogarithmicScale)(nil)).Elem()
}

func (o AnalysisAxisLogarithmicScaleOutput) ToAnalysisAxisLogarithmicScaleOutput() AnalysisAxisLogarithmicScaleOutput {
	return o
}

func (o AnalysisAxisLogarithmicScaleOutput) ToAnalysisAxisLogarithmicScaleOutputWithContext(ctx context.Context) AnalysisAxisLogarithmicScaleOutput {
	return o
}

func (o AnalysisAxisLogarithmicScaleOutput) ToAnalysisAxisLogarithmicScalePtrOutput() AnalysisAxisLogarithmicScalePtrOutput {
	return o.ToAnalysisAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (o AnalysisAxisLogarithmicScaleOutput) ToAnalysisAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) AnalysisAxisLogarithmicScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisLogarithmicScale) *AnalysisAxisLogarithmicScale {
		return &v
	}).(AnalysisAxisLogarithmicScalePtrOutput)
}

func (o AnalysisAxisLogarithmicScaleOutput) Base() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisAxisLogarithmicScale) *float64 { return v.Base }).(pulumi.Float64PtrOutput)
}

type AnalysisAxisLogarithmicScalePtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisLogarithmicScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisLogarithmicScale)(nil)).Elem()
}

func (o AnalysisAxisLogarithmicScalePtrOutput) ToAnalysisAxisLogarithmicScalePtrOutput() AnalysisAxisLogarithmicScalePtrOutput {
	return o
}

func (o AnalysisAxisLogarithmicScalePtrOutput) ToAnalysisAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) AnalysisAxisLogarithmicScalePtrOutput {
	return o
}

func (o AnalysisAxisLogarithmicScalePtrOutput) Elem() AnalysisAxisLogarithmicScaleOutput {
	return o.ApplyT(func(v *AnalysisAxisLogarithmicScale) AnalysisAxisLogarithmicScale {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisLogarithmicScale
		return ret
	}).(AnalysisAxisLogarithmicScaleOutput)
}

func (o AnalysisAxisLogarithmicScalePtrOutput) Base() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisAxisLogarithmicScale) *float64 {
		if v == nil {
			return nil
		}
		return v.Base
	}).(pulumi.Float64PtrOutput)
}

type AnalysisAxisScale struct {
	Linear      *AnalysisAxisLinearScale      `pulumi:"linear"`
	Logarithmic *AnalysisAxisLogarithmicScale `pulumi:"logarithmic"`
}

// AnalysisAxisScaleInput is an input type that accepts AnalysisAxisScaleArgs and AnalysisAxisScaleOutput values.
// You can construct a concrete instance of `AnalysisAxisScaleInput` via:
//
//	AnalysisAxisScaleArgs{...}
type AnalysisAxisScaleInput interface {
	pulumi.Input

	ToAnalysisAxisScaleOutput() AnalysisAxisScaleOutput
	ToAnalysisAxisScaleOutputWithContext(context.Context) AnalysisAxisScaleOutput
}

type AnalysisAxisScaleArgs struct {
	Linear      AnalysisAxisLinearScalePtrInput      `pulumi:"linear"`
	Logarithmic AnalysisAxisLogarithmicScalePtrInput `pulumi:"logarithmic"`
}

func (AnalysisAxisScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisScale)(nil)).Elem()
}

func (i AnalysisAxisScaleArgs) ToAnalysisAxisScaleOutput() AnalysisAxisScaleOutput {
	return i.ToAnalysisAxisScaleOutputWithContext(context.Background())
}

func (i AnalysisAxisScaleArgs) ToAnalysisAxisScaleOutputWithContext(ctx context.Context) AnalysisAxisScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisScaleOutput)
}

func (i AnalysisAxisScaleArgs) ToAnalysisAxisScalePtrOutput() AnalysisAxisScalePtrOutput {
	return i.ToAnalysisAxisScalePtrOutputWithContext(context.Background())
}

func (i AnalysisAxisScaleArgs) ToAnalysisAxisScalePtrOutputWithContext(ctx context.Context) AnalysisAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisScaleOutput).ToAnalysisAxisScalePtrOutputWithContext(ctx)
}

// AnalysisAxisScalePtrInput is an input type that accepts AnalysisAxisScaleArgs, AnalysisAxisScalePtr and AnalysisAxisScalePtrOutput values.
// You can construct a concrete instance of `AnalysisAxisScalePtrInput` via:
//
//	        AnalysisAxisScaleArgs{...}
//
//	or:
//
//	        nil
type AnalysisAxisScalePtrInput interface {
	pulumi.Input

	ToAnalysisAxisScalePtrOutput() AnalysisAxisScalePtrOutput
	ToAnalysisAxisScalePtrOutputWithContext(context.Context) AnalysisAxisScalePtrOutput
}

type analysisAxisScalePtrType AnalysisAxisScaleArgs

func AnalysisAxisScalePtr(v *AnalysisAxisScaleArgs) AnalysisAxisScalePtrInput {
	return (*analysisAxisScalePtrType)(v)
}

func (*analysisAxisScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisScale)(nil)).Elem()
}

func (i *analysisAxisScalePtrType) ToAnalysisAxisScalePtrOutput() AnalysisAxisScalePtrOutput {
	return i.ToAnalysisAxisScalePtrOutputWithContext(context.Background())
}

func (i *analysisAxisScalePtrType) ToAnalysisAxisScalePtrOutputWithContext(ctx context.Context) AnalysisAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisScalePtrOutput)
}

type AnalysisAxisScaleOutput struct{ *pulumi.OutputState }

func (AnalysisAxisScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisScale)(nil)).Elem()
}

func (o AnalysisAxisScaleOutput) ToAnalysisAxisScaleOutput() AnalysisAxisScaleOutput {
	return o
}

func (o AnalysisAxisScaleOutput) ToAnalysisAxisScaleOutputWithContext(ctx context.Context) AnalysisAxisScaleOutput {
	return o
}

func (o AnalysisAxisScaleOutput) ToAnalysisAxisScalePtrOutput() AnalysisAxisScalePtrOutput {
	return o.ToAnalysisAxisScalePtrOutputWithContext(context.Background())
}

func (o AnalysisAxisScaleOutput) ToAnalysisAxisScalePtrOutputWithContext(ctx context.Context) AnalysisAxisScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisScale) *AnalysisAxisScale {
		return &v
	}).(AnalysisAxisScalePtrOutput)
}

func (o AnalysisAxisScaleOutput) Linear() AnalysisAxisLinearScalePtrOutput {
	return o.ApplyT(func(v AnalysisAxisScale) *AnalysisAxisLinearScale { return v.Linear }).(AnalysisAxisLinearScalePtrOutput)
}

func (o AnalysisAxisScaleOutput) Logarithmic() AnalysisAxisLogarithmicScalePtrOutput {
	return o.ApplyT(func(v AnalysisAxisScale) *AnalysisAxisLogarithmicScale { return v.Logarithmic }).(AnalysisAxisLogarithmicScalePtrOutput)
}

type AnalysisAxisScalePtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisScale)(nil)).Elem()
}

func (o AnalysisAxisScalePtrOutput) ToAnalysisAxisScalePtrOutput() AnalysisAxisScalePtrOutput {
	return o
}

func (o AnalysisAxisScalePtrOutput) ToAnalysisAxisScalePtrOutputWithContext(ctx context.Context) AnalysisAxisScalePtrOutput {
	return o
}

func (o AnalysisAxisScalePtrOutput) Elem() AnalysisAxisScaleOutput {
	return o.ApplyT(func(v *AnalysisAxisScale) AnalysisAxisScale {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisScale
		return ret
	}).(AnalysisAxisScaleOutput)
}

func (o AnalysisAxisScalePtrOutput) Linear() AnalysisAxisLinearScalePtrOutput {
	return o.ApplyT(func(v *AnalysisAxisScale) *AnalysisAxisLinearScale {
		if v == nil {
			return nil
		}
		return v.Linear
	}).(AnalysisAxisLinearScalePtrOutput)
}

func (o AnalysisAxisScalePtrOutput) Logarithmic() AnalysisAxisLogarithmicScalePtrOutput {
	return o.ApplyT(func(v *AnalysisAxisScale) *AnalysisAxisLogarithmicScale {
		if v == nil {
			return nil
		}
		return v.Logarithmic
	}).(AnalysisAxisLogarithmicScalePtrOutput)
}

type AnalysisAxisTickLabelOptions struct {
	LabelOptions  *AnalysisLabelOptions `pulumi:"labelOptions"`
	RotationAngle *float64              `pulumi:"rotationAngle"`
}

// AnalysisAxisTickLabelOptionsInput is an input type that accepts AnalysisAxisTickLabelOptionsArgs and AnalysisAxisTickLabelOptionsOutput values.
// You can construct a concrete instance of `AnalysisAxisTickLabelOptionsInput` via:
//
//	AnalysisAxisTickLabelOptionsArgs{...}
type AnalysisAxisTickLabelOptionsInput interface {
	pulumi.Input

	ToAnalysisAxisTickLabelOptionsOutput() AnalysisAxisTickLabelOptionsOutput
	ToAnalysisAxisTickLabelOptionsOutputWithContext(context.Context) AnalysisAxisTickLabelOptionsOutput
}

type AnalysisAxisTickLabelOptionsArgs struct {
	LabelOptions  AnalysisLabelOptionsPtrInput `pulumi:"labelOptions"`
	RotationAngle pulumi.Float64PtrInput       `pulumi:"rotationAngle"`
}

func (AnalysisAxisTickLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisTickLabelOptions)(nil)).Elem()
}

func (i AnalysisAxisTickLabelOptionsArgs) ToAnalysisAxisTickLabelOptionsOutput() AnalysisAxisTickLabelOptionsOutput {
	return i.ToAnalysisAxisTickLabelOptionsOutputWithContext(context.Background())
}

func (i AnalysisAxisTickLabelOptionsArgs) ToAnalysisAxisTickLabelOptionsOutputWithContext(ctx context.Context) AnalysisAxisTickLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisTickLabelOptionsOutput)
}

func (i AnalysisAxisTickLabelOptionsArgs) ToAnalysisAxisTickLabelOptionsPtrOutput() AnalysisAxisTickLabelOptionsPtrOutput {
	return i.ToAnalysisAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisAxisTickLabelOptionsArgs) ToAnalysisAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisTickLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisTickLabelOptionsOutput).ToAnalysisAxisTickLabelOptionsPtrOutputWithContext(ctx)
}

// AnalysisAxisTickLabelOptionsPtrInput is an input type that accepts AnalysisAxisTickLabelOptionsArgs, AnalysisAxisTickLabelOptionsPtr and AnalysisAxisTickLabelOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisAxisTickLabelOptionsPtrInput` via:
//
//	        AnalysisAxisTickLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisAxisTickLabelOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisAxisTickLabelOptionsPtrOutput() AnalysisAxisTickLabelOptionsPtrOutput
	ToAnalysisAxisTickLabelOptionsPtrOutputWithContext(context.Context) AnalysisAxisTickLabelOptionsPtrOutput
}

type analysisAxisTickLabelOptionsPtrType AnalysisAxisTickLabelOptionsArgs

func AnalysisAxisTickLabelOptionsPtr(v *AnalysisAxisTickLabelOptionsArgs) AnalysisAxisTickLabelOptionsPtrInput {
	return (*analysisAxisTickLabelOptionsPtrType)(v)
}

func (*analysisAxisTickLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisTickLabelOptions)(nil)).Elem()
}

func (i *analysisAxisTickLabelOptionsPtrType) ToAnalysisAxisTickLabelOptionsPtrOutput() AnalysisAxisTickLabelOptionsPtrOutput {
	return i.ToAnalysisAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisAxisTickLabelOptionsPtrType) ToAnalysisAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisTickLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisAxisTickLabelOptionsPtrOutput)
}

type AnalysisAxisTickLabelOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisAxisTickLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisTickLabelOptions)(nil)).Elem()
}

func (o AnalysisAxisTickLabelOptionsOutput) ToAnalysisAxisTickLabelOptionsOutput() AnalysisAxisTickLabelOptionsOutput {
	return o
}

func (o AnalysisAxisTickLabelOptionsOutput) ToAnalysisAxisTickLabelOptionsOutputWithContext(ctx context.Context) AnalysisAxisTickLabelOptionsOutput {
	return o
}

func (o AnalysisAxisTickLabelOptionsOutput) ToAnalysisAxisTickLabelOptionsPtrOutput() AnalysisAxisTickLabelOptionsPtrOutput {
	return o.ToAnalysisAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisAxisTickLabelOptionsOutput) ToAnalysisAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisTickLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisTickLabelOptions) *AnalysisAxisTickLabelOptions {
		return &v
	}).(AnalysisAxisTickLabelOptionsPtrOutput)
}

func (o AnalysisAxisTickLabelOptionsOutput) LabelOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisAxisTickLabelOptions) *AnalysisLabelOptions { return v.LabelOptions }).(AnalysisLabelOptionsPtrOutput)
}

func (o AnalysisAxisTickLabelOptionsOutput) RotationAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisAxisTickLabelOptions) *float64 { return v.RotationAngle }).(pulumi.Float64PtrOutput)
}

type AnalysisAxisTickLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisTickLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisTickLabelOptions)(nil)).Elem()
}

func (o AnalysisAxisTickLabelOptionsPtrOutput) ToAnalysisAxisTickLabelOptionsPtrOutput() AnalysisAxisTickLabelOptionsPtrOutput {
	return o
}

func (o AnalysisAxisTickLabelOptionsPtrOutput) ToAnalysisAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisAxisTickLabelOptionsPtrOutput {
	return o
}

func (o AnalysisAxisTickLabelOptionsPtrOutput) Elem() AnalysisAxisTickLabelOptionsOutput {
	return o.ApplyT(func(v *AnalysisAxisTickLabelOptions) AnalysisAxisTickLabelOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisTickLabelOptions
		return ret
	}).(AnalysisAxisTickLabelOptionsOutput)
}

func (o AnalysisAxisTickLabelOptionsPtrOutput) LabelOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisAxisTickLabelOptions) *AnalysisLabelOptions {
		if v == nil {
			return nil
		}
		return v.LabelOptions
	}).(AnalysisLabelOptionsPtrOutput)
}

func (o AnalysisAxisTickLabelOptionsPtrOutput) RotationAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisAxisTickLabelOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.RotationAngle
	}).(pulumi.Float64PtrOutput)
}

type AnalysisBarChartAggregatedFieldWells struct {
	Category       []AnalysisDimensionField `pulumi:"category"`
	Colors         []AnalysisDimensionField `pulumi:"colors"`
	SmallMultiples []AnalysisDimensionField `pulumi:"smallMultiples"`
	Values         []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisBarChartAggregatedFieldWellsInput is an input type that accepts AnalysisBarChartAggregatedFieldWellsArgs and AnalysisBarChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisBarChartAggregatedFieldWellsInput` via:
//
//	AnalysisBarChartAggregatedFieldWellsArgs{...}
type AnalysisBarChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisBarChartAggregatedFieldWellsOutput() AnalysisBarChartAggregatedFieldWellsOutput
	ToAnalysisBarChartAggregatedFieldWellsOutputWithContext(context.Context) AnalysisBarChartAggregatedFieldWellsOutput
}

type AnalysisBarChartAggregatedFieldWellsArgs struct {
	Category       AnalysisDimensionFieldArrayInput `pulumi:"category"`
	Colors         AnalysisDimensionFieldArrayInput `pulumi:"colors"`
	SmallMultiples AnalysisDimensionFieldArrayInput `pulumi:"smallMultiples"`
	Values         AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisBarChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisBarChartAggregatedFieldWellsArgs) ToAnalysisBarChartAggregatedFieldWellsOutput() AnalysisBarChartAggregatedFieldWellsOutput {
	return i.ToAnalysisBarChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisBarChartAggregatedFieldWellsArgs) ToAnalysisBarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisBarChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartAggregatedFieldWellsOutput)
}

func (i AnalysisBarChartAggregatedFieldWellsArgs) ToAnalysisBarChartAggregatedFieldWellsPtrOutput() AnalysisBarChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisBarChartAggregatedFieldWellsArgs) ToAnalysisBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartAggregatedFieldWellsOutput).ToAnalysisBarChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisBarChartAggregatedFieldWellsPtrInput is an input type that accepts AnalysisBarChartAggregatedFieldWellsArgs, AnalysisBarChartAggregatedFieldWellsPtr and AnalysisBarChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisBarChartAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisBarChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisBarChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisBarChartAggregatedFieldWellsPtrOutput() AnalysisBarChartAggregatedFieldWellsPtrOutput
	ToAnalysisBarChartAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisBarChartAggregatedFieldWellsPtrOutput
}

type analysisBarChartAggregatedFieldWellsPtrType AnalysisBarChartAggregatedFieldWellsArgs

func AnalysisBarChartAggregatedFieldWellsPtr(v *AnalysisBarChartAggregatedFieldWellsArgs) AnalysisBarChartAggregatedFieldWellsPtrInput {
	return (*analysisBarChartAggregatedFieldWellsPtrType)(v)
}

func (*analysisBarChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisBarChartAggregatedFieldWellsPtrType) ToAnalysisBarChartAggregatedFieldWellsPtrOutput() AnalysisBarChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisBarChartAggregatedFieldWellsPtrType) ToAnalysisBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartAggregatedFieldWellsPtrOutput)
}

type AnalysisBarChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisBarChartAggregatedFieldWellsOutput) ToAnalysisBarChartAggregatedFieldWellsOutput() AnalysisBarChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisBarChartAggregatedFieldWellsOutput) ToAnalysisBarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisBarChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisBarChartAggregatedFieldWellsOutput) ToAnalysisBarChartAggregatedFieldWellsPtrOutput() AnalysisBarChartAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisBarChartAggregatedFieldWellsOutput) ToAnalysisBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBarChartAggregatedFieldWells) *AnalysisBarChartAggregatedFieldWells {
		return &v
	}).(AnalysisBarChartAggregatedFieldWellsPtrOutput)
}

func (o AnalysisBarChartAggregatedFieldWellsOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartAggregatedFieldWells) []AnalysisDimensionField { return v.Category }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisBarChartAggregatedFieldWellsOutput) Colors() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartAggregatedFieldWells) []AnalysisDimensionField { return v.Colors }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisBarChartAggregatedFieldWellsOutput) SmallMultiples() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartAggregatedFieldWells) []AnalysisDimensionField { return v.SmallMultiples }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisBarChartAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisBarChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisBarChartAggregatedFieldWellsPtrOutput) ToAnalysisBarChartAggregatedFieldWellsPtrOutput() AnalysisBarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisBarChartAggregatedFieldWellsPtrOutput) ToAnalysisBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisBarChartAggregatedFieldWellsPtrOutput) Elem() AnalysisBarChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisBarChartAggregatedFieldWells) AnalysisBarChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisBarChartAggregatedFieldWells
		return ret
	}).(AnalysisBarChartAggregatedFieldWellsOutput)
}

func (o AnalysisBarChartAggregatedFieldWellsPtrOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisBarChartAggregatedFieldWellsPtrOutput) Colors() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisBarChartAggregatedFieldWellsPtrOutput) SmallMultiples() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.SmallMultiples
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisBarChartAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisBarChartConfiguration struct {
	BarsArrangement              *AnalysisBarsArrangement              `pulumi:"barsArrangement"`
	CategoryAxis                 *AnalysisAxisDisplayOptions           `pulumi:"categoryAxis"`
	CategoryLabelOptions         *AnalysisChartAxisLabelOptions        `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            *AnalysisChartAxisLabelOptions        `pulumi:"colorLabelOptions"`
	ContributionAnalysisDefaults []AnalysisContributionAnalysisDefault `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   *AnalysisDataLabelOptions             `pulumi:"dataLabels"`
	FieldWells                   *AnalysisBarChartFieldWells           `pulumi:"fieldWells"`
	Legend                       *AnalysisLegendOptions                `pulumi:"legend"`
	Orientation                  *AnalysisBarChartOrientation          `pulumi:"orientation"`
	ReferenceLines               []AnalysisReferenceLine               `pulumi:"referenceLines"`
	SmallMultiplesOptions        *AnalysisSmallMultiplesOptions        `pulumi:"smallMultiplesOptions"`
	SortConfiguration            *AnalysisBarChartSortConfiguration    `pulumi:"sortConfiguration"`
	Tooltip                      *AnalysisTooltipOptions               `pulumi:"tooltip"`
	ValueAxis                    *AnalysisAxisDisplayOptions           `pulumi:"valueAxis"`
	ValueLabelOptions            *AnalysisChartAxisLabelOptions        `pulumi:"valueLabelOptions"`
	VisualPalette                *AnalysisVisualPalette                `pulumi:"visualPalette"`
}

// AnalysisBarChartConfigurationInput is an input type that accepts AnalysisBarChartConfigurationArgs and AnalysisBarChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisBarChartConfigurationInput` via:
//
//	AnalysisBarChartConfigurationArgs{...}
type AnalysisBarChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisBarChartConfigurationOutput() AnalysisBarChartConfigurationOutput
	ToAnalysisBarChartConfigurationOutputWithContext(context.Context) AnalysisBarChartConfigurationOutput
}

type AnalysisBarChartConfigurationArgs struct {
	BarsArrangement              AnalysisBarsArrangementPtrInput               `pulumi:"barsArrangement"`
	CategoryAxis                 AnalysisAxisDisplayOptionsPtrInput            `pulumi:"categoryAxis"`
	CategoryLabelOptions         AnalysisChartAxisLabelOptionsPtrInput         `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            AnalysisChartAxisLabelOptionsPtrInput         `pulumi:"colorLabelOptions"`
	ContributionAnalysisDefaults AnalysisContributionAnalysisDefaultArrayInput `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   AnalysisDataLabelOptionsPtrInput              `pulumi:"dataLabels"`
	FieldWells                   AnalysisBarChartFieldWellsPtrInput            `pulumi:"fieldWells"`
	Legend                       AnalysisLegendOptionsPtrInput                 `pulumi:"legend"`
	Orientation                  AnalysisBarChartOrientationPtrInput           `pulumi:"orientation"`
	ReferenceLines               AnalysisReferenceLineArrayInput               `pulumi:"referenceLines"`
	SmallMultiplesOptions        AnalysisSmallMultiplesOptionsPtrInput         `pulumi:"smallMultiplesOptions"`
	SortConfiguration            AnalysisBarChartSortConfigurationPtrInput     `pulumi:"sortConfiguration"`
	Tooltip                      AnalysisTooltipOptionsPtrInput                `pulumi:"tooltip"`
	ValueAxis                    AnalysisAxisDisplayOptionsPtrInput            `pulumi:"valueAxis"`
	ValueLabelOptions            AnalysisChartAxisLabelOptionsPtrInput         `pulumi:"valueLabelOptions"`
	VisualPalette                AnalysisVisualPalettePtrInput                 `pulumi:"visualPalette"`
}

func (AnalysisBarChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartConfiguration)(nil)).Elem()
}

func (i AnalysisBarChartConfigurationArgs) ToAnalysisBarChartConfigurationOutput() AnalysisBarChartConfigurationOutput {
	return i.ToAnalysisBarChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisBarChartConfigurationArgs) ToAnalysisBarChartConfigurationOutputWithContext(ctx context.Context) AnalysisBarChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartConfigurationOutput)
}

func (i AnalysisBarChartConfigurationArgs) ToAnalysisBarChartConfigurationPtrOutput() AnalysisBarChartConfigurationPtrOutput {
	return i.ToAnalysisBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisBarChartConfigurationArgs) ToAnalysisBarChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartConfigurationOutput).ToAnalysisBarChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisBarChartConfigurationPtrInput is an input type that accepts AnalysisBarChartConfigurationArgs, AnalysisBarChartConfigurationPtr and AnalysisBarChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisBarChartConfigurationPtrInput` via:
//
//	        AnalysisBarChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisBarChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisBarChartConfigurationPtrOutput() AnalysisBarChartConfigurationPtrOutput
	ToAnalysisBarChartConfigurationPtrOutputWithContext(context.Context) AnalysisBarChartConfigurationPtrOutput
}

type analysisBarChartConfigurationPtrType AnalysisBarChartConfigurationArgs

func AnalysisBarChartConfigurationPtr(v *AnalysisBarChartConfigurationArgs) AnalysisBarChartConfigurationPtrInput {
	return (*analysisBarChartConfigurationPtrType)(v)
}

func (*analysisBarChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartConfiguration)(nil)).Elem()
}

func (i *analysisBarChartConfigurationPtrType) ToAnalysisBarChartConfigurationPtrOutput() AnalysisBarChartConfigurationPtrOutput {
	return i.ToAnalysisBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisBarChartConfigurationPtrType) ToAnalysisBarChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartConfigurationPtrOutput)
}

type AnalysisBarChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartConfiguration)(nil)).Elem()
}

func (o AnalysisBarChartConfigurationOutput) ToAnalysisBarChartConfigurationOutput() AnalysisBarChartConfigurationOutput {
	return o
}

func (o AnalysisBarChartConfigurationOutput) ToAnalysisBarChartConfigurationOutputWithContext(ctx context.Context) AnalysisBarChartConfigurationOutput {
	return o
}

func (o AnalysisBarChartConfigurationOutput) ToAnalysisBarChartConfigurationPtrOutput() AnalysisBarChartConfigurationPtrOutput {
	return o.ToAnalysisBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisBarChartConfigurationOutput) ToAnalysisBarChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBarChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBarChartConfiguration) *AnalysisBarChartConfiguration {
		return &v
	}).(AnalysisBarChartConfigurationPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) BarsArrangement() AnalysisBarsArrangementPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisBarsArrangement { return v.BarsArrangement }).(AnalysisBarsArrangementPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) CategoryAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisAxisDisplayOptions { return v.CategoryAxis }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisChartAxisLabelOptions { return v.CategoryLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) ColorLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisChartAxisLabelOptions { return v.ColorLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) ContributionAnalysisDefaults() AnalysisContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) []AnalysisContributionAnalysisDefault {
		return v.ContributionAnalysisDefaults
	}).(AnalysisContributionAnalysisDefaultArrayOutput)
}

func (o AnalysisBarChartConfigurationOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisDataLabelOptions { return v.DataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) FieldWells() AnalysisBarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisBarChartFieldWells { return v.FieldWells }).(AnalysisBarChartFieldWellsPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) Orientation() AnalysisBarChartOrientationPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisBarChartOrientation { return v.Orientation }).(AnalysisBarChartOrientationPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) ReferenceLines() AnalysisReferenceLineArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) []AnalysisReferenceLine { return v.ReferenceLines }).(AnalysisReferenceLineArrayOutput)
}

func (o AnalysisBarChartConfigurationOutput) SmallMultiplesOptions() AnalysisSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisSmallMultiplesOptions { return v.SmallMultiplesOptions }).(AnalysisSmallMultiplesOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) SortConfiguration() AnalysisBarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisBarChartSortConfiguration { return v.SortConfiguration }).(AnalysisBarChartSortConfigurationPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) ValueAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisAxisDisplayOptions { return v.ValueAxis }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) ValueLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisChartAxisLabelOptions { return v.ValueLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisBarChartConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

type AnalysisBarChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartConfiguration)(nil)).Elem()
}

func (o AnalysisBarChartConfigurationPtrOutput) ToAnalysisBarChartConfigurationPtrOutput() AnalysisBarChartConfigurationPtrOutput {
	return o
}

func (o AnalysisBarChartConfigurationPtrOutput) ToAnalysisBarChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBarChartConfigurationPtrOutput {
	return o
}

func (o AnalysisBarChartConfigurationPtrOutput) Elem() AnalysisBarChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) AnalysisBarChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisBarChartConfiguration
		return ret
	}).(AnalysisBarChartConfigurationOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) BarsArrangement() AnalysisBarsArrangementPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisBarsArrangement {
		if v == nil {
			return nil
		}
		return v.BarsArrangement
	}).(AnalysisBarsArrangementPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) CategoryAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) ColorLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) ContributionAnalysisDefaults() AnalysisContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) []AnalysisContributionAnalysisDefault {
		if v == nil {
			return nil
		}
		return v.ContributionAnalysisDefaults
	}).(AnalysisContributionAnalysisDefaultArrayOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) FieldWells() AnalysisBarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisBarChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisBarChartFieldWellsPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) Orientation() AnalysisBarChartOrientationPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisBarChartOrientation {
		if v == nil {
			return nil
		}
		return v.Orientation
	}).(AnalysisBarChartOrientationPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) ReferenceLines() AnalysisReferenceLineArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) []AnalysisReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(AnalysisReferenceLineArrayOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) SmallMultiplesOptions() AnalysisSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisSmallMultiplesOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesOptions
	}).(AnalysisSmallMultiplesOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) SortConfiguration() AnalysisBarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisBarChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisBarChartSortConfigurationPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) ValueAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.ValueAxis
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) ValueLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ValueLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisBarChartConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

type AnalysisBarChartFieldWells struct {
	BarChartAggregatedFieldWells *AnalysisBarChartAggregatedFieldWells `pulumi:"barChartAggregatedFieldWells"`
}

// AnalysisBarChartFieldWellsInput is an input type that accepts AnalysisBarChartFieldWellsArgs and AnalysisBarChartFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisBarChartFieldWellsInput` via:
//
//	AnalysisBarChartFieldWellsArgs{...}
type AnalysisBarChartFieldWellsInput interface {
	pulumi.Input

	ToAnalysisBarChartFieldWellsOutput() AnalysisBarChartFieldWellsOutput
	ToAnalysisBarChartFieldWellsOutputWithContext(context.Context) AnalysisBarChartFieldWellsOutput
}

type AnalysisBarChartFieldWellsArgs struct {
	BarChartAggregatedFieldWells AnalysisBarChartAggregatedFieldWellsPtrInput `pulumi:"barChartAggregatedFieldWells"`
}

func (AnalysisBarChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartFieldWells)(nil)).Elem()
}

func (i AnalysisBarChartFieldWellsArgs) ToAnalysisBarChartFieldWellsOutput() AnalysisBarChartFieldWellsOutput {
	return i.ToAnalysisBarChartFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisBarChartFieldWellsArgs) ToAnalysisBarChartFieldWellsOutputWithContext(ctx context.Context) AnalysisBarChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartFieldWellsOutput)
}

func (i AnalysisBarChartFieldWellsArgs) ToAnalysisBarChartFieldWellsPtrOutput() AnalysisBarChartFieldWellsPtrOutput {
	return i.ToAnalysisBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisBarChartFieldWellsArgs) ToAnalysisBarChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartFieldWellsOutput).ToAnalysisBarChartFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisBarChartFieldWellsPtrInput is an input type that accepts AnalysisBarChartFieldWellsArgs, AnalysisBarChartFieldWellsPtr and AnalysisBarChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisBarChartFieldWellsPtrInput` via:
//
//	        AnalysisBarChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisBarChartFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisBarChartFieldWellsPtrOutput() AnalysisBarChartFieldWellsPtrOutput
	ToAnalysisBarChartFieldWellsPtrOutputWithContext(context.Context) AnalysisBarChartFieldWellsPtrOutput
}

type analysisBarChartFieldWellsPtrType AnalysisBarChartFieldWellsArgs

func AnalysisBarChartFieldWellsPtr(v *AnalysisBarChartFieldWellsArgs) AnalysisBarChartFieldWellsPtrInput {
	return (*analysisBarChartFieldWellsPtrType)(v)
}

func (*analysisBarChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartFieldWells)(nil)).Elem()
}

func (i *analysisBarChartFieldWellsPtrType) ToAnalysisBarChartFieldWellsPtrOutput() AnalysisBarChartFieldWellsPtrOutput {
	return i.ToAnalysisBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisBarChartFieldWellsPtrType) ToAnalysisBarChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartFieldWellsPtrOutput)
}

type AnalysisBarChartFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartFieldWells)(nil)).Elem()
}

func (o AnalysisBarChartFieldWellsOutput) ToAnalysisBarChartFieldWellsOutput() AnalysisBarChartFieldWellsOutput {
	return o
}

func (o AnalysisBarChartFieldWellsOutput) ToAnalysisBarChartFieldWellsOutputWithContext(ctx context.Context) AnalysisBarChartFieldWellsOutput {
	return o
}

func (o AnalysisBarChartFieldWellsOutput) ToAnalysisBarChartFieldWellsPtrOutput() AnalysisBarChartFieldWellsPtrOutput {
	return o.ToAnalysisBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisBarChartFieldWellsOutput) ToAnalysisBarChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBarChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBarChartFieldWells) *AnalysisBarChartFieldWells {
		return &v
	}).(AnalysisBarChartFieldWellsPtrOutput)
}

func (o AnalysisBarChartFieldWellsOutput) BarChartAggregatedFieldWells() AnalysisBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartFieldWells) *AnalysisBarChartAggregatedFieldWells {
		return v.BarChartAggregatedFieldWells
	}).(AnalysisBarChartAggregatedFieldWellsPtrOutput)
}

type AnalysisBarChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartFieldWells)(nil)).Elem()
}

func (o AnalysisBarChartFieldWellsPtrOutput) ToAnalysisBarChartFieldWellsPtrOutput() AnalysisBarChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisBarChartFieldWellsPtrOutput) ToAnalysisBarChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBarChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisBarChartFieldWellsPtrOutput) Elem() AnalysisBarChartFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisBarChartFieldWells) AnalysisBarChartFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisBarChartFieldWells
		return ret
	}).(AnalysisBarChartFieldWellsOutput)
}

func (o AnalysisBarChartFieldWellsPtrOutput) BarChartAggregatedFieldWells() AnalysisBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartFieldWells) *AnalysisBarChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.BarChartAggregatedFieldWells
	}).(AnalysisBarChartAggregatedFieldWellsPtrOutput)
}

type AnalysisBarChartSortConfiguration struct {
	CategoryItemsLimit               *AnalysisItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort                     []AnalysisFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimit                  *AnalysisItemsLimitConfiguration `pulumi:"colorItemsLimit"`
	ColorSort                        []AnalysisFieldSortOptions       `pulumi:"colorSort"`
	SmallMultiplesLimitConfiguration *AnalysisItemsLimitConfiguration `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               []AnalysisFieldSortOptions       `pulumi:"smallMultiplesSort"`
}

// AnalysisBarChartSortConfigurationInput is an input type that accepts AnalysisBarChartSortConfigurationArgs and AnalysisBarChartSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisBarChartSortConfigurationInput` via:
//
//	AnalysisBarChartSortConfigurationArgs{...}
type AnalysisBarChartSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisBarChartSortConfigurationOutput() AnalysisBarChartSortConfigurationOutput
	ToAnalysisBarChartSortConfigurationOutputWithContext(context.Context) AnalysisBarChartSortConfigurationOutput
}

type AnalysisBarChartSortConfigurationArgs struct {
	CategoryItemsLimit               AnalysisItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort                     AnalysisFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimit                  AnalysisItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimit"`
	ColorSort                        AnalysisFieldSortOptionsArrayInput      `pulumi:"colorSort"`
	SmallMultiplesLimitConfiguration AnalysisItemsLimitConfigurationPtrInput `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               AnalysisFieldSortOptionsArrayInput      `pulumi:"smallMultiplesSort"`
}

func (AnalysisBarChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartSortConfiguration)(nil)).Elem()
}

func (i AnalysisBarChartSortConfigurationArgs) ToAnalysisBarChartSortConfigurationOutput() AnalysisBarChartSortConfigurationOutput {
	return i.ToAnalysisBarChartSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisBarChartSortConfigurationArgs) ToAnalysisBarChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisBarChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartSortConfigurationOutput)
}

func (i AnalysisBarChartSortConfigurationArgs) ToAnalysisBarChartSortConfigurationPtrOutput() AnalysisBarChartSortConfigurationPtrOutput {
	return i.ToAnalysisBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisBarChartSortConfigurationArgs) ToAnalysisBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartSortConfigurationOutput).ToAnalysisBarChartSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisBarChartSortConfigurationPtrInput is an input type that accepts AnalysisBarChartSortConfigurationArgs, AnalysisBarChartSortConfigurationPtr and AnalysisBarChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisBarChartSortConfigurationPtrInput` via:
//
//	        AnalysisBarChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisBarChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisBarChartSortConfigurationPtrOutput() AnalysisBarChartSortConfigurationPtrOutput
	ToAnalysisBarChartSortConfigurationPtrOutputWithContext(context.Context) AnalysisBarChartSortConfigurationPtrOutput
}

type analysisBarChartSortConfigurationPtrType AnalysisBarChartSortConfigurationArgs

func AnalysisBarChartSortConfigurationPtr(v *AnalysisBarChartSortConfigurationArgs) AnalysisBarChartSortConfigurationPtrInput {
	return (*analysisBarChartSortConfigurationPtrType)(v)
}

func (*analysisBarChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartSortConfiguration)(nil)).Elem()
}

func (i *analysisBarChartSortConfigurationPtrType) ToAnalysisBarChartSortConfigurationPtrOutput() AnalysisBarChartSortConfigurationPtrOutput {
	return i.ToAnalysisBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisBarChartSortConfigurationPtrType) ToAnalysisBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartSortConfigurationPtrOutput)
}

type AnalysisBarChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisBarChartSortConfigurationOutput) ToAnalysisBarChartSortConfigurationOutput() AnalysisBarChartSortConfigurationOutput {
	return o
}

func (o AnalysisBarChartSortConfigurationOutput) ToAnalysisBarChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisBarChartSortConfigurationOutput {
	return o
}

func (o AnalysisBarChartSortConfigurationOutput) ToAnalysisBarChartSortConfigurationPtrOutput() AnalysisBarChartSortConfigurationPtrOutput {
	return o.ToAnalysisBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisBarChartSortConfigurationOutput) ToAnalysisBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBarChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBarChartSortConfiguration) *AnalysisBarChartSortConfiguration {
		return &v
	}).(AnalysisBarChartSortConfigurationPtrOutput)
}

func (o AnalysisBarChartSortConfigurationOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisBarChartSortConfigurationOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartSortConfiguration) []AnalysisFieldSortOptions { return v.CategorySort }).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisBarChartSortConfigurationOutput) ColorItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartSortConfiguration) *AnalysisItemsLimitConfiguration { return v.ColorItemsLimit }).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisBarChartSortConfigurationOutput) ColorSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartSortConfiguration) []AnalysisFieldSortOptions { return v.ColorSort }).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisBarChartSortConfigurationOutput) SmallMultiplesLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.SmallMultiplesLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisBarChartSortConfigurationOutput) SmallMultiplesSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartSortConfiguration) []AnalysisFieldSortOptions { return v.SmallMultiplesSort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisBarChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisBarChartSortConfigurationPtrOutput) ToAnalysisBarChartSortConfigurationPtrOutput() AnalysisBarChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisBarChartSortConfigurationPtrOutput) ToAnalysisBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBarChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisBarChartSortConfigurationPtrOutput) Elem() AnalysisBarChartSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisBarChartSortConfiguration) AnalysisBarChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisBarChartSortConfiguration
		return ret
	}).(AnalysisBarChartSortConfigurationOutput)
}

func (o AnalysisBarChartSortConfigurationPtrOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisBarChartSortConfigurationPtrOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisBarChartSortConfigurationPtrOutput) ColorItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisBarChartSortConfigurationPtrOutput) ColorSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.ColorSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisBarChartSortConfigurationPtrOutput) SmallMultiplesLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisBarChartSortConfigurationPtrOutput) SmallMultiplesSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisBarChartVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisBarChartConfiguration      `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisBarChartVisualInput is an input type that accepts AnalysisBarChartVisualArgs and AnalysisBarChartVisualOutput values.
// You can construct a concrete instance of `AnalysisBarChartVisualInput` via:
//
//	AnalysisBarChartVisualArgs{...}
type AnalysisBarChartVisualInput interface {
	pulumi.Input

	ToAnalysisBarChartVisualOutput() AnalysisBarChartVisualOutput
	ToAnalysisBarChartVisualOutputWithContext(context.Context) AnalysisBarChartVisualOutput
}

type AnalysisBarChartVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisBarChartConfigurationPtrInput      `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisBarChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartVisual)(nil)).Elem()
}

func (i AnalysisBarChartVisualArgs) ToAnalysisBarChartVisualOutput() AnalysisBarChartVisualOutput {
	return i.ToAnalysisBarChartVisualOutputWithContext(context.Background())
}

func (i AnalysisBarChartVisualArgs) ToAnalysisBarChartVisualOutputWithContext(ctx context.Context) AnalysisBarChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartVisualOutput)
}

func (i AnalysisBarChartVisualArgs) ToAnalysisBarChartVisualPtrOutput() AnalysisBarChartVisualPtrOutput {
	return i.ToAnalysisBarChartVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisBarChartVisualArgs) ToAnalysisBarChartVisualPtrOutputWithContext(ctx context.Context) AnalysisBarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartVisualOutput).ToAnalysisBarChartVisualPtrOutputWithContext(ctx)
}

// AnalysisBarChartVisualPtrInput is an input type that accepts AnalysisBarChartVisualArgs, AnalysisBarChartVisualPtr and AnalysisBarChartVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisBarChartVisualPtrInput` via:
//
//	        AnalysisBarChartVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisBarChartVisualPtrInput interface {
	pulumi.Input

	ToAnalysisBarChartVisualPtrOutput() AnalysisBarChartVisualPtrOutput
	ToAnalysisBarChartVisualPtrOutputWithContext(context.Context) AnalysisBarChartVisualPtrOutput
}

type analysisBarChartVisualPtrType AnalysisBarChartVisualArgs

func AnalysisBarChartVisualPtr(v *AnalysisBarChartVisualArgs) AnalysisBarChartVisualPtrInput {
	return (*analysisBarChartVisualPtrType)(v)
}

func (*analysisBarChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartVisual)(nil)).Elem()
}

func (i *analysisBarChartVisualPtrType) ToAnalysisBarChartVisualPtrOutput() AnalysisBarChartVisualPtrOutput {
	return i.ToAnalysisBarChartVisualPtrOutputWithContext(context.Background())
}

func (i *analysisBarChartVisualPtrType) ToAnalysisBarChartVisualPtrOutputWithContext(ctx context.Context) AnalysisBarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBarChartVisualPtrOutput)
}

type AnalysisBarChartVisualOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartVisual)(nil)).Elem()
}

func (o AnalysisBarChartVisualOutput) ToAnalysisBarChartVisualOutput() AnalysisBarChartVisualOutput {
	return o
}

func (o AnalysisBarChartVisualOutput) ToAnalysisBarChartVisualOutputWithContext(ctx context.Context) AnalysisBarChartVisualOutput {
	return o
}

func (o AnalysisBarChartVisualOutput) ToAnalysisBarChartVisualPtrOutput() AnalysisBarChartVisualPtrOutput {
	return o.ToAnalysisBarChartVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisBarChartVisualOutput) ToAnalysisBarChartVisualPtrOutputWithContext(ctx context.Context) AnalysisBarChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBarChartVisual) *AnalysisBarChartVisual {
		return &v
	}).(AnalysisBarChartVisualPtrOutput)
}

func (o AnalysisBarChartVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisBarChartVisualOutput) ChartConfiguration() AnalysisBarChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartVisual) *AnalysisBarChartConfiguration { return v.ChartConfiguration }).(AnalysisBarChartConfigurationPtrOutput)
}

func (o AnalysisBarChartVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisBarChartVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisBarChartVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisBarChartVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBarChartVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisBarChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisBarChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisBarChartVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartVisual)(nil)).Elem()
}

func (o AnalysisBarChartVisualPtrOutput) ToAnalysisBarChartVisualPtrOutput() AnalysisBarChartVisualPtrOutput {
	return o
}

func (o AnalysisBarChartVisualPtrOutput) ToAnalysisBarChartVisualPtrOutputWithContext(ctx context.Context) AnalysisBarChartVisualPtrOutput {
	return o
}

func (o AnalysisBarChartVisualPtrOutput) Elem() AnalysisBarChartVisualOutput {
	return o.ApplyT(func(v *AnalysisBarChartVisual) AnalysisBarChartVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisBarChartVisual
		return ret
	}).(AnalysisBarChartVisualOutput)
}

func (o AnalysisBarChartVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisBarChartVisualPtrOutput) ChartConfiguration() AnalysisBarChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartVisual) *AnalysisBarChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisBarChartConfigurationPtrOutput)
}

func (o AnalysisBarChartVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisBarChartVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisBarChartVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisBarChartVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisBarChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisBarChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisBinCountOptions struct {
	Value *float64 `pulumi:"value"`
}

// AnalysisBinCountOptionsInput is an input type that accepts AnalysisBinCountOptionsArgs and AnalysisBinCountOptionsOutput values.
// You can construct a concrete instance of `AnalysisBinCountOptionsInput` via:
//
//	AnalysisBinCountOptionsArgs{...}
type AnalysisBinCountOptionsInput interface {
	pulumi.Input

	ToAnalysisBinCountOptionsOutput() AnalysisBinCountOptionsOutput
	ToAnalysisBinCountOptionsOutputWithContext(context.Context) AnalysisBinCountOptionsOutput
}

type AnalysisBinCountOptionsArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (AnalysisBinCountOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBinCountOptions)(nil)).Elem()
}

func (i AnalysisBinCountOptionsArgs) ToAnalysisBinCountOptionsOutput() AnalysisBinCountOptionsOutput {
	return i.ToAnalysisBinCountOptionsOutputWithContext(context.Background())
}

func (i AnalysisBinCountOptionsArgs) ToAnalysisBinCountOptionsOutputWithContext(ctx context.Context) AnalysisBinCountOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBinCountOptionsOutput)
}

func (i AnalysisBinCountOptionsArgs) ToAnalysisBinCountOptionsPtrOutput() AnalysisBinCountOptionsPtrOutput {
	return i.ToAnalysisBinCountOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisBinCountOptionsArgs) ToAnalysisBinCountOptionsPtrOutputWithContext(ctx context.Context) AnalysisBinCountOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBinCountOptionsOutput).ToAnalysisBinCountOptionsPtrOutputWithContext(ctx)
}

// AnalysisBinCountOptionsPtrInput is an input type that accepts AnalysisBinCountOptionsArgs, AnalysisBinCountOptionsPtr and AnalysisBinCountOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisBinCountOptionsPtrInput` via:
//
//	        AnalysisBinCountOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisBinCountOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisBinCountOptionsPtrOutput() AnalysisBinCountOptionsPtrOutput
	ToAnalysisBinCountOptionsPtrOutputWithContext(context.Context) AnalysisBinCountOptionsPtrOutput
}

type analysisBinCountOptionsPtrType AnalysisBinCountOptionsArgs

func AnalysisBinCountOptionsPtr(v *AnalysisBinCountOptionsArgs) AnalysisBinCountOptionsPtrInput {
	return (*analysisBinCountOptionsPtrType)(v)
}

func (*analysisBinCountOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBinCountOptions)(nil)).Elem()
}

func (i *analysisBinCountOptionsPtrType) ToAnalysisBinCountOptionsPtrOutput() AnalysisBinCountOptionsPtrOutput {
	return i.ToAnalysisBinCountOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisBinCountOptionsPtrType) ToAnalysisBinCountOptionsPtrOutputWithContext(ctx context.Context) AnalysisBinCountOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBinCountOptionsPtrOutput)
}

type AnalysisBinCountOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisBinCountOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBinCountOptions)(nil)).Elem()
}

func (o AnalysisBinCountOptionsOutput) ToAnalysisBinCountOptionsOutput() AnalysisBinCountOptionsOutput {
	return o
}

func (o AnalysisBinCountOptionsOutput) ToAnalysisBinCountOptionsOutputWithContext(ctx context.Context) AnalysisBinCountOptionsOutput {
	return o
}

func (o AnalysisBinCountOptionsOutput) ToAnalysisBinCountOptionsPtrOutput() AnalysisBinCountOptionsPtrOutput {
	return o.ToAnalysisBinCountOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisBinCountOptionsOutput) ToAnalysisBinCountOptionsPtrOutputWithContext(ctx context.Context) AnalysisBinCountOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBinCountOptions) *AnalysisBinCountOptions {
		return &v
	}).(AnalysisBinCountOptionsPtrOutput)
}

func (o AnalysisBinCountOptionsOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisBinCountOptions) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type AnalysisBinCountOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBinCountOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBinCountOptions)(nil)).Elem()
}

func (o AnalysisBinCountOptionsPtrOutput) ToAnalysisBinCountOptionsPtrOutput() AnalysisBinCountOptionsPtrOutput {
	return o
}

func (o AnalysisBinCountOptionsPtrOutput) ToAnalysisBinCountOptionsPtrOutputWithContext(ctx context.Context) AnalysisBinCountOptionsPtrOutput {
	return o
}

func (o AnalysisBinCountOptionsPtrOutput) Elem() AnalysisBinCountOptionsOutput {
	return o.ApplyT(func(v *AnalysisBinCountOptions) AnalysisBinCountOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisBinCountOptions
		return ret
	}).(AnalysisBinCountOptionsOutput)
}

func (o AnalysisBinCountOptionsPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisBinCountOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type AnalysisBinWidthOptions struct {
	BinCountLimit *float64 `pulumi:"binCountLimit"`
	Value         *float64 `pulumi:"value"`
}

// AnalysisBinWidthOptionsInput is an input type that accepts AnalysisBinWidthOptionsArgs and AnalysisBinWidthOptionsOutput values.
// You can construct a concrete instance of `AnalysisBinWidthOptionsInput` via:
//
//	AnalysisBinWidthOptionsArgs{...}
type AnalysisBinWidthOptionsInput interface {
	pulumi.Input

	ToAnalysisBinWidthOptionsOutput() AnalysisBinWidthOptionsOutput
	ToAnalysisBinWidthOptionsOutputWithContext(context.Context) AnalysisBinWidthOptionsOutput
}

type AnalysisBinWidthOptionsArgs struct {
	BinCountLimit pulumi.Float64PtrInput `pulumi:"binCountLimit"`
	Value         pulumi.Float64PtrInput `pulumi:"value"`
}

func (AnalysisBinWidthOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBinWidthOptions)(nil)).Elem()
}

func (i AnalysisBinWidthOptionsArgs) ToAnalysisBinWidthOptionsOutput() AnalysisBinWidthOptionsOutput {
	return i.ToAnalysisBinWidthOptionsOutputWithContext(context.Background())
}

func (i AnalysisBinWidthOptionsArgs) ToAnalysisBinWidthOptionsOutputWithContext(ctx context.Context) AnalysisBinWidthOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBinWidthOptionsOutput)
}

func (i AnalysisBinWidthOptionsArgs) ToAnalysisBinWidthOptionsPtrOutput() AnalysisBinWidthOptionsPtrOutput {
	return i.ToAnalysisBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisBinWidthOptionsArgs) ToAnalysisBinWidthOptionsPtrOutputWithContext(ctx context.Context) AnalysisBinWidthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBinWidthOptionsOutput).ToAnalysisBinWidthOptionsPtrOutputWithContext(ctx)
}

// AnalysisBinWidthOptionsPtrInput is an input type that accepts AnalysisBinWidthOptionsArgs, AnalysisBinWidthOptionsPtr and AnalysisBinWidthOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisBinWidthOptionsPtrInput` via:
//
//	        AnalysisBinWidthOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisBinWidthOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisBinWidthOptionsPtrOutput() AnalysisBinWidthOptionsPtrOutput
	ToAnalysisBinWidthOptionsPtrOutputWithContext(context.Context) AnalysisBinWidthOptionsPtrOutput
}

type analysisBinWidthOptionsPtrType AnalysisBinWidthOptionsArgs

func AnalysisBinWidthOptionsPtr(v *AnalysisBinWidthOptionsArgs) AnalysisBinWidthOptionsPtrInput {
	return (*analysisBinWidthOptionsPtrType)(v)
}

func (*analysisBinWidthOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBinWidthOptions)(nil)).Elem()
}

func (i *analysisBinWidthOptionsPtrType) ToAnalysisBinWidthOptionsPtrOutput() AnalysisBinWidthOptionsPtrOutput {
	return i.ToAnalysisBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisBinWidthOptionsPtrType) ToAnalysisBinWidthOptionsPtrOutputWithContext(ctx context.Context) AnalysisBinWidthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBinWidthOptionsPtrOutput)
}

type AnalysisBinWidthOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisBinWidthOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBinWidthOptions)(nil)).Elem()
}

func (o AnalysisBinWidthOptionsOutput) ToAnalysisBinWidthOptionsOutput() AnalysisBinWidthOptionsOutput {
	return o
}

func (o AnalysisBinWidthOptionsOutput) ToAnalysisBinWidthOptionsOutputWithContext(ctx context.Context) AnalysisBinWidthOptionsOutput {
	return o
}

func (o AnalysisBinWidthOptionsOutput) ToAnalysisBinWidthOptionsPtrOutput() AnalysisBinWidthOptionsPtrOutput {
	return o.ToAnalysisBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisBinWidthOptionsOutput) ToAnalysisBinWidthOptionsPtrOutputWithContext(ctx context.Context) AnalysisBinWidthOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBinWidthOptions) *AnalysisBinWidthOptions {
		return &v
	}).(AnalysisBinWidthOptionsPtrOutput)
}

func (o AnalysisBinWidthOptionsOutput) BinCountLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisBinWidthOptions) *float64 { return v.BinCountLimit }).(pulumi.Float64PtrOutput)
}

func (o AnalysisBinWidthOptionsOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisBinWidthOptions) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type AnalysisBinWidthOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBinWidthOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBinWidthOptions)(nil)).Elem()
}

func (o AnalysisBinWidthOptionsPtrOutput) ToAnalysisBinWidthOptionsPtrOutput() AnalysisBinWidthOptionsPtrOutput {
	return o
}

func (o AnalysisBinWidthOptionsPtrOutput) ToAnalysisBinWidthOptionsPtrOutputWithContext(ctx context.Context) AnalysisBinWidthOptionsPtrOutput {
	return o
}

func (o AnalysisBinWidthOptionsPtrOutput) Elem() AnalysisBinWidthOptionsOutput {
	return o.ApplyT(func(v *AnalysisBinWidthOptions) AnalysisBinWidthOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisBinWidthOptions
		return ret
	}).(AnalysisBinWidthOptionsOutput)
}

func (o AnalysisBinWidthOptionsPtrOutput) BinCountLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisBinWidthOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.BinCountLimit
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisBinWidthOptionsPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisBinWidthOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type AnalysisBodySectionConfiguration struct {
	Content                AnalysisBodySectionContent             `pulumi:"content"`
	PageBreakConfiguration *AnalysisSectionPageBreakConfiguration `pulumi:"pageBreakConfiguration"`
	SectionId              string                                 `pulumi:"sectionId"`
	Style                  *AnalysisSectionStyle                  `pulumi:"style"`
}

// AnalysisBodySectionConfigurationInput is an input type that accepts AnalysisBodySectionConfigurationArgs and AnalysisBodySectionConfigurationOutput values.
// You can construct a concrete instance of `AnalysisBodySectionConfigurationInput` via:
//
//	AnalysisBodySectionConfigurationArgs{...}
type AnalysisBodySectionConfigurationInput interface {
	pulumi.Input

	ToAnalysisBodySectionConfigurationOutput() AnalysisBodySectionConfigurationOutput
	ToAnalysisBodySectionConfigurationOutputWithContext(context.Context) AnalysisBodySectionConfigurationOutput
}

type AnalysisBodySectionConfigurationArgs struct {
	Content                AnalysisBodySectionContentInput               `pulumi:"content"`
	PageBreakConfiguration AnalysisSectionPageBreakConfigurationPtrInput `pulumi:"pageBreakConfiguration"`
	SectionId              pulumi.StringInput                            `pulumi:"sectionId"`
	Style                  AnalysisSectionStylePtrInput                  `pulumi:"style"`
}

func (AnalysisBodySectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBodySectionConfiguration)(nil)).Elem()
}

func (i AnalysisBodySectionConfigurationArgs) ToAnalysisBodySectionConfigurationOutput() AnalysisBodySectionConfigurationOutput {
	return i.ToAnalysisBodySectionConfigurationOutputWithContext(context.Background())
}

func (i AnalysisBodySectionConfigurationArgs) ToAnalysisBodySectionConfigurationOutputWithContext(ctx context.Context) AnalysisBodySectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBodySectionConfigurationOutput)
}

// AnalysisBodySectionConfigurationArrayInput is an input type that accepts AnalysisBodySectionConfigurationArray and AnalysisBodySectionConfigurationArrayOutput values.
// You can construct a concrete instance of `AnalysisBodySectionConfigurationArrayInput` via:
//
//	AnalysisBodySectionConfigurationArray{ AnalysisBodySectionConfigurationArgs{...} }
type AnalysisBodySectionConfigurationArrayInput interface {
	pulumi.Input

	ToAnalysisBodySectionConfigurationArrayOutput() AnalysisBodySectionConfigurationArrayOutput
	ToAnalysisBodySectionConfigurationArrayOutputWithContext(context.Context) AnalysisBodySectionConfigurationArrayOutput
}

type AnalysisBodySectionConfigurationArray []AnalysisBodySectionConfigurationInput

func (AnalysisBodySectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisBodySectionConfiguration)(nil)).Elem()
}

func (i AnalysisBodySectionConfigurationArray) ToAnalysisBodySectionConfigurationArrayOutput() AnalysisBodySectionConfigurationArrayOutput {
	return i.ToAnalysisBodySectionConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalysisBodySectionConfigurationArray) ToAnalysisBodySectionConfigurationArrayOutputWithContext(ctx context.Context) AnalysisBodySectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBodySectionConfigurationArrayOutput)
}

type AnalysisBodySectionConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisBodySectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBodySectionConfiguration)(nil)).Elem()
}

func (o AnalysisBodySectionConfigurationOutput) ToAnalysisBodySectionConfigurationOutput() AnalysisBodySectionConfigurationOutput {
	return o
}

func (o AnalysisBodySectionConfigurationOutput) ToAnalysisBodySectionConfigurationOutputWithContext(ctx context.Context) AnalysisBodySectionConfigurationOutput {
	return o
}

func (o AnalysisBodySectionConfigurationOutput) Content() AnalysisBodySectionContentOutput {
	return o.ApplyT(func(v AnalysisBodySectionConfiguration) AnalysisBodySectionContent { return v.Content }).(AnalysisBodySectionContentOutput)
}

func (o AnalysisBodySectionConfigurationOutput) PageBreakConfiguration() AnalysisSectionPageBreakConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisBodySectionConfiguration) *AnalysisSectionPageBreakConfiguration {
		return v.PageBreakConfiguration
	}).(AnalysisSectionPageBreakConfigurationPtrOutput)
}

func (o AnalysisBodySectionConfigurationOutput) SectionId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisBodySectionConfiguration) string { return v.SectionId }).(pulumi.StringOutput)
}

func (o AnalysisBodySectionConfigurationOutput) Style() AnalysisSectionStylePtrOutput {
	return o.ApplyT(func(v AnalysisBodySectionConfiguration) *AnalysisSectionStyle { return v.Style }).(AnalysisSectionStylePtrOutput)
}

type AnalysisBodySectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisBodySectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisBodySectionConfiguration)(nil)).Elem()
}

func (o AnalysisBodySectionConfigurationArrayOutput) ToAnalysisBodySectionConfigurationArrayOutput() AnalysisBodySectionConfigurationArrayOutput {
	return o
}

func (o AnalysisBodySectionConfigurationArrayOutput) ToAnalysisBodySectionConfigurationArrayOutputWithContext(ctx context.Context) AnalysisBodySectionConfigurationArrayOutput {
	return o
}

func (o AnalysisBodySectionConfigurationArrayOutput) Index(i pulumi.IntInput) AnalysisBodySectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisBodySectionConfiguration {
		return vs[0].([]AnalysisBodySectionConfiguration)[vs[1].(int)]
	}).(AnalysisBodySectionConfigurationOutput)
}

type AnalysisBodySectionContent struct {
	Layout *AnalysisSectionLayoutConfiguration `pulumi:"layout"`
}

// AnalysisBodySectionContentInput is an input type that accepts AnalysisBodySectionContentArgs and AnalysisBodySectionContentOutput values.
// You can construct a concrete instance of `AnalysisBodySectionContentInput` via:
//
//	AnalysisBodySectionContentArgs{...}
type AnalysisBodySectionContentInput interface {
	pulumi.Input

	ToAnalysisBodySectionContentOutput() AnalysisBodySectionContentOutput
	ToAnalysisBodySectionContentOutputWithContext(context.Context) AnalysisBodySectionContentOutput
}

type AnalysisBodySectionContentArgs struct {
	Layout AnalysisSectionLayoutConfigurationPtrInput `pulumi:"layout"`
}

func (AnalysisBodySectionContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBodySectionContent)(nil)).Elem()
}

func (i AnalysisBodySectionContentArgs) ToAnalysisBodySectionContentOutput() AnalysisBodySectionContentOutput {
	return i.ToAnalysisBodySectionContentOutputWithContext(context.Background())
}

func (i AnalysisBodySectionContentArgs) ToAnalysisBodySectionContentOutputWithContext(ctx context.Context) AnalysisBodySectionContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBodySectionContentOutput)
}

type AnalysisBodySectionContentOutput struct{ *pulumi.OutputState }

func (AnalysisBodySectionContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBodySectionContent)(nil)).Elem()
}

func (o AnalysisBodySectionContentOutput) ToAnalysisBodySectionContentOutput() AnalysisBodySectionContentOutput {
	return o
}

func (o AnalysisBodySectionContentOutput) ToAnalysisBodySectionContentOutputWithContext(ctx context.Context) AnalysisBodySectionContentOutput {
	return o
}

func (o AnalysisBodySectionContentOutput) Layout() AnalysisSectionLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisBodySectionContent) *AnalysisSectionLayoutConfiguration { return v.Layout }).(AnalysisSectionLayoutConfigurationPtrOutput)
}

type AnalysisBoxPlotAggregatedFieldWells struct {
	GroupBy []AnalysisDimensionField `pulumi:"groupBy"`
	Values  []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisBoxPlotAggregatedFieldWellsInput is an input type that accepts AnalysisBoxPlotAggregatedFieldWellsArgs and AnalysisBoxPlotAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotAggregatedFieldWellsInput` via:
//
//	AnalysisBoxPlotAggregatedFieldWellsArgs{...}
type AnalysisBoxPlotAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisBoxPlotAggregatedFieldWellsOutput() AnalysisBoxPlotAggregatedFieldWellsOutput
	ToAnalysisBoxPlotAggregatedFieldWellsOutputWithContext(context.Context) AnalysisBoxPlotAggregatedFieldWellsOutput
}

type AnalysisBoxPlotAggregatedFieldWellsArgs struct {
	GroupBy AnalysisDimensionFieldArrayInput `pulumi:"groupBy"`
	Values  AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisBoxPlotAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisBoxPlotAggregatedFieldWellsArgs) ToAnalysisBoxPlotAggregatedFieldWellsOutput() AnalysisBoxPlotAggregatedFieldWellsOutput {
	return i.ToAnalysisBoxPlotAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotAggregatedFieldWellsArgs) ToAnalysisBoxPlotAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisBoxPlotAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotAggregatedFieldWellsOutput)
}

func (i AnalysisBoxPlotAggregatedFieldWellsArgs) ToAnalysisBoxPlotAggregatedFieldWellsPtrOutput() AnalysisBoxPlotAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotAggregatedFieldWellsArgs) ToAnalysisBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotAggregatedFieldWellsOutput).ToAnalysisBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisBoxPlotAggregatedFieldWellsPtrInput is an input type that accepts AnalysisBoxPlotAggregatedFieldWellsArgs, AnalysisBoxPlotAggregatedFieldWellsPtr and AnalysisBoxPlotAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisBoxPlotAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisBoxPlotAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisBoxPlotAggregatedFieldWellsPtrOutput() AnalysisBoxPlotAggregatedFieldWellsPtrOutput
	ToAnalysisBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisBoxPlotAggregatedFieldWellsPtrOutput
}

type analysisBoxPlotAggregatedFieldWellsPtrType AnalysisBoxPlotAggregatedFieldWellsArgs

func AnalysisBoxPlotAggregatedFieldWellsPtr(v *AnalysisBoxPlotAggregatedFieldWellsArgs) AnalysisBoxPlotAggregatedFieldWellsPtrInput {
	return (*analysisBoxPlotAggregatedFieldWellsPtrType)(v)
}

func (*analysisBoxPlotAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisBoxPlotAggregatedFieldWellsPtrType) ToAnalysisBoxPlotAggregatedFieldWellsPtrOutput() AnalysisBoxPlotAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisBoxPlotAggregatedFieldWellsPtrType) ToAnalysisBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotAggregatedFieldWellsPtrOutput)
}

type AnalysisBoxPlotAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisBoxPlotAggregatedFieldWellsOutput) ToAnalysisBoxPlotAggregatedFieldWellsOutput() AnalysisBoxPlotAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisBoxPlotAggregatedFieldWellsOutput) ToAnalysisBoxPlotAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisBoxPlotAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisBoxPlotAggregatedFieldWellsOutput) ToAnalysisBoxPlotAggregatedFieldWellsPtrOutput() AnalysisBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotAggregatedFieldWellsOutput) ToAnalysisBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBoxPlotAggregatedFieldWells) *AnalysisBoxPlotAggregatedFieldWells {
		return &v
	}).(AnalysisBoxPlotAggregatedFieldWellsPtrOutput)
}

func (o AnalysisBoxPlotAggregatedFieldWellsOutput) GroupBy() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisBoxPlotAggregatedFieldWells) []AnalysisDimensionField { return v.GroupBy }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisBoxPlotAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisBoxPlotAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisBoxPlotAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisBoxPlotAggregatedFieldWellsPtrOutput) ToAnalysisBoxPlotAggregatedFieldWellsPtrOutput() AnalysisBoxPlotAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisBoxPlotAggregatedFieldWellsPtrOutput) ToAnalysisBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisBoxPlotAggregatedFieldWellsPtrOutput) Elem() AnalysisBoxPlotAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotAggregatedFieldWells) AnalysisBoxPlotAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisBoxPlotAggregatedFieldWells
		return ret
	}).(AnalysisBoxPlotAggregatedFieldWellsOutput)
}

func (o AnalysisBoxPlotAggregatedFieldWellsPtrOutput) GroupBy() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisBoxPlotAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisBoxPlotChartConfiguration struct {
	BoxPlotOptions             *AnalysisBoxPlotOptions           `pulumi:"boxPlotOptions"`
	CategoryAxis               *AnalysisAxisDisplayOptions       `pulumi:"categoryAxis"`
	CategoryLabelOptions       *AnalysisChartAxisLabelOptions    `pulumi:"categoryLabelOptions"`
	FieldWells                 *AnalysisBoxPlotFieldWells        `pulumi:"fieldWells"`
	Legend                     *AnalysisLegendOptions            `pulumi:"legend"`
	PrimaryYAxisDisplayOptions *AnalysisAxisDisplayOptions       `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   *AnalysisChartAxisLabelOptions    `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines             []AnalysisReferenceLine           `pulumi:"referenceLines"`
	SortConfiguration          *AnalysisBoxPlotSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip                    *AnalysisTooltipOptions           `pulumi:"tooltip"`
	VisualPalette              *AnalysisVisualPalette            `pulumi:"visualPalette"`
}

// AnalysisBoxPlotChartConfigurationInput is an input type that accepts AnalysisBoxPlotChartConfigurationArgs and AnalysisBoxPlotChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotChartConfigurationInput` via:
//
//	AnalysisBoxPlotChartConfigurationArgs{...}
type AnalysisBoxPlotChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisBoxPlotChartConfigurationOutput() AnalysisBoxPlotChartConfigurationOutput
	ToAnalysisBoxPlotChartConfigurationOutputWithContext(context.Context) AnalysisBoxPlotChartConfigurationOutput
}

type AnalysisBoxPlotChartConfigurationArgs struct {
	BoxPlotOptions             AnalysisBoxPlotOptionsPtrInput           `pulumi:"boxPlotOptions"`
	CategoryAxis               AnalysisAxisDisplayOptionsPtrInput       `pulumi:"categoryAxis"`
	CategoryLabelOptions       AnalysisChartAxisLabelOptionsPtrInput    `pulumi:"categoryLabelOptions"`
	FieldWells                 AnalysisBoxPlotFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                     AnalysisLegendOptionsPtrInput            `pulumi:"legend"`
	PrimaryYAxisDisplayOptions AnalysisAxisDisplayOptionsPtrInput       `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   AnalysisChartAxisLabelOptionsPtrInput    `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines             AnalysisReferenceLineArrayInput          `pulumi:"referenceLines"`
	SortConfiguration          AnalysisBoxPlotSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip                    AnalysisTooltipOptionsPtrInput           `pulumi:"tooltip"`
	VisualPalette              AnalysisVisualPalettePtrInput            `pulumi:"visualPalette"`
}

func (AnalysisBoxPlotChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotChartConfiguration)(nil)).Elem()
}

func (i AnalysisBoxPlotChartConfigurationArgs) ToAnalysisBoxPlotChartConfigurationOutput() AnalysisBoxPlotChartConfigurationOutput {
	return i.ToAnalysisBoxPlotChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotChartConfigurationArgs) ToAnalysisBoxPlotChartConfigurationOutputWithContext(ctx context.Context) AnalysisBoxPlotChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotChartConfigurationOutput)
}

func (i AnalysisBoxPlotChartConfigurationArgs) ToAnalysisBoxPlotChartConfigurationPtrOutput() AnalysisBoxPlotChartConfigurationPtrOutput {
	return i.ToAnalysisBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotChartConfigurationArgs) ToAnalysisBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotChartConfigurationOutput).ToAnalysisBoxPlotChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisBoxPlotChartConfigurationPtrInput is an input type that accepts AnalysisBoxPlotChartConfigurationArgs, AnalysisBoxPlotChartConfigurationPtr and AnalysisBoxPlotChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotChartConfigurationPtrInput` via:
//
//	        AnalysisBoxPlotChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisBoxPlotChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisBoxPlotChartConfigurationPtrOutput() AnalysisBoxPlotChartConfigurationPtrOutput
	ToAnalysisBoxPlotChartConfigurationPtrOutputWithContext(context.Context) AnalysisBoxPlotChartConfigurationPtrOutput
}

type analysisBoxPlotChartConfigurationPtrType AnalysisBoxPlotChartConfigurationArgs

func AnalysisBoxPlotChartConfigurationPtr(v *AnalysisBoxPlotChartConfigurationArgs) AnalysisBoxPlotChartConfigurationPtrInput {
	return (*analysisBoxPlotChartConfigurationPtrType)(v)
}

func (*analysisBoxPlotChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotChartConfiguration)(nil)).Elem()
}

func (i *analysisBoxPlotChartConfigurationPtrType) ToAnalysisBoxPlotChartConfigurationPtrOutput() AnalysisBoxPlotChartConfigurationPtrOutput {
	return i.ToAnalysisBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisBoxPlotChartConfigurationPtrType) ToAnalysisBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotChartConfigurationPtrOutput)
}

type AnalysisBoxPlotChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotChartConfiguration)(nil)).Elem()
}

func (o AnalysisBoxPlotChartConfigurationOutput) ToAnalysisBoxPlotChartConfigurationOutput() AnalysisBoxPlotChartConfigurationOutput {
	return o
}

func (o AnalysisBoxPlotChartConfigurationOutput) ToAnalysisBoxPlotChartConfigurationOutputWithContext(ctx context.Context) AnalysisBoxPlotChartConfigurationOutput {
	return o
}

func (o AnalysisBoxPlotChartConfigurationOutput) ToAnalysisBoxPlotChartConfigurationPtrOutput() AnalysisBoxPlotChartConfigurationPtrOutput {
	return o.ToAnalysisBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotChartConfigurationOutput) ToAnalysisBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBoxPlotChartConfiguration) *AnalysisBoxPlotChartConfiguration {
		return &v
	}).(AnalysisBoxPlotChartConfigurationPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) BoxPlotOptions() AnalysisBoxPlotOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) *AnalysisBoxPlotOptions { return v.BoxPlotOptions }).(AnalysisBoxPlotOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) CategoryAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) *AnalysisAxisDisplayOptions { return v.CategoryAxis }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) *AnalysisChartAxisLabelOptions {
		return v.CategoryLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) FieldWells() AnalysisBoxPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) *AnalysisBoxPlotFieldWells { return v.FieldWells }).(AnalysisBoxPlotFieldWellsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) PrimaryYAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) *AnalysisAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) PrimaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) *AnalysisChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) ReferenceLines() AnalysisReferenceLineArrayOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) []AnalysisReferenceLine { return v.ReferenceLines }).(AnalysisReferenceLineArrayOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) SortConfiguration() AnalysisBoxPlotSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) *AnalysisBoxPlotSortConfiguration {
		return v.SortConfiguration
	}).(AnalysisBoxPlotSortConfigurationPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotChartConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

type AnalysisBoxPlotChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotChartConfiguration)(nil)).Elem()
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) ToAnalysisBoxPlotChartConfigurationPtrOutput() AnalysisBoxPlotChartConfigurationPtrOutput {
	return o
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) ToAnalysisBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotChartConfigurationPtrOutput {
	return o
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) Elem() AnalysisBoxPlotChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) AnalysisBoxPlotChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisBoxPlotChartConfiguration
		return ret
	}).(AnalysisBoxPlotChartConfigurationOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) BoxPlotOptions() AnalysisBoxPlotOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) *AnalysisBoxPlotOptions {
		if v == nil {
			return nil
		}
		return v.BoxPlotOptions
	}).(AnalysisBoxPlotOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) CategoryAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) FieldWells() AnalysisBoxPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) *AnalysisBoxPlotFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisBoxPlotFieldWellsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) ReferenceLines() AnalysisReferenceLineArrayOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) []AnalysisReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(AnalysisReferenceLineArrayOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) SortConfiguration() AnalysisBoxPlotSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) *AnalysisBoxPlotSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisBoxPlotSortConfigurationPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisBoxPlotChartConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotChartConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

type AnalysisBoxPlotFieldWells struct {
	BoxPlotAggregatedFieldWells *AnalysisBoxPlotAggregatedFieldWells `pulumi:"boxPlotAggregatedFieldWells"`
}

// AnalysisBoxPlotFieldWellsInput is an input type that accepts AnalysisBoxPlotFieldWellsArgs and AnalysisBoxPlotFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotFieldWellsInput` via:
//
//	AnalysisBoxPlotFieldWellsArgs{...}
type AnalysisBoxPlotFieldWellsInput interface {
	pulumi.Input

	ToAnalysisBoxPlotFieldWellsOutput() AnalysisBoxPlotFieldWellsOutput
	ToAnalysisBoxPlotFieldWellsOutputWithContext(context.Context) AnalysisBoxPlotFieldWellsOutput
}

type AnalysisBoxPlotFieldWellsArgs struct {
	BoxPlotAggregatedFieldWells AnalysisBoxPlotAggregatedFieldWellsPtrInput `pulumi:"boxPlotAggregatedFieldWells"`
}

func (AnalysisBoxPlotFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotFieldWells)(nil)).Elem()
}

func (i AnalysisBoxPlotFieldWellsArgs) ToAnalysisBoxPlotFieldWellsOutput() AnalysisBoxPlotFieldWellsOutput {
	return i.ToAnalysisBoxPlotFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotFieldWellsArgs) ToAnalysisBoxPlotFieldWellsOutputWithContext(ctx context.Context) AnalysisBoxPlotFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotFieldWellsOutput)
}

func (i AnalysisBoxPlotFieldWellsArgs) ToAnalysisBoxPlotFieldWellsPtrOutput() AnalysisBoxPlotFieldWellsPtrOutput {
	return i.ToAnalysisBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotFieldWellsArgs) ToAnalysisBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotFieldWellsOutput).ToAnalysisBoxPlotFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisBoxPlotFieldWellsPtrInput is an input type that accepts AnalysisBoxPlotFieldWellsArgs, AnalysisBoxPlotFieldWellsPtr and AnalysisBoxPlotFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotFieldWellsPtrInput` via:
//
//	        AnalysisBoxPlotFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisBoxPlotFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisBoxPlotFieldWellsPtrOutput() AnalysisBoxPlotFieldWellsPtrOutput
	ToAnalysisBoxPlotFieldWellsPtrOutputWithContext(context.Context) AnalysisBoxPlotFieldWellsPtrOutput
}

type analysisBoxPlotFieldWellsPtrType AnalysisBoxPlotFieldWellsArgs

func AnalysisBoxPlotFieldWellsPtr(v *AnalysisBoxPlotFieldWellsArgs) AnalysisBoxPlotFieldWellsPtrInput {
	return (*analysisBoxPlotFieldWellsPtrType)(v)
}

func (*analysisBoxPlotFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotFieldWells)(nil)).Elem()
}

func (i *analysisBoxPlotFieldWellsPtrType) ToAnalysisBoxPlotFieldWellsPtrOutput() AnalysisBoxPlotFieldWellsPtrOutput {
	return i.ToAnalysisBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisBoxPlotFieldWellsPtrType) ToAnalysisBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotFieldWellsPtrOutput)
}

type AnalysisBoxPlotFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotFieldWells)(nil)).Elem()
}

func (o AnalysisBoxPlotFieldWellsOutput) ToAnalysisBoxPlotFieldWellsOutput() AnalysisBoxPlotFieldWellsOutput {
	return o
}

func (o AnalysisBoxPlotFieldWellsOutput) ToAnalysisBoxPlotFieldWellsOutputWithContext(ctx context.Context) AnalysisBoxPlotFieldWellsOutput {
	return o
}

func (o AnalysisBoxPlotFieldWellsOutput) ToAnalysisBoxPlotFieldWellsPtrOutput() AnalysisBoxPlotFieldWellsPtrOutput {
	return o.ToAnalysisBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotFieldWellsOutput) ToAnalysisBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBoxPlotFieldWells) *AnalysisBoxPlotFieldWells {
		return &v
	}).(AnalysisBoxPlotFieldWellsPtrOutput)
}

func (o AnalysisBoxPlotFieldWellsOutput) BoxPlotAggregatedFieldWells() AnalysisBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotFieldWells) *AnalysisBoxPlotAggregatedFieldWells {
		return v.BoxPlotAggregatedFieldWells
	}).(AnalysisBoxPlotAggregatedFieldWellsPtrOutput)
}

type AnalysisBoxPlotFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotFieldWells)(nil)).Elem()
}

func (o AnalysisBoxPlotFieldWellsPtrOutput) ToAnalysisBoxPlotFieldWellsPtrOutput() AnalysisBoxPlotFieldWellsPtrOutput {
	return o
}

func (o AnalysisBoxPlotFieldWellsPtrOutput) ToAnalysisBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotFieldWellsPtrOutput {
	return o
}

func (o AnalysisBoxPlotFieldWellsPtrOutput) Elem() AnalysisBoxPlotFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotFieldWells) AnalysisBoxPlotFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisBoxPlotFieldWells
		return ret
	}).(AnalysisBoxPlotFieldWellsOutput)
}

func (o AnalysisBoxPlotFieldWellsPtrOutput) BoxPlotAggregatedFieldWells() AnalysisBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotFieldWells) *AnalysisBoxPlotAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.BoxPlotAggregatedFieldWells
	}).(AnalysisBoxPlotAggregatedFieldWellsPtrOutput)
}

type AnalysisBoxPlotOptions struct {
	AllDataPointsVisibility *AnalysisVisibility          `pulumi:"allDataPointsVisibility"`
	OutlierVisibility       *AnalysisVisibility          `pulumi:"outlierVisibility"`
	StyleOptions            *AnalysisBoxPlotStyleOptions `pulumi:"styleOptions"`
}

// AnalysisBoxPlotOptionsInput is an input type that accepts AnalysisBoxPlotOptionsArgs and AnalysisBoxPlotOptionsOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotOptionsInput` via:
//
//	AnalysisBoxPlotOptionsArgs{...}
type AnalysisBoxPlotOptionsInput interface {
	pulumi.Input

	ToAnalysisBoxPlotOptionsOutput() AnalysisBoxPlotOptionsOutput
	ToAnalysisBoxPlotOptionsOutputWithContext(context.Context) AnalysisBoxPlotOptionsOutput
}

type AnalysisBoxPlotOptionsArgs struct {
	AllDataPointsVisibility AnalysisVisibilityPtrInput          `pulumi:"allDataPointsVisibility"`
	OutlierVisibility       AnalysisVisibilityPtrInput          `pulumi:"outlierVisibility"`
	StyleOptions            AnalysisBoxPlotStyleOptionsPtrInput `pulumi:"styleOptions"`
}

func (AnalysisBoxPlotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotOptions)(nil)).Elem()
}

func (i AnalysisBoxPlotOptionsArgs) ToAnalysisBoxPlotOptionsOutput() AnalysisBoxPlotOptionsOutput {
	return i.ToAnalysisBoxPlotOptionsOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotOptionsArgs) ToAnalysisBoxPlotOptionsOutputWithContext(ctx context.Context) AnalysisBoxPlotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotOptionsOutput)
}

func (i AnalysisBoxPlotOptionsArgs) ToAnalysisBoxPlotOptionsPtrOutput() AnalysisBoxPlotOptionsPtrOutput {
	return i.ToAnalysisBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotOptionsArgs) ToAnalysisBoxPlotOptionsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotOptionsOutput).ToAnalysisBoxPlotOptionsPtrOutputWithContext(ctx)
}

// AnalysisBoxPlotOptionsPtrInput is an input type that accepts AnalysisBoxPlotOptionsArgs, AnalysisBoxPlotOptionsPtr and AnalysisBoxPlotOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotOptionsPtrInput` via:
//
//	        AnalysisBoxPlotOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisBoxPlotOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisBoxPlotOptionsPtrOutput() AnalysisBoxPlotOptionsPtrOutput
	ToAnalysisBoxPlotOptionsPtrOutputWithContext(context.Context) AnalysisBoxPlotOptionsPtrOutput
}

type analysisBoxPlotOptionsPtrType AnalysisBoxPlotOptionsArgs

func AnalysisBoxPlotOptionsPtr(v *AnalysisBoxPlotOptionsArgs) AnalysisBoxPlotOptionsPtrInput {
	return (*analysisBoxPlotOptionsPtrType)(v)
}

func (*analysisBoxPlotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotOptions)(nil)).Elem()
}

func (i *analysisBoxPlotOptionsPtrType) ToAnalysisBoxPlotOptionsPtrOutput() AnalysisBoxPlotOptionsPtrOutput {
	return i.ToAnalysisBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisBoxPlotOptionsPtrType) ToAnalysisBoxPlotOptionsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotOptionsPtrOutput)
}

type AnalysisBoxPlotOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotOptions)(nil)).Elem()
}

func (o AnalysisBoxPlotOptionsOutput) ToAnalysisBoxPlotOptionsOutput() AnalysisBoxPlotOptionsOutput {
	return o
}

func (o AnalysisBoxPlotOptionsOutput) ToAnalysisBoxPlotOptionsOutputWithContext(ctx context.Context) AnalysisBoxPlotOptionsOutput {
	return o
}

func (o AnalysisBoxPlotOptionsOutput) ToAnalysisBoxPlotOptionsPtrOutput() AnalysisBoxPlotOptionsPtrOutput {
	return o.ToAnalysisBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotOptionsOutput) ToAnalysisBoxPlotOptionsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBoxPlotOptions) *AnalysisBoxPlotOptions {
		return &v
	}).(AnalysisBoxPlotOptionsPtrOutput)
}

func (o AnalysisBoxPlotOptionsOutput) AllDataPointsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotOptions) *AnalysisVisibility { return v.AllDataPointsVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisBoxPlotOptionsOutput) OutlierVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotOptions) *AnalysisVisibility { return v.OutlierVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisBoxPlotOptionsOutput) StyleOptions() AnalysisBoxPlotStyleOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotOptions) *AnalysisBoxPlotStyleOptions { return v.StyleOptions }).(AnalysisBoxPlotStyleOptionsPtrOutput)
}

type AnalysisBoxPlotOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotOptions)(nil)).Elem()
}

func (o AnalysisBoxPlotOptionsPtrOutput) ToAnalysisBoxPlotOptionsPtrOutput() AnalysisBoxPlotOptionsPtrOutput {
	return o
}

func (o AnalysisBoxPlotOptionsPtrOutput) ToAnalysisBoxPlotOptionsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotOptionsPtrOutput {
	return o
}

func (o AnalysisBoxPlotOptionsPtrOutput) Elem() AnalysisBoxPlotOptionsOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotOptions) AnalysisBoxPlotOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisBoxPlotOptions
		return ret
	}).(AnalysisBoxPlotOptionsOutput)
}

func (o AnalysisBoxPlotOptionsPtrOutput) AllDataPointsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.AllDataPointsVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisBoxPlotOptionsPtrOutput) OutlierVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.OutlierVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisBoxPlotOptionsPtrOutput) StyleOptions() AnalysisBoxPlotStyleOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotOptions) *AnalysisBoxPlotStyleOptions {
		if v == nil {
			return nil
		}
		return v.StyleOptions
	}).(AnalysisBoxPlotStyleOptionsPtrOutput)
}

type AnalysisBoxPlotSortConfiguration struct {
	CategorySort            []AnalysisFieldSortOptions       `pulumi:"categorySort"`
	PaginationConfiguration *AnalysisPaginationConfiguration `pulumi:"paginationConfiguration"`
}

// AnalysisBoxPlotSortConfigurationInput is an input type that accepts AnalysisBoxPlotSortConfigurationArgs and AnalysisBoxPlotSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotSortConfigurationInput` via:
//
//	AnalysisBoxPlotSortConfigurationArgs{...}
type AnalysisBoxPlotSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisBoxPlotSortConfigurationOutput() AnalysisBoxPlotSortConfigurationOutput
	ToAnalysisBoxPlotSortConfigurationOutputWithContext(context.Context) AnalysisBoxPlotSortConfigurationOutput
}

type AnalysisBoxPlotSortConfigurationArgs struct {
	CategorySort            AnalysisFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	PaginationConfiguration AnalysisPaginationConfigurationPtrInput `pulumi:"paginationConfiguration"`
}

func (AnalysisBoxPlotSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotSortConfiguration)(nil)).Elem()
}

func (i AnalysisBoxPlotSortConfigurationArgs) ToAnalysisBoxPlotSortConfigurationOutput() AnalysisBoxPlotSortConfigurationOutput {
	return i.ToAnalysisBoxPlotSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotSortConfigurationArgs) ToAnalysisBoxPlotSortConfigurationOutputWithContext(ctx context.Context) AnalysisBoxPlotSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotSortConfigurationOutput)
}

func (i AnalysisBoxPlotSortConfigurationArgs) ToAnalysisBoxPlotSortConfigurationPtrOutput() AnalysisBoxPlotSortConfigurationPtrOutput {
	return i.ToAnalysisBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotSortConfigurationArgs) ToAnalysisBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotSortConfigurationOutput).ToAnalysisBoxPlotSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisBoxPlotSortConfigurationPtrInput is an input type that accepts AnalysisBoxPlotSortConfigurationArgs, AnalysisBoxPlotSortConfigurationPtr and AnalysisBoxPlotSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotSortConfigurationPtrInput` via:
//
//	        AnalysisBoxPlotSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisBoxPlotSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisBoxPlotSortConfigurationPtrOutput() AnalysisBoxPlotSortConfigurationPtrOutput
	ToAnalysisBoxPlotSortConfigurationPtrOutputWithContext(context.Context) AnalysisBoxPlotSortConfigurationPtrOutput
}

type analysisBoxPlotSortConfigurationPtrType AnalysisBoxPlotSortConfigurationArgs

func AnalysisBoxPlotSortConfigurationPtr(v *AnalysisBoxPlotSortConfigurationArgs) AnalysisBoxPlotSortConfigurationPtrInput {
	return (*analysisBoxPlotSortConfigurationPtrType)(v)
}

func (*analysisBoxPlotSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotSortConfiguration)(nil)).Elem()
}

func (i *analysisBoxPlotSortConfigurationPtrType) ToAnalysisBoxPlotSortConfigurationPtrOutput() AnalysisBoxPlotSortConfigurationPtrOutput {
	return i.ToAnalysisBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisBoxPlotSortConfigurationPtrType) ToAnalysisBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotSortConfigurationPtrOutput)
}

type AnalysisBoxPlotSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotSortConfiguration)(nil)).Elem()
}

func (o AnalysisBoxPlotSortConfigurationOutput) ToAnalysisBoxPlotSortConfigurationOutput() AnalysisBoxPlotSortConfigurationOutput {
	return o
}

func (o AnalysisBoxPlotSortConfigurationOutput) ToAnalysisBoxPlotSortConfigurationOutputWithContext(ctx context.Context) AnalysisBoxPlotSortConfigurationOutput {
	return o
}

func (o AnalysisBoxPlotSortConfigurationOutput) ToAnalysisBoxPlotSortConfigurationPtrOutput() AnalysisBoxPlotSortConfigurationPtrOutput {
	return o.ToAnalysisBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotSortConfigurationOutput) ToAnalysisBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBoxPlotSortConfiguration) *AnalysisBoxPlotSortConfiguration {
		return &v
	}).(AnalysisBoxPlotSortConfigurationPtrOutput)
}

func (o AnalysisBoxPlotSortConfigurationOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisBoxPlotSortConfiguration) []AnalysisFieldSortOptions { return v.CategorySort }).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisBoxPlotSortConfigurationOutput) PaginationConfiguration() AnalysisPaginationConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotSortConfiguration) *AnalysisPaginationConfiguration {
		return v.PaginationConfiguration
	}).(AnalysisPaginationConfigurationPtrOutput)
}

type AnalysisBoxPlotSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotSortConfiguration)(nil)).Elem()
}

func (o AnalysisBoxPlotSortConfigurationPtrOutput) ToAnalysisBoxPlotSortConfigurationPtrOutput() AnalysisBoxPlotSortConfigurationPtrOutput {
	return o
}

func (o AnalysisBoxPlotSortConfigurationPtrOutput) ToAnalysisBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotSortConfigurationPtrOutput {
	return o
}

func (o AnalysisBoxPlotSortConfigurationPtrOutput) Elem() AnalysisBoxPlotSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotSortConfiguration) AnalysisBoxPlotSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisBoxPlotSortConfiguration
		return ret
	}).(AnalysisBoxPlotSortConfigurationOutput)
}

func (o AnalysisBoxPlotSortConfigurationPtrOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisBoxPlotSortConfigurationPtrOutput) PaginationConfiguration() AnalysisPaginationConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotSortConfiguration) *AnalysisPaginationConfiguration {
		if v == nil {
			return nil
		}
		return v.PaginationConfiguration
	}).(AnalysisPaginationConfigurationPtrOutput)
}

type AnalysisBoxPlotStyleOptions struct {
	FillStyle *AnalysisBoxPlotFillStyle `pulumi:"fillStyle"`
}

// AnalysisBoxPlotStyleOptionsInput is an input type that accepts AnalysisBoxPlotStyleOptionsArgs and AnalysisBoxPlotStyleOptionsOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotStyleOptionsInput` via:
//
//	AnalysisBoxPlotStyleOptionsArgs{...}
type AnalysisBoxPlotStyleOptionsInput interface {
	pulumi.Input

	ToAnalysisBoxPlotStyleOptionsOutput() AnalysisBoxPlotStyleOptionsOutput
	ToAnalysisBoxPlotStyleOptionsOutputWithContext(context.Context) AnalysisBoxPlotStyleOptionsOutput
}

type AnalysisBoxPlotStyleOptionsArgs struct {
	FillStyle AnalysisBoxPlotFillStylePtrInput `pulumi:"fillStyle"`
}

func (AnalysisBoxPlotStyleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotStyleOptions)(nil)).Elem()
}

func (i AnalysisBoxPlotStyleOptionsArgs) ToAnalysisBoxPlotStyleOptionsOutput() AnalysisBoxPlotStyleOptionsOutput {
	return i.ToAnalysisBoxPlotStyleOptionsOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotStyleOptionsArgs) ToAnalysisBoxPlotStyleOptionsOutputWithContext(ctx context.Context) AnalysisBoxPlotStyleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotStyleOptionsOutput)
}

func (i AnalysisBoxPlotStyleOptionsArgs) ToAnalysisBoxPlotStyleOptionsPtrOutput() AnalysisBoxPlotStyleOptionsPtrOutput {
	return i.ToAnalysisBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotStyleOptionsArgs) ToAnalysisBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotStyleOptionsOutput).ToAnalysisBoxPlotStyleOptionsPtrOutputWithContext(ctx)
}

// AnalysisBoxPlotStyleOptionsPtrInput is an input type that accepts AnalysisBoxPlotStyleOptionsArgs, AnalysisBoxPlotStyleOptionsPtr and AnalysisBoxPlotStyleOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotStyleOptionsPtrInput` via:
//
//	        AnalysisBoxPlotStyleOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisBoxPlotStyleOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisBoxPlotStyleOptionsPtrOutput() AnalysisBoxPlotStyleOptionsPtrOutput
	ToAnalysisBoxPlotStyleOptionsPtrOutputWithContext(context.Context) AnalysisBoxPlotStyleOptionsPtrOutput
}

type analysisBoxPlotStyleOptionsPtrType AnalysisBoxPlotStyleOptionsArgs

func AnalysisBoxPlotStyleOptionsPtr(v *AnalysisBoxPlotStyleOptionsArgs) AnalysisBoxPlotStyleOptionsPtrInput {
	return (*analysisBoxPlotStyleOptionsPtrType)(v)
}

func (*analysisBoxPlotStyleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotStyleOptions)(nil)).Elem()
}

func (i *analysisBoxPlotStyleOptionsPtrType) ToAnalysisBoxPlotStyleOptionsPtrOutput() AnalysisBoxPlotStyleOptionsPtrOutput {
	return i.ToAnalysisBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisBoxPlotStyleOptionsPtrType) ToAnalysisBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotStyleOptionsPtrOutput)
}

type AnalysisBoxPlotStyleOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotStyleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotStyleOptions)(nil)).Elem()
}

func (o AnalysisBoxPlotStyleOptionsOutput) ToAnalysisBoxPlotStyleOptionsOutput() AnalysisBoxPlotStyleOptionsOutput {
	return o
}

func (o AnalysisBoxPlotStyleOptionsOutput) ToAnalysisBoxPlotStyleOptionsOutputWithContext(ctx context.Context) AnalysisBoxPlotStyleOptionsOutput {
	return o
}

func (o AnalysisBoxPlotStyleOptionsOutput) ToAnalysisBoxPlotStyleOptionsPtrOutput() AnalysisBoxPlotStyleOptionsPtrOutput {
	return o.ToAnalysisBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotStyleOptionsOutput) ToAnalysisBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotStyleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBoxPlotStyleOptions) *AnalysisBoxPlotStyleOptions {
		return &v
	}).(AnalysisBoxPlotStyleOptionsPtrOutput)
}

func (o AnalysisBoxPlotStyleOptionsOutput) FillStyle() AnalysisBoxPlotFillStylePtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotStyleOptions) *AnalysisBoxPlotFillStyle { return v.FillStyle }).(AnalysisBoxPlotFillStylePtrOutput)
}

type AnalysisBoxPlotStyleOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotStyleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotStyleOptions)(nil)).Elem()
}

func (o AnalysisBoxPlotStyleOptionsPtrOutput) ToAnalysisBoxPlotStyleOptionsPtrOutput() AnalysisBoxPlotStyleOptionsPtrOutput {
	return o
}

func (o AnalysisBoxPlotStyleOptionsPtrOutput) ToAnalysisBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotStyleOptionsPtrOutput {
	return o
}

func (o AnalysisBoxPlotStyleOptionsPtrOutput) Elem() AnalysisBoxPlotStyleOptionsOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotStyleOptions) AnalysisBoxPlotStyleOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisBoxPlotStyleOptions
		return ret
	}).(AnalysisBoxPlotStyleOptionsOutput)
}

func (o AnalysisBoxPlotStyleOptionsPtrOutput) FillStyle() AnalysisBoxPlotFillStylePtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotStyleOptions) *AnalysisBoxPlotFillStyle {
		if v == nil {
			return nil
		}
		return v.FillStyle
	}).(AnalysisBoxPlotFillStylePtrOutput)
}

type AnalysisBoxPlotVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisBoxPlotChartConfiguration  `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisBoxPlotVisualInput is an input type that accepts AnalysisBoxPlotVisualArgs and AnalysisBoxPlotVisualOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotVisualInput` via:
//
//	AnalysisBoxPlotVisualArgs{...}
type AnalysisBoxPlotVisualInput interface {
	pulumi.Input

	ToAnalysisBoxPlotVisualOutput() AnalysisBoxPlotVisualOutput
	ToAnalysisBoxPlotVisualOutputWithContext(context.Context) AnalysisBoxPlotVisualOutput
}

type AnalysisBoxPlotVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisBoxPlotChartConfigurationPtrInput  `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisBoxPlotVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotVisual)(nil)).Elem()
}

func (i AnalysisBoxPlotVisualArgs) ToAnalysisBoxPlotVisualOutput() AnalysisBoxPlotVisualOutput {
	return i.ToAnalysisBoxPlotVisualOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotVisualArgs) ToAnalysisBoxPlotVisualOutputWithContext(ctx context.Context) AnalysisBoxPlotVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotVisualOutput)
}

func (i AnalysisBoxPlotVisualArgs) ToAnalysisBoxPlotVisualPtrOutput() AnalysisBoxPlotVisualPtrOutput {
	return i.ToAnalysisBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisBoxPlotVisualArgs) ToAnalysisBoxPlotVisualPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotVisualOutput).ToAnalysisBoxPlotVisualPtrOutputWithContext(ctx)
}

// AnalysisBoxPlotVisualPtrInput is an input type that accepts AnalysisBoxPlotVisualArgs, AnalysisBoxPlotVisualPtr and AnalysisBoxPlotVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisBoxPlotVisualPtrInput` via:
//
//	        AnalysisBoxPlotVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisBoxPlotVisualPtrInput interface {
	pulumi.Input

	ToAnalysisBoxPlotVisualPtrOutput() AnalysisBoxPlotVisualPtrOutput
	ToAnalysisBoxPlotVisualPtrOutputWithContext(context.Context) AnalysisBoxPlotVisualPtrOutput
}

type analysisBoxPlotVisualPtrType AnalysisBoxPlotVisualArgs

func AnalysisBoxPlotVisualPtr(v *AnalysisBoxPlotVisualArgs) AnalysisBoxPlotVisualPtrInput {
	return (*analysisBoxPlotVisualPtrType)(v)
}

func (*analysisBoxPlotVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotVisual)(nil)).Elem()
}

func (i *analysisBoxPlotVisualPtrType) ToAnalysisBoxPlotVisualPtrOutput() AnalysisBoxPlotVisualPtrOutput {
	return i.ToAnalysisBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (i *analysisBoxPlotVisualPtrType) ToAnalysisBoxPlotVisualPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisBoxPlotVisualPtrOutput)
}

type AnalysisBoxPlotVisualOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotVisual)(nil)).Elem()
}

func (o AnalysisBoxPlotVisualOutput) ToAnalysisBoxPlotVisualOutput() AnalysisBoxPlotVisualOutput {
	return o
}

func (o AnalysisBoxPlotVisualOutput) ToAnalysisBoxPlotVisualOutputWithContext(ctx context.Context) AnalysisBoxPlotVisualOutput {
	return o
}

func (o AnalysisBoxPlotVisualOutput) ToAnalysisBoxPlotVisualPtrOutput() AnalysisBoxPlotVisualPtrOutput {
	return o.ToAnalysisBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotVisualOutput) ToAnalysisBoxPlotVisualPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBoxPlotVisual) *AnalysisBoxPlotVisual {
		return &v
	}).(AnalysisBoxPlotVisualPtrOutput)
}

func (o AnalysisBoxPlotVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisBoxPlotVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisBoxPlotVisualOutput) ChartConfiguration() AnalysisBoxPlotChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotVisual) *AnalysisBoxPlotChartConfiguration { return v.ChartConfiguration }).(AnalysisBoxPlotChartConfigurationPtrOutput)
}

func (o AnalysisBoxPlotVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisBoxPlotVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisBoxPlotVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisBoxPlotVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisBoxPlotVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisBoxPlotVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisBoxPlotVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisBoxPlotVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotVisual)(nil)).Elem()
}

func (o AnalysisBoxPlotVisualPtrOutput) ToAnalysisBoxPlotVisualPtrOutput() AnalysisBoxPlotVisualPtrOutput {
	return o
}

func (o AnalysisBoxPlotVisualPtrOutput) ToAnalysisBoxPlotVisualPtrOutputWithContext(ctx context.Context) AnalysisBoxPlotVisualPtrOutput {
	return o
}

func (o AnalysisBoxPlotVisualPtrOutput) Elem() AnalysisBoxPlotVisualOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotVisual) AnalysisBoxPlotVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisBoxPlotVisual
		return ret
	}).(AnalysisBoxPlotVisualOutput)
}

func (o AnalysisBoxPlotVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisBoxPlotVisualPtrOutput) ChartConfiguration() AnalysisBoxPlotChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotVisual) *AnalysisBoxPlotChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisBoxPlotChartConfigurationPtrOutput)
}

func (o AnalysisBoxPlotVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisBoxPlotVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisBoxPlotVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisBoxPlotVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisCalculatedField struct {
	DataSetIdentifier string `pulumi:"dataSetIdentifier"`
	Expression        string `pulumi:"expression"`
	Name              string `pulumi:"name"`
}

// AnalysisCalculatedFieldInput is an input type that accepts AnalysisCalculatedFieldArgs and AnalysisCalculatedFieldOutput values.
// You can construct a concrete instance of `AnalysisCalculatedFieldInput` via:
//
//	AnalysisCalculatedFieldArgs{...}
type AnalysisCalculatedFieldInput interface {
	pulumi.Input

	ToAnalysisCalculatedFieldOutput() AnalysisCalculatedFieldOutput
	ToAnalysisCalculatedFieldOutputWithContext(context.Context) AnalysisCalculatedFieldOutput
}

type AnalysisCalculatedFieldArgs struct {
	DataSetIdentifier pulumi.StringInput `pulumi:"dataSetIdentifier"`
	Expression        pulumi.StringInput `pulumi:"expression"`
	Name              pulumi.StringInput `pulumi:"name"`
}

func (AnalysisCalculatedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCalculatedField)(nil)).Elem()
}

func (i AnalysisCalculatedFieldArgs) ToAnalysisCalculatedFieldOutput() AnalysisCalculatedFieldOutput {
	return i.ToAnalysisCalculatedFieldOutputWithContext(context.Background())
}

func (i AnalysisCalculatedFieldArgs) ToAnalysisCalculatedFieldOutputWithContext(ctx context.Context) AnalysisCalculatedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCalculatedFieldOutput)
}

// AnalysisCalculatedFieldArrayInput is an input type that accepts AnalysisCalculatedFieldArray and AnalysisCalculatedFieldArrayOutput values.
// You can construct a concrete instance of `AnalysisCalculatedFieldArrayInput` via:
//
//	AnalysisCalculatedFieldArray{ AnalysisCalculatedFieldArgs{...} }
type AnalysisCalculatedFieldArrayInput interface {
	pulumi.Input

	ToAnalysisCalculatedFieldArrayOutput() AnalysisCalculatedFieldArrayOutput
	ToAnalysisCalculatedFieldArrayOutputWithContext(context.Context) AnalysisCalculatedFieldArrayOutput
}

type AnalysisCalculatedFieldArray []AnalysisCalculatedFieldInput

func (AnalysisCalculatedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisCalculatedField)(nil)).Elem()
}

func (i AnalysisCalculatedFieldArray) ToAnalysisCalculatedFieldArrayOutput() AnalysisCalculatedFieldArrayOutput {
	return i.ToAnalysisCalculatedFieldArrayOutputWithContext(context.Background())
}

func (i AnalysisCalculatedFieldArray) ToAnalysisCalculatedFieldArrayOutputWithContext(ctx context.Context) AnalysisCalculatedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCalculatedFieldArrayOutput)
}

type AnalysisCalculatedFieldOutput struct{ *pulumi.OutputState }

func (AnalysisCalculatedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCalculatedField)(nil)).Elem()
}

func (o AnalysisCalculatedFieldOutput) ToAnalysisCalculatedFieldOutput() AnalysisCalculatedFieldOutput {
	return o
}

func (o AnalysisCalculatedFieldOutput) ToAnalysisCalculatedFieldOutputWithContext(ctx context.Context) AnalysisCalculatedFieldOutput {
	return o
}

func (o AnalysisCalculatedFieldOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCalculatedField) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o AnalysisCalculatedFieldOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCalculatedField) string { return v.Expression }).(pulumi.StringOutput)
}

func (o AnalysisCalculatedFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCalculatedField) string { return v.Name }).(pulumi.StringOutput)
}

type AnalysisCalculatedFieldArrayOutput struct{ *pulumi.OutputState }

func (AnalysisCalculatedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisCalculatedField)(nil)).Elem()
}

func (o AnalysisCalculatedFieldArrayOutput) ToAnalysisCalculatedFieldArrayOutput() AnalysisCalculatedFieldArrayOutput {
	return o
}

func (o AnalysisCalculatedFieldArrayOutput) ToAnalysisCalculatedFieldArrayOutputWithContext(ctx context.Context) AnalysisCalculatedFieldArrayOutput {
	return o
}

func (o AnalysisCalculatedFieldArrayOutput) Index(i pulumi.IntInput) AnalysisCalculatedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisCalculatedField {
		return vs[0].([]AnalysisCalculatedField)[vs[1].(int)]
	}).(AnalysisCalculatedFieldOutput)
}

type AnalysisCalculatedMeasureField struct {
	Expression string `pulumi:"expression"`
	FieldId    string `pulumi:"fieldId"`
}

// AnalysisCalculatedMeasureFieldInput is an input type that accepts AnalysisCalculatedMeasureFieldArgs and AnalysisCalculatedMeasureFieldOutput values.
// You can construct a concrete instance of `AnalysisCalculatedMeasureFieldInput` via:
//
//	AnalysisCalculatedMeasureFieldArgs{...}
type AnalysisCalculatedMeasureFieldInput interface {
	pulumi.Input

	ToAnalysisCalculatedMeasureFieldOutput() AnalysisCalculatedMeasureFieldOutput
	ToAnalysisCalculatedMeasureFieldOutputWithContext(context.Context) AnalysisCalculatedMeasureFieldOutput
}

type AnalysisCalculatedMeasureFieldArgs struct {
	Expression pulumi.StringInput `pulumi:"expression"`
	FieldId    pulumi.StringInput `pulumi:"fieldId"`
}

func (AnalysisCalculatedMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCalculatedMeasureField)(nil)).Elem()
}

func (i AnalysisCalculatedMeasureFieldArgs) ToAnalysisCalculatedMeasureFieldOutput() AnalysisCalculatedMeasureFieldOutput {
	return i.ToAnalysisCalculatedMeasureFieldOutputWithContext(context.Background())
}

func (i AnalysisCalculatedMeasureFieldArgs) ToAnalysisCalculatedMeasureFieldOutputWithContext(ctx context.Context) AnalysisCalculatedMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCalculatedMeasureFieldOutput)
}

func (i AnalysisCalculatedMeasureFieldArgs) ToAnalysisCalculatedMeasureFieldPtrOutput() AnalysisCalculatedMeasureFieldPtrOutput {
	return i.ToAnalysisCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (i AnalysisCalculatedMeasureFieldArgs) ToAnalysisCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisCalculatedMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCalculatedMeasureFieldOutput).ToAnalysisCalculatedMeasureFieldPtrOutputWithContext(ctx)
}

// AnalysisCalculatedMeasureFieldPtrInput is an input type that accepts AnalysisCalculatedMeasureFieldArgs, AnalysisCalculatedMeasureFieldPtr and AnalysisCalculatedMeasureFieldPtrOutput values.
// You can construct a concrete instance of `AnalysisCalculatedMeasureFieldPtrInput` via:
//
//	        AnalysisCalculatedMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type AnalysisCalculatedMeasureFieldPtrInput interface {
	pulumi.Input

	ToAnalysisCalculatedMeasureFieldPtrOutput() AnalysisCalculatedMeasureFieldPtrOutput
	ToAnalysisCalculatedMeasureFieldPtrOutputWithContext(context.Context) AnalysisCalculatedMeasureFieldPtrOutput
}

type analysisCalculatedMeasureFieldPtrType AnalysisCalculatedMeasureFieldArgs

func AnalysisCalculatedMeasureFieldPtr(v *AnalysisCalculatedMeasureFieldArgs) AnalysisCalculatedMeasureFieldPtrInput {
	return (*analysisCalculatedMeasureFieldPtrType)(v)
}

func (*analysisCalculatedMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCalculatedMeasureField)(nil)).Elem()
}

func (i *analysisCalculatedMeasureFieldPtrType) ToAnalysisCalculatedMeasureFieldPtrOutput() AnalysisCalculatedMeasureFieldPtrOutput {
	return i.ToAnalysisCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *analysisCalculatedMeasureFieldPtrType) ToAnalysisCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisCalculatedMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCalculatedMeasureFieldPtrOutput)
}

type AnalysisCalculatedMeasureFieldOutput struct{ *pulumi.OutputState }

func (AnalysisCalculatedMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCalculatedMeasureField)(nil)).Elem()
}

func (o AnalysisCalculatedMeasureFieldOutput) ToAnalysisCalculatedMeasureFieldOutput() AnalysisCalculatedMeasureFieldOutput {
	return o
}

func (o AnalysisCalculatedMeasureFieldOutput) ToAnalysisCalculatedMeasureFieldOutputWithContext(ctx context.Context) AnalysisCalculatedMeasureFieldOutput {
	return o
}

func (o AnalysisCalculatedMeasureFieldOutput) ToAnalysisCalculatedMeasureFieldPtrOutput() AnalysisCalculatedMeasureFieldPtrOutput {
	return o.ToAnalysisCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (o AnalysisCalculatedMeasureFieldOutput) ToAnalysisCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisCalculatedMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCalculatedMeasureField) *AnalysisCalculatedMeasureField {
		return &v
	}).(AnalysisCalculatedMeasureFieldPtrOutput)
}

func (o AnalysisCalculatedMeasureFieldOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCalculatedMeasureField) string { return v.Expression }).(pulumi.StringOutput)
}

func (o AnalysisCalculatedMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCalculatedMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

type AnalysisCalculatedMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCalculatedMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCalculatedMeasureField)(nil)).Elem()
}

func (o AnalysisCalculatedMeasureFieldPtrOutput) ToAnalysisCalculatedMeasureFieldPtrOutput() AnalysisCalculatedMeasureFieldPtrOutput {
	return o
}

func (o AnalysisCalculatedMeasureFieldPtrOutput) ToAnalysisCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisCalculatedMeasureFieldPtrOutput {
	return o
}

func (o AnalysisCalculatedMeasureFieldPtrOutput) Elem() AnalysisCalculatedMeasureFieldOutput {
	return o.ApplyT(func(v *AnalysisCalculatedMeasureField) AnalysisCalculatedMeasureField {
		if v != nil {
			return *v
		}
		var ret AnalysisCalculatedMeasureField
		return ret
	}).(AnalysisCalculatedMeasureFieldOutput)
}

func (o AnalysisCalculatedMeasureFieldPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCalculatedMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisCalculatedMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCalculatedMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type AnalysisCascadingControlConfiguration struct {
	SourceControls []AnalysisCascadingControlSource `pulumi:"sourceControls"`
}

// AnalysisCascadingControlConfigurationInput is an input type that accepts AnalysisCascadingControlConfigurationArgs and AnalysisCascadingControlConfigurationOutput values.
// You can construct a concrete instance of `AnalysisCascadingControlConfigurationInput` via:
//
//	AnalysisCascadingControlConfigurationArgs{...}
type AnalysisCascadingControlConfigurationInput interface {
	pulumi.Input

	ToAnalysisCascadingControlConfigurationOutput() AnalysisCascadingControlConfigurationOutput
	ToAnalysisCascadingControlConfigurationOutputWithContext(context.Context) AnalysisCascadingControlConfigurationOutput
}

type AnalysisCascadingControlConfigurationArgs struct {
	SourceControls AnalysisCascadingControlSourceArrayInput `pulumi:"sourceControls"`
}

func (AnalysisCascadingControlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCascadingControlConfiguration)(nil)).Elem()
}

func (i AnalysisCascadingControlConfigurationArgs) ToAnalysisCascadingControlConfigurationOutput() AnalysisCascadingControlConfigurationOutput {
	return i.ToAnalysisCascadingControlConfigurationOutputWithContext(context.Background())
}

func (i AnalysisCascadingControlConfigurationArgs) ToAnalysisCascadingControlConfigurationOutputWithContext(ctx context.Context) AnalysisCascadingControlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCascadingControlConfigurationOutput)
}

func (i AnalysisCascadingControlConfigurationArgs) ToAnalysisCascadingControlConfigurationPtrOutput() AnalysisCascadingControlConfigurationPtrOutput {
	return i.ToAnalysisCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisCascadingControlConfigurationArgs) ToAnalysisCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCascadingControlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCascadingControlConfigurationOutput).ToAnalysisCascadingControlConfigurationPtrOutputWithContext(ctx)
}

// AnalysisCascadingControlConfigurationPtrInput is an input type that accepts AnalysisCascadingControlConfigurationArgs, AnalysisCascadingControlConfigurationPtr and AnalysisCascadingControlConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisCascadingControlConfigurationPtrInput` via:
//
//	        AnalysisCascadingControlConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCascadingControlConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisCascadingControlConfigurationPtrOutput() AnalysisCascadingControlConfigurationPtrOutput
	ToAnalysisCascadingControlConfigurationPtrOutputWithContext(context.Context) AnalysisCascadingControlConfigurationPtrOutput
}

type analysisCascadingControlConfigurationPtrType AnalysisCascadingControlConfigurationArgs

func AnalysisCascadingControlConfigurationPtr(v *AnalysisCascadingControlConfigurationArgs) AnalysisCascadingControlConfigurationPtrInput {
	return (*analysisCascadingControlConfigurationPtrType)(v)
}

func (*analysisCascadingControlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCascadingControlConfiguration)(nil)).Elem()
}

func (i *analysisCascadingControlConfigurationPtrType) ToAnalysisCascadingControlConfigurationPtrOutput() AnalysisCascadingControlConfigurationPtrOutput {
	return i.ToAnalysisCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisCascadingControlConfigurationPtrType) ToAnalysisCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCascadingControlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCascadingControlConfigurationPtrOutput)
}

type AnalysisCascadingControlConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisCascadingControlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCascadingControlConfiguration)(nil)).Elem()
}

func (o AnalysisCascadingControlConfigurationOutput) ToAnalysisCascadingControlConfigurationOutput() AnalysisCascadingControlConfigurationOutput {
	return o
}

func (o AnalysisCascadingControlConfigurationOutput) ToAnalysisCascadingControlConfigurationOutputWithContext(ctx context.Context) AnalysisCascadingControlConfigurationOutput {
	return o
}

func (o AnalysisCascadingControlConfigurationOutput) ToAnalysisCascadingControlConfigurationPtrOutput() AnalysisCascadingControlConfigurationPtrOutput {
	return o.ToAnalysisCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisCascadingControlConfigurationOutput) ToAnalysisCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCascadingControlConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCascadingControlConfiguration) *AnalysisCascadingControlConfiguration {
		return &v
	}).(AnalysisCascadingControlConfigurationPtrOutput)
}

func (o AnalysisCascadingControlConfigurationOutput) SourceControls() AnalysisCascadingControlSourceArrayOutput {
	return o.ApplyT(func(v AnalysisCascadingControlConfiguration) []AnalysisCascadingControlSource {
		return v.SourceControls
	}).(AnalysisCascadingControlSourceArrayOutput)
}

type AnalysisCascadingControlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCascadingControlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCascadingControlConfiguration)(nil)).Elem()
}

func (o AnalysisCascadingControlConfigurationPtrOutput) ToAnalysisCascadingControlConfigurationPtrOutput() AnalysisCascadingControlConfigurationPtrOutput {
	return o
}

func (o AnalysisCascadingControlConfigurationPtrOutput) ToAnalysisCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCascadingControlConfigurationPtrOutput {
	return o
}

func (o AnalysisCascadingControlConfigurationPtrOutput) Elem() AnalysisCascadingControlConfigurationOutput {
	return o.ApplyT(func(v *AnalysisCascadingControlConfiguration) AnalysisCascadingControlConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisCascadingControlConfiguration
		return ret
	}).(AnalysisCascadingControlConfigurationOutput)
}

func (o AnalysisCascadingControlConfigurationPtrOutput) SourceControls() AnalysisCascadingControlSourceArrayOutput {
	return o.ApplyT(func(v *AnalysisCascadingControlConfiguration) []AnalysisCascadingControlSource {
		if v == nil {
			return nil
		}
		return v.SourceControls
	}).(AnalysisCascadingControlSourceArrayOutput)
}

type AnalysisCascadingControlSource struct {
	ColumnToMatch        *AnalysisColumnIdentifier `pulumi:"columnToMatch"`
	SourceSheetControlId *string                   `pulumi:"sourceSheetControlId"`
}

// AnalysisCascadingControlSourceInput is an input type that accepts AnalysisCascadingControlSourceArgs and AnalysisCascadingControlSourceOutput values.
// You can construct a concrete instance of `AnalysisCascadingControlSourceInput` via:
//
//	AnalysisCascadingControlSourceArgs{...}
type AnalysisCascadingControlSourceInput interface {
	pulumi.Input

	ToAnalysisCascadingControlSourceOutput() AnalysisCascadingControlSourceOutput
	ToAnalysisCascadingControlSourceOutputWithContext(context.Context) AnalysisCascadingControlSourceOutput
}

type AnalysisCascadingControlSourceArgs struct {
	ColumnToMatch        AnalysisColumnIdentifierPtrInput `pulumi:"columnToMatch"`
	SourceSheetControlId pulumi.StringPtrInput            `pulumi:"sourceSheetControlId"`
}

func (AnalysisCascadingControlSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCascadingControlSource)(nil)).Elem()
}

func (i AnalysisCascadingControlSourceArgs) ToAnalysisCascadingControlSourceOutput() AnalysisCascadingControlSourceOutput {
	return i.ToAnalysisCascadingControlSourceOutputWithContext(context.Background())
}

func (i AnalysisCascadingControlSourceArgs) ToAnalysisCascadingControlSourceOutputWithContext(ctx context.Context) AnalysisCascadingControlSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCascadingControlSourceOutput)
}

// AnalysisCascadingControlSourceArrayInput is an input type that accepts AnalysisCascadingControlSourceArray and AnalysisCascadingControlSourceArrayOutput values.
// You can construct a concrete instance of `AnalysisCascadingControlSourceArrayInput` via:
//
//	AnalysisCascadingControlSourceArray{ AnalysisCascadingControlSourceArgs{...} }
type AnalysisCascadingControlSourceArrayInput interface {
	pulumi.Input

	ToAnalysisCascadingControlSourceArrayOutput() AnalysisCascadingControlSourceArrayOutput
	ToAnalysisCascadingControlSourceArrayOutputWithContext(context.Context) AnalysisCascadingControlSourceArrayOutput
}

type AnalysisCascadingControlSourceArray []AnalysisCascadingControlSourceInput

func (AnalysisCascadingControlSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisCascadingControlSource)(nil)).Elem()
}

func (i AnalysisCascadingControlSourceArray) ToAnalysisCascadingControlSourceArrayOutput() AnalysisCascadingControlSourceArrayOutput {
	return i.ToAnalysisCascadingControlSourceArrayOutputWithContext(context.Background())
}

func (i AnalysisCascadingControlSourceArray) ToAnalysisCascadingControlSourceArrayOutputWithContext(ctx context.Context) AnalysisCascadingControlSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCascadingControlSourceArrayOutput)
}

type AnalysisCascadingControlSourceOutput struct{ *pulumi.OutputState }

func (AnalysisCascadingControlSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCascadingControlSource)(nil)).Elem()
}

func (o AnalysisCascadingControlSourceOutput) ToAnalysisCascadingControlSourceOutput() AnalysisCascadingControlSourceOutput {
	return o
}

func (o AnalysisCascadingControlSourceOutput) ToAnalysisCascadingControlSourceOutputWithContext(ctx context.Context) AnalysisCascadingControlSourceOutput {
	return o
}

func (o AnalysisCascadingControlSourceOutput) ColumnToMatch() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v AnalysisCascadingControlSource) *AnalysisColumnIdentifier { return v.ColumnToMatch }).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisCascadingControlSourceOutput) SourceSheetControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisCascadingControlSource) *string { return v.SourceSheetControlId }).(pulumi.StringPtrOutput)
}

type AnalysisCascadingControlSourceArrayOutput struct{ *pulumi.OutputState }

func (AnalysisCascadingControlSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisCascadingControlSource)(nil)).Elem()
}

func (o AnalysisCascadingControlSourceArrayOutput) ToAnalysisCascadingControlSourceArrayOutput() AnalysisCascadingControlSourceArrayOutput {
	return o
}

func (o AnalysisCascadingControlSourceArrayOutput) ToAnalysisCascadingControlSourceArrayOutputWithContext(ctx context.Context) AnalysisCascadingControlSourceArrayOutput {
	return o
}

func (o AnalysisCascadingControlSourceArrayOutput) Index(i pulumi.IntInput) AnalysisCascadingControlSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisCascadingControlSource {
		return vs[0].([]AnalysisCascadingControlSource)[vs[1].(int)]
	}).(AnalysisCascadingControlSourceOutput)
}

type AnalysisCategoricalDimensionField struct {
	Column              AnalysisColumnIdentifier           `pulumi:"column"`
	FieldId             string                             `pulumi:"fieldId"`
	FormatConfiguration *AnalysisStringFormatConfiguration `pulumi:"formatConfiguration"`
	HierarchyId         *string                            `pulumi:"hierarchyId"`
}

// AnalysisCategoricalDimensionFieldInput is an input type that accepts AnalysisCategoricalDimensionFieldArgs and AnalysisCategoricalDimensionFieldOutput values.
// You can construct a concrete instance of `AnalysisCategoricalDimensionFieldInput` via:
//
//	AnalysisCategoricalDimensionFieldArgs{...}
type AnalysisCategoricalDimensionFieldInput interface {
	pulumi.Input

	ToAnalysisCategoricalDimensionFieldOutput() AnalysisCategoricalDimensionFieldOutput
	ToAnalysisCategoricalDimensionFieldOutputWithContext(context.Context) AnalysisCategoricalDimensionFieldOutput
}

type AnalysisCategoricalDimensionFieldArgs struct {
	Column              AnalysisColumnIdentifierInput             `pulumi:"column"`
	FieldId             pulumi.StringInput                        `pulumi:"fieldId"`
	FormatConfiguration AnalysisStringFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	HierarchyId         pulumi.StringPtrInput                     `pulumi:"hierarchyId"`
}

func (AnalysisCategoricalDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoricalDimensionField)(nil)).Elem()
}

func (i AnalysisCategoricalDimensionFieldArgs) ToAnalysisCategoricalDimensionFieldOutput() AnalysisCategoricalDimensionFieldOutput {
	return i.ToAnalysisCategoricalDimensionFieldOutputWithContext(context.Background())
}

func (i AnalysisCategoricalDimensionFieldArgs) ToAnalysisCategoricalDimensionFieldOutputWithContext(ctx context.Context) AnalysisCategoricalDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoricalDimensionFieldOutput)
}

func (i AnalysisCategoricalDimensionFieldArgs) ToAnalysisCategoricalDimensionFieldPtrOutput() AnalysisCategoricalDimensionFieldPtrOutput {
	return i.ToAnalysisCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i AnalysisCategoricalDimensionFieldArgs) ToAnalysisCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisCategoricalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoricalDimensionFieldOutput).ToAnalysisCategoricalDimensionFieldPtrOutputWithContext(ctx)
}

// AnalysisCategoricalDimensionFieldPtrInput is an input type that accepts AnalysisCategoricalDimensionFieldArgs, AnalysisCategoricalDimensionFieldPtr and AnalysisCategoricalDimensionFieldPtrOutput values.
// You can construct a concrete instance of `AnalysisCategoricalDimensionFieldPtrInput` via:
//
//	        AnalysisCategoricalDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type AnalysisCategoricalDimensionFieldPtrInput interface {
	pulumi.Input

	ToAnalysisCategoricalDimensionFieldPtrOutput() AnalysisCategoricalDimensionFieldPtrOutput
	ToAnalysisCategoricalDimensionFieldPtrOutputWithContext(context.Context) AnalysisCategoricalDimensionFieldPtrOutput
}

type analysisCategoricalDimensionFieldPtrType AnalysisCategoricalDimensionFieldArgs

func AnalysisCategoricalDimensionFieldPtr(v *AnalysisCategoricalDimensionFieldArgs) AnalysisCategoricalDimensionFieldPtrInput {
	return (*analysisCategoricalDimensionFieldPtrType)(v)
}

func (*analysisCategoricalDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoricalDimensionField)(nil)).Elem()
}

func (i *analysisCategoricalDimensionFieldPtrType) ToAnalysisCategoricalDimensionFieldPtrOutput() AnalysisCategoricalDimensionFieldPtrOutput {
	return i.ToAnalysisCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *analysisCategoricalDimensionFieldPtrType) ToAnalysisCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisCategoricalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoricalDimensionFieldPtrOutput)
}

type AnalysisCategoricalDimensionFieldOutput struct{ *pulumi.OutputState }

func (AnalysisCategoricalDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoricalDimensionField)(nil)).Elem()
}

func (o AnalysisCategoricalDimensionFieldOutput) ToAnalysisCategoricalDimensionFieldOutput() AnalysisCategoricalDimensionFieldOutput {
	return o
}

func (o AnalysisCategoricalDimensionFieldOutput) ToAnalysisCategoricalDimensionFieldOutputWithContext(ctx context.Context) AnalysisCategoricalDimensionFieldOutput {
	return o
}

func (o AnalysisCategoricalDimensionFieldOutput) ToAnalysisCategoricalDimensionFieldPtrOutput() AnalysisCategoricalDimensionFieldPtrOutput {
	return o.ToAnalysisCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoricalDimensionFieldOutput) ToAnalysisCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisCategoricalDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCategoricalDimensionField) *AnalysisCategoricalDimensionField {
		return &v
	}).(AnalysisCategoricalDimensionFieldPtrOutput)
}

func (o AnalysisCategoricalDimensionFieldOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisCategoricalDimensionField) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisCategoricalDimensionFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCategoricalDimensionField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisCategoricalDimensionFieldOutput) FormatConfiguration() AnalysisStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCategoricalDimensionField) *AnalysisStringFormatConfiguration {
		return v.FormatConfiguration
	}).(AnalysisStringFormatConfigurationPtrOutput)
}

func (o AnalysisCategoricalDimensionFieldOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisCategoricalDimensionField) *string { return v.HierarchyId }).(pulumi.StringPtrOutput)
}

type AnalysisCategoricalDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCategoricalDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoricalDimensionField)(nil)).Elem()
}

func (o AnalysisCategoricalDimensionFieldPtrOutput) ToAnalysisCategoricalDimensionFieldPtrOutput() AnalysisCategoricalDimensionFieldPtrOutput {
	return o
}

func (o AnalysisCategoricalDimensionFieldPtrOutput) ToAnalysisCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisCategoricalDimensionFieldPtrOutput {
	return o
}

func (o AnalysisCategoricalDimensionFieldPtrOutput) Elem() AnalysisCategoricalDimensionFieldOutput {
	return o.ApplyT(func(v *AnalysisCategoricalDimensionField) AnalysisCategoricalDimensionField {
		if v != nil {
			return *v
		}
		var ret AnalysisCategoricalDimensionField
		return ret
	}).(AnalysisCategoricalDimensionFieldOutput)
}

func (o AnalysisCategoricalDimensionFieldPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoricalDimensionField) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisCategoricalDimensionFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoricalDimensionField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisCategoricalDimensionFieldPtrOutput) FormatConfiguration() AnalysisStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoricalDimensionField) *AnalysisStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(AnalysisStringFormatConfigurationPtrOutput)
}

func (o AnalysisCategoricalDimensionFieldPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoricalDimensionField) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type AnalysisCategoricalMeasureField struct {
	AggregationFunction *AnalysisCategoricalAggregationFunction `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifier                `pulumi:"column"`
	FieldId             string                                  `pulumi:"fieldId"`
	FormatConfiguration *AnalysisStringFormatConfiguration      `pulumi:"formatConfiguration"`
}

// AnalysisCategoricalMeasureFieldInput is an input type that accepts AnalysisCategoricalMeasureFieldArgs and AnalysisCategoricalMeasureFieldOutput values.
// You can construct a concrete instance of `AnalysisCategoricalMeasureFieldInput` via:
//
//	AnalysisCategoricalMeasureFieldArgs{...}
type AnalysisCategoricalMeasureFieldInput interface {
	pulumi.Input

	ToAnalysisCategoricalMeasureFieldOutput() AnalysisCategoricalMeasureFieldOutput
	ToAnalysisCategoricalMeasureFieldOutputWithContext(context.Context) AnalysisCategoricalMeasureFieldOutput
}

type AnalysisCategoricalMeasureFieldArgs struct {
	AggregationFunction AnalysisCategoricalAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifierInput                  `pulumi:"column"`
	FieldId             pulumi.StringInput                             `pulumi:"fieldId"`
	FormatConfiguration AnalysisStringFormatConfigurationPtrInput      `pulumi:"formatConfiguration"`
}

func (AnalysisCategoricalMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoricalMeasureField)(nil)).Elem()
}

func (i AnalysisCategoricalMeasureFieldArgs) ToAnalysisCategoricalMeasureFieldOutput() AnalysisCategoricalMeasureFieldOutput {
	return i.ToAnalysisCategoricalMeasureFieldOutputWithContext(context.Background())
}

func (i AnalysisCategoricalMeasureFieldArgs) ToAnalysisCategoricalMeasureFieldOutputWithContext(ctx context.Context) AnalysisCategoricalMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoricalMeasureFieldOutput)
}

func (i AnalysisCategoricalMeasureFieldArgs) ToAnalysisCategoricalMeasureFieldPtrOutput() AnalysisCategoricalMeasureFieldPtrOutput {
	return i.ToAnalysisCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i AnalysisCategoricalMeasureFieldArgs) ToAnalysisCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisCategoricalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoricalMeasureFieldOutput).ToAnalysisCategoricalMeasureFieldPtrOutputWithContext(ctx)
}

// AnalysisCategoricalMeasureFieldPtrInput is an input type that accepts AnalysisCategoricalMeasureFieldArgs, AnalysisCategoricalMeasureFieldPtr and AnalysisCategoricalMeasureFieldPtrOutput values.
// You can construct a concrete instance of `AnalysisCategoricalMeasureFieldPtrInput` via:
//
//	        AnalysisCategoricalMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type AnalysisCategoricalMeasureFieldPtrInput interface {
	pulumi.Input

	ToAnalysisCategoricalMeasureFieldPtrOutput() AnalysisCategoricalMeasureFieldPtrOutput
	ToAnalysisCategoricalMeasureFieldPtrOutputWithContext(context.Context) AnalysisCategoricalMeasureFieldPtrOutput
}

type analysisCategoricalMeasureFieldPtrType AnalysisCategoricalMeasureFieldArgs

func AnalysisCategoricalMeasureFieldPtr(v *AnalysisCategoricalMeasureFieldArgs) AnalysisCategoricalMeasureFieldPtrInput {
	return (*analysisCategoricalMeasureFieldPtrType)(v)
}

func (*analysisCategoricalMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoricalMeasureField)(nil)).Elem()
}

func (i *analysisCategoricalMeasureFieldPtrType) ToAnalysisCategoricalMeasureFieldPtrOutput() AnalysisCategoricalMeasureFieldPtrOutput {
	return i.ToAnalysisCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *analysisCategoricalMeasureFieldPtrType) ToAnalysisCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisCategoricalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoricalMeasureFieldPtrOutput)
}

type AnalysisCategoricalMeasureFieldOutput struct{ *pulumi.OutputState }

func (AnalysisCategoricalMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoricalMeasureField)(nil)).Elem()
}

func (o AnalysisCategoricalMeasureFieldOutput) ToAnalysisCategoricalMeasureFieldOutput() AnalysisCategoricalMeasureFieldOutput {
	return o
}

func (o AnalysisCategoricalMeasureFieldOutput) ToAnalysisCategoricalMeasureFieldOutputWithContext(ctx context.Context) AnalysisCategoricalMeasureFieldOutput {
	return o
}

func (o AnalysisCategoricalMeasureFieldOutput) ToAnalysisCategoricalMeasureFieldPtrOutput() AnalysisCategoricalMeasureFieldPtrOutput {
	return o.ToAnalysisCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoricalMeasureFieldOutput) ToAnalysisCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisCategoricalMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCategoricalMeasureField) *AnalysisCategoricalMeasureField {
		return &v
	}).(AnalysisCategoricalMeasureFieldPtrOutput)
}

func (o AnalysisCategoricalMeasureFieldOutput) AggregationFunction() AnalysisCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisCategoricalMeasureField) *AnalysisCategoricalAggregationFunction {
		return v.AggregationFunction
	}).(AnalysisCategoricalAggregationFunctionPtrOutput)
}

func (o AnalysisCategoricalMeasureFieldOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisCategoricalMeasureField) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisCategoricalMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCategoricalMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisCategoricalMeasureFieldOutput) FormatConfiguration() AnalysisStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCategoricalMeasureField) *AnalysisStringFormatConfiguration {
		return v.FormatConfiguration
	}).(AnalysisStringFormatConfigurationPtrOutput)
}

type AnalysisCategoricalMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCategoricalMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoricalMeasureField)(nil)).Elem()
}

func (o AnalysisCategoricalMeasureFieldPtrOutput) ToAnalysisCategoricalMeasureFieldPtrOutput() AnalysisCategoricalMeasureFieldPtrOutput {
	return o
}

func (o AnalysisCategoricalMeasureFieldPtrOutput) ToAnalysisCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisCategoricalMeasureFieldPtrOutput {
	return o
}

func (o AnalysisCategoricalMeasureFieldPtrOutput) Elem() AnalysisCategoricalMeasureFieldOutput {
	return o.ApplyT(func(v *AnalysisCategoricalMeasureField) AnalysisCategoricalMeasureField {
		if v != nil {
			return *v
		}
		var ret AnalysisCategoricalMeasureField
		return ret
	}).(AnalysisCategoricalMeasureFieldOutput)
}

func (o AnalysisCategoricalMeasureFieldPtrOutput) AggregationFunction() AnalysisCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoricalMeasureField) *AnalysisCategoricalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(AnalysisCategoricalAggregationFunctionPtrOutput)
}

func (o AnalysisCategoricalMeasureFieldPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoricalMeasureField) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisCategoricalMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoricalMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisCategoricalMeasureFieldPtrOutput) FormatConfiguration() AnalysisStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoricalMeasureField) *AnalysisStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(AnalysisStringFormatConfigurationPtrOutput)
}

type AnalysisCategoryDrillDownFilter struct {
	CategoryValues []string                 `pulumi:"categoryValues"`
	Column         AnalysisColumnIdentifier `pulumi:"column"`
}

// AnalysisCategoryDrillDownFilterInput is an input type that accepts AnalysisCategoryDrillDownFilterArgs and AnalysisCategoryDrillDownFilterOutput values.
// You can construct a concrete instance of `AnalysisCategoryDrillDownFilterInput` via:
//
//	AnalysisCategoryDrillDownFilterArgs{...}
type AnalysisCategoryDrillDownFilterInput interface {
	pulumi.Input

	ToAnalysisCategoryDrillDownFilterOutput() AnalysisCategoryDrillDownFilterOutput
	ToAnalysisCategoryDrillDownFilterOutputWithContext(context.Context) AnalysisCategoryDrillDownFilterOutput
}

type AnalysisCategoryDrillDownFilterArgs struct {
	CategoryValues pulumi.StringArrayInput       `pulumi:"categoryValues"`
	Column         AnalysisColumnIdentifierInput `pulumi:"column"`
}

func (AnalysisCategoryDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoryDrillDownFilter)(nil)).Elem()
}

func (i AnalysisCategoryDrillDownFilterArgs) ToAnalysisCategoryDrillDownFilterOutput() AnalysisCategoryDrillDownFilterOutput {
	return i.ToAnalysisCategoryDrillDownFilterOutputWithContext(context.Background())
}

func (i AnalysisCategoryDrillDownFilterArgs) ToAnalysisCategoryDrillDownFilterOutputWithContext(ctx context.Context) AnalysisCategoryDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoryDrillDownFilterOutput)
}

func (i AnalysisCategoryDrillDownFilterArgs) ToAnalysisCategoryDrillDownFilterPtrOutput() AnalysisCategoryDrillDownFilterPtrOutput {
	return i.ToAnalysisCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i AnalysisCategoryDrillDownFilterArgs) ToAnalysisCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisCategoryDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoryDrillDownFilterOutput).ToAnalysisCategoryDrillDownFilterPtrOutputWithContext(ctx)
}

// AnalysisCategoryDrillDownFilterPtrInput is an input type that accepts AnalysisCategoryDrillDownFilterArgs, AnalysisCategoryDrillDownFilterPtr and AnalysisCategoryDrillDownFilterPtrOutput values.
// You can construct a concrete instance of `AnalysisCategoryDrillDownFilterPtrInput` via:
//
//	        AnalysisCategoryDrillDownFilterArgs{...}
//
//	or:
//
//	        nil
type AnalysisCategoryDrillDownFilterPtrInput interface {
	pulumi.Input

	ToAnalysisCategoryDrillDownFilterPtrOutput() AnalysisCategoryDrillDownFilterPtrOutput
	ToAnalysisCategoryDrillDownFilterPtrOutputWithContext(context.Context) AnalysisCategoryDrillDownFilterPtrOutput
}

type analysisCategoryDrillDownFilterPtrType AnalysisCategoryDrillDownFilterArgs

func AnalysisCategoryDrillDownFilterPtr(v *AnalysisCategoryDrillDownFilterArgs) AnalysisCategoryDrillDownFilterPtrInput {
	return (*analysisCategoryDrillDownFilterPtrType)(v)
}

func (*analysisCategoryDrillDownFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoryDrillDownFilter)(nil)).Elem()
}

func (i *analysisCategoryDrillDownFilterPtrType) ToAnalysisCategoryDrillDownFilterPtrOutput() AnalysisCategoryDrillDownFilterPtrOutput {
	return i.ToAnalysisCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i *analysisCategoryDrillDownFilterPtrType) ToAnalysisCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisCategoryDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoryDrillDownFilterPtrOutput)
}

type AnalysisCategoryDrillDownFilterOutput struct{ *pulumi.OutputState }

func (AnalysisCategoryDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoryDrillDownFilter)(nil)).Elem()
}

func (o AnalysisCategoryDrillDownFilterOutput) ToAnalysisCategoryDrillDownFilterOutput() AnalysisCategoryDrillDownFilterOutput {
	return o
}

func (o AnalysisCategoryDrillDownFilterOutput) ToAnalysisCategoryDrillDownFilterOutputWithContext(ctx context.Context) AnalysisCategoryDrillDownFilterOutput {
	return o
}

func (o AnalysisCategoryDrillDownFilterOutput) ToAnalysisCategoryDrillDownFilterPtrOutput() AnalysisCategoryDrillDownFilterPtrOutput {
	return o.ToAnalysisCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoryDrillDownFilterOutput) ToAnalysisCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisCategoryDrillDownFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCategoryDrillDownFilter) *AnalysisCategoryDrillDownFilter {
		return &v
	}).(AnalysisCategoryDrillDownFilterPtrOutput)
}

func (o AnalysisCategoryDrillDownFilterOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisCategoryDrillDownFilter) []string { return v.CategoryValues }).(pulumi.StringArrayOutput)
}

func (o AnalysisCategoryDrillDownFilterOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisCategoryDrillDownFilter) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

type AnalysisCategoryDrillDownFilterPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCategoryDrillDownFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoryDrillDownFilter)(nil)).Elem()
}

func (o AnalysisCategoryDrillDownFilterPtrOutput) ToAnalysisCategoryDrillDownFilterPtrOutput() AnalysisCategoryDrillDownFilterPtrOutput {
	return o
}

func (o AnalysisCategoryDrillDownFilterPtrOutput) ToAnalysisCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisCategoryDrillDownFilterPtrOutput {
	return o
}

func (o AnalysisCategoryDrillDownFilterPtrOutput) Elem() AnalysisCategoryDrillDownFilterOutput {
	return o.ApplyT(func(v *AnalysisCategoryDrillDownFilter) AnalysisCategoryDrillDownFilter {
		if v != nil {
			return *v
		}
		var ret AnalysisCategoryDrillDownFilter
		return ret
	}).(AnalysisCategoryDrillDownFilterOutput)
}

func (o AnalysisCategoryDrillDownFilterPtrOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisCategoryDrillDownFilter) []string {
		if v == nil {
			return nil
		}
		return v.CategoryValues
	}).(pulumi.StringArrayOutput)
}

func (o AnalysisCategoryDrillDownFilterPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoryDrillDownFilter) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

type AnalysisCategoryFilter struct {
	Column        AnalysisColumnIdentifier            `pulumi:"column"`
	Configuration AnalysisCategoryFilterConfiguration `pulumi:"configuration"`
	FilterId      string                              `pulumi:"filterId"`
}

// AnalysisCategoryFilterInput is an input type that accepts AnalysisCategoryFilterArgs and AnalysisCategoryFilterOutput values.
// You can construct a concrete instance of `AnalysisCategoryFilterInput` via:
//
//	AnalysisCategoryFilterArgs{...}
type AnalysisCategoryFilterInput interface {
	pulumi.Input

	ToAnalysisCategoryFilterOutput() AnalysisCategoryFilterOutput
	ToAnalysisCategoryFilterOutputWithContext(context.Context) AnalysisCategoryFilterOutput
}

type AnalysisCategoryFilterArgs struct {
	Column        AnalysisColumnIdentifierInput            `pulumi:"column"`
	Configuration AnalysisCategoryFilterConfigurationInput `pulumi:"configuration"`
	FilterId      pulumi.StringInput                       `pulumi:"filterId"`
}

func (AnalysisCategoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoryFilter)(nil)).Elem()
}

func (i AnalysisCategoryFilterArgs) ToAnalysisCategoryFilterOutput() AnalysisCategoryFilterOutput {
	return i.ToAnalysisCategoryFilterOutputWithContext(context.Background())
}

func (i AnalysisCategoryFilterArgs) ToAnalysisCategoryFilterOutputWithContext(ctx context.Context) AnalysisCategoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoryFilterOutput)
}

func (i AnalysisCategoryFilterArgs) ToAnalysisCategoryFilterPtrOutput() AnalysisCategoryFilterPtrOutput {
	return i.ToAnalysisCategoryFilterPtrOutputWithContext(context.Background())
}

func (i AnalysisCategoryFilterArgs) ToAnalysisCategoryFilterPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoryFilterOutput).ToAnalysisCategoryFilterPtrOutputWithContext(ctx)
}

// AnalysisCategoryFilterPtrInput is an input type that accepts AnalysisCategoryFilterArgs, AnalysisCategoryFilterPtr and AnalysisCategoryFilterPtrOutput values.
// You can construct a concrete instance of `AnalysisCategoryFilterPtrInput` via:
//
//	        AnalysisCategoryFilterArgs{...}
//
//	or:
//
//	        nil
type AnalysisCategoryFilterPtrInput interface {
	pulumi.Input

	ToAnalysisCategoryFilterPtrOutput() AnalysisCategoryFilterPtrOutput
	ToAnalysisCategoryFilterPtrOutputWithContext(context.Context) AnalysisCategoryFilterPtrOutput
}

type analysisCategoryFilterPtrType AnalysisCategoryFilterArgs

func AnalysisCategoryFilterPtr(v *AnalysisCategoryFilterArgs) AnalysisCategoryFilterPtrInput {
	return (*analysisCategoryFilterPtrType)(v)
}

func (*analysisCategoryFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoryFilter)(nil)).Elem()
}

func (i *analysisCategoryFilterPtrType) ToAnalysisCategoryFilterPtrOutput() AnalysisCategoryFilterPtrOutput {
	return i.ToAnalysisCategoryFilterPtrOutputWithContext(context.Background())
}

func (i *analysisCategoryFilterPtrType) ToAnalysisCategoryFilterPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoryFilterPtrOutput)
}

type AnalysisCategoryFilterOutput struct{ *pulumi.OutputState }

func (AnalysisCategoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoryFilter)(nil)).Elem()
}

func (o AnalysisCategoryFilterOutput) ToAnalysisCategoryFilterOutput() AnalysisCategoryFilterOutput {
	return o
}

func (o AnalysisCategoryFilterOutput) ToAnalysisCategoryFilterOutputWithContext(ctx context.Context) AnalysisCategoryFilterOutput {
	return o
}

func (o AnalysisCategoryFilterOutput) ToAnalysisCategoryFilterPtrOutput() AnalysisCategoryFilterPtrOutput {
	return o.ToAnalysisCategoryFilterPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoryFilterOutput) ToAnalysisCategoryFilterPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCategoryFilter) *AnalysisCategoryFilter {
		return &v
	}).(AnalysisCategoryFilterPtrOutput)
}

func (o AnalysisCategoryFilterOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisCategoryFilter) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisCategoryFilterOutput) Configuration() AnalysisCategoryFilterConfigurationOutput {
	return o.ApplyT(func(v AnalysisCategoryFilter) AnalysisCategoryFilterConfiguration { return v.Configuration }).(AnalysisCategoryFilterConfigurationOutput)
}

func (o AnalysisCategoryFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCategoryFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

type AnalysisCategoryFilterPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCategoryFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoryFilter)(nil)).Elem()
}

func (o AnalysisCategoryFilterPtrOutput) ToAnalysisCategoryFilterPtrOutput() AnalysisCategoryFilterPtrOutput {
	return o
}

func (o AnalysisCategoryFilterPtrOutput) ToAnalysisCategoryFilterPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterPtrOutput {
	return o
}

func (o AnalysisCategoryFilterPtrOutput) Elem() AnalysisCategoryFilterOutput {
	return o.ApplyT(func(v *AnalysisCategoryFilter) AnalysisCategoryFilter {
		if v != nil {
			return *v
		}
		var ret AnalysisCategoryFilter
		return ret
	}).(AnalysisCategoryFilterOutput)
}

func (o AnalysisCategoryFilterPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoryFilter) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisCategoryFilterPtrOutput) Configuration() AnalysisCategoryFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoryFilter) *AnalysisCategoryFilterConfiguration {
		if v == nil {
			return nil
		}
		return &v.Configuration
	}).(AnalysisCategoryFilterConfigurationPtrOutput)
}

func (o AnalysisCategoryFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoryFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

type AnalysisCategoryFilterConfiguration struct {
	CustomFilterConfiguration     *AnalysisCustomFilterConfiguration     `pulumi:"customFilterConfiguration"`
	CustomFilterListConfiguration *AnalysisCustomFilterListConfiguration `pulumi:"customFilterListConfiguration"`
	FilterListConfiguration       *AnalysisFilterListConfiguration       `pulumi:"filterListConfiguration"`
}

// AnalysisCategoryFilterConfigurationInput is an input type that accepts AnalysisCategoryFilterConfigurationArgs and AnalysisCategoryFilterConfigurationOutput values.
// You can construct a concrete instance of `AnalysisCategoryFilterConfigurationInput` via:
//
//	AnalysisCategoryFilterConfigurationArgs{...}
type AnalysisCategoryFilterConfigurationInput interface {
	pulumi.Input

	ToAnalysisCategoryFilterConfigurationOutput() AnalysisCategoryFilterConfigurationOutput
	ToAnalysisCategoryFilterConfigurationOutputWithContext(context.Context) AnalysisCategoryFilterConfigurationOutput
}

type AnalysisCategoryFilterConfigurationArgs struct {
	CustomFilterConfiguration     AnalysisCustomFilterConfigurationPtrInput     `pulumi:"customFilterConfiguration"`
	CustomFilterListConfiguration AnalysisCustomFilterListConfigurationPtrInput `pulumi:"customFilterListConfiguration"`
	FilterListConfiguration       AnalysisFilterListConfigurationPtrInput       `pulumi:"filterListConfiguration"`
}

func (AnalysisCategoryFilterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoryFilterConfiguration)(nil)).Elem()
}

func (i AnalysisCategoryFilterConfigurationArgs) ToAnalysisCategoryFilterConfigurationOutput() AnalysisCategoryFilterConfigurationOutput {
	return i.ToAnalysisCategoryFilterConfigurationOutputWithContext(context.Background())
}

func (i AnalysisCategoryFilterConfigurationArgs) ToAnalysisCategoryFilterConfigurationOutputWithContext(ctx context.Context) AnalysisCategoryFilterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoryFilterConfigurationOutput)
}

func (i AnalysisCategoryFilterConfigurationArgs) ToAnalysisCategoryFilterConfigurationPtrOutput() AnalysisCategoryFilterConfigurationPtrOutput {
	return i.ToAnalysisCategoryFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisCategoryFilterConfigurationArgs) ToAnalysisCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoryFilterConfigurationOutput).ToAnalysisCategoryFilterConfigurationPtrOutputWithContext(ctx)
}

// AnalysisCategoryFilterConfigurationPtrInput is an input type that accepts AnalysisCategoryFilterConfigurationArgs, AnalysisCategoryFilterConfigurationPtr and AnalysisCategoryFilterConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisCategoryFilterConfigurationPtrInput` via:
//
//	        AnalysisCategoryFilterConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCategoryFilterConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisCategoryFilterConfigurationPtrOutput() AnalysisCategoryFilterConfigurationPtrOutput
	ToAnalysisCategoryFilterConfigurationPtrOutputWithContext(context.Context) AnalysisCategoryFilterConfigurationPtrOutput
}

type analysisCategoryFilterConfigurationPtrType AnalysisCategoryFilterConfigurationArgs

func AnalysisCategoryFilterConfigurationPtr(v *AnalysisCategoryFilterConfigurationArgs) AnalysisCategoryFilterConfigurationPtrInput {
	return (*analysisCategoryFilterConfigurationPtrType)(v)
}

func (*analysisCategoryFilterConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoryFilterConfiguration)(nil)).Elem()
}

func (i *analysisCategoryFilterConfigurationPtrType) ToAnalysisCategoryFilterConfigurationPtrOutput() AnalysisCategoryFilterConfigurationPtrOutput {
	return i.ToAnalysisCategoryFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisCategoryFilterConfigurationPtrType) ToAnalysisCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCategoryFilterConfigurationPtrOutput)
}

type AnalysisCategoryFilterConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisCategoryFilterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoryFilterConfiguration)(nil)).Elem()
}

func (o AnalysisCategoryFilterConfigurationOutput) ToAnalysisCategoryFilterConfigurationOutput() AnalysisCategoryFilterConfigurationOutput {
	return o
}

func (o AnalysisCategoryFilterConfigurationOutput) ToAnalysisCategoryFilterConfigurationOutputWithContext(ctx context.Context) AnalysisCategoryFilterConfigurationOutput {
	return o
}

func (o AnalysisCategoryFilterConfigurationOutput) ToAnalysisCategoryFilterConfigurationPtrOutput() AnalysisCategoryFilterConfigurationPtrOutput {
	return o.ToAnalysisCategoryFilterConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoryFilterConfigurationOutput) ToAnalysisCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCategoryFilterConfiguration) *AnalysisCategoryFilterConfiguration {
		return &v
	}).(AnalysisCategoryFilterConfigurationPtrOutput)
}

func (o AnalysisCategoryFilterConfigurationOutput) CustomFilterConfiguration() AnalysisCustomFilterConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCategoryFilterConfiguration) *AnalysisCustomFilterConfiguration {
		return v.CustomFilterConfiguration
	}).(AnalysisCustomFilterConfigurationPtrOutput)
}

func (o AnalysisCategoryFilterConfigurationOutput) CustomFilterListConfiguration() AnalysisCustomFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCategoryFilterConfiguration) *AnalysisCustomFilterListConfiguration {
		return v.CustomFilterListConfiguration
	}).(AnalysisCustomFilterListConfigurationPtrOutput)
}

func (o AnalysisCategoryFilterConfigurationOutput) FilterListConfiguration() AnalysisFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCategoryFilterConfiguration) *AnalysisFilterListConfiguration {
		return v.FilterListConfiguration
	}).(AnalysisFilterListConfigurationPtrOutput)
}

type AnalysisCategoryFilterConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCategoryFilterConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoryFilterConfiguration)(nil)).Elem()
}

func (o AnalysisCategoryFilterConfigurationPtrOutput) ToAnalysisCategoryFilterConfigurationPtrOutput() AnalysisCategoryFilterConfigurationPtrOutput {
	return o
}

func (o AnalysisCategoryFilterConfigurationPtrOutput) ToAnalysisCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterConfigurationPtrOutput {
	return o
}

func (o AnalysisCategoryFilterConfigurationPtrOutput) Elem() AnalysisCategoryFilterConfigurationOutput {
	return o.ApplyT(func(v *AnalysisCategoryFilterConfiguration) AnalysisCategoryFilterConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisCategoryFilterConfiguration
		return ret
	}).(AnalysisCategoryFilterConfigurationOutput)
}

func (o AnalysisCategoryFilterConfigurationPtrOutput) CustomFilterConfiguration() AnalysisCustomFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoryFilterConfiguration) *AnalysisCustomFilterConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomFilterConfiguration
	}).(AnalysisCustomFilterConfigurationPtrOutput)
}

func (o AnalysisCategoryFilterConfigurationPtrOutput) CustomFilterListConfiguration() AnalysisCustomFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoryFilterConfiguration) *AnalysisCustomFilterListConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomFilterListConfiguration
	}).(AnalysisCustomFilterListConfigurationPtrOutput)
}

func (o AnalysisCategoryFilterConfigurationPtrOutput) FilterListConfiguration() AnalysisFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCategoryFilterConfiguration) *AnalysisFilterListConfiguration {
		if v == nil {
			return nil
		}
		return v.FilterListConfiguration
	}).(AnalysisFilterListConfigurationPtrOutput)
}

type AnalysisChartAxisLabelOptions struct {
	AxisLabelOptions   []AnalysisAxisLabelOptions `pulumi:"axisLabelOptions"`
	SortIconVisibility *AnalysisVisibility        `pulumi:"sortIconVisibility"`
	Visibility         *AnalysisVisibility        `pulumi:"visibility"`
}

// AnalysisChartAxisLabelOptionsInput is an input type that accepts AnalysisChartAxisLabelOptionsArgs and AnalysisChartAxisLabelOptionsOutput values.
// You can construct a concrete instance of `AnalysisChartAxisLabelOptionsInput` via:
//
//	AnalysisChartAxisLabelOptionsArgs{...}
type AnalysisChartAxisLabelOptionsInput interface {
	pulumi.Input

	ToAnalysisChartAxisLabelOptionsOutput() AnalysisChartAxisLabelOptionsOutput
	ToAnalysisChartAxisLabelOptionsOutputWithContext(context.Context) AnalysisChartAxisLabelOptionsOutput
}

type AnalysisChartAxisLabelOptionsArgs struct {
	AxisLabelOptions   AnalysisAxisLabelOptionsArrayInput `pulumi:"axisLabelOptions"`
	SortIconVisibility AnalysisVisibilityPtrInput         `pulumi:"sortIconVisibility"`
	Visibility         AnalysisVisibilityPtrInput         `pulumi:"visibility"`
}

func (AnalysisChartAxisLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisChartAxisLabelOptions)(nil)).Elem()
}

func (i AnalysisChartAxisLabelOptionsArgs) ToAnalysisChartAxisLabelOptionsOutput() AnalysisChartAxisLabelOptionsOutput {
	return i.ToAnalysisChartAxisLabelOptionsOutputWithContext(context.Background())
}

func (i AnalysisChartAxisLabelOptionsArgs) ToAnalysisChartAxisLabelOptionsOutputWithContext(ctx context.Context) AnalysisChartAxisLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisChartAxisLabelOptionsOutput)
}

func (i AnalysisChartAxisLabelOptionsArgs) ToAnalysisChartAxisLabelOptionsPtrOutput() AnalysisChartAxisLabelOptionsPtrOutput {
	return i.ToAnalysisChartAxisLabelOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisChartAxisLabelOptionsArgs) ToAnalysisChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisChartAxisLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisChartAxisLabelOptionsOutput).ToAnalysisChartAxisLabelOptionsPtrOutputWithContext(ctx)
}

// AnalysisChartAxisLabelOptionsPtrInput is an input type that accepts AnalysisChartAxisLabelOptionsArgs, AnalysisChartAxisLabelOptionsPtr and AnalysisChartAxisLabelOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisChartAxisLabelOptionsPtrInput` via:
//
//	        AnalysisChartAxisLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisChartAxisLabelOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisChartAxisLabelOptionsPtrOutput() AnalysisChartAxisLabelOptionsPtrOutput
	ToAnalysisChartAxisLabelOptionsPtrOutputWithContext(context.Context) AnalysisChartAxisLabelOptionsPtrOutput
}

type analysisChartAxisLabelOptionsPtrType AnalysisChartAxisLabelOptionsArgs

func AnalysisChartAxisLabelOptionsPtr(v *AnalysisChartAxisLabelOptionsArgs) AnalysisChartAxisLabelOptionsPtrInput {
	return (*analysisChartAxisLabelOptionsPtrType)(v)
}

func (*analysisChartAxisLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisChartAxisLabelOptions)(nil)).Elem()
}

func (i *analysisChartAxisLabelOptionsPtrType) ToAnalysisChartAxisLabelOptionsPtrOutput() AnalysisChartAxisLabelOptionsPtrOutput {
	return i.ToAnalysisChartAxisLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisChartAxisLabelOptionsPtrType) ToAnalysisChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisChartAxisLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisChartAxisLabelOptionsPtrOutput)
}

type AnalysisChartAxisLabelOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisChartAxisLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisChartAxisLabelOptions)(nil)).Elem()
}

func (o AnalysisChartAxisLabelOptionsOutput) ToAnalysisChartAxisLabelOptionsOutput() AnalysisChartAxisLabelOptionsOutput {
	return o
}

func (o AnalysisChartAxisLabelOptionsOutput) ToAnalysisChartAxisLabelOptionsOutputWithContext(ctx context.Context) AnalysisChartAxisLabelOptionsOutput {
	return o
}

func (o AnalysisChartAxisLabelOptionsOutput) ToAnalysisChartAxisLabelOptionsPtrOutput() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ToAnalysisChartAxisLabelOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisChartAxisLabelOptionsOutput) ToAnalysisChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisChartAxisLabelOptions) *AnalysisChartAxisLabelOptions {
		return &v
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisChartAxisLabelOptionsOutput) AxisLabelOptions() AnalysisAxisLabelOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisChartAxisLabelOptions) []AnalysisAxisLabelOptions { return v.AxisLabelOptions }).(AnalysisAxisLabelOptionsArrayOutput)
}

func (o AnalysisChartAxisLabelOptionsOutput) SortIconVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisChartAxisLabelOptions) *AnalysisVisibility { return v.SortIconVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisChartAxisLabelOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisChartAxisLabelOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisChartAxisLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisChartAxisLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisChartAxisLabelOptions)(nil)).Elem()
}

func (o AnalysisChartAxisLabelOptionsPtrOutput) ToAnalysisChartAxisLabelOptionsPtrOutput() AnalysisChartAxisLabelOptionsPtrOutput {
	return o
}

func (o AnalysisChartAxisLabelOptionsPtrOutput) ToAnalysisChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisChartAxisLabelOptionsPtrOutput {
	return o
}

func (o AnalysisChartAxisLabelOptionsPtrOutput) Elem() AnalysisChartAxisLabelOptionsOutput {
	return o.ApplyT(func(v *AnalysisChartAxisLabelOptions) AnalysisChartAxisLabelOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisChartAxisLabelOptions
		return ret
	}).(AnalysisChartAxisLabelOptionsOutput)
}

func (o AnalysisChartAxisLabelOptionsPtrOutput) AxisLabelOptions() AnalysisAxisLabelOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisChartAxisLabelOptions) []AnalysisAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.AxisLabelOptions
	}).(AnalysisAxisLabelOptionsArrayOutput)
}

func (o AnalysisChartAxisLabelOptionsPtrOutput) SortIconVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisChartAxisLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.SortIconVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisChartAxisLabelOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisChartAxisLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisClusterMarker struct {
	SimpleClusterMarker *AnalysisSimpleClusterMarker `pulumi:"simpleClusterMarker"`
}

// AnalysisClusterMarkerInput is an input type that accepts AnalysisClusterMarkerArgs and AnalysisClusterMarkerOutput values.
// You can construct a concrete instance of `AnalysisClusterMarkerInput` via:
//
//	AnalysisClusterMarkerArgs{...}
type AnalysisClusterMarkerInput interface {
	pulumi.Input

	ToAnalysisClusterMarkerOutput() AnalysisClusterMarkerOutput
	ToAnalysisClusterMarkerOutputWithContext(context.Context) AnalysisClusterMarkerOutput
}

type AnalysisClusterMarkerArgs struct {
	SimpleClusterMarker AnalysisSimpleClusterMarkerPtrInput `pulumi:"simpleClusterMarker"`
}

func (AnalysisClusterMarkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisClusterMarker)(nil)).Elem()
}

func (i AnalysisClusterMarkerArgs) ToAnalysisClusterMarkerOutput() AnalysisClusterMarkerOutput {
	return i.ToAnalysisClusterMarkerOutputWithContext(context.Background())
}

func (i AnalysisClusterMarkerArgs) ToAnalysisClusterMarkerOutputWithContext(ctx context.Context) AnalysisClusterMarkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisClusterMarkerOutput)
}

func (i AnalysisClusterMarkerArgs) ToAnalysisClusterMarkerPtrOutput() AnalysisClusterMarkerPtrOutput {
	return i.ToAnalysisClusterMarkerPtrOutputWithContext(context.Background())
}

func (i AnalysisClusterMarkerArgs) ToAnalysisClusterMarkerPtrOutputWithContext(ctx context.Context) AnalysisClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisClusterMarkerOutput).ToAnalysisClusterMarkerPtrOutputWithContext(ctx)
}

// AnalysisClusterMarkerPtrInput is an input type that accepts AnalysisClusterMarkerArgs, AnalysisClusterMarkerPtr and AnalysisClusterMarkerPtrOutput values.
// You can construct a concrete instance of `AnalysisClusterMarkerPtrInput` via:
//
//	        AnalysisClusterMarkerArgs{...}
//
//	or:
//
//	        nil
type AnalysisClusterMarkerPtrInput interface {
	pulumi.Input

	ToAnalysisClusterMarkerPtrOutput() AnalysisClusterMarkerPtrOutput
	ToAnalysisClusterMarkerPtrOutputWithContext(context.Context) AnalysisClusterMarkerPtrOutput
}

type analysisClusterMarkerPtrType AnalysisClusterMarkerArgs

func AnalysisClusterMarkerPtr(v *AnalysisClusterMarkerArgs) AnalysisClusterMarkerPtrInput {
	return (*analysisClusterMarkerPtrType)(v)
}

func (*analysisClusterMarkerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisClusterMarker)(nil)).Elem()
}

func (i *analysisClusterMarkerPtrType) ToAnalysisClusterMarkerPtrOutput() AnalysisClusterMarkerPtrOutput {
	return i.ToAnalysisClusterMarkerPtrOutputWithContext(context.Background())
}

func (i *analysisClusterMarkerPtrType) ToAnalysisClusterMarkerPtrOutputWithContext(ctx context.Context) AnalysisClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisClusterMarkerPtrOutput)
}

type AnalysisClusterMarkerOutput struct{ *pulumi.OutputState }

func (AnalysisClusterMarkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisClusterMarker)(nil)).Elem()
}

func (o AnalysisClusterMarkerOutput) ToAnalysisClusterMarkerOutput() AnalysisClusterMarkerOutput {
	return o
}

func (o AnalysisClusterMarkerOutput) ToAnalysisClusterMarkerOutputWithContext(ctx context.Context) AnalysisClusterMarkerOutput {
	return o
}

func (o AnalysisClusterMarkerOutput) ToAnalysisClusterMarkerPtrOutput() AnalysisClusterMarkerPtrOutput {
	return o.ToAnalysisClusterMarkerPtrOutputWithContext(context.Background())
}

func (o AnalysisClusterMarkerOutput) ToAnalysisClusterMarkerPtrOutputWithContext(ctx context.Context) AnalysisClusterMarkerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisClusterMarker) *AnalysisClusterMarker {
		return &v
	}).(AnalysisClusterMarkerPtrOutput)
}

func (o AnalysisClusterMarkerOutput) SimpleClusterMarker() AnalysisSimpleClusterMarkerPtrOutput {
	return o.ApplyT(func(v AnalysisClusterMarker) *AnalysisSimpleClusterMarker { return v.SimpleClusterMarker }).(AnalysisSimpleClusterMarkerPtrOutput)
}

type AnalysisClusterMarkerPtrOutput struct{ *pulumi.OutputState }

func (AnalysisClusterMarkerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisClusterMarker)(nil)).Elem()
}

func (o AnalysisClusterMarkerPtrOutput) ToAnalysisClusterMarkerPtrOutput() AnalysisClusterMarkerPtrOutput {
	return o
}

func (o AnalysisClusterMarkerPtrOutput) ToAnalysisClusterMarkerPtrOutputWithContext(ctx context.Context) AnalysisClusterMarkerPtrOutput {
	return o
}

func (o AnalysisClusterMarkerPtrOutput) Elem() AnalysisClusterMarkerOutput {
	return o.ApplyT(func(v *AnalysisClusterMarker) AnalysisClusterMarker {
		if v != nil {
			return *v
		}
		var ret AnalysisClusterMarker
		return ret
	}).(AnalysisClusterMarkerOutput)
}

func (o AnalysisClusterMarkerPtrOutput) SimpleClusterMarker() AnalysisSimpleClusterMarkerPtrOutput {
	return o.ApplyT(func(v *AnalysisClusterMarker) *AnalysisSimpleClusterMarker {
		if v == nil {
			return nil
		}
		return v.SimpleClusterMarker
	}).(AnalysisSimpleClusterMarkerPtrOutput)
}

type AnalysisClusterMarkerConfiguration struct {
	ClusterMarker *AnalysisClusterMarker `pulumi:"clusterMarker"`
}

// AnalysisClusterMarkerConfigurationInput is an input type that accepts AnalysisClusterMarkerConfigurationArgs and AnalysisClusterMarkerConfigurationOutput values.
// You can construct a concrete instance of `AnalysisClusterMarkerConfigurationInput` via:
//
//	AnalysisClusterMarkerConfigurationArgs{...}
type AnalysisClusterMarkerConfigurationInput interface {
	pulumi.Input

	ToAnalysisClusterMarkerConfigurationOutput() AnalysisClusterMarkerConfigurationOutput
	ToAnalysisClusterMarkerConfigurationOutputWithContext(context.Context) AnalysisClusterMarkerConfigurationOutput
}

type AnalysisClusterMarkerConfigurationArgs struct {
	ClusterMarker AnalysisClusterMarkerPtrInput `pulumi:"clusterMarker"`
}

func (AnalysisClusterMarkerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisClusterMarkerConfiguration)(nil)).Elem()
}

func (i AnalysisClusterMarkerConfigurationArgs) ToAnalysisClusterMarkerConfigurationOutput() AnalysisClusterMarkerConfigurationOutput {
	return i.ToAnalysisClusterMarkerConfigurationOutputWithContext(context.Background())
}

func (i AnalysisClusterMarkerConfigurationArgs) ToAnalysisClusterMarkerConfigurationOutputWithContext(ctx context.Context) AnalysisClusterMarkerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisClusterMarkerConfigurationOutput)
}

func (i AnalysisClusterMarkerConfigurationArgs) ToAnalysisClusterMarkerConfigurationPtrOutput() AnalysisClusterMarkerConfigurationPtrOutput {
	return i.ToAnalysisClusterMarkerConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisClusterMarkerConfigurationArgs) ToAnalysisClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) AnalysisClusterMarkerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisClusterMarkerConfigurationOutput).ToAnalysisClusterMarkerConfigurationPtrOutputWithContext(ctx)
}

// AnalysisClusterMarkerConfigurationPtrInput is an input type that accepts AnalysisClusterMarkerConfigurationArgs, AnalysisClusterMarkerConfigurationPtr and AnalysisClusterMarkerConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisClusterMarkerConfigurationPtrInput` via:
//
//	        AnalysisClusterMarkerConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisClusterMarkerConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisClusterMarkerConfigurationPtrOutput() AnalysisClusterMarkerConfigurationPtrOutput
	ToAnalysisClusterMarkerConfigurationPtrOutputWithContext(context.Context) AnalysisClusterMarkerConfigurationPtrOutput
}

type analysisClusterMarkerConfigurationPtrType AnalysisClusterMarkerConfigurationArgs

func AnalysisClusterMarkerConfigurationPtr(v *AnalysisClusterMarkerConfigurationArgs) AnalysisClusterMarkerConfigurationPtrInput {
	return (*analysisClusterMarkerConfigurationPtrType)(v)
}

func (*analysisClusterMarkerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisClusterMarkerConfiguration)(nil)).Elem()
}

func (i *analysisClusterMarkerConfigurationPtrType) ToAnalysisClusterMarkerConfigurationPtrOutput() AnalysisClusterMarkerConfigurationPtrOutput {
	return i.ToAnalysisClusterMarkerConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisClusterMarkerConfigurationPtrType) ToAnalysisClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) AnalysisClusterMarkerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisClusterMarkerConfigurationPtrOutput)
}

type AnalysisClusterMarkerConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisClusterMarkerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisClusterMarkerConfiguration)(nil)).Elem()
}

func (o AnalysisClusterMarkerConfigurationOutput) ToAnalysisClusterMarkerConfigurationOutput() AnalysisClusterMarkerConfigurationOutput {
	return o
}

func (o AnalysisClusterMarkerConfigurationOutput) ToAnalysisClusterMarkerConfigurationOutputWithContext(ctx context.Context) AnalysisClusterMarkerConfigurationOutput {
	return o
}

func (o AnalysisClusterMarkerConfigurationOutput) ToAnalysisClusterMarkerConfigurationPtrOutput() AnalysisClusterMarkerConfigurationPtrOutput {
	return o.ToAnalysisClusterMarkerConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisClusterMarkerConfigurationOutput) ToAnalysisClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) AnalysisClusterMarkerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisClusterMarkerConfiguration) *AnalysisClusterMarkerConfiguration {
		return &v
	}).(AnalysisClusterMarkerConfigurationPtrOutput)
}

func (o AnalysisClusterMarkerConfigurationOutput) ClusterMarker() AnalysisClusterMarkerPtrOutput {
	return o.ApplyT(func(v AnalysisClusterMarkerConfiguration) *AnalysisClusterMarker { return v.ClusterMarker }).(AnalysisClusterMarkerPtrOutput)
}

type AnalysisClusterMarkerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisClusterMarkerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisClusterMarkerConfiguration)(nil)).Elem()
}

func (o AnalysisClusterMarkerConfigurationPtrOutput) ToAnalysisClusterMarkerConfigurationPtrOutput() AnalysisClusterMarkerConfigurationPtrOutput {
	return o
}

func (o AnalysisClusterMarkerConfigurationPtrOutput) ToAnalysisClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) AnalysisClusterMarkerConfigurationPtrOutput {
	return o
}

func (o AnalysisClusterMarkerConfigurationPtrOutput) Elem() AnalysisClusterMarkerConfigurationOutput {
	return o.ApplyT(func(v *AnalysisClusterMarkerConfiguration) AnalysisClusterMarkerConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisClusterMarkerConfiguration
		return ret
	}).(AnalysisClusterMarkerConfigurationOutput)
}

func (o AnalysisClusterMarkerConfigurationPtrOutput) ClusterMarker() AnalysisClusterMarkerPtrOutput {
	return o.ApplyT(func(v *AnalysisClusterMarkerConfiguration) *AnalysisClusterMarker {
		if v == nil {
			return nil
		}
		return v.ClusterMarker
	}).(AnalysisClusterMarkerPtrOutput)
}

type AnalysisColorScale struct {
	ColorFillType  AnalysisColorFillType `pulumi:"colorFillType"`
	Colors         []AnalysisDataColor   `pulumi:"colors"`
	NullValueColor *AnalysisDataColor    `pulumi:"nullValueColor"`
}

// AnalysisColorScaleInput is an input type that accepts AnalysisColorScaleArgs and AnalysisColorScaleOutput values.
// You can construct a concrete instance of `AnalysisColorScaleInput` via:
//
//	AnalysisColorScaleArgs{...}
type AnalysisColorScaleInput interface {
	pulumi.Input

	ToAnalysisColorScaleOutput() AnalysisColorScaleOutput
	ToAnalysisColorScaleOutputWithContext(context.Context) AnalysisColorScaleOutput
}

type AnalysisColorScaleArgs struct {
	ColorFillType  AnalysisColorFillTypeInput  `pulumi:"colorFillType"`
	Colors         AnalysisDataColorArrayInput `pulumi:"colors"`
	NullValueColor AnalysisDataColorPtrInput   `pulumi:"nullValueColor"`
}

func (AnalysisColorScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColorScale)(nil)).Elem()
}

func (i AnalysisColorScaleArgs) ToAnalysisColorScaleOutput() AnalysisColorScaleOutput {
	return i.ToAnalysisColorScaleOutputWithContext(context.Background())
}

func (i AnalysisColorScaleArgs) ToAnalysisColorScaleOutputWithContext(ctx context.Context) AnalysisColorScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColorScaleOutput)
}

func (i AnalysisColorScaleArgs) ToAnalysisColorScalePtrOutput() AnalysisColorScalePtrOutput {
	return i.ToAnalysisColorScalePtrOutputWithContext(context.Background())
}

func (i AnalysisColorScaleArgs) ToAnalysisColorScalePtrOutputWithContext(ctx context.Context) AnalysisColorScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColorScaleOutput).ToAnalysisColorScalePtrOutputWithContext(ctx)
}

// AnalysisColorScalePtrInput is an input type that accepts AnalysisColorScaleArgs, AnalysisColorScalePtr and AnalysisColorScalePtrOutput values.
// You can construct a concrete instance of `AnalysisColorScalePtrInput` via:
//
//	        AnalysisColorScaleArgs{...}
//
//	or:
//
//	        nil
type AnalysisColorScalePtrInput interface {
	pulumi.Input

	ToAnalysisColorScalePtrOutput() AnalysisColorScalePtrOutput
	ToAnalysisColorScalePtrOutputWithContext(context.Context) AnalysisColorScalePtrOutput
}

type analysisColorScalePtrType AnalysisColorScaleArgs

func AnalysisColorScalePtr(v *AnalysisColorScaleArgs) AnalysisColorScalePtrInput {
	return (*analysisColorScalePtrType)(v)
}

func (*analysisColorScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColorScale)(nil)).Elem()
}

func (i *analysisColorScalePtrType) ToAnalysisColorScalePtrOutput() AnalysisColorScalePtrOutput {
	return i.ToAnalysisColorScalePtrOutputWithContext(context.Background())
}

func (i *analysisColorScalePtrType) ToAnalysisColorScalePtrOutputWithContext(ctx context.Context) AnalysisColorScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColorScalePtrOutput)
}

type AnalysisColorScaleOutput struct{ *pulumi.OutputState }

func (AnalysisColorScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColorScale)(nil)).Elem()
}

func (o AnalysisColorScaleOutput) ToAnalysisColorScaleOutput() AnalysisColorScaleOutput {
	return o
}

func (o AnalysisColorScaleOutput) ToAnalysisColorScaleOutputWithContext(ctx context.Context) AnalysisColorScaleOutput {
	return o
}

func (o AnalysisColorScaleOutput) ToAnalysisColorScalePtrOutput() AnalysisColorScalePtrOutput {
	return o.ToAnalysisColorScalePtrOutputWithContext(context.Background())
}

func (o AnalysisColorScaleOutput) ToAnalysisColorScalePtrOutputWithContext(ctx context.Context) AnalysisColorScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisColorScale) *AnalysisColorScale {
		return &v
	}).(AnalysisColorScalePtrOutput)
}

func (o AnalysisColorScaleOutput) ColorFillType() AnalysisColorFillTypeOutput {
	return o.ApplyT(func(v AnalysisColorScale) AnalysisColorFillType { return v.ColorFillType }).(AnalysisColorFillTypeOutput)
}

func (o AnalysisColorScaleOutput) Colors() AnalysisDataColorArrayOutput {
	return o.ApplyT(func(v AnalysisColorScale) []AnalysisDataColor { return v.Colors }).(AnalysisDataColorArrayOutput)
}

func (o AnalysisColorScaleOutput) NullValueColor() AnalysisDataColorPtrOutput {
	return o.ApplyT(func(v AnalysisColorScale) *AnalysisDataColor { return v.NullValueColor }).(AnalysisDataColorPtrOutput)
}

type AnalysisColorScalePtrOutput struct{ *pulumi.OutputState }

func (AnalysisColorScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColorScale)(nil)).Elem()
}

func (o AnalysisColorScalePtrOutput) ToAnalysisColorScalePtrOutput() AnalysisColorScalePtrOutput {
	return o
}

func (o AnalysisColorScalePtrOutput) ToAnalysisColorScalePtrOutputWithContext(ctx context.Context) AnalysisColorScalePtrOutput {
	return o
}

func (o AnalysisColorScalePtrOutput) Elem() AnalysisColorScaleOutput {
	return o.ApplyT(func(v *AnalysisColorScale) AnalysisColorScale {
		if v != nil {
			return *v
		}
		var ret AnalysisColorScale
		return ret
	}).(AnalysisColorScaleOutput)
}

func (o AnalysisColorScalePtrOutput) ColorFillType() AnalysisColorFillTypePtrOutput {
	return o.ApplyT(func(v *AnalysisColorScale) *AnalysisColorFillType {
		if v == nil {
			return nil
		}
		return &v.ColorFillType
	}).(AnalysisColorFillTypePtrOutput)
}

func (o AnalysisColorScalePtrOutput) Colors() AnalysisDataColorArrayOutput {
	return o.ApplyT(func(v *AnalysisColorScale) []AnalysisDataColor {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(AnalysisDataColorArrayOutput)
}

func (o AnalysisColorScalePtrOutput) NullValueColor() AnalysisDataColorPtrOutput {
	return o.ApplyT(func(v *AnalysisColorScale) *AnalysisDataColor {
		if v == nil {
			return nil
		}
		return v.NullValueColor
	}).(AnalysisDataColorPtrOutput)
}

type AnalysisColorsConfiguration struct {
	CustomColors []AnalysisCustomColor `pulumi:"customColors"`
}

// AnalysisColorsConfigurationInput is an input type that accepts AnalysisColorsConfigurationArgs and AnalysisColorsConfigurationOutput values.
// You can construct a concrete instance of `AnalysisColorsConfigurationInput` via:
//
//	AnalysisColorsConfigurationArgs{...}
type AnalysisColorsConfigurationInput interface {
	pulumi.Input

	ToAnalysisColorsConfigurationOutput() AnalysisColorsConfigurationOutput
	ToAnalysisColorsConfigurationOutputWithContext(context.Context) AnalysisColorsConfigurationOutput
}

type AnalysisColorsConfigurationArgs struct {
	CustomColors AnalysisCustomColorArrayInput `pulumi:"customColors"`
}

func (AnalysisColorsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColorsConfiguration)(nil)).Elem()
}

func (i AnalysisColorsConfigurationArgs) ToAnalysisColorsConfigurationOutput() AnalysisColorsConfigurationOutput {
	return i.ToAnalysisColorsConfigurationOutputWithContext(context.Background())
}

func (i AnalysisColorsConfigurationArgs) ToAnalysisColorsConfigurationOutputWithContext(ctx context.Context) AnalysisColorsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColorsConfigurationOutput)
}

func (i AnalysisColorsConfigurationArgs) ToAnalysisColorsConfigurationPtrOutput() AnalysisColorsConfigurationPtrOutput {
	return i.ToAnalysisColorsConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisColorsConfigurationArgs) ToAnalysisColorsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisColorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColorsConfigurationOutput).ToAnalysisColorsConfigurationPtrOutputWithContext(ctx)
}

// AnalysisColorsConfigurationPtrInput is an input type that accepts AnalysisColorsConfigurationArgs, AnalysisColorsConfigurationPtr and AnalysisColorsConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisColorsConfigurationPtrInput` via:
//
//	        AnalysisColorsConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisColorsConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisColorsConfigurationPtrOutput() AnalysisColorsConfigurationPtrOutput
	ToAnalysisColorsConfigurationPtrOutputWithContext(context.Context) AnalysisColorsConfigurationPtrOutput
}

type analysisColorsConfigurationPtrType AnalysisColorsConfigurationArgs

func AnalysisColorsConfigurationPtr(v *AnalysisColorsConfigurationArgs) AnalysisColorsConfigurationPtrInput {
	return (*analysisColorsConfigurationPtrType)(v)
}

func (*analysisColorsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColorsConfiguration)(nil)).Elem()
}

func (i *analysisColorsConfigurationPtrType) ToAnalysisColorsConfigurationPtrOutput() AnalysisColorsConfigurationPtrOutput {
	return i.ToAnalysisColorsConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisColorsConfigurationPtrType) ToAnalysisColorsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisColorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColorsConfigurationPtrOutput)
}

type AnalysisColorsConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisColorsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColorsConfiguration)(nil)).Elem()
}

func (o AnalysisColorsConfigurationOutput) ToAnalysisColorsConfigurationOutput() AnalysisColorsConfigurationOutput {
	return o
}

func (o AnalysisColorsConfigurationOutput) ToAnalysisColorsConfigurationOutputWithContext(ctx context.Context) AnalysisColorsConfigurationOutput {
	return o
}

func (o AnalysisColorsConfigurationOutput) ToAnalysisColorsConfigurationPtrOutput() AnalysisColorsConfigurationPtrOutput {
	return o.ToAnalysisColorsConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisColorsConfigurationOutput) ToAnalysisColorsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisColorsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisColorsConfiguration) *AnalysisColorsConfiguration {
		return &v
	}).(AnalysisColorsConfigurationPtrOutput)
}

func (o AnalysisColorsConfigurationOutput) CustomColors() AnalysisCustomColorArrayOutput {
	return o.ApplyT(func(v AnalysisColorsConfiguration) []AnalysisCustomColor { return v.CustomColors }).(AnalysisCustomColorArrayOutput)
}

type AnalysisColorsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisColorsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColorsConfiguration)(nil)).Elem()
}

func (o AnalysisColorsConfigurationPtrOutput) ToAnalysisColorsConfigurationPtrOutput() AnalysisColorsConfigurationPtrOutput {
	return o
}

func (o AnalysisColorsConfigurationPtrOutput) ToAnalysisColorsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisColorsConfigurationPtrOutput {
	return o
}

func (o AnalysisColorsConfigurationPtrOutput) Elem() AnalysisColorsConfigurationOutput {
	return o.ApplyT(func(v *AnalysisColorsConfiguration) AnalysisColorsConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisColorsConfiguration
		return ret
	}).(AnalysisColorsConfigurationOutput)
}

func (o AnalysisColorsConfigurationPtrOutput) CustomColors() AnalysisCustomColorArrayOutput {
	return o.ApplyT(func(v *AnalysisColorsConfiguration) []AnalysisCustomColor {
		if v == nil {
			return nil
		}
		return v.CustomColors
	}).(AnalysisCustomColorArrayOutput)
}

type AnalysisColumnConfiguration struct {
	ColorsConfiguration *AnalysisColorsConfiguration `pulumi:"colorsConfiguration"`
	Column              AnalysisColumnIdentifier     `pulumi:"column"`
	FormatConfiguration *AnalysisFormatConfiguration `pulumi:"formatConfiguration"`
	Role                *AnalysisColumnRole          `pulumi:"role"`
}

// AnalysisColumnConfigurationInput is an input type that accepts AnalysisColumnConfigurationArgs and AnalysisColumnConfigurationOutput values.
// You can construct a concrete instance of `AnalysisColumnConfigurationInput` via:
//
//	AnalysisColumnConfigurationArgs{...}
type AnalysisColumnConfigurationInput interface {
	pulumi.Input

	ToAnalysisColumnConfigurationOutput() AnalysisColumnConfigurationOutput
	ToAnalysisColumnConfigurationOutputWithContext(context.Context) AnalysisColumnConfigurationOutput
}

type AnalysisColumnConfigurationArgs struct {
	ColorsConfiguration AnalysisColorsConfigurationPtrInput `pulumi:"colorsConfiguration"`
	Column              AnalysisColumnIdentifierInput       `pulumi:"column"`
	FormatConfiguration AnalysisFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	Role                AnalysisColumnRolePtrInput          `pulumi:"role"`
}

func (AnalysisColumnConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnConfiguration)(nil)).Elem()
}

func (i AnalysisColumnConfigurationArgs) ToAnalysisColumnConfigurationOutput() AnalysisColumnConfigurationOutput {
	return i.ToAnalysisColumnConfigurationOutputWithContext(context.Background())
}

func (i AnalysisColumnConfigurationArgs) ToAnalysisColumnConfigurationOutputWithContext(ctx context.Context) AnalysisColumnConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnConfigurationOutput)
}

// AnalysisColumnConfigurationArrayInput is an input type that accepts AnalysisColumnConfigurationArray and AnalysisColumnConfigurationArrayOutput values.
// You can construct a concrete instance of `AnalysisColumnConfigurationArrayInput` via:
//
//	AnalysisColumnConfigurationArray{ AnalysisColumnConfigurationArgs{...} }
type AnalysisColumnConfigurationArrayInput interface {
	pulumi.Input

	ToAnalysisColumnConfigurationArrayOutput() AnalysisColumnConfigurationArrayOutput
	ToAnalysisColumnConfigurationArrayOutputWithContext(context.Context) AnalysisColumnConfigurationArrayOutput
}

type AnalysisColumnConfigurationArray []AnalysisColumnConfigurationInput

func (AnalysisColumnConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisColumnConfiguration)(nil)).Elem()
}

func (i AnalysisColumnConfigurationArray) ToAnalysisColumnConfigurationArrayOutput() AnalysisColumnConfigurationArrayOutput {
	return i.ToAnalysisColumnConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalysisColumnConfigurationArray) ToAnalysisColumnConfigurationArrayOutputWithContext(ctx context.Context) AnalysisColumnConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnConfigurationArrayOutput)
}

type AnalysisColumnConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisColumnConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnConfiguration)(nil)).Elem()
}

func (o AnalysisColumnConfigurationOutput) ToAnalysisColumnConfigurationOutput() AnalysisColumnConfigurationOutput {
	return o
}

func (o AnalysisColumnConfigurationOutput) ToAnalysisColumnConfigurationOutputWithContext(ctx context.Context) AnalysisColumnConfigurationOutput {
	return o
}

func (o AnalysisColumnConfigurationOutput) ColorsConfiguration() AnalysisColorsConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisColumnConfiguration) *AnalysisColorsConfiguration { return v.ColorsConfiguration }).(AnalysisColorsConfigurationPtrOutput)
}

func (o AnalysisColumnConfigurationOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisColumnConfiguration) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisColumnConfigurationOutput) FormatConfiguration() AnalysisFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisColumnConfiguration) *AnalysisFormatConfiguration { return v.FormatConfiguration }).(AnalysisFormatConfigurationPtrOutput)
}

func (o AnalysisColumnConfigurationOutput) Role() AnalysisColumnRolePtrOutput {
	return o.ApplyT(func(v AnalysisColumnConfiguration) *AnalysisColumnRole { return v.Role }).(AnalysisColumnRolePtrOutput)
}

type AnalysisColumnConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisColumnConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisColumnConfiguration)(nil)).Elem()
}

func (o AnalysisColumnConfigurationArrayOutput) ToAnalysisColumnConfigurationArrayOutput() AnalysisColumnConfigurationArrayOutput {
	return o
}

func (o AnalysisColumnConfigurationArrayOutput) ToAnalysisColumnConfigurationArrayOutputWithContext(ctx context.Context) AnalysisColumnConfigurationArrayOutput {
	return o
}

func (o AnalysisColumnConfigurationArrayOutput) Index(i pulumi.IntInput) AnalysisColumnConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisColumnConfiguration {
		return vs[0].([]AnalysisColumnConfiguration)[vs[1].(int)]
	}).(AnalysisColumnConfigurationOutput)
}

type AnalysisColumnHierarchy struct {
	DateTimeHierarchy   *AnalysisDateTimeHierarchy   `pulumi:"dateTimeHierarchy"`
	ExplicitHierarchy   *AnalysisExplicitHierarchy   `pulumi:"explicitHierarchy"`
	PredefinedHierarchy *AnalysisPredefinedHierarchy `pulumi:"predefinedHierarchy"`
}

// AnalysisColumnHierarchyInput is an input type that accepts AnalysisColumnHierarchyArgs and AnalysisColumnHierarchyOutput values.
// You can construct a concrete instance of `AnalysisColumnHierarchyInput` via:
//
//	AnalysisColumnHierarchyArgs{...}
type AnalysisColumnHierarchyInput interface {
	pulumi.Input

	ToAnalysisColumnHierarchyOutput() AnalysisColumnHierarchyOutput
	ToAnalysisColumnHierarchyOutputWithContext(context.Context) AnalysisColumnHierarchyOutput
}

type AnalysisColumnHierarchyArgs struct {
	DateTimeHierarchy   AnalysisDateTimeHierarchyPtrInput   `pulumi:"dateTimeHierarchy"`
	ExplicitHierarchy   AnalysisExplicitHierarchyPtrInput   `pulumi:"explicitHierarchy"`
	PredefinedHierarchy AnalysisPredefinedHierarchyPtrInput `pulumi:"predefinedHierarchy"`
}

func (AnalysisColumnHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnHierarchy)(nil)).Elem()
}

func (i AnalysisColumnHierarchyArgs) ToAnalysisColumnHierarchyOutput() AnalysisColumnHierarchyOutput {
	return i.ToAnalysisColumnHierarchyOutputWithContext(context.Background())
}

func (i AnalysisColumnHierarchyArgs) ToAnalysisColumnHierarchyOutputWithContext(ctx context.Context) AnalysisColumnHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnHierarchyOutput)
}

// AnalysisColumnHierarchyArrayInput is an input type that accepts AnalysisColumnHierarchyArray and AnalysisColumnHierarchyArrayOutput values.
// You can construct a concrete instance of `AnalysisColumnHierarchyArrayInput` via:
//
//	AnalysisColumnHierarchyArray{ AnalysisColumnHierarchyArgs{...} }
type AnalysisColumnHierarchyArrayInput interface {
	pulumi.Input

	ToAnalysisColumnHierarchyArrayOutput() AnalysisColumnHierarchyArrayOutput
	ToAnalysisColumnHierarchyArrayOutputWithContext(context.Context) AnalysisColumnHierarchyArrayOutput
}

type AnalysisColumnHierarchyArray []AnalysisColumnHierarchyInput

func (AnalysisColumnHierarchyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisColumnHierarchy)(nil)).Elem()
}

func (i AnalysisColumnHierarchyArray) ToAnalysisColumnHierarchyArrayOutput() AnalysisColumnHierarchyArrayOutput {
	return i.ToAnalysisColumnHierarchyArrayOutputWithContext(context.Background())
}

func (i AnalysisColumnHierarchyArray) ToAnalysisColumnHierarchyArrayOutputWithContext(ctx context.Context) AnalysisColumnHierarchyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnHierarchyArrayOutput)
}

type AnalysisColumnHierarchyOutput struct{ *pulumi.OutputState }

func (AnalysisColumnHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnHierarchy)(nil)).Elem()
}

func (o AnalysisColumnHierarchyOutput) ToAnalysisColumnHierarchyOutput() AnalysisColumnHierarchyOutput {
	return o
}

func (o AnalysisColumnHierarchyOutput) ToAnalysisColumnHierarchyOutputWithContext(ctx context.Context) AnalysisColumnHierarchyOutput {
	return o
}

func (o AnalysisColumnHierarchyOutput) DateTimeHierarchy() AnalysisDateTimeHierarchyPtrOutput {
	return o.ApplyT(func(v AnalysisColumnHierarchy) *AnalysisDateTimeHierarchy { return v.DateTimeHierarchy }).(AnalysisDateTimeHierarchyPtrOutput)
}

func (o AnalysisColumnHierarchyOutput) ExplicitHierarchy() AnalysisExplicitHierarchyPtrOutput {
	return o.ApplyT(func(v AnalysisColumnHierarchy) *AnalysisExplicitHierarchy { return v.ExplicitHierarchy }).(AnalysisExplicitHierarchyPtrOutput)
}

func (o AnalysisColumnHierarchyOutput) PredefinedHierarchy() AnalysisPredefinedHierarchyPtrOutput {
	return o.ApplyT(func(v AnalysisColumnHierarchy) *AnalysisPredefinedHierarchy { return v.PredefinedHierarchy }).(AnalysisPredefinedHierarchyPtrOutput)
}

type AnalysisColumnHierarchyArrayOutput struct{ *pulumi.OutputState }

func (AnalysisColumnHierarchyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisColumnHierarchy)(nil)).Elem()
}

func (o AnalysisColumnHierarchyArrayOutput) ToAnalysisColumnHierarchyArrayOutput() AnalysisColumnHierarchyArrayOutput {
	return o
}

func (o AnalysisColumnHierarchyArrayOutput) ToAnalysisColumnHierarchyArrayOutputWithContext(ctx context.Context) AnalysisColumnHierarchyArrayOutput {
	return o
}

func (o AnalysisColumnHierarchyArrayOutput) Index(i pulumi.IntInput) AnalysisColumnHierarchyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisColumnHierarchy {
		return vs[0].([]AnalysisColumnHierarchy)[vs[1].(int)]
	}).(AnalysisColumnHierarchyOutput)
}

type AnalysisColumnIdentifier struct {
	ColumnName        string `pulumi:"columnName"`
	DataSetIdentifier string `pulumi:"dataSetIdentifier"`
}

// AnalysisColumnIdentifierInput is an input type that accepts AnalysisColumnIdentifierArgs and AnalysisColumnIdentifierOutput values.
// You can construct a concrete instance of `AnalysisColumnIdentifierInput` via:
//
//	AnalysisColumnIdentifierArgs{...}
type AnalysisColumnIdentifierInput interface {
	pulumi.Input

	ToAnalysisColumnIdentifierOutput() AnalysisColumnIdentifierOutput
	ToAnalysisColumnIdentifierOutputWithContext(context.Context) AnalysisColumnIdentifierOutput
}

type AnalysisColumnIdentifierArgs struct {
	ColumnName        pulumi.StringInput `pulumi:"columnName"`
	DataSetIdentifier pulumi.StringInput `pulumi:"dataSetIdentifier"`
}

func (AnalysisColumnIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnIdentifier)(nil)).Elem()
}

func (i AnalysisColumnIdentifierArgs) ToAnalysisColumnIdentifierOutput() AnalysisColumnIdentifierOutput {
	return i.ToAnalysisColumnIdentifierOutputWithContext(context.Background())
}

func (i AnalysisColumnIdentifierArgs) ToAnalysisColumnIdentifierOutputWithContext(ctx context.Context) AnalysisColumnIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnIdentifierOutput)
}

func (i AnalysisColumnIdentifierArgs) ToAnalysisColumnIdentifierPtrOutput() AnalysisColumnIdentifierPtrOutput {
	return i.ToAnalysisColumnIdentifierPtrOutputWithContext(context.Background())
}

func (i AnalysisColumnIdentifierArgs) ToAnalysisColumnIdentifierPtrOutputWithContext(ctx context.Context) AnalysisColumnIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnIdentifierOutput).ToAnalysisColumnIdentifierPtrOutputWithContext(ctx)
}

// AnalysisColumnIdentifierPtrInput is an input type that accepts AnalysisColumnIdentifierArgs, AnalysisColumnIdentifierPtr and AnalysisColumnIdentifierPtrOutput values.
// You can construct a concrete instance of `AnalysisColumnIdentifierPtrInput` via:
//
//	        AnalysisColumnIdentifierArgs{...}
//
//	or:
//
//	        nil
type AnalysisColumnIdentifierPtrInput interface {
	pulumi.Input

	ToAnalysisColumnIdentifierPtrOutput() AnalysisColumnIdentifierPtrOutput
	ToAnalysisColumnIdentifierPtrOutputWithContext(context.Context) AnalysisColumnIdentifierPtrOutput
}

type analysisColumnIdentifierPtrType AnalysisColumnIdentifierArgs

func AnalysisColumnIdentifierPtr(v *AnalysisColumnIdentifierArgs) AnalysisColumnIdentifierPtrInput {
	return (*analysisColumnIdentifierPtrType)(v)
}

func (*analysisColumnIdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColumnIdentifier)(nil)).Elem()
}

func (i *analysisColumnIdentifierPtrType) ToAnalysisColumnIdentifierPtrOutput() AnalysisColumnIdentifierPtrOutput {
	return i.ToAnalysisColumnIdentifierPtrOutputWithContext(context.Background())
}

func (i *analysisColumnIdentifierPtrType) ToAnalysisColumnIdentifierPtrOutputWithContext(ctx context.Context) AnalysisColumnIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnIdentifierPtrOutput)
}

// AnalysisColumnIdentifierArrayInput is an input type that accepts AnalysisColumnIdentifierArray and AnalysisColumnIdentifierArrayOutput values.
// You can construct a concrete instance of `AnalysisColumnIdentifierArrayInput` via:
//
//	AnalysisColumnIdentifierArray{ AnalysisColumnIdentifierArgs{...} }
type AnalysisColumnIdentifierArrayInput interface {
	pulumi.Input

	ToAnalysisColumnIdentifierArrayOutput() AnalysisColumnIdentifierArrayOutput
	ToAnalysisColumnIdentifierArrayOutputWithContext(context.Context) AnalysisColumnIdentifierArrayOutput
}

type AnalysisColumnIdentifierArray []AnalysisColumnIdentifierInput

func (AnalysisColumnIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisColumnIdentifier)(nil)).Elem()
}

func (i AnalysisColumnIdentifierArray) ToAnalysisColumnIdentifierArrayOutput() AnalysisColumnIdentifierArrayOutput {
	return i.ToAnalysisColumnIdentifierArrayOutputWithContext(context.Background())
}

func (i AnalysisColumnIdentifierArray) ToAnalysisColumnIdentifierArrayOutputWithContext(ctx context.Context) AnalysisColumnIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnIdentifierArrayOutput)
}

type AnalysisColumnIdentifierOutput struct{ *pulumi.OutputState }

func (AnalysisColumnIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnIdentifier)(nil)).Elem()
}

func (o AnalysisColumnIdentifierOutput) ToAnalysisColumnIdentifierOutput() AnalysisColumnIdentifierOutput {
	return o
}

func (o AnalysisColumnIdentifierOutput) ToAnalysisColumnIdentifierOutputWithContext(ctx context.Context) AnalysisColumnIdentifierOutput {
	return o
}

func (o AnalysisColumnIdentifierOutput) ToAnalysisColumnIdentifierPtrOutput() AnalysisColumnIdentifierPtrOutput {
	return o.ToAnalysisColumnIdentifierPtrOutputWithContext(context.Background())
}

func (o AnalysisColumnIdentifierOutput) ToAnalysisColumnIdentifierPtrOutputWithContext(ctx context.Context) AnalysisColumnIdentifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisColumnIdentifier) *AnalysisColumnIdentifier {
		return &v
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisColumnIdentifierOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisColumnIdentifier) string { return v.ColumnName }).(pulumi.StringOutput)
}

func (o AnalysisColumnIdentifierOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisColumnIdentifier) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

type AnalysisColumnIdentifierPtrOutput struct{ *pulumi.OutputState }

func (AnalysisColumnIdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColumnIdentifier)(nil)).Elem()
}

func (o AnalysisColumnIdentifierPtrOutput) ToAnalysisColumnIdentifierPtrOutput() AnalysisColumnIdentifierPtrOutput {
	return o
}

func (o AnalysisColumnIdentifierPtrOutput) ToAnalysisColumnIdentifierPtrOutputWithContext(ctx context.Context) AnalysisColumnIdentifierPtrOutput {
	return o
}

func (o AnalysisColumnIdentifierPtrOutput) Elem() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v *AnalysisColumnIdentifier) AnalysisColumnIdentifier {
		if v != nil {
			return *v
		}
		var ret AnalysisColumnIdentifier
		return ret
	}).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisColumnIdentifierPtrOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisColumnIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.ColumnName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisColumnIdentifierPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisColumnIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

type AnalysisColumnIdentifierArrayOutput struct{ *pulumi.OutputState }

func (AnalysisColumnIdentifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisColumnIdentifier)(nil)).Elem()
}

func (o AnalysisColumnIdentifierArrayOutput) ToAnalysisColumnIdentifierArrayOutput() AnalysisColumnIdentifierArrayOutput {
	return o
}

func (o AnalysisColumnIdentifierArrayOutput) ToAnalysisColumnIdentifierArrayOutputWithContext(ctx context.Context) AnalysisColumnIdentifierArrayOutput {
	return o
}

func (o AnalysisColumnIdentifierArrayOutput) Index(i pulumi.IntInput) AnalysisColumnIdentifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisColumnIdentifier {
		return vs[0].([]AnalysisColumnIdentifier)[vs[1].(int)]
	}).(AnalysisColumnIdentifierOutput)
}

type AnalysisColumnSort struct {
	AggregationFunction *AnalysisAggregationFunction `pulumi:"aggregationFunction"`
	Direction           AnalysisSortDirection        `pulumi:"direction"`
	SortBy              AnalysisColumnIdentifier     `pulumi:"sortBy"`
}

// AnalysisColumnSortInput is an input type that accepts AnalysisColumnSortArgs and AnalysisColumnSortOutput values.
// You can construct a concrete instance of `AnalysisColumnSortInput` via:
//
//	AnalysisColumnSortArgs{...}
type AnalysisColumnSortInput interface {
	pulumi.Input

	ToAnalysisColumnSortOutput() AnalysisColumnSortOutput
	ToAnalysisColumnSortOutputWithContext(context.Context) AnalysisColumnSortOutput
}

type AnalysisColumnSortArgs struct {
	AggregationFunction AnalysisAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Direction           AnalysisSortDirectionInput          `pulumi:"direction"`
	SortBy              AnalysisColumnIdentifierInput       `pulumi:"sortBy"`
}

func (AnalysisColumnSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnSort)(nil)).Elem()
}

func (i AnalysisColumnSortArgs) ToAnalysisColumnSortOutput() AnalysisColumnSortOutput {
	return i.ToAnalysisColumnSortOutputWithContext(context.Background())
}

func (i AnalysisColumnSortArgs) ToAnalysisColumnSortOutputWithContext(ctx context.Context) AnalysisColumnSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnSortOutput)
}

func (i AnalysisColumnSortArgs) ToAnalysisColumnSortPtrOutput() AnalysisColumnSortPtrOutput {
	return i.ToAnalysisColumnSortPtrOutputWithContext(context.Background())
}

func (i AnalysisColumnSortArgs) ToAnalysisColumnSortPtrOutputWithContext(ctx context.Context) AnalysisColumnSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnSortOutput).ToAnalysisColumnSortPtrOutputWithContext(ctx)
}

// AnalysisColumnSortPtrInput is an input type that accepts AnalysisColumnSortArgs, AnalysisColumnSortPtr and AnalysisColumnSortPtrOutput values.
// You can construct a concrete instance of `AnalysisColumnSortPtrInput` via:
//
//	        AnalysisColumnSortArgs{...}
//
//	or:
//
//	        nil
type AnalysisColumnSortPtrInput interface {
	pulumi.Input

	ToAnalysisColumnSortPtrOutput() AnalysisColumnSortPtrOutput
	ToAnalysisColumnSortPtrOutputWithContext(context.Context) AnalysisColumnSortPtrOutput
}

type analysisColumnSortPtrType AnalysisColumnSortArgs

func AnalysisColumnSortPtr(v *AnalysisColumnSortArgs) AnalysisColumnSortPtrInput {
	return (*analysisColumnSortPtrType)(v)
}

func (*analysisColumnSortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColumnSort)(nil)).Elem()
}

func (i *analysisColumnSortPtrType) ToAnalysisColumnSortPtrOutput() AnalysisColumnSortPtrOutput {
	return i.ToAnalysisColumnSortPtrOutputWithContext(context.Background())
}

func (i *analysisColumnSortPtrType) ToAnalysisColumnSortPtrOutputWithContext(ctx context.Context) AnalysisColumnSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnSortPtrOutput)
}

type AnalysisColumnSortOutput struct{ *pulumi.OutputState }

func (AnalysisColumnSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnSort)(nil)).Elem()
}

func (o AnalysisColumnSortOutput) ToAnalysisColumnSortOutput() AnalysisColumnSortOutput {
	return o
}

func (o AnalysisColumnSortOutput) ToAnalysisColumnSortOutputWithContext(ctx context.Context) AnalysisColumnSortOutput {
	return o
}

func (o AnalysisColumnSortOutput) ToAnalysisColumnSortPtrOutput() AnalysisColumnSortPtrOutput {
	return o.ToAnalysisColumnSortPtrOutputWithContext(context.Background())
}

func (o AnalysisColumnSortOutput) ToAnalysisColumnSortPtrOutputWithContext(ctx context.Context) AnalysisColumnSortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisColumnSort) *AnalysisColumnSort {
		return &v
	}).(AnalysisColumnSortPtrOutput)
}

func (o AnalysisColumnSortOutput) AggregationFunction() AnalysisAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisColumnSort) *AnalysisAggregationFunction { return v.AggregationFunction }).(AnalysisAggregationFunctionPtrOutput)
}

func (o AnalysisColumnSortOutput) Direction() AnalysisSortDirectionOutput {
	return o.ApplyT(func(v AnalysisColumnSort) AnalysisSortDirection { return v.Direction }).(AnalysisSortDirectionOutput)
}

func (o AnalysisColumnSortOutput) SortBy() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisColumnSort) AnalysisColumnIdentifier { return v.SortBy }).(AnalysisColumnIdentifierOutput)
}

type AnalysisColumnSortPtrOutput struct{ *pulumi.OutputState }

func (AnalysisColumnSortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColumnSort)(nil)).Elem()
}

func (o AnalysisColumnSortPtrOutput) ToAnalysisColumnSortPtrOutput() AnalysisColumnSortPtrOutput {
	return o
}

func (o AnalysisColumnSortPtrOutput) ToAnalysisColumnSortPtrOutputWithContext(ctx context.Context) AnalysisColumnSortPtrOutput {
	return o
}

func (o AnalysisColumnSortPtrOutput) Elem() AnalysisColumnSortOutput {
	return o.ApplyT(func(v *AnalysisColumnSort) AnalysisColumnSort {
		if v != nil {
			return *v
		}
		var ret AnalysisColumnSort
		return ret
	}).(AnalysisColumnSortOutput)
}

func (o AnalysisColumnSortPtrOutput) AggregationFunction() AnalysisAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisColumnSort) *AnalysisAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(AnalysisAggregationFunctionPtrOutput)
}

func (o AnalysisColumnSortPtrOutput) Direction() AnalysisSortDirectionPtrOutput {
	return o.ApplyT(func(v *AnalysisColumnSort) *AnalysisSortDirection {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(AnalysisSortDirectionPtrOutput)
}

func (o AnalysisColumnSortPtrOutput) SortBy() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisColumnSort) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.SortBy
	}).(AnalysisColumnIdentifierPtrOutput)
}

type AnalysisColumnTooltipItem struct {
	Aggregation *AnalysisAggregationFunction `pulumi:"aggregation"`
	Column      AnalysisColumnIdentifier     `pulumi:"column"`
	Label       *string                      `pulumi:"label"`
	Visibility  *AnalysisVisibility          `pulumi:"visibility"`
}

// AnalysisColumnTooltipItemInput is an input type that accepts AnalysisColumnTooltipItemArgs and AnalysisColumnTooltipItemOutput values.
// You can construct a concrete instance of `AnalysisColumnTooltipItemInput` via:
//
//	AnalysisColumnTooltipItemArgs{...}
type AnalysisColumnTooltipItemInput interface {
	pulumi.Input

	ToAnalysisColumnTooltipItemOutput() AnalysisColumnTooltipItemOutput
	ToAnalysisColumnTooltipItemOutputWithContext(context.Context) AnalysisColumnTooltipItemOutput
}

type AnalysisColumnTooltipItemArgs struct {
	Aggregation AnalysisAggregationFunctionPtrInput `pulumi:"aggregation"`
	Column      AnalysisColumnIdentifierInput       `pulumi:"column"`
	Label       pulumi.StringPtrInput               `pulumi:"label"`
	Visibility  AnalysisVisibilityPtrInput          `pulumi:"visibility"`
}

func (AnalysisColumnTooltipItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnTooltipItem)(nil)).Elem()
}

func (i AnalysisColumnTooltipItemArgs) ToAnalysisColumnTooltipItemOutput() AnalysisColumnTooltipItemOutput {
	return i.ToAnalysisColumnTooltipItemOutputWithContext(context.Background())
}

func (i AnalysisColumnTooltipItemArgs) ToAnalysisColumnTooltipItemOutputWithContext(ctx context.Context) AnalysisColumnTooltipItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnTooltipItemOutput)
}

func (i AnalysisColumnTooltipItemArgs) ToAnalysisColumnTooltipItemPtrOutput() AnalysisColumnTooltipItemPtrOutput {
	return i.ToAnalysisColumnTooltipItemPtrOutputWithContext(context.Background())
}

func (i AnalysisColumnTooltipItemArgs) ToAnalysisColumnTooltipItemPtrOutputWithContext(ctx context.Context) AnalysisColumnTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnTooltipItemOutput).ToAnalysisColumnTooltipItemPtrOutputWithContext(ctx)
}

// AnalysisColumnTooltipItemPtrInput is an input type that accepts AnalysisColumnTooltipItemArgs, AnalysisColumnTooltipItemPtr and AnalysisColumnTooltipItemPtrOutput values.
// You can construct a concrete instance of `AnalysisColumnTooltipItemPtrInput` via:
//
//	        AnalysisColumnTooltipItemArgs{...}
//
//	or:
//
//	        nil
type AnalysisColumnTooltipItemPtrInput interface {
	pulumi.Input

	ToAnalysisColumnTooltipItemPtrOutput() AnalysisColumnTooltipItemPtrOutput
	ToAnalysisColumnTooltipItemPtrOutputWithContext(context.Context) AnalysisColumnTooltipItemPtrOutput
}

type analysisColumnTooltipItemPtrType AnalysisColumnTooltipItemArgs

func AnalysisColumnTooltipItemPtr(v *AnalysisColumnTooltipItemArgs) AnalysisColumnTooltipItemPtrInput {
	return (*analysisColumnTooltipItemPtrType)(v)
}

func (*analysisColumnTooltipItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColumnTooltipItem)(nil)).Elem()
}

func (i *analysisColumnTooltipItemPtrType) ToAnalysisColumnTooltipItemPtrOutput() AnalysisColumnTooltipItemPtrOutput {
	return i.ToAnalysisColumnTooltipItemPtrOutputWithContext(context.Background())
}

func (i *analysisColumnTooltipItemPtrType) ToAnalysisColumnTooltipItemPtrOutputWithContext(ctx context.Context) AnalysisColumnTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisColumnTooltipItemPtrOutput)
}

type AnalysisColumnTooltipItemOutput struct{ *pulumi.OutputState }

func (AnalysisColumnTooltipItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnTooltipItem)(nil)).Elem()
}

func (o AnalysisColumnTooltipItemOutput) ToAnalysisColumnTooltipItemOutput() AnalysisColumnTooltipItemOutput {
	return o
}

func (o AnalysisColumnTooltipItemOutput) ToAnalysisColumnTooltipItemOutputWithContext(ctx context.Context) AnalysisColumnTooltipItemOutput {
	return o
}

func (o AnalysisColumnTooltipItemOutput) ToAnalysisColumnTooltipItemPtrOutput() AnalysisColumnTooltipItemPtrOutput {
	return o.ToAnalysisColumnTooltipItemPtrOutputWithContext(context.Background())
}

func (o AnalysisColumnTooltipItemOutput) ToAnalysisColumnTooltipItemPtrOutputWithContext(ctx context.Context) AnalysisColumnTooltipItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisColumnTooltipItem) *AnalysisColumnTooltipItem {
		return &v
	}).(AnalysisColumnTooltipItemPtrOutput)
}

func (o AnalysisColumnTooltipItemOutput) Aggregation() AnalysisAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisColumnTooltipItem) *AnalysisAggregationFunction { return v.Aggregation }).(AnalysisAggregationFunctionPtrOutput)
}

func (o AnalysisColumnTooltipItemOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisColumnTooltipItem) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisColumnTooltipItemOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisColumnTooltipItem) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o AnalysisColumnTooltipItemOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisColumnTooltipItem) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisColumnTooltipItemPtrOutput struct{ *pulumi.OutputState }

func (AnalysisColumnTooltipItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColumnTooltipItem)(nil)).Elem()
}

func (o AnalysisColumnTooltipItemPtrOutput) ToAnalysisColumnTooltipItemPtrOutput() AnalysisColumnTooltipItemPtrOutput {
	return o
}

func (o AnalysisColumnTooltipItemPtrOutput) ToAnalysisColumnTooltipItemPtrOutputWithContext(ctx context.Context) AnalysisColumnTooltipItemPtrOutput {
	return o
}

func (o AnalysisColumnTooltipItemPtrOutput) Elem() AnalysisColumnTooltipItemOutput {
	return o.ApplyT(func(v *AnalysisColumnTooltipItem) AnalysisColumnTooltipItem {
		if v != nil {
			return *v
		}
		var ret AnalysisColumnTooltipItem
		return ret
	}).(AnalysisColumnTooltipItemOutput)
}

func (o AnalysisColumnTooltipItemPtrOutput) Aggregation() AnalysisAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisColumnTooltipItem) *AnalysisAggregationFunction {
		if v == nil {
			return nil
		}
		return v.Aggregation
	}).(AnalysisAggregationFunctionPtrOutput)
}

func (o AnalysisColumnTooltipItemPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisColumnTooltipItem) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisColumnTooltipItemPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisColumnTooltipItem) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisColumnTooltipItemPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisColumnTooltipItem) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisComboChartAggregatedFieldWells struct {
	BarValues  []AnalysisMeasureField   `pulumi:"barValues"`
	Category   []AnalysisDimensionField `pulumi:"category"`
	Colors     []AnalysisDimensionField `pulumi:"colors"`
	LineValues []AnalysisMeasureField   `pulumi:"lineValues"`
}

// AnalysisComboChartAggregatedFieldWellsInput is an input type that accepts AnalysisComboChartAggregatedFieldWellsArgs and AnalysisComboChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisComboChartAggregatedFieldWellsInput` via:
//
//	AnalysisComboChartAggregatedFieldWellsArgs{...}
type AnalysisComboChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisComboChartAggregatedFieldWellsOutput() AnalysisComboChartAggregatedFieldWellsOutput
	ToAnalysisComboChartAggregatedFieldWellsOutputWithContext(context.Context) AnalysisComboChartAggregatedFieldWellsOutput
}

type AnalysisComboChartAggregatedFieldWellsArgs struct {
	BarValues  AnalysisMeasureFieldArrayInput   `pulumi:"barValues"`
	Category   AnalysisDimensionFieldArrayInput `pulumi:"category"`
	Colors     AnalysisDimensionFieldArrayInput `pulumi:"colors"`
	LineValues AnalysisMeasureFieldArrayInput   `pulumi:"lineValues"`
}

func (AnalysisComboChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComboChartAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisComboChartAggregatedFieldWellsArgs) ToAnalysisComboChartAggregatedFieldWellsOutput() AnalysisComboChartAggregatedFieldWellsOutput {
	return i.ToAnalysisComboChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisComboChartAggregatedFieldWellsArgs) ToAnalysisComboChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisComboChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartAggregatedFieldWellsOutput)
}

func (i AnalysisComboChartAggregatedFieldWellsArgs) ToAnalysisComboChartAggregatedFieldWellsPtrOutput() AnalysisComboChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisComboChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisComboChartAggregatedFieldWellsArgs) ToAnalysisComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisComboChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartAggregatedFieldWellsOutput).ToAnalysisComboChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisComboChartAggregatedFieldWellsPtrInput is an input type that accepts AnalysisComboChartAggregatedFieldWellsArgs, AnalysisComboChartAggregatedFieldWellsPtr and AnalysisComboChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisComboChartAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisComboChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisComboChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisComboChartAggregatedFieldWellsPtrOutput() AnalysisComboChartAggregatedFieldWellsPtrOutput
	ToAnalysisComboChartAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisComboChartAggregatedFieldWellsPtrOutput
}

type analysisComboChartAggregatedFieldWellsPtrType AnalysisComboChartAggregatedFieldWellsArgs

func AnalysisComboChartAggregatedFieldWellsPtr(v *AnalysisComboChartAggregatedFieldWellsArgs) AnalysisComboChartAggregatedFieldWellsPtrInput {
	return (*analysisComboChartAggregatedFieldWellsPtrType)(v)
}

func (*analysisComboChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComboChartAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisComboChartAggregatedFieldWellsPtrType) ToAnalysisComboChartAggregatedFieldWellsPtrOutput() AnalysisComboChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisComboChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisComboChartAggregatedFieldWellsPtrType) ToAnalysisComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisComboChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartAggregatedFieldWellsPtrOutput)
}

type AnalysisComboChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisComboChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComboChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisComboChartAggregatedFieldWellsOutput) ToAnalysisComboChartAggregatedFieldWellsOutput() AnalysisComboChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisComboChartAggregatedFieldWellsOutput) ToAnalysisComboChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisComboChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisComboChartAggregatedFieldWellsOutput) ToAnalysisComboChartAggregatedFieldWellsPtrOutput() AnalysisComboChartAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisComboChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisComboChartAggregatedFieldWellsOutput) ToAnalysisComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisComboChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisComboChartAggregatedFieldWells) *AnalysisComboChartAggregatedFieldWells {
		return &v
	}).(AnalysisComboChartAggregatedFieldWellsPtrOutput)
}

func (o AnalysisComboChartAggregatedFieldWellsOutput) BarValues() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisComboChartAggregatedFieldWells) []AnalysisMeasureField { return v.BarValues }).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisComboChartAggregatedFieldWellsOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisComboChartAggregatedFieldWells) []AnalysisDimensionField { return v.Category }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisComboChartAggregatedFieldWellsOutput) Colors() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisComboChartAggregatedFieldWells) []AnalysisDimensionField { return v.Colors }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisComboChartAggregatedFieldWellsOutput) LineValues() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisComboChartAggregatedFieldWells) []AnalysisMeasureField { return v.LineValues }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisComboChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisComboChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComboChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisComboChartAggregatedFieldWellsPtrOutput) ToAnalysisComboChartAggregatedFieldWellsPtrOutput() AnalysisComboChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisComboChartAggregatedFieldWellsPtrOutput) ToAnalysisComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisComboChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisComboChartAggregatedFieldWellsPtrOutput) Elem() AnalysisComboChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisComboChartAggregatedFieldWells) AnalysisComboChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisComboChartAggregatedFieldWells
		return ret
	}).(AnalysisComboChartAggregatedFieldWellsOutput)
}

func (o AnalysisComboChartAggregatedFieldWellsPtrOutput) BarValues() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisComboChartAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.BarValues
	}).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisComboChartAggregatedFieldWellsPtrOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisComboChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisComboChartAggregatedFieldWellsPtrOutput) Colors() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisComboChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisComboChartAggregatedFieldWellsPtrOutput) LineValues() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisComboChartAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.LineValues
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisComboChartConfiguration struct {
	BarDataLabels                *AnalysisDataLabelOptions            `pulumi:"barDataLabels"`
	BarsArrangement              *AnalysisBarsArrangement             `pulumi:"barsArrangement"`
	CategoryAxis                 *AnalysisAxisDisplayOptions          `pulumi:"categoryAxis"`
	CategoryLabelOptions         *AnalysisChartAxisLabelOptions       `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            *AnalysisChartAxisLabelOptions       `pulumi:"colorLabelOptions"`
	FieldWells                   *AnalysisComboChartFieldWells        `pulumi:"fieldWells"`
	Legend                       *AnalysisLegendOptions               `pulumi:"legend"`
	LineDataLabels               *AnalysisDataLabelOptions            `pulumi:"lineDataLabels"`
	PrimaryYAxisDisplayOptions   *AnalysisAxisDisplayOptions          `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     *AnalysisChartAxisLabelOptions       `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               []AnalysisReferenceLine              `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions *AnalysisAxisDisplayOptions          `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   *AnalysisChartAxisLabelOptions       `pulumi:"secondaryYAxisLabelOptions"`
	SortConfiguration            *AnalysisComboChartSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip                      *AnalysisTooltipOptions              `pulumi:"tooltip"`
	VisualPalette                *AnalysisVisualPalette               `pulumi:"visualPalette"`
}

// AnalysisComboChartConfigurationInput is an input type that accepts AnalysisComboChartConfigurationArgs and AnalysisComboChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisComboChartConfigurationInput` via:
//
//	AnalysisComboChartConfigurationArgs{...}
type AnalysisComboChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisComboChartConfigurationOutput() AnalysisComboChartConfigurationOutput
	ToAnalysisComboChartConfigurationOutputWithContext(context.Context) AnalysisComboChartConfigurationOutput
}

type AnalysisComboChartConfigurationArgs struct {
	BarDataLabels                AnalysisDataLabelOptionsPtrInput            `pulumi:"barDataLabels"`
	BarsArrangement              AnalysisBarsArrangementPtrInput             `pulumi:"barsArrangement"`
	CategoryAxis                 AnalysisAxisDisplayOptionsPtrInput          `pulumi:"categoryAxis"`
	CategoryLabelOptions         AnalysisChartAxisLabelOptionsPtrInput       `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            AnalysisChartAxisLabelOptionsPtrInput       `pulumi:"colorLabelOptions"`
	FieldWells                   AnalysisComboChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                       AnalysisLegendOptionsPtrInput               `pulumi:"legend"`
	LineDataLabels               AnalysisDataLabelOptionsPtrInput            `pulumi:"lineDataLabels"`
	PrimaryYAxisDisplayOptions   AnalysisAxisDisplayOptionsPtrInput          `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     AnalysisChartAxisLabelOptionsPtrInput       `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               AnalysisReferenceLineArrayInput             `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions AnalysisAxisDisplayOptionsPtrInput          `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   AnalysisChartAxisLabelOptionsPtrInput       `pulumi:"secondaryYAxisLabelOptions"`
	SortConfiguration            AnalysisComboChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip                      AnalysisTooltipOptionsPtrInput              `pulumi:"tooltip"`
	VisualPalette                AnalysisVisualPalettePtrInput               `pulumi:"visualPalette"`
}

func (AnalysisComboChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComboChartConfiguration)(nil)).Elem()
}

func (i AnalysisComboChartConfigurationArgs) ToAnalysisComboChartConfigurationOutput() AnalysisComboChartConfigurationOutput {
	return i.ToAnalysisComboChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisComboChartConfigurationArgs) ToAnalysisComboChartConfigurationOutputWithContext(ctx context.Context) AnalysisComboChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartConfigurationOutput)
}

func (i AnalysisComboChartConfigurationArgs) ToAnalysisComboChartConfigurationPtrOutput() AnalysisComboChartConfigurationPtrOutput {
	return i.ToAnalysisComboChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisComboChartConfigurationArgs) ToAnalysisComboChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComboChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartConfigurationOutput).ToAnalysisComboChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisComboChartConfigurationPtrInput is an input type that accepts AnalysisComboChartConfigurationArgs, AnalysisComboChartConfigurationPtr and AnalysisComboChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisComboChartConfigurationPtrInput` via:
//
//	        AnalysisComboChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisComboChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisComboChartConfigurationPtrOutput() AnalysisComboChartConfigurationPtrOutput
	ToAnalysisComboChartConfigurationPtrOutputWithContext(context.Context) AnalysisComboChartConfigurationPtrOutput
}

type analysisComboChartConfigurationPtrType AnalysisComboChartConfigurationArgs

func AnalysisComboChartConfigurationPtr(v *AnalysisComboChartConfigurationArgs) AnalysisComboChartConfigurationPtrInput {
	return (*analysisComboChartConfigurationPtrType)(v)
}

func (*analysisComboChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComboChartConfiguration)(nil)).Elem()
}

func (i *analysisComboChartConfigurationPtrType) ToAnalysisComboChartConfigurationPtrOutput() AnalysisComboChartConfigurationPtrOutput {
	return i.ToAnalysisComboChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisComboChartConfigurationPtrType) ToAnalysisComboChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComboChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartConfigurationPtrOutput)
}

type AnalysisComboChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisComboChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComboChartConfiguration)(nil)).Elem()
}

func (o AnalysisComboChartConfigurationOutput) ToAnalysisComboChartConfigurationOutput() AnalysisComboChartConfigurationOutput {
	return o
}

func (o AnalysisComboChartConfigurationOutput) ToAnalysisComboChartConfigurationOutputWithContext(ctx context.Context) AnalysisComboChartConfigurationOutput {
	return o
}

func (o AnalysisComboChartConfigurationOutput) ToAnalysisComboChartConfigurationPtrOutput() AnalysisComboChartConfigurationPtrOutput {
	return o.ToAnalysisComboChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisComboChartConfigurationOutput) ToAnalysisComboChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComboChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisComboChartConfiguration) *AnalysisComboChartConfiguration {
		return &v
	}).(AnalysisComboChartConfigurationPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) BarDataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisDataLabelOptions { return v.BarDataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) BarsArrangement() AnalysisBarsArrangementPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisBarsArrangement { return v.BarsArrangement }).(AnalysisBarsArrangementPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) CategoryAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisAxisDisplayOptions { return v.CategoryAxis }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisChartAxisLabelOptions { return v.CategoryLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) ColorLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisChartAxisLabelOptions { return v.ColorLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) FieldWells() AnalysisComboChartFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisComboChartFieldWells { return v.FieldWells }).(AnalysisComboChartFieldWellsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) LineDataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisDataLabelOptions { return v.LineDataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) PrimaryYAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) PrimaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) ReferenceLines() AnalysisReferenceLineArrayOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) []AnalysisReferenceLine { return v.ReferenceLines }).(AnalysisReferenceLineArrayOutput)
}

func (o AnalysisComboChartConfigurationOutput) SecondaryYAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisAxisDisplayOptions {
		return v.SecondaryYAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) SecondaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisChartAxisLabelOptions {
		return v.SecondaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) SortConfiguration() AnalysisComboChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisComboChartSortConfiguration {
		return v.SortConfiguration
	}).(AnalysisComboChartSortConfigurationPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisComboChartConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

type AnalysisComboChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisComboChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComboChartConfiguration)(nil)).Elem()
}

func (o AnalysisComboChartConfigurationPtrOutput) ToAnalysisComboChartConfigurationPtrOutput() AnalysisComboChartConfigurationPtrOutput {
	return o
}

func (o AnalysisComboChartConfigurationPtrOutput) ToAnalysisComboChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComboChartConfigurationPtrOutput {
	return o
}

func (o AnalysisComboChartConfigurationPtrOutput) Elem() AnalysisComboChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) AnalysisComboChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisComboChartConfiguration
		return ret
	}).(AnalysisComboChartConfigurationOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) BarDataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.BarDataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) BarsArrangement() AnalysisBarsArrangementPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisBarsArrangement {
		if v == nil {
			return nil
		}
		return v.BarsArrangement
	}).(AnalysisBarsArrangementPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) CategoryAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) ColorLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) FieldWells() AnalysisComboChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisComboChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisComboChartFieldWellsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) LineDataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.LineDataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) ReferenceLines() AnalysisReferenceLineArrayOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) []AnalysisReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(AnalysisReferenceLineArrayOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) SecondaryYAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) SecondaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) SortConfiguration() AnalysisComboChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisComboChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisComboChartSortConfigurationPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisComboChartConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

type AnalysisComboChartFieldWells struct {
	ComboChartAggregatedFieldWells *AnalysisComboChartAggregatedFieldWells `pulumi:"comboChartAggregatedFieldWells"`
}

// AnalysisComboChartFieldWellsInput is an input type that accepts AnalysisComboChartFieldWellsArgs and AnalysisComboChartFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisComboChartFieldWellsInput` via:
//
//	AnalysisComboChartFieldWellsArgs{...}
type AnalysisComboChartFieldWellsInput interface {
	pulumi.Input

	ToAnalysisComboChartFieldWellsOutput() AnalysisComboChartFieldWellsOutput
	ToAnalysisComboChartFieldWellsOutputWithContext(context.Context) AnalysisComboChartFieldWellsOutput
}

type AnalysisComboChartFieldWellsArgs struct {
	ComboChartAggregatedFieldWells AnalysisComboChartAggregatedFieldWellsPtrInput `pulumi:"comboChartAggregatedFieldWells"`
}

func (AnalysisComboChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComboChartFieldWells)(nil)).Elem()
}

func (i AnalysisComboChartFieldWellsArgs) ToAnalysisComboChartFieldWellsOutput() AnalysisComboChartFieldWellsOutput {
	return i.ToAnalysisComboChartFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisComboChartFieldWellsArgs) ToAnalysisComboChartFieldWellsOutputWithContext(ctx context.Context) AnalysisComboChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartFieldWellsOutput)
}

func (i AnalysisComboChartFieldWellsArgs) ToAnalysisComboChartFieldWellsPtrOutput() AnalysisComboChartFieldWellsPtrOutput {
	return i.ToAnalysisComboChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisComboChartFieldWellsArgs) ToAnalysisComboChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisComboChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartFieldWellsOutput).ToAnalysisComboChartFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisComboChartFieldWellsPtrInput is an input type that accepts AnalysisComboChartFieldWellsArgs, AnalysisComboChartFieldWellsPtr and AnalysisComboChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisComboChartFieldWellsPtrInput` via:
//
//	        AnalysisComboChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisComboChartFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisComboChartFieldWellsPtrOutput() AnalysisComboChartFieldWellsPtrOutput
	ToAnalysisComboChartFieldWellsPtrOutputWithContext(context.Context) AnalysisComboChartFieldWellsPtrOutput
}

type analysisComboChartFieldWellsPtrType AnalysisComboChartFieldWellsArgs

func AnalysisComboChartFieldWellsPtr(v *AnalysisComboChartFieldWellsArgs) AnalysisComboChartFieldWellsPtrInput {
	return (*analysisComboChartFieldWellsPtrType)(v)
}

func (*analysisComboChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComboChartFieldWells)(nil)).Elem()
}

func (i *analysisComboChartFieldWellsPtrType) ToAnalysisComboChartFieldWellsPtrOutput() AnalysisComboChartFieldWellsPtrOutput {
	return i.ToAnalysisComboChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisComboChartFieldWellsPtrType) ToAnalysisComboChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisComboChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartFieldWellsPtrOutput)
}

type AnalysisComboChartFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisComboChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComboChartFieldWells)(nil)).Elem()
}

func (o AnalysisComboChartFieldWellsOutput) ToAnalysisComboChartFieldWellsOutput() AnalysisComboChartFieldWellsOutput {
	return o
}

func (o AnalysisComboChartFieldWellsOutput) ToAnalysisComboChartFieldWellsOutputWithContext(ctx context.Context) AnalysisComboChartFieldWellsOutput {
	return o
}

func (o AnalysisComboChartFieldWellsOutput) ToAnalysisComboChartFieldWellsPtrOutput() AnalysisComboChartFieldWellsPtrOutput {
	return o.ToAnalysisComboChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisComboChartFieldWellsOutput) ToAnalysisComboChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisComboChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisComboChartFieldWells) *AnalysisComboChartFieldWells {
		return &v
	}).(AnalysisComboChartFieldWellsPtrOutput)
}

func (o AnalysisComboChartFieldWellsOutput) ComboChartAggregatedFieldWells() AnalysisComboChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartFieldWells) *AnalysisComboChartAggregatedFieldWells {
		return v.ComboChartAggregatedFieldWells
	}).(AnalysisComboChartAggregatedFieldWellsPtrOutput)
}

type AnalysisComboChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisComboChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComboChartFieldWells)(nil)).Elem()
}

func (o AnalysisComboChartFieldWellsPtrOutput) ToAnalysisComboChartFieldWellsPtrOutput() AnalysisComboChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisComboChartFieldWellsPtrOutput) ToAnalysisComboChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisComboChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisComboChartFieldWellsPtrOutput) Elem() AnalysisComboChartFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisComboChartFieldWells) AnalysisComboChartFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisComboChartFieldWells
		return ret
	}).(AnalysisComboChartFieldWellsOutput)
}

func (o AnalysisComboChartFieldWellsPtrOutput) ComboChartAggregatedFieldWells() AnalysisComboChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartFieldWells) *AnalysisComboChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.ComboChartAggregatedFieldWells
	}).(AnalysisComboChartAggregatedFieldWellsPtrOutput)
}

type AnalysisComboChartSortConfiguration struct {
	CategoryItemsLimit *AnalysisItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []AnalysisFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimit    *AnalysisItemsLimitConfiguration `pulumi:"colorItemsLimit"`
	ColorSort          []AnalysisFieldSortOptions       `pulumi:"colorSort"`
}

// AnalysisComboChartSortConfigurationInput is an input type that accepts AnalysisComboChartSortConfigurationArgs and AnalysisComboChartSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisComboChartSortConfigurationInput` via:
//
//	AnalysisComboChartSortConfigurationArgs{...}
type AnalysisComboChartSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisComboChartSortConfigurationOutput() AnalysisComboChartSortConfigurationOutput
	ToAnalysisComboChartSortConfigurationOutputWithContext(context.Context) AnalysisComboChartSortConfigurationOutput
}

type AnalysisComboChartSortConfigurationArgs struct {
	CategoryItemsLimit AnalysisItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       AnalysisFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimit    AnalysisItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimit"`
	ColorSort          AnalysisFieldSortOptionsArrayInput      `pulumi:"colorSort"`
}

func (AnalysisComboChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComboChartSortConfiguration)(nil)).Elem()
}

func (i AnalysisComboChartSortConfigurationArgs) ToAnalysisComboChartSortConfigurationOutput() AnalysisComboChartSortConfigurationOutput {
	return i.ToAnalysisComboChartSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisComboChartSortConfigurationArgs) ToAnalysisComboChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisComboChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartSortConfigurationOutput)
}

func (i AnalysisComboChartSortConfigurationArgs) ToAnalysisComboChartSortConfigurationPtrOutput() AnalysisComboChartSortConfigurationPtrOutput {
	return i.ToAnalysisComboChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisComboChartSortConfigurationArgs) ToAnalysisComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComboChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartSortConfigurationOutput).ToAnalysisComboChartSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisComboChartSortConfigurationPtrInput is an input type that accepts AnalysisComboChartSortConfigurationArgs, AnalysisComboChartSortConfigurationPtr and AnalysisComboChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisComboChartSortConfigurationPtrInput` via:
//
//	        AnalysisComboChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisComboChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisComboChartSortConfigurationPtrOutput() AnalysisComboChartSortConfigurationPtrOutput
	ToAnalysisComboChartSortConfigurationPtrOutputWithContext(context.Context) AnalysisComboChartSortConfigurationPtrOutput
}

type analysisComboChartSortConfigurationPtrType AnalysisComboChartSortConfigurationArgs

func AnalysisComboChartSortConfigurationPtr(v *AnalysisComboChartSortConfigurationArgs) AnalysisComboChartSortConfigurationPtrInput {
	return (*analysisComboChartSortConfigurationPtrType)(v)
}

func (*analysisComboChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComboChartSortConfiguration)(nil)).Elem()
}

func (i *analysisComboChartSortConfigurationPtrType) ToAnalysisComboChartSortConfigurationPtrOutput() AnalysisComboChartSortConfigurationPtrOutput {
	return i.ToAnalysisComboChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisComboChartSortConfigurationPtrType) ToAnalysisComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComboChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartSortConfigurationPtrOutput)
}

type AnalysisComboChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisComboChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComboChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisComboChartSortConfigurationOutput) ToAnalysisComboChartSortConfigurationOutput() AnalysisComboChartSortConfigurationOutput {
	return o
}

func (o AnalysisComboChartSortConfigurationOutput) ToAnalysisComboChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisComboChartSortConfigurationOutput {
	return o
}

func (o AnalysisComboChartSortConfigurationOutput) ToAnalysisComboChartSortConfigurationPtrOutput() AnalysisComboChartSortConfigurationPtrOutput {
	return o.ToAnalysisComboChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisComboChartSortConfigurationOutput) ToAnalysisComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComboChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisComboChartSortConfiguration) *AnalysisComboChartSortConfiguration {
		return &v
	}).(AnalysisComboChartSortConfigurationPtrOutput)
}

func (o AnalysisComboChartSortConfigurationOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisComboChartSortConfigurationOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisComboChartSortConfiguration) []AnalysisFieldSortOptions { return v.CategorySort }).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisComboChartSortConfigurationOutput) ColorItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartSortConfiguration) *AnalysisItemsLimitConfiguration { return v.ColorItemsLimit }).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisComboChartSortConfigurationOutput) ColorSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisComboChartSortConfiguration) []AnalysisFieldSortOptions { return v.ColorSort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisComboChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisComboChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComboChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisComboChartSortConfigurationPtrOutput) ToAnalysisComboChartSortConfigurationPtrOutput() AnalysisComboChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisComboChartSortConfigurationPtrOutput) ToAnalysisComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComboChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisComboChartSortConfigurationPtrOutput) Elem() AnalysisComboChartSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisComboChartSortConfiguration) AnalysisComboChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisComboChartSortConfiguration
		return ret
	}).(AnalysisComboChartSortConfigurationOutput)
}

func (o AnalysisComboChartSortConfigurationPtrOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisComboChartSortConfigurationPtrOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisComboChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisComboChartSortConfigurationPtrOutput) ColorItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisComboChartSortConfigurationPtrOutput) ColorSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisComboChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.ColorSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisComboChartVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisComboChartConfiguration    `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisComboChartVisualInput is an input type that accepts AnalysisComboChartVisualArgs and AnalysisComboChartVisualOutput values.
// You can construct a concrete instance of `AnalysisComboChartVisualInput` via:
//
//	AnalysisComboChartVisualArgs{...}
type AnalysisComboChartVisualInput interface {
	pulumi.Input

	ToAnalysisComboChartVisualOutput() AnalysisComboChartVisualOutput
	ToAnalysisComboChartVisualOutputWithContext(context.Context) AnalysisComboChartVisualOutput
}

type AnalysisComboChartVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisComboChartConfigurationPtrInput    `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisComboChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComboChartVisual)(nil)).Elem()
}

func (i AnalysisComboChartVisualArgs) ToAnalysisComboChartVisualOutput() AnalysisComboChartVisualOutput {
	return i.ToAnalysisComboChartVisualOutputWithContext(context.Background())
}

func (i AnalysisComboChartVisualArgs) ToAnalysisComboChartVisualOutputWithContext(ctx context.Context) AnalysisComboChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartVisualOutput)
}

func (i AnalysisComboChartVisualArgs) ToAnalysisComboChartVisualPtrOutput() AnalysisComboChartVisualPtrOutput {
	return i.ToAnalysisComboChartVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisComboChartVisualArgs) ToAnalysisComboChartVisualPtrOutputWithContext(ctx context.Context) AnalysisComboChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartVisualOutput).ToAnalysisComboChartVisualPtrOutputWithContext(ctx)
}

// AnalysisComboChartVisualPtrInput is an input type that accepts AnalysisComboChartVisualArgs, AnalysisComboChartVisualPtr and AnalysisComboChartVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisComboChartVisualPtrInput` via:
//
//	        AnalysisComboChartVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisComboChartVisualPtrInput interface {
	pulumi.Input

	ToAnalysisComboChartVisualPtrOutput() AnalysisComboChartVisualPtrOutput
	ToAnalysisComboChartVisualPtrOutputWithContext(context.Context) AnalysisComboChartVisualPtrOutput
}

type analysisComboChartVisualPtrType AnalysisComboChartVisualArgs

func AnalysisComboChartVisualPtr(v *AnalysisComboChartVisualArgs) AnalysisComboChartVisualPtrInput {
	return (*analysisComboChartVisualPtrType)(v)
}

func (*analysisComboChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComboChartVisual)(nil)).Elem()
}

func (i *analysisComboChartVisualPtrType) ToAnalysisComboChartVisualPtrOutput() AnalysisComboChartVisualPtrOutput {
	return i.ToAnalysisComboChartVisualPtrOutputWithContext(context.Background())
}

func (i *analysisComboChartVisualPtrType) ToAnalysisComboChartVisualPtrOutputWithContext(ctx context.Context) AnalysisComboChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComboChartVisualPtrOutput)
}

type AnalysisComboChartVisualOutput struct{ *pulumi.OutputState }

func (AnalysisComboChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComboChartVisual)(nil)).Elem()
}

func (o AnalysisComboChartVisualOutput) ToAnalysisComboChartVisualOutput() AnalysisComboChartVisualOutput {
	return o
}

func (o AnalysisComboChartVisualOutput) ToAnalysisComboChartVisualOutputWithContext(ctx context.Context) AnalysisComboChartVisualOutput {
	return o
}

func (o AnalysisComboChartVisualOutput) ToAnalysisComboChartVisualPtrOutput() AnalysisComboChartVisualPtrOutput {
	return o.ToAnalysisComboChartVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisComboChartVisualOutput) ToAnalysisComboChartVisualPtrOutputWithContext(ctx context.Context) AnalysisComboChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisComboChartVisual) *AnalysisComboChartVisual {
		return &v
	}).(AnalysisComboChartVisualPtrOutput)
}

func (o AnalysisComboChartVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisComboChartVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisComboChartVisualOutput) ChartConfiguration() AnalysisComboChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartVisual) *AnalysisComboChartConfiguration { return v.ChartConfiguration }).(AnalysisComboChartConfigurationPtrOutput)
}

func (o AnalysisComboChartVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisComboChartVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisComboChartVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisComboChartVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisComboChartVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisComboChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisComboChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisComboChartVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisComboChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComboChartVisual)(nil)).Elem()
}

func (o AnalysisComboChartVisualPtrOutput) ToAnalysisComboChartVisualPtrOutput() AnalysisComboChartVisualPtrOutput {
	return o
}

func (o AnalysisComboChartVisualPtrOutput) ToAnalysisComboChartVisualPtrOutputWithContext(ctx context.Context) AnalysisComboChartVisualPtrOutput {
	return o
}

func (o AnalysisComboChartVisualPtrOutput) Elem() AnalysisComboChartVisualOutput {
	return o.ApplyT(func(v *AnalysisComboChartVisual) AnalysisComboChartVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisComboChartVisual
		return ret
	}).(AnalysisComboChartVisualOutput)
}

func (o AnalysisComboChartVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisComboChartVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisComboChartVisualPtrOutput) ChartConfiguration() AnalysisComboChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartVisual) *AnalysisComboChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisComboChartConfigurationPtrOutput)
}

func (o AnalysisComboChartVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisComboChartVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisComboChartVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisComboChartVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisComboChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisComboChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisComparisonConfiguration struct {
	ComparisonFormat *AnalysisComparisonFormatConfiguration `pulumi:"comparisonFormat"`
	ComparisonMethod *AnalysisComparisonMethod              `pulumi:"comparisonMethod"`
}

// AnalysisComparisonConfigurationInput is an input type that accepts AnalysisComparisonConfigurationArgs and AnalysisComparisonConfigurationOutput values.
// You can construct a concrete instance of `AnalysisComparisonConfigurationInput` via:
//
//	AnalysisComparisonConfigurationArgs{...}
type AnalysisComparisonConfigurationInput interface {
	pulumi.Input

	ToAnalysisComparisonConfigurationOutput() AnalysisComparisonConfigurationOutput
	ToAnalysisComparisonConfigurationOutputWithContext(context.Context) AnalysisComparisonConfigurationOutput
}

type AnalysisComparisonConfigurationArgs struct {
	ComparisonFormat AnalysisComparisonFormatConfigurationPtrInput `pulumi:"comparisonFormat"`
	ComparisonMethod AnalysisComparisonMethodPtrInput              `pulumi:"comparisonMethod"`
}

func (AnalysisComparisonConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComparisonConfiguration)(nil)).Elem()
}

func (i AnalysisComparisonConfigurationArgs) ToAnalysisComparisonConfigurationOutput() AnalysisComparisonConfigurationOutput {
	return i.ToAnalysisComparisonConfigurationOutputWithContext(context.Background())
}

func (i AnalysisComparisonConfigurationArgs) ToAnalysisComparisonConfigurationOutputWithContext(ctx context.Context) AnalysisComparisonConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComparisonConfigurationOutput)
}

func (i AnalysisComparisonConfigurationArgs) ToAnalysisComparisonConfigurationPtrOutput() AnalysisComparisonConfigurationPtrOutput {
	return i.ToAnalysisComparisonConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisComparisonConfigurationArgs) ToAnalysisComparisonConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComparisonConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComparisonConfigurationOutput).ToAnalysisComparisonConfigurationPtrOutputWithContext(ctx)
}

// AnalysisComparisonConfigurationPtrInput is an input type that accepts AnalysisComparisonConfigurationArgs, AnalysisComparisonConfigurationPtr and AnalysisComparisonConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisComparisonConfigurationPtrInput` via:
//
//	        AnalysisComparisonConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisComparisonConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisComparisonConfigurationPtrOutput() AnalysisComparisonConfigurationPtrOutput
	ToAnalysisComparisonConfigurationPtrOutputWithContext(context.Context) AnalysisComparisonConfigurationPtrOutput
}

type analysisComparisonConfigurationPtrType AnalysisComparisonConfigurationArgs

func AnalysisComparisonConfigurationPtr(v *AnalysisComparisonConfigurationArgs) AnalysisComparisonConfigurationPtrInput {
	return (*analysisComparisonConfigurationPtrType)(v)
}

func (*analysisComparisonConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComparisonConfiguration)(nil)).Elem()
}

func (i *analysisComparisonConfigurationPtrType) ToAnalysisComparisonConfigurationPtrOutput() AnalysisComparisonConfigurationPtrOutput {
	return i.ToAnalysisComparisonConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisComparisonConfigurationPtrType) ToAnalysisComparisonConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComparisonConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComparisonConfigurationPtrOutput)
}

type AnalysisComparisonConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisComparisonConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComparisonConfiguration)(nil)).Elem()
}

func (o AnalysisComparisonConfigurationOutput) ToAnalysisComparisonConfigurationOutput() AnalysisComparisonConfigurationOutput {
	return o
}

func (o AnalysisComparisonConfigurationOutput) ToAnalysisComparisonConfigurationOutputWithContext(ctx context.Context) AnalysisComparisonConfigurationOutput {
	return o
}

func (o AnalysisComparisonConfigurationOutput) ToAnalysisComparisonConfigurationPtrOutput() AnalysisComparisonConfigurationPtrOutput {
	return o.ToAnalysisComparisonConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisComparisonConfigurationOutput) ToAnalysisComparisonConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComparisonConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisComparisonConfiguration) *AnalysisComparisonConfiguration {
		return &v
	}).(AnalysisComparisonConfigurationPtrOutput)
}

func (o AnalysisComparisonConfigurationOutput) ComparisonFormat() AnalysisComparisonFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisComparisonConfiguration) *AnalysisComparisonFormatConfiguration {
		return v.ComparisonFormat
	}).(AnalysisComparisonFormatConfigurationPtrOutput)
}

func (o AnalysisComparisonConfigurationOutput) ComparisonMethod() AnalysisComparisonMethodPtrOutput {
	return o.ApplyT(func(v AnalysisComparisonConfiguration) *AnalysisComparisonMethod { return v.ComparisonMethod }).(AnalysisComparisonMethodPtrOutput)
}

type AnalysisComparisonConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisComparisonConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComparisonConfiguration)(nil)).Elem()
}

func (o AnalysisComparisonConfigurationPtrOutput) ToAnalysisComparisonConfigurationPtrOutput() AnalysisComparisonConfigurationPtrOutput {
	return o
}

func (o AnalysisComparisonConfigurationPtrOutput) ToAnalysisComparisonConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComparisonConfigurationPtrOutput {
	return o
}

func (o AnalysisComparisonConfigurationPtrOutput) Elem() AnalysisComparisonConfigurationOutput {
	return o.ApplyT(func(v *AnalysisComparisonConfiguration) AnalysisComparisonConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisComparisonConfiguration
		return ret
	}).(AnalysisComparisonConfigurationOutput)
}

func (o AnalysisComparisonConfigurationPtrOutput) ComparisonFormat() AnalysisComparisonFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisComparisonConfiguration) *AnalysisComparisonFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.ComparisonFormat
	}).(AnalysisComparisonFormatConfigurationPtrOutput)
}

func (o AnalysisComparisonConfigurationPtrOutput) ComparisonMethod() AnalysisComparisonMethodPtrOutput {
	return o.ApplyT(func(v *AnalysisComparisonConfiguration) *AnalysisComparisonMethod {
		if v == nil {
			return nil
		}
		return v.ComparisonMethod
	}).(AnalysisComparisonMethodPtrOutput)
}

type AnalysisComparisonFormatConfiguration struct {
	NumberDisplayFormatConfiguration     *AnalysisNumberDisplayFormatConfiguration     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration *AnalysisPercentageDisplayFormatConfiguration `pulumi:"percentageDisplayFormatConfiguration"`
}

// AnalysisComparisonFormatConfigurationInput is an input type that accepts AnalysisComparisonFormatConfigurationArgs and AnalysisComparisonFormatConfigurationOutput values.
// You can construct a concrete instance of `AnalysisComparisonFormatConfigurationInput` via:
//
//	AnalysisComparisonFormatConfigurationArgs{...}
type AnalysisComparisonFormatConfigurationInput interface {
	pulumi.Input

	ToAnalysisComparisonFormatConfigurationOutput() AnalysisComparisonFormatConfigurationOutput
	ToAnalysisComparisonFormatConfigurationOutputWithContext(context.Context) AnalysisComparisonFormatConfigurationOutput
}

type AnalysisComparisonFormatConfigurationArgs struct {
	NumberDisplayFormatConfiguration     AnalysisNumberDisplayFormatConfigurationPtrInput     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration AnalysisPercentageDisplayFormatConfigurationPtrInput `pulumi:"percentageDisplayFormatConfiguration"`
}

func (AnalysisComparisonFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComparisonFormatConfiguration)(nil)).Elem()
}

func (i AnalysisComparisonFormatConfigurationArgs) ToAnalysisComparisonFormatConfigurationOutput() AnalysisComparisonFormatConfigurationOutput {
	return i.ToAnalysisComparisonFormatConfigurationOutputWithContext(context.Background())
}

func (i AnalysisComparisonFormatConfigurationArgs) ToAnalysisComparisonFormatConfigurationOutputWithContext(ctx context.Context) AnalysisComparisonFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComparisonFormatConfigurationOutput)
}

func (i AnalysisComparisonFormatConfigurationArgs) ToAnalysisComparisonFormatConfigurationPtrOutput() AnalysisComparisonFormatConfigurationPtrOutput {
	return i.ToAnalysisComparisonFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisComparisonFormatConfigurationArgs) ToAnalysisComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComparisonFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComparisonFormatConfigurationOutput).ToAnalysisComparisonFormatConfigurationPtrOutputWithContext(ctx)
}

// AnalysisComparisonFormatConfigurationPtrInput is an input type that accepts AnalysisComparisonFormatConfigurationArgs, AnalysisComparisonFormatConfigurationPtr and AnalysisComparisonFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisComparisonFormatConfigurationPtrInput` via:
//
//	        AnalysisComparisonFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisComparisonFormatConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisComparisonFormatConfigurationPtrOutput() AnalysisComparisonFormatConfigurationPtrOutput
	ToAnalysisComparisonFormatConfigurationPtrOutputWithContext(context.Context) AnalysisComparisonFormatConfigurationPtrOutput
}

type analysisComparisonFormatConfigurationPtrType AnalysisComparisonFormatConfigurationArgs

func AnalysisComparisonFormatConfigurationPtr(v *AnalysisComparisonFormatConfigurationArgs) AnalysisComparisonFormatConfigurationPtrInput {
	return (*analysisComparisonFormatConfigurationPtrType)(v)
}

func (*analysisComparisonFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComparisonFormatConfiguration)(nil)).Elem()
}

func (i *analysisComparisonFormatConfigurationPtrType) ToAnalysisComparisonFormatConfigurationPtrOutput() AnalysisComparisonFormatConfigurationPtrOutput {
	return i.ToAnalysisComparisonFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisComparisonFormatConfigurationPtrType) ToAnalysisComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComparisonFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComparisonFormatConfigurationPtrOutput)
}

type AnalysisComparisonFormatConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisComparisonFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComparisonFormatConfiguration)(nil)).Elem()
}

func (o AnalysisComparisonFormatConfigurationOutput) ToAnalysisComparisonFormatConfigurationOutput() AnalysisComparisonFormatConfigurationOutput {
	return o
}

func (o AnalysisComparisonFormatConfigurationOutput) ToAnalysisComparisonFormatConfigurationOutputWithContext(ctx context.Context) AnalysisComparisonFormatConfigurationOutput {
	return o
}

func (o AnalysisComparisonFormatConfigurationOutput) ToAnalysisComparisonFormatConfigurationPtrOutput() AnalysisComparisonFormatConfigurationPtrOutput {
	return o.ToAnalysisComparisonFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisComparisonFormatConfigurationOutput) ToAnalysisComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComparisonFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisComparisonFormatConfiguration) *AnalysisComparisonFormatConfiguration {
		return &v
	}).(AnalysisComparisonFormatConfigurationPtrOutput)
}

func (o AnalysisComparisonFormatConfigurationOutput) NumberDisplayFormatConfiguration() AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisComparisonFormatConfiguration) *AnalysisNumberDisplayFormatConfiguration {
		return v.NumberDisplayFormatConfiguration
	}).(AnalysisNumberDisplayFormatConfigurationPtrOutput)
}

func (o AnalysisComparisonFormatConfigurationOutput) PercentageDisplayFormatConfiguration() AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisComparisonFormatConfiguration) *AnalysisPercentageDisplayFormatConfiguration {
		return v.PercentageDisplayFormatConfiguration
	}).(AnalysisPercentageDisplayFormatConfigurationPtrOutput)
}

type AnalysisComparisonFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisComparisonFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComparisonFormatConfiguration)(nil)).Elem()
}

func (o AnalysisComparisonFormatConfigurationPtrOutput) ToAnalysisComparisonFormatConfigurationPtrOutput() AnalysisComparisonFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisComparisonFormatConfigurationPtrOutput) ToAnalysisComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisComparisonFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisComparisonFormatConfigurationPtrOutput) Elem() AnalysisComparisonFormatConfigurationOutput {
	return o.ApplyT(func(v *AnalysisComparisonFormatConfiguration) AnalysisComparisonFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisComparisonFormatConfiguration
		return ret
	}).(AnalysisComparisonFormatConfigurationOutput)
}

func (o AnalysisComparisonFormatConfigurationPtrOutput) NumberDisplayFormatConfiguration() AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisComparisonFormatConfiguration) *AnalysisNumberDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumberDisplayFormatConfiguration
	}).(AnalysisNumberDisplayFormatConfigurationPtrOutput)
}

func (o AnalysisComparisonFormatConfigurationPtrOutput) PercentageDisplayFormatConfiguration() AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisComparisonFormatConfiguration) *AnalysisPercentageDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.PercentageDisplayFormatConfiguration
	}).(AnalysisPercentageDisplayFormatConfigurationPtrOutput)
}

type AnalysisComputation struct {
	Forecast         *AnalysisForecastComputation         `pulumi:"forecast"`
	GrowthRate       *AnalysisGrowthRateComputation       `pulumi:"growthRate"`
	MaximumMinimum   *AnalysisMaximumMinimumComputation   `pulumi:"maximumMinimum"`
	MetricComparison *AnalysisMetricComparisonComputation `pulumi:"metricComparison"`
	PeriodOverPeriod *AnalysisPeriodOverPeriodComputation `pulumi:"periodOverPeriod"`
	PeriodToDate     *AnalysisPeriodToDateComputation     `pulumi:"periodToDate"`
	TopBottomMovers  *AnalysisTopBottomMoversComputation  `pulumi:"topBottomMovers"`
	TopBottomRanked  *AnalysisTopBottomRankedComputation  `pulumi:"topBottomRanked"`
	TotalAggregation *AnalysisTotalAggregationComputation `pulumi:"totalAggregation"`
	UniqueValues     *AnalysisUniqueValuesComputation     `pulumi:"uniqueValues"`
}

// AnalysisComputationInput is an input type that accepts AnalysisComputationArgs and AnalysisComputationOutput values.
// You can construct a concrete instance of `AnalysisComputationInput` via:
//
//	AnalysisComputationArgs{...}
type AnalysisComputationInput interface {
	pulumi.Input

	ToAnalysisComputationOutput() AnalysisComputationOutput
	ToAnalysisComputationOutputWithContext(context.Context) AnalysisComputationOutput
}

type AnalysisComputationArgs struct {
	Forecast         AnalysisForecastComputationPtrInput         `pulumi:"forecast"`
	GrowthRate       AnalysisGrowthRateComputationPtrInput       `pulumi:"growthRate"`
	MaximumMinimum   AnalysisMaximumMinimumComputationPtrInput   `pulumi:"maximumMinimum"`
	MetricComparison AnalysisMetricComparisonComputationPtrInput `pulumi:"metricComparison"`
	PeriodOverPeriod AnalysisPeriodOverPeriodComputationPtrInput `pulumi:"periodOverPeriod"`
	PeriodToDate     AnalysisPeriodToDateComputationPtrInput     `pulumi:"periodToDate"`
	TopBottomMovers  AnalysisTopBottomMoversComputationPtrInput  `pulumi:"topBottomMovers"`
	TopBottomRanked  AnalysisTopBottomRankedComputationPtrInput  `pulumi:"topBottomRanked"`
	TotalAggregation AnalysisTotalAggregationComputationPtrInput `pulumi:"totalAggregation"`
	UniqueValues     AnalysisUniqueValuesComputationPtrInput     `pulumi:"uniqueValues"`
}

func (AnalysisComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComputation)(nil)).Elem()
}

func (i AnalysisComputationArgs) ToAnalysisComputationOutput() AnalysisComputationOutput {
	return i.ToAnalysisComputationOutputWithContext(context.Background())
}

func (i AnalysisComputationArgs) ToAnalysisComputationOutputWithContext(ctx context.Context) AnalysisComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComputationOutput)
}

// AnalysisComputationArrayInput is an input type that accepts AnalysisComputationArray and AnalysisComputationArrayOutput values.
// You can construct a concrete instance of `AnalysisComputationArrayInput` via:
//
//	AnalysisComputationArray{ AnalysisComputationArgs{...} }
type AnalysisComputationArrayInput interface {
	pulumi.Input

	ToAnalysisComputationArrayOutput() AnalysisComputationArrayOutput
	ToAnalysisComputationArrayOutputWithContext(context.Context) AnalysisComputationArrayOutput
}

type AnalysisComputationArray []AnalysisComputationInput

func (AnalysisComputationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisComputation)(nil)).Elem()
}

func (i AnalysisComputationArray) ToAnalysisComputationArrayOutput() AnalysisComputationArrayOutput {
	return i.ToAnalysisComputationArrayOutputWithContext(context.Background())
}

func (i AnalysisComputationArray) ToAnalysisComputationArrayOutputWithContext(ctx context.Context) AnalysisComputationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisComputationArrayOutput)
}

type AnalysisComputationOutput struct{ *pulumi.OutputState }

func (AnalysisComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComputation)(nil)).Elem()
}

func (o AnalysisComputationOutput) ToAnalysisComputationOutput() AnalysisComputationOutput {
	return o
}

func (o AnalysisComputationOutput) ToAnalysisComputationOutputWithContext(ctx context.Context) AnalysisComputationOutput {
	return o
}

func (o AnalysisComputationOutput) Forecast() AnalysisForecastComputationPtrOutput {
	return o.ApplyT(func(v AnalysisComputation) *AnalysisForecastComputation { return v.Forecast }).(AnalysisForecastComputationPtrOutput)
}

func (o AnalysisComputationOutput) GrowthRate() AnalysisGrowthRateComputationPtrOutput {
	return o.ApplyT(func(v AnalysisComputation) *AnalysisGrowthRateComputation { return v.GrowthRate }).(AnalysisGrowthRateComputationPtrOutput)
}

func (o AnalysisComputationOutput) MaximumMinimum() AnalysisMaximumMinimumComputationPtrOutput {
	return o.ApplyT(func(v AnalysisComputation) *AnalysisMaximumMinimumComputation { return v.MaximumMinimum }).(AnalysisMaximumMinimumComputationPtrOutput)
}

func (o AnalysisComputationOutput) MetricComparison() AnalysisMetricComparisonComputationPtrOutput {
	return o.ApplyT(func(v AnalysisComputation) *AnalysisMetricComparisonComputation { return v.MetricComparison }).(AnalysisMetricComparisonComputationPtrOutput)
}

func (o AnalysisComputationOutput) PeriodOverPeriod() AnalysisPeriodOverPeriodComputationPtrOutput {
	return o.ApplyT(func(v AnalysisComputation) *AnalysisPeriodOverPeriodComputation { return v.PeriodOverPeriod }).(AnalysisPeriodOverPeriodComputationPtrOutput)
}

func (o AnalysisComputationOutput) PeriodToDate() AnalysisPeriodToDateComputationPtrOutput {
	return o.ApplyT(func(v AnalysisComputation) *AnalysisPeriodToDateComputation { return v.PeriodToDate }).(AnalysisPeriodToDateComputationPtrOutput)
}

func (o AnalysisComputationOutput) TopBottomMovers() AnalysisTopBottomMoversComputationPtrOutput {
	return o.ApplyT(func(v AnalysisComputation) *AnalysisTopBottomMoversComputation { return v.TopBottomMovers }).(AnalysisTopBottomMoversComputationPtrOutput)
}

func (o AnalysisComputationOutput) TopBottomRanked() AnalysisTopBottomRankedComputationPtrOutput {
	return o.ApplyT(func(v AnalysisComputation) *AnalysisTopBottomRankedComputation { return v.TopBottomRanked }).(AnalysisTopBottomRankedComputationPtrOutput)
}

func (o AnalysisComputationOutput) TotalAggregation() AnalysisTotalAggregationComputationPtrOutput {
	return o.ApplyT(func(v AnalysisComputation) *AnalysisTotalAggregationComputation { return v.TotalAggregation }).(AnalysisTotalAggregationComputationPtrOutput)
}

func (o AnalysisComputationOutput) UniqueValues() AnalysisUniqueValuesComputationPtrOutput {
	return o.ApplyT(func(v AnalysisComputation) *AnalysisUniqueValuesComputation { return v.UniqueValues }).(AnalysisUniqueValuesComputationPtrOutput)
}

type AnalysisComputationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisComputationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisComputation)(nil)).Elem()
}

func (o AnalysisComputationArrayOutput) ToAnalysisComputationArrayOutput() AnalysisComputationArrayOutput {
	return o
}

func (o AnalysisComputationArrayOutput) ToAnalysisComputationArrayOutputWithContext(ctx context.Context) AnalysisComputationArrayOutput {
	return o
}

func (o AnalysisComputationArrayOutput) Index(i pulumi.IntInput) AnalysisComputationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisComputation {
		return vs[0].([]AnalysisComputation)[vs[1].(int)]
	}).(AnalysisComputationOutput)
}

type AnalysisConditionalFormattingColor struct {
	Gradient *AnalysisConditionalFormattingGradientColor `pulumi:"gradient"`
	Solid    *AnalysisConditionalFormattingSolidColor    `pulumi:"solid"`
}

// AnalysisConditionalFormattingColorInput is an input type that accepts AnalysisConditionalFormattingColorArgs and AnalysisConditionalFormattingColorOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingColorInput` via:
//
//	AnalysisConditionalFormattingColorArgs{...}
type AnalysisConditionalFormattingColorInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingColorOutput() AnalysisConditionalFormattingColorOutput
	ToAnalysisConditionalFormattingColorOutputWithContext(context.Context) AnalysisConditionalFormattingColorOutput
}

type AnalysisConditionalFormattingColorArgs struct {
	Gradient AnalysisConditionalFormattingGradientColorPtrInput `pulumi:"gradient"`
	Solid    AnalysisConditionalFormattingSolidColorPtrInput    `pulumi:"solid"`
}

func (AnalysisConditionalFormattingColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingColor)(nil)).Elem()
}

func (i AnalysisConditionalFormattingColorArgs) ToAnalysisConditionalFormattingColorOutput() AnalysisConditionalFormattingColorOutput {
	return i.ToAnalysisConditionalFormattingColorOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingColorArgs) ToAnalysisConditionalFormattingColorOutputWithContext(ctx context.Context) AnalysisConditionalFormattingColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingColorOutput)
}

func (i AnalysisConditionalFormattingColorArgs) ToAnalysisConditionalFormattingColorPtrOutput() AnalysisConditionalFormattingColorPtrOutput {
	return i.ToAnalysisConditionalFormattingColorPtrOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingColorArgs) ToAnalysisConditionalFormattingColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingColorOutput).ToAnalysisConditionalFormattingColorPtrOutputWithContext(ctx)
}

// AnalysisConditionalFormattingColorPtrInput is an input type that accepts AnalysisConditionalFormattingColorArgs, AnalysisConditionalFormattingColorPtr and AnalysisConditionalFormattingColorPtrOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingColorPtrInput` via:
//
//	        AnalysisConditionalFormattingColorArgs{...}
//
//	or:
//
//	        nil
type AnalysisConditionalFormattingColorPtrInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingColorPtrOutput() AnalysisConditionalFormattingColorPtrOutput
	ToAnalysisConditionalFormattingColorPtrOutputWithContext(context.Context) AnalysisConditionalFormattingColorPtrOutput
}

type analysisConditionalFormattingColorPtrType AnalysisConditionalFormattingColorArgs

func AnalysisConditionalFormattingColorPtr(v *AnalysisConditionalFormattingColorArgs) AnalysisConditionalFormattingColorPtrInput {
	return (*analysisConditionalFormattingColorPtrType)(v)
}

func (*analysisConditionalFormattingColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingColor)(nil)).Elem()
}

func (i *analysisConditionalFormattingColorPtrType) ToAnalysisConditionalFormattingColorPtrOutput() AnalysisConditionalFormattingColorPtrOutput {
	return i.ToAnalysisConditionalFormattingColorPtrOutputWithContext(context.Background())
}

func (i *analysisConditionalFormattingColorPtrType) ToAnalysisConditionalFormattingColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisConditionalFormattingColorOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingColor)(nil)).Elem()
}

func (o AnalysisConditionalFormattingColorOutput) ToAnalysisConditionalFormattingColorOutput() AnalysisConditionalFormattingColorOutput {
	return o
}

func (o AnalysisConditionalFormattingColorOutput) ToAnalysisConditionalFormattingColorOutputWithContext(ctx context.Context) AnalysisConditionalFormattingColorOutput {
	return o
}

func (o AnalysisConditionalFormattingColorOutput) ToAnalysisConditionalFormattingColorPtrOutput() AnalysisConditionalFormattingColorPtrOutput {
	return o.ToAnalysisConditionalFormattingColorPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingColorOutput) ToAnalysisConditionalFormattingColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisConditionalFormattingColor) *AnalysisConditionalFormattingColor {
		return &v
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

func (o AnalysisConditionalFormattingColorOutput) Gradient() AnalysisConditionalFormattingGradientColorPtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingColor) *AnalysisConditionalFormattingGradientColor {
		return v.Gradient
	}).(AnalysisConditionalFormattingGradientColorPtrOutput)
}

func (o AnalysisConditionalFormattingColorOutput) Solid() AnalysisConditionalFormattingSolidColorPtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingColor) *AnalysisConditionalFormattingSolidColor { return v.Solid }).(AnalysisConditionalFormattingSolidColorPtrOutput)
}

type AnalysisConditionalFormattingColorPtrOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingColor)(nil)).Elem()
}

func (o AnalysisConditionalFormattingColorPtrOutput) ToAnalysisConditionalFormattingColorPtrOutput() AnalysisConditionalFormattingColorPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingColorPtrOutput) ToAnalysisConditionalFormattingColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingColorPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingColorPtrOutput) Elem() AnalysisConditionalFormattingColorOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingColor) AnalysisConditionalFormattingColor {
		if v != nil {
			return *v
		}
		var ret AnalysisConditionalFormattingColor
		return ret
	}).(AnalysisConditionalFormattingColorOutput)
}

func (o AnalysisConditionalFormattingColorPtrOutput) Gradient() AnalysisConditionalFormattingGradientColorPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingColor) *AnalysisConditionalFormattingGradientColor {
		if v == nil {
			return nil
		}
		return v.Gradient
	}).(AnalysisConditionalFormattingGradientColorPtrOutput)
}

func (o AnalysisConditionalFormattingColorPtrOutput) Solid() AnalysisConditionalFormattingSolidColorPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingColor) *AnalysisConditionalFormattingSolidColor {
		if v == nil {
			return nil
		}
		return v.Solid
	}).(AnalysisConditionalFormattingSolidColorPtrOutput)
}

type AnalysisConditionalFormattingCustomIconCondition struct {
	Color                *string                                                `pulumi:"color"`
	DisplayConfiguration *AnalysisConditionalFormattingIconDisplayConfiguration `pulumi:"displayConfiguration"`
	Expression           string                                                 `pulumi:"expression"`
	IconOptions          AnalysisConditionalFormattingCustomIconOptions         `pulumi:"iconOptions"`
}

// AnalysisConditionalFormattingCustomIconConditionInput is an input type that accepts AnalysisConditionalFormattingCustomIconConditionArgs and AnalysisConditionalFormattingCustomIconConditionOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingCustomIconConditionInput` via:
//
//	AnalysisConditionalFormattingCustomIconConditionArgs{...}
type AnalysisConditionalFormattingCustomIconConditionInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingCustomIconConditionOutput() AnalysisConditionalFormattingCustomIconConditionOutput
	ToAnalysisConditionalFormattingCustomIconConditionOutputWithContext(context.Context) AnalysisConditionalFormattingCustomIconConditionOutput
}

type AnalysisConditionalFormattingCustomIconConditionArgs struct {
	Color                pulumi.StringPtrInput                                         `pulumi:"color"`
	DisplayConfiguration AnalysisConditionalFormattingIconDisplayConfigurationPtrInput `pulumi:"displayConfiguration"`
	Expression           pulumi.StringInput                                            `pulumi:"expression"`
	IconOptions          AnalysisConditionalFormattingCustomIconOptionsInput           `pulumi:"iconOptions"`
}

func (AnalysisConditionalFormattingCustomIconConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (i AnalysisConditionalFormattingCustomIconConditionArgs) ToAnalysisConditionalFormattingCustomIconConditionOutput() AnalysisConditionalFormattingCustomIconConditionOutput {
	return i.ToAnalysisConditionalFormattingCustomIconConditionOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingCustomIconConditionArgs) ToAnalysisConditionalFormattingCustomIconConditionOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingCustomIconConditionOutput)
}

func (i AnalysisConditionalFormattingCustomIconConditionArgs) ToAnalysisConditionalFormattingCustomIconConditionPtrOutput() AnalysisConditionalFormattingCustomIconConditionPtrOutput {
	return i.ToAnalysisConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingCustomIconConditionArgs) ToAnalysisConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingCustomIconConditionOutput).ToAnalysisConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx)
}

// AnalysisConditionalFormattingCustomIconConditionPtrInput is an input type that accepts AnalysisConditionalFormattingCustomIconConditionArgs, AnalysisConditionalFormattingCustomIconConditionPtr and AnalysisConditionalFormattingCustomIconConditionPtrOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingCustomIconConditionPtrInput` via:
//
//	        AnalysisConditionalFormattingCustomIconConditionArgs{...}
//
//	or:
//
//	        nil
type AnalysisConditionalFormattingCustomIconConditionPtrInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingCustomIconConditionPtrOutput() AnalysisConditionalFormattingCustomIconConditionPtrOutput
	ToAnalysisConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Context) AnalysisConditionalFormattingCustomIconConditionPtrOutput
}

type analysisConditionalFormattingCustomIconConditionPtrType AnalysisConditionalFormattingCustomIconConditionArgs

func AnalysisConditionalFormattingCustomIconConditionPtr(v *AnalysisConditionalFormattingCustomIconConditionArgs) AnalysisConditionalFormattingCustomIconConditionPtrInput {
	return (*analysisConditionalFormattingCustomIconConditionPtrType)(v)
}

func (*analysisConditionalFormattingCustomIconConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (i *analysisConditionalFormattingCustomIconConditionPtrType) ToAnalysisConditionalFormattingCustomIconConditionPtrOutput() AnalysisConditionalFormattingCustomIconConditionPtrOutput {
	return i.ToAnalysisConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Background())
}

func (i *analysisConditionalFormattingCustomIconConditionPtrType) ToAnalysisConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingCustomIconConditionPtrOutput)
}

type AnalysisConditionalFormattingCustomIconConditionOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingCustomIconConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (o AnalysisConditionalFormattingCustomIconConditionOutput) ToAnalysisConditionalFormattingCustomIconConditionOutput() AnalysisConditionalFormattingCustomIconConditionOutput {
	return o
}

func (o AnalysisConditionalFormattingCustomIconConditionOutput) ToAnalysisConditionalFormattingCustomIconConditionOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconConditionOutput {
	return o
}

func (o AnalysisConditionalFormattingCustomIconConditionOutput) ToAnalysisConditionalFormattingCustomIconConditionPtrOutput() AnalysisConditionalFormattingCustomIconConditionPtrOutput {
	return o.ToAnalysisConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingCustomIconConditionOutput) ToAnalysisConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisConditionalFormattingCustomIconCondition) *AnalysisConditionalFormattingCustomIconCondition {
		return &v
	}).(AnalysisConditionalFormattingCustomIconConditionPtrOutput)
}

func (o AnalysisConditionalFormattingCustomIconConditionOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingCustomIconCondition) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o AnalysisConditionalFormattingCustomIconConditionOutput) DisplayConfiguration() AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingCustomIconCondition) *AnalysisConditionalFormattingIconDisplayConfiguration {
		return v.DisplayConfiguration
	}).(AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput)
}

func (o AnalysisConditionalFormattingCustomIconConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingCustomIconCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o AnalysisConditionalFormattingCustomIconConditionOutput) IconOptions() AnalysisConditionalFormattingCustomIconOptionsOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingCustomIconCondition) AnalysisConditionalFormattingCustomIconOptions {
		return v.IconOptions
	}).(AnalysisConditionalFormattingCustomIconOptionsOutput)
}

type AnalysisConditionalFormattingCustomIconConditionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingCustomIconConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (o AnalysisConditionalFormattingCustomIconConditionPtrOutput) ToAnalysisConditionalFormattingCustomIconConditionPtrOutput() AnalysisConditionalFormattingCustomIconConditionPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingCustomIconConditionPtrOutput) ToAnalysisConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconConditionPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingCustomIconConditionPtrOutput) Elem() AnalysisConditionalFormattingCustomIconConditionOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingCustomIconCondition) AnalysisConditionalFormattingCustomIconCondition {
		if v != nil {
			return *v
		}
		var ret AnalysisConditionalFormattingCustomIconCondition
		return ret
	}).(AnalysisConditionalFormattingCustomIconConditionOutput)
}

func (o AnalysisConditionalFormattingCustomIconConditionPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingCustomIconCondition) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisConditionalFormattingCustomIconConditionPtrOutput) DisplayConfiguration() AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingCustomIconCondition) *AnalysisConditionalFormattingIconDisplayConfiguration {
		if v == nil {
			return nil
		}
		return v.DisplayConfiguration
	}).(AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput)
}

func (o AnalysisConditionalFormattingCustomIconConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingCustomIconCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisConditionalFormattingCustomIconConditionPtrOutput) IconOptions() AnalysisConditionalFormattingCustomIconOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingCustomIconCondition) *AnalysisConditionalFormattingCustomIconOptions {
		if v == nil {
			return nil
		}
		return &v.IconOptions
	}).(AnalysisConditionalFormattingCustomIconOptionsPtrOutput)
}

type AnalysisConditionalFormattingCustomIconOptions struct {
	Icon        *AnalysisIcon `pulumi:"icon"`
	UnicodeIcon *string       `pulumi:"unicodeIcon"`
}

// AnalysisConditionalFormattingCustomIconOptionsInput is an input type that accepts AnalysisConditionalFormattingCustomIconOptionsArgs and AnalysisConditionalFormattingCustomIconOptionsOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingCustomIconOptionsInput` via:
//
//	AnalysisConditionalFormattingCustomIconOptionsArgs{...}
type AnalysisConditionalFormattingCustomIconOptionsInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingCustomIconOptionsOutput() AnalysisConditionalFormattingCustomIconOptionsOutput
	ToAnalysisConditionalFormattingCustomIconOptionsOutputWithContext(context.Context) AnalysisConditionalFormattingCustomIconOptionsOutput
}

type AnalysisConditionalFormattingCustomIconOptionsArgs struct {
	Icon        AnalysisIconPtrInput  `pulumi:"icon"`
	UnicodeIcon pulumi.StringPtrInput `pulumi:"unicodeIcon"`
}

func (AnalysisConditionalFormattingCustomIconOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (i AnalysisConditionalFormattingCustomIconOptionsArgs) ToAnalysisConditionalFormattingCustomIconOptionsOutput() AnalysisConditionalFormattingCustomIconOptionsOutput {
	return i.ToAnalysisConditionalFormattingCustomIconOptionsOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingCustomIconOptionsArgs) ToAnalysisConditionalFormattingCustomIconOptionsOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingCustomIconOptionsOutput)
}

func (i AnalysisConditionalFormattingCustomIconOptionsArgs) ToAnalysisConditionalFormattingCustomIconOptionsPtrOutput() AnalysisConditionalFormattingCustomIconOptionsPtrOutput {
	return i.ToAnalysisConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingCustomIconOptionsArgs) ToAnalysisConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingCustomIconOptionsOutput).ToAnalysisConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx)
}

// AnalysisConditionalFormattingCustomIconOptionsPtrInput is an input type that accepts AnalysisConditionalFormattingCustomIconOptionsArgs, AnalysisConditionalFormattingCustomIconOptionsPtr and AnalysisConditionalFormattingCustomIconOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingCustomIconOptionsPtrInput` via:
//
//	        AnalysisConditionalFormattingCustomIconOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisConditionalFormattingCustomIconOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingCustomIconOptionsPtrOutput() AnalysisConditionalFormattingCustomIconOptionsPtrOutput
	ToAnalysisConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Context) AnalysisConditionalFormattingCustomIconOptionsPtrOutput
}

type analysisConditionalFormattingCustomIconOptionsPtrType AnalysisConditionalFormattingCustomIconOptionsArgs

func AnalysisConditionalFormattingCustomIconOptionsPtr(v *AnalysisConditionalFormattingCustomIconOptionsArgs) AnalysisConditionalFormattingCustomIconOptionsPtrInput {
	return (*analysisConditionalFormattingCustomIconOptionsPtrType)(v)
}

func (*analysisConditionalFormattingCustomIconOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (i *analysisConditionalFormattingCustomIconOptionsPtrType) ToAnalysisConditionalFormattingCustomIconOptionsPtrOutput() AnalysisConditionalFormattingCustomIconOptionsPtrOutput {
	return i.ToAnalysisConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisConditionalFormattingCustomIconOptionsPtrType) ToAnalysisConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingCustomIconOptionsPtrOutput)
}

type AnalysisConditionalFormattingCustomIconOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingCustomIconOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (o AnalysisConditionalFormattingCustomIconOptionsOutput) ToAnalysisConditionalFormattingCustomIconOptionsOutput() AnalysisConditionalFormattingCustomIconOptionsOutput {
	return o
}

func (o AnalysisConditionalFormattingCustomIconOptionsOutput) ToAnalysisConditionalFormattingCustomIconOptionsOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconOptionsOutput {
	return o
}

func (o AnalysisConditionalFormattingCustomIconOptionsOutput) ToAnalysisConditionalFormattingCustomIconOptionsPtrOutput() AnalysisConditionalFormattingCustomIconOptionsPtrOutput {
	return o.ToAnalysisConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingCustomIconOptionsOutput) ToAnalysisConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisConditionalFormattingCustomIconOptions) *AnalysisConditionalFormattingCustomIconOptions {
		return &v
	}).(AnalysisConditionalFormattingCustomIconOptionsPtrOutput)
}

func (o AnalysisConditionalFormattingCustomIconOptionsOutput) Icon() AnalysisIconPtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingCustomIconOptions) *AnalysisIcon { return v.Icon }).(AnalysisIconPtrOutput)
}

func (o AnalysisConditionalFormattingCustomIconOptionsOutput) UnicodeIcon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingCustomIconOptions) *string { return v.UnicodeIcon }).(pulumi.StringPtrOutput)
}

type AnalysisConditionalFormattingCustomIconOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingCustomIconOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (o AnalysisConditionalFormattingCustomIconOptionsPtrOutput) ToAnalysisConditionalFormattingCustomIconOptionsPtrOutput() AnalysisConditionalFormattingCustomIconOptionsPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingCustomIconOptionsPtrOutput) ToAnalysisConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingCustomIconOptionsPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingCustomIconOptionsPtrOutput) Elem() AnalysisConditionalFormattingCustomIconOptionsOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingCustomIconOptions) AnalysisConditionalFormattingCustomIconOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisConditionalFormattingCustomIconOptions
		return ret
	}).(AnalysisConditionalFormattingCustomIconOptionsOutput)
}

func (o AnalysisConditionalFormattingCustomIconOptionsPtrOutput) Icon() AnalysisIconPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingCustomIconOptions) *AnalysisIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(AnalysisIconPtrOutput)
}

func (o AnalysisConditionalFormattingCustomIconOptionsPtrOutput) UnicodeIcon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingCustomIconOptions) *string {
		if v == nil {
			return nil
		}
		return v.UnicodeIcon
	}).(pulumi.StringPtrOutput)
}

type AnalysisConditionalFormattingGradientColor struct {
	Color      AnalysisGradientColor `pulumi:"color"`
	Expression string                `pulumi:"expression"`
}

// AnalysisConditionalFormattingGradientColorInput is an input type that accepts AnalysisConditionalFormattingGradientColorArgs and AnalysisConditionalFormattingGradientColorOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingGradientColorInput` via:
//
//	AnalysisConditionalFormattingGradientColorArgs{...}
type AnalysisConditionalFormattingGradientColorInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingGradientColorOutput() AnalysisConditionalFormattingGradientColorOutput
	ToAnalysisConditionalFormattingGradientColorOutputWithContext(context.Context) AnalysisConditionalFormattingGradientColorOutput
}

type AnalysisConditionalFormattingGradientColorArgs struct {
	Color      AnalysisGradientColorInput `pulumi:"color"`
	Expression pulumi.StringInput         `pulumi:"expression"`
}

func (AnalysisConditionalFormattingGradientColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingGradientColor)(nil)).Elem()
}

func (i AnalysisConditionalFormattingGradientColorArgs) ToAnalysisConditionalFormattingGradientColorOutput() AnalysisConditionalFormattingGradientColorOutput {
	return i.ToAnalysisConditionalFormattingGradientColorOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingGradientColorArgs) ToAnalysisConditionalFormattingGradientColorOutputWithContext(ctx context.Context) AnalysisConditionalFormattingGradientColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingGradientColorOutput)
}

func (i AnalysisConditionalFormattingGradientColorArgs) ToAnalysisConditionalFormattingGradientColorPtrOutput() AnalysisConditionalFormattingGradientColorPtrOutput {
	return i.ToAnalysisConditionalFormattingGradientColorPtrOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingGradientColorArgs) ToAnalysisConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingGradientColorOutput).ToAnalysisConditionalFormattingGradientColorPtrOutputWithContext(ctx)
}

// AnalysisConditionalFormattingGradientColorPtrInput is an input type that accepts AnalysisConditionalFormattingGradientColorArgs, AnalysisConditionalFormattingGradientColorPtr and AnalysisConditionalFormattingGradientColorPtrOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingGradientColorPtrInput` via:
//
//	        AnalysisConditionalFormattingGradientColorArgs{...}
//
//	or:
//
//	        nil
type AnalysisConditionalFormattingGradientColorPtrInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingGradientColorPtrOutput() AnalysisConditionalFormattingGradientColorPtrOutput
	ToAnalysisConditionalFormattingGradientColorPtrOutputWithContext(context.Context) AnalysisConditionalFormattingGradientColorPtrOutput
}

type analysisConditionalFormattingGradientColorPtrType AnalysisConditionalFormattingGradientColorArgs

func AnalysisConditionalFormattingGradientColorPtr(v *AnalysisConditionalFormattingGradientColorArgs) AnalysisConditionalFormattingGradientColorPtrInput {
	return (*analysisConditionalFormattingGradientColorPtrType)(v)
}

func (*analysisConditionalFormattingGradientColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingGradientColor)(nil)).Elem()
}

func (i *analysisConditionalFormattingGradientColorPtrType) ToAnalysisConditionalFormattingGradientColorPtrOutput() AnalysisConditionalFormattingGradientColorPtrOutput {
	return i.ToAnalysisConditionalFormattingGradientColorPtrOutputWithContext(context.Background())
}

func (i *analysisConditionalFormattingGradientColorPtrType) ToAnalysisConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingGradientColorPtrOutput)
}

type AnalysisConditionalFormattingGradientColorOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingGradientColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingGradientColor)(nil)).Elem()
}

func (o AnalysisConditionalFormattingGradientColorOutput) ToAnalysisConditionalFormattingGradientColorOutput() AnalysisConditionalFormattingGradientColorOutput {
	return o
}

func (o AnalysisConditionalFormattingGradientColorOutput) ToAnalysisConditionalFormattingGradientColorOutputWithContext(ctx context.Context) AnalysisConditionalFormattingGradientColorOutput {
	return o
}

func (o AnalysisConditionalFormattingGradientColorOutput) ToAnalysisConditionalFormattingGradientColorPtrOutput() AnalysisConditionalFormattingGradientColorPtrOutput {
	return o.ToAnalysisConditionalFormattingGradientColorPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingGradientColorOutput) ToAnalysisConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingGradientColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisConditionalFormattingGradientColor) *AnalysisConditionalFormattingGradientColor {
		return &v
	}).(AnalysisConditionalFormattingGradientColorPtrOutput)
}

func (o AnalysisConditionalFormattingGradientColorOutput) Color() AnalysisGradientColorOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingGradientColor) AnalysisGradientColor { return v.Color }).(AnalysisGradientColorOutput)
}

func (o AnalysisConditionalFormattingGradientColorOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingGradientColor) string { return v.Expression }).(pulumi.StringOutput)
}

type AnalysisConditionalFormattingGradientColorPtrOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingGradientColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingGradientColor)(nil)).Elem()
}

func (o AnalysisConditionalFormattingGradientColorPtrOutput) ToAnalysisConditionalFormattingGradientColorPtrOutput() AnalysisConditionalFormattingGradientColorPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingGradientColorPtrOutput) ToAnalysisConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingGradientColorPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingGradientColorPtrOutput) Elem() AnalysisConditionalFormattingGradientColorOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingGradientColor) AnalysisConditionalFormattingGradientColor {
		if v != nil {
			return *v
		}
		var ret AnalysisConditionalFormattingGradientColor
		return ret
	}).(AnalysisConditionalFormattingGradientColorOutput)
}

func (o AnalysisConditionalFormattingGradientColorPtrOutput) Color() AnalysisGradientColorPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingGradientColor) *AnalysisGradientColor {
		if v == nil {
			return nil
		}
		return &v.Color
	}).(AnalysisGradientColorPtrOutput)
}

func (o AnalysisConditionalFormattingGradientColorPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingGradientColor) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

type AnalysisConditionalFormattingIcon struct {
	CustomCondition *AnalysisConditionalFormattingCustomIconCondition `pulumi:"customCondition"`
	IconSet         *AnalysisConditionalFormattingIconSet             `pulumi:"iconSet"`
}

// AnalysisConditionalFormattingIconInput is an input type that accepts AnalysisConditionalFormattingIconArgs and AnalysisConditionalFormattingIconOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingIconInput` via:
//
//	AnalysisConditionalFormattingIconArgs{...}
type AnalysisConditionalFormattingIconInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingIconOutput() AnalysisConditionalFormattingIconOutput
	ToAnalysisConditionalFormattingIconOutputWithContext(context.Context) AnalysisConditionalFormattingIconOutput
}

type AnalysisConditionalFormattingIconArgs struct {
	CustomCondition AnalysisConditionalFormattingCustomIconConditionPtrInput `pulumi:"customCondition"`
	IconSet         AnalysisConditionalFormattingIconSetPtrInput             `pulumi:"iconSet"`
}

func (AnalysisConditionalFormattingIconArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingIcon)(nil)).Elem()
}

func (i AnalysisConditionalFormattingIconArgs) ToAnalysisConditionalFormattingIconOutput() AnalysisConditionalFormattingIconOutput {
	return i.ToAnalysisConditionalFormattingIconOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingIconArgs) ToAnalysisConditionalFormattingIconOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingIconOutput)
}

func (i AnalysisConditionalFormattingIconArgs) ToAnalysisConditionalFormattingIconPtrOutput() AnalysisConditionalFormattingIconPtrOutput {
	return i.ToAnalysisConditionalFormattingIconPtrOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingIconArgs) ToAnalysisConditionalFormattingIconPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingIconOutput).ToAnalysisConditionalFormattingIconPtrOutputWithContext(ctx)
}

// AnalysisConditionalFormattingIconPtrInput is an input type that accepts AnalysisConditionalFormattingIconArgs, AnalysisConditionalFormattingIconPtr and AnalysisConditionalFormattingIconPtrOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingIconPtrInput` via:
//
//	        AnalysisConditionalFormattingIconArgs{...}
//
//	or:
//
//	        nil
type AnalysisConditionalFormattingIconPtrInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingIconPtrOutput() AnalysisConditionalFormattingIconPtrOutput
	ToAnalysisConditionalFormattingIconPtrOutputWithContext(context.Context) AnalysisConditionalFormattingIconPtrOutput
}

type analysisConditionalFormattingIconPtrType AnalysisConditionalFormattingIconArgs

func AnalysisConditionalFormattingIconPtr(v *AnalysisConditionalFormattingIconArgs) AnalysisConditionalFormattingIconPtrInput {
	return (*analysisConditionalFormattingIconPtrType)(v)
}

func (*analysisConditionalFormattingIconPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingIcon)(nil)).Elem()
}

func (i *analysisConditionalFormattingIconPtrType) ToAnalysisConditionalFormattingIconPtrOutput() AnalysisConditionalFormattingIconPtrOutput {
	return i.ToAnalysisConditionalFormattingIconPtrOutputWithContext(context.Background())
}

func (i *analysisConditionalFormattingIconPtrType) ToAnalysisConditionalFormattingIconPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingIconPtrOutput)
}

type AnalysisConditionalFormattingIconOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingIconOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingIcon)(nil)).Elem()
}

func (o AnalysisConditionalFormattingIconOutput) ToAnalysisConditionalFormattingIconOutput() AnalysisConditionalFormattingIconOutput {
	return o
}

func (o AnalysisConditionalFormattingIconOutput) ToAnalysisConditionalFormattingIconOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconOutput {
	return o
}

func (o AnalysisConditionalFormattingIconOutput) ToAnalysisConditionalFormattingIconPtrOutput() AnalysisConditionalFormattingIconPtrOutput {
	return o.ToAnalysisConditionalFormattingIconPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconOutput) ToAnalysisConditionalFormattingIconPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisConditionalFormattingIcon) *AnalysisConditionalFormattingIcon {
		return &v
	}).(AnalysisConditionalFormattingIconPtrOutput)
}

func (o AnalysisConditionalFormattingIconOutput) CustomCondition() AnalysisConditionalFormattingCustomIconConditionPtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingIcon) *AnalysisConditionalFormattingCustomIconCondition {
		return v.CustomCondition
	}).(AnalysisConditionalFormattingCustomIconConditionPtrOutput)
}

func (o AnalysisConditionalFormattingIconOutput) IconSet() AnalysisConditionalFormattingIconSetPtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingIcon) *AnalysisConditionalFormattingIconSet { return v.IconSet }).(AnalysisConditionalFormattingIconSetPtrOutput)
}

type AnalysisConditionalFormattingIconPtrOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingIconPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingIcon)(nil)).Elem()
}

func (o AnalysisConditionalFormattingIconPtrOutput) ToAnalysisConditionalFormattingIconPtrOutput() AnalysisConditionalFormattingIconPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingIconPtrOutput) ToAnalysisConditionalFormattingIconPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingIconPtrOutput) Elem() AnalysisConditionalFormattingIconOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingIcon) AnalysisConditionalFormattingIcon {
		if v != nil {
			return *v
		}
		var ret AnalysisConditionalFormattingIcon
		return ret
	}).(AnalysisConditionalFormattingIconOutput)
}

func (o AnalysisConditionalFormattingIconPtrOutput) CustomCondition() AnalysisConditionalFormattingCustomIconConditionPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingIcon) *AnalysisConditionalFormattingCustomIconCondition {
		if v == nil {
			return nil
		}
		return v.CustomCondition
	}).(AnalysisConditionalFormattingCustomIconConditionPtrOutput)
}

func (o AnalysisConditionalFormattingIconPtrOutput) IconSet() AnalysisConditionalFormattingIconSetPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingIcon) *AnalysisConditionalFormattingIconSet {
		if v == nil {
			return nil
		}
		return v.IconSet
	}).(AnalysisConditionalFormattingIconSetPtrOutput)
}

type AnalysisConditionalFormattingIconDisplayConfiguration struct {
	IconDisplayOption *AnalysisConditionalFormattingIconDisplayOption `pulumi:"iconDisplayOption"`
}

// AnalysisConditionalFormattingIconDisplayConfigurationInput is an input type that accepts AnalysisConditionalFormattingIconDisplayConfigurationArgs and AnalysisConditionalFormattingIconDisplayConfigurationOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingIconDisplayConfigurationInput` via:
//
//	AnalysisConditionalFormattingIconDisplayConfigurationArgs{...}
type AnalysisConditionalFormattingIconDisplayConfigurationInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingIconDisplayConfigurationOutput() AnalysisConditionalFormattingIconDisplayConfigurationOutput
	ToAnalysisConditionalFormattingIconDisplayConfigurationOutputWithContext(context.Context) AnalysisConditionalFormattingIconDisplayConfigurationOutput
}

type AnalysisConditionalFormattingIconDisplayConfigurationArgs struct {
	IconDisplayOption AnalysisConditionalFormattingIconDisplayOptionPtrInput `pulumi:"iconDisplayOption"`
}

func (AnalysisConditionalFormattingIconDisplayConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (i AnalysisConditionalFormattingIconDisplayConfigurationArgs) ToAnalysisConditionalFormattingIconDisplayConfigurationOutput() AnalysisConditionalFormattingIconDisplayConfigurationOutput {
	return i.ToAnalysisConditionalFormattingIconDisplayConfigurationOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingIconDisplayConfigurationArgs) ToAnalysisConditionalFormattingIconDisplayConfigurationOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingIconDisplayConfigurationOutput)
}

func (i AnalysisConditionalFormattingIconDisplayConfigurationArgs) ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutput() AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput {
	return i.ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingIconDisplayConfigurationArgs) ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingIconDisplayConfigurationOutput).ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx)
}

// AnalysisConditionalFormattingIconDisplayConfigurationPtrInput is an input type that accepts AnalysisConditionalFormattingIconDisplayConfigurationArgs, AnalysisConditionalFormattingIconDisplayConfigurationPtr and AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingIconDisplayConfigurationPtrInput` via:
//
//	        AnalysisConditionalFormattingIconDisplayConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisConditionalFormattingIconDisplayConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutput() AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput
	ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Context) AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput
}

type analysisConditionalFormattingIconDisplayConfigurationPtrType AnalysisConditionalFormattingIconDisplayConfigurationArgs

func AnalysisConditionalFormattingIconDisplayConfigurationPtr(v *AnalysisConditionalFormattingIconDisplayConfigurationArgs) AnalysisConditionalFormattingIconDisplayConfigurationPtrInput {
	return (*analysisConditionalFormattingIconDisplayConfigurationPtrType)(v)
}

func (*analysisConditionalFormattingIconDisplayConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (i *analysisConditionalFormattingIconDisplayConfigurationPtrType) ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutput() AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput {
	return i.ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisConditionalFormattingIconDisplayConfigurationPtrType) ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput)
}

type AnalysisConditionalFormattingIconDisplayConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingIconDisplayConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (o AnalysisConditionalFormattingIconDisplayConfigurationOutput) ToAnalysisConditionalFormattingIconDisplayConfigurationOutput() AnalysisConditionalFormattingIconDisplayConfigurationOutput {
	return o
}

func (o AnalysisConditionalFormattingIconDisplayConfigurationOutput) ToAnalysisConditionalFormattingIconDisplayConfigurationOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayConfigurationOutput {
	return o
}

func (o AnalysisConditionalFormattingIconDisplayConfigurationOutput) ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutput() AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconDisplayConfigurationOutput) ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisConditionalFormattingIconDisplayConfiguration) *AnalysisConditionalFormattingIconDisplayConfiguration {
		return &v
	}).(AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput)
}

func (o AnalysisConditionalFormattingIconDisplayConfigurationOutput) IconDisplayOption() AnalysisConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingIconDisplayConfiguration) *AnalysisConditionalFormattingIconDisplayOption {
		return v.IconDisplayOption
	}).(AnalysisConditionalFormattingIconDisplayOptionPtrOutput)
}

type AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (o AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput) ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutput() AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput) ToAnalysisConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput) Elem() AnalysisConditionalFormattingIconDisplayConfigurationOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingIconDisplayConfiguration) AnalysisConditionalFormattingIconDisplayConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisConditionalFormattingIconDisplayConfiguration
		return ret
	}).(AnalysisConditionalFormattingIconDisplayConfigurationOutput)
}

func (o AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput) IconDisplayOption() AnalysisConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingIconDisplayConfiguration) *AnalysisConditionalFormattingIconDisplayOption {
		if v == nil {
			return nil
		}
		return v.IconDisplayOption
	}).(AnalysisConditionalFormattingIconDisplayOptionPtrOutput)
}

type AnalysisConditionalFormattingIconSet struct {
	Expression  string                                    `pulumi:"expression"`
	IconSetType *AnalysisConditionalFormattingIconSetType `pulumi:"iconSetType"`
}

// AnalysisConditionalFormattingIconSetInput is an input type that accepts AnalysisConditionalFormattingIconSetArgs and AnalysisConditionalFormattingIconSetOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingIconSetInput` via:
//
//	AnalysisConditionalFormattingIconSetArgs{...}
type AnalysisConditionalFormattingIconSetInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingIconSetOutput() AnalysisConditionalFormattingIconSetOutput
	ToAnalysisConditionalFormattingIconSetOutputWithContext(context.Context) AnalysisConditionalFormattingIconSetOutput
}

type AnalysisConditionalFormattingIconSetArgs struct {
	Expression  pulumi.StringInput                               `pulumi:"expression"`
	IconSetType AnalysisConditionalFormattingIconSetTypePtrInput `pulumi:"iconSetType"`
}

func (AnalysisConditionalFormattingIconSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingIconSet)(nil)).Elem()
}

func (i AnalysisConditionalFormattingIconSetArgs) ToAnalysisConditionalFormattingIconSetOutput() AnalysisConditionalFormattingIconSetOutput {
	return i.ToAnalysisConditionalFormattingIconSetOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingIconSetArgs) ToAnalysisConditionalFormattingIconSetOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingIconSetOutput)
}

func (i AnalysisConditionalFormattingIconSetArgs) ToAnalysisConditionalFormattingIconSetPtrOutput() AnalysisConditionalFormattingIconSetPtrOutput {
	return i.ToAnalysisConditionalFormattingIconSetPtrOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingIconSetArgs) ToAnalysisConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingIconSetOutput).ToAnalysisConditionalFormattingIconSetPtrOutputWithContext(ctx)
}

// AnalysisConditionalFormattingIconSetPtrInput is an input type that accepts AnalysisConditionalFormattingIconSetArgs, AnalysisConditionalFormattingIconSetPtr and AnalysisConditionalFormattingIconSetPtrOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingIconSetPtrInput` via:
//
//	        AnalysisConditionalFormattingIconSetArgs{...}
//
//	or:
//
//	        nil
type AnalysisConditionalFormattingIconSetPtrInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingIconSetPtrOutput() AnalysisConditionalFormattingIconSetPtrOutput
	ToAnalysisConditionalFormattingIconSetPtrOutputWithContext(context.Context) AnalysisConditionalFormattingIconSetPtrOutput
}

type analysisConditionalFormattingIconSetPtrType AnalysisConditionalFormattingIconSetArgs

func AnalysisConditionalFormattingIconSetPtr(v *AnalysisConditionalFormattingIconSetArgs) AnalysisConditionalFormattingIconSetPtrInput {
	return (*analysisConditionalFormattingIconSetPtrType)(v)
}

func (*analysisConditionalFormattingIconSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingIconSet)(nil)).Elem()
}

func (i *analysisConditionalFormattingIconSetPtrType) ToAnalysisConditionalFormattingIconSetPtrOutput() AnalysisConditionalFormattingIconSetPtrOutput {
	return i.ToAnalysisConditionalFormattingIconSetPtrOutputWithContext(context.Background())
}

func (i *analysisConditionalFormattingIconSetPtrType) ToAnalysisConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingIconSetPtrOutput)
}

type AnalysisConditionalFormattingIconSetOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingIconSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingIconSet)(nil)).Elem()
}

func (o AnalysisConditionalFormattingIconSetOutput) ToAnalysisConditionalFormattingIconSetOutput() AnalysisConditionalFormattingIconSetOutput {
	return o
}

func (o AnalysisConditionalFormattingIconSetOutput) ToAnalysisConditionalFormattingIconSetOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetOutput {
	return o
}

func (o AnalysisConditionalFormattingIconSetOutput) ToAnalysisConditionalFormattingIconSetPtrOutput() AnalysisConditionalFormattingIconSetPtrOutput {
	return o.ToAnalysisConditionalFormattingIconSetPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconSetOutput) ToAnalysisConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisConditionalFormattingIconSet) *AnalysisConditionalFormattingIconSet {
		return &v
	}).(AnalysisConditionalFormattingIconSetPtrOutput)
}

func (o AnalysisConditionalFormattingIconSetOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingIconSet) string { return v.Expression }).(pulumi.StringOutput)
}

func (o AnalysisConditionalFormattingIconSetOutput) IconSetType() AnalysisConditionalFormattingIconSetTypePtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingIconSet) *AnalysisConditionalFormattingIconSetType {
		return v.IconSetType
	}).(AnalysisConditionalFormattingIconSetTypePtrOutput)
}

type AnalysisConditionalFormattingIconSetPtrOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingIconSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingIconSet)(nil)).Elem()
}

func (o AnalysisConditionalFormattingIconSetPtrOutput) ToAnalysisConditionalFormattingIconSetPtrOutput() AnalysisConditionalFormattingIconSetPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingIconSetPtrOutput) ToAnalysisConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingIconSetPtrOutput) Elem() AnalysisConditionalFormattingIconSetOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingIconSet) AnalysisConditionalFormattingIconSet {
		if v != nil {
			return *v
		}
		var ret AnalysisConditionalFormattingIconSet
		return ret
	}).(AnalysisConditionalFormattingIconSetOutput)
}

func (o AnalysisConditionalFormattingIconSetPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingIconSet) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisConditionalFormattingIconSetPtrOutput) IconSetType() AnalysisConditionalFormattingIconSetTypePtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingIconSet) *AnalysisConditionalFormattingIconSetType {
		if v == nil {
			return nil
		}
		return v.IconSetType
	}).(AnalysisConditionalFormattingIconSetTypePtrOutput)
}

type AnalysisConditionalFormattingSolidColor struct {
	Color      *string `pulumi:"color"`
	Expression string  `pulumi:"expression"`
}

// AnalysisConditionalFormattingSolidColorInput is an input type that accepts AnalysisConditionalFormattingSolidColorArgs and AnalysisConditionalFormattingSolidColorOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingSolidColorInput` via:
//
//	AnalysisConditionalFormattingSolidColorArgs{...}
type AnalysisConditionalFormattingSolidColorInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingSolidColorOutput() AnalysisConditionalFormattingSolidColorOutput
	ToAnalysisConditionalFormattingSolidColorOutputWithContext(context.Context) AnalysisConditionalFormattingSolidColorOutput
}

type AnalysisConditionalFormattingSolidColorArgs struct {
	Color      pulumi.StringPtrInput `pulumi:"color"`
	Expression pulumi.StringInput    `pulumi:"expression"`
}

func (AnalysisConditionalFormattingSolidColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingSolidColor)(nil)).Elem()
}

func (i AnalysisConditionalFormattingSolidColorArgs) ToAnalysisConditionalFormattingSolidColorOutput() AnalysisConditionalFormattingSolidColorOutput {
	return i.ToAnalysisConditionalFormattingSolidColorOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingSolidColorArgs) ToAnalysisConditionalFormattingSolidColorOutputWithContext(ctx context.Context) AnalysisConditionalFormattingSolidColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingSolidColorOutput)
}

func (i AnalysisConditionalFormattingSolidColorArgs) ToAnalysisConditionalFormattingSolidColorPtrOutput() AnalysisConditionalFormattingSolidColorPtrOutput {
	return i.ToAnalysisConditionalFormattingSolidColorPtrOutputWithContext(context.Background())
}

func (i AnalysisConditionalFormattingSolidColorArgs) ToAnalysisConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingSolidColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingSolidColorOutput).ToAnalysisConditionalFormattingSolidColorPtrOutputWithContext(ctx)
}

// AnalysisConditionalFormattingSolidColorPtrInput is an input type that accepts AnalysisConditionalFormattingSolidColorArgs, AnalysisConditionalFormattingSolidColorPtr and AnalysisConditionalFormattingSolidColorPtrOutput values.
// You can construct a concrete instance of `AnalysisConditionalFormattingSolidColorPtrInput` via:
//
//	        AnalysisConditionalFormattingSolidColorArgs{...}
//
//	or:
//
//	        nil
type AnalysisConditionalFormattingSolidColorPtrInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingSolidColorPtrOutput() AnalysisConditionalFormattingSolidColorPtrOutput
	ToAnalysisConditionalFormattingSolidColorPtrOutputWithContext(context.Context) AnalysisConditionalFormattingSolidColorPtrOutput
}

type analysisConditionalFormattingSolidColorPtrType AnalysisConditionalFormattingSolidColorArgs

func AnalysisConditionalFormattingSolidColorPtr(v *AnalysisConditionalFormattingSolidColorArgs) AnalysisConditionalFormattingSolidColorPtrInput {
	return (*analysisConditionalFormattingSolidColorPtrType)(v)
}

func (*analysisConditionalFormattingSolidColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingSolidColor)(nil)).Elem()
}

func (i *analysisConditionalFormattingSolidColorPtrType) ToAnalysisConditionalFormattingSolidColorPtrOutput() AnalysisConditionalFormattingSolidColorPtrOutput {
	return i.ToAnalysisConditionalFormattingSolidColorPtrOutputWithContext(context.Background())
}

func (i *analysisConditionalFormattingSolidColorPtrType) ToAnalysisConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingSolidColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisConditionalFormattingSolidColorPtrOutput)
}

type AnalysisConditionalFormattingSolidColorOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingSolidColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingSolidColor)(nil)).Elem()
}

func (o AnalysisConditionalFormattingSolidColorOutput) ToAnalysisConditionalFormattingSolidColorOutput() AnalysisConditionalFormattingSolidColorOutput {
	return o
}

func (o AnalysisConditionalFormattingSolidColorOutput) ToAnalysisConditionalFormattingSolidColorOutputWithContext(ctx context.Context) AnalysisConditionalFormattingSolidColorOutput {
	return o
}

func (o AnalysisConditionalFormattingSolidColorOutput) ToAnalysisConditionalFormattingSolidColorPtrOutput() AnalysisConditionalFormattingSolidColorPtrOutput {
	return o.ToAnalysisConditionalFormattingSolidColorPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingSolidColorOutput) ToAnalysisConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingSolidColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisConditionalFormattingSolidColor) *AnalysisConditionalFormattingSolidColor {
		return &v
	}).(AnalysisConditionalFormattingSolidColorPtrOutput)
}

func (o AnalysisConditionalFormattingSolidColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingSolidColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o AnalysisConditionalFormattingSolidColorOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisConditionalFormattingSolidColor) string { return v.Expression }).(pulumi.StringOutput)
}

type AnalysisConditionalFormattingSolidColorPtrOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingSolidColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingSolidColor)(nil)).Elem()
}

func (o AnalysisConditionalFormattingSolidColorPtrOutput) ToAnalysisConditionalFormattingSolidColorPtrOutput() AnalysisConditionalFormattingSolidColorPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingSolidColorPtrOutput) ToAnalysisConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingSolidColorPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingSolidColorPtrOutput) Elem() AnalysisConditionalFormattingSolidColorOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingSolidColor) AnalysisConditionalFormattingSolidColor {
		if v != nil {
			return *v
		}
		var ret AnalysisConditionalFormattingSolidColor
		return ret
	}).(AnalysisConditionalFormattingSolidColorOutput)
}

func (o AnalysisConditionalFormattingSolidColorPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingSolidColor) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisConditionalFormattingSolidColorPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingSolidColor) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

type AnalysisContributionAnalysisDefault struct {
	ContributorDimensions []AnalysisColumnIdentifier `pulumi:"contributorDimensions"`
	MeasureFieldId        string                     `pulumi:"measureFieldId"`
}

// AnalysisContributionAnalysisDefaultInput is an input type that accepts AnalysisContributionAnalysisDefaultArgs and AnalysisContributionAnalysisDefaultOutput values.
// You can construct a concrete instance of `AnalysisContributionAnalysisDefaultInput` via:
//
//	AnalysisContributionAnalysisDefaultArgs{...}
type AnalysisContributionAnalysisDefaultInput interface {
	pulumi.Input

	ToAnalysisContributionAnalysisDefaultOutput() AnalysisContributionAnalysisDefaultOutput
	ToAnalysisContributionAnalysisDefaultOutputWithContext(context.Context) AnalysisContributionAnalysisDefaultOutput
}

type AnalysisContributionAnalysisDefaultArgs struct {
	ContributorDimensions AnalysisColumnIdentifierArrayInput `pulumi:"contributorDimensions"`
	MeasureFieldId        pulumi.StringInput                 `pulumi:"measureFieldId"`
}

func (AnalysisContributionAnalysisDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisContributionAnalysisDefault)(nil)).Elem()
}

func (i AnalysisContributionAnalysisDefaultArgs) ToAnalysisContributionAnalysisDefaultOutput() AnalysisContributionAnalysisDefaultOutput {
	return i.ToAnalysisContributionAnalysisDefaultOutputWithContext(context.Background())
}

func (i AnalysisContributionAnalysisDefaultArgs) ToAnalysisContributionAnalysisDefaultOutputWithContext(ctx context.Context) AnalysisContributionAnalysisDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisContributionAnalysisDefaultOutput)
}

// AnalysisContributionAnalysisDefaultArrayInput is an input type that accepts AnalysisContributionAnalysisDefaultArray and AnalysisContributionAnalysisDefaultArrayOutput values.
// You can construct a concrete instance of `AnalysisContributionAnalysisDefaultArrayInput` via:
//
//	AnalysisContributionAnalysisDefaultArray{ AnalysisContributionAnalysisDefaultArgs{...} }
type AnalysisContributionAnalysisDefaultArrayInput interface {
	pulumi.Input

	ToAnalysisContributionAnalysisDefaultArrayOutput() AnalysisContributionAnalysisDefaultArrayOutput
	ToAnalysisContributionAnalysisDefaultArrayOutputWithContext(context.Context) AnalysisContributionAnalysisDefaultArrayOutput
}

type AnalysisContributionAnalysisDefaultArray []AnalysisContributionAnalysisDefaultInput

func (AnalysisContributionAnalysisDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisContributionAnalysisDefault)(nil)).Elem()
}

func (i AnalysisContributionAnalysisDefaultArray) ToAnalysisContributionAnalysisDefaultArrayOutput() AnalysisContributionAnalysisDefaultArrayOutput {
	return i.ToAnalysisContributionAnalysisDefaultArrayOutputWithContext(context.Background())
}

func (i AnalysisContributionAnalysisDefaultArray) ToAnalysisContributionAnalysisDefaultArrayOutputWithContext(ctx context.Context) AnalysisContributionAnalysisDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisContributionAnalysisDefaultArrayOutput)
}

type AnalysisContributionAnalysisDefaultOutput struct{ *pulumi.OutputState }

func (AnalysisContributionAnalysisDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisContributionAnalysisDefault)(nil)).Elem()
}

func (o AnalysisContributionAnalysisDefaultOutput) ToAnalysisContributionAnalysisDefaultOutput() AnalysisContributionAnalysisDefaultOutput {
	return o
}

func (o AnalysisContributionAnalysisDefaultOutput) ToAnalysisContributionAnalysisDefaultOutputWithContext(ctx context.Context) AnalysisContributionAnalysisDefaultOutput {
	return o
}

func (o AnalysisContributionAnalysisDefaultOutput) ContributorDimensions() AnalysisColumnIdentifierArrayOutput {
	return o.ApplyT(func(v AnalysisContributionAnalysisDefault) []AnalysisColumnIdentifier { return v.ContributorDimensions }).(AnalysisColumnIdentifierArrayOutput)
}

func (o AnalysisContributionAnalysisDefaultOutput) MeasureFieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisContributionAnalysisDefault) string { return v.MeasureFieldId }).(pulumi.StringOutput)
}

type AnalysisContributionAnalysisDefaultArrayOutput struct{ *pulumi.OutputState }

func (AnalysisContributionAnalysisDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisContributionAnalysisDefault)(nil)).Elem()
}

func (o AnalysisContributionAnalysisDefaultArrayOutput) ToAnalysisContributionAnalysisDefaultArrayOutput() AnalysisContributionAnalysisDefaultArrayOutput {
	return o
}

func (o AnalysisContributionAnalysisDefaultArrayOutput) ToAnalysisContributionAnalysisDefaultArrayOutputWithContext(ctx context.Context) AnalysisContributionAnalysisDefaultArrayOutput {
	return o
}

func (o AnalysisContributionAnalysisDefaultArrayOutput) Index(i pulumi.IntInput) AnalysisContributionAnalysisDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisContributionAnalysisDefault {
		return vs[0].([]AnalysisContributionAnalysisDefault)[vs[1].(int)]
	}).(AnalysisContributionAnalysisDefaultOutput)
}

type AnalysisCurrencyDisplayFormatConfiguration struct {
	DecimalPlacesConfiguration   *AnalysisDecimalPlacesConfiguration    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   *AnalysisNegativeValueConfiguration    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration *AnalysisNullValueFormatConfiguration  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  *AnalysisNumberScale                   `pulumi:"numberScale"`
	Prefix                       *string                                `pulumi:"prefix"`
	SeparatorConfiguration       *AnalysisNumericSeparatorConfiguration `pulumi:"separatorConfiguration"`
	Suffix                       *string                                `pulumi:"suffix"`
	Symbol                       *string                                `pulumi:"symbol"`
}

// AnalysisCurrencyDisplayFormatConfigurationInput is an input type that accepts AnalysisCurrencyDisplayFormatConfigurationArgs and AnalysisCurrencyDisplayFormatConfigurationOutput values.
// You can construct a concrete instance of `AnalysisCurrencyDisplayFormatConfigurationInput` via:
//
//	AnalysisCurrencyDisplayFormatConfigurationArgs{...}
type AnalysisCurrencyDisplayFormatConfigurationInput interface {
	pulumi.Input

	ToAnalysisCurrencyDisplayFormatConfigurationOutput() AnalysisCurrencyDisplayFormatConfigurationOutput
	ToAnalysisCurrencyDisplayFormatConfigurationOutputWithContext(context.Context) AnalysisCurrencyDisplayFormatConfigurationOutput
}

type AnalysisCurrencyDisplayFormatConfigurationArgs struct {
	DecimalPlacesConfiguration   AnalysisDecimalPlacesConfigurationPtrInput    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   AnalysisNegativeValueConfigurationPtrInput    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration AnalysisNullValueFormatConfigurationPtrInput  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  AnalysisNumberScalePtrInput                   `pulumi:"numberScale"`
	Prefix                       pulumi.StringPtrInput                         `pulumi:"prefix"`
	SeparatorConfiguration       AnalysisNumericSeparatorConfigurationPtrInput `pulumi:"separatorConfiguration"`
	Suffix                       pulumi.StringPtrInput                         `pulumi:"suffix"`
	Symbol                       pulumi.StringPtrInput                         `pulumi:"symbol"`
}

func (AnalysisCurrencyDisplayFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (i AnalysisCurrencyDisplayFormatConfigurationArgs) ToAnalysisCurrencyDisplayFormatConfigurationOutput() AnalysisCurrencyDisplayFormatConfigurationOutput {
	return i.ToAnalysisCurrencyDisplayFormatConfigurationOutputWithContext(context.Background())
}

func (i AnalysisCurrencyDisplayFormatConfigurationArgs) ToAnalysisCurrencyDisplayFormatConfigurationOutputWithContext(ctx context.Context) AnalysisCurrencyDisplayFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCurrencyDisplayFormatConfigurationOutput)
}

func (i AnalysisCurrencyDisplayFormatConfigurationArgs) ToAnalysisCurrencyDisplayFormatConfigurationPtrOutput() AnalysisCurrencyDisplayFormatConfigurationPtrOutput {
	return i.ToAnalysisCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisCurrencyDisplayFormatConfigurationArgs) ToAnalysisCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCurrencyDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCurrencyDisplayFormatConfigurationOutput).ToAnalysisCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx)
}

// AnalysisCurrencyDisplayFormatConfigurationPtrInput is an input type that accepts AnalysisCurrencyDisplayFormatConfigurationArgs, AnalysisCurrencyDisplayFormatConfigurationPtr and AnalysisCurrencyDisplayFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisCurrencyDisplayFormatConfigurationPtrInput` via:
//
//	        AnalysisCurrencyDisplayFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCurrencyDisplayFormatConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisCurrencyDisplayFormatConfigurationPtrOutput() AnalysisCurrencyDisplayFormatConfigurationPtrOutput
	ToAnalysisCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Context) AnalysisCurrencyDisplayFormatConfigurationPtrOutput
}

type analysisCurrencyDisplayFormatConfigurationPtrType AnalysisCurrencyDisplayFormatConfigurationArgs

func AnalysisCurrencyDisplayFormatConfigurationPtr(v *AnalysisCurrencyDisplayFormatConfigurationArgs) AnalysisCurrencyDisplayFormatConfigurationPtrInput {
	return (*analysisCurrencyDisplayFormatConfigurationPtrType)(v)
}

func (*analysisCurrencyDisplayFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (i *analysisCurrencyDisplayFormatConfigurationPtrType) ToAnalysisCurrencyDisplayFormatConfigurationPtrOutput() AnalysisCurrencyDisplayFormatConfigurationPtrOutput {
	return i.ToAnalysisCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisCurrencyDisplayFormatConfigurationPtrType) ToAnalysisCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCurrencyDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCurrencyDisplayFormatConfigurationPtrOutput)
}

type AnalysisCurrencyDisplayFormatConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisCurrencyDisplayFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) ToAnalysisCurrencyDisplayFormatConfigurationOutput() AnalysisCurrencyDisplayFormatConfigurationOutput {
	return o
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) ToAnalysisCurrencyDisplayFormatConfigurationOutputWithContext(ctx context.Context) AnalysisCurrencyDisplayFormatConfigurationOutput {
	return o
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) ToAnalysisCurrencyDisplayFormatConfigurationPtrOutput() AnalysisCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ToAnalysisCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) ToAnalysisCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCurrencyDisplayFormatConfiguration) *AnalysisCurrencyDisplayFormatConfiguration {
		return &v
	}).(AnalysisCurrencyDisplayFormatConfigurationPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) DecimalPlacesConfiguration() AnalysisDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCurrencyDisplayFormatConfiguration) *AnalysisDecimalPlacesConfiguration {
		return v.DecimalPlacesConfiguration
	}).(AnalysisDecimalPlacesConfigurationPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) NegativeValueConfiguration() AnalysisNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCurrencyDisplayFormatConfiguration) *AnalysisNegativeValueConfiguration {
		return v.NegativeValueConfiguration
	}).(AnalysisNegativeValueConfigurationPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) NullValueFormatConfiguration() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCurrencyDisplayFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) NumberScale() AnalysisNumberScalePtrOutput {
	return o.ApplyT(func(v AnalysisCurrencyDisplayFormatConfiguration) *AnalysisNumberScale { return v.NumberScale }).(AnalysisNumberScalePtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisCurrencyDisplayFormatConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) SeparatorConfiguration() AnalysisNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCurrencyDisplayFormatConfiguration) *AnalysisNumericSeparatorConfiguration {
		return v.SeparatorConfiguration
	}).(AnalysisNumericSeparatorConfigurationPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisCurrencyDisplayFormatConfiguration) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationOutput) Symbol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisCurrencyDisplayFormatConfiguration) *string { return v.Symbol }).(pulumi.StringPtrOutput)
}

type AnalysisCurrencyDisplayFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCurrencyDisplayFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) ToAnalysisCurrencyDisplayFormatConfigurationPtrOutput() AnalysisCurrencyDisplayFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) ToAnalysisCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCurrencyDisplayFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) Elem() AnalysisCurrencyDisplayFormatConfigurationOutput {
	return o.ApplyT(func(v *AnalysisCurrencyDisplayFormatConfiguration) AnalysisCurrencyDisplayFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisCurrencyDisplayFormatConfiguration
		return ret
	}).(AnalysisCurrencyDisplayFormatConfigurationOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) DecimalPlacesConfiguration() AnalysisDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCurrencyDisplayFormatConfiguration) *AnalysisDecimalPlacesConfiguration {
		if v == nil {
			return nil
		}
		return v.DecimalPlacesConfiguration
	}).(AnalysisDecimalPlacesConfigurationPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) NegativeValueConfiguration() AnalysisNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCurrencyDisplayFormatConfiguration) *AnalysisNegativeValueConfiguration {
		if v == nil {
			return nil
		}
		return v.NegativeValueConfiguration
	}).(AnalysisNegativeValueConfigurationPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) NullValueFormatConfiguration() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCurrencyDisplayFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) NumberScale() AnalysisNumberScalePtrOutput {
	return o.ApplyT(func(v *AnalysisCurrencyDisplayFormatConfiguration) *AnalysisNumberScale {
		if v == nil {
			return nil
		}
		return v.NumberScale
	}).(AnalysisNumberScalePtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCurrencyDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) SeparatorConfiguration() AnalysisNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCurrencyDisplayFormatConfiguration) *AnalysisNumericSeparatorConfiguration {
		if v == nil {
			return nil
		}
		return v.SeparatorConfiguration
	}).(AnalysisNumericSeparatorConfigurationPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCurrencyDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisCurrencyDisplayFormatConfigurationPtrOutput) Symbol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCurrencyDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Symbol
	}).(pulumi.StringPtrOutput)
}

type AnalysisCustomActionFilterOperation struct {
	SelectedFieldsConfiguration AnalysisFilterOperationSelectedFieldsConfiguration `pulumi:"selectedFieldsConfiguration"`
	TargetVisualsConfiguration  AnalysisFilterOperationTargetVisualsConfiguration  `pulumi:"targetVisualsConfiguration"`
}

// AnalysisCustomActionFilterOperationInput is an input type that accepts AnalysisCustomActionFilterOperationArgs and AnalysisCustomActionFilterOperationOutput values.
// You can construct a concrete instance of `AnalysisCustomActionFilterOperationInput` via:
//
//	AnalysisCustomActionFilterOperationArgs{...}
type AnalysisCustomActionFilterOperationInput interface {
	pulumi.Input

	ToAnalysisCustomActionFilterOperationOutput() AnalysisCustomActionFilterOperationOutput
	ToAnalysisCustomActionFilterOperationOutputWithContext(context.Context) AnalysisCustomActionFilterOperationOutput
}

type AnalysisCustomActionFilterOperationArgs struct {
	SelectedFieldsConfiguration AnalysisFilterOperationSelectedFieldsConfigurationInput `pulumi:"selectedFieldsConfiguration"`
	TargetVisualsConfiguration  AnalysisFilterOperationTargetVisualsConfigurationInput  `pulumi:"targetVisualsConfiguration"`
}

func (AnalysisCustomActionFilterOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomActionFilterOperation)(nil)).Elem()
}

func (i AnalysisCustomActionFilterOperationArgs) ToAnalysisCustomActionFilterOperationOutput() AnalysisCustomActionFilterOperationOutput {
	return i.ToAnalysisCustomActionFilterOperationOutputWithContext(context.Background())
}

func (i AnalysisCustomActionFilterOperationArgs) ToAnalysisCustomActionFilterOperationOutputWithContext(ctx context.Context) AnalysisCustomActionFilterOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionFilterOperationOutput)
}

func (i AnalysisCustomActionFilterOperationArgs) ToAnalysisCustomActionFilterOperationPtrOutput() AnalysisCustomActionFilterOperationPtrOutput {
	return i.ToAnalysisCustomActionFilterOperationPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomActionFilterOperationArgs) ToAnalysisCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionFilterOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionFilterOperationOutput).ToAnalysisCustomActionFilterOperationPtrOutputWithContext(ctx)
}

// AnalysisCustomActionFilterOperationPtrInput is an input type that accepts AnalysisCustomActionFilterOperationArgs, AnalysisCustomActionFilterOperationPtr and AnalysisCustomActionFilterOperationPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomActionFilterOperationPtrInput` via:
//
//	        AnalysisCustomActionFilterOperationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomActionFilterOperationPtrInput interface {
	pulumi.Input

	ToAnalysisCustomActionFilterOperationPtrOutput() AnalysisCustomActionFilterOperationPtrOutput
	ToAnalysisCustomActionFilterOperationPtrOutputWithContext(context.Context) AnalysisCustomActionFilterOperationPtrOutput
}

type analysisCustomActionFilterOperationPtrType AnalysisCustomActionFilterOperationArgs

func AnalysisCustomActionFilterOperationPtr(v *AnalysisCustomActionFilterOperationArgs) AnalysisCustomActionFilterOperationPtrInput {
	return (*analysisCustomActionFilterOperationPtrType)(v)
}

func (*analysisCustomActionFilterOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomActionFilterOperation)(nil)).Elem()
}

func (i *analysisCustomActionFilterOperationPtrType) ToAnalysisCustomActionFilterOperationPtrOutput() AnalysisCustomActionFilterOperationPtrOutput {
	return i.ToAnalysisCustomActionFilterOperationPtrOutputWithContext(context.Background())
}

func (i *analysisCustomActionFilterOperationPtrType) ToAnalysisCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionFilterOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionFilterOperationPtrOutput)
}

type AnalysisCustomActionFilterOperationOutput struct{ *pulumi.OutputState }

func (AnalysisCustomActionFilterOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomActionFilterOperation)(nil)).Elem()
}

func (o AnalysisCustomActionFilterOperationOutput) ToAnalysisCustomActionFilterOperationOutput() AnalysisCustomActionFilterOperationOutput {
	return o
}

func (o AnalysisCustomActionFilterOperationOutput) ToAnalysisCustomActionFilterOperationOutputWithContext(ctx context.Context) AnalysisCustomActionFilterOperationOutput {
	return o
}

func (o AnalysisCustomActionFilterOperationOutput) ToAnalysisCustomActionFilterOperationPtrOutput() AnalysisCustomActionFilterOperationPtrOutput {
	return o.ToAnalysisCustomActionFilterOperationPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomActionFilterOperationOutput) ToAnalysisCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionFilterOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomActionFilterOperation) *AnalysisCustomActionFilterOperation {
		return &v
	}).(AnalysisCustomActionFilterOperationPtrOutput)
}

func (o AnalysisCustomActionFilterOperationOutput) SelectedFieldsConfiguration() AnalysisFilterOperationSelectedFieldsConfigurationOutput {
	return o.ApplyT(func(v AnalysisCustomActionFilterOperation) AnalysisFilterOperationSelectedFieldsConfiguration {
		return v.SelectedFieldsConfiguration
	}).(AnalysisFilterOperationSelectedFieldsConfigurationOutput)
}

func (o AnalysisCustomActionFilterOperationOutput) TargetVisualsConfiguration() AnalysisFilterOperationTargetVisualsConfigurationOutput {
	return o.ApplyT(func(v AnalysisCustomActionFilterOperation) AnalysisFilterOperationTargetVisualsConfiguration {
		return v.TargetVisualsConfiguration
	}).(AnalysisFilterOperationTargetVisualsConfigurationOutput)
}

type AnalysisCustomActionFilterOperationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomActionFilterOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomActionFilterOperation)(nil)).Elem()
}

func (o AnalysisCustomActionFilterOperationPtrOutput) ToAnalysisCustomActionFilterOperationPtrOutput() AnalysisCustomActionFilterOperationPtrOutput {
	return o
}

func (o AnalysisCustomActionFilterOperationPtrOutput) ToAnalysisCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionFilterOperationPtrOutput {
	return o
}

func (o AnalysisCustomActionFilterOperationPtrOutput) Elem() AnalysisCustomActionFilterOperationOutput {
	return o.ApplyT(func(v *AnalysisCustomActionFilterOperation) AnalysisCustomActionFilterOperation {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomActionFilterOperation
		return ret
	}).(AnalysisCustomActionFilterOperationOutput)
}

func (o AnalysisCustomActionFilterOperationPtrOutput) SelectedFieldsConfiguration() AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomActionFilterOperation) *AnalysisFilterOperationSelectedFieldsConfiguration {
		if v == nil {
			return nil
		}
		return &v.SelectedFieldsConfiguration
	}).(AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput)
}

func (o AnalysisCustomActionFilterOperationPtrOutput) TargetVisualsConfiguration() AnalysisFilterOperationTargetVisualsConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomActionFilterOperation) *AnalysisFilterOperationTargetVisualsConfiguration {
		if v == nil {
			return nil
		}
		return &v.TargetVisualsConfiguration
	}).(AnalysisFilterOperationTargetVisualsConfigurationPtrOutput)
}

type AnalysisCustomActionNavigationOperation struct {
	LocalNavigationConfiguration *AnalysisLocalNavigationConfiguration `pulumi:"localNavigationConfiguration"`
}

// AnalysisCustomActionNavigationOperationInput is an input type that accepts AnalysisCustomActionNavigationOperationArgs and AnalysisCustomActionNavigationOperationOutput values.
// You can construct a concrete instance of `AnalysisCustomActionNavigationOperationInput` via:
//
//	AnalysisCustomActionNavigationOperationArgs{...}
type AnalysisCustomActionNavigationOperationInput interface {
	pulumi.Input

	ToAnalysisCustomActionNavigationOperationOutput() AnalysisCustomActionNavigationOperationOutput
	ToAnalysisCustomActionNavigationOperationOutputWithContext(context.Context) AnalysisCustomActionNavigationOperationOutput
}

type AnalysisCustomActionNavigationOperationArgs struct {
	LocalNavigationConfiguration AnalysisLocalNavigationConfigurationPtrInput `pulumi:"localNavigationConfiguration"`
}

func (AnalysisCustomActionNavigationOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomActionNavigationOperation)(nil)).Elem()
}

func (i AnalysisCustomActionNavigationOperationArgs) ToAnalysisCustomActionNavigationOperationOutput() AnalysisCustomActionNavigationOperationOutput {
	return i.ToAnalysisCustomActionNavigationOperationOutputWithContext(context.Background())
}

func (i AnalysisCustomActionNavigationOperationArgs) ToAnalysisCustomActionNavigationOperationOutputWithContext(ctx context.Context) AnalysisCustomActionNavigationOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionNavigationOperationOutput)
}

func (i AnalysisCustomActionNavigationOperationArgs) ToAnalysisCustomActionNavigationOperationPtrOutput() AnalysisCustomActionNavigationOperationPtrOutput {
	return i.ToAnalysisCustomActionNavigationOperationPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomActionNavigationOperationArgs) ToAnalysisCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionNavigationOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionNavigationOperationOutput).ToAnalysisCustomActionNavigationOperationPtrOutputWithContext(ctx)
}

// AnalysisCustomActionNavigationOperationPtrInput is an input type that accepts AnalysisCustomActionNavigationOperationArgs, AnalysisCustomActionNavigationOperationPtr and AnalysisCustomActionNavigationOperationPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomActionNavigationOperationPtrInput` via:
//
//	        AnalysisCustomActionNavigationOperationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomActionNavigationOperationPtrInput interface {
	pulumi.Input

	ToAnalysisCustomActionNavigationOperationPtrOutput() AnalysisCustomActionNavigationOperationPtrOutput
	ToAnalysisCustomActionNavigationOperationPtrOutputWithContext(context.Context) AnalysisCustomActionNavigationOperationPtrOutput
}

type analysisCustomActionNavigationOperationPtrType AnalysisCustomActionNavigationOperationArgs

func AnalysisCustomActionNavigationOperationPtr(v *AnalysisCustomActionNavigationOperationArgs) AnalysisCustomActionNavigationOperationPtrInput {
	return (*analysisCustomActionNavigationOperationPtrType)(v)
}

func (*analysisCustomActionNavigationOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomActionNavigationOperation)(nil)).Elem()
}

func (i *analysisCustomActionNavigationOperationPtrType) ToAnalysisCustomActionNavigationOperationPtrOutput() AnalysisCustomActionNavigationOperationPtrOutput {
	return i.ToAnalysisCustomActionNavigationOperationPtrOutputWithContext(context.Background())
}

func (i *analysisCustomActionNavigationOperationPtrType) ToAnalysisCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionNavigationOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionNavigationOperationPtrOutput)
}

type AnalysisCustomActionNavigationOperationOutput struct{ *pulumi.OutputState }

func (AnalysisCustomActionNavigationOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomActionNavigationOperation)(nil)).Elem()
}

func (o AnalysisCustomActionNavigationOperationOutput) ToAnalysisCustomActionNavigationOperationOutput() AnalysisCustomActionNavigationOperationOutput {
	return o
}

func (o AnalysisCustomActionNavigationOperationOutput) ToAnalysisCustomActionNavigationOperationOutputWithContext(ctx context.Context) AnalysisCustomActionNavigationOperationOutput {
	return o
}

func (o AnalysisCustomActionNavigationOperationOutput) ToAnalysisCustomActionNavigationOperationPtrOutput() AnalysisCustomActionNavigationOperationPtrOutput {
	return o.ToAnalysisCustomActionNavigationOperationPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomActionNavigationOperationOutput) ToAnalysisCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionNavigationOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomActionNavigationOperation) *AnalysisCustomActionNavigationOperation {
		return &v
	}).(AnalysisCustomActionNavigationOperationPtrOutput)
}

func (o AnalysisCustomActionNavigationOperationOutput) LocalNavigationConfiguration() AnalysisLocalNavigationConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCustomActionNavigationOperation) *AnalysisLocalNavigationConfiguration {
		return v.LocalNavigationConfiguration
	}).(AnalysisLocalNavigationConfigurationPtrOutput)
}

type AnalysisCustomActionNavigationOperationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomActionNavigationOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomActionNavigationOperation)(nil)).Elem()
}

func (o AnalysisCustomActionNavigationOperationPtrOutput) ToAnalysisCustomActionNavigationOperationPtrOutput() AnalysisCustomActionNavigationOperationPtrOutput {
	return o
}

func (o AnalysisCustomActionNavigationOperationPtrOutput) ToAnalysisCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionNavigationOperationPtrOutput {
	return o
}

func (o AnalysisCustomActionNavigationOperationPtrOutput) Elem() AnalysisCustomActionNavigationOperationOutput {
	return o.ApplyT(func(v *AnalysisCustomActionNavigationOperation) AnalysisCustomActionNavigationOperation {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomActionNavigationOperation
		return ret
	}).(AnalysisCustomActionNavigationOperationOutput)
}

func (o AnalysisCustomActionNavigationOperationPtrOutput) LocalNavigationConfiguration() AnalysisLocalNavigationConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomActionNavigationOperation) *AnalysisLocalNavigationConfiguration {
		if v == nil {
			return nil
		}
		return v.LocalNavigationConfiguration
	}).(AnalysisLocalNavigationConfigurationPtrOutput)
}

type AnalysisCustomActionSetParametersOperation struct {
	ParameterValueConfigurations []AnalysisSetParameterValueConfiguration `pulumi:"parameterValueConfigurations"`
}

// AnalysisCustomActionSetParametersOperationInput is an input type that accepts AnalysisCustomActionSetParametersOperationArgs and AnalysisCustomActionSetParametersOperationOutput values.
// You can construct a concrete instance of `AnalysisCustomActionSetParametersOperationInput` via:
//
//	AnalysisCustomActionSetParametersOperationArgs{...}
type AnalysisCustomActionSetParametersOperationInput interface {
	pulumi.Input

	ToAnalysisCustomActionSetParametersOperationOutput() AnalysisCustomActionSetParametersOperationOutput
	ToAnalysisCustomActionSetParametersOperationOutputWithContext(context.Context) AnalysisCustomActionSetParametersOperationOutput
}

type AnalysisCustomActionSetParametersOperationArgs struct {
	ParameterValueConfigurations AnalysisSetParameterValueConfigurationArrayInput `pulumi:"parameterValueConfigurations"`
}

func (AnalysisCustomActionSetParametersOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomActionSetParametersOperation)(nil)).Elem()
}

func (i AnalysisCustomActionSetParametersOperationArgs) ToAnalysisCustomActionSetParametersOperationOutput() AnalysisCustomActionSetParametersOperationOutput {
	return i.ToAnalysisCustomActionSetParametersOperationOutputWithContext(context.Background())
}

func (i AnalysisCustomActionSetParametersOperationArgs) ToAnalysisCustomActionSetParametersOperationOutputWithContext(ctx context.Context) AnalysisCustomActionSetParametersOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionSetParametersOperationOutput)
}

func (i AnalysisCustomActionSetParametersOperationArgs) ToAnalysisCustomActionSetParametersOperationPtrOutput() AnalysisCustomActionSetParametersOperationPtrOutput {
	return i.ToAnalysisCustomActionSetParametersOperationPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomActionSetParametersOperationArgs) ToAnalysisCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionSetParametersOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionSetParametersOperationOutput).ToAnalysisCustomActionSetParametersOperationPtrOutputWithContext(ctx)
}

// AnalysisCustomActionSetParametersOperationPtrInput is an input type that accepts AnalysisCustomActionSetParametersOperationArgs, AnalysisCustomActionSetParametersOperationPtr and AnalysisCustomActionSetParametersOperationPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomActionSetParametersOperationPtrInput` via:
//
//	        AnalysisCustomActionSetParametersOperationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomActionSetParametersOperationPtrInput interface {
	pulumi.Input

	ToAnalysisCustomActionSetParametersOperationPtrOutput() AnalysisCustomActionSetParametersOperationPtrOutput
	ToAnalysisCustomActionSetParametersOperationPtrOutputWithContext(context.Context) AnalysisCustomActionSetParametersOperationPtrOutput
}

type analysisCustomActionSetParametersOperationPtrType AnalysisCustomActionSetParametersOperationArgs

func AnalysisCustomActionSetParametersOperationPtr(v *AnalysisCustomActionSetParametersOperationArgs) AnalysisCustomActionSetParametersOperationPtrInput {
	return (*analysisCustomActionSetParametersOperationPtrType)(v)
}

func (*analysisCustomActionSetParametersOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomActionSetParametersOperation)(nil)).Elem()
}

func (i *analysisCustomActionSetParametersOperationPtrType) ToAnalysisCustomActionSetParametersOperationPtrOutput() AnalysisCustomActionSetParametersOperationPtrOutput {
	return i.ToAnalysisCustomActionSetParametersOperationPtrOutputWithContext(context.Background())
}

func (i *analysisCustomActionSetParametersOperationPtrType) ToAnalysisCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionSetParametersOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionSetParametersOperationPtrOutput)
}

type AnalysisCustomActionSetParametersOperationOutput struct{ *pulumi.OutputState }

func (AnalysisCustomActionSetParametersOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomActionSetParametersOperation)(nil)).Elem()
}

func (o AnalysisCustomActionSetParametersOperationOutput) ToAnalysisCustomActionSetParametersOperationOutput() AnalysisCustomActionSetParametersOperationOutput {
	return o
}

func (o AnalysisCustomActionSetParametersOperationOutput) ToAnalysisCustomActionSetParametersOperationOutputWithContext(ctx context.Context) AnalysisCustomActionSetParametersOperationOutput {
	return o
}

func (o AnalysisCustomActionSetParametersOperationOutput) ToAnalysisCustomActionSetParametersOperationPtrOutput() AnalysisCustomActionSetParametersOperationPtrOutput {
	return o.ToAnalysisCustomActionSetParametersOperationPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomActionSetParametersOperationOutput) ToAnalysisCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionSetParametersOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomActionSetParametersOperation) *AnalysisCustomActionSetParametersOperation {
		return &v
	}).(AnalysisCustomActionSetParametersOperationPtrOutput)
}

func (o AnalysisCustomActionSetParametersOperationOutput) ParameterValueConfigurations() AnalysisSetParameterValueConfigurationArrayOutput {
	return o.ApplyT(func(v AnalysisCustomActionSetParametersOperation) []AnalysisSetParameterValueConfiguration {
		return v.ParameterValueConfigurations
	}).(AnalysisSetParameterValueConfigurationArrayOutput)
}

type AnalysisCustomActionSetParametersOperationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomActionSetParametersOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomActionSetParametersOperation)(nil)).Elem()
}

func (o AnalysisCustomActionSetParametersOperationPtrOutput) ToAnalysisCustomActionSetParametersOperationPtrOutput() AnalysisCustomActionSetParametersOperationPtrOutput {
	return o
}

func (o AnalysisCustomActionSetParametersOperationPtrOutput) ToAnalysisCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionSetParametersOperationPtrOutput {
	return o
}

func (o AnalysisCustomActionSetParametersOperationPtrOutput) Elem() AnalysisCustomActionSetParametersOperationOutput {
	return o.ApplyT(func(v *AnalysisCustomActionSetParametersOperation) AnalysisCustomActionSetParametersOperation {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomActionSetParametersOperation
		return ret
	}).(AnalysisCustomActionSetParametersOperationOutput)
}

func (o AnalysisCustomActionSetParametersOperationPtrOutput) ParameterValueConfigurations() AnalysisSetParameterValueConfigurationArrayOutput {
	return o.ApplyT(func(v *AnalysisCustomActionSetParametersOperation) []AnalysisSetParameterValueConfiguration {
		if v == nil {
			return nil
		}
		return v.ParameterValueConfigurations
	}).(AnalysisSetParameterValueConfigurationArrayOutput)
}

type AnalysisCustomActionURLOperation struct {
	URLTarget   AnalysisURLTargetConfiguration `pulumi:"uRLTarget"`
	URLTemplate string                         `pulumi:"uRLTemplate"`
}

// AnalysisCustomActionURLOperationInput is an input type that accepts AnalysisCustomActionURLOperationArgs and AnalysisCustomActionURLOperationOutput values.
// You can construct a concrete instance of `AnalysisCustomActionURLOperationInput` via:
//
//	AnalysisCustomActionURLOperationArgs{...}
type AnalysisCustomActionURLOperationInput interface {
	pulumi.Input

	ToAnalysisCustomActionURLOperationOutput() AnalysisCustomActionURLOperationOutput
	ToAnalysisCustomActionURLOperationOutputWithContext(context.Context) AnalysisCustomActionURLOperationOutput
}

type AnalysisCustomActionURLOperationArgs struct {
	URLTarget   AnalysisURLTargetConfigurationInput `pulumi:"uRLTarget"`
	URLTemplate pulumi.StringInput                  `pulumi:"uRLTemplate"`
}

func (AnalysisCustomActionURLOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomActionURLOperation)(nil)).Elem()
}

func (i AnalysisCustomActionURLOperationArgs) ToAnalysisCustomActionURLOperationOutput() AnalysisCustomActionURLOperationOutput {
	return i.ToAnalysisCustomActionURLOperationOutputWithContext(context.Background())
}

func (i AnalysisCustomActionURLOperationArgs) ToAnalysisCustomActionURLOperationOutputWithContext(ctx context.Context) AnalysisCustomActionURLOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionURLOperationOutput)
}

func (i AnalysisCustomActionURLOperationArgs) ToAnalysisCustomActionURLOperationPtrOutput() AnalysisCustomActionURLOperationPtrOutput {
	return i.ToAnalysisCustomActionURLOperationPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomActionURLOperationArgs) ToAnalysisCustomActionURLOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionURLOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionURLOperationOutput).ToAnalysisCustomActionURLOperationPtrOutputWithContext(ctx)
}

// AnalysisCustomActionURLOperationPtrInput is an input type that accepts AnalysisCustomActionURLOperationArgs, AnalysisCustomActionURLOperationPtr and AnalysisCustomActionURLOperationPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomActionURLOperationPtrInput` via:
//
//	        AnalysisCustomActionURLOperationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomActionURLOperationPtrInput interface {
	pulumi.Input

	ToAnalysisCustomActionURLOperationPtrOutput() AnalysisCustomActionURLOperationPtrOutput
	ToAnalysisCustomActionURLOperationPtrOutputWithContext(context.Context) AnalysisCustomActionURLOperationPtrOutput
}

type analysisCustomActionURLOperationPtrType AnalysisCustomActionURLOperationArgs

func AnalysisCustomActionURLOperationPtr(v *AnalysisCustomActionURLOperationArgs) AnalysisCustomActionURLOperationPtrInput {
	return (*analysisCustomActionURLOperationPtrType)(v)
}

func (*analysisCustomActionURLOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomActionURLOperation)(nil)).Elem()
}

func (i *analysisCustomActionURLOperationPtrType) ToAnalysisCustomActionURLOperationPtrOutput() AnalysisCustomActionURLOperationPtrOutput {
	return i.ToAnalysisCustomActionURLOperationPtrOutputWithContext(context.Background())
}

func (i *analysisCustomActionURLOperationPtrType) ToAnalysisCustomActionURLOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionURLOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomActionURLOperationPtrOutput)
}

type AnalysisCustomActionURLOperationOutput struct{ *pulumi.OutputState }

func (AnalysisCustomActionURLOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomActionURLOperation)(nil)).Elem()
}

func (o AnalysisCustomActionURLOperationOutput) ToAnalysisCustomActionURLOperationOutput() AnalysisCustomActionURLOperationOutput {
	return o
}

func (o AnalysisCustomActionURLOperationOutput) ToAnalysisCustomActionURLOperationOutputWithContext(ctx context.Context) AnalysisCustomActionURLOperationOutput {
	return o
}

func (o AnalysisCustomActionURLOperationOutput) ToAnalysisCustomActionURLOperationPtrOutput() AnalysisCustomActionURLOperationPtrOutput {
	return o.ToAnalysisCustomActionURLOperationPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomActionURLOperationOutput) ToAnalysisCustomActionURLOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionURLOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomActionURLOperation) *AnalysisCustomActionURLOperation {
		return &v
	}).(AnalysisCustomActionURLOperationPtrOutput)
}

func (o AnalysisCustomActionURLOperationOutput) URLTarget() AnalysisURLTargetConfigurationOutput {
	return o.ApplyT(func(v AnalysisCustomActionURLOperation) AnalysisURLTargetConfiguration { return v.URLTarget }).(AnalysisURLTargetConfigurationOutput)
}

func (o AnalysisCustomActionURLOperationOutput) URLTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCustomActionURLOperation) string { return v.URLTemplate }).(pulumi.StringOutput)
}

type AnalysisCustomActionURLOperationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomActionURLOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomActionURLOperation)(nil)).Elem()
}

func (o AnalysisCustomActionURLOperationPtrOutput) ToAnalysisCustomActionURLOperationPtrOutput() AnalysisCustomActionURLOperationPtrOutput {
	return o
}

func (o AnalysisCustomActionURLOperationPtrOutput) ToAnalysisCustomActionURLOperationPtrOutputWithContext(ctx context.Context) AnalysisCustomActionURLOperationPtrOutput {
	return o
}

func (o AnalysisCustomActionURLOperationPtrOutput) Elem() AnalysisCustomActionURLOperationOutput {
	return o.ApplyT(func(v *AnalysisCustomActionURLOperation) AnalysisCustomActionURLOperation {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomActionURLOperation
		return ret
	}).(AnalysisCustomActionURLOperationOutput)
}

func (o AnalysisCustomActionURLOperationPtrOutput) URLTarget() AnalysisURLTargetConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomActionURLOperation) *AnalysisURLTargetConfiguration {
		if v == nil {
			return nil
		}
		return &v.URLTarget
	}).(AnalysisURLTargetConfigurationPtrOutput)
}

func (o AnalysisCustomActionURLOperationPtrOutput) URLTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomActionURLOperation) *string {
		if v == nil {
			return nil
		}
		return &v.URLTemplate
	}).(pulumi.StringPtrOutput)
}

type AnalysisCustomColor struct {
	Color        string                `pulumi:"color"`
	FieldValue   *string               `pulumi:"fieldValue"`
	SpecialValue *AnalysisSpecialValue `pulumi:"specialValue"`
}

// AnalysisCustomColorInput is an input type that accepts AnalysisCustomColorArgs and AnalysisCustomColorOutput values.
// You can construct a concrete instance of `AnalysisCustomColorInput` via:
//
//	AnalysisCustomColorArgs{...}
type AnalysisCustomColorInput interface {
	pulumi.Input

	ToAnalysisCustomColorOutput() AnalysisCustomColorOutput
	ToAnalysisCustomColorOutputWithContext(context.Context) AnalysisCustomColorOutput
}

type AnalysisCustomColorArgs struct {
	Color        pulumi.StringInput           `pulumi:"color"`
	FieldValue   pulumi.StringPtrInput        `pulumi:"fieldValue"`
	SpecialValue AnalysisSpecialValuePtrInput `pulumi:"specialValue"`
}

func (AnalysisCustomColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomColor)(nil)).Elem()
}

func (i AnalysisCustomColorArgs) ToAnalysisCustomColorOutput() AnalysisCustomColorOutput {
	return i.ToAnalysisCustomColorOutputWithContext(context.Background())
}

func (i AnalysisCustomColorArgs) ToAnalysisCustomColorOutputWithContext(ctx context.Context) AnalysisCustomColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomColorOutput)
}

// AnalysisCustomColorArrayInput is an input type that accepts AnalysisCustomColorArray and AnalysisCustomColorArrayOutput values.
// You can construct a concrete instance of `AnalysisCustomColorArrayInput` via:
//
//	AnalysisCustomColorArray{ AnalysisCustomColorArgs{...} }
type AnalysisCustomColorArrayInput interface {
	pulumi.Input

	ToAnalysisCustomColorArrayOutput() AnalysisCustomColorArrayOutput
	ToAnalysisCustomColorArrayOutputWithContext(context.Context) AnalysisCustomColorArrayOutput
}

type AnalysisCustomColorArray []AnalysisCustomColorInput

func (AnalysisCustomColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisCustomColor)(nil)).Elem()
}

func (i AnalysisCustomColorArray) ToAnalysisCustomColorArrayOutput() AnalysisCustomColorArrayOutput {
	return i.ToAnalysisCustomColorArrayOutputWithContext(context.Background())
}

func (i AnalysisCustomColorArray) ToAnalysisCustomColorArrayOutputWithContext(ctx context.Context) AnalysisCustomColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomColorArrayOutput)
}

type AnalysisCustomColorOutput struct{ *pulumi.OutputState }

func (AnalysisCustomColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomColor)(nil)).Elem()
}

func (o AnalysisCustomColorOutput) ToAnalysisCustomColorOutput() AnalysisCustomColorOutput {
	return o
}

func (o AnalysisCustomColorOutput) ToAnalysisCustomColorOutputWithContext(ctx context.Context) AnalysisCustomColorOutput {
	return o
}

func (o AnalysisCustomColorOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCustomColor) string { return v.Color }).(pulumi.StringOutput)
}

func (o AnalysisCustomColorOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisCustomColor) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

func (o AnalysisCustomColorOutput) SpecialValue() AnalysisSpecialValuePtrOutput {
	return o.ApplyT(func(v AnalysisCustomColor) *AnalysisSpecialValue { return v.SpecialValue }).(AnalysisSpecialValuePtrOutput)
}

type AnalysisCustomColorArrayOutput struct{ *pulumi.OutputState }

func (AnalysisCustomColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisCustomColor)(nil)).Elem()
}

func (o AnalysisCustomColorArrayOutput) ToAnalysisCustomColorArrayOutput() AnalysisCustomColorArrayOutput {
	return o
}

func (o AnalysisCustomColorArrayOutput) ToAnalysisCustomColorArrayOutputWithContext(ctx context.Context) AnalysisCustomColorArrayOutput {
	return o
}

func (o AnalysisCustomColorArrayOutput) Index(i pulumi.IntInput) AnalysisCustomColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisCustomColor {
		return vs[0].([]AnalysisCustomColor)[vs[1].(int)]
	}).(AnalysisCustomColorOutput)
}

type AnalysisCustomContentConfiguration struct {
	ContentType  *AnalysisCustomContentType                      `pulumi:"contentType"`
	ContentUrl   *string                                         `pulumi:"contentUrl"`
	ImageScaling *AnalysisCustomContentImageScalingConfiguration `pulumi:"imageScaling"`
}

// AnalysisCustomContentConfigurationInput is an input type that accepts AnalysisCustomContentConfigurationArgs and AnalysisCustomContentConfigurationOutput values.
// You can construct a concrete instance of `AnalysisCustomContentConfigurationInput` via:
//
//	AnalysisCustomContentConfigurationArgs{...}
type AnalysisCustomContentConfigurationInput interface {
	pulumi.Input

	ToAnalysisCustomContentConfigurationOutput() AnalysisCustomContentConfigurationOutput
	ToAnalysisCustomContentConfigurationOutputWithContext(context.Context) AnalysisCustomContentConfigurationOutput
}

type AnalysisCustomContentConfigurationArgs struct {
	ContentType  AnalysisCustomContentTypePtrInput                      `pulumi:"contentType"`
	ContentUrl   pulumi.StringPtrInput                                  `pulumi:"contentUrl"`
	ImageScaling AnalysisCustomContentImageScalingConfigurationPtrInput `pulumi:"imageScaling"`
}

func (AnalysisCustomContentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomContentConfiguration)(nil)).Elem()
}

func (i AnalysisCustomContentConfigurationArgs) ToAnalysisCustomContentConfigurationOutput() AnalysisCustomContentConfigurationOutput {
	return i.ToAnalysisCustomContentConfigurationOutputWithContext(context.Background())
}

func (i AnalysisCustomContentConfigurationArgs) ToAnalysisCustomContentConfigurationOutputWithContext(ctx context.Context) AnalysisCustomContentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomContentConfigurationOutput)
}

func (i AnalysisCustomContentConfigurationArgs) ToAnalysisCustomContentConfigurationPtrOutput() AnalysisCustomContentConfigurationPtrOutput {
	return i.ToAnalysisCustomContentConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomContentConfigurationArgs) ToAnalysisCustomContentConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomContentConfigurationOutput).ToAnalysisCustomContentConfigurationPtrOutputWithContext(ctx)
}

// AnalysisCustomContentConfigurationPtrInput is an input type that accepts AnalysisCustomContentConfigurationArgs, AnalysisCustomContentConfigurationPtr and AnalysisCustomContentConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomContentConfigurationPtrInput` via:
//
//	        AnalysisCustomContentConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomContentConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisCustomContentConfigurationPtrOutput() AnalysisCustomContentConfigurationPtrOutput
	ToAnalysisCustomContentConfigurationPtrOutputWithContext(context.Context) AnalysisCustomContentConfigurationPtrOutput
}

type analysisCustomContentConfigurationPtrType AnalysisCustomContentConfigurationArgs

func AnalysisCustomContentConfigurationPtr(v *AnalysisCustomContentConfigurationArgs) AnalysisCustomContentConfigurationPtrInput {
	return (*analysisCustomContentConfigurationPtrType)(v)
}

func (*analysisCustomContentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomContentConfiguration)(nil)).Elem()
}

func (i *analysisCustomContentConfigurationPtrType) ToAnalysisCustomContentConfigurationPtrOutput() AnalysisCustomContentConfigurationPtrOutput {
	return i.ToAnalysisCustomContentConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisCustomContentConfigurationPtrType) ToAnalysisCustomContentConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomContentConfigurationPtrOutput)
}

type AnalysisCustomContentConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisCustomContentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomContentConfiguration)(nil)).Elem()
}

func (o AnalysisCustomContentConfigurationOutput) ToAnalysisCustomContentConfigurationOutput() AnalysisCustomContentConfigurationOutput {
	return o
}

func (o AnalysisCustomContentConfigurationOutput) ToAnalysisCustomContentConfigurationOutputWithContext(ctx context.Context) AnalysisCustomContentConfigurationOutput {
	return o
}

func (o AnalysisCustomContentConfigurationOutput) ToAnalysisCustomContentConfigurationPtrOutput() AnalysisCustomContentConfigurationPtrOutput {
	return o.ToAnalysisCustomContentConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomContentConfigurationOutput) ToAnalysisCustomContentConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomContentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomContentConfiguration) *AnalysisCustomContentConfiguration {
		return &v
	}).(AnalysisCustomContentConfigurationPtrOutput)
}

func (o AnalysisCustomContentConfigurationOutput) ContentType() AnalysisCustomContentTypePtrOutput {
	return o.ApplyT(func(v AnalysisCustomContentConfiguration) *AnalysisCustomContentType { return v.ContentType }).(AnalysisCustomContentTypePtrOutput)
}

func (o AnalysisCustomContentConfigurationOutput) ContentUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisCustomContentConfiguration) *string { return v.ContentUrl }).(pulumi.StringPtrOutput)
}

func (o AnalysisCustomContentConfigurationOutput) ImageScaling() AnalysisCustomContentImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCustomContentConfiguration) *AnalysisCustomContentImageScalingConfiguration {
		return v.ImageScaling
	}).(AnalysisCustomContentImageScalingConfigurationPtrOutput)
}

type AnalysisCustomContentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomContentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomContentConfiguration)(nil)).Elem()
}

func (o AnalysisCustomContentConfigurationPtrOutput) ToAnalysisCustomContentConfigurationPtrOutput() AnalysisCustomContentConfigurationPtrOutput {
	return o
}

func (o AnalysisCustomContentConfigurationPtrOutput) ToAnalysisCustomContentConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomContentConfigurationPtrOutput {
	return o
}

func (o AnalysisCustomContentConfigurationPtrOutput) Elem() AnalysisCustomContentConfigurationOutput {
	return o.ApplyT(func(v *AnalysisCustomContentConfiguration) AnalysisCustomContentConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomContentConfiguration
		return ret
	}).(AnalysisCustomContentConfigurationOutput)
}

func (o AnalysisCustomContentConfigurationPtrOutput) ContentType() AnalysisCustomContentTypePtrOutput {
	return o.ApplyT(func(v *AnalysisCustomContentConfiguration) *AnalysisCustomContentType {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(AnalysisCustomContentTypePtrOutput)
}

func (o AnalysisCustomContentConfigurationPtrOutput) ContentUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomContentConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentUrl
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisCustomContentConfigurationPtrOutput) ImageScaling() AnalysisCustomContentImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomContentConfiguration) *AnalysisCustomContentImageScalingConfiguration {
		if v == nil {
			return nil
		}
		return v.ImageScaling
	}).(AnalysisCustomContentImageScalingConfigurationPtrOutput)
}

type AnalysisCustomContentVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisCustomContentConfiguration `pulumi:"chartConfiguration"`
	DataSetIdentifier  string                              `pulumi:"dataSetIdentifier"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisCustomContentVisualInput is an input type that accepts AnalysisCustomContentVisualArgs and AnalysisCustomContentVisualOutput values.
// You can construct a concrete instance of `AnalysisCustomContentVisualInput` via:
//
//	AnalysisCustomContentVisualArgs{...}
type AnalysisCustomContentVisualInput interface {
	pulumi.Input

	ToAnalysisCustomContentVisualOutput() AnalysisCustomContentVisualOutput
	ToAnalysisCustomContentVisualOutputWithContext(context.Context) AnalysisCustomContentVisualOutput
}

type AnalysisCustomContentVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisCustomContentConfigurationPtrInput `pulumi:"chartConfiguration"`
	DataSetIdentifier  pulumi.StringInput                         `pulumi:"dataSetIdentifier"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisCustomContentVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomContentVisual)(nil)).Elem()
}

func (i AnalysisCustomContentVisualArgs) ToAnalysisCustomContentVisualOutput() AnalysisCustomContentVisualOutput {
	return i.ToAnalysisCustomContentVisualOutputWithContext(context.Background())
}

func (i AnalysisCustomContentVisualArgs) ToAnalysisCustomContentVisualOutputWithContext(ctx context.Context) AnalysisCustomContentVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomContentVisualOutput)
}

func (i AnalysisCustomContentVisualArgs) ToAnalysisCustomContentVisualPtrOutput() AnalysisCustomContentVisualPtrOutput {
	return i.ToAnalysisCustomContentVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomContentVisualArgs) ToAnalysisCustomContentVisualPtrOutputWithContext(ctx context.Context) AnalysisCustomContentVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomContentVisualOutput).ToAnalysisCustomContentVisualPtrOutputWithContext(ctx)
}

// AnalysisCustomContentVisualPtrInput is an input type that accepts AnalysisCustomContentVisualArgs, AnalysisCustomContentVisualPtr and AnalysisCustomContentVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomContentVisualPtrInput` via:
//
//	        AnalysisCustomContentVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomContentVisualPtrInput interface {
	pulumi.Input

	ToAnalysisCustomContentVisualPtrOutput() AnalysisCustomContentVisualPtrOutput
	ToAnalysisCustomContentVisualPtrOutputWithContext(context.Context) AnalysisCustomContentVisualPtrOutput
}

type analysisCustomContentVisualPtrType AnalysisCustomContentVisualArgs

func AnalysisCustomContentVisualPtr(v *AnalysisCustomContentVisualArgs) AnalysisCustomContentVisualPtrInput {
	return (*analysisCustomContentVisualPtrType)(v)
}

func (*analysisCustomContentVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomContentVisual)(nil)).Elem()
}

func (i *analysisCustomContentVisualPtrType) ToAnalysisCustomContentVisualPtrOutput() AnalysisCustomContentVisualPtrOutput {
	return i.ToAnalysisCustomContentVisualPtrOutputWithContext(context.Background())
}

func (i *analysisCustomContentVisualPtrType) ToAnalysisCustomContentVisualPtrOutputWithContext(ctx context.Context) AnalysisCustomContentVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomContentVisualPtrOutput)
}

type AnalysisCustomContentVisualOutput struct{ *pulumi.OutputState }

func (AnalysisCustomContentVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomContentVisual)(nil)).Elem()
}

func (o AnalysisCustomContentVisualOutput) ToAnalysisCustomContentVisualOutput() AnalysisCustomContentVisualOutput {
	return o
}

func (o AnalysisCustomContentVisualOutput) ToAnalysisCustomContentVisualOutputWithContext(ctx context.Context) AnalysisCustomContentVisualOutput {
	return o
}

func (o AnalysisCustomContentVisualOutput) ToAnalysisCustomContentVisualPtrOutput() AnalysisCustomContentVisualPtrOutput {
	return o.ToAnalysisCustomContentVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomContentVisualOutput) ToAnalysisCustomContentVisualPtrOutputWithContext(ctx context.Context) AnalysisCustomContentVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomContentVisual) *AnalysisCustomContentVisual {
		return &v
	}).(AnalysisCustomContentVisualPtrOutput)
}

func (o AnalysisCustomContentVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisCustomContentVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisCustomContentVisualOutput) ChartConfiguration() AnalysisCustomContentConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisCustomContentVisual) *AnalysisCustomContentConfiguration { return v.ChartConfiguration }).(AnalysisCustomContentConfigurationPtrOutput)
}

func (o AnalysisCustomContentVisualOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCustomContentVisual) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o AnalysisCustomContentVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisCustomContentVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisCustomContentVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisCustomContentVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisCustomContentVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCustomContentVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisCustomContentVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomContentVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomContentVisual)(nil)).Elem()
}

func (o AnalysisCustomContentVisualPtrOutput) ToAnalysisCustomContentVisualPtrOutput() AnalysisCustomContentVisualPtrOutput {
	return o
}

func (o AnalysisCustomContentVisualPtrOutput) ToAnalysisCustomContentVisualPtrOutputWithContext(ctx context.Context) AnalysisCustomContentVisualPtrOutput {
	return o
}

func (o AnalysisCustomContentVisualPtrOutput) Elem() AnalysisCustomContentVisualOutput {
	return o.ApplyT(func(v *AnalysisCustomContentVisual) AnalysisCustomContentVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomContentVisual
		return ret
	}).(AnalysisCustomContentVisualOutput)
}

func (o AnalysisCustomContentVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisCustomContentVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisCustomContentVisualPtrOutput) ChartConfiguration() AnalysisCustomContentConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomContentVisual) *AnalysisCustomContentConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisCustomContentConfigurationPtrOutput)
}

func (o AnalysisCustomContentVisualPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomContentVisual) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisCustomContentVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomContentVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisCustomContentVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomContentVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisCustomContentVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomContentVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisCustomFilterConfiguration struct {
	CategoryValue    *string                                 `pulumi:"categoryValue"`
	MatchOperator    AnalysisCategoryFilterMatchOperator     `pulumi:"matchOperator"`
	NullOption       AnalysisFilterNullOption                `pulumi:"nullOption"`
	ParameterName    *string                                 `pulumi:"parameterName"`
	SelectAllOptions *AnalysisCategoryFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// AnalysisCustomFilterConfigurationInput is an input type that accepts AnalysisCustomFilterConfigurationArgs and AnalysisCustomFilterConfigurationOutput values.
// You can construct a concrete instance of `AnalysisCustomFilterConfigurationInput` via:
//
//	AnalysisCustomFilterConfigurationArgs{...}
type AnalysisCustomFilterConfigurationInput interface {
	pulumi.Input

	ToAnalysisCustomFilterConfigurationOutput() AnalysisCustomFilterConfigurationOutput
	ToAnalysisCustomFilterConfigurationOutputWithContext(context.Context) AnalysisCustomFilterConfigurationOutput
}

type AnalysisCustomFilterConfigurationArgs struct {
	CategoryValue    pulumi.StringPtrInput                          `pulumi:"categoryValue"`
	MatchOperator    AnalysisCategoryFilterMatchOperatorInput       `pulumi:"matchOperator"`
	NullOption       AnalysisFilterNullOptionInput                  `pulumi:"nullOption"`
	ParameterName    pulumi.StringPtrInput                          `pulumi:"parameterName"`
	SelectAllOptions AnalysisCategoryFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (AnalysisCustomFilterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomFilterConfiguration)(nil)).Elem()
}

func (i AnalysisCustomFilterConfigurationArgs) ToAnalysisCustomFilterConfigurationOutput() AnalysisCustomFilterConfigurationOutput {
	return i.ToAnalysisCustomFilterConfigurationOutputWithContext(context.Background())
}

func (i AnalysisCustomFilterConfigurationArgs) ToAnalysisCustomFilterConfigurationOutputWithContext(ctx context.Context) AnalysisCustomFilterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomFilterConfigurationOutput)
}

func (i AnalysisCustomFilterConfigurationArgs) ToAnalysisCustomFilterConfigurationPtrOutput() AnalysisCustomFilterConfigurationPtrOutput {
	return i.ToAnalysisCustomFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomFilterConfigurationArgs) ToAnalysisCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomFilterConfigurationOutput).ToAnalysisCustomFilterConfigurationPtrOutputWithContext(ctx)
}

// AnalysisCustomFilterConfigurationPtrInput is an input type that accepts AnalysisCustomFilterConfigurationArgs, AnalysisCustomFilterConfigurationPtr and AnalysisCustomFilterConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomFilterConfigurationPtrInput` via:
//
//	        AnalysisCustomFilterConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomFilterConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisCustomFilterConfigurationPtrOutput() AnalysisCustomFilterConfigurationPtrOutput
	ToAnalysisCustomFilterConfigurationPtrOutputWithContext(context.Context) AnalysisCustomFilterConfigurationPtrOutput
}

type analysisCustomFilterConfigurationPtrType AnalysisCustomFilterConfigurationArgs

func AnalysisCustomFilterConfigurationPtr(v *AnalysisCustomFilterConfigurationArgs) AnalysisCustomFilterConfigurationPtrInput {
	return (*analysisCustomFilterConfigurationPtrType)(v)
}

func (*analysisCustomFilterConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomFilterConfiguration)(nil)).Elem()
}

func (i *analysisCustomFilterConfigurationPtrType) ToAnalysisCustomFilterConfigurationPtrOutput() AnalysisCustomFilterConfigurationPtrOutput {
	return i.ToAnalysisCustomFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisCustomFilterConfigurationPtrType) ToAnalysisCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomFilterConfigurationPtrOutput)
}

type AnalysisCustomFilterConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisCustomFilterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomFilterConfiguration)(nil)).Elem()
}

func (o AnalysisCustomFilterConfigurationOutput) ToAnalysisCustomFilterConfigurationOutput() AnalysisCustomFilterConfigurationOutput {
	return o
}

func (o AnalysisCustomFilterConfigurationOutput) ToAnalysisCustomFilterConfigurationOutputWithContext(ctx context.Context) AnalysisCustomFilterConfigurationOutput {
	return o
}

func (o AnalysisCustomFilterConfigurationOutput) ToAnalysisCustomFilterConfigurationPtrOutput() AnalysisCustomFilterConfigurationPtrOutput {
	return o.ToAnalysisCustomFilterConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomFilterConfigurationOutput) ToAnalysisCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomFilterConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomFilterConfiguration) *AnalysisCustomFilterConfiguration {
		return &v
	}).(AnalysisCustomFilterConfigurationPtrOutput)
}

func (o AnalysisCustomFilterConfigurationOutput) CategoryValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisCustomFilterConfiguration) *string { return v.CategoryValue }).(pulumi.StringPtrOutput)
}

func (o AnalysisCustomFilterConfigurationOutput) MatchOperator() AnalysisCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v AnalysisCustomFilterConfiguration) AnalysisCategoryFilterMatchOperator { return v.MatchOperator }).(AnalysisCategoryFilterMatchOperatorOutput)
}

func (o AnalysisCustomFilterConfigurationOutput) NullOption() AnalysisFilterNullOptionOutput {
	return o.ApplyT(func(v AnalysisCustomFilterConfiguration) AnalysisFilterNullOption { return v.NullOption }).(AnalysisFilterNullOptionOutput)
}

func (o AnalysisCustomFilterConfigurationOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisCustomFilterConfiguration) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o AnalysisCustomFilterConfigurationOutput) SelectAllOptions() AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisCustomFilterConfiguration) *AnalysisCategoryFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(AnalysisCategoryFilterSelectAllOptionsPtrOutput)
}

type AnalysisCustomFilterConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomFilterConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomFilterConfiguration)(nil)).Elem()
}

func (o AnalysisCustomFilterConfigurationPtrOutput) ToAnalysisCustomFilterConfigurationPtrOutput() AnalysisCustomFilterConfigurationPtrOutput {
	return o
}

func (o AnalysisCustomFilterConfigurationPtrOutput) ToAnalysisCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomFilterConfigurationPtrOutput {
	return o
}

func (o AnalysisCustomFilterConfigurationPtrOutput) Elem() AnalysisCustomFilterConfigurationOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterConfiguration) AnalysisCustomFilterConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomFilterConfiguration
		return ret
	}).(AnalysisCustomFilterConfigurationOutput)
}

func (o AnalysisCustomFilterConfigurationPtrOutput) CategoryValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CategoryValue
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisCustomFilterConfigurationPtrOutput) MatchOperator() AnalysisCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterConfiguration) *AnalysisCategoryFilterMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(AnalysisCategoryFilterMatchOperatorPtrOutput)
}

func (o AnalysisCustomFilterConfigurationPtrOutput) NullOption() AnalysisFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterConfiguration) *AnalysisFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(AnalysisFilterNullOptionPtrOutput)
}

func (o AnalysisCustomFilterConfigurationPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisCustomFilterConfigurationPtrOutput) SelectAllOptions() AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterConfiguration) *AnalysisCategoryFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(AnalysisCategoryFilterSelectAllOptionsPtrOutput)
}

type AnalysisCustomFilterListConfiguration struct {
	CategoryValues   []string                                `pulumi:"categoryValues"`
	MatchOperator    AnalysisCategoryFilterMatchOperator     `pulumi:"matchOperator"`
	NullOption       AnalysisFilterNullOption                `pulumi:"nullOption"`
	SelectAllOptions *AnalysisCategoryFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// AnalysisCustomFilterListConfigurationInput is an input type that accepts AnalysisCustomFilterListConfigurationArgs and AnalysisCustomFilterListConfigurationOutput values.
// You can construct a concrete instance of `AnalysisCustomFilterListConfigurationInput` via:
//
//	AnalysisCustomFilterListConfigurationArgs{...}
type AnalysisCustomFilterListConfigurationInput interface {
	pulumi.Input

	ToAnalysisCustomFilterListConfigurationOutput() AnalysisCustomFilterListConfigurationOutput
	ToAnalysisCustomFilterListConfigurationOutputWithContext(context.Context) AnalysisCustomFilterListConfigurationOutput
}

type AnalysisCustomFilterListConfigurationArgs struct {
	CategoryValues   pulumi.StringArrayInput                        `pulumi:"categoryValues"`
	MatchOperator    AnalysisCategoryFilterMatchOperatorInput       `pulumi:"matchOperator"`
	NullOption       AnalysisFilterNullOptionInput                  `pulumi:"nullOption"`
	SelectAllOptions AnalysisCategoryFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (AnalysisCustomFilterListConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomFilterListConfiguration)(nil)).Elem()
}

func (i AnalysisCustomFilterListConfigurationArgs) ToAnalysisCustomFilterListConfigurationOutput() AnalysisCustomFilterListConfigurationOutput {
	return i.ToAnalysisCustomFilterListConfigurationOutputWithContext(context.Background())
}

func (i AnalysisCustomFilterListConfigurationArgs) ToAnalysisCustomFilterListConfigurationOutputWithContext(ctx context.Context) AnalysisCustomFilterListConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomFilterListConfigurationOutput)
}

func (i AnalysisCustomFilterListConfigurationArgs) ToAnalysisCustomFilterListConfigurationPtrOutput() AnalysisCustomFilterListConfigurationPtrOutput {
	return i.ToAnalysisCustomFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomFilterListConfigurationArgs) ToAnalysisCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomFilterListConfigurationOutput).ToAnalysisCustomFilterListConfigurationPtrOutputWithContext(ctx)
}

// AnalysisCustomFilterListConfigurationPtrInput is an input type that accepts AnalysisCustomFilterListConfigurationArgs, AnalysisCustomFilterListConfigurationPtr and AnalysisCustomFilterListConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomFilterListConfigurationPtrInput` via:
//
//	        AnalysisCustomFilterListConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomFilterListConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisCustomFilterListConfigurationPtrOutput() AnalysisCustomFilterListConfigurationPtrOutput
	ToAnalysisCustomFilterListConfigurationPtrOutputWithContext(context.Context) AnalysisCustomFilterListConfigurationPtrOutput
}

type analysisCustomFilterListConfigurationPtrType AnalysisCustomFilterListConfigurationArgs

func AnalysisCustomFilterListConfigurationPtr(v *AnalysisCustomFilterListConfigurationArgs) AnalysisCustomFilterListConfigurationPtrInput {
	return (*analysisCustomFilterListConfigurationPtrType)(v)
}

func (*analysisCustomFilterListConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomFilterListConfiguration)(nil)).Elem()
}

func (i *analysisCustomFilterListConfigurationPtrType) ToAnalysisCustomFilterListConfigurationPtrOutput() AnalysisCustomFilterListConfigurationPtrOutput {
	return i.ToAnalysisCustomFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisCustomFilterListConfigurationPtrType) ToAnalysisCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomFilterListConfigurationPtrOutput)
}

type AnalysisCustomFilterListConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisCustomFilterListConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomFilterListConfiguration)(nil)).Elem()
}

func (o AnalysisCustomFilterListConfigurationOutput) ToAnalysisCustomFilterListConfigurationOutput() AnalysisCustomFilterListConfigurationOutput {
	return o
}

func (o AnalysisCustomFilterListConfigurationOutput) ToAnalysisCustomFilterListConfigurationOutputWithContext(ctx context.Context) AnalysisCustomFilterListConfigurationOutput {
	return o
}

func (o AnalysisCustomFilterListConfigurationOutput) ToAnalysisCustomFilterListConfigurationPtrOutput() AnalysisCustomFilterListConfigurationPtrOutput {
	return o.ToAnalysisCustomFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomFilterListConfigurationOutput) ToAnalysisCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomFilterListConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomFilterListConfiguration) *AnalysisCustomFilterListConfiguration {
		return &v
	}).(AnalysisCustomFilterListConfigurationPtrOutput)
}

func (o AnalysisCustomFilterListConfigurationOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisCustomFilterListConfiguration) []string { return v.CategoryValues }).(pulumi.StringArrayOutput)
}

func (o AnalysisCustomFilterListConfigurationOutput) MatchOperator() AnalysisCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v AnalysisCustomFilterListConfiguration) AnalysisCategoryFilterMatchOperator {
		return v.MatchOperator
	}).(AnalysisCategoryFilterMatchOperatorOutput)
}

func (o AnalysisCustomFilterListConfigurationOutput) NullOption() AnalysisFilterNullOptionOutput {
	return o.ApplyT(func(v AnalysisCustomFilterListConfiguration) AnalysisFilterNullOption { return v.NullOption }).(AnalysisFilterNullOptionOutput)
}

func (o AnalysisCustomFilterListConfigurationOutput) SelectAllOptions() AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisCustomFilterListConfiguration) *AnalysisCategoryFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(AnalysisCategoryFilterSelectAllOptionsPtrOutput)
}

type AnalysisCustomFilterListConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomFilterListConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomFilterListConfiguration)(nil)).Elem()
}

func (o AnalysisCustomFilterListConfigurationPtrOutput) ToAnalysisCustomFilterListConfigurationPtrOutput() AnalysisCustomFilterListConfigurationPtrOutput {
	return o
}

func (o AnalysisCustomFilterListConfigurationPtrOutput) ToAnalysisCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomFilterListConfigurationPtrOutput {
	return o
}

func (o AnalysisCustomFilterListConfigurationPtrOutput) Elem() AnalysisCustomFilterListConfigurationOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterListConfiguration) AnalysisCustomFilterListConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomFilterListConfiguration
		return ret
	}).(AnalysisCustomFilterListConfigurationOutput)
}

func (o AnalysisCustomFilterListConfigurationPtrOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterListConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.CategoryValues
	}).(pulumi.StringArrayOutput)
}

func (o AnalysisCustomFilterListConfigurationPtrOutput) MatchOperator() AnalysisCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterListConfiguration) *AnalysisCategoryFilterMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(AnalysisCategoryFilterMatchOperatorPtrOutput)
}

func (o AnalysisCustomFilterListConfigurationPtrOutput) NullOption() AnalysisFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterListConfiguration) *AnalysisFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(AnalysisFilterNullOptionPtrOutput)
}

func (o AnalysisCustomFilterListConfigurationPtrOutput) SelectAllOptions() AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomFilterListConfiguration) *AnalysisCategoryFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(AnalysisCategoryFilterSelectAllOptionsPtrOutput)
}

type AnalysisCustomNarrativeOptions struct {
	Narrative string `pulumi:"narrative"`
}

// AnalysisCustomNarrativeOptionsInput is an input type that accepts AnalysisCustomNarrativeOptionsArgs and AnalysisCustomNarrativeOptionsOutput values.
// You can construct a concrete instance of `AnalysisCustomNarrativeOptionsInput` via:
//
//	AnalysisCustomNarrativeOptionsArgs{...}
type AnalysisCustomNarrativeOptionsInput interface {
	pulumi.Input

	ToAnalysisCustomNarrativeOptionsOutput() AnalysisCustomNarrativeOptionsOutput
	ToAnalysisCustomNarrativeOptionsOutputWithContext(context.Context) AnalysisCustomNarrativeOptionsOutput
}

type AnalysisCustomNarrativeOptionsArgs struct {
	Narrative pulumi.StringInput `pulumi:"narrative"`
}

func (AnalysisCustomNarrativeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomNarrativeOptions)(nil)).Elem()
}

func (i AnalysisCustomNarrativeOptionsArgs) ToAnalysisCustomNarrativeOptionsOutput() AnalysisCustomNarrativeOptionsOutput {
	return i.ToAnalysisCustomNarrativeOptionsOutputWithContext(context.Background())
}

func (i AnalysisCustomNarrativeOptionsArgs) ToAnalysisCustomNarrativeOptionsOutputWithContext(ctx context.Context) AnalysisCustomNarrativeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomNarrativeOptionsOutput)
}

func (i AnalysisCustomNarrativeOptionsArgs) ToAnalysisCustomNarrativeOptionsPtrOutput() AnalysisCustomNarrativeOptionsPtrOutput {
	return i.ToAnalysisCustomNarrativeOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomNarrativeOptionsArgs) ToAnalysisCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) AnalysisCustomNarrativeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomNarrativeOptionsOutput).ToAnalysisCustomNarrativeOptionsPtrOutputWithContext(ctx)
}

// AnalysisCustomNarrativeOptionsPtrInput is an input type that accepts AnalysisCustomNarrativeOptionsArgs, AnalysisCustomNarrativeOptionsPtr and AnalysisCustomNarrativeOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomNarrativeOptionsPtrInput` via:
//
//	        AnalysisCustomNarrativeOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomNarrativeOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisCustomNarrativeOptionsPtrOutput() AnalysisCustomNarrativeOptionsPtrOutput
	ToAnalysisCustomNarrativeOptionsPtrOutputWithContext(context.Context) AnalysisCustomNarrativeOptionsPtrOutput
}

type analysisCustomNarrativeOptionsPtrType AnalysisCustomNarrativeOptionsArgs

func AnalysisCustomNarrativeOptionsPtr(v *AnalysisCustomNarrativeOptionsArgs) AnalysisCustomNarrativeOptionsPtrInput {
	return (*analysisCustomNarrativeOptionsPtrType)(v)
}

func (*analysisCustomNarrativeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomNarrativeOptions)(nil)).Elem()
}

func (i *analysisCustomNarrativeOptionsPtrType) ToAnalysisCustomNarrativeOptionsPtrOutput() AnalysisCustomNarrativeOptionsPtrOutput {
	return i.ToAnalysisCustomNarrativeOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisCustomNarrativeOptionsPtrType) ToAnalysisCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) AnalysisCustomNarrativeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomNarrativeOptionsPtrOutput)
}

type AnalysisCustomNarrativeOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisCustomNarrativeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomNarrativeOptions)(nil)).Elem()
}

func (o AnalysisCustomNarrativeOptionsOutput) ToAnalysisCustomNarrativeOptionsOutput() AnalysisCustomNarrativeOptionsOutput {
	return o
}

func (o AnalysisCustomNarrativeOptionsOutput) ToAnalysisCustomNarrativeOptionsOutputWithContext(ctx context.Context) AnalysisCustomNarrativeOptionsOutput {
	return o
}

func (o AnalysisCustomNarrativeOptionsOutput) ToAnalysisCustomNarrativeOptionsPtrOutput() AnalysisCustomNarrativeOptionsPtrOutput {
	return o.ToAnalysisCustomNarrativeOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomNarrativeOptionsOutput) ToAnalysisCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) AnalysisCustomNarrativeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomNarrativeOptions) *AnalysisCustomNarrativeOptions {
		return &v
	}).(AnalysisCustomNarrativeOptionsPtrOutput)
}

func (o AnalysisCustomNarrativeOptionsOutput) Narrative() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisCustomNarrativeOptions) string { return v.Narrative }).(pulumi.StringOutput)
}

type AnalysisCustomNarrativeOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomNarrativeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomNarrativeOptions)(nil)).Elem()
}

func (o AnalysisCustomNarrativeOptionsPtrOutput) ToAnalysisCustomNarrativeOptionsPtrOutput() AnalysisCustomNarrativeOptionsPtrOutput {
	return o
}

func (o AnalysisCustomNarrativeOptionsPtrOutput) ToAnalysisCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) AnalysisCustomNarrativeOptionsPtrOutput {
	return o
}

func (o AnalysisCustomNarrativeOptionsPtrOutput) Elem() AnalysisCustomNarrativeOptionsOutput {
	return o.ApplyT(func(v *AnalysisCustomNarrativeOptions) AnalysisCustomNarrativeOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomNarrativeOptions
		return ret
	}).(AnalysisCustomNarrativeOptionsOutput)
}

func (o AnalysisCustomNarrativeOptionsPtrOutput) Narrative() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomNarrativeOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Narrative
	}).(pulumi.StringPtrOutput)
}

type AnalysisCustomParameterValues struct {
	DateTimeValues []string  `pulumi:"dateTimeValues"`
	DecimalValues  []float64 `pulumi:"decimalValues"`
	IntegerValues  []float64 `pulumi:"integerValues"`
	StringValues   []string  `pulumi:"stringValues"`
}

// AnalysisCustomParameterValuesInput is an input type that accepts AnalysisCustomParameterValuesArgs and AnalysisCustomParameterValuesOutput values.
// You can construct a concrete instance of `AnalysisCustomParameterValuesInput` via:
//
//	AnalysisCustomParameterValuesArgs{...}
type AnalysisCustomParameterValuesInput interface {
	pulumi.Input

	ToAnalysisCustomParameterValuesOutput() AnalysisCustomParameterValuesOutput
	ToAnalysisCustomParameterValuesOutputWithContext(context.Context) AnalysisCustomParameterValuesOutput
}

type AnalysisCustomParameterValuesArgs struct {
	DateTimeValues pulumi.StringArrayInput  `pulumi:"dateTimeValues"`
	DecimalValues  pulumi.Float64ArrayInput `pulumi:"decimalValues"`
	IntegerValues  pulumi.Float64ArrayInput `pulumi:"integerValues"`
	StringValues   pulumi.StringArrayInput  `pulumi:"stringValues"`
}

func (AnalysisCustomParameterValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomParameterValues)(nil)).Elem()
}

func (i AnalysisCustomParameterValuesArgs) ToAnalysisCustomParameterValuesOutput() AnalysisCustomParameterValuesOutput {
	return i.ToAnalysisCustomParameterValuesOutputWithContext(context.Background())
}

func (i AnalysisCustomParameterValuesArgs) ToAnalysisCustomParameterValuesOutputWithContext(ctx context.Context) AnalysisCustomParameterValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomParameterValuesOutput)
}

func (i AnalysisCustomParameterValuesArgs) ToAnalysisCustomParameterValuesPtrOutput() AnalysisCustomParameterValuesPtrOutput {
	return i.ToAnalysisCustomParameterValuesPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomParameterValuesArgs) ToAnalysisCustomParameterValuesPtrOutputWithContext(ctx context.Context) AnalysisCustomParameterValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomParameterValuesOutput).ToAnalysisCustomParameterValuesPtrOutputWithContext(ctx)
}

// AnalysisCustomParameterValuesPtrInput is an input type that accepts AnalysisCustomParameterValuesArgs, AnalysisCustomParameterValuesPtr and AnalysisCustomParameterValuesPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomParameterValuesPtrInput` via:
//
//	        AnalysisCustomParameterValuesArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomParameterValuesPtrInput interface {
	pulumi.Input

	ToAnalysisCustomParameterValuesPtrOutput() AnalysisCustomParameterValuesPtrOutput
	ToAnalysisCustomParameterValuesPtrOutputWithContext(context.Context) AnalysisCustomParameterValuesPtrOutput
}

type analysisCustomParameterValuesPtrType AnalysisCustomParameterValuesArgs

func AnalysisCustomParameterValuesPtr(v *AnalysisCustomParameterValuesArgs) AnalysisCustomParameterValuesPtrInput {
	return (*analysisCustomParameterValuesPtrType)(v)
}

func (*analysisCustomParameterValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomParameterValues)(nil)).Elem()
}

func (i *analysisCustomParameterValuesPtrType) ToAnalysisCustomParameterValuesPtrOutput() AnalysisCustomParameterValuesPtrOutput {
	return i.ToAnalysisCustomParameterValuesPtrOutputWithContext(context.Background())
}

func (i *analysisCustomParameterValuesPtrType) ToAnalysisCustomParameterValuesPtrOutputWithContext(ctx context.Context) AnalysisCustomParameterValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomParameterValuesPtrOutput)
}

type AnalysisCustomParameterValuesOutput struct{ *pulumi.OutputState }

func (AnalysisCustomParameterValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomParameterValues)(nil)).Elem()
}

func (o AnalysisCustomParameterValuesOutput) ToAnalysisCustomParameterValuesOutput() AnalysisCustomParameterValuesOutput {
	return o
}

func (o AnalysisCustomParameterValuesOutput) ToAnalysisCustomParameterValuesOutputWithContext(ctx context.Context) AnalysisCustomParameterValuesOutput {
	return o
}

func (o AnalysisCustomParameterValuesOutput) ToAnalysisCustomParameterValuesPtrOutput() AnalysisCustomParameterValuesPtrOutput {
	return o.ToAnalysisCustomParameterValuesPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomParameterValuesOutput) ToAnalysisCustomParameterValuesPtrOutputWithContext(ctx context.Context) AnalysisCustomParameterValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomParameterValues) *AnalysisCustomParameterValues {
		return &v
	}).(AnalysisCustomParameterValuesPtrOutput)
}

func (o AnalysisCustomParameterValuesOutput) DateTimeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisCustomParameterValues) []string { return v.DateTimeValues }).(pulumi.StringArrayOutput)
}

func (o AnalysisCustomParameterValuesOutput) DecimalValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v AnalysisCustomParameterValues) []float64 { return v.DecimalValues }).(pulumi.Float64ArrayOutput)
}

func (o AnalysisCustomParameterValuesOutput) IntegerValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v AnalysisCustomParameterValues) []float64 { return v.IntegerValues }).(pulumi.Float64ArrayOutput)
}

func (o AnalysisCustomParameterValuesOutput) StringValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisCustomParameterValues) []string { return v.StringValues }).(pulumi.StringArrayOutput)
}

type AnalysisCustomParameterValuesPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomParameterValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomParameterValues)(nil)).Elem()
}

func (o AnalysisCustomParameterValuesPtrOutput) ToAnalysisCustomParameterValuesPtrOutput() AnalysisCustomParameterValuesPtrOutput {
	return o
}

func (o AnalysisCustomParameterValuesPtrOutput) ToAnalysisCustomParameterValuesPtrOutputWithContext(ctx context.Context) AnalysisCustomParameterValuesPtrOutput {
	return o
}

func (o AnalysisCustomParameterValuesPtrOutput) Elem() AnalysisCustomParameterValuesOutput {
	return o.ApplyT(func(v *AnalysisCustomParameterValues) AnalysisCustomParameterValues {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomParameterValues
		return ret
	}).(AnalysisCustomParameterValuesOutput)
}

func (o AnalysisCustomParameterValuesPtrOutput) DateTimeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisCustomParameterValues) []string {
		if v == nil {
			return nil
		}
		return v.DateTimeValues
	}).(pulumi.StringArrayOutput)
}

func (o AnalysisCustomParameterValuesPtrOutput) DecimalValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *AnalysisCustomParameterValues) []float64 {
		if v == nil {
			return nil
		}
		return v.DecimalValues
	}).(pulumi.Float64ArrayOutput)
}

func (o AnalysisCustomParameterValuesPtrOutput) IntegerValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *AnalysisCustomParameterValues) []float64 {
		if v == nil {
			return nil
		}
		return v.IntegerValues
	}).(pulumi.Float64ArrayOutput)
}

func (o AnalysisCustomParameterValuesPtrOutput) StringValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisCustomParameterValues) []string {
		if v == nil {
			return nil
		}
		return v.StringValues
	}).(pulumi.StringArrayOutput)
}

type AnalysisCustomValuesConfiguration struct {
	CustomValues     AnalysisCustomParameterValues `pulumi:"customValues"`
	IncludeNullValue *bool                         `pulumi:"includeNullValue"`
}

// AnalysisCustomValuesConfigurationInput is an input type that accepts AnalysisCustomValuesConfigurationArgs and AnalysisCustomValuesConfigurationOutput values.
// You can construct a concrete instance of `AnalysisCustomValuesConfigurationInput` via:
//
//	AnalysisCustomValuesConfigurationArgs{...}
type AnalysisCustomValuesConfigurationInput interface {
	pulumi.Input

	ToAnalysisCustomValuesConfigurationOutput() AnalysisCustomValuesConfigurationOutput
	ToAnalysisCustomValuesConfigurationOutputWithContext(context.Context) AnalysisCustomValuesConfigurationOutput
}

type AnalysisCustomValuesConfigurationArgs struct {
	CustomValues     AnalysisCustomParameterValuesInput `pulumi:"customValues"`
	IncludeNullValue pulumi.BoolPtrInput                `pulumi:"includeNullValue"`
}

func (AnalysisCustomValuesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomValuesConfiguration)(nil)).Elem()
}

func (i AnalysisCustomValuesConfigurationArgs) ToAnalysisCustomValuesConfigurationOutput() AnalysisCustomValuesConfigurationOutput {
	return i.ToAnalysisCustomValuesConfigurationOutputWithContext(context.Background())
}

func (i AnalysisCustomValuesConfigurationArgs) ToAnalysisCustomValuesConfigurationOutputWithContext(ctx context.Context) AnalysisCustomValuesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomValuesConfigurationOutput)
}

func (i AnalysisCustomValuesConfigurationArgs) ToAnalysisCustomValuesConfigurationPtrOutput() AnalysisCustomValuesConfigurationPtrOutput {
	return i.ToAnalysisCustomValuesConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisCustomValuesConfigurationArgs) ToAnalysisCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomValuesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomValuesConfigurationOutput).ToAnalysisCustomValuesConfigurationPtrOutputWithContext(ctx)
}

// AnalysisCustomValuesConfigurationPtrInput is an input type that accepts AnalysisCustomValuesConfigurationArgs, AnalysisCustomValuesConfigurationPtr and AnalysisCustomValuesConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisCustomValuesConfigurationPtrInput` via:
//
//	        AnalysisCustomValuesConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisCustomValuesConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisCustomValuesConfigurationPtrOutput() AnalysisCustomValuesConfigurationPtrOutput
	ToAnalysisCustomValuesConfigurationPtrOutputWithContext(context.Context) AnalysisCustomValuesConfigurationPtrOutput
}

type analysisCustomValuesConfigurationPtrType AnalysisCustomValuesConfigurationArgs

func AnalysisCustomValuesConfigurationPtr(v *AnalysisCustomValuesConfigurationArgs) AnalysisCustomValuesConfigurationPtrInput {
	return (*analysisCustomValuesConfigurationPtrType)(v)
}

func (*analysisCustomValuesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomValuesConfiguration)(nil)).Elem()
}

func (i *analysisCustomValuesConfigurationPtrType) ToAnalysisCustomValuesConfigurationPtrOutput() AnalysisCustomValuesConfigurationPtrOutput {
	return i.ToAnalysisCustomValuesConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisCustomValuesConfigurationPtrType) ToAnalysisCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomValuesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisCustomValuesConfigurationPtrOutput)
}

type AnalysisCustomValuesConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisCustomValuesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomValuesConfiguration)(nil)).Elem()
}

func (o AnalysisCustomValuesConfigurationOutput) ToAnalysisCustomValuesConfigurationOutput() AnalysisCustomValuesConfigurationOutput {
	return o
}

func (o AnalysisCustomValuesConfigurationOutput) ToAnalysisCustomValuesConfigurationOutputWithContext(ctx context.Context) AnalysisCustomValuesConfigurationOutput {
	return o
}

func (o AnalysisCustomValuesConfigurationOutput) ToAnalysisCustomValuesConfigurationPtrOutput() AnalysisCustomValuesConfigurationPtrOutput {
	return o.ToAnalysisCustomValuesConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomValuesConfigurationOutput) ToAnalysisCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomValuesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomValuesConfiguration) *AnalysisCustomValuesConfiguration {
		return &v
	}).(AnalysisCustomValuesConfigurationPtrOutput)
}

func (o AnalysisCustomValuesConfigurationOutput) CustomValues() AnalysisCustomParameterValuesOutput {
	return o.ApplyT(func(v AnalysisCustomValuesConfiguration) AnalysisCustomParameterValues { return v.CustomValues }).(AnalysisCustomParameterValuesOutput)
}

func (o AnalysisCustomValuesConfigurationOutput) IncludeNullValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AnalysisCustomValuesConfiguration) *bool { return v.IncludeNullValue }).(pulumi.BoolPtrOutput)
}

type AnalysisCustomValuesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomValuesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomValuesConfiguration)(nil)).Elem()
}

func (o AnalysisCustomValuesConfigurationPtrOutput) ToAnalysisCustomValuesConfigurationPtrOutput() AnalysisCustomValuesConfigurationPtrOutput {
	return o
}

func (o AnalysisCustomValuesConfigurationPtrOutput) ToAnalysisCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomValuesConfigurationPtrOutput {
	return o
}

func (o AnalysisCustomValuesConfigurationPtrOutput) Elem() AnalysisCustomValuesConfigurationOutput {
	return o.ApplyT(func(v *AnalysisCustomValuesConfiguration) AnalysisCustomValuesConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomValuesConfiguration
		return ret
	}).(AnalysisCustomValuesConfigurationOutput)
}

func (o AnalysisCustomValuesConfigurationPtrOutput) CustomValues() AnalysisCustomParameterValuesPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomValuesConfiguration) *AnalysisCustomParameterValues {
		if v == nil {
			return nil
		}
		return &v.CustomValues
	}).(AnalysisCustomParameterValuesPtrOutput)
}

func (o AnalysisCustomValuesConfigurationPtrOutput) IncludeNullValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AnalysisCustomValuesConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeNullValue
	}).(pulumi.BoolPtrOutput)
}

type AnalysisDataBarsOptions struct {
	FieldId       string  `pulumi:"fieldId"`
	NegativeColor *string `pulumi:"negativeColor"`
	PositiveColor *string `pulumi:"positiveColor"`
}

// AnalysisDataBarsOptionsInput is an input type that accepts AnalysisDataBarsOptionsArgs and AnalysisDataBarsOptionsOutput values.
// You can construct a concrete instance of `AnalysisDataBarsOptionsInput` via:
//
//	AnalysisDataBarsOptionsArgs{...}
type AnalysisDataBarsOptionsInput interface {
	pulumi.Input

	ToAnalysisDataBarsOptionsOutput() AnalysisDataBarsOptionsOutput
	ToAnalysisDataBarsOptionsOutputWithContext(context.Context) AnalysisDataBarsOptionsOutput
}

type AnalysisDataBarsOptionsArgs struct {
	FieldId       pulumi.StringInput    `pulumi:"fieldId"`
	NegativeColor pulumi.StringPtrInput `pulumi:"negativeColor"`
	PositiveColor pulumi.StringPtrInput `pulumi:"positiveColor"`
}

func (AnalysisDataBarsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataBarsOptions)(nil)).Elem()
}

func (i AnalysisDataBarsOptionsArgs) ToAnalysisDataBarsOptionsOutput() AnalysisDataBarsOptionsOutput {
	return i.ToAnalysisDataBarsOptionsOutputWithContext(context.Background())
}

func (i AnalysisDataBarsOptionsArgs) ToAnalysisDataBarsOptionsOutputWithContext(ctx context.Context) AnalysisDataBarsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataBarsOptionsOutput)
}

func (i AnalysisDataBarsOptionsArgs) ToAnalysisDataBarsOptionsPtrOutput() AnalysisDataBarsOptionsPtrOutput {
	return i.ToAnalysisDataBarsOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisDataBarsOptionsArgs) ToAnalysisDataBarsOptionsPtrOutputWithContext(ctx context.Context) AnalysisDataBarsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataBarsOptionsOutput).ToAnalysisDataBarsOptionsPtrOutputWithContext(ctx)
}

// AnalysisDataBarsOptionsPtrInput is an input type that accepts AnalysisDataBarsOptionsArgs, AnalysisDataBarsOptionsPtr and AnalysisDataBarsOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisDataBarsOptionsPtrInput` via:
//
//	        AnalysisDataBarsOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisDataBarsOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisDataBarsOptionsPtrOutput() AnalysisDataBarsOptionsPtrOutput
	ToAnalysisDataBarsOptionsPtrOutputWithContext(context.Context) AnalysisDataBarsOptionsPtrOutput
}

type analysisDataBarsOptionsPtrType AnalysisDataBarsOptionsArgs

func AnalysisDataBarsOptionsPtr(v *AnalysisDataBarsOptionsArgs) AnalysisDataBarsOptionsPtrInput {
	return (*analysisDataBarsOptionsPtrType)(v)
}

func (*analysisDataBarsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataBarsOptions)(nil)).Elem()
}

func (i *analysisDataBarsOptionsPtrType) ToAnalysisDataBarsOptionsPtrOutput() AnalysisDataBarsOptionsPtrOutput {
	return i.ToAnalysisDataBarsOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisDataBarsOptionsPtrType) ToAnalysisDataBarsOptionsPtrOutputWithContext(ctx context.Context) AnalysisDataBarsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataBarsOptionsPtrOutput)
}

type AnalysisDataBarsOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisDataBarsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataBarsOptions)(nil)).Elem()
}

func (o AnalysisDataBarsOptionsOutput) ToAnalysisDataBarsOptionsOutput() AnalysisDataBarsOptionsOutput {
	return o
}

func (o AnalysisDataBarsOptionsOutput) ToAnalysisDataBarsOptionsOutputWithContext(ctx context.Context) AnalysisDataBarsOptionsOutput {
	return o
}

func (o AnalysisDataBarsOptionsOutput) ToAnalysisDataBarsOptionsPtrOutput() AnalysisDataBarsOptionsPtrOutput {
	return o.ToAnalysisDataBarsOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisDataBarsOptionsOutput) ToAnalysisDataBarsOptionsPtrOutputWithContext(ctx context.Context) AnalysisDataBarsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDataBarsOptions) *AnalysisDataBarsOptions {
		return &v
	}).(AnalysisDataBarsOptionsPtrOutput)
}

func (o AnalysisDataBarsOptionsOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataBarsOptions) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisDataBarsOptionsOutput) NegativeColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDataBarsOptions) *string { return v.NegativeColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisDataBarsOptionsOutput) PositiveColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDataBarsOptions) *string { return v.PositiveColor }).(pulumi.StringPtrOutput)
}

type AnalysisDataBarsOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDataBarsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataBarsOptions)(nil)).Elem()
}

func (o AnalysisDataBarsOptionsPtrOutput) ToAnalysisDataBarsOptionsPtrOutput() AnalysisDataBarsOptionsPtrOutput {
	return o
}

func (o AnalysisDataBarsOptionsPtrOutput) ToAnalysisDataBarsOptionsPtrOutputWithContext(ctx context.Context) AnalysisDataBarsOptionsPtrOutput {
	return o
}

func (o AnalysisDataBarsOptionsPtrOutput) Elem() AnalysisDataBarsOptionsOutput {
	return o.ApplyT(func(v *AnalysisDataBarsOptions) AnalysisDataBarsOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisDataBarsOptions
		return ret
	}).(AnalysisDataBarsOptionsOutput)
}

func (o AnalysisDataBarsOptionsPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDataBarsOptions) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDataBarsOptionsPtrOutput) NegativeColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDataBarsOptions) *string {
		if v == nil {
			return nil
		}
		return v.NegativeColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDataBarsOptionsPtrOutput) PositiveColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDataBarsOptions) *string {
		if v == nil {
			return nil
		}
		return v.PositiveColor
	}).(pulumi.StringPtrOutput)
}

type AnalysisDataColor struct {
	Color     *string  `pulumi:"color"`
	DataValue *float64 `pulumi:"dataValue"`
}

// AnalysisDataColorInput is an input type that accepts AnalysisDataColorArgs and AnalysisDataColorOutput values.
// You can construct a concrete instance of `AnalysisDataColorInput` via:
//
//	AnalysisDataColorArgs{...}
type AnalysisDataColorInput interface {
	pulumi.Input

	ToAnalysisDataColorOutput() AnalysisDataColorOutput
	ToAnalysisDataColorOutputWithContext(context.Context) AnalysisDataColorOutput
}

type AnalysisDataColorArgs struct {
	Color     pulumi.StringPtrInput  `pulumi:"color"`
	DataValue pulumi.Float64PtrInput `pulumi:"dataValue"`
}

func (AnalysisDataColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataColor)(nil)).Elem()
}

func (i AnalysisDataColorArgs) ToAnalysisDataColorOutput() AnalysisDataColorOutput {
	return i.ToAnalysisDataColorOutputWithContext(context.Background())
}

func (i AnalysisDataColorArgs) ToAnalysisDataColorOutputWithContext(ctx context.Context) AnalysisDataColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataColorOutput)
}

func (i AnalysisDataColorArgs) ToAnalysisDataColorPtrOutput() AnalysisDataColorPtrOutput {
	return i.ToAnalysisDataColorPtrOutputWithContext(context.Background())
}

func (i AnalysisDataColorArgs) ToAnalysisDataColorPtrOutputWithContext(ctx context.Context) AnalysisDataColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataColorOutput).ToAnalysisDataColorPtrOutputWithContext(ctx)
}

// AnalysisDataColorPtrInput is an input type that accepts AnalysisDataColorArgs, AnalysisDataColorPtr and AnalysisDataColorPtrOutput values.
// You can construct a concrete instance of `AnalysisDataColorPtrInput` via:
//
//	        AnalysisDataColorArgs{...}
//
//	or:
//
//	        nil
type AnalysisDataColorPtrInput interface {
	pulumi.Input

	ToAnalysisDataColorPtrOutput() AnalysisDataColorPtrOutput
	ToAnalysisDataColorPtrOutputWithContext(context.Context) AnalysisDataColorPtrOutput
}

type analysisDataColorPtrType AnalysisDataColorArgs

func AnalysisDataColorPtr(v *AnalysisDataColorArgs) AnalysisDataColorPtrInput {
	return (*analysisDataColorPtrType)(v)
}

func (*analysisDataColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataColor)(nil)).Elem()
}

func (i *analysisDataColorPtrType) ToAnalysisDataColorPtrOutput() AnalysisDataColorPtrOutput {
	return i.ToAnalysisDataColorPtrOutputWithContext(context.Background())
}

func (i *analysisDataColorPtrType) ToAnalysisDataColorPtrOutputWithContext(ctx context.Context) AnalysisDataColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataColorPtrOutput)
}

// AnalysisDataColorArrayInput is an input type that accepts AnalysisDataColorArray and AnalysisDataColorArrayOutput values.
// You can construct a concrete instance of `AnalysisDataColorArrayInput` via:
//
//	AnalysisDataColorArray{ AnalysisDataColorArgs{...} }
type AnalysisDataColorArrayInput interface {
	pulumi.Input

	ToAnalysisDataColorArrayOutput() AnalysisDataColorArrayOutput
	ToAnalysisDataColorArrayOutputWithContext(context.Context) AnalysisDataColorArrayOutput
}

type AnalysisDataColorArray []AnalysisDataColorInput

func (AnalysisDataColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataColor)(nil)).Elem()
}

func (i AnalysisDataColorArray) ToAnalysisDataColorArrayOutput() AnalysisDataColorArrayOutput {
	return i.ToAnalysisDataColorArrayOutputWithContext(context.Background())
}

func (i AnalysisDataColorArray) ToAnalysisDataColorArrayOutputWithContext(ctx context.Context) AnalysisDataColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataColorArrayOutput)
}

type AnalysisDataColorOutput struct{ *pulumi.OutputState }

func (AnalysisDataColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataColor)(nil)).Elem()
}

func (o AnalysisDataColorOutput) ToAnalysisDataColorOutput() AnalysisDataColorOutput {
	return o
}

func (o AnalysisDataColorOutput) ToAnalysisDataColorOutputWithContext(ctx context.Context) AnalysisDataColorOutput {
	return o
}

func (o AnalysisDataColorOutput) ToAnalysisDataColorPtrOutput() AnalysisDataColorPtrOutput {
	return o.ToAnalysisDataColorPtrOutputWithContext(context.Background())
}

func (o AnalysisDataColorOutput) ToAnalysisDataColorPtrOutputWithContext(ctx context.Context) AnalysisDataColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDataColor) *AnalysisDataColor {
		return &v
	}).(AnalysisDataColorPtrOutput)
}

func (o AnalysisDataColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDataColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o AnalysisDataColorOutput) DataValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisDataColor) *float64 { return v.DataValue }).(pulumi.Float64PtrOutput)
}

type AnalysisDataColorPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDataColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataColor)(nil)).Elem()
}

func (o AnalysisDataColorPtrOutput) ToAnalysisDataColorPtrOutput() AnalysisDataColorPtrOutput {
	return o
}

func (o AnalysisDataColorPtrOutput) ToAnalysisDataColorPtrOutputWithContext(ctx context.Context) AnalysisDataColorPtrOutput {
	return o
}

func (o AnalysisDataColorPtrOutput) Elem() AnalysisDataColorOutput {
	return o.ApplyT(func(v *AnalysisDataColor) AnalysisDataColor {
		if v != nil {
			return *v
		}
		var ret AnalysisDataColor
		return ret
	}).(AnalysisDataColorOutput)
}

func (o AnalysisDataColorPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDataColor) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDataColorPtrOutput) DataValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisDataColor) *float64 {
		if v == nil {
			return nil
		}
		return v.DataValue
	}).(pulumi.Float64PtrOutput)
}

type AnalysisDataColorArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDataColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataColor)(nil)).Elem()
}

func (o AnalysisDataColorArrayOutput) ToAnalysisDataColorArrayOutput() AnalysisDataColorArrayOutput {
	return o
}

func (o AnalysisDataColorArrayOutput) ToAnalysisDataColorArrayOutputWithContext(ctx context.Context) AnalysisDataColorArrayOutput {
	return o
}

func (o AnalysisDataColorArrayOutput) Index(i pulumi.IntInput) AnalysisDataColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDataColor {
		return vs[0].([]AnalysisDataColor)[vs[1].(int)]
	}).(AnalysisDataColorOutput)
}

type AnalysisDataFieldSeriesItem struct {
	AxisBinding AnalysisAxisBinding              `pulumi:"axisBinding"`
	FieldId     string                           `pulumi:"fieldId"`
	FieldValue  *string                          `pulumi:"fieldValue"`
	Settings    *AnalysisLineChartSeriesSettings `pulumi:"settings"`
}

// AnalysisDataFieldSeriesItemInput is an input type that accepts AnalysisDataFieldSeriesItemArgs and AnalysisDataFieldSeriesItemOutput values.
// You can construct a concrete instance of `AnalysisDataFieldSeriesItemInput` via:
//
//	AnalysisDataFieldSeriesItemArgs{...}
type AnalysisDataFieldSeriesItemInput interface {
	pulumi.Input

	ToAnalysisDataFieldSeriesItemOutput() AnalysisDataFieldSeriesItemOutput
	ToAnalysisDataFieldSeriesItemOutputWithContext(context.Context) AnalysisDataFieldSeriesItemOutput
}

type AnalysisDataFieldSeriesItemArgs struct {
	AxisBinding AnalysisAxisBindingInput                `pulumi:"axisBinding"`
	FieldId     pulumi.StringInput                      `pulumi:"fieldId"`
	FieldValue  pulumi.StringPtrInput                   `pulumi:"fieldValue"`
	Settings    AnalysisLineChartSeriesSettingsPtrInput `pulumi:"settings"`
}

func (AnalysisDataFieldSeriesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataFieldSeriesItem)(nil)).Elem()
}

func (i AnalysisDataFieldSeriesItemArgs) ToAnalysisDataFieldSeriesItemOutput() AnalysisDataFieldSeriesItemOutput {
	return i.ToAnalysisDataFieldSeriesItemOutputWithContext(context.Background())
}

func (i AnalysisDataFieldSeriesItemArgs) ToAnalysisDataFieldSeriesItemOutputWithContext(ctx context.Context) AnalysisDataFieldSeriesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataFieldSeriesItemOutput)
}

func (i AnalysisDataFieldSeriesItemArgs) ToAnalysisDataFieldSeriesItemPtrOutput() AnalysisDataFieldSeriesItemPtrOutput {
	return i.ToAnalysisDataFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i AnalysisDataFieldSeriesItemArgs) ToAnalysisDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) AnalysisDataFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataFieldSeriesItemOutput).ToAnalysisDataFieldSeriesItemPtrOutputWithContext(ctx)
}

// AnalysisDataFieldSeriesItemPtrInput is an input type that accepts AnalysisDataFieldSeriesItemArgs, AnalysisDataFieldSeriesItemPtr and AnalysisDataFieldSeriesItemPtrOutput values.
// You can construct a concrete instance of `AnalysisDataFieldSeriesItemPtrInput` via:
//
//	        AnalysisDataFieldSeriesItemArgs{...}
//
//	or:
//
//	        nil
type AnalysisDataFieldSeriesItemPtrInput interface {
	pulumi.Input

	ToAnalysisDataFieldSeriesItemPtrOutput() AnalysisDataFieldSeriesItemPtrOutput
	ToAnalysisDataFieldSeriesItemPtrOutputWithContext(context.Context) AnalysisDataFieldSeriesItemPtrOutput
}

type analysisDataFieldSeriesItemPtrType AnalysisDataFieldSeriesItemArgs

func AnalysisDataFieldSeriesItemPtr(v *AnalysisDataFieldSeriesItemArgs) AnalysisDataFieldSeriesItemPtrInput {
	return (*analysisDataFieldSeriesItemPtrType)(v)
}

func (*analysisDataFieldSeriesItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataFieldSeriesItem)(nil)).Elem()
}

func (i *analysisDataFieldSeriesItemPtrType) ToAnalysisDataFieldSeriesItemPtrOutput() AnalysisDataFieldSeriesItemPtrOutput {
	return i.ToAnalysisDataFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i *analysisDataFieldSeriesItemPtrType) ToAnalysisDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) AnalysisDataFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataFieldSeriesItemPtrOutput)
}

type AnalysisDataFieldSeriesItemOutput struct{ *pulumi.OutputState }

func (AnalysisDataFieldSeriesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataFieldSeriesItem)(nil)).Elem()
}

func (o AnalysisDataFieldSeriesItemOutput) ToAnalysisDataFieldSeriesItemOutput() AnalysisDataFieldSeriesItemOutput {
	return o
}

func (o AnalysisDataFieldSeriesItemOutput) ToAnalysisDataFieldSeriesItemOutputWithContext(ctx context.Context) AnalysisDataFieldSeriesItemOutput {
	return o
}

func (o AnalysisDataFieldSeriesItemOutput) ToAnalysisDataFieldSeriesItemPtrOutput() AnalysisDataFieldSeriesItemPtrOutput {
	return o.ToAnalysisDataFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (o AnalysisDataFieldSeriesItemOutput) ToAnalysisDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) AnalysisDataFieldSeriesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDataFieldSeriesItem) *AnalysisDataFieldSeriesItem {
		return &v
	}).(AnalysisDataFieldSeriesItemPtrOutput)
}

func (o AnalysisDataFieldSeriesItemOutput) AxisBinding() AnalysisAxisBindingOutput {
	return o.ApplyT(func(v AnalysisDataFieldSeriesItem) AnalysisAxisBinding { return v.AxisBinding }).(AnalysisAxisBindingOutput)
}

func (o AnalysisDataFieldSeriesItemOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataFieldSeriesItem) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisDataFieldSeriesItemOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDataFieldSeriesItem) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

func (o AnalysisDataFieldSeriesItemOutput) Settings() AnalysisLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v AnalysisDataFieldSeriesItem) *AnalysisLineChartSeriesSettings { return v.Settings }).(AnalysisLineChartSeriesSettingsPtrOutput)
}

type AnalysisDataFieldSeriesItemPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDataFieldSeriesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataFieldSeriesItem)(nil)).Elem()
}

func (o AnalysisDataFieldSeriesItemPtrOutput) ToAnalysisDataFieldSeriesItemPtrOutput() AnalysisDataFieldSeriesItemPtrOutput {
	return o
}

func (o AnalysisDataFieldSeriesItemPtrOutput) ToAnalysisDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) AnalysisDataFieldSeriesItemPtrOutput {
	return o
}

func (o AnalysisDataFieldSeriesItemPtrOutput) Elem() AnalysisDataFieldSeriesItemOutput {
	return o.ApplyT(func(v *AnalysisDataFieldSeriesItem) AnalysisDataFieldSeriesItem {
		if v != nil {
			return *v
		}
		var ret AnalysisDataFieldSeriesItem
		return ret
	}).(AnalysisDataFieldSeriesItemOutput)
}

func (o AnalysisDataFieldSeriesItemPtrOutput) AxisBinding() AnalysisAxisBindingPtrOutput {
	return o.ApplyT(func(v *AnalysisDataFieldSeriesItem) *AnalysisAxisBinding {
		if v == nil {
			return nil
		}
		return &v.AxisBinding
	}).(AnalysisAxisBindingPtrOutput)
}

func (o AnalysisDataFieldSeriesItemPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDataFieldSeriesItem) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDataFieldSeriesItemPtrOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDataFieldSeriesItem) *string {
		if v == nil {
			return nil
		}
		return v.FieldValue
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDataFieldSeriesItemPtrOutput) Settings() AnalysisLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *AnalysisDataFieldSeriesItem) *AnalysisLineChartSeriesSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(AnalysisLineChartSeriesSettingsPtrOutput)
}

type AnalysisDataLabelOptions struct {
	CategoryLabelVisibility *AnalysisVisibility        `pulumi:"categoryLabelVisibility"`
	DataLabelTypes          []AnalysisDataLabelType    `pulumi:"dataLabelTypes"`
	LabelColor              *string                    `pulumi:"labelColor"`
	LabelContent            *AnalysisDataLabelContent  `pulumi:"labelContent"`
	LabelFontConfiguration  *AnalysisFontConfiguration `pulumi:"labelFontConfiguration"`
	MeasureLabelVisibility  *AnalysisVisibility        `pulumi:"measureLabelVisibility"`
	Overlap                 *AnalysisDataLabelOverlap  `pulumi:"overlap"`
	Position                *AnalysisDataLabelPosition `pulumi:"position"`
	Visibility              *AnalysisVisibility        `pulumi:"visibility"`
}

// AnalysisDataLabelOptionsInput is an input type that accepts AnalysisDataLabelOptionsArgs and AnalysisDataLabelOptionsOutput values.
// You can construct a concrete instance of `AnalysisDataLabelOptionsInput` via:
//
//	AnalysisDataLabelOptionsArgs{...}
type AnalysisDataLabelOptionsInput interface {
	pulumi.Input

	ToAnalysisDataLabelOptionsOutput() AnalysisDataLabelOptionsOutput
	ToAnalysisDataLabelOptionsOutputWithContext(context.Context) AnalysisDataLabelOptionsOutput
}

type AnalysisDataLabelOptionsArgs struct {
	CategoryLabelVisibility AnalysisVisibilityPtrInput        `pulumi:"categoryLabelVisibility"`
	DataLabelTypes          AnalysisDataLabelTypeArrayInput   `pulumi:"dataLabelTypes"`
	LabelColor              pulumi.StringPtrInput             `pulumi:"labelColor"`
	LabelContent            AnalysisDataLabelContentPtrInput  `pulumi:"labelContent"`
	LabelFontConfiguration  AnalysisFontConfigurationPtrInput `pulumi:"labelFontConfiguration"`
	MeasureLabelVisibility  AnalysisVisibilityPtrInput        `pulumi:"measureLabelVisibility"`
	Overlap                 AnalysisDataLabelOverlapPtrInput  `pulumi:"overlap"`
	Position                AnalysisDataLabelPositionPtrInput `pulumi:"position"`
	Visibility              AnalysisVisibilityPtrInput        `pulumi:"visibility"`
}

func (AnalysisDataLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataLabelOptions)(nil)).Elem()
}

func (i AnalysisDataLabelOptionsArgs) ToAnalysisDataLabelOptionsOutput() AnalysisDataLabelOptionsOutput {
	return i.ToAnalysisDataLabelOptionsOutputWithContext(context.Background())
}

func (i AnalysisDataLabelOptionsArgs) ToAnalysisDataLabelOptionsOutputWithContext(ctx context.Context) AnalysisDataLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataLabelOptionsOutput)
}

func (i AnalysisDataLabelOptionsArgs) ToAnalysisDataLabelOptionsPtrOutput() AnalysisDataLabelOptionsPtrOutput {
	return i.ToAnalysisDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisDataLabelOptionsArgs) ToAnalysisDataLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataLabelOptionsOutput).ToAnalysisDataLabelOptionsPtrOutputWithContext(ctx)
}

// AnalysisDataLabelOptionsPtrInput is an input type that accepts AnalysisDataLabelOptionsArgs, AnalysisDataLabelOptionsPtr and AnalysisDataLabelOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisDataLabelOptionsPtrInput` via:
//
//	        AnalysisDataLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisDataLabelOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisDataLabelOptionsPtrOutput() AnalysisDataLabelOptionsPtrOutput
	ToAnalysisDataLabelOptionsPtrOutputWithContext(context.Context) AnalysisDataLabelOptionsPtrOutput
}

type analysisDataLabelOptionsPtrType AnalysisDataLabelOptionsArgs

func AnalysisDataLabelOptionsPtr(v *AnalysisDataLabelOptionsArgs) AnalysisDataLabelOptionsPtrInput {
	return (*analysisDataLabelOptionsPtrType)(v)
}

func (*analysisDataLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataLabelOptions)(nil)).Elem()
}

func (i *analysisDataLabelOptionsPtrType) ToAnalysisDataLabelOptionsPtrOutput() AnalysisDataLabelOptionsPtrOutput {
	return i.ToAnalysisDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisDataLabelOptionsPtrType) ToAnalysisDataLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataLabelOptionsPtrOutput)
}

type AnalysisDataLabelOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisDataLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataLabelOptions)(nil)).Elem()
}

func (o AnalysisDataLabelOptionsOutput) ToAnalysisDataLabelOptionsOutput() AnalysisDataLabelOptionsOutput {
	return o
}

func (o AnalysisDataLabelOptionsOutput) ToAnalysisDataLabelOptionsOutputWithContext(ctx context.Context) AnalysisDataLabelOptionsOutput {
	return o
}

func (o AnalysisDataLabelOptionsOutput) ToAnalysisDataLabelOptionsPtrOutput() AnalysisDataLabelOptionsPtrOutput {
	return o.ToAnalysisDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisDataLabelOptionsOutput) ToAnalysisDataLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDataLabelOptions) *AnalysisDataLabelOptions {
		return &v
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisDataLabelOptionsOutput) CategoryLabelVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelOptions) *AnalysisVisibility { return v.CategoryLabelVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisDataLabelOptionsOutput) DataLabelTypes() AnalysisDataLabelTypeArrayOutput {
	return o.ApplyT(func(v AnalysisDataLabelOptions) []AnalysisDataLabelType { return v.DataLabelTypes }).(AnalysisDataLabelTypeArrayOutput)
}

func (o AnalysisDataLabelOptionsOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelOptions) *string { return v.LabelColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisDataLabelOptionsOutput) LabelContent() AnalysisDataLabelContentPtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelOptions) *AnalysisDataLabelContent { return v.LabelContent }).(AnalysisDataLabelContentPtrOutput)
}

func (o AnalysisDataLabelOptionsOutput) LabelFontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelOptions) *AnalysisFontConfiguration { return v.LabelFontConfiguration }).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisDataLabelOptionsOutput) MeasureLabelVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelOptions) *AnalysisVisibility { return v.MeasureLabelVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisDataLabelOptionsOutput) Overlap() AnalysisDataLabelOverlapPtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelOptions) *AnalysisDataLabelOverlap { return v.Overlap }).(AnalysisDataLabelOverlapPtrOutput)
}

func (o AnalysisDataLabelOptionsOutput) Position() AnalysisDataLabelPositionPtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelOptions) *AnalysisDataLabelPosition { return v.Position }).(AnalysisDataLabelPositionPtrOutput)
}

func (o AnalysisDataLabelOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisDataLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDataLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataLabelOptions)(nil)).Elem()
}

func (o AnalysisDataLabelOptionsPtrOutput) ToAnalysisDataLabelOptionsPtrOutput() AnalysisDataLabelOptionsPtrOutput {
	return o
}

func (o AnalysisDataLabelOptionsPtrOutput) ToAnalysisDataLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisDataLabelOptionsPtrOutput {
	return o
}

func (o AnalysisDataLabelOptionsPtrOutput) Elem() AnalysisDataLabelOptionsOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOptions) AnalysisDataLabelOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisDataLabelOptions
		return ret
	}).(AnalysisDataLabelOptionsOutput)
}

func (o AnalysisDataLabelOptionsPtrOutput) CategoryLabelVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.CategoryLabelVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisDataLabelOptionsPtrOutput) DataLabelTypes() AnalysisDataLabelTypeArrayOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOptions) []AnalysisDataLabelType {
		if v == nil {
			return nil
		}
		return v.DataLabelTypes
	}).(AnalysisDataLabelTypeArrayOutput)
}

func (o AnalysisDataLabelOptionsPtrOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.LabelColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDataLabelOptionsPtrOutput) LabelContent() AnalysisDataLabelContentPtrOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOptions) *AnalysisDataLabelContent {
		if v == nil {
			return nil
		}
		return v.LabelContent
	}).(AnalysisDataLabelContentPtrOutput)
}

func (o AnalysisDataLabelOptionsPtrOutput) LabelFontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOptions) *AnalysisFontConfiguration {
		if v == nil {
			return nil
		}
		return v.LabelFontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisDataLabelOptionsPtrOutput) MeasureLabelVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.MeasureLabelVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisDataLabelOptionsPtrOutput) Overlap() AnalysisDataLabelOverlapPtrOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOptions) *AnalysisDataLabelOverlap {
		if v == nil {
			return nil
		}
		return v.Overlap
	}).(AnalysisDataLabelOverlapPtrOutput)
}

func (o AnalysisDataLabelOptionsPtrOutput) Position() AnalysisDataLabelPositionPtrOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOptions) *AnalysisDataLabelPosition {
		if v == nil {
			return nil
		}
		return v.Position
	}).(AnalysisDataLabelPositionPtrOutput)
}

func (o AnalysisDataLabelOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisDataLabelType struct {
	DataPathLabelType  *AnalysisDataPathLabelType  `pulumi:"dataPathLabelType"`
	FieldLabelType     *AnalysisFieldLabelType     `pulumi:"fieldLabelType"`
	MaximumLabelType   *AnalysisMaximumLabelType   `pulumi:"maximumLabelType"`
	MinimumLabelType   *AnalysisMinimumLabelType   `pulumi:"minimumLabelType"`
	RangeEndsLabelType *AnalysisRangeEndsLabelType `pulumi:"rangeEndsLabelType"`
}

// AnalysisDataLabelTypeInput is an input type that accepts AnalysisDataLabelTypeArgs and AnalysisDataLabelTypeOutput values.
// You can construct a concrete instance of `AnalysisDataLabelTypeInput` via:
//
//	AnalysisDataLabelTypeArgs{...}
type AnalysisDataLabelTypeInput interface {
	pulumi.Input

	ToAnalysisDataLabelTypeOutput() AnalysisDataLabelTypeOutput
	ToAnalysisDataLabelTypeOutputWithContext(context.Context) AnalysisDataLabelTypeOutput
}

type AnalysisDataLabelTypeArgs struct {
	DataPathLabelType  AnalysisDataPathLabelTypePtrInput  `pulumi:"dataPathLabelType"`
	FieldLabelType     AnalysisFieldLabelTypePtrInput     `pulumi:"fieldLabelType"`
	MaximumLabelType   AnalysisMaximumLabelTypePtrInput   `pulumi:"maximumLabelType"`
	MinimumLabelType   AnalysisMinimumLabelTypePtrInput   `pulumi:"minimumLabelType"`
	RangeEndsLabelType AnalysisRangeEndsLabelTypePtrInput `pulumi:"rangeEndsLabelType"`
}

func (AnalysisDataLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataLabelType)(nil)).Elem()
}

func (i AnalysisDataLabelTypeArgs) ToAnalysisDataLabelTypeOutput() AnalysisDataLabelTypeOutput {
	return i.ToAnalysisDataLabelTypeOutputWithContext(context.Background())
}

func (i AnalysisDataLabelTypeArgs) ToAnalysisDataLabelTypeOutputWithContext(ctx context.Context) AnalysisDataLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataLabelTypeOutput)
}

// AnalysisDataLabelTypeArrayInput is an input type that accepts AnalysisDataLabelTypeArray and AnalysisDataLabelTypeArrayOutput values.
// You can construct a concrete instance of `AnalysisDataLabelTypeArrayInput` via:
//
//	AnalysisDataLabelTypeArray{ AnalysisDataLabelTypeArgs{...} }
type AnalysisDataLabelTypeArrayInput interface {
	pulumi.Input

	ToAnalysisDataLabelTypeArrayOutput() AnalysisDataLabelTypeArrayOutput
	ToAnalysisDataLabelTypeArrayOutputWithContext(context.Context) AnalysisDataLabelTypeArrayOutput
}

type AnalysisDataLabelTypeArray []AnalysisDataLabelTypeInput

func (AnalysisDataLabelTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataLabelType)(nil)).Elem()
}

func (i AnalysisDataLabelTypeArray) ToAnalysisDataLabelTypeArrayOutput() AnalysisDataLabelTypeArrayOutput {
	return i.ToAnalysisDataLabelTypeArrayOutputWithContext(context.Background())
}

func (i AnalysisDataLabelTypeArray) ToAnalysisDataLabelTypeArrayOutputWithContext(ctx context.Context) AnalysisDataLabelTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataLabelTypeArrayOutput)
}

type AnalysisDataLabelTypeOutput struct{ *pulumi.OutputState }

func (AnalysisDataLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataLabelType)(nil)).Elem()
}

func (o AnalysisDataLabelTypeOutput) ToAnalysisDataLabelTypeOutput() AnalysisDataLabelTypeOutput {
	return o
}

func (o AnalysisDataLabelTypeOutput) ToAnalysisDataLabelTypeOutputWithContext(ctx context.Context) AnalysisDataLabelTypeOutput {
	return o
}

func (o AnalysisDataLabelTypeOutput) DataPathLabelType() AnalysisDataPathLabelTypePtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelType) *AnalysisDataPathLabelType { return v.DataPathLabelType }).(AnalysisDataPathLabelTypePtrOutput)
}

func (o AnalysisDataLabelTypeOutput) FieldLabelType() AnalysisFieldLabelTypePtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelType) *AnalysisFieldLabelType { return v.FieldLabelType }).(AnalysisFieldLabelTypePtrOutput)
}

func (o AnalysisDataLabelTypeOutput) MaximumLabelType() AnalysisMaximumLabelTypePtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelType) *AnalysisMaximumLabelType { return v.MaximumLabelType }).(AnalysisMaximumLabelTypePtrOutput)
}

func (o AnalysisDataLabelTypeOutput) MinimumLabelType() AnalysisMinimumLabelTypePtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelType) *AnalysisMinimumLabelType { return v.MinimumLabelType }).(AnalysisMinimumLabelTypePtrOutput)
}

func (o AnalysisDataLabelTypeOutput) RangeEndsLabelType() AnalysisRangeEndsLabelTypePtrOutput {
	return o.ApplyT(func(v AnalysisDataLabelType) *AnalysisRangeEndsLabelType { return v.RangeEndsLabelType }).(AnalysisRangeEndsLabelTypePtrOutput)
}

type AnalysisDataLabelTypeArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDataLabelTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataLabelType)(nil)).Elem()
}

func (o AnalysisDataLabelTypeArrayOutput) ToAnalysisDataLabelTypeArrayOutput() AnalysisDataLabelTypeArrayOutput {
	return o
}

func (o AnalysisDataLabelTypeArrayOutput) ToAnalysisDataLabelTypeArrayOutputWithContext(ctx context.Context) AnalysisDataLabelTypeArrayOutput {
	return o
}

func (o AnalysisDataLabelTypeArrayOutput) Index(i pulumi.IntInput) AnalysisDataLabelTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDataLabelType {
		return vs[0].([]AnalysisDataLabelType)[vs[1].(int)]
	}).(AnalysisDataLabelTypeOutput)
}

type AnalysisDataPathColor struct {
	Color           string                   `pulumi:"color"`
	Element         AnalysisDataPathValue    `pulumi:"element"`
	TimeGranularity *AnalysisTimeGranularity `pulumi:"timeGranularity"`
}

// AnalysisDataPathColorInput is an input type that accepts AnalysisDataPathColorArgs and AnalysisDataPathColorOutput values.
// You can construct a concrete instance of `AnalysisDataPathColorInput` via:
//
//	AnalysisDataPathColorArgs{...}
type AnalysisDataPathColorInput interface {
	pulumi.Input

	ToAnalysisDataPathColorOutput() AnalysisDataPathColorOutput
	ToAnalysisDataPathColorOutputWithContext(context.Context) AnalysisDataPathColorOutput
}

type AnalysisDataPathColorArgs struct {
	Color           pulumi.StringInput              `pulumi:"color"`
	Element         AnalysisDataPathValueInput      `pulumi:"element"`
	TimeGranularity AnalysisTimeGranularityPtrInput `pulumi:"timeGranularity"`
}

func (AnalysisDataPathColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataPathColor)(nil)).Elem()
}

func (i AnalysisDataPathColorArgs) ToAnalysisDataPathColorOutput() AnalysisDataPathColorOutput {
	return i.ToAnalysisDataPathColorOutputWithContext(context.Background())
}

func (i AnalysisDataPathColorArgs) ToAnalysisDataPathColorOutputWithContext(ctx context.Context) AnalysisDataPathColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataPathColorOutput)
}

// AnalysisDataPathColorArrayInput is an input type that accepts AnalysisDataPathColorArray and AnalysisDataPathColorArrayOutput values.
// You can construct a concrete instance of `AnalysisDataPathColorArrayInput` via:
//
//	AnalysisDataPathColorArray{ AnalysisDataPathColorArgs{...} }
type AnalysisDataPathColorArrayInput interface {
	pulumi.Input

	ToAnalysisDataPathColorArrayOutput() AnalysisDataPathColorArrayOutput
	ToAnalysisDataPathColorArrayOutputWithContext(context.Context) AnalysisDataPathColorArrayOutput
}

type AnalysisDataPathColorArray []AnalysisDataPathColorInput

func (AnalysisDataPathColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataPathColor)(nil)).Elem()
}

func (i AnalysisDataPathColorArray) ToAnalysisDataPathColorArrayOutput() AnalysisDataPathColorArrayOutput {
	return i.ToAnalysisDataPathColorArrayOutputWithContext(context.Background())
}

func (i AnalysisDataPathColorArray) ToAnalysisDataPathColorArrayOutputWithContext(ctx context.Context) AnalysisDataPathColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataPathColorArrayOutput)
}

type AnalysisDataPathColorOutput struct{ *pulumi.OutputState }

func (AnalysisDataPathColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataPathColor)(nil)).Elem()
}

func (o AnalysisDataPathColorOutput) ToAnalysisDataPathColorOutput() AnalysisDataPathColorOutput {
	return o
}

func (o AnalysisDataPathColorOutput) ToAnalysisDataPathColorOutputWithContext(ctx context.Context) AnalysisDataPathColorOutput {
	return o
}

func (o AnalysisDataPathColorOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataPathColor) string { return v.Color }).(pulumi.StringOutput)
}

func (o AnalysisDataPathColorOutput) Element() AnalysisDataPathValueOutput {
	return o.ApplyT(func(v AnalysisDataPathColor) AnalysisDataPathValue { return v.Element }).(AnalysisDataPathValueOutput)
}

func (o AnalysisDataPathColorOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v AnalysisDataPathColor) *AnalysisTimeGranularity { return v.TimeGranularity }).(AnalysisTimeGranularityPtrOutput)
}

type AnalysisDataPathColorArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDataPathColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataPathColor)(nil)).Elem()
}

func (o AnalysisDataPathColorArrayOutput) ToAnalysisDataPathColorArrayOutput() AnalysisDataPathColorArrayOutput {
	return o
}

func (o AnalysisDataPathColorArrayOutput) ToAnalysisDataPathColorArrayOutputWithContext(ctx context.Context) AnalysisDataPathColorArrayOutput {
	return o
}

func (o AnalysisDataPathColorArrayOutput) Index(i pulumi.IntInput) AnalysisDataPathColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDataPathColor {
		return vs[0].([]AnalysisDataPathColor)[vs[1].(int)]
	}).(AnalysisDataPathColorOutput)
}

type AnalysisDataPathLabelType struct {
	FieldId    *string             `pulumi:"fieldId"`
	FieldValue *string             `pulumi:"fieldValue"`
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisDataPathLabelTypeInput is an input type that accepts AnalysisDataPathLabelTypeArgs and AnalysisDataPathLabelTypeOutput values.
// You can construct a concrete instance of `AnalysisDataPathLabelTypeInput` via:
//
//	AnalysisDataPathLabelTypeArgs{...}
type AnalysisDataPathLabelTypeInput interface {
	pulumi.Input

	ToAnalysisDataPathLabelTypeOutput() AnalysisDataPathLabelTypeOutput
	ToAnalysisDataPathLabelTypeOutputWithContext(context.Context) AnalysisDataPathLabelTypeOutput
}

type AnalysisDataPathLabelTypeArgs struct {
	FieldId    pulumi.StringPtrInput      `pulumi:"fieldId"`
	FieldValue pulumi.StringPtrInput      `pulumi:"fieldValue"`
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisDataPathLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataPathLabelType)(nil)).Elem()
}

func (i AnalysisDataPathLabelTypeArgs) ToAnalysisDataPathLabelTypeOutput() AnalysisDataPathLabelTypeOutput {
	return i.ToAnalysisDataPathLabelTypeOutputWithContext(context.Background())
}

func (i AnalysisDataPathLabelTypeArgs) ToAnalysisDataPathLabelTypeOutputWithContext(ctx context.Context) AnalysisDataPathLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataPathLabelTypeOutput)
}

func (i AnalysisDataPathLabelTypeArgs) ToAnalysisDataPathLabelTypePtrOutput() AnalysisDataPathLabelTypePtrOutput {
	return i.ToAnalysisDataPathLabelTypePtrOutputWithContext(context.Background())
}

func (i AnalysisDataPathLabelTypeArgs) ToAnalysisDataPathLabelTypePtrOutputWithContext(ctx context.Context) AnalysisDataPathLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataPathLabelTypeOutput).ToAnalysisDataPathLabelTypePtrOutputWithContext(ctx)
}

// AnalysisDataPathLabelTypePtrInput is an input type that accepts AnalysisDataPathLabelTypeArgs, AnalysisDataPathLabelTypePtr and AnalysisDataPathLabelTypePtrOutput values.
// You can construct a concrete instance of `AnalysisDataPathLabelTypePtrInput` via:
//
//	        AnalysisDataPathLabelTypeArgs{...}
//
//	or:
//
//	        nil
type AnalysisDataPathLabelTypePtrInput interface {
	pulumi.Input

	ToAnalysisDataPathLabelTypePtrOutput() AnalysisDataPathLabelTypePtrOutput
	ToAnalysisDataPathLabelTypePtrOutputWithContext(context.Context) AnalysisDataPathLabelTypePtrOutput
}

type analysisDataPathLabelTypePtrType AnalysisDataPathLabelTypeArgs

func AnalysisDataPathLabelTypePtr(v *AnalysisDataPathLabelTypeArgs) AnalysisDataPathLabelTypePtrInput {
	return (*analysisDataPathLabelTypePtrType)(v)
}

func (*analysisDataPathLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataPathLabelType)(nil)).Elem()
}

func (i *analysisDataPathLabelTypePtrType) ToAnalysisDataPathLabelTypePtrOutput() AnalysisDataPathLabelTypePtrOutput {
	return i.ToAnalysisDataPathLabelTypePtrOutputWithContext(context.Background())
}

func (i *analysisDataPathLabelTypePtrType) ToAnalysisDataPathLabelTypePtrOutputWithContext(ctx context.Context) AnalysisDataPathLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataPathLabelTypePtrOutput)
}

type AnalysisDataPathLabelTypeOutput struct{ *pulumi.OutputState }

func (AnalysisDataPathLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataPathLabelType)(nil)).Elem()
}

func (o AnalysisDataPathLabelTypeOutput) ToAnalysisDataPathLabelTypeOutput() AnalysisDataPathLabelTypeOutput {
	return o
}

func (o AnalysisDataPathLabelTypeOutput) ToAnalysisDataPathLabelTypeOutputWithContext(ctx context.Context) AnalysisDataPathLabelTypeOutput {
	return o
}

func (o AnalysisDataPathLabelTypeOutput) ToAnalysisDataPathLabelTypePtrOutput() AnalysisDataPathLabelTypePtrOutput {
	return o.ToAnalysisDataPathLabelTypePtrOutputWithContext(context.Background())
}

func (o AnalysisDataPathLabelTypeOutput) ToAnalysisDataPathLabelTypePtrOutputWithContext(ctx context.Context) AnalysisDataPathLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDataPathLabelType) *AnalysisDataPathLabelType {
		return &v
	}).(AnalysisDataPathLabelTypePtrOutput)
}

func (o AnalysisDataPathLabelTypeOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDataPathLabelType) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

func (o AnalysisDataPathLabelTypeOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDataPathLabelType) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

func (o AnalysisDataPathLabelTypeOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisDataPathLabelType) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisDataPathLabelTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisDataPathLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataPathLabelType)(nil)).Elem()
}

func (o AnalysisDataPathLabelTypePtrOutput) ToAnalysisDataPathLabelTypePtrOutput() AnalysisDataPathLabelTypePtrOutput {
	return o
}

func (o AnalysisDataPathLabelTypePtrOutput) ToAnalysisDataPathLabelTypePtrOutputWithContext(ctx context.Context) AnalysisDataPathLabelTypePtrOutput {
	return o
}

func (o AnalysisDataPathLabelTypePtrOutput) Elem() AnalysisDataPathLabelTypeOutput {
	return o.ApplyT(func(v *AnalysisDataPathLabelType) AnalysisDataPathLabelType {
		if v != nil {
			return *v
		}
		var ret AnalysisDataPathLabelType
		return ret
	}).(AnalysisDataPathLabelTypeOutput)
}

func (o AnalysisDataPathLabelTypePtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDataPathLabelType) *string {
		if v == nil {
			return nil
		}
		return v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDataPathLabelTypePtrOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDataPathLabelType) *string {
		if v == nil {
			return nil
		}
		return v.FieldValue
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDataPathLabelTypePtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisDataPathLabelType) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisDataPathSort struct {
	Direction AnalysisSortDirection   `pulumi:"direction"`
	SortPaths []AnalysisDataPathValue `pulumi:"sortPaths"`
}

// AnalysisDataPathSortInput is an input type that accepts AnalysisDataPathSortArgs and AnalysisDataPathSortOutput values.
// You can construct a concrete instance of `AnalysisDataPathSortInput` via:
//
//	AnalysisDataPathSortArgs{...}
type AnalysisDataPathSortInput interface {
	pulumi.Input

	ToAnalysisDataPathSortOutput() AnalysisDataPathSortOutput
	ToAnalysisDataPathSortOutputWithContext(context.Context) AnalysisDataPathSortOutput
}

type AnalysisDataPathSortArgs struct {
	Direction AnalysisSortDirectionInput      `pulumi:"direction"`
	SortPaths AnalysisDataPathValueArrayInput `pulumi:"sortPaths"`
}

func (AnalysisDataPathSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataPathSort)(nil)).Elem()
}

func (i AnalysisDataPathSortArgs) ToAnalysisDataPathSortOutput() AnalysisDataPathSortOutput {
	return i.ToAnalysisDataPathSortOutputWithContext(context.Background())
}

func (i AnalysisDataPathSortArgs) ToAnalysisDataPathSortOutputWithContext(ctx context.Context) AnalysisDataPathSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataPathSortOutput)
}

func (i AnalysisDataPathSortArgs) ToAnalysisDataPathSortPtrOutput() AnalysisDataPathSortPtrOutput {
	return i.ToAnalysisDataPathSortPtrOutputWithContext(context.Background())
}

func (i AnalysisDataPathSortArgs) ToAnalysisDataPathSortPtrOutputWithContext(ctx context.Context) AnalysisDataPathSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataPathSortOutput).ToAnalysisDataPathSortPtrOutputWithContext(ctx)
}

// AnalysisDataPathSortPtrInput is an input type that accepts AnalysisDataPathSortArgs, AnalysisDataPathSortPtr and AnalysisDataPathSortPtrOutput values.
// You can construct a concrete instance of `AnalysisDataPathSortPtrInput` via:
//
//	        AnalysisDataPathSortArgs{...}
//
//	or:
//
//	        nil
type AnalysisDataPathSortPtrInput interface {
	pulumi.Input

	ToAnalysisDataPathSortPtrOutput() AnalysisDataPathSortPtrOutput
	ToAnalysisDataPathSortPtrOutputWithContext(context.Context) AnalysisDataPathSortPtrOutput
}

type analysisDataPathSortPtrType AnalysisDataPathSortArgs

func AnalysisDataPathSortPtr(v *AnalysisDataPathSortArgs) AnalysisDataPathSortPtrInput {
	return (*analysisDataPathSortPtrType)(v)
}

func (*analysisDataPathSortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataPathSort)(nil)).Elem()
}

func (i *analysisDataPathSortPtrType) ToAnalysisDataPathSortPtrOutput() AnalysisDataPathSortPtrOutput {
	return i.ToAnalysisDataPathSortPtrOutputWithContext(context.Background())
}

func (i *analysisDataPathSortPtrType) ToAnalysisDataPathSortPtrOutputWithContext(ctx context.Context) AnalysisDataPathSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataPathSortPtrOutput)
}

type AnalysisDataPathSortOutput struct{ *pulumi.OutputState }

func (AnalysisDataPathSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataPathSort)(nil)).Elem()
}

func (o AnalysisDataPathSortOutput) ToAnalysisDataPathSortOutput() AnalysisDataPathSortOutput {
	return o
}

func (o AnalysisDataPathSortOutput) ToAnalysisDataPathSortOutputWithContext(ctx context.Context) AnalysisDataPathSortOutput {
	return o
}

func (o AnalysisDataPathSortOutput) ToAnalysisDataPathSortPtrOutput() AnalysisDataPathSortPtrOutput {
	return o.ToAnalysisDataPathSortPtrOutputWithContext(context.Background())
}

func (o AnalysisDataPathSortOutput) ToAnalysisDataPathSortPtrOutputWithContext(ctx context.Context) AnalysisDataPathSortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDataPathSort) *AnalysisDataPathSort {
		return &v
	}).(AnalysisDataPathSortPtrOutput)
}

func (o AnalysisDataPathSortOutput) Direction() AnalysisSortDirectionOutput {
	return o.ApplyT(func(v AnalysisDataPathSort) AnalysisSortDirection { return v.Direction }).(AnalysisSortDirectionOutput)
}

func (o AnalysisDataPathSortOutput) SortPaths() AnalysisDataPathValueArrayOutput {
	return o.ApplyT(func(v AnalysisDataPathSort) []AnalysisDataPathValue { return v.SortPaths }).(AnalysisDataPathValueArrayOutput)
}

type AnalysisDataPathSortPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDataPathSortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataPathSort)(nil)).Elem()
}

func (o AnalysisDataPathSortPtrOutput) ToAnalysisDataPathSortPtrOutput() AnalysisDataPathSortPtrOutput {
	return o
}

func (o AnalysisDataPathSortPtrOutput) ToAnalysisDataPathSortPtrOutputWithContext(ctx context.Context) AnalysisDataPathSortPtrOutput {
	return o
}

func (o AnalysisDataPathSortPtrOutput) Elem() AnalysisDataPathSortOutput {
	return o.ApplyT(func(v *AnalysisDataPathSort) AnalysisDataPathSort {
		if v != nil {
			return *v
		}
		var ret AnalysisDataPathSort
		return ret
	}).(AnalysisDataPathSortOutput)
}

func (o AnalysisDataPathSortPtrOutput) Direction() AnalysisSortDirectionPtrOutput {
	return o.ApplyT(func(v *AnalysisDataPathSort) *AnalysisSortDirection {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(AnalysisSortDirectionPtrOutput)
}

func (o AnalysisDataPathSortPtrOutput) SortPaths() AnalysisDataPathValueArrayOutput {
	return o.ApplyT(func(v *AnalysisDataPathSort) []AnalysisDataPathValue {
		if v == nil {
			return nil
		}
		return v.SortPaths
	}).(AnalysisDataPathValueArrayOutput)
}

type AnalysisDataPathValue struct {
	FieldId    string `pulumi:"fieldId"`
	FieldValue string `pulumi:"fieldValue"`
}

// AnalysisDataPathValueInput is an input type that accepts AnalysisDataPathValueArgs and AnalysisDataPathValueOutput values.
// You can construct a concrete instance of `AnalysisDataPathValueInput` via:
//
//	AnalysisDataPathValueArgs{...}
type AnalysisDataPathValueInput interface {
	pulumi.Input

	ToAnalysisDataPathValueOutput() AnalysisDataPathValueOutput
	ToAnalysisDataPathValueOutputWithContext(context.Context) AnalysisDataPathValueOutput
}

type AnalysisDataPathValueArgs struct {
	FieldId    pulumi.StringInput `pulumi:"fieldId"`
	FieldValue pulumi.StringInput `pulumi:"fieldValue"`
}

func (AnalysisDataPathValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataPathValue)(nil)).Elem()
}

func (i AnalysisDataPathValueArgs) ToAnalysisDataPathValueOutput() AnalysisDataPathValueOutput {
	return i.ToAnalysisDataPathValueOutputWithContext(context.Background())
}

func (i AnalysisDataPathValueArgs) ToAnalysisDataPathValueOutputWithContext(ctx context.Context) AnalysisDataPathValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataPathValueOutput)
}

// AnalysisDataPathValueArrayInput is an input type that accepts AnalysisDataPathValueArray and AnalysisDataPathValueArrayOutput values.
// You can construct a concrete instance of `AnalysisDataPathValueArrayInput` via:
//
//	AnalysisDataPathValueArray{ AnalysisDataPathValueArgs{...} }
type AnalysisDataPathValueArrayInput interface {
	pulumi.Input

	ToAnalysisDataPathValueArrayOutput() AnalysisDataPathValueArrayOutput
	ToAnalysisDataPathValueArrayOutputWithContext(context.Context) AnalysisDataPathValueArrayOutput
}

type AnalysisDataPathValueArray []AnalysisDataPathValueInput

func (AnalysisDataPathValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataPathValue)(nil)).Elem()
}

func (i AnalysisDataPathValueArray) ToAnalysisDataPathValueArrayOutput() AnalysisDataPathValueArrayOutput {
	return i.ToAnalysisDataPathValueArrayOutputWithContext(context.Background())
}

func (i AnalysisDataPathValueArray) ToAnalysisDataPathValueArrayOutputWithContext(ctx context.Context) AnalysisDataPathValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataPathValueArrayOutput)
}

type AnalysisDataPathValueOutput struct{ *pulumi.OutputState }

func (AnalysisDataPathValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataPathValue)(nil)).Elem()
}

func (o AnalysisDataPathValueOutput) ToAnalysisDataPathValueOutput() AnalysisDataPathValueOutput {
	return o
}

func (o AnalysisDataPathValueOutput) ToAnalysisDataPathValueOutputWithContext(ctx context.Context) AnalysisDataPathValueOutput {
	return o
}

func (o AnalysisDataPathValueOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataPathValue) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisDataPathValueOutput) FieldValue() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataPathValue) string { return v.FieldValue }).(pulumi.StringOutput)
}

type AnalysisDataPathValueArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDataPathValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataPathValue)(nil)).Elem()
}

func (o AnalysisDataPathValueArrayOutput) ToAnalysisDataPathValueArrayOutput() AnalysisDataPathValueArrayOutput {
	return o
}

func (o AnalysisDataPathValueArrayOutput) ToAnalysisDataPathValueArrayOutputWithContext(ctx context.Context) AnalysisDataPathValueArrayOutput {
	return o
}

func (o AnalysisDataPathValueArrayOutput) Index(i pulumi.IntInput) AnalysisDataPathValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDataPathValue {
		return vs[0].([]AnalysisDataPathValue)[vs[1].(int)]
	}).(AnalysisDataPathValueOutput)
}

type AnalysisDataSetIdentifierDeclaration struct {
	DataSetArn string `pulumi:"dataSetArn"`
	Identifier string `pulumi:"identifier"`
}

// AnalysisDataSetIdentifierDeclarationInput is an input type that accepts AnalysisDataSetIdentifierDeclarationArgs and AnalysisDataSetIdentifierDeclarationOutput values.
// You can construct a concrete instance of `AnalysisDataSetIdentifierDeclarationInput` via:
//
//	AnalysisDataSetIdentifierDeclarationArgs{...}
type AnalysisDataSetIdentifierDeclarationInput interface {
	pulumi.Input

	ToAnalysisDataSetIdentifierDeclarationOutput() AnalysisDataSetIdentifierDeclarationOutput
	ToAnalysisDataSetIdentifierDeclarationOutputWithContext(context.Context) AnalysisDataSetIdentifierDeclarationOutput
}

type AnalysisDataSetIdentifierDeclarationArgs struct {
	DataSetArn pulumi.StringInput `pulumi:"dataSetArn"`
	Identifier pulumi.StringInput `pulumi:"identifier"`
}

func (AnalysisDataSetIdentifierDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataSetIdentifierDeclaration)(nil)).Elem()
}

func (i AnalysisDataSetIdentifierDeclarationArgs) ToAnalysisDataSetIdentifierDeclarationOutput() AnalysisDataSetIdentifierDeclarationOutput {
	return i.ToAnalysisDataSetIdentifierDeclarationOutputWithContext(context.Background())
}

func (i AnalysisDataSetIdentifierDeclarationArgs) ToAnalysisDataSetIdentifierDeclarationOutputWithContext(ctx context.Context) AnalysisDataSetIdentifierDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataSetIdentifierDeclarationOutput)
}

// AnalysisDataSetIdentifierDeclarationArrayInput is an input type that accepts AnalysisDataSetIdentifierDeclarationArray and AnalysisDataSetIdentifierDeclarationArrayOutput values.
// You can construct a concrete instance of `AnalysisDataSetIdentifierDeclarationArrayInput` via:
//
//	AnalysisDataSetIdentifierDeclarationArray{ AnalysisDataSetIdentifierDeclarationArgs{...} }
type AnalysisDataSetIdentifierDeclarationArrayInput interface {
	pulumi.Input

	ToAnalysisDataSetIdentifierDeclarationArrayOutput() AnalysisDataSetIdentifierDeclarationArrayOutput
	ToAnalysisDataSetIdentifierDeclarationArrayOutputWithContext(context.Context) AnalysisDataSetIdentifierDeclarationArrayOutput
}

type AnalysisDataSetIdentifierDeclarationArray []AnalysisDataSetIdentifierDeclarationInput

func (AnalysisDataSetIdentifierDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataSetIdentifierDeclaration)(nil)).Elem()
}

func (i AnalysisDataSetIdentifierDeclarationArray) ToAnalysisDataSetIdentifierDeclarationArrayOutput() AnalysisDataSetIdentifierDeclarationArrayOutput {
	return i.ToAnalysisDataSetIdentifierDeclarationArrayOutputWithContext(context.Background())
}

func (i AnalysisDataSetIdentifierDeclarationArray) ToAnalysisDataSetIdentifierDeclarationArrayOutputWithContext(ctx context.Context) AnalysisDataSetIdentifierDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataSetIdentifierDeclarationArrayOutput)
}

type AnalysisDataSetIdentifierDeclarationOutput struct{ *pulumi.OutputState }

func (AnalysisDataSetIdentifierDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataSetIdentifierDeclaration)(nil)).Elem()
}

func (o AnalysisDataSetIdentifierDeclarationOutput) ToAnalysisDataSetIdentifierDeclarationOutput() AnalysisDataSetIdentifierDeclarationOutput {
	return o
}

func (o AnalysisDataSetIdentifierDeclarationOutput) ToAnalysisDataSetIdentifierDeclarationOutputWithContext(ctx context.Context) AnalysisDataSetIdentifierDeclarationOutput {
	return o
}

func (o AnalysisDataSetIdentifierDeclarationOutput) DataSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataSetIdentifierDeclaration) string { return v.DataSetArn }).(pulumi.StringOutput)
}

func (o AnalysisDataSetIdentifierDeclarationOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataSetIdentifierDeclaration) string { return v.Identifier }).(pulumi.StringOutput)
}

type AnalysisDataSetIdentifierDeclarationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDataSetIdentifierDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataSetIdentifierDeclaration)(nil)).Elem()
}

func (o AnalysisDataSetIdentifierDeclarationArrayOutput) ToAnalysisDataSetIdentifierDeclarationArrayOutput() AnalysisDataSetIdentifierDeclarationArrayOutput {
	return o
}

func (o AnalysisDataSetIdentifierDeclarationArrayOutput) ToAnalysisDataSetIdentifierDeclarationArrayOutputWithContext(ctx context.Context) AnalysisDataSetIdentifierDeclarationArrayOutput {
	return o
}

func (o AnalysisDataSetIdentifierDeclarationArrayOutput) Index(i pulumi.IntInput) AnalysisDataSetIdentifierDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDataSetIdentifierDeclaration {
		return vs[0].([]AnalysisDataSetIdentifierDeclaration)[vs[1].(int)]
	}).(AnalysisDataSetIdentifierDeclarationOutput)
}

type AnalysisDataSetReference struct {
	DataSetArn         string `pulumi:"dataSetArn"`
	DataSetPlaceholder string `pulumi:"dataSetPlaceholder"`
}

// AnalysisDataSetReferenceInput is an input type that accepts AnalysisDataSetReferenceArgs and AnalysisDataSetReferenceOutput values.
// You can construct a concrete instance of `AnalysisDataSetReferenceInput` via:
//
//	AnalysisDataSetReferenceArgs{...}
type AnalysisDataSetReferenceInput interface {
	pulumi.Input

	ToAnalysisDataSetReferenceOutput() AnalysisDataSetReferenceOutput
	ToAnalysisDataSetReferenceOutputWithContext(context.Context) AnalysisDataSetReferenceOutput
}

type AnalysisDataSetReferenceArgs struct {
	DataSetArn         pulumi.StringInput `pulumi:"dataSetArn"`
	DataSetPlaceholder pulumi.StringInput `pulumi:"dataSetPlaceholder"`
}

func (AnalysisDataSetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataSetReference)(nil)).Elem()
}

func (i AnalysisDataSetReferenceArgs) ToAnalysisDataSetReferenceOutput() AnalysisDataSetReferenceOutput {
	return i.ToAnalysisDataSetReferenceOutputWithContext(context.Background())
}

func (i AnalysisDataSetReferenceArgs) ToAnalysisDataSetReferenceOutputWithContext(ctx context.Context) AnalysisDataSetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataSetReferenceOutput)
}

// AnalysisDataSetReferenceArrayInput is an input type that accepts AnalysisDataSetReferenceArray and AnalysisDataSetReferenceArrayOutput values.
// You can construct a concrete instance of `AnalysisDataSetReferenceArrayInput` via:
//
//	AnalysisDataSetReferenceArray{ AnalysisDataSetReferenceArgs{...} }
type AnalysisDataSetReferenceArrayInput interface {
	pulumi.Input

	ToAnalysisDataSetReferenceArrayOutput() AnalysisDataSetReferenceArrayOutput
	ToAnalysisDataSetReferenceArrayOutputWithContext(context.Context) AnalysisDataSetReferenceArrayOutput
}

type AnalysisDataSetReferenceArray []AnalysisDataSetReferenceInput

func (AnalysisDataSetReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataSetReference)(nil)).Elem()
}

func (i AnalysisDataSetReferenceArray) ToAnalysisDataSetReferenceArrayOutput() AnalysisDataSetReferenceArrayOutput {
	return i.ToAnalysisDataSetReferenceArrayOutputWithContext(context.Background())
}

func (i AnalysisDataSetReferenceArray) ToAnalysisDataSetReferenceArrayOutputWithContext(ctx context.Context) AnalysisDataSetReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDataSetReferenceArrayOutput)
}

type AnalysisDataSetReferenceOutput struct{ *pulumi.OutputState }

func (AnalysisDataSetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataSetReference)(nil)).Elem()
}

func (o AnalysisDataSetReferenceOutput) ToAnalysisDataSetReferenceOutput() AnalysisDataSetReferenceOutput {
	return o
}

func (o AnalysisDataSetReferenceOutput) ToAnalysisDataSetReferenceOutputWithContext(ctx context.Context) AnalysisDataSetReferenceOutput {
	return o
}

func (o AnalysisDataSetReferenceOutput) DataSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataSetReference) string { return v.DataSetArn }).(pulumi.StringOutput)
}

func (o AnalysisDataSetReferenceOutput) DataSetPlaceholder() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDataSetReference) string { return v.DataSetPlaceholder }).(pulumi.StringOutput)
}

type AnalysisDataSetReferenceArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDataSetReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDataSetReference)(nil)).Elem()
}

func (o AnalysisDataSetReferenceArrayOutput) ToAnalysisDataSetReferenceArrayOutput() AnalysisDataSetReferenceArrayOutput {
	return o
}

func (o AnalysisDataSetReferenceArrayOutput) ToAnalysisDataSetReferenceArrayOutputWithContext(ctx context.Context) AnalysisDataSetReferenceArrayOutput {
	return o
}

func (o AnalysisDataSetReferenceArrayOutput) Index(i pulumi.IntInput) AnalysisDataSetReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDataSetReference {
		return vs[0].([]AnalysisDataSetReference)[vs[1].(int)]
	}).(AnalysisDataSetReferenceOutput)
}

type AnalysisDateAxisOptions struct {
	MissingDateVisibility *AnalysisVisibility `pulumi:"missingDateVisibility"`
}

// AnalysisDateAxisOptionsInput is an input type that accepts AnalysisDateAxisOptionsArgs and AnalysisDateAxisOptionsOutput values.
// You can construct a concrete instance of `AnalysisDateAxisOptionsInput` via:
//
//	AnalysisDateAxisOptionsArgs{...}
type AnalysisDateAxisOptionsInput interface {
	pulumi.Input

	ToAnalysisDateAxisOptionsOutput() AnalysisDateAxisOptionsOutput
	ToAnalysisDateAxisOptionsOutputWithContext(context.Context) AnalysisDateAxisOptionsOutput
}

type AnalysisDateAxisOptionsArgs struct {
	MissingDateVisibility AnalysisVisibilityPtrInput `pulumi:"missingDateVisibility"`
}

func (AnalysisDateAxisOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateAxisOptions)(nil)).Elem()
}

func (i AnalysisDateAxisOptionsArgs) ToAnalysisDateAxisOptionsOutput() AnalysisDateAxisOptionsOutput {
	return i.ToAnalysisDateAxisOptionsOutputWithContext(context.Background())
}

func (i AnalysisDateAxisOptionsArgs) ToAnalysisDateAxisOptionsOutputWithContext(ctx context.Context) AnalysisDateAxisOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateAxisOptionsOutput)
}

func (i AnalysisDateAxisOptionsArgs) ToAnalysisDateAxisOptionsPtrOutput() AnalysisDateAxisOptionsPtrOutput {
	return i.ToAnalysisDateAxisOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisDateAxisOptionsArgs) ToAnalysisDateAxisOptionsPtrOutputWithContext(ctx context.Context) AnalysisDateAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateAxisOptionsOutput).ToAnalysisDateAxisOptionsPtrOutputWithContext(ctx)
}

// AnalysisDateAxisOptionsPtrInput is an input type that accepts AnalysisDateAxisOptionsArgs, AnalysisDateAxisOptionsPtr and AnalysisDateAxisOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisDateAxisOptionsPtrInput` via:
//
//	        AnalysisDateAxisOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisDateAxisOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisDateAxisOptionsPtrOutput() AnalysisDateAxisOptionsPtrOutput
	ToAnalysisDateAxisOptionsPtrOutputWithContext(context.Context) AnalysisDateAxisOptionsPtrOutput
}

type analysisDateAxisOptionsPtrType AnalysisDateAxisOptionsArgs

func AnalysisDateAxisOptionsPtr(v *AnalysisDateAxisOptionsArgs) AnalysisDateAxisOptionsPtrInput {
	return (*analysisDateAxisOptionsPtrType)(v)
}

func (*analysisDateAxisOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateAxisOptions)(nil)).Elem()
}

func (i *analysisDateAxisOptionsPtrType) ToAnalysisDateAxisOptionsPtrOutput() AnalysisDateAxisOptionsPtrOutput {
	return i.ToAnalysisDateAxisOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisDateAxisOptionsPtrType) ToAnalysisDateAxisOptionsPtrOutputWithContext(ctx context.Context) AnalysisDateAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateAxisOptionsPtrOutput)
}

type AnalysisDateAxisOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisDateAxisOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateAxisOptions)(nil)).Elem()
}

func (o AnalysisDateAxisOptionsOutput) ToAnalysisDateAxisOptionsOutput() AnalysisDateAxisOptionsOutput {
	return o
}

func (o AnalysisDateAxisOptionsOutput) ToAnalysisDateAxisOptionsOutputWithContext(ctx context.Context) AnalysisDateAxisOptionsOutput {
	return o
}

func (o AnalysisDateAxisOptionsOutput) ToAnalysisDateAxisOptionsPtrOutput() AnalysisDateAxisOptionsPtrOutput {
	return o.ToAnalysisDateAxisOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisDateAxisOptionsOutput) ToAnalysisDateAxisOptionsPtrOutputWithContext(ctx context.Context) AnalysisDateAxisOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDateAxisOptions) *AnalysisDateAxisOptions {
		return &v
	}).(AnalysisDateAxisOptionsPtrOutput)
}

func (o AnalysisDateAxisOptionsOutput) MissingDateVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisDateAxisOptions) *AnalysisVisibility { return v.MissingDateVisibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisDateAxisOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDateAxisOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateAxisOptions)(nil)).Elem()
}

func (o AnalysisDateAxisOptionsPtrOutput) ToAnalysisDateAxisOptionsPtrOutput() AnalysisDateAxisOptionsPtrOutput {
	return o
}

func (o AnalysisDateAxisOptionsPtrOutput) ToAnalysisDateAxisOptionsPtrOutputWithContext(ctx context.Context) AnalysisDateAxisOptionsPtrOutput {
	return o
}

func (o AnalysisDateAxisOptionsPtrOutput) Elem() AnalysisDateAxisOptionsOutput {
	return o.ApplyT(func(v *AnalysisDateAxisOptions) AnalysisDateAxisOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisDateAxisOptions
		return ret
	}).(AnalysisDateAxisOptionsOutput)
}

func (o AnalysisDateAxisOptionsPtrOutput) MissingDateVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisDateAxisOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.MissingDateVisibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisDateDimensionField struct {
	Column              AnalysisColumnIdentifier             `pulumi:"column"`
	DateGranularity     *AnalysisTimeGranularity             `pulumi:"dateGranularity"`
	FieldId             string                               `pulumi:"fieldId"`
	FormatConfiguration *AnalysisDateTimeFormatConfiguration `pulumi:"formatConfiguration"`
	HierarchyId         *string                              `pulumi:"hierarchyId"`
}

// AnalysisDateDimensionFieldInput is an input type that accepts AnalysisDateDimensionFieldArgs and AnalysisDateDimensionFieldOutput values.
// You can construct a concrete instance of `AnalysisDateDimensionFieldInput` via:
//
//	AnalysisDateDimensionFieldArgs{...}
type AnalysisDateDimensionFieldInput interface {
	pulumi.Input

	ToAnalysisDateDimensionFieldOutput() AnalysisDateDimensionFieldOutput
	ToAnalysisDateDimensionFieldOutputWithContext(context.Context) AnalysisDateDimensionFieldOutput
}

type AnalysisDateDimensionFieldArgs struct {
	Column              AnalysisColumnIdentifierInput               `pulumi:"column"`
	DateGranularity     AnalysisTimeGranularityPtrInput             `pulumi:"dateGranularity"`
	FieldId             pulumi.StringInput                          `pulumi:"fieldId"`
	FormatConfiguration AnalysisDateTimeFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	HierarchyId         pulumi.StringPtrInput                       `pulumi:"hierarchyId"`
}

func (AnalysisDateDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateDimensionField)(nil)).Elem()
}

func (i AnalysisDateDimensionFieldArgs) ToAnalysisDateDimensionFieldOutput() AnalysisDateDimensionFieldOutput {
	return i.ToAnalysisDateDimensionFieldOutputWithContext(context.Background())
}

func (i AnalysisDateDimensionFieldArgs) ToAnalysisDateDimensionFieldOutputWithContext(ctx context.Context) AnalysisDateDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateDimensionFieldOutput)
}

func (i AnalysisDateDimensionFieldArgs) ToAnalysisDateDimensionFieldPtrOutput() AnalysisDateDimensionFieldPtrOutput {
	return i.ToAnalysisDateDimensionFieldPtrOutputWithContext(context.Background())
}

func (i AnalysisDateDimensionFieldArgs) ToAnalysisDateDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisDateDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateDimensionFieldOutput).ToAnalysisDateDimensionFieldPtrOutputWithContext(ctx)
}

// AnalysisDateDimensionFieldPtrInput is an input type that accepts AnalysisDateDimensionFieldArgs, AnalysisDateDimensionFieldPtr and AnalysisDateDimensionFieldPtrOutput values.
// You can construct a concrete instance of `AnalysisDateDimensionFieldPtrInput` via:
//
//	        AnalysisDateDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type AnalysisDateDimensionFieldPtrInput interface {
	pulumi.Input

	ToAnalysisDateDimensionFieldPtrOutput() AnalysisDateDimensionFieldPtrOutput
	ToAnalysisDateDimensionFieldPtrOutputWithContext(context.Context) AnalysisDateDimensionFieldPtrOutput
}

type analysisDateDimensionFieldPtrType AnalysisDateDimensionFieldArgs

func AnalysisDateDimensionFieldPtr(v *AnalysisDateDimensionFieldArgs) AnalysisDateDimensionFieldPtrInput {
	return (*analysisDateDimensionFieldPtrType)(v)
}

func (*analysisDateDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateDimensionField)(nil)).Elem()
}

func (i *analysisDateDimensionFieldPtrType) ToAnalysisDateDimensionFieldPtrOutput() AnalysisDateDimensionFieldPtrOutput {
	return i.ToAnalysisDateDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *analysisDateDimensionFieldPtrType) ToAnalysisDateDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisDateDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateDimensionFieldPtrOutput)
}

type AnalysisDateDimensionFieldOutput struct{ *pulumi.OutputState }

func (AnalysisDateDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateDimensionField)(nil)).Elem()
}

func (o AnalysisDateDimensionFieldOutput) ToAnalysisDateDimensionFieldOutput() AnalysisDateDimensionFieldOutput {
	return o
}

func (o AnalysisDateDimensionFieldOutput) ToAnalysisDateDimensionFieldOutputWithContext(ctx context.Context) AnalysisDateDimensionFieldOutput {
	return o
}

func (o AnalysisDateDimensionFieldOutput) ToAnalysisDateDimensionFieldPtrOutput() AnalysisDateDimensionFieldPtrOutput {
	return o.ToAnalysisDateDimensionFieldPtrOutputWithContext(context.Background())
}

func (o AnalysisDateDimensionFieldOutput) ToAnalysisDateDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisDateDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDateDimensionField) *AnalysisDateDimensionField {
		return &v
	}).(AnalysisDateDimensionFieldPtrOutput)
}

func (o AnalysisDateDimensionFieldOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisDateDimensionField) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisDateDimensionFieldOutput) DateGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v AnalysisDateDimensionField) *AnalysisTimeGranularity { return v.DateGranularity }).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisDateDimensionFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDateDimensionField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisDateDimensionFieldOutput) FormatConfiguration() AnalysisDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDateDimensionField) *AnalysisDateTimeFormatConfiguration { return v.FormatConfiguration }).(AnalysisDateTimeFormatConfigurationPtrOutput)
}

func (o AnalysisDateDimensionFieldOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDateDimensionField) *string { return v.HierarchyId }).(pulumi.StringPtrOutput)
}

type AnalysisDateDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDateDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateDimensionField)(nil)).Elem()
}

func (o AnalysisDateDimensionFieldPtrOutput) ToAnalysisDateDimensionFieldPtrOutput() AnalysisDateDimensionFieldPtrOutput {
	return o
}

func (o AnalysisDateDimensionFieldPtrOutput) ToAnalysisDateDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisDateDimensionFieldPtrOutput {
	return o
}

func (o AnalysisDateDimensionFieldPtrOutput) Elem() AnalysisDateDimensionFieldOutput {
	return o.ApplyT(func(v *AnalysisDateDimensionField) AnalysisDateDimensionField {
		if v != nil {
			return *v
		}
		var ret AnalysisDateDimensionField
		return ret
	}).(AnalysisDateDimensionFieldOutput)
}

func (o AnalysisDateDimensionFieldPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisDateDimensionField) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisDateDimensionFieldPtrOutput) DateGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v *AnalysisDateDimensionField) *AnalysisTimeGranularity {
		if v == nil {
			return nil
		}
		return v.DateGranularity
	}).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisDateDimensionFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDateDimensionField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDateDimensionFieldPtrOutput) FormatConfiguration() AnalysisDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDateDimensionField) *AnalysisDateTimeFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(AnalysisDateTimeFormatConfigurationPtrOutput)
}

func (o AnalysisDateDimensionFieldPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDateDimensionField) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type AnalysisDateMeasureField struct {
	AggregationFunction *AnalysisDateAggregationFunction     `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifier             `pulumi:"column"`
	FieldId             string                               `pulumi:"fieldId"`
	FormatConfiguration *AnalysisDateTimeFormatConfiguration `pulumi:"formatConfiguration"`
}

// AnalysisDateMeasureFieldInput is an input type that accepts AnalysisDateMeasureFieldArgs and AnalysisDateMeasureFieldOutput values.
// You can construct a concrete instance of `AnalysisDateMeasureFieldInput` via:
//
//	AnalysisDateMeasureFieldArgs{...}
type AnalysisDateMeasureFieldInput interface {
	pulumi.Input

	ToAnalysisDateMeasureFieldOutput() AnalysisDateMeasureFieldOutput
	ToAnalysisDateMeasureFieldOutputWithContext(context.Context) AnalysisDateMeasureFieldOutput
}

type AnalysisDateMeasureFieldArgs struct {
	AggregationFunction AnalysisDateAggregationFunctionPtrInput     `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifierInput               `pulumi:"column"`
	FieldId             pulumi.StringInput                          `pulumi:"fieldId"`
	FormatConfiguration AnalysisDateTimeFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
}

func (AnalysisDateMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateMeasureField)(nil)).Elem()
}

func (i AnalysisDateMeasureFieldArgs) ToAnalysisDateMeasureFieldOutput() AnalysisDateMeasureFieldOutput {
	return i.ToAnalysisDateMeasureFieldOutputWithContext(context.Background())
}

func (i AnalysisDateMeasureFieldArgs) ToAnalysisDateMeasureFieldOutputWithContext(ctx context.Context) AnalysisDateMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateMeasureFieldOutput)
}

func (i AnalysisDateMeasureFieldArgs) ToAnalysisDateMeasureFieldPtrOutput() AnalysisDateMeasureFieldPtrOutput {
	return i.ToAnalysisDateMeasureFieldPtrOutputWithContext(context.Background())
}

func (i AnalysisDateMeasureFieldArgs) ToAnalysisDateMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisDateMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateMeasureFieldOutput).ToAnalysisDateMeasureFieldPtrOutputWithContext(ctx)
}

// AnalysisDateMeasureFieldPtrInput is an input type that accepts AnalysisDateMeasureFieldArgs, AnalysisDateMeasureFieldPtr and AnalysisDateMeasureFieldPtrOutput values.
// You can construct a concrete instance of `AnalysisDateMeasureFieldPtrInput` via:
//
//	        AnalysisDateMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type AnalysisDateMeasureFieldPtrInput interface {
	pulumi.Input

	ToAnalysisDateMeasureFieldPtrOutput() AnalysisDateMeasureFieldPtrOutput
	ToAnalysisDateMeasureFieldPtrOutputWithContext(context.Context) AnalysisDateMeasureFieldPtrOutput
}

type analysisDateMeasureFieldPtrType AnalysisDateMeasureFieldArgs

func AnalysisDateMeasureFieldPtr(v *AnalysisDateMeasureFieldArgs) AnalysisDateMeasureFieldPtrInput {
	return (*analysisDateMeasureFieldPtrType)(v)
}

func (*analysisDateMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateMeasureField)(nil)).Elem()
}

func (i *analysisDateMeasureFieldPtrType) ToAnalysisDateMeasureFieldPtrOutput() AnalysisDateMeasureFieldPtrOutput {
	return i.ToAnalysisDateMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *analysisDateMeasureFieldPtrType) ToAnalysisDateMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisDateMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateMeasureFieldPtrOutput)
}

type AnalysisDateMeasureFieldOutput struct{ *pulumi.OutputState }

func (AnalysisDateMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateMeasureField)(nil)).Elem()
}

func (o AnalysisDateMeasureFieldOutput) ToAnalysisDateMeasureFieldOutput() AnalysisDateMeasureFieldOutput {
	return o
}

func (o AnalysisDateMeasureFieldOutput) ToAnalysisDateMeasureFieldOutputWithContext(ctx context.Context) AnalysisDateMeasureFieldOutput {
	return o
}

func (o AnalysisDateMeasureFieldOutput) ToAnalysisDateMeasureFieldPtrOutput() AnalysisDateMeasureFieldPtrOutput {
	return o.ToAnalysisDateMeasureFieldPtrOutputWithContext(context.Background())
}

func (o AnalysisDateMeasureFieldOutput) ToAnalysisDateMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisDateMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDateMeasureField) *AnalysisDateMeasureField {
		return &v
	}).(AnalysisDateMeasureFieldPtrOutput)
}

func (o AnalysisDateMeasureFieldOutput) AggregationFunction() AnalysisDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisDateMeasureField) *AnalysisDateAggregationFunction { return v.AggregationFunction }).(AnalysisDateAggregationFunctionPtrOutput)
}

func (o AnalysisDateMeasureFieldOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisDateMeasureField) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisDateMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDateMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisDateMeasureFieldOutput) FormatConfiguration() AnalysisDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDateMeasureField) *AnalysisDateTimeFormatConfiguration { return v.FormatConfiguration }).(AnalysisDateTimeFormatConfigurationPtrOutput)
}

type AnalysisDateMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDateMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateMeasureField)(nil)).Elem()
}

func (o AnalysisDateMeasureFieldPtrOutput) ToAnalysisDateMeasureFieldPtrOutput() AnalysisDateMeasureFieldPtrOutput {
	return o
}

func (o AnalysisDateMeasureFieldPtrOutput) ToAnalysisDateMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisDateMeasureFieldPtrOutput {
	return o
}

func (o AnalysisDateMeasureFieldPtrOutput) Elem() AnalysisDateMeasureFieldOutput {
	return o.ApplyT(func(v *AnalysisDateMeasureField) AnalysisDateMeasureField {
		if v != nil {
			return *v
		}
		var ret AnalysisDateMeasureField
		return ret
	}).(AnalysisDateMeasureFieldOutput)
}

func (o AnalysisDateMeasureFieldPtrOutput) AggregationFunction() AnalysisDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisDateMeasureField) *AnalysisDateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(AnalysisDateAggregationFunctionPtrOutput)
}

func (o AnalysisDateMeasureFieldPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisDateMeasureField) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisDateMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDateMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDateMeasureFieldPtrOutput) FormatConfiguration() AnalysisDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDateMeasureField) *AnalysisDateTimeFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(AnalysisDateTimeFormatConfigurationPtrOutput)
}

type AnalysisDateTimeDefaultValues struct {
	DynamicValue *AnalysisDynamicDefaultValue      `pulumi:"dynamicValue"`
	RollingDate  *AnalysisRollingDateConfiguration `pulumi:"rollingDate"`
	StaticValues []string                          `pulumi:"staticValues"`
}

// AnalysisDateTimeDefaultValuesInput is an input type that accepts AnalysisDateTimeDefaultValuesArgs and AnalysisDateTimeDefaultValuesOutput values.
// You can construct a concrete instance of `AnalysisDateTimeDefaultValuesInput` via:
//
//	AnalysisDateTimeDefaultValuesArgs{...}
type AnalysisDateTimeDefaultValuesInput interface {
	pulumi.Input

	ToAnalysisDateTimeDefaultValuesOutput() AnalysisDateTimeDefaultValuesOutput
	ToAnalysisDateTimeDefaultValuesOutputWithContext(context.Context) AnalysisDateTimeDefaultValuesOutput
}

type AnalysisDateTimeDefaultValuesArgs struct {
	DynamicValue AnalysisDynamicDefaultValuePtrInput      `pulumi:"dynamicValue"`
	RollingDate  AnalysisRollingDateConfigurationPtrInput `pulumi:"rollingDate"`
	StaticValues pulumi.StringArrayInput                  `pulumi:"staticValues"`
}

func (AnalysisDateTimeDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeDefaultValues)(nil)).Elem()
}

func (i AnalysisDateTimeDefaultValuesArgs) ToAnalysisDateTimeDefaultValuesOutput() AnalysisDateTimeDefaultValuesOutput {
	return i.ToAnalysisDateTimeDefaultValuesOutputWithContext(context.Background())
}

func (i AnalysisDateTimeDefaultValuesArgs) ToAnalysisDateTimeDefaultValuesOutputWithContext(ctx context.Context) AnalysisDateTimeDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeDefaultValuesOutput)
}

func (i AnalysisDateTimeDefaultValuesArgs) ToAnalysisDateTimeDefaultValuesPtrOutput() AnalysisDateTimeDefaultValuesPtrOutput {
	return i.ToAnalysisDateTimeDefaultValuesPtrOutputWithContext(context.Background())
}

func (i AnalysisDateTimeDefaultValuesArgs) ToAnalysisDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisDateTimeDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeDefaultValuesOutput).ToAnalysisDateTimeDefaultValuesPtrOutputWithContext(ctx)
}

// AnalysisDateTimeDefaultValuesPtrInput is an input type that accepts AnalysisDateTimeDefaultValuesArgs, AnalysisDateTimeDefaultValuesPtr and AnalysisDateTimeDefaultValuesPtrOutput values.
// You can construct a concrete instance of `AnalysisDateTimeDefaultValuesPtrInput` via:
//
//	        AnalysisDateTimeDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type AnalysisDateTimeDefaultValuesPtrInput interface {
	pulumi.Input

	ToAnalysisDateTimeDefaultValuesPtrOutput() AnalysisDateTimeDefaultValuesPtrOutput
	ToAnalysisDateTimeDefaultValuesPtrOutputWithContext(context.Context) AnalysisDateTimeDefaultValuesPtrOutput
}

type analysisDateTimeDefaultValuesPtrType AnalysisDateTimeDefaultValuesArgs

func AnalysisDateTimeDefaultValuesPtr(v *AnalysisDateTimeDefaultValuesArgs) AnalysisDateTimeDefaultValuesPtrInput {
	return (*analysisDateTimeDefaultValuesPtrType)(v)
}

func (*analysisDateTimeDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimeDefaultValues)(nil)).Elem()
}

func (i *analysisDateTimeDefaultValuesPtrType) ToAnalysisDateTimeDefaultValuesPtrOutput() AnalysisDateTimeDefaultValuesPtrOutput {
	return i.ToAnalysisDateTimeDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *analysisDateTimeDefaultValuesPtrType) ToAnalysisDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisDateTimeDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeDefaultValuesPtrOutput)
}

type AnalysisDateTimeDefaultValuesOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeDefaultValues)(nil)).Elem()
}

func (o AnalysisDateTimeDefaultValuesOutput) ToAnalysisDateTimeDefaultValuesOutput() AnalysisDateTimeDefaultValuesOutput {
	return o
}

func (o AnalysisDateTimeDefaultValuesOutput) ToAnalysisDateTimeDefaultValuesOutputWithContext(ctx context.Context) AnalysisDateTimeDefaultValuesOutput {
	return o
}

func (o AnalysisDateTimeDefaultValuesOutput) ToAnalysisDateTimeDefaultValuesPtrOutput() AnalysisDateTimeDefaultValuesPtrOutput {
	return o.ToAnalysisDateTimeDefaultValuesPtrOutputWithContext(context.Background())
}

func (o AnalysisDateTimeDefaultValuesOutput) ToAnalysisDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisDateTimeDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDateTimeDefaultValues) *AnalysisDateTimeDefaultValues {
		return &v
	}).(AnalysisDateTimeDefaultValuesPtrOutput)
}

func (o AnalysisDateTimeDefaultValuesOutput) DynamicValue() AnalysisDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v AnalysisDateTimeDefaultValues) *AnalysisDynamicDefaultValue { return v.DynamicValue }).(AnalysisDynamicDefaultValuePtrOutput)
}

func (o AnalysisDateTimeDefaultValuesOutput) RollingDate() AnalysisRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimeDefaultValues) *AnalysisRollingDateConfiguration { return v.RollingDate }).(AnalysisRollingDateConfigurationPtrOutput)
}

func (o AnalysisDateTimeDefaultValuesOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisDateTimeDefaultValues) []string { return v.StaticValues }).(pulumi.StringArrayOutput)
}

type AnalysisDateTimeDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimeDefaultValues)(nil)).Elem()
}

func (o AnalysisDateTimeDefaultValuesPtrOutput) ToAnalysisDateTimeDefaultValuesPtrOutput() AnalysisDateTimeDefaultValuesPtrOutput {
	return o
}

func (o AnalysisDateTimeDefaultValuesPtrOutput) ToAnalysisDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisDateTimeDefaultValuesPtrOutput {
	return o
}

func (o AnalysisDateTimeDefaultValuesPtrOutput) Elem() AnalysisDateTimeDefaultValuesOutput {
	return o.ApplyT(func(v *AnalysisDateTimeDefaultValues) AnalysisDateTimeDefaultValues {
		if v != nil {
			return *v
		}
		var ret AnalysisDateTimeDefaultValues
		return ret
	}).(AnalysisDateTimeDefaultValuesOutput)
}

func (o AnalysisDateTimeDefaultValuesPtrOutput) DynamicValue() AnalysisDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeDefaultValues) *AnalysisDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(AnalysisDynamicDefaultValuePtrOutput)
}

func (o AnalysisDateTimeDefaultValuesPtrOutput) RollingDate() AnalysisRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeDefaultValues) *AnalysisRollingDateConfiguration {
		if v == nil {
			return nil
		}
		return v.RollingDate
	}).(AnalysisRollingDateConfigurationPtrOutput)
}

func (o AnalysisDateTimeDefaultValuesPtrOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisDateTimeDefaultValues) []string {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.StringArrayOutput)
}

type AnalysisDateTimeFormatConfiguration struct {
	DateTimeFormat               *string                               `pulumi:"dateTimeFormat"`
	NullValueFormatConfiguration *AnalysisNullValueFormatConfiguration `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   *AnalysisNumericFormatConfiguration   `pulumi:"numericFormatConfiguration"`
}

// AnalysisDateTimeFormatConfigurationInput is an input type that accepts AnalysisDateTimeFormatConfigurationArgs and AnalysisDateTimeFormatConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDateTimeFormatConfigurationInput` via:
//
//	AnalysisDateTimeFormatConfigurationArgs{...}
type AnalysisDateTimeFormatConfigurationInput interface {
	pulumi.Input

	ToAnalysisDateTimeFormatConfigurationOutput() AnalysisDateTimeFormatConfigurationOutput
	ToAnalysisDateTimeFormatConfigurationOutputWithContext(context.Context) AnalysisDateTimeFormatConfigurationOutput
}

type AnalysisDateTimeFormatConfigurationArgs struct {
	DateTimeFormat               pulumi.StringPtrInput                        `pulumi:"dateTimeFormat"`
	NullValueFormatConfiguration AnalysisNullValueFormatConfigurationPtrInput `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   AnalysisNumericFormatConfigurationPtrInput   `pulumi:"numericFormatConfiguration"`
}

func (AnalysisDateTimeFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeFormatConfiguration)(nil)).Elem()
}

func (i AnalysisDateTimeFormatConfigurationArgs) ToAnalysisDateTimeFormatConfigurationOutput() AnalysisDateTimeFormatConfigurationOutput {
	return i.ToAnalysisDateTimeFormatConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDateTimeFormatConfigurationArgs) ToAnalysisDateTimeFormatConfigurationOutputWithContext(ctx context.Context) AnalysisDateTimeFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeFormatConfigurationOutput)
}

func (i AnalysisDateTimeFormatConfigurationArgs) ToAnalysisDateTimeFormatConfigurationPtrOutput() AnalysisDateTimeFormatConfigurationPtrOutput {
	return i.ToAnalysisDateTimeFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisDateTimeFormatConfigurationArgs) ToAnalysisDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeFormatConfigurationOutput).ToAnalysisDateTimeFormatConfigurationPtrOutputWithContext(ctx)
}

// AnalysisDateTimeFormatConfigurationPtrInput is an input type that accepts AnalysisDateTimeFormatConfigurationArgs, AnalysisDateTimeFormatConfigurationPtr and AnalysisDateTimeFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisDateTimeFormatConfigurationPtrInput` via:
//
//	        AnalysisDateTimeFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDateTimeFormatConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisDateTimeFormatConfigurationPtrOutput() AnalysisDateTimeFormatConfigurationPtrOutput
	ToAnalysisDateTimeFormatConfigurationPtrOutputWithContext(context.Context) AnalysisDateTimeFormatConfigurationPtrOutput
}

type analysisDateTimeFormatConfigurationPtrType AnalysisDateTimeFormatConfigurationArgs

func AnalysisDateTimeFormatConfigurationPtr(v *AnalysisDateTimeFormatConfigurationArgs) AnalysisDateTimeFormatConfigurationPtrInput {
	return (*analysisDateTimeFormatConfigurationPtrType)(v)
}

func (*analysisDateTimeFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimeFormatConfiguration)(nil)).Elem()
}

func (i *analysisDateTimeFormatConfigurationPtrType) ToAnalysisDateTimeFormatConfigurationPtrOutput() AnalysisDateTimeFormatConfigurationPtrOutput {
	return i.ToAnalysisDateTimeFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisDateTimeFormatConfigurationPtrType) ToAnalysisDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeFormatConfigurationPtrOutput)
}

type AnalysisDateTimeFormatConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeFormatConfiguration)(nil)).Elem()
}

func (o AnalysisDateTimeFormatConfigurationOutput) ToAnalysisDateTimeFormatConfigurationOutput() AnalysisDateTimeFormatConfigurationOutput {
	return o
}

func (o AnalysisDateTimeFormatConfigurationOutput) ToAnalysisDateTimeFormatConfigurationOutputWithContext(ctx context.Context) AnalysisDateTimeFormatConfigurationOutput {
	return o
}

func (o AnalysisDateTimeFormatConfigurationOutput) ToAnalysisDateTimeFormatConfigurationPtrOutput() AnalysisDateTimeFormatConfigurationPtrOutput {
	return o.ToAnalysisDateTimeFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisDateTimeFormatConfigurationOutput) ToAnalysisDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDateTimeFormatConfiguration) *AnalysisDateTimeFormatConfiguration {
		return &v
	}).(AnalysisDateTimeFormatConfigurationPtrOutput)
}

func (o AnalysisDateTimeFormatConfigurationOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimeFormatConfiguration) *string { return v.DateTimeFormat }).(pulumi.StringPtrOutput)
}

func (o AnalysisDateTimeFormatConfigurationOutput) NullValueFormatConfiguration() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimeFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisDateTimeFormatConfigurationOutput) NumericFormatConfiguration() AnalysisNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimeFormatConfiguration) *AnalysisNumericFormatConfiguration {
		return v.NumericFormatConfiguration
	}).(AnalysisNumericFormatConfigurationPtrOutput)
}

type AnalysisDateTimeFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimeFormatConfiguration)(nil)).Elem()
}

func (o AnalysisDateTimeFormatConfigurationPtrOutput) ToAnalysisDateTimeFormatConfigurationPtrOutput() AnalysisDateTimeFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisDateTimeFormatConfigurationPtrOutput) ToAnalysisDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisDateTimeFormatConfigurationPtrOutput) Elem() AnalysisDateTimeFormatConfigurationOutput {
	return o.ApplyT(func(v *AnalysisDateTimeFormatConfiguration) AnalysisDateTimeFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisDateTimeFormatConfiguration
		return ret
	}).(AnalysisDateTimeFormatConfigurationOutput)
}

func (o AnalysisDateTimeFormatConfigurationPtrOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DateTimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDateTimeFormatConfigurationPtrOutput) NullValueFormatConfiguration() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisDateTimeFormatConfigurationPtrOutput) NumericFormatConfiguration() AnalysisNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeFormatConfiguration) *AnalysisNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumericFormatConfiguration
	}).(AnalysisNumericFormatConfigurationPtrOutput)
}

type AnalysisDateTimeHierarchy struct {
	DrillDownFilters []AnalysisDrillDownFilter `pulumi:"drillDownFilters"`
	HierarchyId      string                    `pulumi:"hierarchyId"`
}

// AnalysisDateTimeHierarchyInput is an input type that accepts AnalysisDateTimeHierarchyArgs and AnalysisDateTimeHierarchyOutput values.
// You can construct a concrete instance of `AnalysisDateTimeHierarchyInput` via:
//
//	AnalysisDateTimeHierarchyArgs{...}
type AnalysisDateTimeHierarchyInput interface {
	pulumi.Input

	ToAnalysisDateTimeHierarchyOutput() AnalysisDateTimeHierarchyOutput
	ToAnalysisDateTimeHierarchyOutputWithContext(context.Context) AnalysisDateTimeHierarchyOutput
}

type AnalysisDateTimeHierarchyArgs struct {
	DrillDownFilters AnalysisDrillDownFilterArrayInput `pulumi:"drillDownFilters"`
	HierarchyId      pulumi.StringInput                `pulumi:"hierarchyId"`
}

func (AnalysisDateTimeHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeHierarchy)(nil)).Elem()
}

func (i AnalysisDateTimeHierarchyArgs) ToAnalysisDateTimeHierarchyOutput() AnalysisDateTimeHierarchyOutput {
	return i.ToAnalysisDateTimeHierarchyOutputWithContext(context.Background())
}

func (i AnalysisDateTimeHierarchyArgs) ToAnalysisDateTimeHierarchyOutputWithContext(ctx context.Context) AnalysisDateTimeHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeHierarchyOutput)
}

func (i AnalysisDateTimeHierarchyArgs) ToAnalysisDateTimeHierarchyPtrOutput() AnalysisDateTimeHierarchyPtrOutput {
	return i.ToAnalysisDateTimeHierarchyPtrOutputWithContext(context.Background())
}

func (i AnalysisDateTimeHierarchyArgs) ToAnalysisDateTimeHierarchyPtrOutputWithContext(ctx context.Context) AnalysisDateTimeHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeHierarchyOutput).ToAnalysisDateTimeHierarchyPtrOutputWithContext(ctx)
}

// AnalysisDateTimeHierarchyPtrInput is an input type that accepts AnalysisDateTimeHierarchyArgs, AnalysisDateTimeHierarchyPtr and AnalysisDateTimeHierarchyPtrOutput values.
// You can construct a concrete instance of `AnalysisDateTimeHierarchyPtrInput` via:
//
//	        AnalysisDateTimeHierarchyArgs{...}
//
//	or:
//
//	        nil
type AnalysisDateTimeHierarchyPtrInput interface {
	pulumi.Input

	ToAnalysisDateTimeHierarchyPtrOutput() AnalysisDateTimeHierarchyPtrOutput
	ToAnalysisDateTimeHierarchyPtrOutputWithContext(context.Context) AnalysisDateTimeHierarchyPtrOutput
}

type analysisDateTimeHierarchyPtrType AnalysisDateTimeHierarchyArgs

func AnalysisDateTimeHierarchyPtr(v *AnalysisDateTimeHierarchyArgs) AnalysisDateTimeHierarchyPtrInput {
	return (*analysisDateTimeHierarchyPtrType)(v)
}

func (*analysisDateTimeHierarchyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimeHierarchy)(nil)).Elem()
}

func (i *analysisDateTimeHierarchyPtrType) ToAnalysisDateTimeHierarchyPtrOutput() AnalysisDateTimeHierarchyPtrOutput {
	return i.ToAnalysisDateTimeHierarchyPtrOutputWithContext(context.Background())
}

func (i *analysisDateTimeHierarchyPtrType) ToAnalysisDateTimeHierarchyPtrOutputWithContext(ctx context.Context) AnalysisDateTimeHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeHierarchyPtrOutput)
}

type AnalysisDateTimeHierarchyOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeHierarchy)(nil)).Elem()
}

func (o AnalysisDateTimeHierarchyOutput) ToAnalysisDateTimeHierarchyOutput() AnalysisDateTimeHierarchyOutput {
	return o
}

func (o AnalysisDateTimeHierarchyOutput) ToAnalysisDateTimeHierarchyOutputWithContext(ctx context.Context) AnalysisDateTimeHierarchyOutput {
	return o
}

func (o AnalysisDateTimeHierarchyOutput) ToAnalysisDateTimeHierarchyPtrOutput() AnalysisDateTimeHierarchyPtrOutput {
	return o.ToAnalysisDateTimeHierarchyPtrOutputWithContext(context.Background())
}

func (o AnalysisDateTimeHierarchyOutput) ToAnalysisDateTimeHierarchyPtrOutputWithContext(ctx context.Context) AnalysisDateTimeHierarchyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDateTimeHierarchy) *AnalysisDateTimeHierarchy {
		return &v
	}).(AnalysisDateTimeHierarchyPtrOutput)
}

func (o AnalysisDateTimeHierarchyOutput) DrillDownFilters() AnalysisDrillDownFilterArrayOutput {
	return o.ApplyT(func(v AnalysisDateTimeHierarchy) []AnalysisDrillDownFilter { return v.DrillDownFilters }).(AnalysisDrillDownFilterArrayOutput)
}

func (o AnalysisDateTimeHierarchyOutput) HierarchyId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDateTimeHierarchy) string { return v.HierarchyId }).(pulumi.StringOutput)
}

type AnalysisDateTimeHierarchyPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeHierarchyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimeHierarchy)(nil)).Elem()
}

func (o AnalysisDateTimeHierarchyPtrOutput) ToAnalysisDateTimeHierarchyPtrOutput() AnalysisDateTimeHierarchyPtrOutput {
	return o
}

func (o AnalysisDateTimeHierarchyPtrOutput) ToAnalysisDateTimeHierarchyPtrOutputWithContext(ctx context.Context) AnalysisDateTimeHierarchyPtrOutput {
	return o
}

func (o AnalysisDateTimeHierarchyPtrOutput) Elem() AnalysisDateTimeHierarchyOutput {
	return o.ApplyT(func(v *AnalysisDateTimeHierarchy) AnalysisDateTimeHierarchy {
		if v != nil {
			return *v
		}
		var ret AnalysisDateTimeHierarchy
		return ret
	}).(AnalysisDateTimeHierarchyOutput)
}

func (o AnalysisDateTimeHierarchyPtrOutput) DrillDownFilters() AnalysisDrillDownFilterArrayOutput {
	return o.ApplyT(func(v *AnalysisDateTimeHierarchy) []AnalysisDrillDownFilter {
		if v == nil {
			return nil
		}
		return v.DrillDownFilters
	}).(AnalysisDrillDownFilterArrayOutput)
}

func (o AnalysisDateTimeHierarchyPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeHierarchy) *string {
		if v == nil {
			return nil
		}
		return &v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type AnalysisDateTimeParameter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// AnalysisDateTimeParameterInput is an input type that accepts AnalysisDateTimeParameterArgs and AnalysisDateTimeParameterOutput values.
// You can construct a concrete instance of `AnalysisDateTimeParameterInput` via:
//
//	AnalysisDateTimeParameterArgs{...}
type AnalysisDateTimeParameterInput interface {
	pulumi.Input

	ToAnalysisDateTimeParameterOutput() AnalysisDateTimeParameterOutput
	ToAnalysisDateTimeParameterOutputWithContext(context.Context) AnalysisDateTimeParameterOutput
}

type AnalysisDateTimeParameterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AnalysisDateTimeParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeParameter)(nil)).Elem()
}

func (i AnalysisDateTimeParameterArgs) ToAnalysisDateTimeParameterOutput() AnalysisDateTimeParameterOutput {
	return i.ToAnalysisDateTimeParameterOutputWithContext(context.Background())
}

func (i AnalysisDateTimeParameterArgs) ToAnalysisDateTimeParameterOutputWithContext(ctx context.Context) AnalysisDateTimeParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeParameterOutput)
}

// AnalysisDateTimeParameterArrayInput is an input type that accepts AnalysisDateTimeParameterArray and AnalysisDateTimeParameterArrayOutput values.
// You can construct a concrete instance of `AnalysisDateTimeParameterArrayInput` via:
//
//	AnalysisDateTimeParameterArray{ AnalysisDateTimeParameterArgs{...} }
type AnalysisDateTimeParameterArrayInput interface {
	pulumi.Input

	ToAnalysisDateTimeParameterArrayOutput() AnalysisDateTimeParameterArrayOutput
	ToAnalysisDateTimeParameterArrayOutputWithContext(context.Context) AnalysisDateTimeParameterArrayOutput
}

type AnalysisDateTimeParameterArray []AnalysisDateTimeParameterInput

func (AnalysisDateTimeParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDateTimeParameter)(nil)).Elem()
}

func (i AnalysisDateTimeParameterArray) ToAnalysisDateTimeParameterArrayOutput() AnalysisDateTimeParameterArrayOutput {
	return i.ToAnalysisDateTimeParameterArrayOutputWithContext(context.Background())
}

func (i AnalysisDateTimeParameterArray) ToAnalysisDateTimeParameterArrayOutputWithContext(ctx context.Context) AnalysisDateTimeParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeParameterArrayOutput)
}

type AnalysisDateTimeParameterOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeParameter)(nil)).Elem()
}

func (o AnalysisDateTimeParameterOutput) ToAnalysisDateTimeParameterOutput() AnalysisDateTimeParameterOutput {
	return o
}

func (o AnalysisDateTimeParameterOutput) ToAnalysisDateTimeParameterOutputWithContext(ctx context.Context) AnalysisDateTimeParameterOutput {
	return o
}

func (o AnalysisDateTimeParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDateTimeParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalysisDateTimeParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisDateTimeParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AnalysisDateTimeParameterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDateTimeParameter)(nil)).Elem()
}

func (o AnalysisDateTimeParameterArrayOutput) ToAnalysisDateTimeParameterArrayOutput() AnalysisDateTimeParameterArrayOutput {
	return o
}

func (o AnalysisDateTimeParameterArrayOutput) ToAnalysisDateTimeParameterArrayOutputWithContext(ctx context.Context) AnalysisDateTimeParameterArrayOutput {
	return o
}

func (o AnalysisDateTimeParameterArrayOutput) Index(i pulumi.IntInput) AnalysisDateTimeParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDateTimeParameter {
		return vs[0].([]AnalysisDateTimeParameter)[vs[1].(int)]
	}).(AnalysisDateTimeParameterOutput)
}

type AnalysisDateTimeParameterDeclaration struct {
	DefaultValues           *AnalysisDateTimeDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []AnalysisMappedDataSetParameter             `pulumi:"mappedDataSetParameters"`
	Name                    string                                       `pulumi:"name"`
	TimeGranularity         *AnalysisTimeGranularity                     `pulumi:"timeGranularity"`
	ValueWhenUnset          *AnalysisDateTimeValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// AnalysisDateTimeParameterDeclarationInput is an input type that accepts AnalysisDateTimeParameterDeclarationArgs and AnalysisDateTimeParameterDeclarationOutput values.
// You can construct a concrete instance of `AnalysisDateTimeParameterDeclarationInput` via:
//
//	AnalysisDateTimeParameterDeclarationArgs{...}
type AnalysisDateTimeParameterDeclarationInput interface {
	pulumi.Input

	ToAnalysisDateTimeParameterDeclarationOutput() AnalysisDateTimeParameterDeclarationOutput
	ToAnalysisDateTimeParameterDeclarationOutputWithContext(context.Context) AnalysisDateTimeParameterDeclarationOutput
}

type AnalysisDateTimeParameterDeclarationArgs struct {
	DefaultValues           AnalysisDateTimeDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters AnalysisMappedDataSetParameterArrayInput            `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                  `pulumi:"name"`
	TimeGranularity         AnalysisTimeGranularityPtrInput                     `pulumi:"timeGranularity"`
	ValueWhenUnset          AnalysisDateTimeValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (AnalysisDateTimeParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeParameterDeclaration)(nil)).Elem()
}

func (i AnalysisDateTimeParameterDeclarationArgs) ToAnalysisDateTimeParameterDeclarationOutput() AnalysisDateTimeParameterDeclarationOutput {
	return i.ToAnalysisDateTimeParameterDeclarationOutputWithContext(context.Background())
}

func (i AnalysisDateTimeParameterDeclarationArgs) ToAnalysisDateTimeParameterDeclarationOutputWithContext(ctx context.Context) AnalysisDateTimeParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeParameterDeclarationOutput)
}

func (i AnalysisDateTimeParameterDeclarationArgs) ToAnalysisDateTimeParameterDeclarationPtrOutput() AnalysisDateTimeParameterDeclarationPtrOutput {
	return i.ToAnalysisDateTimeParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i AnalysisDateTimeParameterDeclarationArgs) ToAnalysisDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeParameterDeclarationOutput).ToAnalysisDateTimeParameterDeclarationPtrOutputWithContext(ctx)
}

// AnalysisDateTimeParameterDeclarationPtrInput is an input type that accepts AnalysisDateTimeParameterDeclarationArgs, AnalysisDateTimeParameterDeclarationPtr and AnalysisDateTimeParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `AnalysisDateTimeParameterDeclarationPtrInput` via:
//
//	        AnalysisDateTimeParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDateTimeParameterDeclarationPtrInput interface {
	pulumi.Input

	ToAnalysisDateTimeParameterDeclarationPtrOutput() AnalysisDateTimeParameterDeclarationPtrOutput
	ToAnalysisDateTimeParameterDeclarationPtrOutputWithContext(context.Context) AnalysisDateTimeParameterDeclarationPtrOutput
}

type analysisDateTimeParameterDeclarationPtrType AnalysisDateTimeParameterDeclarationArgs

func AnalysisDateTimeParameterDeclarationPtr(v *AnalysisDateTimeParameterDeclarationArgs) AnalysisDateTimeParameterDeclarationPtrInput {
	return (*analysisDateTimeParameterDeclarationPtrType)(v)
}

func (*analysisDateTimeParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimeParameterDeclaration)(nil)).Elem()
}

func (i *analysisDateTimeParameterDeclarationPtrType) ToAnalysisDateTimeParameterDeclarationPtrOutput() AnalysisDateTimeParameterDeclarationPtrOutput {
	return i.ToAnalysisDateTimeParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *analysisDateTimeParameterDeclarationPtrType) ToAnalysisDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeParameterDeclarationPtrOutput)
}

type AnalysisDateTimeParameterDeclarationOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeParameterDeclaration)(nil)).Elem()
}

func (o AnalysisDateTimeParameterDeclarationOutput) ToAnalysisDateTimeParameterDeclarationOutput() AnalysisDateTimeParameterDeclarationOutput {
	return o
}

func (o AnalysisDateTimeParameterDeclarationOutput) ToAnalysisDateTimeParameterDeclarationOutputWithContext(ctx context.Context) AnalysisDateTimeParameterDeclarationOutput {
	return o
}

func (o AnalysisDateTimeParameterDeclarationOutput) ToAnalysisDateTimeParameterDeclarationPtrOutput() AnalysisDateTimeParameterDeclarationPtrOutput {
	return o.ToAnalysisDateTimeParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o AnalysisDateTimeParameterDeclarationOutput) ToAnalysisDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDateTimeParameterDeclaration) *AnalysisDateTimeParameterDeclaration {
		return &v
	}).(AnalysisDateTimeParameterDeclarationPtrOutput)
}

func (o AnalysisDateTimeParameterDeclarationOutput) DefaultValues() AnalysisDateTimeDefaultValuesPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimeParameterDeclaration) *AnalysisDateTimeDefaultValues { return v.DefaultValues }).(AnalysisDateTimeDefaultValuesPtrOutput)
}

func (o AnalysisDateTimeParameterDeclarationOutput) MappedDataSetParameters() AnalysisMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v AnalysisDateTimeParameterDeclaration) []AnalysisMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(AnalysisMappedDataSetParameterArrayOutput)
}

func (o AnalysisDateTimeParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDateTimeParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalysisDateTimeParameterDeclarationOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimeParameterDeclaration) *AnalysisTimeGranularity { return v.TimeGranularity }).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisDateTimeParameterDeclarationOutput) ValueWhenUnset() AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimeParameterDeclaration) *AnalysisDateTimeValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisDateTimeParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimeParameterDeclaration)(nil)).Elem()
}

func (o AnalysisDateTimeParameterDeclarationPtrOutput) ToAnalysisDateTimeParameterDeclarationPtrOutput() AnalysisDateTimeParameterDeclarationPtrOutput {
	return o
}

func (o AnalysisDateTimeParameterDeclarationPtrOutput) ToAnalysisDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeParameterDeclarationPtrOutput {
	return o
}

func (o AnalysisDateTimeParameterDeclarationPtrOutput) Elem() AnalysisDateTimeParameterDeclarationOutput {
	return o.ApplyT(func(v *AnalysisDateTimeParameterDeclaration) AnalysisDateTimeParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret AnalysisDateTimeParameterDeclaration
		return ret
	}).(AnalysisDateTimeParameterDeclarationOutput)
}

func (o AnalysisDateTimeParameterDeclarationPtrOutput) DefaultValues() AnalysisDateTimeDefaultValuesPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeParameterDeclaration) *AnalysisDateTimeDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(AnalysisDateTimeDefaultValuesPtrOutput)
}

func (o AnalysisDateTimeParameterDeclarationPtrOutput) MappedDataSetParameters() AnalysisMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisDateTimeParameterDeclaration) []AnalysisMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(AnalysisMappedDataSetParameterArrayOutput)
}

func (o AnalysisDateTimeParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDateTimeParameterDeclarationPtrOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeParameterDeclaration) *AnalysisTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisDateTimeParameterDeclarationPtrOutput) ValueWhenUnset() AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeParameterDeclaration) *AnalysisDateTimeValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisDateTimePickerControlDisplayOptions struct {
	DateTimeFormat *string               `pulumi:"dateTimeFormat"`
	TitleOptions   *AnalysisLabelOptions `pulumi:"titleOptions"`
}

// AnalysisDateTimePickerControlDisplayOptionsInput is an input type that accepts AnalysisDateTimePickerControlDisplayOptionsArgs and AnalysisDateTimePickerControlDisplayOptionsOutput values.
// You can construct a concrete instance of `AnalysisDateTimePickerControlDisplayOptionsInput` via:
//
//	AnalysisDateTimePickerControlDisplayOptionsArgs{...}
type AnalysisDateTimePickerControlDisplayOptionsInput interface {
	pulumi.Input

	ToAnalysisDateTimePickerControlDisplayOptionsOutput() AnalysisDateTimePickerControlDisplayOptionsOutput
	ToAnalysisDateTimePickerControlDisplayOptionsOutputWithContext(context.Context) AnalysisDateTimePickerControlDisplayOptionsOutput
}

type AnalysisDateTimePickerControlDisplayOptionsArgs struct {
	DateTimeFormat pulumi.StringPtrInput        `pulumi:"dateTimeFormat"`
	TitleOptions   AnalysisLabelOptionsPtrInput `pulumi:"titleOptions"`
}

func (AnalysisDateTimePickerControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (i AnalysisDateTimePickerControlDisplayOptionsArgs) ToAnalysisDateTimePickerControlDisplayOptionsOutput() AnalysisDateTimePickerControlDisplayOptionsOutput {
	return i.ToAnalysisDateTimePickerControlDisplayOptionsOutputWithContext(context.Background())
}

func (i AnalysisDateTimePickerControlDisplayOptionsArgs) ToAnalysisDateTimePickerControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisDateTimePickerControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimePickerControlDisplayOptionsOutput)
}

func (i AnalysisDateTimePickerControlDisplayOptionsArgs) ToAnalysisDateTimePickerControlDisplayOptionsPtrOutput() AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return i.ToAnalysisDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisDateTimePickerControlDisplayOptionsArgs) ToAnalysisDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimePickerControlDisplayOptionsOutput).ToAnalysisDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx)
}

// AnalysisDateTimePickerControlDisplayOptionsPtrInput is an input type that accepts AnalysisDateTimePickerControlDisplayOptionsArgs, AnalysisDateTimePickerControlDisplayOptionsPtr and AnalysisDateTimePickerControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisDateTimePickerControlDisplayOptionsPtrInput` via:
//
//	        AnalysisDateTimePickerControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisDateTimePickerControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisDateTimePickerControlDisplayOptionsPtrOutput() AnalysisDateTimePickerControlDisplayOptionsPtrOutput
	ToAnalysisDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Context) AnalysisDateTimePickerControlDisplayOptionsPtrOutput
}

type analysisDateTimePickerControlDisplayOptionsPtrType AnalysisDateTimePickerControlDisplayOptionsArgs

func AnalysisDateTimePickerControlDisplayOptionsPtr(v *AnalysisDateTimePickerControlDisplayOptionsArgs) AnalysisDateTimePickerControlDisplayOptionsPtrInput {
	return (*analysisDateTimePickerControlDisplayOptionsPtrType)(v)
}

func (*analysisDateTimePickerControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (i *analysisDateTimePickerControlDisplayOptionsPtrType) ToAnalysisDateTimePickerControlDisplayOptionsPtrOutput() AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return i.ToAnalysisDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisDateTimePickerControlDisplayOptionsPtrType) ToAnalysisDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimePickerControlDisplayOptionsPtrOutput)
}

type AnalysisDateTimePickerControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimePickerControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisDateTimePickerControlDisplayOptionsOutput) ToAnalysisDateTimePickerControlDisplayOptionsOutput() AnalysisDateTimePickerControlDisplayOptionsOutput {
	return o
}

func (o AnalysisDateTimePickerControlDisplayOptionsOutput) ToAnalysisDateTimePickerControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisDateTimePickerControlDisplayOptionsOutput {
	return o
}

func (o AnalysisDateTimePickerControlDisplayOptionsOutput) ToAnalysisDateTimePickerControlDisplayOptionsPtrOutput() AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ToAnalysisDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisDateTimePickerControlDisplayOptionsOutput) ToAnalysisDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDateTimePickerControlDisplayOptions) *AnalysisDateTimePickerControlDisplayOptions {
		return &v
	}).(AnalysisDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o AnalysisDateTimePickerControlDisplayOptionsOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimePickerControlDisplayOptions) *string { return v.DateTimeFormat }).(pulumi.StringPtrOutput)
}

func (o AnalysisDateTimePickerControlDisplayOptionsOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimePickerControlDisplayOptions) *AnalysisLabelOptions { return v.TitleOptions }).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisDateTimePickerControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimePickerControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisDateTimePickerControlDisplayOptionsPtrOutput) ToAnalysisDateTimePickerControlDisplayOptionsPtrOutput() AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisDateTimePickerControlDisplayOptionsPtrOutput) ToAnalysisDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisDateTimePickerControlDisplayOptionsPtrOutput) Elem() AnalysisDateTimePickerControlDisplayOptionsOutput {
	return o.ApplyT(func(v *AnalysisDateTimePickerControlDisplayOptions) AnalysisDateTimePickerControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisDateTimePickerControlDisplayOptions
		return ret
	}).(AnalysisDateTimePickerControlDisplayOptionsOutput)
}

func (o AnalysisDateTimePickerControlDisplayOptionsPtrOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimePickerControlDisplayOptions) *string {
		if v == nil {
			return nil
		}
		return v.DateTimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDateTimePickerControlDisplayOptionsPtrOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimePickerControlDisplayOptions) *AnalysisLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisDateTimeValueWhenUnsetConfiguration struct {
	CustomValue          *string                       `pulumi:"customValue"`
	ValueWhenUnsetOption *AnalysisValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// AnalysisDateTimeValueWhenUnsetConfigurationInput is an input type that accepts AnalysisDateTimeValueWhenUnsetConfigurationArgs and AnalysisDateTimeValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDateTimeValueWhenUnsetConfigurationInput` via:
//
//	AnalysisDateTimeValueWhenUnsetConfigurationArgs{...}
type AnalysisDateTimeValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToAnalysisDateTimeValueWhenUnsetConfigurationOutput() AnalysisDateTimeValueWhenUnsetConfigurationOutput
	ToAnalysisDateTimeValueWhenUnsetConfigurationOutputWithContext(context.Context) AnalysisDateTimeValueWhenUnsetConfigurationOutput
}

type AnalysisDateTimeValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.StringPtrInput                `pulumi:"customValue"`
	ValueWhenUnsetOption AnalysisValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (AnalysisDateTimeValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i AnalysisDateTimeValueWhenUnsetConfigurationArgs) ToAnalysisDateTimeValueWhenUnsetConfigurationOutput() AnalysisDateTimeValueWhenUnsetConfigurationOutput {
	return i.ToAnalysisDateTimeValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDateTimeValueWhenUnsetConfigurationArgs) ToAnalysisDateTimeValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) AnalysisDateTimeValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeValueWhenUnsetConfigurationOutput)
}

func (i AnalysisDateTimeValueWhenUnsetConfigurationArgs) ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutput() AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput {
	return i.ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisDateTimeValueWhenUnsetConfigurationArgs) ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeValueWhenUnsetConfigurationOutput).ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// AnalysisDateTimeValueWhenUnsetConfigurationPtrInput is an input type that accepts AnalysisDateTimeValueWhenUnsetConfigurationArgs, AnalysisDateTimeValueWhenUnsetConfigurationPtr and AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisDateTimeValueWhenUnsetConfigurationPtrInput` via:
//
//	        AnalysisDateTimeValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDateTimeValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutput() AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput
	ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput
}

type analysisDateTimeValueWhenUnsetConfigurationPtrType AnalysisDateTimeValueWhenUnsetConfigurationArgs

func AnalysisDateTimeValueWhenUnsetConfigurationPtr(v *AnalysisDateTimeValueWhenUnsetConfigurationArgs) AnalysisDateTimeValueWhenUnsetConfigurationPtrInput {
	return (*analysisDateTimeValueWhenUnsetConfigurationPtrType)(v)
}

func (*analysisDateTimeValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *analysisDateTimeValueWhenUnsetConfigurationPtrType) ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutput() AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput {
	return i.ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisDateTimeValueWhenUnsetConfigurationPtrType) ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisDateTimeValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationOutput) ToAnalysisDateTimeValueWhenUnsetConfigurationOutput() AnalysisDateTimeValueWhenUnsetConfigurationOutput {
	return o
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationOutput) ToAnalysisDateTimeValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) AnalysisDateTimeValueWhenUnsetConfigurationOutput {
	return o
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationOutput) ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutput() AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationOutput) ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDateTimeValueWhenUnsetConfiguration) *AnalysisDateTimeValueWhenUnsetConfiguration {
		return &v
	}).(AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput)
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimeValueWhenUnsetConfiguration) *string { return v.CustomValue }).(pulumi.StringPtrOutput)
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() AnalysisValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v AnalysisDateTimeValueWhenUnsetConfiguration) *AnalysisValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(AnalysisValueWhenUnsetOptionPtrOutput)
}

type AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput) ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutput() AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput) ToAnalysisDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput) Elem() AnalysisDateTimeValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *AnalysisDateTimeValueWhenUnsetConfiguration) AnalysisDateTimeValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisDateTimeValueWhenUnsetConfiguration
		return ret
	}).(AnalysisDateTimeValueWhenUnsetConfigurationOutput)
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeValueWhenUnsetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() AnalysisValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisDateTimeValueWhenUnsetConfiguration) *AnalysisValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(AnalysisValueWhenUnsetOptionPtrOutput)
}

type AnalysisDecimalDefaultValues struct {
	DynamicValue *AnalysisDynamicDefaultValue `pulumi:"dynamicValue"`
	StaticValues []float64                    `pulumi:"staticValues"`
}

// AnalysisDecimalDefaultValuesInput is an input type that accepts AnalysisDecimalDefaultValuesArgs and AnalysisDecimalDefaultValuesOutput values.
// You can construct a concrete instance of `AnalysisDecimalDefaultValuesInput` via:
//
//	AnalysisDecimalDefaultValuesArgs{...}
type AnalysisDecimalDefaultValuesInput interface {
	pulumi.Input

	ToAnalysisDecimalDefaultValuesOutput() AnalysisDecimalDefaultValuesOutput
	ToAnalysisDecimalDefaultValuesOutputWithContext(context.Context) AnalysisDecimalDefaultValuesOutput
}

type AnalysisDecimalDefaultValuesArgs struct {
	DynamicValue AnalysisDynamicDefaultValuePtrInput `pulumi:"dynamicValue"`
	StaticValues pulumi.Float64ArrayInput            `pulumi:"staticValues"`
}

func (AnalysisDecimalDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalDefaultValues)(nil)).Elem()
}

func (i AnalysisDecimalDefaultValuesArgs) ToAnalysisDecimalDefaultValuesOutput() AnalysisDecimalDefaultValuesOutput {
	return i.ToAnalysisDecimalDefaultValuesOutputWithContext(context.Background())
}

func (i AnalysisDecimalDefaultValuesArgs) ToAnalysisDecimalDefaultValuesOutputWithContext(ctx context.Context) AnalysisDecimalDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalDefaultValuesOutput)
}

func (i AnalysisDecimalDefaultValuesArgs) ToAnalysisDecimalDefaultValuesPtrOutput() AnalysisDecimalDefaultValuesPtrOutput {
	return i.ToAnalysisDecimalDefaultValuesPtrOutputWithContext(context.Background())
}

func (i AnalysisDecimalDefaultValuesArgs) ToAnalysisDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisDecimalDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalDefaultValuesOutput).ToAnalysisDecimalDefaultValuesPtrOutputWithContext(ctx)
}

// AnalysisDecimalDefaultValuesPtrInput is an input type that accepts AnalysisDecimalDefaultValuesArgs, AnalysisDecimalDefaultValuesPtr and AnalysisDecimalDefaultValuesPtrOutput values.
// You can construct a concrete instance of `AnalysisDecimalDefaultValuesPtrInput` via:
//
//	        AnalysisDecimalDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type AnalysisDecimalDefaultValuesPtrInput interface {
	pulumi.Input

	ToAnalysisDecimalDefaultValuesPtrOutput() AnalysisDecimalDefaultValuesPtrOutput
	ToAnalysisDecimalDefaultValuesPtrOutputWithContext(context.Context) AnalysisDecimalDefaultValuesPtrOutput
}

type analysisDecimalDefaultValuesPtrType AnalysisDecimalDefaultValuesArgs

func AnalysisDecimalDefaultValuesPtr(v *AnalysisDecimalDefaultValuesArgs) AnalysisDecimalDefaultValuesPtrInput {
	return (*analysisDecimalDefaultValuesPtrType)(v)
}

func (*analysisDecimalDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDecimalDefaultValues)(nil)).Elem()
}

func (i *analysisDecimalDefaultValuesPtrType) ToAnalysisDecimalDefaultValuesPtrOutput() AnalysisDecimalDefaultValuesPtrOutput {
	return i.ToAnalysisDecimalDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *analysisDecimalDefaultValuesPtrType) ToAnalysisDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisDecimalDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalDefaultValuesPtrOutput)
}

type AnalysisDecimalDefaultValuesOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalDefaultValues)(nil)).Elem()
}

func (o AnalysisDecimalDefaultValuesOutput) ToAnalysisDecimalDefaultValuesOutput() AnalysisDecimalDefaultValuesOutput {
	return o
}

func (o AnalysisDecimalDefaultValuesOutput) ToAnalysisDecimalDefaultValuesOutputWithContext(ctx context.Context) AnalysisDecimalDefaultValuesOutput {
	return o
}

func (o AnalysisDecimalDefaultValuesOutput) ToAnalysisDecimalDefaultValuesPtrOutput() AnalysisDecimalDefaultValuesPtrOutput {
	return o.ToAnalysisDecimalDefaultValuesPtrOutputWithContext(context.Background())
}

func (o AnalysisDecimalDefaultValuesOutput) ToAnalysisDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisDecimalDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDecimalDefaultValues) *AnalysisDecimalDefaultValues {
		return &v
	}).(AnalysisDecimalDefaultValuesPtrOutput)
}

func (o AnalysisDecimalDefaultValuesOutput) DynamicValue() AnalysisDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v AnalysisDecimalDefaultValues) *AnalysisDynamicDefaultValue { return v.DynamicValue }).(AnalysisDynamicDefaultValuePtrOutput)
}

func (o AnalysisDecimalDefaultValuesOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v AnalysisDecimalDefaultValues) []float64 { return v.StaticValues }).(pulumi.Float64ArrayOutput)
}

type AnalysisDecimalDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDecimalDefaultValues)(nil)).Elem()
}

func (o AnalysisDecimalDefaultValuesPtrOutput) ToAnalysisDecimalDefaultValuesPtrOutput() AnalysisDecimalDefaultValuesPtrOutput {
	return o
}

func (o AnalysisDecimalDefaultValuesPtrOutput) ToAnalysisDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisDecimalDefaultValuesPtrOutput {
	return o
}

func (o AnalysisDecimalDefaultValuesPtrOutput) Elem() AnalysisDecimalDefaultValuesOutput {
	return o.ApplyT(func(v *AnalysisDecimalDefaultValues) AnalysisDecimalDefaultValues {
		if v != nil {
			return *v
		}
		var ret AnalysisDecimalDefaultValues
		return ret
	}).(AnalysisDecimalDefaultValuesOutput)
}

func (o AnalysisDecimalDefaultValuesPtrOutput) DynamicValue() AnalysisDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *AnalysisDecimalDefaultValues) *AnalysisDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(AnalysisDynamicDefaultValuePtrOutput)
}

func (o AnalysisDecimalDefaultValuesPtrOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *AnalysisDecimalDefaultValues) []float64 {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.Float64ArrayOutput)
}

type AnalysisDecimalParameter struct {
	Name   string    `pulumi:"name"`
	Values []float64 `pulumi:"values"`
}

// AnalysisDecimalParameterInput is an input type that accepts AnalysisDecimalParameterArgs and AnalysisDecimalParameterOutput values.
// You can construct a concrete instance of `AnalysisDecimalParameterInput` via:
//
//	AnalysisDecimalParameterArgs{...}
type AnalysisDecimalParameterInput interface {
	pulumi.Input

	ToAnalysisDecimalParameterOutput() AnalysisDecimalParameterOutput
	ToAnalysisDecimalParameterOutputWithContext(context.Context) AnalysisDecimalParameterOutput
}

type AnalysisDecimalParameterArgs struct {
	Name   pulumi.StringInput       `pulumi:"name"`
	Values pulumi.Float64ArrayInput `pulumi:"values"`
}

func (AnalysisDecimalParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalParameter)(nil)).Elem()
}

func (i AnalysisDecimalParameterArgs) ToAnalysisDecimalParameterOutput() AnalysisDecimalParameterOutput {
	return i.ToAnalysisDecimalParameterOutputWithContext(context.Background())
}

func (i AnalysisDecimalParameterArgs) ToAnalysisDecimalParameterOutputWithContext(ctx context.Context) AnalysisDecimalParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalParameterOutput)
}

// AnalysisDecimalParameterArrayInput is an input type that accepts AnalysisDecimalParameterArray and AnalysisDecimalParameterArrayOutput values.
// You can construct a concrete instance of `AnalysisDecimalParameterArrayInput` via:
//
//	AnalysisDecimalParameterArray{ AnalysisDecimalParameterArgs{...} }
type AnalysisDecimalParameterArrayInput interface {
	pulumi.Input

	ToAnalysisDecimalParameterArrayOutput() AnalysisDecimalParameterArrayOutput
	ToAnalysisDecimalParameterArrayOutputWithContext(context.Context) AnalysisDecimalParameterArrayOutput
}

type AnalysisDecimalParameterArray []AnalysisDecimalParameterInput

func (AnalysisDecimalParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDecimalParameter)(nil)).Elem()
}

func (i AnalysisDecimalParameterArray) ToAnalysisDecimalParameterArrayOutput() AnalysisDecimalParameterArrayOutput {
	return i.ToAnalysisDecimalParameterArrayOutputWithContext(context.Background())
}

func (i AnalysisDecimalParameterArray) ToAnalysisDecimalParameterArrayOutputWithContext(ctx context.Context) AnalysisDecimalParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalParameterArrayOutput)
}

type AnalysisDecimalParameterOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalParameter)(nil)).Elem()
}

func (o AnalysisDecimalParameterOutput) ToAnalysisDecimalParameterOutput() AnalysisDecimalParameterOutput {
	return o
}

func (o AnalysisDecimalParameterOutput) ToAnalysisDecimalParameterOutputWithContext(ctx context.Context) AnalysisDecimalParameterOutput {
	return o
}

func (o AnalysisDecimalParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDecimalParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalysisDecimalParameterOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v AnalysisDecimalParameter) []float64 { return v.Values }).(pulumi.Float64ArrayOutput)
}

type AnalysisDecimalParameterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDecimalParameter)(nil)).Elem()
}

func (o AnalysisDecimalParameterArrayOutput) ToAnalysisDecimalParameterArrayOutput() AnalysisDecimalParameterArrayOutput {
	return o
}

func (o AnalysisDecimalParameterArrayOutput) ToAnalysisDecimalParameterArrayOutputWithContext(ctx context.Context) AnalysisDecimalParameterArrayOutput {
	return o
}

func (o AnalysisDecimalParameterArrayOutput) Index(i pulumi.IntInput) AnalysisDecimalParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDecimalParameter {
		return vs[0].([]AnalysisDecimalParameter)[vs[1].(int)]
	}).(AnalysisDecimalParameterOutput)
}

type AnalysisDecimalParameterDeclaration struct {
	DefaultValues           *AnalysisDecimalDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []AnalysisMappedDataSetParameter            `pulumi:"mappedDataSetParameters"`
	Name                    string                                      `pulumi:"name"`
	ParameterValueType      AnalysisParameterValueType                  `pulumi:"parameterValueType"`
	ValueWhenUnset          *AnalysisDecimalValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// AnalysisDecimalParameterDeclarationInput is an input type that accepts AnalysisDecimalParameterDeclarationArgs and AnalysisDecimalParameterDeclarationOutput values.
// You can construct a concrete instance of `AnalysisDecimalParameterDeclarationInput` via:
//
//	AnalysisDecimalParameterDeclarationArgs{...}
type AnalysisDecimalParameterDeclarationInput interface {
	pulumi.Input

	ToAnalysisDecimalParameterDeclarationOutput() AnalysisDecimalParameterDeclarationOutput
	ToAnalysisDecimalParameterDeclarationOutputWithContext(context.Context) AnalysisDecimalParameterDeclarationOutput
}

type AnalysisDecimalParameterDeclarationArgs struct {
	DefaultValues           AnalysisDecimalDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters AnalysisMappedDataSetParameterArrayInput           `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                 `pulumi:"name"`
	ParameterValueType      AnalysisParameterValueTypeInput                    `pulumi:"parameterValueType"`
	ValueWhenUnset          AnalysisDecimalValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (AnalysisDecimalParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalParameterDeclaration)(nil)).Elem()
}

func (i AnalysisDecimalParameterDeclarationArgs) ToAnalysisDecimalParameterDeclarationOutput() AnalysisDecimalParameterDeclarationOutput {
	return i.ToAnalysisDecimalParameterDeclarationOutputWithContext(context.Background())
}

func (i AnalysisDecimalParameterDeclarationArgs) ToAnalysisDecimalParameterDeclarationOutputWithContext(ctx context.Context) AnalysisDecimalParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalParameterDeclarationOutput)
}

func (i AnalysisDecimalParameterDeclarationArgs) ToAnalysisDecimalParameterDeclarationPtrOutput() AnalysisDecimalParameterDeclarationPtrOutput {
	return i.ToAnalysisDecimalParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i AnalysisDecimalParameterDeclarationArgs) ToAnalysisDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisDecimalParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalParameterDeclarationOutput).ToAnalysisDecimalParameterDeclarationPtrOutputWithContext(ctx)
}

// AnalysisDecimalParameterDeclarationPtrInput is an input type that accepts AnalysisDecimalParameterDeclarationArgs, AnalysisDecimalParameterDeclarationPtr and AnalysisDecimalParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `AnalysisDecimalParameterDeclarationPtrInput` via:
//
//	        AnalysisDecimalParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDecimalParameterDeclarationPtrInput interface {
	pulumi.Input

	ToAnalysisDecimalParameterDeclarationPtrOutput() AnalysisDecimalParameterDeclarationPtrOutput
	ToAnalysisDecimalParameterDeclarationPtrOutputWithContext(context.Context) AnalysisDecimalParameterDeclarationPtrOutput
}

type analysisDecimalParameterDeclarationPtrType AnalysisDecimalParameterDeclarationArgs

func AnalysisDecimalParameterDeclarationPtr(v *AnalysisDecimalParameterDeclarationArgs) AnalysisDecimalParameterDeclarationPtrInput {
	return (*analysisDecimalParameterDeclarationPtrType)(v)
}

func (*analysisDecimalParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDecimalParameterDeclaration)(nil)).Elem()
}

func (i *analysisDecimalParameterDeclarationPtrType) ToAnalysisDecimalParameterDeclarationPtrOutput() AnalysisDecimalParameterDeclarationPtrOutput {
	return i.ToAnalysisDecimalParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *analysisDecimalParameterDeclarationPtrType) ToAnalysisDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisDecimalParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalParameterDeclarationPtrOutput)
}

type AnalysisDecimalParameterDeclarationOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalParameterDeclaration)(nil)).Elem()
}

func (o AnalysisDecimalParameterDeclarationOutput) ToAnalysisDecimalParameterDeclarationOutput() AnalysisDecimalParameterDeclarationOutput {
	return o
}

func (o AnalysisDecimalParameterDeclarationOutput) ToAnalysisDecimalParameterDeclarationOutputWithContext(ctx context.Context) AnalysisDecimalParameterDeclarationOutput {
	return o
}

func (o AnalysisDecimalParameterDeclarationOutput) ToAnalysisDecimalParameterDeclarationPtrOutput() AnalysisDecimalParameterDeclarationPtrOutput {
	return o.ToAnalysisDecimalParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o AnalysisDecimalParameterDeclarationOutput) ToAnalysisDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisDecimalParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDecimalParameterDeclaration) *AnalysisDecimalParameterDeclaration {
		return &v
	}).(AnalysisDecimalParameterDeclarationPtrOutput)
}

func (o AnalysisDecimalParameterDeclarationOutput) DefaultValues() AnalysisDecimalDefaultValuesPtrOutput {
	return o.ApplyT(func(v AnalysisDecimalParameterDeclaration) *AnalysisDecimalDefaultValues { return v.DefaultValues }).(AnalysisDecimalDefaultValuesPtrOutput)
}

func (o AnalysisDecimalParameterDeclarationOutput) MappedDataSetParameters() AnalysisMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v AnalysisDecimalParameterDeclaration) []AnalysisMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(AnalysisMappedDataSetParameterArrayOutput)
}

func (o AnalysisDecimalParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisDecimalParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalysisDecimalParameterDeclarationOutput) ParameterValueType() AnalysisParameterValueTypeOutput {
	return o.ApplyT(func(v AnalysisDecimalParameterDeclaration) AnalysisParameterValueType { return v.ParameterValueType }).(AnalysisParameterValueTypeOutput)
}

func (o AnalysisDecimalParameterDeclarationOutput) ValueWhenUnset() AnalysisDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDecimalParameterDeclaration) *AnalysisDecimalValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(AnalysisDecimalValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisDecimalParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDecimalParameterDeclaration)(nil)).Elem()
}

func (o AnalysisDecimalParameterDeclarationPtrOutput) ToAnalysisDecimalParameterDeclarationPtrOutput() AnalysisDecimalParameterDeclarationPtrOutput {
	return o
}

func (o AnalysisDecimalParameterDeclarationPtrOutput) ToAnalysisDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisDecimalParameterDeclarationPtrOutput {
	return o
}

func (o AnalysisDecimalParameterDeclarationPtrOutput) Elem() AnalysisDecimalParameterDeclarationOutput {
	return o.ApplyT(func(v *AnalysisDecimalParameterDeclaration) AnalysisDecimalParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret AnalysisDecimalParameterDeclaration
		return ret
	}).(AnalysisDecimalParameterDeclarationOutput)
}

func (o AnalysisDecimalParameterDeclarationPtrOutput) DefaultValues() AnalysisDecimalDefaultValuesPtrOutput {
	return o.ApplyT(func(v *AnalysisDecimalParameterDeclaration) *AnalysisDecimalDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(AnalysisDecimalDefaultValuesPtrOutput)
}

func (o AnalysisDecimalParameterDeclarationPtrOutput) MappedDataSetParameters() AnalysisMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisDecimalParameterDeclaration) []AnalysisMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(AnalysisMappedDataSetParameterArrayOutput)
}

func (o AnalysisDecimalParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisDecimalParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisDecimalParameterDeclarationPtrOutput) ParameterValueType() AnalysisParameterValueTypePtrOutput {
	return o.ApplyT(func(v *AnalysisDecimalParameterDeclaration) *AnalysisParameterValueType {
		if v == nil {
			return nil
		}
		return &v.ParameterValueType
	}).(AnalysisParameterValueTypePtrOutput)
}

func (o AnalysisDecimalParameterDeclarationPtrOutput) ValueWhenUnset() AnalysisDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDecimalParameterDeclaration) *AnalysisDecimalValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(AnalysisDecimalValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisDecimalPlacesConfiguration struct {
	DecimalPlaces float64 `pulumi:"decimalPlaces"`
}

// AnalysisDecimalPlacesConfigurationInput is an input type that accepts AnalysisDecimalPlacesConfigurationArgs and AnalysisDecimalPlacesConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDecimalPlacesConfigurationInput` via:
//
//	AnalysisDecimalPlacesConfigurationArgs{...}
type AnalysisDecimalPlacesConfigurationInput interface {
	pulumi.Input

	ToAnalysisDecimalPlacesConfigurationOutput() AnalysisDecimalPlacesConfigurationOutput
	ToAnalysisDecimalPlacesConfigurationOutputWithContext(context.Context) AnalysisDecimalPlacesConfigurationOutput
}

type AnalysisDecimalPlacesConfigurationArgs struct {
	DecimalPlaces pulumi.Float64Input `pulumi:"decimalPlaces"`
}

func (AnalysisDecimalPlacesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalPlacesConfiguration)(nil)).Elem()
}

func (i AnalysisDecimalPlacesConfigurationArgs) ToAnalysisDecimalPlacesConfigurationOutput() AnalysisDecimalPlacesConfigurationOutput {
	return i.ToAnalysisDecimalPlacesConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDecimalPlacesConfigurationArgs) ToAnalysisDecimalPlacesConfigurationOutputWithContext(ctx context.Context) AnalysisDecimalPlacesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalPlacesConfigurationOutput)
}

func (i AnalysisDecimalPlacesConfigurationArgs) ToAnalysisDecimalPlacesConfigurationPtrOutput() AnalysisDecimalPlacesConfigurationPtrOutput {
	return i.ToAnalysisDecimalPlacesConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisDecimalPlacesConfigurationArgs) ToAnalysisDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDecimalPlacesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalPlacesConfigurationOutput).ToAnalysisDecimalPlacesConfigurationPtrOutputWithContext(ctx)
}

// AnalysisDecimalPlacesConfigurationPtrInput is an input type that accepts AnalysisDecimalPlacesConfigurationArgs, AnalysisDecimalPlacesConfigurationPtr and AnalysisDecimalPlacesConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisDecimalPlacesConfigurationPtrInput` via:
//
//	        AnalysisDecimalPlacesConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDecimalPlacesConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisDecimalPlacesConfigurationPtrOutput() AnalysisDecimalPlacesConfigurationPtrOutput
	ToAnalysisDecimalPlacesConfigurationPtrOutputWithContext(context.Context) AnalysisDecimalPlacesConfigurationPtrOutput
}

type analysisDecimalPlacesConfigurationPtrType AnalysisDecimalPlacesConfigurationArgs

func AnalysisDecimalPlacesConfigurationPtr(v *AnalysisDecimalPlacesConfigurationArgs) AnalysisDecimalPlacesConfigurationPtrInput {
	return (*analysisDecimalPlacesConfigurationPtrType)(v)
}

func (*analysisDecimalPlacesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDecimalPlacesConfiguration)(nil)).Elem()
}

func (i *analysisDecimalPlacesConfigurationPtrType) ToAnalysisDecimalPlacesConfigurationPtrOutput() AnalysisDecimalPlacesConfigurationPtrOutput {
	return i.ToAnalysisDecimalPlacesConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisDecimalPlacesConfigurationPtrType) ToAnalysisDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDecimalPlacesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalPlacesConfigurationPtrOutput)
}

type AnalysisDecimalPlacesConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalPlacesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalPlacesConfiguration)(nil)).Elem()
}

func (o AnalysisDecimalPlacesConfigurationOutput) ToAnalysisDecimalPlacesConfigurationOutput() AnalysisDecimalPlacesConfigurationOutput {
	return o
}

func (o AnalysisDecimalPlacesConfigurationOutput) ToAnalysisDecimalPlacesConfigurationOutputWithContext(ctx context.Context) AnalysisDecimalPlacesConfigurationOutput {
	return o
}

func (o AnalysisDecimalPlacesConfigurationOutput) ToAnalysisDecimalPlacesConfigurationPtrOutput() AnalysisDecimalPlacesConfigurationPtrOutput {
	return o.ToAnalysisDecimalPlacesConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisDecimalPlacesConfigurationOutput) ToAnalysisDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDecimalPlacesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDecimalPlacesConfiguration) *AnalysisDecimalPlacesConfiguration {
		return &v
	}).(AnalysisDecimalPlacesConfigurationPtrOutput)
}

func (o AnalysisDecimalPlacesConfigurationOutput) DecimalPlaces() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisDecimalPlacesConfiguration) float64 { return v.DecimalPlaces }).(pulumi.Float64Output)
}

type AnalysisDecimalPlacesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalPlacesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDecimalPlacesConfiguration)(nil)).Elem()
}

func (o AnalysisDecimalPlacesConfigurationPtrOutput) ToAnalysisDecimalPlacesConfigurationPtrOutput() AnalysisDecimalPlacesConfigurationPtrOutput {
	return o
}

func (o AnalysisDecimalPlacesConfigurationPtrOutput) ToAnalysisDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDecimalPlacesConfigurationPtrOutput {
	return o
}

func (o AnalysisDecimalPlacesConfigurationPtrOutput) Elem() AnalysisDecimalPlacesConfigurationOutput {
	return o.ApplyT(func(v *AnalysisDecimalPlacesConfiguration) AnalysisDecimalPlacesConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisDecimalPlacesConfiguration
		return ret
	}).(AnalysisDecimalPlacesConfigurationOutput)
}

func (o AnalysisDecimalPlacesConfigurationPtrOutput) DecimalPlaces() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisDecimalPlacesConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.DecimalPlaces
	}).(pulumi.Float64PtrOutput)
}

type AnalysisDecimalValueWhenUnsetConfiguration struct {
	CustomValue          *float64                      `pulumi:"customValue"`
	ValueWhenUnsetOption *AnalysisValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// AnalysisDecimalValueWhenUnsetConfigurationInput is an input type that accepts AnalysisDecimalValueWhenUnsetConfigurationArgs and AnalysisDecimalValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDecimalValueWhenUnsetConfigurationInput` via:
//
//	AnalysisDecimalValueWhenUnsetConfigurationArgs{...}
type AnalysisDecimalValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToAnalysisDecimalValueWhenUnsetConfigurationOutput() AnalysisDecimalValueWhenUnsetConfigurationOutput
	ToAnalysisDecimalValueWhenUnsetConfigurationOutputWithContext(context.Context) AnalysisDecimalValueWhenUnsetConfigurationOutput
}

type AnalysisDecimalValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.Float64PtrInput               `pulumi:"customValue"`
	ValueWhenUnsetOption AnalysisValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (AnalysisDecimalValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i AnalysisDecimalValueWhenUnsetConfigurationArgs) ToAnalysisDecimalValueWhenUnsetConfigurationOutput() AnalysisDecimalValueWhenUnsetConfigurationOutput {
	return i.ToAnalysisDecimalValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDecimalValueWhenUnsetConfigurationArgs) ToAnalysisDecimalValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) AnalysisDecimalValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalValueWhenUnsetConfigurationOutput)
}

func (i AnalysisDecimalValueWhenUnsetConfigurationArgs) ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutput() AnalysisDecimalValueWhenUnsetConfigurationPtrOutput {
	return i.ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisDecimalValueWhenUnsetConfigurationArgs) ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDecimalValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalValueWhenUnsetConfigurationOutput).ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// AnalysisDecimalValueWhenUnsetConfigurationPtrInput is an input type that accepts AnalysisDecimalValueWhenUnsetConfigurationArgs, AnalysisDecimalValueWhenUnsetConfigurationPtr and AnalysisDecimalValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisDecimalValueWhenUnsetConfigurationPtrInput` via:
//
//	        AnalysisDecimalValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDecimalValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutput() AnalysisDecimalValueWhenUnsetConfigurationPtrOutput
	ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) AnalysisDecimalValueWhenUnsetConfigurationPtrOutput
}

type analysisDecimalValueWhenUnsetConfigurationPtrType AnalysisDecimalValueWhenUnsetConfigurationArgs

func AnalysisDecimalValueWhenUnsetConfigurationPtr(v *AnalysisDecimalValueWhenUnsetConfigurationArgs) AnalysisDecimalValueWhenUnsetConfigurationPtrInput {
	return (*analysisDecimalValueWhenUnsetConfigurationPtrType)(v)
}

func (*analysisDecimalValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *analysisDecimalValueWhenUnsetConfigurationPtrType) ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutput() AnalysisDecimalValueWhenUnsetConfigurationPtrOutput {
	return i.ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisDecimalValueWhenUnsetConfigurationPtrType) ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDecimalValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDecimalValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisDecimalValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o AnalysisDecimalValueWhenUnsetConfigurationOutput) ToAnalysisDecimalValueWhenUnsetConfigurationOutput() AnalysisDecimalValueWhenUnsetConfigurationOutput {
	return o
}

func (o AnalysisDecimalValueWhenUnsetConfigurationOutput) ToAnalysisDecimalValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) AnalysisDecimalValueWhenUnsetConfigurationOutput {
	return o
}

func (o AnalysisDecimalValueWhenUnsetConfigurationOutput) ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutput() AnalysisDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisDecimalValueWhenUnsetConfigurationOutput) ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDecimalValueWhenUnsetConfiguration) *AnalysisDecimalValueWhenUnsetConfiguration {
		return &v
	}).(AnalysisDecimalValueWhenUnsetConfigurationPtrOutput)
}

func (o AnalysisDecimalValueWhenUnsetConfigurationOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisDecimalValueWhenUnsetConfiguration) *float64 { return v.CustomValue }).(pulumi.Float64PtrOutput)
}

func (o AnalysisDecimalValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() AnalysisValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v AnalysisDecimalValueWhenUnsetConfiguration) *AnalysisValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(AnalysisValueWhenUnsetOptionPtrOutput)
}

type AnalysisDecimalValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDecimalValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o AnalysisDecimalValueWhenUnsetConfigurationPtrOutput) ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutput() AnalysisDecimalValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o AnalysisDecimalValueWhenUnsetConfigurationPtrOutput) ToAnalysisDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDecimalValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o AnalysisDecimalValueWhenUnsetConfigurationPtrOutput) Elem() AnalysisDecimalValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *AnalysisDecimalValueWhenUnsetConfiguration) AnalysisDecimalValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisDecimalValueWhenUnsetConfiguration
		return ret
	}).(AnalysisDecimalValueWhenUnsetConfigurationOutput)
}

func (o AnalysisDecimalValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisDecimalValueWhenUnsetConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisDecimalValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() AnalysisValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisDecimalValueWhenUnsetConfiguration) *AnalysisValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(AnalysisValueWhenUnsetOptionPtrOutput)
}

type AnalysisDefaultFreeFormLayoutConfiguration struct {
	CanvasSizeOptions AnalysisFreeFormLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
}

// AnalysisDefaultFreeFormLayoutConfigurationInput is an input type that accepts AnalysisDefaultFreeFormLayoutConfigurationArgs and AnalysisDefaultFreeFormLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDefaultFreeFormLayoutConfigurationInput` via:
//
//	AnalysisDefaultFreeFormLayoutConfigurationArgs{...}
type AnalysisDefaultFreeFormLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisDefaultFreeFormLayoutConfigurationOutput() AnalysisDefaultFreeFormLayoutConfigurationOutput
	ToAnalysisDefaultFreeFormLayoutConfigurationOutputWithContext(context.Context) AnalysisDefaultFreeFormLayoutConfigurationOutput
}

type AnalysisDefaultFreeFormLayoutConfigurationArgs struct {
	CanvasSizeOptions AnalysisFreeFormLayoutCanvasSizeOptionsInput `pulumi:"canvasSizeOptions"`
}

func (AnalysisDefaultFreeFormLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisDefaultFreeFormLayoutConfigurationArgs) ToAnalysisDefaultFreeFormLayoutConfigurationOutput() AnalysisDefaultFreeFormLayoutConfigurationOutput {
	return i.ToAnalysisDefaultFreeFormLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDefaultFreeFormLayoutConfigurationArgs) ToAnalysisDefaultFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultFreeFormLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultFreeFormLayoutConfigurationOutput)
}

func (i AnalysisDefaultFreeFormLayoutConfigurationArgs) ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutput() AnalysisDefaultFreeFormLayoutConfigurationPtrOutput {
	return i.ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisDefaultFreeFormLayoutConfigurationArgs) ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultFreeFormLayoutConfigurationOutput).ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx)
}

// AnalysisDefaultFreeFormLayoutConfigurationPtrInput is an input type that accepts AnalysisDefaultFreeFormLayoutConfigurationArgs, AnalysisDefaultFreeFormLayoutConfigurationPtr and AnalysisDefaultFreeFormLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisDefaultFreeFormLayoutConfigurationPtrInput` via:
//
//	        AnalysisDefaultFreeFormLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDefaultFreeFormLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutput() AnalysisDefaultFreeFormLayoutConfigurationPtrOutput
	ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Context) AnalysisDefaultFreeFormLayoutConfigurationPtrOutput
}

type analysisDefaultFreeFormLayoutConfigurationPtrType AnalysisDefaultFreeFormLayoutConfigurationArgs

func AnalysisDefaultFreeFormLayoutConfigurationPtr(v *AnalysisDefaultFreeFormLayoutConfigurationArgs) AnalysisDefaultFreeFormLayoutConfigurationPtrInput {
	return (*analysisDefaultFreeFormLayoutConfigurationPtrType)(v)
}

func (*analysisDefaultFreeFormLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i *analysisDefaultFreeFormLayoutConfigurationPtrType) ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutput() AnalysisDefaultFreeFormLayoutConfigurationPtrOutput {
	return i.ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisDefaultFreeFormLayoutConfigurationPtrType) ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultFreeFormLayoutConfigurationPtrOutput)
}

type AnalysisDefaultFreeFormLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultFreeFormLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultFreeFormLayoutConfigurationOutput) ToAnalysisDefaultFreeFormLayoutConfigurationOutput() AnalysisDefaultFreeFormLayoutConfigurationOutput {
	return o
}

func (o AnalysisDefaultFreeFormLayoutConfigurationOutput) ToAnalysisDefaultFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultFreeFormLayoutConfigurationOutput {
	return o
}

func (o AnalysisDefaultFreeFormLayoutConfigurationOutput) ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutput() AnalysisDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisDefaultFreeFormLayoutConfigurationOutput) ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDefaultFreeFormLayoutConfiguration) *AnalysisDefaultFreeFormLayoutConfiguration {
		return &v
	}).(AnalysisDefaultFreeFormLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultFreeFormLayoutConfigurationOutput) CanvasSizeOptions() AnalysisFreeFormLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v AnalysisDefaultFreeFormLayoutConfiguration) AnalysisFreeFormLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(AnalysisFreeFormLayoutCanvasSizeOptionsOutput)
}

type AnalysisDefaultFreeFormLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultFreeFormLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultFreeFormLayoutConfigurationPtrOutput) ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutput() AnalysisDefaultFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultFreeFormLayoutConfigurationPtrOutput) ToAnalysisDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultFreeFormLayoutConfigurationPtrOutput) Elem() AnalysisDefaultFreeFormLayoutConfigurationOutput {
	return o.ApplyT(func(v *AnalysisDefaultFreeFormLayoutConfiguration) AnalysisDefaultFreeFormLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisDefaultFreeFormLayoutConfiguration
		return ret
	}).(AnalysisDefaultFreeFormLayoutConfigurationOutput)
}

func (o AnalysisDefaultFreeFormLayoutConfigurationPtrOutput) CanvasSizeOptions() AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisDefaultFreeFormLayoutConfiguration) *AnalysisFreeFormLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

type AnalysisDefaultGridLayoutConfiguration struct {
	CanvasSizeOptions AnalysisGridLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
}

// AnalysisDefaultGridLayoutConfigurationInput is an input type that accepts AnalysisDefaultGridLayoutConfigurationArgs and AnalysisDefaultGridLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDefaultGridLayoutConfigurationInput` via:
//
//	AnalysisDefaultGridLayoutConfigurationArgs{...}
type AnalysisDefaultGridLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisDefaultGridLayoutConfigurationOutput() AnalysisDefaultGridLayoutConfigurationOutput
	ToAnalysisDefaultGridLayoutConfigurationOutputWithContext(context.Context) AnalysisDefaultGridLayoutConfigurationOutput
}

type AnalysisDefaultGridLayoutConfigurationArgs struct {
	CanvasSizeOptions AnalysisGridLayoutCanvasSizeOptionsInput `pulumi:"canvasSizeOptions"`
}

func (AnalysisDefaultGridLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisDefaultGridLayoutConfigurationArgs) ToAnalysisDefaultGridLayoutConfigurationOutput() AnalysisDefaultGridLayoutConfigurationOutput {
	return i.ToAnalysisDefaultGridLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDefaultGridLayoutConfigurationArgs) ToAnalysisDefaultGridLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultGridLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultGridLayoutConfigurationOutput)
}

func (i AnalysisDefaultGridLayoutConfigurationArgs) ToAnalysisDefaultGridLayoutConfigurationPtrOutput() AnalysisDefaultGridLayoutConfigurationPtrOutput {
	return i.ToAnalysisDefaultGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisDefaultGridLayoutConfigurationArgs) ToAnalysisDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultGridLayoutConfigurationOutput).ToAnalysisDefaultGridLayoutConfigurationPtrOutputWithContext(ctx)
}

// AnalysisDefaultGridLayoutConfigurationPtrInput is an input type that accepts AnalysisDefaultGridLayoutConfigurationArgs, AnalysisDefaultGridLayoutConfigurationPtr and AnalysisDefaultGridLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisDefaultGridLayoutConfigurationPtrInput` via:
//
//	        AnalysisDefaultGridLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDefaultGridLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisDefaultGridLayoutConfigurationPtrOutput() AnalysisDefaultGridLayoutConfigurationPtrOutput
	ToAnalysisDefaultGridLayoutConfigurationPtrOutputWithContext(context.Context) AnalysisDefaultGridLayoutConfigurationPtrOutput
}

type analysisDefaultGridLayoutConfigurationPtrType AnalysisDefaultGridLayoutConfigurationArgs

func AnalysisDefaultGridLayoutConfigurationPtr(v *AnalysisDefaultGridLayoutConfigurationArgs) AnalysisDefaultGridLayoutConfigurationPtrInput {
	return (*analysisDefaultGridLayoutConfigurationPtrType)(v)
}

func (*analysisDefaultGridLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (i *analysisDefaultGridLayoutConfigurationPtrType) ToAnalysisDefaultGridLayoutConfigurationPtrOutput() AnalysisDefaultGridLayoutConfigurationPtrOutput {
	return i.ToAnalysisDefaultGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisDefaultGridLayoutConfigurationPtrType) ToAnalysisDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultGridLayoutConfigurationPtrOutput)
}

type AnalysisDefaultGridLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultGridLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultGridLayoutConfigurationOutput) ToAnalysisDefaultGridLayoutConfigurationOutput() AnalysisDefaultGridLayoutConfigurationOutput {
	return o
}

func (o AnalysisDefaultGridLayoutConfigurationOutput) ToAnalysisDefaultGridLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultGridLayoutConfigurationOutput {
	return o
}

func (o AnalysisDefaultGridLayoutConfigurationOutput) ToAnalysisDefaultGridLayoutConfigurationPtrOutput() AnalysisDefaultGridLayoutConfigurationPtrOutput {
	return o.ToAnalysisDefaultGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisDefaultGridLayoutConfigurationOutput) ToAnalysisDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultGridLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDefaultGridLayoutConfiguration) *AnalysisDefaultGridLayoutConfiguration {
		return &v
	}).(AnalysisDefaultGridLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultGridLayoutConfigurationOutput) CanvasSizeOptions() AnalysisGridLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v AnalysisDefaultGridLayoutConfiguration) AnalysisGridLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(AnalysisGridLayoutCanvasSizeOptionsOutput)
}

type AnalysisDefaultGridLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultGridLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultGridLayoutConfigurationPtrOutput) ToAnalysisDefaultGridLayoutConfigurationPtrOutput() AnalysisDefaultGridLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultGridLayoutConfigurationPtrOutput) ToAnalysisDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultGridLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultGridLayoutConfigurationPtrOutput) Elem() AnalysisDefaultGridLayoutConfigurationOutput {
	return o.ApplyT(func(v *AnalysisDefaultGridLayoutConfiguration) AnalysisDefaultGridLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisDefaultGridLayoutConfiguration
		return ret
	}).(AnalysisDefaultGridLayoutConfigurationOutput)
}

func (o AnalysisDefaultGridLayoutConfigurationPtrOutput) CanvasSizeOptions() AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisDefaultGridLayoutConfiguration) *AnalysisGridLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(AnalysisGridLayoutCanvasSizeOptionsPtrOutput)
}

type AnalysisDefaultInteractiveLayoutConfiguration struct {
	FreeForm *AnalysisDefaultFreeFormLayoutConfiguration `pulumi:"freeForm"`
	Grid     *AnalysisDefaultGridLayoutConfiguration     `pulumi:"grid"`
}

// AnalysisDefaultInteractiveLayoutConfigurationInput is an input type that accepts AnalysisDefaultInteractiveLayoutConfigurationArgs and AnalysisDefaultInteractiveLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDefaultInteractiveLayoutConfigurationInput` via:
//
//	AnalysisDefaultInteractiveLayoutConfigurationArgs{...}
type AnalysisDefaultInteractiveLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisDefaultInteractiveLayoutConfigurationOutput() AnalysisDefaultInteractiveLayoutConfigurationOutput
	ToAnalysisDefaultInteractiveLayoutConfigurationOutputWithContext(context.Context) AnalysisDefaultInteractiveLayoutConfigurationOutput
}

type AnalysisDefaultInteractiveLayoutConfigurationArgs struct {
	FreeForm AnalysisDefaultFreeFormLayoutConfigurationPtrInput `pulumi:"freeForm"`
	Grid     AnalysisDefaultGridLayoutConfigurationPtrInput     `pulumi:"grid"`
}

func (AnalysisDefaultInteractiveLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisDefaultInteractiveLayoutConfigurationArgs) ToAnalysisDefaultInteractiveLayoutConfigurationOutput() AnalysisDefaultInteractiveLayoutConfigurationOutput {
	return i.ToAnalysisDefaultInteractiveLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDefaultInteractiveLayoutConfigurationArgs) ToAnalysisDefaultInteractiveLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultInteractiveLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultInteractiveLayoutConfigurationOutput)
}

func (i AnalysisDefaultInteractiveLayoutConfigurationArgs) ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutput() AnalysisDefaultInteractiveLayoutConfigurationPtrOutput {
	return i.ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisDefaultInteractiveLayoutConfigurationArgs) ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultInteractiveLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultInteractiveLayoutConfigurationOutput).ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx)
}

// AnalysisDefaultInteractiveLayoutConfigurationPtrInput is an input type that accepts AnalysisDefaultInteractiveLayoutConfigurationArgs, AnalysisDefaultInteractiveLayoutConfigurationPtr and AnalysisDefaultInteractiveLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisDefaultInteractiveLayoutConfigurationPtrInput` via:
//
//	        AnalysisDefaultInteractiveLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDefaultInteractiveLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutput() AnalysisDefaultInteractiveLayoutConfigurationPtrOutput
	ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Context) AnalysisDefaultInteractiveLayoutConfigurationPtrOutput
}

type analysisDefaultInteractiveLayoutConfigurationPtrType AnalysisDefaultInteractiveLayoutConfigurationArgs

func AnalysisDefaultInteractiveLayoutConfigurationPtr(v *AnalysisDefaultInteractiveLayoutConfigurationArgs) AnalysisDefaultInteractiveLayoutConfigurationPtrInput {
	return (*analysisDefaultInteractiveLayoutConfigurationPtrType)(v)
}

func (*analysisDefaultInteractiveLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (i *analysisDefaultInteractiveLayoutConfigurationPtrType) ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutput() AnalysisDefaultInteractiveLayoutConfigurationPtrOutput {
	return i.ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisDefaultInteractiveLayoutConfigurationPtrType) ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultInteractiveLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultInteractiveLayoutConfigurationPtrOutput)
}

type AnalysisDefaultInteractiveLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultInteractiveLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultInteractiveLayoutConfigurationOutput) ToAnalysisDefaultInteractiveLayoutConfigurationOutput() AnalysisDefaultInteractiveLayoutConfigurationOutput {
	return o
}

func (o AnalysisDefaultInteractiveLayoutConfigurationOutput) ToAnalysisDefaultInteractiveLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultInteractiveLayoutConfigurationOutput {
	return o
}

func (o AnalysisDefaultInteractiveLayoutConfigurationOutput) ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutput() AnalysisDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisDefaultInteractiveLayoutConfigurationOutput) ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDefaultInteractiveLayoutConfiguration) *AnalysisDefaultInteractiveLayoutConfiguration {
		return &v
	}).(AnalysisDefaultInteractiveLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultInteractiveLayoutConfigurationOutput) FreeForm() AnalysisDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDefaultInteractiveLayoutConfiguration) *AnalysisDefaultFreeFormLayoutConfiguration {
		return v.FreeForm
	}).(AnalysisDefaultFreeFormLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultInteractiveLayoutConfigurationOutput) Grid() AnalysisDefaultGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDefaultInteractiveLayoutConfiguration) *AnalysisDefaultGridLayoutConfiguration {
		return v.Grid
	}).(AnalysisDefaultGridLayoutConfigurationPtrOutput)
}

type AnalysisDefaultInteractiveLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultInteractiveLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultInteractiveLayoutConfigurationPtrOutput) ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutput() AnalysisDefaultInteractiveLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultInteractiveLayoutConfigurationPtrOutput) ToAnalysisDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultInteractiveLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultInteractiveLayoutConfigurationPtrOutput) Elem() AnalysisDefaultInteractiveLayoutConfigurationOutput {
	return o.ApplyT(func(v *AnalysisDefaultInteractiveLayoutConfiguration) AnalysisDefaultInteractiveLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisDefaultInteractiveLayoutConfiguration
		return ret
	}).(AnalysisDefaultInteractiveLayoutConfigurationOutput)
}

func (o AnalysisDefaultInteractiveLayoutConfigurationPtrOutput) FreeForm() AnalysisDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDefaultInteractiveLayoutConfiguration) *AnalysisDefaultFreeFormLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.FreeForm
	}).(AnalysisDefaultFreeFormLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultInteractiveLayoutConfigurationPtrOutput) Grid() AnalysisDefaultGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDefaultInteractiveLayoutConfiguration) *AnalysisDefaultGridLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.Grid
	}).(AnalysisDefaultGridLayoutConfigurationPtrOutput)
}

type AnalysisDefaultNewSheetConfiguration struct {
	InteractiveLayoutConfiguration *AnalysisDefaultInteractiveLayoutConfiguration `pulumi:"interactiveLayoutConfiguration"`
	PaginatedLayoutConfiguration   *AnalysisDefaultPaginatedLayoutConfiguration   `pulumi:"paginatedLayoutConfiguration"`
	SheetContentType               *AnalysisSheetContentType                      `pulumi:"sheetContentType"`
}

// AnalysisDefaultNewSheetConfigurationInput is an input type that accepts AnalysisDefaultNewSheetConfigurationArgs and AnalysisDefaultNewSheetConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDefaultNewSheetConfigurationInput` via:
//
//	AnalysisDefaultNewSheetConfigurationArgs{...}
type AnalysisDefaultNewSheetConfigurationInput interface {
	pulumi.Input

	ToAnalysisDefaultNewSheetConfigurationOutput() AnalysisDefaultNewSheetConfigurationOutput
	ToAnalysisDefaultNewSheetConfigurationOutputWithContext(context.Context) AnalysisDefaultNewSheetConfigurationOutput
}

type AnalysisDefaultNewSheetConfigurationArgs struct {
	InteractiveLayoutConfiguration AnalysisDefaultInteractiveLayoutConfigurationPtrInput `pulumi:"interactiveLayoutConfiguration"`
	PaginatedLayoutConfiguration   AnalysisDefaultPaginatedLayoutConfigurationPtrInput   `pulumi:"paginatedLayoutConfiguration"`
	SheetContentType               AnalysisSheetContentTypePtrInput                      `pulumi:"sheetContentType"`
}

func (AnalysisDefaultNewSheetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultNewSheetConfiguration)(nil)).Elem()
}

func (i AnalysisDefaultNewSheetConfigurationArgs) ToAnalysisDefaultNewSheetConfigurationOutput() AnalysisDefaultNewSheetConfigurationOutput {
	return i.ToAnalysisDefaultNewSheetConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDefaultNewSheetConfigurationArgs) ToAnalysisDefaultNewSheetConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultNewSheetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultNewSheetConfigurationOutput)
}

func (i AnalysisDefaultNewSheetConfigurationArgs) ToAnalysisDefaultNewSheetConfigurationPtrOutput() AnalysisDefaultNewSheetConfigurationPtrOutput {
	return i.ToAnalysisDefaultNewSheetConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisDefaultNewSheetConfigurationArgs) ToAnalysisDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultNewSheetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultNewSheetConfigurationOutput).ToAnalysisDefaultNewSheetConfigurationPtrOutputWithContext(ctx)
}

// AnalysisDefaultNewSheetConfigurationPtrInput is an input type that accepts AnalysisDefaultNewSheetConfigurationArgs, AnalysisDefaultNewSheetConfigurationPtr and AnalysisDefaultNewSheetConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisDefaultNewSheetConfigurationPtrInput` via:
//
//	        AnalysisDefaultNewSheetConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDefaultNewSheetConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisDefaultNewSheetConfigurationPtrOutput() AnalysisDefaultNewSheetConfigurationPtrOutput
	ToAnalysisDefaultNewSheetConfigurationPtrOutputWithContext(context.Context) AnalysisDefaultNewSheetConfigurationPtrOutput
}

type analysisDefaultNewSheetConfigurationPtrType AnalysisDefaultNewSheetConfigurationArgs

func AnalysisDefaultNewSheetConfigurationPtr(v *AnalysisDefaultNewSheetConfigurationArgs) AnalysisDefaultNewSheetConfigurationPtrInput {
	return (*analysisDefaultNewSheetConfigurationPtrType)(v)
}

func (*analysisDefaultNewSheetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultNewSheetConfiguration)(nil)).Elem()
}

func (i *analysisDefaultNewSheetConfigurationPtrType) ToAnalysisDefaultNewSheetConfigurationPtrOutput() AnalysisDefaultNewSheetConfigurationPtrOutput {
	return i.ToAnalysisDefaultNewSheetConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisDefaultNewSheetConfigurationPtrType) ToAnalysisDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultNewSheetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultNewSheetConfigurationPtrOutput)
}

type AnalysisDefaultNewSheetConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultNewSheetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultNewSheetConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultNewSheetConfigurationOutput) ToAnalysisDefaultNewSheetConfigurationOutput() AnalysisDefaultNewSheetConfigurationOutput {
	return o
}

func (o AnalysisDefaultNewSheetConfigurationOutput) ToAnalysisDefaultNewSheetConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultNewSheetConfigurationOutput {
	return o
}

func (o AnalysisDefaultNewSheetConfigurationOutput) ToAnalysisDefaultNewSheetConfigurationPtrOutput() AnalysisDefaultNewSheetConfigurationPtrOutput {
	return o.ToAnalysisDefaultNewSheetConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisDefaultNewSheetConfigurationOutput) ToAnalysisDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultNewSheetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDefaultNewSheetConfiguration) *AnalysisDefaultNewSheetConfiguration {
		return &v
	}).(AnalysisDefaultNewSheetConfigurationPtrOutput)
}

func (o AnalysisDefaultNewSheetConfigurationOutput) InteractiveLayoutConfiguration() AnalysisDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDefaultNewSheetConfiguration) *AnalysisDefaultInteractiveLayoutConfiguration {
		return v.InteractiveLayoutConfiguration
	}).(AnalysisDefaultInteractiveLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultNewSheetConfigurationOutput) PaginatedLayoutConfiguration() AnalysisDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDefaultNewSheetConfiguration) *AnalysisDefaultPaginatedLayoutConfiguration {
		return v.PaginatedLayoutConfiguration
	}).(AnalysisDefaultPaginatedLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultNewSheetConfigurationOutput) SheetContentType() AnalysisSheetContentTypePtrOutput {
	return o.ApplyT(func(v AnalysisDefaultNewSheetConfiguration) *AnalysisSheetContentType { return v.SheetContentType }).(AnalysisSheetContentTypePtrOutput)
}

type AnalysisDefaultNewSheetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultNewSheetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultNewSheetConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultNewSheetConfigurationPtrOutput) ToAnalysisDefaultNewSheetConfigurationPtrOutput() AnalysisDefaultNewSheetConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultNewSheetConfigurationPtrOutput) ToAnalysisDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultNewSheetConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultNewSheetConfigurationPtrOutput) Elem() AnalysisDefaultNewSheetConfigurationOutput {
	return o.ApplyT(func(v *AnalysisDefaultNewSheetConfiguration) AnalysisDefaultNewSheetConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisDefaultNewSheetConfiguration
		return ret
	}).(AnalysisDefaultNewSheetConfigurationOutput)
}

func (o AnalysisDefaultNewSheetConfigurationPtrOutput) InteractiveLayoutConfiguration() AnalysisDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDefaultNewSheetConfiguration) *AnalysisDefaultInteractiveLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.InteractiveLayoutConfiguration
	}).(AnalysisDefaultInteractiveLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultNewSheetConfigurationPtrOutput) PaginatedLayoutConfiguration() AnalysisDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDefaultNewSheetConfiguration) *AnalysisDefaultPaginatedLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.PaginatedLayoutConfiguration
	}).(AnalysisDefaultPaginatedLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultNewSheetConfigurationPtrOutput) SheetContentType() AnalysisSheetContentTypePtrOutput {
	return o.ApplyT(func(v *AnalysisDefaultNewSheetConfiguration) *AnalysisSheetContentType {
		if v == nil {
			return nil
		}
		return v.SheetContentType
	}).(AnalysisSheetContentTypePtrOutput)
}

type AnalysisDefaultPaginatedLayoutConfiguration struct {
	SectionBased *AnalysisDefaultSectionBasedLayoutConfiguration `pulumi:"sectionBased"`
}

// AnalysisDefaultPaginatedLayoutConfigurationInput is an input type that accepts AnalysisDefaultPaginatedLayoutConfigurationArgs and AnalysisDefaultPaginatedLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDefaultPaginatedLayoutConfigurationInput` via:
//
//	AnalysisDefaultPaginatedLayoutConfigurationArgs{...}
type AnalysisDefaultPaginatedLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisDefaultPaginatedLayoutConfigurationOutput() AnalysisDefaultPaginatedLayoutConfigurationOutput
	ToAnalysisDefaultPaginatedLayoutConfigurationOutputWithContext(context.Context) AnalysisDefaultPaginatedLayoutConfigurationOutput
}

type AnalysisDefaultPaginatedLayoutConfigurationArgs struct {
	SectionBased AnalysisDefaultSectionBasedLayoutConfigurationPtrInput `pulumi:"sectionBased"`
}

func (AnalysisDefaultPaginatedLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisDefaultPaginatedLayoutConfigurationArgs) ToAnalysisDefaultPaginatedLayoutConfigurationOutput() AnalysisDefaultPaginatedLayoutConfigurationOutput {
	return i.ToAnalysisDefaultPaginatedLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDefaultPaginatedLayoutConfigurationArgs) ToAnalysisDefaultPaginatedLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultPaginatedLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultPaginatedLayoutConfigurationOutput)
}

func (i AnalysisDefaultPaginatedLayoutConfigurationArgs) ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutput() AnalysisDefaultPaginatedLayoutConfigurationPtrOutput {
	return i.ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisDefaultPaginatedLayoutConfigurationArgs) ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultPaginatedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultPaginatedLayoutConfigurationOutput).ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx)
}

// AnalysisDefaultPaginatedLayoutConfigurationPtrInput is an input type that accepts AnalysisDefaultPaginatedLayoutConfigurationArgs, AnalysisDefaultPaginatedLayoutConfigurationPtr and AnalysisDefaultPaginatedLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisDefaultPaginatedLayoutConfigurationPtrInput` via:
//
//	        AnalysisDefaultPaginatedLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDefaultPaginatedLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutput() AnalysisDefaultPaginatedLayoutConfigurationPtrOutput
	ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Context) AnalysisDefaultPaginatedLayoutConfigurationPtrOutput
}

type analysisDefaultPaginatedLayoutConfigurationPtrType AnalysisDefaultPaginatedLayoutConfigurationArgs

func AnalysisDefaultPaginatedLayoutConfigurationPtr(v *AnalysisDefaultPaginatedLayoutConfigurationArgs) AnalysisDefaultPaginatedLayoutConfigurationPtrInput {
	return (*analysisDefaultPaginatedLayoutConfigurationPtrType)(v)
}

func (*analysisDefaultPaginatedLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (i *analysisDefaultPaginatedLayoutConfigurationPtrType) ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutput() AnalysisDefaultPaginatedLayoutConfigurationPtrOutput {
	return i.ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisDefaultPaginatedLayoutConfigurationPtrType) ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultPaginatedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultPaginatedLayoutConfigurationPtrOutput)
}

type AnalysisDefaultPaginatedLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultPaginatedLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultPaginatedLayoutConfigurationOutput) ToAnalysisDefaultPaginatedLayoutConfigurationOutput() AnalysisDefaultPaginatedLayoutConfigurationOutput {
	return o
}

func (o AnalysisDefaultPaginatedLayoutConfigurationOutput) ToAnalysisDefaultPaginatedLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultPaginatedLayoutConfigurationOutput {
	return o
}

func (o AnalysisDefaultPaginatedLayoutConfigurationOutput) ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutput() AnalysisDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisDefaultPaginatedLayoutConfigurationOutput) ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDefaultPaginatedLayoutConfiguration) *AnalysisDefaultPaginatedLayoutConfiguration {
		return &v
	}).(AnalysisDefaultPaginatedLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultPaginatedLayoutConfigurationOutput) SectionBased() AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDefaultPaginatedLayoutConfiguration) *AnalysisDefaultSectionBasedLayoutConfiguration {
		return v.SectionBased
	}).(AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput)
}

type AnalysisDefaultPaginatedLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultPaginatedLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultPaginatedLayoutConfigurationPtrOutput) ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutput() AnalysisDefaultPaginatedLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultPaginatedLayoutConfigurationPtrOutput) ToAnalysisDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultPaginatedLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultPaginatedLayoutConfigurationPtrOutput) Elem() AnalysisDefaultPaginatedLayoutConfigurationOutput {
	return o.ApplyT(func(v *AnalysisDefaultPaginatedLayoutConfiguration) AnalysisDefaultPaginatedLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisDefaultPaginatedLayoutConfiguration
		return ret
	}).(AnalysisDefaultPaginatedLayoutConfigurationOutput)
}

func (o AnalysisDefaultPaginatedLayoutConfigurationPtrOutput) SectionBased() AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDefaultPaginatedLayoutConfiguration) *AnalysisDefaultSectionBasedLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.SectionBased
	}).(AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput)
}

type AnalysisDefaultSectionBasedLayoutConfiguration struct {
	CanvasSizeOptions AnalysisSectionBasedLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
}

// AnalysisDefaultSectionBasedLayoutConfigurationInput is an input type that accepts AnalysisDefaultSectionBasedLayoutConfigurationArgs and AnalysisDefaultSectionBasedLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDefaultSectionBasedLayoutConfigurationInput` via:
//
//	AnalysisDefaultSectionBasedLayoutConfigurationArgs{...}
type AnalysisDefaultSectionBasedLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisDefaultSectionBasedLayoutConfigurationOutput() AnalysisDefaultSectionBasedLayoutConfigurationOutput
	ToAnalysisDefaultSectionBasedLayoutConfigurationOutputWithContext(context.Context) AnalysisDefaultSectionBasedLayoutConfigurationOutput
}

type AnalysisDefaultSectionBasedLayoutConfigurationArgs struct {
	CanvasSizeOptions AnalysisSectionBasedLayoutCanvasSizeOptionsInput `pulumi:"canvasSizeOptions"`
}

func (AnalysisDefaultSectionBasedLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisDefaultSectionBasedLayoutConfigurationArgs) ToAnalysisDefaultSectionBasedLayoutConfigurationOutput() AnalysisDefaultSectionBasedLayoutConfigurationOutput {
	return i.ToAnalysisDefaultSectionBasedLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDefaultSectionBasedLayoutConfigurationArgs) ToAnalysisDefaultSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultSectionBasedLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultSectionBasedLayoutConfigurationOutput)
}

func (i AnalysisDefaultSectionBasedLayoutConfigurationArgs) ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutput() AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput {
	return i.ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisDefaultSectionBasedLayoutConfigurationArgs) ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultSectionBasedLayoutConfigurationOutput).ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx)
}

// AnalysisDefaultSectionBasedLayoutConfigurationPtrInput is an input type that accepts AnalysisDefaultSectionBasedLayoutConfigurationArgs, AnalysisDefaultSectionBasedLayoutConfigurationPtr and AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisDefaultSectionBasedLayoutConfigurationPtrInput` via:
//
//	        AnalysisDefaultSectionBasedLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisDefaultSectionBasedLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutput() AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput
	ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Context) AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput
}

type analysisDefaultSectionBasedLayoutConfigurationPtrType AnalysisDefaultSectionBasedLayoutConfigurationArgs

func AnalysisDefaultSectionBasedLayoutConfigurationPtr(v *AnalysisDefaultSectionBasedLayoutConfigurationArgs) AnalysisDefaultSectionBasedLayoutConfigurationPtrInput {
	return (*analysisDefaultSectionBasedLayoutConfigurationPtrType)(v)
}

func (*analysisDefaultSectionBasedLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i *analysisDefaultSectionBasedLayoutConfigurationPtrType) ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutput() AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput {
	return i.ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisDefaultSectionBasedLayoutConfigurationPtrType) ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput)
}

type AnalysisDefaultSectionBasedLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultSectionBasedLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultSectionBasedLayoutConfigurationOutput) ToAnalysisDefaultSectionBasedLayoutConfigurationOutput() AnalysisDefaultSectionBasedLayoutConfigurationOutput {
	return o
}

func (o AnalysisDefaultSectionBasedLayoutConfigurationOutput) ToAnalysisDefaultSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisDefaultSectionBasedLayoutConfigurationOutput {
	return o
}

func (o AnalysisDefaultSectionBasedLayoutConfigurationOutput) ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutput() AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisDefaultSectionBasedLayoutConfigurationOutput) ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDefaultSectionBasedLayoutConfiguration) *AnalysisDefaultSectionBasedLayoutConfiguration {
		return &v
	}).(AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput)
}

func (o AnalysisDefaultSectionBasedLayoutConfigurationOutput) CanvasSizeOptions() AnalysisSectionBasedLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v AnalysisDefaultSectionBasedLayoutConfiguration) AnalysisSectionBasedLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(AnalysisSectionBasedLayoutCanvasSizeOptionsOutput)
}

type AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput) ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutput() AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput) ToAnalysisDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput) Elem() AnalysisDefaultSectionBasedLayoutConfigurationOutput {
	return o.ApplyT(func(v *AnalysisDefaultSectionBasedLayoutConfiguration) AnalysisDefaultSectionBasedLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisDefaultSectionBasedLayoutConfiguration
		return ret
	}).(AnalysisDefaultSectionBasedLayoutConfigurationOutput)
}

func (o AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput) CanvasSizeOptions() AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisDefaultSectionBasedLayoutConfiguration) *AnalysisSectionBasedLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

type AnalysisDefaults struct {
	DefaultNewSheetConfiguration AnalysisDefaultNewSheetConfiguration `pulumi:"defaultNewSheetConfiguration"`
}

// AnalysisDefaultsInput is an input type that accepts AnalysisDefaultsArgs and AnalysisDefaultsOutput values.
// You can construct a concrete instance of `AnalysisDefaultsInput` via:
//
//	AnalysisDefaultsArgs{...}
type AnalysisDefaultsInput interface {
	pulumi.Input

	ToAnalysisDefaultsOutput() AnalysisDefaultsOutput
	ToAnalysisDefaultsOutputWithContext(context.Context) AnalysisDefaultsOutput
}

type AnalysisDefaultsArgs struct {
	DefaultNewSheetConfiguration AnalysisDefaultNewSheetConfigurationInput `pulumi:"defaultNewSheetConfiguration"`
}

func (AnalysisDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaults)(nil)).Elem()
}

func (i AnalysisDefaultsArgs) ToAnalysisDefaultsOutput() AnalysisDefaultsOutput {
	return i.ToAnalysisDefaultsOutputWithContext(context.Background())
}

func (i AnalysisDefaultsArgs) ToAnalysisDefaultsOutputWithContext(ctx context.Context) AnalysisDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultsOutput)
}

func (i AnalysisDefaultsArgs) ToAnalysisDefaultsPtrOutput() AnalysisDefaultsPtrOutput {
	return i.ToAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (i AnalysisDefaultsArgs) ToAnalysisDefaultsPtrOutputWithContext(ctx context.Context) AnalysisDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultsOutput).ToAnalysisDefaultsPtrOutputWithContext(ctx)
}

// AnalysisDefaultsPtrInput is an input type that accepts AnalysisDefaultsArgs, AnalysisDefaultsPtr and AnalysisDefaultsPtrOutput values.
// You can construct a concrete instance of `AnalysisDefaultsPtrInput` via:
//
//	        AnalysisDefaultsArgs{...}
//
//	or:
//
//	        nil
type AnalysisDefaultsPtrInput interface {
	pulumi.Input

	ToAnalysisDefaultsPtrOutput() AnalysisDefaultsPtrOutput
	ToAnalysisDefaultsPtrOutputWithContext(context.Context) AnalysisDefaultsPtrOutput
}

type analysisDefaultsPtrType AnalysisDefaultsArgs

func AnalysisDefaultsPtr(v *AnalysisDefaultsArgs) AnalysisDefaultsPtrInput {
	return (*analysisDefaultsPtrType)(v)
}

func (*analysisDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaults)(nil)).Elem()
}

func (i *analysisDefaultsPtrType) ToAnalysisDefaultsPtrOutput() AnalysisDefaultsPtrOutput {
	return i.ToAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (i *analysisDefaultsPtrType) ToAnalysisDefaultsPtrOutputWithContext(ctx context.Context) AnalysisDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefaultsPtrOutput)
}

type AnalysisDefaultsOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefaults)(nil)).Elem()
}

func (o AnalysisDefaultsOutput) ToAnalysisDefaultsOutput() AnalysisDefaultsOutput {
	return o
}

func (o AnalysisDefaultsOutput) ToAnalysisDefaultsOutputWithContext(ctx context.Context) AnalysisDefaultsOutput {
	return o
}

func (o AnalysisDefaultsOutput) ToAnalysisDefaultsPtrOutput() AnalysisDefaultsPtrOutput {
	return o.ToAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (o AnalysisDefaultsOutput) ToAnalysisDefaultsPtrOutputWithContext(ctx context.Context) AnalysisDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDefaults) *AnalysisDefaults {
		return &v
	}).(AnalysisDefaultsPtrOutput)
}

func (o AnalysisDefaultsOutput) DefaultNewSheetConfiguration() AnalysisDefaultNewSheetConfigurationOutput {
	return o.ApplyT(func(v AnalysisDefaults) AnalysisDefaultNewSheetConfiguration { return v.DefaultNewSheetConfiguration }).(AnalysisDefaultNewSheetConfigurationOutput)
}

type AnalysisDefaultsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefaults)(nil)).Elem()
}

func (o AnalysisDefaultsPtrOutput) ToAnalysisDefaultsPtrOutput() AnalysisDefaultsPtrOutput {
	return o
}

func (o AnalysisDefaultsPtrOutput) ToAnalysisDefaultsPtrOutputWithContext(ctx context.Context) AnalysisDefaultsPtrOutput {
	return o
}

func (o AnalysisDefaultsPtrOutput) Elem() AnalysisDefaultsOutput {
	return o.ApplyT(func(v *AnalysisDefaults) AnalysisDefaults {
		if v != nil {
			return *v
		}
		var ret AnalysisDefaults
		return ret
	}).(AnalysisDefaultsOutput)
}

func (o AnalysisDefaultsPtrOutput) DefaultNewSheetConfiguration() AnalysisDefaultNewSheetConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisDefaults) *AnalysisDefaultNewSheetConfiguration {
		if v == nil {
			return nil
		}
		return &v.DefaultNewSheetConfiguration
	}).(AnalysisDefaultNewSheetConfigurationPtrOutput)
}

type AnalysisDefinition struct {
	AnalysisDefaults              *AnalysisDefaults                      `pulumi:"analysisDefaults"`
	CalculatedFields              []AnalysisCalculatedField              `pulumi:"calculatedFields"`
	ColumnConfigurations          []AnalysisColumnConfiguration          `pulumi:"columnConfigurations"`
	DataSetIdentifierDeclarations []AnalysisDataSetIdentifierDeclaration `pulumi:"dataSetIdentifierDeclarations"`
	FilterGroups                  []AnalysisFilterGroup                  `pulumi:"filterGroups"`
	ParameterDeclarations         []AnalysisParameterDeclaration         `pulumi:"parameterDeclarations"`
	Sheets                        []AnalysisSheetDefinition              `pulumi:"sheets"`
}

// AnalysisDefinitionInput is an input type that accepts AnalysisDefinitionArgs and AnalysisDefinitionOutput values.
// You can construct a concrete instance of `AnalysisDefinitionInput` via:
//
//	AnalysisDefinitionArgs{...}
type AnalysisDefinitionInput interface {
	pulumi.Input

	ToAnalysisDefinitionOutput() AnalysisDefinitionOutput
	ToAnalysisDefinitionOutputWithContext(context.Context) AnalysisDefinitionOutput
}

type AnalysisDefinitionArgs struct {
	AnalysisDefaults              AnalysisDefaultsPtrInput                       `pulumi:"analysisDefaults"`
	CalculatedFields              AnalysisCalculatedFieldArrayInput              `pulumi:"calculatedFields"`
	ColumnConfigurations          AnalysisColumnConfigurationArrayInput          `pulumi:"columnConfigurations"`
	DataSetIdentifierDeclarations AnalysisDataSetIdentifierDeclarationArrayInput `pulumi:"dataSetIdentifierDeclarations"`
	FilterGroups                  AnalysisFilterGroupArrayInput                  `pulumi:"filterGroups"`
	ParameterDeclarations         AnalysisParameterDeclarationArrayInput         `pulumi:"parameterDeclarations"`
	Sheets                        AnalysisSheetDefinitionArrayInput              `pulumi:"sheets"`
}

func (AnalysisDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefinition)(nil)).Elem()
}

func (i AnalysisDefinitionArgs) ToAnalysisDefinitionOutput() AnalysisDefinitionOutput {
	return i.ToAnalysisDefinitionOutputWithContext(context.Background())
}

func (i AnalysisDefinitionArgs) ToAnalysisDefinitionOutputWithContext(ctx context.Context) AnalysisDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefinitionOutput)
}

func (i AnalysisDefinitionArgs) ToAnalysisDefinitionPtrOutput() AnalysisDefinitionPtrOutput {
	return i.ToAnalysisDefinitionPtrOutputWithContext(context.Background())
}

func (i AnalysisDefinitionArgs) ToAnalysisDefinitionPtrOutputWithContext(ctx context.Context) AnalysisDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefinitionOutput).ToAnalysisDefinitionPtrOutputWithContext(ctx)
}

// AnalysisDefinitionPtrInput is an input type that accepts AnalysisDefinitionArgs, AnalysisDefinitionPtr and AnalysisDefinitionPtrOutput values.
// You can construct a concrete instance of `AnalysisDefinitionPtrInput` via:
//
//	        AnalysisDefinitionArgs{...}
//
//	or:
//
//	        nil
type AnalysisDefinitionPtrInput interface {
	pulumi.Input

	ToAnalysisDefinitionPtrOutput() AnalysisDefinitionPtrOutput
	ToAnalysisDefinitionPtrOutputWithContext(context.Context) AnalysisDefinitionPtrOutput
}

type analysisDefinitionPtrType AnalysisDefinitionArgs

func AnalysisDefinitionPtr(v *AnalysisDefinitionArgs) AnalysisDefinitionPtrInput {
	return (*analysisDefinitionPtrType)(v)
}

func (*analysisDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefinition)(nil)).Elem()
}

func (i *analysisDefinitionPtrType) ToAnalysisDefinitionPtrOutput() AnalysisDefinitionPtrOutput {
	return i.ToAnalysisDefinitionPtrOutputWithContext(context.Background())
}

func (i *analysisDefinitionPtrType) ToAnalysisDefinitionPtrOutputWithContext(ctx context.Context) AnalysisDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDefinitionPtrOutput)
}

type AnalysisDefinitionOutput struct{ *pulumi.OutputState }

func (AnalysisDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDefinition)(nil)).Elem()
}

func (o AnalysisDefinitionOutput) ToAnalysisDefinitionOutput() AnalysisDefinitionOutput {
	return o
}

func (o AnalysisDefinitionOutput) ToAnalysisDefinitionOutputWithContext(ctx context.Context) AnalysisDefinitionOutput {
	return o
}

func (o AnalysisDefinitionOutput) ToAnalysisDefinitionPtrOutput() AnalysisDefinitionPtrOutput {
	return o.ToAnalysisDefinitionPtrOutputWithContext(context.Background())
}

func (o AnalysisDefinitionOutput) ToAnalysisDefinitionPtrOutputWithContext(ctx context.Context) AnalysisDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDefinition) *AnalysisDefinition {
		return &v
	}).(AnalysisDefinitionPtrOutput)
}

func (o AnalysisDefinitionOutput) AnalysisDefaults() AnalysisDefaultsPtrOutput {
	return o.ApplyT(func(v AnalysisDefinition) *AnalysisDefaults { return v.AnalysisDefaults }).(AnalysisDefaultsPtrOutput)
}

func (o AnalysisDefinitionOutput) CalculatedFields() AnalysisCalculatedFieldArrayOutput {
	return o.ApplyT(func(v AnalysisDefinition) []AnalysisCalculatedField { return v.CalculatedFields }).(AnalysisCalculatedFieldArrayOutput)
}

func (o AnalysisDefinitionOutput) ColumnConfigurations() AnalysisColumnConfigurationArrayOutput {
	return o.ApplyT(func(v AnalysisDefinition) []AnalysisColumnConfiguration { return v.ColumnConfigurations }).(AnalysisColumnConfigurationArrayOutput)
}

func (o AnalysisDefinitionOutput) DataSetIdentifierDeclarations() AnalysisDataSetIdentifierDeclarationArrayOutput {
	return o.ApplyT(func(v AnalysisDefinition) []AnalysisDataSetIdentifierDeclaration {
		return v.DataSetIdentifierDeclarations
	}).(AnalysisDataSetIdentifierDeclarationArrayOutput)
}

func (o AnalysisDefinitionOutput) FilterGroups() AnalysisFilterGroupArrayOutput {
	return o.ApplyT(func(v AnalysisDefinition) []AnalysisFilterGroup { return v.FilterGroups }).(AnalysisFilterGroupArrayOutput)
}

func (o AnalysisDefinitionOutput) ParameterDeclarations() AnalysisParameterDeclarationArrayOutput {
	return o.ApplyT(func(v AnalysisDefinition) []AnalysisParameterDeclaration { return v.ParameterDeclarations }).(AnalysisParameterDeclarationArrayOutput)
}

func (o AnalysisDefinitionOutput) Sheets() AnalysisSheetDefinitionArrayOutput {
	return o.ApplyT(func(v AnalysisDefinition) []AnalysisSheetDefinition { return v.Sheets }).(AnalysisSheetDefinitionArrayOutput)
}

type AnalysisDefinitionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDefinition)(nil)).Elem()
}

func (o AnalysisDefinitionPtrOutput) ToAnalysisDefinitionPtrOutput() AnalysisDefinitionPtrOutput {
	return o
}

func (o AnalysisDefinitionPtrOutput) ToAnalysisDefinitionPtrOutputWithContext(ctx context.Context) AnalysisDefinitionPtrOutput {
	return o
}

func (o AnalysisDefinitionPtrOutput) Elem() AnalysisDefinitionOutput {
	return o.ApplyT(func(v *AnalysisDefinition) AnalysisDefinition {
		if v != nil {
			return *v
		}
		var ret AnalysisDefinition
		return ret
	}).(AnalysisDefinitionOutput)
}

func (o AnalysisDefinitionPtrOutput) AnalysisDefaults() AnalysisDefaultsPtrOutput {
	return o.ApplyT(func(v *AnalysisDefinition) *AnalysisDefaults {
		if v == nil {
			return nil
		}
		return v.AnalysisDefaults
	}).(AnalysisDefaultsPtrOutput)
}

func (o AnalysisDefinitionPtrOutput) CalculatedFields() AnalysisCalculatedFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisDefinition) []AnalysisCalculatedField {
		if v == nil {
			return nil
		}
		return v.CalculatedFields
	}).(AnalysisCalculatedFieldArrayOutput)
}

func (o AnalysisDefinitionPtrOutput) ColumnConfigurations() AnalysisColumnConfigurationArrayOutput {
	return o.ApplyT(func(v *AnalysisDefinition) []AnalysisColumnConfiguration {
		if v == nil {
			return nil
		}
		return v.ColumnConfigurations
	}).(AnalysisColumnConfigurationArrayOutput)
}

func (o AnalysisDefinitionPtrOutput) DataSetIdentifierDeclarations() AnalysisDataSetIdentifierDeclarationArrayOutput {
	return o.ApplyT(func(v *AnalysisDefinition) []AnalysisDataSetIdentifierDeclaration {
		if v == nil {
			return nil
		}
		return v.DataSetIdentifierDeclarations
	}).(AnalysisDataSetIdentifierDeclarationArrayOutput)
}

func (o AnalysisDefinitionPtrOutput) FilterGroups() AnalysisFilterGroupArrayOutput {
	return o.ApplyT(func(v *AnalysisDefinition) []AnalysisFilterGroup {
		if v == nil {
			return nil
		}
		return v.FilterGroups
	}).(AnalysisFilterGroupArrayOutput)
}

func (o AnalysisDefinitionPtrOutput) ParameterDeclarations() AnalysisParameterDeclarationArrayOutput {
	return o.ApplyT(func(v *AnalysisDefinition) []AnalysisParameterDeclaration {
		if v == nil {
			return nil
		}
		return v.ParameterDeclarations
	}).(AnalysisParameterDeclarationArrayOutput)
}

func (o AnalysisDefinitionPtrOutput) Sheets() AnalysisSheetDefinitionArrayOutput {
	return o.ApplyT(func(v *AnalysisDefinition) []AnalysisSheetDefinition {
		if v == nil {
			return nil
		}
		return v.Sheets
	}).(AnalysisSheetDefinitionArrayOutput)
}

type AnalysisDestinationParameterValueConfiguration struct {
	CustomValuesConfiguration *AnalysisCustomValuesConfiguration `pulumi:"customValuesConfiguration"`
	SelectAllValueOptions     *AnalysisSelectAllValueOptions     `pulumi:"selectAllValueOptions"`
	SourceField               *string                            `pulumi:"sourceField"`
	SourceParameterName       *string                            `pulumi:"sourceParameterName"`
}

// AnalysisDestinationParameterValueConfigurationInput is an input type that accepts AnalysisDestinationParameterValueConfigurationArgs and AnalysisDestinationParameterValueConfigurationOutput values.
// You can construct a concrete instance of `AnalysisDestinationParameterValueConfigurationInput` via:
//
//	AnalysisDestinationParameterValueConfigurationArgs{...}
type AnalysisDestinationParameterValueConfigurationInput interface {
	pulumi.Input

	ToAnalysisDestinationParameterValueConfigurationOutput() AnalysisDestinationParameterValueConfigurationOutput
	ToAnalysisDestinationParameterValueConfigurationOutputWithContext(context.Context) AnalysisDestinationParameterValueConfigurationOutput
}

type AnalysisDestinationParameterValueConfigurationArgs struct {
	CustomValuesConfiguration AnalysisCustomValuesConfigurationPtrInput `pulumi:"customValuesConfiguration"`
	SelectAllValueOptions     AnalysisSelectAllValueOptionsPtrInput     `pulumi:"selectAllValueOptions"`
	SourceField               pulumi.StringPtrInput                     `pulumi:"sourceField"`
	SourceParameterName       pulumi.StringPtrInput                     `pulumi:"sourceParameterName"`
}

func (AnalysisDestinationParameterValueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDestinationParameterValueConfiguration)(nil)).Elem()
}

func (i AnalysisDestinationParameterValueConfigurationArgs) ToAnalysisDestinationParameterValueConfigurationOutput() AnalysisDestinationParameterValueConfigurationOutput {
	return i.ToAnalysisDestinationParameterValueConfigurationOutputWithContext(context.Background())
}

func (i AnalysisDestinationParameterValueConfigurationArgs) ToAnalysisDestinationParameterValueConfigurationOutputWithContext(ctx context.Context) AnalysisDestinationParameterValueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDestinationParameterValueConfigurationOutput)
}

type AnalysisDestinationParameterValueConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisDestinationParameterValueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDestinationParameterValueConfiguration)(nil)).Elem()
}

func (o AnalysisDestinationParameterValueConfigurationOutput) ToAnalysisDestinationParameterValueConfigurationOutput() AnalysisDestinationParameterValueConfigurationOutput {
	return o
}

func (o AnalysisDestinationParameterValueConfigurationOutput) ToAnalysisDestinationParameterValueConfigurationOutputWithContext(ctx context.Context) AnalysisDestinationParameterValueConfigurationOutput {
	return o
}

func (o AnalysisDestinationParameterValueConfigurationOutput) CustomValuesConfiguration() AnalysisCustomValuesConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisDestinationParameterValueConfiguration) *AnalysisCustomValuesConfiguration {
		return v.CustomValuesConfiguration
	}).(AnalysisCustomValuesConfigurationPtrOutput)
}

func (o AnalysisDestinationParameterValueConfigurationOutput) SelectAllValueOptions() AnalysisSelectAllValueOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisDestinationParameterValueConfiguration) *AnalysisSelectAllValueOptions {
		return v.SelectAllValueOptions
	}).(AnalysisSelectAllValueOptionsPtrOutput)
}

func (o AnalysisDestinationParameterValueConfigurationOutput) SourceField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDestinationParameterValueConfiguration) *string { return v.SourceField }).(pulumi.StringPtrOutput)
}

func (o AnalysisDestinationParameterValueConfigurationOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisDestinationParameterValueConfiguration) *string { return v.SourceParameterName }).(pulumi.StringPtrOutput)
}

type AnalysisDimensionField struct {
	CategoricalDimensionField *AnalysisCategoricalDimensionField `pulumi:"categoricalDimensionField"`
	DateDimensionField        *AnalysisDateDimensionField        `pulumi:"dateDimensionField"`
	NumericalDimensionField   *AnalysisNumericalDimensionField   `pulumi:"numericalDimensionField"`
}

// AnalysisDimensionFieldInput is an input type that accepts AnalysisDimensionFieldArgs and AnalysisDimensionFieldOutput values.
// You can construct a concrete instance of `AnalysisDimensionFieldInput` via:
//
//	AnalysisDimensionFieldArgs{...}
type AnalysisDimensionFieldInput interface {
	pulumi.Input

	ToAnalysisDimensionFieldOutput() AnalysisDimensionFieldOutput
	ToAnalysisDimensionFieldOutputWithContext(context.Context) AnalysisDimensionFieldOutput
}

type AnalysisDimensionFieldArgs struct {
	CategoricalDimensionField AnalysisCategoricalDimensionFieldPtrInput `pulumi:"categoricalDimensionField"`
	DateDimensionField        AnalysisDateDimensionFieldPtrInput        `pulumi:"dateDimensionField"`
	NumericalDimensionField   AnalysisNumericalDimensionFieldPtrInput   `pulumi:"numericalDimensionField"`
}

func (AnalysisDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDimensionField)(nil)).Elem()
}

func (i AnalysisDimensionFieldArgs) ToAnalysisDimensionFieldOutput() AnalysisDimensionFieldOutput {
	return i.ToAnalysisDimensionFieldOutputWithContext(context.Background())
}

func (i AnalysisDimensionFieldArgs) ToAnalysisDimensionFieldOutputWithContext(ctx context.Context) AnalysisDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDimensionFieldOutput)
}

func (i AnalysisDimensionFieldArgs) ToAnalysisDimensionFieldPtrOutput() AnalysisDimensionFieldPtrOutput {
	return i.ToAnalysisDimensionFieldPtrOutputWithContext(context.Background())
}

func (i AnalysisDimensionFieldArgs) ToAnalysisDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDimensionFieldOutput).ToAnalysisDimensionFieldPtrOutputWithContext(ctx)
}

// AnalysisDimensionFieldPtrInput is an input type that accepts AnalysisDimensionFieldArgs, AnalysisDimensionFieldPtr and AnalysisDimensionFieldPtrOutput values.
// You can construct a concrete instance of `AnalysisDimensionFieldPtrInput` via:
//
//	        AnalysisDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type AnalysisDimensionFieldPtrInput interface {
	pulumi.Input

	ToAnalysisDimensionFieldPtrOutput() AnalysisDimensionFieldPtrOutput
	ToAnalysisDimensionFieldPtrOutputWithContext(context.Context) AnalysisDimensionFieldPtrOutput
}

type analysisDimensionFieldPtrType AnalysisDimensionFieldArgs

func AnalysisDimensionFieldPtr(v *AnalysisDimensionFieldArgs) AnalysisDimensionFieldPtrInput {
	return (*analysisDimensionFieldPtrType)(v)
}

func (*analysisDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDimensionField)(nil)).Elem()
}

func (i *analysisDimensionFieldPtrType) ToAnalysisDimensionFieldPtrOutput() AnalysisDimensionFieldPtrOutput {
	return i.ToAnalysisDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *analysisDimensionFieldPtrType) ToAnalysisDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDimensionFieldPtrOutput)
}

// AnalysisDimensionFieldArrayInput is an input type that accepts AnalysisDimensionFieldArray and AnalysisDimensionFieldArrayOutput values.
// You can construct a concrete instance of `AnalysisDimensionFieldArrayInput` via:
//
//	AnalysisDimensionFieldArray{ AnalysisDimensionFieldArgs{...} }
type AnalysisDimensionFieldArrayInput interface {
	pulumi.Input

	ToAnalysisDimensionFieldArrayOutput() AnalysisDimensionFieldArrayOutput
	ToAnalysisDimensionFieldArrayOutputWithContext(context.Context) AnalysisDimensionFieldArrayOutput
}

type AnalysisDimensionFieldArray []AnalysisDimensionFieldInput

func (AnalysisDimensionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDimensionField)(nil)).Elem()
}

func (i AnalysisDimensionFieldArray) ToAnalysisDimensionFieldArrayOutput() AnalysisDimensionFieldArrayOutput {
	return i.ToAnalysisDimensionFieldArrayOutputWithContext(context.Background())
}

func (i AnalysisDimensionFieldArray) ToAnalysisDimensionFieldArrayOutputWithContext(ctx context.Context) AnalysisDimensionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDimensionFieldArrayOutput)
}

type AnalysisDimensionFieldOutput struct{ *pulumi.OutputState }

func (AnalysisDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDimensionField)(nil)).Elem()
}

func (o AnalysisDimensionFieldOutput) ToAnalysisDimensionFieldOutput() AnalysisDimensionFieldOutput {
	return o
}

func (o AnalysisDimensionFieldOutput) ToAnalysisDimensionFieldOutputWithContext(ctx context.Context) AnalysisDimensionFieldOutput {
	return o
}

func (o AnalysisDimensionFieldOutput) ToAnalysisDimensionFieldPtrOutput() AnalysisDimensionFieldPtrOutput {
	return o.ToAnalysisDimensionFieldPtrOutputWithContext(context.Background())
}

func (o AnalysisDimensionFieldOutput) ToAnalysisDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDimensionField) *AnalysisDimensionField {
		return &v
	}).(AnalysisDimensionFieldPtrOutput)
}

func (o AnalysisDimensionFieldOutput) CategoricalDimensionField() AnalysisCategoricalDimensionFieldPtrOutput {
	return o.ApplyT(func(v AnalysisDimensionField) *AnalysisCategoricalDimensionField { return v.CategoricalDimensionField }).(AnalysisCategoricalDimensionFieldPtrOutput)
}

func (o AnalysisDimensionFieldOutput) DateDimensionField() AnalysisDateDimensionFieldPtrOutput {
	return o.ApplyT(func(v AnalysisDimensionField) *AnalysisDateDimensionField { return v.DateDimensionField }).(AnalysisDateDimensionFieldPtrOutput)
}

func (o AnalysisDimensionFieldOutput) NumericalDimensionField() AnalysisNumericalDimensionFieldPtrOutput {
	return o.ApplyT(func(v AnalysisDimensionField) *AnalysisNumericalDimensionField { return v.NumericalDimensionField }).(AnalysisNumericalDimensionFieldPtrOutput)
}

type AnalysisDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDimensionField)(nil)).Elem()
}

func (o AnalysisDimensionFieldPtrOutput) ToAnalysisDimensionFieldPtrOutput() AnalysisDimensionFieldPtrOutput {
	return o
}

func (o AnalysisDimensionFieldPtrOutput) ToAnalysisDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisDimensionFieldPtrOutput {
	return o
}

func (o AnalysisDimensionFieldPtrOutput) Elem() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v *AnalysisDimensionField) AnalysisDimensionField {
		if v != nil {
			return *v
		}
		var ret AnalysisDimensionField
		return ret
	}).(AnalysisDimensionFieldOutput)
}

func (o AnalysisDimensionFieldPtrOutput) CategoricalDimensionField() AnalysisCategoricalDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisDimensionField) *AnalysisCategoricalDimensionField {
		if v == nil {
			return nil
		}
		return v.CategoricalDimensionField
	}).(AnalysisCategoricalDimensionFieldPtrOutput)
}

func (o AnalysisDimensionFieldPtrOutput) DateDimensionField() AnalysisDateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisDimensionField) *AnalysisDateDimensionField {
		if v == nil {
			return nil
		}
		return v.DateDimensionField
	}).(AnalysisDateDimensionFieldPtrOutput)
}

func (o AnalysisDimensionFieldPtrOutput) NumericalDimensionField() AnalysisNumericalDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisDimensionField) *AnalysisNumericalDimensionField {
		if v == nil {
			return nil
		}
		return v.NumericalDimensionField
	}).(AnalysisNumericalDimensionFieldPtrOutput)
}

type AnalysisDimensionFieldArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDimensionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDimensionField)(nil)).Elem()
}

func (o AnalysisDimensionFieldArrayOutput) ToAnalysisDimensionFieldArrayOutput() AnalysisDimensionFieldArrayOutput {
	return o
}

func (o AnalysisDimensionFieldArrayOutput) ToAnalysisDimensionFieldArrayOutputWithContext(ctx context.Context) AnalysisDimensionFieldArrayOutput {
	return o
}

func (o AnalysisDimensionFieldArrayOutput) Index(i pulumi.IntInput) AnalysisDimensionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDimensionField {
		return vs[0].([]AnalysisDimensionField)[vs[1].(int)]
	}).(AnalysisDimensionFieldOutput)
}

type AnalysisDonutCenterOptions struct {
	LabelVisibility *AnalysisVisibility `pulumi:"labelVisibility"`
}

// AnalysisDonutCenterOptionsInput is an input type that accepts AnalysisDonutCenterOptionsArgs and AnalysisDonutCenterOptionsOutput values.
// You can construct a concrete instance of `AnalysisDonutCenterOptionsInput` via:
//
//	AnalysisDonutCenterOptionsArgs{...}
type AnalysisDonutCenterOptionsInput interface {
	pulumi.Input

	ToAnalysisDonutCenterOptionsOutput() AnalysisDonutCenterOptionsOutput
	ToAnalysisDonutCenterOptionsOutputWithContext(context.Context) AnalysisDonutCenterOptionsOutput
}

type AnalysisDonutCenterOptionsArgs struct {
	LabelVisibility AnalysisVisibilityPtrInput `pulumi:"labelVisibility"`
}

func (AnalysisDonutCenterOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDonutCenterOptions)(nil)).Elem()
}

func (i AnalysisDonutCenterOptionsArgs) ToAnalysisDonutCenterOptionsOutput() AnalysisDonutCenterOptionsOutput {
	return i.ToAnalysisDonutCenterOptionsOutputWithContext(context.Background())
}

func (i AnalysisDonutCenterOptionsArgs) ToAnalysisDonutCenterOptionsOutputWithContext(ctx context.Context) AnalysisDonutCenterOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDonutCenterOptionsOutput)
}

func (i AnalysisDonutCenterOptionsArgs) ToAnalysisDonutCenterOptionsPtrOutput() AnalysisDonutCenterOptionsPtrOutput {
	return i.ToAnalysisDonutCenterOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisDonutCenterOptionsArgs) ToAnalysisDonutCenterOptionsPtrOutputWithContext(ctx context.Context) AnalysisDonutCenterOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDonutCenterOptionsOutput).ToAnalysisDonutCenterOptionsPtrOutputWithContext(ctx)
}

// AnalysisDonutCenterOptionsPtrInput is an input type that accepts AnalysisDonutCenterOptionsArgs, AnalysisDonutCenterOptionsPtr and AnalysisDonutCenterOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisDonutCenterOptionsPtrInput` via:
//
//	        AnalysisDonutCenterOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisDonutCenterOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisDonutCenterOptionsPtrOutput() AnalysisDonutCenterOptionsPtrOutput
	ToAnalysisDonutCenterOptionsPtrOutputWithContext(context.Context) AnalysisDonutCenterOptionsPtrOutput
}

type analysisDonutCenterOptionsPtrType AnalysisDonutCenterOptionsArgs

func AnalysisDonutCenterOptionsPtr(v *AnalysisDonutCenterOptionsArgs) AnalysisDonutCenterOptionsPtrInput {
	return (*analysisDonutCenterOptionsPtrType)(v)
}

func (*analysisDonutCenterOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDonutCenterOptions)(nil)).Elem()
}

func (i *analysisDonutCenterOptionsPtrType) ToAnalysisDonutCenterOptionsPtrOutput() AnalysisDonutCenterOptionsPtrOutput {
	return i.ToAnalysisDonutCenterOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisDonutCenterOptionsPtrType) ToAnalysisDonutCenterOptionsPtrOutputWithContext(ctx context.Context) AnalysisDonutCenterOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDonutCenterOptionsPtrOutput)
}

type AnalysisDonutCenterOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisDonutCenterOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDonutCenterOptions)(nil)).Elem()
}

func (o AnalysisDonutCenterOptionsOutput) ToAnalysisDonutCenterOptionsOutput() AnalysisDonutCenterOptionsOutput {
	return o
}

func (o AnalysisDonutCenterOptionsOutput) ToAnalysisDonutCenterOptionsOutputWithContext(ctx context.Context) AnalysisDonutCenterOptionsOutput {
	return o
}

func (o AnalysisDonutCenterOptionsOutput) ToAnalysisDonutCenterOptionsPtrOutput() AnalysisDonutCenterOptionsPtrOutput {
	return o.ToAnalysisDonutCenterOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisDonutCenterOptionsOutput) ToAnalysisDonutCenterOptionsPtrOutputWithContext(ctx context.Context) AnalysisDonutCenterOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDonutCenterOptions) *AnalysisDonutCenterOptions {
		return &v
	}).(AnalysisDonutCenterOptionsPtrOutput)
}

func (o AnalysisDonutCenterOptionsOutput) LabelVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisDonutCenterOptions) *AnalysisVisibility { return v.LabelVisibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisDonutCenterOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDonutCenterOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDonutCenterOptions)(nil)).Elem()
}

func (o AnalysisDonutCenterOptionsPtrOutput) ToAnalysisDonutCenterOptionsPtrOutput() AnalysisDonutCenterOptionsPtrOutput {
	return o
}

func (o AnalysisDonutCenterOptionsPtrOutput) ToAnalysisDonutCenterOptionsPtrOutputWithContext(ctx context.Context) AnalysisDonutCenterOptionsPtrOutput {
	return o
}

func (o AnalysisDonutCenterOptionsPtrOutput) Elem() AnalysisDonutCenterOptionsOutput {
	return o.ApplyT(func(v *AnalysisDonutCenterOptions) AnalysisDonutCenterOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisDonutCenterOptions
		return ret
	}).(AnalysisDonutCenterOptionsOutput)
}

func (o AnalysisDonutCenterOptionsPtrOutput) LabelVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisDonutCenterOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.LabelVisibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisDonutOptions struct {
	ArcOptions         *AnalysisArcOptions         `pulumi:"arcOptions"`
	DonutCenterOptions *AnalysisDonutCenterOptions `pulumi:"donutCenterOptions"`
}

// AnalysisDonutOptionsInput is an input type that accepts AnalysisDonutOptionsArgs and AnalysisDonutOptionsOutput values.
// You can construct a concrete instance of `AnalysisDonutOptionsInput` via:
//
//	AnalysisDonutOptionsArgs{...}
type AnalysisDonutOptionsInput interface {
	pulumi.Input

	ToAnalysisDonutOptionsOutput() AnalysisDonutOptionsOutput
	ToAnalysisDonutOptionsOutputWithContext(context.Context) AnalysisDonutOptionsOutput
}

type AnalysisDonutOptionsArgs struct {
	ArcOptions         AnalysisArcOptionsPtrInput         `pulumi:"arcOptions"`
	DonutCenterOptions AnalysisDonutCenterOptionsPtrInput `pulumi:"donutCenterOptions"`
}

func (AnalysisDonutOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDonutOptions)(nil)).Elem()
}

func (i AnalysisDonutOptionsArgs) ToAnalysisDonutOptionsOutput() AnalysisDonutOptionsOutput {
	return i.ToAnalysisDonutOptionsOutputWithContext(context.Background())
}

func (i AnalysisDonutOptionsArgs) ToAnalysisDonutOptionsOutputWithContext(ctx context.Context) AnalysisDonutOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDonutOptionsOutput)
}

func (i AnalysisDonutOptionsArgs) ToAnalysisDonutOptionsPtrOutput() AnalysisDonutOptionsPtrOutput {
	return i.ToAnalysisDonutOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisDonutOptionsArgs) ToAnalysisDonutOptionsPtrOutputWithContext(ctx context.Context) AnalysisDonutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDonutOptionsOutput).ToAnalysisDonutOptionsPtrOutputWithContext(ctx)
}

// AnalysisDonutOptionsPtrInput is an input type that accepts AnalysisDonutOptionsArgs, AnalysisDonutOptionsPtr and AnalysisDonutOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisDonutOptionsPtrInput` via:
//
//	        AnalysisDonutOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisDonutOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisDonutOptionsPtrOutput() AnalysisDonutOptionsPtrOutput
	ToAnalysisDonutOptionsPtrOutputWithContext(context.Context) AnalysisDonutOptionsPtrOutput
}

type analysisDonutOptionsPtrType AnalysisDonutOptionsArgs

func AnalysisDonutOptionsPtr(v *AnalysisDonutOptionsArgs) AnalysisDonutOptionsPtrInput {
	return (*analysisDonutOptionsPtrType)(v)
}

func (*analysisDonutOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDonutOptions)(nil)).Elem()
}

func (i *analysisDonutOptionsPtrType) ToAnalysisDonutOptionsPtrOutput() AnalysisDonutOptionsPtrOutput {
	return i.ToAnalysisDonutOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisDonutOptionsPtrType) ToAnalysisDonutOptionsPtrOutputWithContext(ctx context.Context) AnalysisDonutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDonutOptionsPtrOutput)
}

type AnalysisDonutOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisDonutOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDonutOptions)(nil)).Elem()
}

func (o AnalysisDonutOptionsOutput) ToAnalysisDonutOptionsOutput() AnalysisDonutOptionsOutput {
	return o
}

func (o AnalysisDonutOptionsOutput) ToAnalysisDonutOptionsOutputWithContext(ctx context.Context) AnalysisDonutOptionsOutput {
	return o
}

func (o AnalysisDonutOptionsOutput) ToAnalysisDonutOptionsPtrOutput() AnalysisDonutOptionsPtrOutput {
	return o.ToAnalysisDonutOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisDonutOptionsOutput) ToAnalysisDonutOptionsPtrOutputWithContext(ctx context.Context) AnalysisDonutOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDonutOptions) *AnalysisDonutOptions {
		return &v
	}).(AnalysisDonutOptionsPtrOutput)
}

func (o AnalysisDonutOptionsOutput) ArcOptions() AnalysisArcOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisDonutOptions) *AnalysisArcOptions { return v.ArcOptions }).(AnalysisArcOptionsPtrOutput)
}

func (o AnalysisDonutOptionsOutput) DonutCenterOptions() AnalysisDonutCenterOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisDonutOptions) *AnalysisDonutCenterOptions { return v.DonutCenterOptions }).(AnalysisDonutCenterOptionsPtrOutput)
}

type AnalysisDonutOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDonutOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDonutOptions)(nil)).Elem()
}

func (o AnalysisDonutOptionsPtrOutput) ToAnalysisDonutOptionsPtrOutput() AnalysisDonutOptionsPtrOutput {
	return o
}

func (o AnalysisDonutOptionsPtrOutput) ToAnalysisDonutOptionsPtrOutputWithContext(ctx context.Context) AnalysisDonutOptionsPtrOutput {
	return o
}

func (o AnalysisDonutOptionsPtrOutput) Elem() AnalysisDonutOptionsOutput {
	return o.ApplyT(func(v *AnalysisDonutOptions) AnalysisDonutOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisDonutOptions
		return ret
	}).(AnalysisDonutOptionsOutput)
}

func (o AnalysisDonutOptionsPtrOutput) ArcOptions() AnalysisArcOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisDonutOptions) *AnalysisArcOptions {
		if v == nil {
			return nil
		}
		return v.ArcOptions
	}).(AnalysisArcOptionsPtrOutput)
}

func (o AnalysisDonutOptionsPtrOutput) DonutCenterOptions() AnalysisDonutCenterOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisDonutOptions) *AnalysisDonutCenterOptions {
		if v == nil {
			return nil
		}
		return v.DonutCenterOptions
	}).(AnalysisDonutCenterOptionsPtrOutput)
}

type AnalysisDrillDownFilter struct {
	CategoryFilter        *AnalysisCategoryDrillDownFilter        `pulumi:"categoryFilter"`
	NumericEqualityFilter *AnalysisNumericEqualityDrillDownFilter `pulumi:"numericEqualityFilter"`
	TimeRangeFilter       *AnalysisTimeRangeDrillDownFilter       `pulumi:"timeRangeFilter"`
}

// AnalysisDrillDownFilterInput is an input type that accepts AnalysisDrillDownFilterArgs and AnalysisDrillDownFilterOutput values.
// You can construct a concrete instance of `AnalysisDrillDownFilterInput` via:
//
//	AnalysisDrillDownFilterArgs{...}
type AnalysisDrillDownFilterInput interface {
	pulumi.Input

	ToAnalysisDrillDownFilterOutput() AnalysisDrillDownFilterOutput
	ToAnalysisDrillDownFilterOutputWithContext(context.Context) AnalysisDrillDownFilterOutput
}

type AnalysisDrillDownFilterArgs struct {
	CategoryFilter        AnalysisCategoryDrillDownFilterPtrInput        `pulumi:"categoryFilter"`
	NumericEqualityFilter AnalysisNumericEqualityDrillDownFilterPtrInput `pulumi:"numericEqualityFilter"`
	TimeRangeFilter       AnalysisTimeRangeDrillDownFilterPtrInput       `pulumi:"timeRangeFilter"`
}

func (AnalysisDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDrillDownFilter)(nil)).Elem()
}

func (i AnalysisDrillDownFilterArgs) ToAnalysisDrillDownFilterOutput() AnalysisDrillDownFilterOutput {
	return i.ToAnalysisDrillDownFilterOutputWithContext(context.Background())
}

func (i AnalysisDrillDownFilterArgs) ToAnalysisDrillDownFilterOutputWithContext(ctx context.Context) AnalysisDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDrillDownFilterOutput)
}

// AnalysisDrillDownFilterArrayInput is an input type that accepts AnalysisDrillDownFilterArray and AnalysisDrillDownFilterArrayOutput values.
// You can construct a concrete instance of `AnalysisDrillDownFilterArrayInput` via:
//
//	AnalysisDrillDownFilterArray{ AnalysisDrillDownFilterArgs{...} }
type AnalysisDrillDownFilterArrayInput interface {
	pulumi.Input

	ToAnalysisDrillDownFilterArrayOutput() AnalysisDrillDownFilterArrayOutput
	ToAnalysisDrillDownFilterArrayOutputWithContext(context.Context) AnalysisDrillDownFilterArrayOutput
}

type AnalysisDrillDownFilterArray []AnalysisDrillDownFilterInput

func (AnalysisDrillDownFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDrillDownFilter)(nil)).Elem()
}

func (i AnalysisDrillDownFilterArray) ToAnalysisDrillDownFilterArrayOutput() AnalysisDrillDownFilterArrayOutput {
	return i.ToAnalysisDrillDownFilterArrayOutputWithContext(context.Background())
}

func (i AnalysisDrillDownFilterArray) ToAnalysisDrillDownFilterArrayOutputWithContext(ctx context.Context) AnalysisDrillDownFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDrillDownFilterArrayOutput)
}

type AnalysisDrillDownFilterOutput struct{ *pulumi.OutputState }

func (AnalysisDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDrillDownFilter)(nil)).Elem()
}

func (o AnalysisDrillDownFilterOutput) ToAnalysisDrillDownFilterOutput() AnalysisDrillDownFilterOutput {
	return o
}

func (o AnalysisDrillDownFilterOutput) ToAnalysisDrillDownFilterOutputWithContext(ctx context.Context) AnalysisDrillDownFilterOutput {
	return o
}

func (o AnalysisDrillDownFilterOutput) CategoryFilter() AnalysisCategoryDrillDownFilterPtrOutput {
	return o.ApplyT(func(v AnalysisDrillDownFilter) *AnalysisCategoryDrillDownFilter { return v.CategoryFilter }).(AnalysisCategoryDrillDownFilterPtrOutput)
}

func (o AnalysisDrillDownFilterOutput) NumericEqualityFilter() AnalysisNumericEqualityDrillDownFilterPtrOutput {
	return o.ApplyT(func(v AnalysisDrillDownFilter) *AnalysisNumericEqualityDrillDownFilter {
		return v.NumericEqualityFilter
	}).(AnalysisNumericEqualityDrillDownFilterPtrOutput)
}

func (o AnalysisDrillDownFilterOutput) TimeRangeFilter() AnalysisTimeRangeDrillDownFilterPtrOutput {
	return o.ApplyT(func(v AnalysisDrillDownFilter) *AnalysisTimeRangeDrillDownFilter { return v.TimeRangeFilter }).(AnalysisTimeRangeDrillDownFilterPtrOutput)
}

type AnalysisDrillDownFilterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisDrillDownFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisDrillDownFilter)(nil)).Elem()
}

func (o AnalysisDrillDownFilterArrayOutput) ToAnalysisDrillDownFilterArrayOutput() AnalysisDrillDownFilterArrayOutput {
	return o
}

func (o AnalysisDrillDownFilterArrayOutput) ToAnalysisDrillDownFilterArrayOutputWithContext(ctx context.Context) AnalysisDrillDownFilterArrayOutput {
	return o
}

func (o AnalysisDrillDownFilterArrayOutput) Index(i pulumi.IntInput) AnalysisDrillDownFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisDrillDownFilter {
		return vs[0].([]AnalysisDrillDownFilter)[vs[1].(int)]
	}).(AnalysisDrillDownFilterOutput)
}

type AnalysisDropDownControlDisplayOptions struct {
	SelectAllOptions *AnalysisListControlSelectAllOptions `pulumi:"selectAllOptions"`
	TitleOptions     *AnalysisLabelOptions                `pulumi:"titleOptions"`
}

// AnalysisDropDownControlDisplayOptionsInput is an input type that accepts AnalysisDropDownControlDisplayOptionsArgs and AnalysisDropDownControlDisplayOptionsOutput values.
// You can construct a concrete instance of `AnalysisDropDownControlDisplayOptionsInput` via:
//
//	AnalysisDropDownControlDisplayOptionsArgs{...}
type AnalysisDropDownControlDisplayOptionsInput interface {
	pulumi.Input

	ToAnalysisDropDownControlDisplayOptionsOutput() AnalysisDropDownControlDisplayOptionsOutput
	ToAnalysisDropDownControlDisplayOptionsOutputWithContext(context.Context) AnalysisDropDownControlDisplayOptionsOutput
}

type AnalysisDropDownControlDisplayOptionsArgs struct {
	SelectAllOptions AnalysisListControlSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
	TitleOptions     AnalysisLabelOptionsPtrInput                `pulumi:"titleOptions"`
}

func (AnalysisDropDownControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDropDownControlDisplayOptions)(nil)).Elem()
}

func (i AnalysisDropDownControlDisplayOptionsArgs) ToAnalysisDropDownControlDisplayOptionsOutput() AnalysisDropDownControlDisplayOptionsOutput {
	return i.ToAnalysisDropDownControlDisplayOptionsOutputWithContext(context.Background())
}

func (i AnalysisDropDownControlDisplayOptionsArgs) ToAnalysisDropDownControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisDropDownControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDropDownControlDisplayOptionsOutput)
}

func (i AnalysisDropDownControlDisplayOptionsArgs) ToAnalysisDropDownControlDisplayOptionsPtrOutput() AnalysisDropDownControlDisplayOptionsPtrOutput {
	return i.ToAnalysisDropDownControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisDropDownControlDisplayOptionsArgs) ToAnalysisDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisDropDownControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDropDownControlDisplayOptionsOutput).ToAnalysisDropDownControlDisplayOptionsPtrOutputWithContext(ctx)
}

// AnalysisDropDownControlDisplayOptionsPtrInput is an input type that accepts AnalysisDropDownControlDisplayOptionsArgs, AnalysisDropDownControlDisplayOptionsPtr and AnalysisDropDownControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisDropDownControlDisplayOptionsPtrInput` via:
//
//	        AnalysisDropDownControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisDropDownControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisDropDownControlDisplayOptionsPtrOutput() AnalysisDropDownControlDisplayOptionsPtrOutput
	ToAnalysisDropDownControlDisplayOptionsPtrOutputWithContext(context.Context) AnalysisDropDownControlDisplayOptionsPtrOutput
}

type analysisDropDownControlDisplayOptionsPtrType AnalysisDropDownControlDisplayOptionsArgs

func AnalysisDropDownControlDisplayOptionsPtr(v *AnalysisDropDownControlDisplayOptionsArgs) AnalysisDropDownControlDisplayOptionsPtrInput {
	return (*analysisDropDownControlDisplayOptionsPtrType)(v)
}

func (*analysisDropDownControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDropDownControlDisplayOptions)(nil)).Elem()
}

func (i *analysisDropDownControlDisplayOptionsPtrType) ToAnalysisDropDownControlDisplayOptionsPtrOutput() AnalysisDropDownControlDisplayOptionsPtrOutput {
	return i.ToAnalysisDropDownControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisDropDownControlDisplayOptionsPtrType) ToAnalysisDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisDropDownControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDropDownControlDisplayOptionsPtrOutput)
}

type AnalysisDropDownControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisDropDownControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDropDownControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisDropDownControlDisplayOptionsOutput) ToAnalysisDropDownControlDisplayOptionsOutput() AnalysisDropDownControlDisplayOptionsOutput {
	return o
}

func (o AnalysisDropDownControlDisplayOptionsOutput) ToAnalysisDropDownControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisDropDownControlDisplayOptionsOutput {
	return o
}

func (o AnalysisDropDownControlDisplayOptionsOutput) ToAnalysisDropDownControlDisplayOptionsPtrOutput() AnalysisDropDownControlDisplayOptionsPtrOutput {
	return o.ToAnalysisDropDownControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisDropDownControlDisplayOptionsOutput) ToAnalysisDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDropDownControlDisplayOptions) *AnalysisDropDownControlDisplayOptions {
		return &v
	}).(AnalysisDropDownControlDisplayOptionsPtrOutput)
}

func (o AnalysisDropDownControlDisplayOptionsOutput) SelectAllOptions() AnalysisListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisDropDownControlDisplayOptions) *AnalysisListControlSelectAllOptions {
		return v.SelectAllOptions
	}).(AnalysisListControlSelectAllOptionsPtrOutput)
}

func (o AnalysisDropDownControlDisplayOptionsOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisDropDownControlDisplayOptions) *AnalysisLabelOptions { return v.TitleOptions }).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisDropDownControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDropDownControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDropDownControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisDropDownControlDisplayOptionsPtrOutput) ToAnalysisDropDownControlDisplayOptionsPtrOutput() AnalysisDropDownControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisDropDownControlDisplayOptionsPtrOutput) ToAnalysisDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisDropDownControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisDropDownControlDisplayOptionsPtrOutput) Elem() AnalysisDropDownControlDisplayOptionsOutput {
	return o.ApplyT(func(v *AnalysisDropDownControlDisplayOptions) AnalysisDropDownControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisDropDownControlDisplayOptions
		return ret
	}).(AnalysisDropDownControlDisplayOptionsOutput)
}

func (o AnalysisDropDownControlDisplayOptionsPtrOutput) SelectAllOptions() AnalysisListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisDropDownControlDisplayOptions) *AnalysisListControlSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(AnalysisListControlSelectAllOptionsPtrOutput)
}

func (o AnalysisDropDownControlDisplayOptionsPtrOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisDropDownControlDisplayOptions) *AnalysisLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisDynamicDefaultValue struct {
	DefaultValueColumn AnalysisColumnIdentifier  `pulumi:"defaultValueColumn"`
	GroupNameColumn    *AnalysisColumnIdentifier `pulumi:"groupNameColumn"`
	UserNameColumn     *AnalysisColumnIdentifier `pulumi:"userNameColumn"`
}

// AnalysisDynamicDefaultValueInput is an input type that accepts AnalysisDynamicDefaultValueArgs and AnalysisDynamicDefaultValueOutput values.
// You can construct a concrete instance of `AnalysisDynamicDefaultValueInput` via:
//
//	AnalysisDynamicDefaultValueArgs{...}
type AnalysisDynamicDefaultValueInput interface {
	pulumi.Input

	ToAnalysisDynamicDefaultValueOutput() AnalysisDynamicDefaultValueOutput
	ToAnalysisDynamicDefaultValueOutputWithContext(context.Context) AnalysisDynamicDefaultValueOutput
}

type AnalysisDynamicDefaultValueArgs struct {
	DefaultValueColumn AnalysisColumnIdentifierInput    `pulumi:"defaultValueColumn"`
	GroupNameColumn    AnalysisColumnIdentifierPtrInput `pulumi:"groupNameColumn"`
	UserNameColumn     AnalysisColumnIdentifierPtrInput `pulumi:"userNameColumn"`
}

func (AnalysisDynamicDefaultValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDynamicDefaultValue)(nil)).Elem()
}

func (i AnalysisDynamicDefaultValueArgs) ToAnalysisDynamicDefaultValueOutput() AnalysisDynamicDefaultValueOutput {
	return i.ToAnalysisDynamicDefaultValueOutputWithContext(context.Background())
}

func (i AnalysisDynamicDefaultValueArgs) ToAnalysisDynamicDefaultValueOutputWithContext(ctx context.Context) AnalysisDynamicDefaultValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDynamicDefaultValueOutput)
}

func (i AnalysisDynamicDefaultValueArgs) ToAnalysisDynamicDefaultValuePtrOutput() AnalysisDynamicDefaultValuePtrOutput {
	return i.ToAnalysisDynamicDefaultValuePtrOutputWithContext(context.Background())
}

func (i AnalysisDynamicDefaultValueArgs) ToAnalysisDynamicDefaultValuePtrOutputWithContext(ctx context.Context) AnalysisDynamicDefaultValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDynamicDefaultValueOutput).ToAnalysisDynamicDefaultValuePtrOutputWithContext(ctx)
}

// AnalysisDynamicDefaultValuePtrInput is an input type that accepts AnalysisDynamicDefaultValueArgs, AnalysisDynamicDefaultValuePtr and AnalysisDynamicDefaultValuePtrOutput values.
// You can construct a concrete instance of `AnalysisDynamicDefaultValuePtrInput` via:
//
//	        AnalysisDynamicDefaultValueArgs{...}
//
//	or:
//
//	        nil
type AnalysisDynamicDefaultValuePtrInput interface {
	pulumi.Input

	ToAnalysisDynamicDefaultValuePtrOutput() AnalysisDynamicDefaultValuePtrOutput
	ToAnalysisDynamicDefaultValuePtrOutputWithContext(context.Context) AnalysisDynamicDefaultValuePtrOutput
}

type analysisDynamicDefaultValuePtrType AnalysisDynamicDefaultValueArgs

func AnalysisDynamicDefaultValuePtr(v *AnalysisDynamicDefaultValueArgs) AnalysisDynamicDefaultValuePtrInput {
	return (*analysisDynamicDefaultValuePtrType)(v)
}

func (*analysisDynamicDefaultValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDynamicDefaultValue)(nil)).Elem()
}

func (i *analysisDynamicDefaultValuePtrType) ToAnalysisDynamicDefaultValuePtrOutput() AnalysisDynamicDefaultValuePtrOutput {
	return i.ToAnalysisDynamicDefaultValuePtrOutputWithContext(context.Background())
}

func (i *analysisDynamicDefaultValuePtrType) ToAnalysisDynamicDefaultValuePtrOutputWithContext(ctx context.Context) AnalysisDynamicDefaultValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisDynamicDefaultValuePtrOutput)
}

type AnalysisDynamicDefaultValueOutput struct{ *pulumi.OutputState }

func (AnalysisDynamicDefaultValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDynamicDefaultValue)(nil)).Elem()
}

func (o AnalysisDynamicDefaultValueOutput) ToAnalysisDynamicDefaultValueOutput() AnalysisDynamicDefaultValueOutput {
	return o
}

func (o AnalysisDynamicDefaultValueOutput) ToAnalysisDynamicDefaultValueOutputWithContext(ctx context.Context) AnalysisDynamicDefaultValueOutput {
	return o
}

func (o AnalysisDynamicDefaultValueOutput) ToAnalysisDynamicDefaultValuePtrOutput() AnalysisDynamicDefaultValuePtrOutput {
	return o.ToAnalysisDynamicDefaultValuePtrOutputWithContext(context.Background())
}

func (o AnalysisDynamicDefaultValueOutput) ToAnalysisDynamicDefaultValuePtrOutputWithContext(ctx context.Context) AnalysisDynamicDefaultValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDynamicDefaultValue) *AnalysisDynamicDefaultValue {
		return &v
	}).(AnalysisDynamicDefaultValuePtrOutput)
}

func (o AnalysisDynamicDefaultValueOutput) DefaultValueColumn() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisDynamicDefaultValue) AnalysisColumnIdentifier { return v.DefaultValueColumn }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisDynamicDefaultValueOutput) GroupNameColumn() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v AnalysisDynamicDefaultValue) *AnalysisColumnIdentifier { return v.GroupNameColumn }).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisDynamicDefaultValueOutput) UserNameColumn() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v AnalysisDynamicDefaultValue) *AnalysisColumnIdentifier { return v.UserNameColumn }).(AnalysisColumnIdentifierPtrOutput)
}

type AnalysisDynamicDefaultValuePtrOutput struct{ *pulumi.OutputState }

func (AnalysisDynamicDefaultValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDynamicDefaultValue)(nil)).Elem()
}

func (o AnalysisDynamicDefaultValuePtrOutput) ToAnalysisDynamicDefaultValuePtrOutput() AnalysisDynamicDefaultValuePtrOutput {
	return o
}

func (o AnalysisDynamicDefaultValuePtrOutput) ToAnalysisDynamicDefaultValuePtrOutputWithContext(ctx context.Context) AnalysisDynamicDefaultValuePtrOutput {
	return o
}

func (o AnalysisDynamicDefaultValuePtrOutput) Elem() AnalysisDynamicDefaultValueOutput {
	return o.ApplyT(func(v *AnalysisDynamicDefaultValue) AnalysisDynamicDefaultValue {
		if v != nil {
			return *v
		}
		var ret AnalysisDynamicDefaultValue
		return ret
	}).(AnalysisDynamicDefaultValueOutput)
}

func (o AnalysisDynamicDefaultValuePtrOutput) DefaultValueColumn() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisDynamicDefaultValue) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.DefaultValueColumn
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisDynamicDefaultValuePtrOutput) GroupNameColumn() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisDynamicDefaultValue) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.GroupNameColumn
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisDynamicDefaultValuePtrOutput) UserNameColumn() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisDynamicDefaultValue) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.UserNameColumn
	}).(AnalysisColumnIdentifierPtrOutput)
}

type AnalysisEmptyVisual struct {
	Actions           []AnalysisVisualCustomAction `pulumi:"actions"`
	DataSetIdentifier string                       `pulumi:"dataSetIdentifier"`
	VisualId          string                       `pulumi:"visualId"`
}

// AnalysisEmptyVisualInput is an input type that accepts AnalysisEmptyVisualArgs and AnalysisEmptyVisualOutput values.
// You can construct a concrete instance of `AnalysisEmptyVisualInput` via:
//
//	AnalysisEmptyVisualArgs{...}
type AnalysisEmptyVisualInput interface {
	pulumi.Input

	ToAnalysisEmptyVisualOutput() AnalysisEmptyVisualOutput
	ToAnalysisEmptyVisualOutputWithContext(context.Context) AnalysisEmptyVisualOutput
}

type AnalysisEmptyVisualArgs struct {
	Actions           AnalysisVisualCustomActionArrayInput `pulumi:"actions"`
	DataSetIdentifier pulumi.StringInput                   `pulumi:"dataSetIdentifier"`
	VisualId          pulumi.StringInput                   `pulumi:"visualId"`
}

func (AnalysisEmptyVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisEmptyVisual)(nil)).Elem()
}

func (i AnalysisEmptyVisualArgs) ToAnalysisEmptyVisualOutput() AnalysisEmptyVisualOutput {
	return i.ToAnalysisEmptyVisualOutputWithContext(context.Background())
}

func (i AnalysisEmptyVisualArgs) ToAnalysisEmptyVisualOutputWithContext(ctx context.Context) AnalysisEmptyVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisEmptyVisualOutput)
}

func (i AnalysisEmptyVisualArgs) ToAnalysisEmptyVisualPtrOutput() AnalysisEmptyVisualPtrOutput {
	return i.ToAnalysisEmptyVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisEmptyVisualArgs) ToAnalysisEmptyVisualPtrOutputWithContext(ctx context.Context) AnalysisEmptyVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisEmptyVisualOutput).ToAnalysisEmptyVisualPtrOutputWithContext(ctx)
}

// AnalysisEmptyVisualPtrInput is an input type that accepts AnalysisEmptyVisualArgs, AnalysisEmptyVisualPtr and AnalysisEmptyVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisEmptyVisualPtrInput` via:
//
//	        AnalysisEmptyVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisEmptyVisualPtrInput interface {
	pulumi.Input

	ToAnalysisEmptyVisualPtrOutput() AnalysisEmptyVisualPtrOutput
	ToAnalysisEmptyVisualPtrOutputWithContext(context.Context) AnalysisEmptyVisualPtrOutput
}

type analysisEmptyVisualPtrType AnalysisEmptyVisualArgs

func AnalysisEmptyVisualPtr(v *AnalysisEmptyVisualArgs) AnalysisEmptyVisualPtrInput {
	return (*analysisEmptyVisualPtrType)(v)
}

func (*analysisEmptyVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisEmptyVisual)(nil)).Elem()
}

func (i *analysisEmptyVisualPtrType) ToAnalysisEmptyVisualPtrOutput() AnalysisEmptyVisualPtrOutput {
	return i.ToAnalysisEmptyVisualPtrOutputWithContext(context.Background())
}

func (i *analysisEmptyVisualPtrType) ToAnalysisEmptyVisualPtrOutputWithContext(ctx context.Context) AnalysisEmptyVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisEmptyVisualPtrOutput)
}

type AnalysisEmptyVisualOutput struct{ *pulumi.OutputState }

func (AnalysisEmptyVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisEmptyVisual)(nil)).Elem()
}

func (o AnalysisEmptyVisualOutput) ToAnalysisEmptyVisualOutput() AnalysisEmptyVisualOutput {
	return o
}

func (o AnalysisEmptyVisualOutput) ToAnalysisEmptyVisualOutputWithContext(ctx context.Context) AnalysisEmptyVisualOutput {
	return o
}

func (o AnalysisEmptyVisualOutput) ToAnalysisEmptyVisualPtrOutput() AnalysisEmptyVisualPtrOutput {
	return o.ToAnalysisEmptyVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisEmptyVisualOutput) ToAnalysisEmptyVisualPtrOutputWithContext(ctx context.Context) AnalysisEmptyVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisEmptyVisual) *AnalysisEmptyVisual {
		return &v
	}).(AnalysisEmptyVisualPtrOutput)
}

func (o AnalysisEmptyVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisEmptyVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisEmptyVisualOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisEmptyVisual) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o AnalysisEmptyVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisEmptyVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisEmptyVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisEmptyVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisEmptyVisual)(nil)).Elem()
}

func (o AnalysisEmptyVisualPtrOutput) ToAnalysisEmptyVisualPtrOutput() AnalysisEmptyVisualPtrOutput {
	return o
}

func (o AnalysisEmptyVisualPtrOutput) ToAnalysisEmptyVisualPtrOutputWithContext(ctx context.Context) AnalysisEmptyVisualPtrOutput {
	return o
}

func (o AnalysisEmptyVisualPtrOutput) Elem() AnalysisEmptyVisualOutput {
	return o.ApplyT(func(v *AnalysisEmptyVisual) AnalysisEmptyVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisEmptyVisual
		return ret
	}).(AnalysisEmptyVisualOutput)
}

func (o AnalysisEmptyVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisEmptyVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisEmptyVisualPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisEmptyVisual) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisEmptyVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisEmptyVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisEntity struct {
	Path *string `pulumi:"path"`
}

type AnalysisEntityOutput struct{ *pulumi.OutputState }

func (AnalysisEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisEntity)(nil)).Elem()
}

func (o AnalysisEntityOutput) ToAnalysisEntityOutput() AnalysisEntityOutput {
	return o
}

func (o AnalysisEntityOutput) ToAnalysisEntityOutputWithContext(ctx context.Context) AnalysisEntityOutput {
	return o
}

func (o AnalysisEntityOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisEntity) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type AnalysisEntityArrayOutput struct{ *pulumi.OutputState }

func (AnalysisEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisEntity)(nil)).Elem()
}

func (o AnalysisEntityArrayOutput) ToAnalysisEntityArrayOutput() AnalysisEntityArrayOutput {
	return o
}

func (o AnalysisEntityArrayOutput) ToAnalysisEntityArrayOutputWithContext(ctx context.Context) AnalysisEntityArrayOutput {
	return o
}

func (o AnalysisEntityArrayOutput) Index(i pulumi.IntInput) AnalysisEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisEntity {
		return vs[0].([]AnalysisEntity)[vs[1].(int)]
	}).(AnalysisEntityOutput)
}

type AnalysisError struct {
	Message          *string            `pulumi:"message"`
	Type             *AnalysisErrorType `pulumi:"type"`
	ViolatedEntities []AnalysisEntity   `pulumi:"violatedEntities"`
}

type AnalysisErrorOutput struct{ *pulumi.OutputState }

func (AnalysisErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisError)(nil)).Elem()
}

func (o AnalysisErrorOutput) ToAnalysisErrorOutput() AnalysisErrorOutput {
	return o
}

func (o AnalysisErrorOutput) ToAnalysisErrorOutputWithContext(ctx context.Context) AnalysisErrorOutput {
	return o
}

func (o AnalysisErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o AnalysisErrorOutput) Type() AnalysisErrorTypePtrOutput {
	return o.ApplyT(func(v AnalysisError) *AnalysisErrorType { return v.Type }).(AnalysisErrorTypePtrOutput)
}

func (o AnalysisErrorOutput) ViolatedEntities() AnalysisEntityArrayOutput {
	return o.ApplyT(func(v AnalysisError) []AnalysisEntity { return v.ViolatedEntities }).(AnalysisEntityArrayOutput)
}

type AnalysisErrorArrayOutput struct{ *pulumi.OutputState }

func (AnalysisErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisError)(nil)).Elem()
}

func (o AnalysisErrorArrayOutput) ToAnalysisErrorArrayOutput() AnalysisErrorArrayOutput {
	return o
}

func (o AnalysisErrorArrayOutput) ToAnalysisErrorArrayOutputWithContext(ctx context.Context) AnalysisErrorArrayOutput {
	return o
}

func (o AnalysisErrorArrayOutput) Index(i pulumi.IntInput) AnalysisErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisError {
		return vs[0].([]AnalysisError)[vs[1].(int)]
	}).(AnalysisErrorOutput)
}

type AnalysisExcludePeriodConfiguration struct {
	Amount      float64                 `pulumi:"amount"`
	Granularity AnalysisTimeGranularity `pulumi:"granularity"`
	Status      *AnalysisWidgetStatus   `pulumi:"status"`
}

// AnalysisExcludePeriodConfigurationInput is an input type that accepts AnalysisExcludePeriodConfigurationArgs and AnalysisExcludePeriodConfigurationOutput values.
// You can construct a concrete instance of `AnalysisExcludePeriodConfigurationInput` via:
//
//	AnalysisExcludePeriodConfigurationArgs{...}
type AnalysisExcludePeriodConfigurationInput interface {
	pulumi.Input

	ToAnalysisExcludePeriodConfigurationOutput() AnalysisExcludePeriodConfigurationOutput
	ToAnalysisExcludePeriodConfigurationOutputWithContext(context.Context) AnalysisExcludePeriodConfigurationOutput
}

type AnalysisExcludePeriodConfigurationArgs struct {
	Amount      pulumi.Float64Input          `pulumi:"amount"`
	Granularity AnalysisTimeGranularityInput `pulumi:"granularity"`
	Status      AnalysisWidgetStatusPtrInput `pulumi:"status"`
}

func (AnalysisExcludePeriodConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisExcludePeriodConfiguration)(nil)).Elem()
}

func (i AnalysisExcludePeriodConfigurationArgs) ToAnalysisExcludePeriodConfigurationOutput() AnalysisExcludePeriodConfigurationOutput {
	return i.ToAnalysisExcludePeriodConfigurationOutputWithContext(context.Background())
}

func (i AnalysisExcludePeriodConfigurationArgs) ToAnalysisExcludePeriodConfigurationOutputWithContext(ctx context.Context) AnalysisExcludePeriodConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisExcludePeriodConfigurationOutput)
}

func (i AnalysisExcludePeriodConfigurationArgs) ToAnalysisExcludePeriodConfigurationPtrOutput() AnalysisExcludePeriodConfigurationPtrOutput {
	return i.ToAnalysisExcludePeriodConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisExcludePeriodConfigurationArgs) ToAnalysisExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) AnalysisExcludePeriodConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisExcludePeriodConfigurationOutput).ToAnalysisExcludePeriodConfigurationPtrOutputWithContext(ctx)
}

// AnalysisExcludePeriodConfigurationPtrInput is an input type that accepts AnalysisExcludePeriodConfigurationArgs, AnalysisExcludePeriodConfigurationPtr and AnalysisExcludePeriodConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisExcludePeriodConfigurationPtrInput` via:
//
//	        AnalysisExcludePeriodConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisExcludePeriodConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisExcludePeriodConfigurationPtrOutput() AnalysisExcludePeriodConfigurationPtrOutput
	ToAnalysisExcludePeriodConfigurationPtrOutputWithContext(context.Context) AnalysisExcludePeriodConfigurationPtrOutput
}

type analysisExcludePeriodConfigurationPtrType AnalysisExcludePeriodConfigurationArgs

func AnalysisExcludePeriodConfigurationPtr(v *AnalysisExcludePeriodConfigurationArgs) AnalysisExcludePeriodConfigurationPtrInput {
	return (*analysisExcludePeriodConfigurationPtrType)(v)
}

func (*analysisExcludePeriodConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisExcludePeriodConfiguration)(nil)).Elem()
}

func (i *analysisExcludePeriodConfigurationPtrType) ToAnalysisExcludePeriodConfigurationPtrOutput() AnalysisExcludePeriodConfigurationPtrOutput {
	return i.ToAnalysisExcludePeriodConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisExcludePeriodConfigurationPtrType) ToAnalysisExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) AnalysisExcludePeriodConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisExcludePeriodConfigurationPtrOutput)
}

type AnalysisExcludePeriodConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisExcludePeriodConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisExcludePeriodConfiguration)(nil)).Elem()
}

func (o AnalysisExcludePeriodConfigurationOutput) ToAnalysisExcludePeriodConfigurationOutput() AnalysisExcludePeriodConfigurationOutput {
	return o
}

func (o AnalysisExcludePeriodConfigurationOutput) ToAnalysisExcludePeriodConfigurationOutputWithContext(ctx context.Context) AnalysisExcludePeriodConfigurationOutput {
	return o
}

func (o AnalysisExcludePeriodConfigurationOutput) ToAnalysisExcludePeriodConfigurationPtrOutput() AnalysisExcludePeriodConfigurationPtrOutput {
	return o.ToAnalysisExcludePeriodConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisExcludePeriodConfigurationOutput) ToAnalysisExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) AnalysisExcludePeriodConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisExcludePeriodConfiguration) *AnalysisExcludePeriodConfiguration {
		return &v
	}).(AnalysisExcludePeriodConfigurationPtrOutput)
}

func (o AnalysisExcludePeriodConfigurationOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisExcludePeriodConfiguration) float64 { return v.Amount }).(pulumi.Float64Output)
}

func (o AnalysisExcludePeriodConfigurationOutput) Granularity() AnalysisTimeGranularityOutput {
	return o.ApplyT(func(v AnalysisExcludePeriodConfiguration) AnalysisTimeGranularity { return v.Granularity }).(AnalysisTimeGranularityOutput)
}

func (o AnalysisExcludePeriodConfigurationOutput) Status() AnalysisWidgetStatusPtrOutput {
	return o.ApplyT(func(v AnalysisExcludePeriodConfiguration) *AnalysisWidgetStatus { return v.Status }).(AnalysisWidgetStatusPtrOutput)
}

type AnalysisExcludePeriodConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisExcludePeriodConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisExcludePeriodConfiguration)(nil)).Elem()
}

func (o AnalysisExcludePeriodConfigurationPtrOutput) ToAnalysisExcludePeriodConfigurationPtrOutput() AnalysisExcludePeriodConfigurationPtrOutput {
	return o
}

func (o AnalysisExcludePeriodConfigurationPtrOutput) ToAnalysisExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) AnalysisExcludePeriodConfigurationPtrOutput {
	return o
}

func (o AnalysisExcludePeriodConfigurationPtrOutput) Elem() AnalysisExcludePeriodConfigurationOutput {
	return o.ApplyT(func(v *AnalysisExcludePeriodConfiguration) AnalysisExcludePeriodConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisExcludePeriodConfiguration
		return ret
	}).(AnalysisExcludePeriodConfigurationOutput)
}

func (o AnalysisExcludePeriodConfigurationPtrOutput) Amount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisExcludePeriodConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.Amount
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisExcludePeriodConfigurationPtrOutput) Granularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v *AnalysisExcludePeriodConfiguration) *AnalysisTimeGranularity {
		if v == nil {
			return nil
		}
		return &v.Granularity
	}).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisExcludePeriodConfigurationPtrOutput) Status() AnalysisWidgetStatusPtrOutput {
	return o.ApplyT(func(v *AnalysisExcludePeriodConfiguration) *AnalysisWidgetStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(AnalysisWidgetStatusPtrOutput)
}

type AnalysisExplicitHierarchy struct {
	Columns          []AnalysisColumnIdentifier `pulumi:"columns"`
	DrillDownFilters []AnalysisDrillDownFilter  `pulumi:"drillDownFilters"`
	HierarchyId      string                     `pulumi:"hierarchyId"`
}

// AnalysisExplicitHierarchyInput is an input type that accepts AnalysisExplicitHierarchyArgs and AnalysisExplicitHierarchyOutput values.
// You can construct a concrete instance of `AnalysisExplicitHierarchyInput` via:
//
//	AnalysisExplicitHierarchyArgs{...}
type AnalysisExplicitHierarchyInput interface {
	pulumi.Input

	ToAnalysisExplicitHierarchyOutput() AnalysisExplicitHierarchyOutput
	ToAnalysisExplicitHierarchyOutputWithContext(context.Context) AnalysisExplicitHierarchyOutput
}

type AnalysisExplicitHierarchyArgs struct {
	Columns          AnalysisColumnIdentifierArrayInput `pulumi:"columns"`
	DrillDownFilters AnalysisDrillDownFilterArrayInput  `pulumi:"drillDownFilters"`
	HierarchyId      pulumi.StringInput                 `pulumi:"hierarchyId"`
}

func (AnalysisExplicitHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisExplicitHierarchy)(nil)).Elem()
}

func (i AnalysisExplicitHierarchyArgs) ToAnalysisExplicitHierarchyOutput() AnalysisExplicitHierarchyOutput {
	return i.ToAnalysisExplicitHierarchyOutputWithContext(context.Background())
}

func (i AnalysisExplicitHierarchyArgs) ToAnalysisExplicitHierarchyOutputWithContext(ctx context.Context) AnalysisExplicitHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisExplicitHierarchyOutput)
}

func (i AnalysisExplicitHierarchyArgs) ToAnalysisExplicitHierarchyPtrOutput() AnalysisExplicitHierarchyPtrOutput {
	return i.ToAnalysisExplicitHierarchyPtrOutputWithContext(context.Background())
}

func (i AnalysisExplicitHierarchyArgs) ToAnalysisExplicitHierarchyPtrOutputWithContext(ctx context.Context) AnalysisExplicitHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisExplicitHierarchyOutput).ToAnalysisExplicitHierarchyPtrOutputWithContext(ctx)
}

// AnalysisExplicitHierarchyPtrInput is an input type that accepts AnalysisExplicitHierarchyArgs, AnalysisExplicitHierarchyPtr and AnalysisExplicitHierarchyPtrOutput values.
// You can construct a concrete instance of `AnalysisExplicitHierarchyPtrInput` via:
//
//	        AnalysisExplicitHierarchyArgs{...}
//
//	or:
//
//	        nil
type AnalysisExplicitHierarchyPtrInput interface {
	pulumi.Input

	ToAnalysisExplicitHierarchyPtrOutput() AnalysisExplicitHierarchyPtrOutput
	ToAnalysisExplicitHierarchyPtrOutputWithContext(context.Context) AnalysisExplicitHierarchyPtrOutput
}

type analysisExplicitHierarchyPtrType AnalysisExplicitHierarchyArgs

func AnalysisExplicitHierarchyPtr(v *AnalysisExplicitHierarchyArgs) AnalysisExplicitHierarchyPtrInput {
	return (*analysisExplicitHierarchyPtrType)(v)
}

func (*analysisExplicitHierarchyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisExplicitHierarchy)(nil)).Elem()
}

func (i *analysisExplicitHierarchyPtrType) ToAnalysisExplicitHierarchyPtrOutput() AnalysisExplicitHierarchyPtrOutput {
	return i.ToAnalysisExplicitHierarchyPtrOutputWithContext(context.Background())
}

func (i *analysisExplicitHierarchyPtrType) ToAnalysisExplicitHierarchyPtrOutputWithContext(ctx context.Context) AnalysisExplicitHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisExplicitHierarchyPtrOutput)
}

type AnalysisExplicitHierarchyOutput struct{ *pulumi.OutputState }

func (AnalysisExplicitHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisExplicitHierarchy)(nil)).Elem()
}

func (o AnalysisExplicitHierarchyOutput) ToAnalysisExplicitHierarchyOutput() AnalysisExplicitHierarchyOutput {
	return o
}

func (o AnalysisExplicitHierarchyOutput) ToAnalysisExplicitHierarchyOutputWithContext(ctx context.Context) AnalysisExplicitHierarchyOutput {
	return o
}

func (o AnalysisExplicitHierarchyOutput) ToAnalysisExplicitHierarchyPtrOutput() AnalysisExplicitHierarchyPtrOutput {
	return o.ToAnalysisExplicitHierarchyPtrOutputWithContext(context.Background())
}

func (o AnalysisExplicitHierarchyOutput) ToAnalysisExplicitHierarchyPtrOutputWithContext(ctx context.Context) AnalysisExplicitHierarchyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisExplicitHierarchy) *AnalysisExplicitHierarchy {
		return &v
	}).(AnalysisExplicitHierarchyPtrOutput)
}

func (o AnalysisExplicitHierarchyOutput) Columns() AnalysisColumnIdentifierArrayOutput {
	return o.ApplyT(func(v AnalysisExplicitHierarchy) []AnalysisColumnIdentifier { return v.Columns }).(AnalysisColumnIdentifierArrayOutput)
}

func (o AnalysisExplicitHierarchyOutput) DrillDownFilters() AnalysisDrillDownFilterArrayOutput {
	return o.ApplyT(func(v AnalysisExplicitHierarchy) []AnalysisDrillDownFilter { return v.DrillDownFilters }).(AnalysisDrillDownFilterArrayOutput)
}

func (o AnalysisExplicitHierarchyOutput) HierarchyId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisExplicitHierarchy) string { return v.HierarchyId }).(pulumi.StringOutput)
}

type AnalysisExplicitHierarchyPtrOutput struct{ *pulumi.OutputState }

func (AnalysisExplicitHierarchyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisExplicitHierarchy)(nil)).Elem()
}

func (o AnalysisExplicitHierarchyPtrOutput) ToAnalysisExplicitHierarchyPtrOutput() AnalysisExplicitHierarchyPtrOutput {
	return o
}

func (o AnalysisExplicitHierarchyPtrOutput) ToAnalysisExplicitHierarchyPtrOutputWithContext(ctx context.Context) AnalysisExplicitHierarchyPtrOutput {
	return o
}

func (o AnalysisExplicitHierarchyPtrOutput) Elem() AnalysisExplicitHierarchyOutput {
	return o.ApplyT(func(v *AnalysisExplicitHierarchy) AnalysisExplicitHierarchy {
		if v != nil {
			return *v
		}
		var ret AnalysisExplicitHierarchy
		return ret
	}).(AnalysisExplicitHierarchyOutput)
}

func (o AnalysisExplicitHierarchyPtrOutput) Columns() AnalysisColumnIdentifierArrayOutput {
	return o.ApplyT(func(v *AnalysisExplicitHierarchy) []AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(AnalysisColumnIdentifierArrayOutput)
}

func (o AnalysisExplicitHierarchyPtrOutput) DrillDownFilters() AnalysisDrillDownFilterArrayOutput {
	return o.ApplyT(func(v *AnalysisExplicitHierarchy) []AnalysisDrillDownFilter {
		if v == nil {
			return nil
		}
		return v.DrillDownFilters
	}).(AnalysisDrillDownFilterArrayOutput)
}

func (o AnalysisExplicitHierarchyPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisExplicitHierarchy) *string {
		if v == nil {
			return nil
		}
		return &v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type AnalysisFieldBasedTooltip struct {
	AggregationVisibility *AnalysisVisibility       `pulumi:"aggregationVisibility"`
	TooltipFields         []AnalysisTooltipItem     `pulumi:"tooltipFields"`
	TooltipTitleType      *AnalysisTooltipTitleType `pulumi:"tooltipTitleType"`
}

// AnalysisFieldBasedTooltipInput is an input type that accepts AnalysisFieldBasedTooltipArgs and AnalysisFieldBasedTooltipOutput values.
// You can construct a concrete instance of `AnalysisFieldBasedTooltipInput` via:
//
//	AnalysisFieldBasedTooltipArgs{...}
type AnalysisFieldBasedTooltipInput interface {
	pulumi.Input

	ToAnalysisFieldBasedTooltipOutput() AnalysisFieldBasedTooltipOutput
	ToAnalysisFieldBasedTooltipOutputWithContext(context.Context) AnalysisFieldBasedTooltipOutput
}

type AnalysisFieldBasedTooltipArgs struct {
	AggregationVisibility AnalysisVisibilityPtrInput       `pulumi:"aggregationVisibility"`
	TooltipFields         AnalysisTooltipItemArrayInput    `pulumi:"tooltipFields"`
	TooltipTitleType      AnalysisTooltipTitleTypePtrInput `pulumi:"tooltipTitleType"`
}

func (AnalysisFieldBasedTooltipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldBasedTooltip)(nil)).Elem()
}

func (i AnalysisFieldBasedTooltipArgs) ToAnalysisFieldBasedTooltipOutput() AnalysisFieldBasedTooltipOutput {
	return i.ToAnalysisFieldBasedTooltipOutputWithContext(context.Background())
}

func (i AnalysisFieldBasedTooltipArgs) ToAnalysisFieldBasedTooltipOutputWithContext(ctx context.Context) AnalysisFieldBasedTooltipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldBasedTooltipOutput)
}

func (i AnalysisFieldBasedTooltipArgs) ToAnalysisFieldBasedTooltipPtrOutput() AnalysisFieldBasedTooltipPtrOutput {
	return i.ToAnalysisFieldBasedTooltipPtrOutputWithContext(context.Background())
}

func (i AnalysisFieldBasedTooltipArgs) ToAnalysisFieldBasedTooltipPtrOutputWithContext(ctx context.Context) AnalysisFieldBasedTooltipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldBasedTooltipOutput).ToAnalysisFieldBasedTooltipPtrOutputWithContext(ctx)
}

// AnalysisFieldBasedTooltipPtrInput is an input type that accepts AnalysisFieldBasedTooltipArgs, AnalysisFieldBasedTooltipPtr and AnalysisFieldBasedTooltipPtrOutput values.
// You can construct a concrete instance of `AnalysisFieldBasedTooltipPtrInput` via:
//
//	        AnalysisFieldBasedTooltipArgs{...}
//
//	or:
//
//	        nil
type AnalysisFieldBasedTooltipPtrInput interface {
	pulumi.Input

	ToAnalysisFieldBasedTooltipPtrOutput() AnalysisFieldBasedTooltipPtrOutput
	ToAnalysisFieldBasedTooltipPtrOutputWithContext(context.Context) AnalysisFieldBasedTooltipPtrOutput
}

type analysisFieldBasedTooltipPtrType AnalysisFieldBasedTooltipArgs

func AnalysisFieldBasedTooltipPtr(v *AnalysisFieldBasedTooltipArgs) AnalysisFieldBasedTooltipPtrInput {
	return (*analysisFieldBasedTooltipPtrType)(v)
}

func (*analysisFieldBasedTooltipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFieldBasedTooltip)(nil)).Elem()
}

func (i *analysisFieldBasedTooltipPtrType) ToAnalysisFieldBasedTooltipPtrOutput() AnalysisFieldBasedTooltipPtrOutput {
	return i.ToAnalysisFieldBasedTooltipPtrOutputWithContext(context.Background())
}

func (i *analysisFieldBasedTooltipPtrType) ToAnalysisFieldBasedTooltipPtrOutputWithContext(ctx context.Context) AnalysisFieldBasedTooltipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldBasedTooltipPtrOutput)
}

type AnalysisFieldBasedTooltipOutput struct{ *pulumi.OutputState }

func (AnalysisFieldBasedTooltipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldBasedTooltip)(nil)).Elem()
}

func (o AnalysisFieldBasedTooltipOutput) ToAnalysisFieldBasedTooltipOutput() AnalysisFieldBasedTooltipOutput {
	return o
}

func (o AnalysisFieldBasedTooltipOutput) ToAnalysisFieldBasedTooltipOutputWithContext(ctx context.Context) AnalysisFieldBasedTooltipOutput {
	return o
}

func (o AnalysisFieldBasedTooltipOutput) ToAnalysisFieldBasedTooltipPtrOutput() AnalysisFieldBasedTooltipPtrOutput {
	return o.ToAnalysisFieldBasedTooltipPtrOutputWithContext(context.Background())
}

func (o AnalysisFieldBasedTooltipOutput) ToAnalysisFieldBasedTooltipPtrOutputWithContext(ctx context.Context) AnalysisFieldBasedTooltipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFieldBasedTooltip) *AnalysisFieldBasedTooltip {
		return &v
	}).(AnalysisFieldBasedTooltipPtrOutput)
}

func (o AnalysisFieldBasedTooltipOutput) AggregationVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisFieldBasedTooltip) *AnalysisVisibility { return v.AggregationVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisFieldBasedTooltipOutput) TooltipFields() AnalysisTooltipItemArrayOutput {
	return o.ApplyT(func(v AnalysisFieldBasedTooltip) []AnalysisTooltipItem { return v.TooltipFields }).(AnalysisTooltipItemArrayOutput)
}

func (o AnalysisFieldBasedTooltipOutput) TooltipTitleType() AnalysisTooltipTitleTypePtrOutput {
	return o.ApplyT(func(v AnalysisFieldBasedTooltip) *AnalysisTooltipTitleType { return v.TooltipTitleType }).(AnalysisTooltipTitleTypePtrOutput)
}

type AnalysisFieldBasedTooltipPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFieldBasedTooltipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFieldBasedTooltip)(nil)).Elem()
}

func (o AnalysisFieldBasedTooltipPtrOutput) ToAnalysisFieldBasedTooltipPtrOutput() AnalysisFieldBasedTooltipPtrOutput {
	return o
}

func (o AnalysisFieldBasedTooltipPtrOutput) ToAnalysisFieldBasedTooltipPtrOutputWithContext(ctx context.Context) AnalysisFieldBasedTooltipPtrOutput {
	return o
}

func (o AnalysisFieldBasedTooltipPtrOutput) Elem() AnalysisFieldBasedTooltipOutput {
	return o.ApplyT(func(v *AnalysisFieldBasedTooltip) AnalysisFieldBasedTooltip {
		if v != nil {
			return *v
		}
		var ret AnalysisFieldBasedTooltip
		return ret
	}).(AnalysisFieldBasedTooltipOutput)
}

func (o AnalysisFieldBasedTooltipPtrOutput) AggregationVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldBasedTooltip) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.AggregationVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisFieldBasedTooltipPtrOutput) TooltipFields() AnalysisTooltipItemArrayOutput {
	return o.ApplyT(func(v *AnalysisFieldBasedTooltip) []AnalysisTooltipItem {
		if v == nil {
			return nil
		}
		return v.TooltipFields
	}).(AnalysisTooltipItemArrayOutput)
}

func (o AnalysisFieldBasedTooltipPtrOutput) TooltipTitleType() AnalysisTooltipTitleTypePtrOutput {
	return o.ApplyT(func(v *AnalysisFieldBasedTooltip) *AnalysisTooltipTitleType {
		if v == nil {
			return nil
		}
		return v.TooltipTitleType
	}).(AnalysisTooltipTitleTypePtrOutput)
}

type AnalysisFieldLabelType struct {
	FieldId    *string             `pulumi:"fieldId"`
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisFieldLabelTypeInput is an input type that accepts AnalysisFieldLabelTypeArgs and AnalysisFieldLabelTypeOutput values.
// You can construct a concrete instance of `AnalysisFieldLabelTypeInput` via:
//
//	AnalysisFieldLabelTypeArgs{...}
type AnalysisFieldLabelTypeInput interface {
	pulumi.Input

	ToAnalysisFieldLabelTypeOutput() AnalysisFieldLabelTypeOutput
	ToAnalysisFieldLabelTypeOutputWithContext(context.Context) AnalysisFieldLabelTypeOutput
}

type AnalysisFieldLabelTypeArgs struct {
	FieldId    pulumi.StringPtrInput      `pulumi:"fieldId"`
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisFieldLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldLabelType)(nil)).Elem()
}

func (i AnalysisFieldLabelTypeArgs) ToAnalysisFieldLabelTypeOutput() AnalysisFieldLabelTypeOutput {
	return i.ToAnalysisFieldLabelTypeOutputWithContext(context.Background())
}

func (i AnalysisFieldLabelTypeArgs) ToAnalysisFieldLabelTypeOutputWithContext(ctx context.Context) AnalysisFieldLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldLabelTypeOutput)
}

func (i AnalysisFieldLabelTypeArgs) ToAnalysisFieldLabelTypePtrOutput() AnalysisFieldLabelTypePtrOutput {
	return i.ToAnalysisFieldLabelTypePtrOutputWithContext(context.Background())
}

func (i AnalysisFieldLabelTypeArgs) ToAnalysisFieldLabelTypePtrOutputWithContext(ctx context.Context) AnalysisFieldLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldLabelTypeOutput).ToAnalysisFieldLabelTypePtrOutputWithContext(ctx)
}

// AnalysisFieldLabelTypePtrInput is an input type that accepts AnalysisFieldLabelTypeArgs, AnalysisFieldLabelTypePtr and AnalysisFieldLabelTypePtrOutput values.
// You can construct a concrete instance of `AnalysisFieldLabelTypePtrInput` via:
//
//	        AnalysisFieldLabelTypeArgs{...}
//
//	or:
//
//	        nil
type AnalysisFieldLabelTypePtrInput interface {
	pulumi.Input

	ToAnalysisFieldLabelTypePtrOutput() AnalysisFieldLabelTypePtrOutput
	ToAnalysisFieldLabelTypePtrOutputWithContext(context.Context) AnalysisFieldLabelTypePtrOutput
}

type analysisFieldLabelTypePtrType AnalysisFieldLabelTypeArgs

func AnalysisFieldLabelTypePtr(v *AnalysisFieldLabelTypeArgs) AnalysisFieldLabelTypePtrInput {
	return (*analysisFieldLabelTypePtrType)(v)
}

func (*analysisFieldLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFieldLabelType)(nil)).Elem()
}

func (i *analysisFieldLabelTypePtrType) ToAnalysisFieldLabelTypePtrOutput() AnalysisFieldLabelTypePtrOutput {
	return i.ToAnalysisFieldLabelTypePtrOutputWithContext(context.Background())
}

func (i *analysisFieldLabelTypePtrType) ToAnalysisFieldLabelTypePtrOutputWithContext(ctx context.Context) AnalysisFieldLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldLabelTypePtrOutput)
}

type AnalysisFieldLabelTypeOutput struct{ *pulumi.OutputState }

func (AnalysisFieldLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldLabelType)(nil)).Elem()
}

func (o AnalysisFieldLabelTypeOutput) ToAnalysisFieldLabelTypeOutput() AnalysisFieldLabelTypeOutput {
	return o
}

func (o AnalysisFieldLabelTypeOutput) ToAnalysisFieldLabelTypeOutputWithContext(ctx context.Context) AnalysisFieldLabelTypeOutput {
	return o
}

func (o AnalysisFieldLabelTypeOutput) ToAnalysisFieldLabelTypePtrOutput() AnalysisFieldLabelTypePtrOutput {
	return o.ToAnalysisFieldLabelTypePtrOutputWithContext(context.Background())
}

func (o AnalysisFieldLabelTypeOutput) ToAnalysisFieldLabelTypePtrOutputWithContext(ctx context.Context) AnalysisFieldLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFieldLabelType) *AnalysisFieldLabelType {
		return &v
	}).(AnalysisFieldLabelTypePtrOutput)
}

func (o AnalysisFieldLabelTypeOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisFieldLabelType) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

func (o AnalysisFieldLabelTypeOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisFieldLabelType) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisFieldLabelTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisFieldLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFieldLabelType)(nil)).Elem()
}

func (o AnalysisFieldLabelTypePtrOutput) ToAnalysisFieldLabelTypePtrOutput() AnalysisFieldLabelTypePtrOutput {
	return o
}

func (o AnalysisFieldLabelTypePtrOutput) ToAnalysisFieldLabelTypePtrOutputWithContext(ctx context.Context) AnalysisFieldLabelTypePtrOutput {
	return o
}

func (o AnalysisFieldLabelTypePtrOutput) Elem() AnalysisFieldLabelTypeOutput {
	return o.ApplyT(func(v *AnalysisFieldLabelType) AnalysisFieldLabelType {
		if v != nil {
			return *v
		}
		var ret AnalysisFieldLabelType
		return ret
	}).(AnalysisFieldLabelTypeOutput)
}

func (o AnalysisFieldLabelTypePtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldLabelType) *string {
		if v == nil {
			return nil
		}
		return v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFieldLabelTypePtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldLabelType) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisFieldSeriesItem struct {
	AxisBinding AnalysisAxisBinding              `pulumi:"axisBinding"`
	FieldId     string                           `pulumi:"fieldId"`
	Settings    *AnalysisLineChartSeriesSettings `pulumi:"settings"`
}

// AnalysisFieldSeriesItemInput is an input type that accepts AnalysisFieldSeriesItemArgs and AnalysisFieldSeriesItemOutput values.
// You can construct a concrete instance of `AnalysisFieldSeriesItemInput` via:
//
//	AnalysisFieldSeriesItemArgs{...}
type AnalysisFieldSeriesItemInput interface {
	pulumi.Input

	ToAnalysisFieldSeriesItemOutput() AnalysisFieldSeriesItemOutput
	ToAnalysisFieldSeriesItemOutputWithContext(context.Context) AnalysisFieldSeriesItemOutput
}

type AnalysisFieldSeriesItemArgs struct {
	AxisBinding AnalysisAxisBindingInput                `pulumi:"axisBinding"`
	FieldId     pulumi.StringInput                      `pulumi:"fieldId"`
	Settings    AnalysisLineChartSeriesSettingsPtrInput `pulumi:"settings"`
}

func (AnalysisFieldSeriesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldSeriesItem)(nil)).Elem()
}

func (i AnalysisFieldSeriesItemArgs) ToAnalysisFieldSeriesItemOutput() AnalysisFieldSeriesItemOutput {
	return i.ToAnalysisFieldSeriesItemOutputWithContext(context.Background())
}

func (i AnalysisFieldSeriesItemArgs) ToAnalysisFieldSeriesItemOutputWithContext(ctx context.Context) AnalysisFieldSeriesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldSeriesItemOutput)
}

func (i AnalysisFieldSeriesItemArgs) ToAnalysisFieldSeriesItemPtrOutput() AnalysisFieldSeriesItemPtrOutput {
	return i.ToAnalysisFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i AnalysisFieldSeriesItemArgs) ToAnalysisFieldSeriesItemPtrOutputWithContext(ctx context.Context) AnalysisFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldSeriesItemOutput).ToAnalysisFieldSeriesItemPtrOutputWithContext(ctx)
}

// AnalysisFieldSeriesItemPtrInput is an input type that accepts AnalysisFieldSeriesItemArgs, AnalysisFieldSeriesItemPtr and AnalysisFieldSeriesItemPtrOutput values.
// You can construct a concrete instance of `AnalysisFieldSeriesItemPtrInput` via:
//
//	        AnalysisFieldSeriesItemArgs{...}
//
//	or:
//
//	        nil
type AnalysisFieldSeriesItemPtrInput interface {
	pulumi.Input

	ToAnalysisFieldSeriesItemPtrOutput() AnalysisFieldSeriesItemPtrOutput
	ToAnalysisFieldSeriesItemPtrOutputWithContext(context.Context) AnalysisFieldSeriesItemPtrOutput
}

type analysisFieldSeriesItemPtrType AnalysisFieldSeriesItemArgs

func AnalysisFieldSeriesItemPtr(v *AnalysisFieldSeriesItemArgs) AnalysisFieldSeriesItemPtrInput {
	return (*analysisFieldSeriesItemPtrType)(v)
}

func (*analysisFieldSeriesItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFieldSeriesItem)(nil)).Elem()
}

func (i *analysisFieldSeriesItemPtrType) ToAnalysisFieldSeriesItemPtrOutput() AnalysisFieldSeriesItemPtrOutput {
	return i.ToAnalysisFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i *analysisFieldSeriesItemPtrType) ToAnalysisFieldSeriesItemPtrOutputWithContext(ctx context.Context) AnalysisFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldSeriesItemPtrOutput)
}

type AnalysisFieldSeriesItemOutput struct{ *pulumi.OutputState }

func (AnalysisFieldSeriesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldSeriesItem)(nil)).Elem()
}

func (o AnalysisFieldSeriesItemOutput) ToAnalysisFieldSeriesItemOutput() AnalysisFieldSeriesItemOutput {
	return o
}

func (o AnalysisFieldSeriesItemOutput) ToAnalysisFieldSeriesItemOutputWithContext(ctx context.Context) AnalysisFieldSeriesItemOutput {
	return o
}

func (o AnalysisFieldSeriesItemOutput) ToAnalysisFieldSeriesItemPtrOutput() AnalysisFieldSeriesItemPtrOutput {
	return o.ToAnalysisFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (o AnalysisFieldSeriesItemOutput) ToAnalysisFieldSeriesItemPtrOutputWithContext(ctx context.Context) AnalysisFieldSeriesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFieldSeriesItem) *AnalysisFieldSeriesItem {
		return &v
	}).(AnalysisFieldSeriesItemPtrOutput)
}

func (o AnalysisFieldSeriesItemOutput) AxisBinding() AnalysisAxisBindingOutput {
	return o.ApplyT(func(v AnalysisFieldSeriesItem) AnalysisAxisBinding { return v.AxisBinding }).(AnalysisAxisBindingOutput)
}

func (o AnalysisFieldSeriesItemOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFieldSeriesItem) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisFieldSeriesItemOutput) Settings() AnalysisLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v AnalysisFieldSeriesItem) *AnalysisLineChartSeriesSettings { return v.Settings }).(AnalysisLineChartSeriesSettingsPtrOutput)
}

type AnalysisFieldSeriesItemPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFieldSeriesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFieldSeriesItem)(nil)).Elem()
}

func (o AnalysisFieldSeriesItemPtrOutput) ToAnalysisFieldSeriesItemPtrOutput() AnalysisFieldSeriesItemPtrOutput {
	return o
}

func (o AnalysisFieldSeriesItemPtrOutput) ToAnalysisFieldSeriesItemPtrOutputWithContext(ctx context.Context) AnalysisFieldSeriesItemPtrOutput {
	return o
}

func (o AnalysisFieldSeriesItemPtrOutput) Elem() AnalysisFieldSeriesItemOutput {
	return o.ApplyT(func(v *AnalysisFieldSeriesItem) AnalysisFieldSeriesItem {
		if v != nil {
			return *v
		}
		var ret AnalysisFieldSeriesItem
		return ret
	}).(AnalysisFieldSeriesItemOutput)
}

func (o AnalysisFieldSeriesItemPtrOutput) AxisBinding() AnalysisAxisBindingPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldSeriesItem) *AnalysisAxisBinding {
		if v == nil {
			return nil
		}
		return &v.AxisBinding
	}).(AnalysisAxisBindingPtrOutput)
}

func (o AnalysisFieldSeriesItemPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldSeriesItem) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFieldSeriesItemPtrOutput) Settings() AnalysisLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldSeriesItem) *AnalysisLineChartSeriesSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(AnalysisLineChartSeriesSettingsPtrOutput)
}

type AnalysisFieldSort struct {
	Direction AnalysisSortDirection `pulumi:"direction"`
	FieldId   string                `pulumi:"fieldId"`
}

// AnalysisFieldSortInput is an input type that accepts AnalysisFieldSortArgs and AnalysisFieldSortOutput values.
// You can construct a concrete instance of `AnalysisFieldSortInput` via:
//
//	AnalysisFieldSortArgs{...}
type AnalysisFieldSortInput interface {
	pulumi.Input

	ToAnalysisFieldSortOutput() AnalysisFieldSortOutput
	ToAnalysisFieldSortOutputWithContext(context.Context) AnalysisFieldSortOutput
}

type AnalysisFieldSortArgs struct {
	Direction AnalysisSortDirectionInput `pulumi:"direction"`
	FieldId   pulumi.StringInput         `pulumi:"fieldId"`
}

func (AnalysisFieldSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldSort)(nil)).Elem()
}

func (i AnalysisFieldSortArgs) ToAnalysisFieldSortOutput() AnalysisFieldSortOutput {
	return i.ToAnalysisFieldSortOutputWithContext(context.Background())
}

func (i AnalysisFieldSortArgs) ToAnalysisFieldSortOutputWithContext(ctx context.Context) AnalysisFieldSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldSortOutput)
}

func (i AnalysisFieldSortArgs) ToAnalysisFieldSortPtrOutput() AnalysisFieldSortPtrOutput {
	return i.ToAnalysisFieldSortPtrOutputWithContext(context.Background())
}

func (i AnalysisFieldSortArgs) ToAnalysisFieldSortPtrOutputWithContext(ctx context.Context) AnalysisFieldSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldSortOutput).ToAnalysisFieldSortPtrOutputWithContext(ctx)
}

// AnalysisFieldSortPtrInput is an input type that accepts AnalysisFieldSortArgs, AnalysisFieldSortPtr and AnalysisFieldSortPtrOutput values.
// You can construct a concrete instance of `AnalysisFieldSortPtrInput` via:
//
//	        AnalysisFieldSortArgs{...}
//
//	or:
//
//	        nil
type AnalysisFieldSortPtrInput interface {
	pulumi.Input

	ToAnalysisFieldSortPtrOutput() AnalysisFieldSortPtrOutput
	ToAnalysisFieldSortPtrOutputWithContext(context.Context) AnalysisFieldSortPtrOutput
}

type analysisFieldSortPtrType AnalysisFieldSortArgs

func AnalysisFieldSortPtr(v *AnalysisFieldSortArgs) AnalysisFieldSortPtrInput {
	return (*analysisFieldSortPtrType)(v)
}

func (*analysisFieldSortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFieldSort)(nil)).Elem()
}

func (i *analysisFieldSortPtrType) ToAnalysisFieldSortPtrOutput() AnalysisFieldSortPtrOutput {
	return i.ToAnalysisFieldSortPtrOutputWithContext(context.Background())
}

func (i *analysisFieldSortPtrType) ToAnalysisFieldSortPtrOutputWithContext(ctx context.Context) AnalysisFieldSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldSortPtrOutput)
}

type AnalysisFieldSortOutput struct{ *pulumi.OutputState }

func (AnalysisFieldSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldSort)(nil)).Elem()
}

func (o AnalysisFieldSortOutput) ToAnalysisFieldSortOutput() AnalysisFieldSortOutput {
	return o
}

func (o AnalysisFieldSortOutput) ToAnalysisFieldSortOutputWithContext(ctx context.Context) AnalysisFieldSortOutput {
	return o
}

func (o AnalysisFieldSortOutput) ToAnalysisFieldSortPtrOutput() AnalysisFieldSortPtrOutput {
	return o.ToAnalysisFieldSortPtrOutputWithContext(context.Background())
}

func (o AnalysisFieldSortOutput) ToAnalysisFieldSortPtrOutputWithContext(ctx context.Context) AnalysisFieldSortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFieldSort) *AnalysisFieldSort {
		return &v
	}).(AnalysisFieldSortPtrOutput)
}

func (o AnalysisFieldSortOutput) Direction() AnalysisSortDirectionOutput {
	return o.ApplyT(func(v AnalysisFieldSort) AnalysisSortDirection { return v.Direction }).(AnalysisSortDirectionOutput)
}

func (o AnalysisFieldSortOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFieldSort) string { return v.FieldId }).(pulumi.StringOutput)
}

type AnalysisFieldSortPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFieldSortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFieldSort)(nil)).Elem()
}

func (o AnalysisFieldSortPtrOutput) ToAnalysisFieldSortPtrOutput() AnalysisFieldSortPtrOutput {
	return o
}

func (o AnalysisFieldSortPtrOutput) ToAnalysisFieldSortPtrOutputWithContext(ctx context.Context) AnalysisFieldSortPtrOutput {
	return o
}

func (o AnalysisFieldSortPtrOutput) Elem() AnalysisFieldSortOutput {
	return o.ApplyT(func(v *AnalysisFieldSort) AnalysisFieldSort {
		if v != nil {
			return *v
		}
		var ret AnalysisFieldSort
		return ret
	}).(AnalysisFieldSortOutput)
}

func (o AnalysisFieldSortPtrOutput) Direction() AnalysisSortDirectionPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldSort) *AnalysisSortDirection {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(AnalysisSortDirectionPtrOutput)
}

func (o AnalysisFieldSortPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldSort) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type AnalysisFieldSortOptions struct {
	ColumnSort *AnalysisColumnSort `pulumi:"columnSort"`
	FieldSort  *AnalysisFieldSort  `pulumi:"fieldSort"`
}

// AnalysisFieldSortOptionsInput is an input type that accepts AnalysisFieldSortOptionsArgs and AnalysisFieldSortOptionsOutput values.
// You can construct a concrete instance of `AnalysisFieldSortOptionsInput` via:
//
//	AnalysisFieldSortOptionsArgs{...}
type AnalysisFieldSortOptionsInput interface {
	pulumi.Input

	ToAnalysisFieldSortOptionsOutput() AnalysisFieldSortOptionsOutput
	ToAnalysisFieldSortOptionsOutputWithContext(context.Context) AnalysisFieldSortOptionsOutput
}

type AnalysisFieldSortOptionsArgs struct {
	ColumnSort AnalysisColumnSortPtrInput `pulumi:"columnSort"`
	FieldSort  AnalysisFieldSortPtrInput  `pulumi:"fieldSort"`
}

func (AnalysisFieldSortOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldSortOptions)(nil)).Elem()
}

func (i AnalysisFieldSortOptionsArgs) ToAnalysisFieldSortOptionsOutput() AnalysisFieldSortOptionsOutput {
	return i.ToAnalysisFieldSortOptionsOutputWithContext(context.Background())
}

func (i AnalysisFieldSortOptionsArgs) ToAnalysisFieldSortOptionsOutputWithContext(ctx context.Context) AnalysisFieldSortOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldSortOptionsOutput)
}

// AnalysisFieldSortOptionsArrayInput is an input type that accepts AnalysisFieldSortOptionsArray and AnalysisFieldSortOptionsArrayOutput values.
// You can construct a concrete instance of `AnalysisFieldSortOptionsArrayInput` via:
//
//	AnalysisFieldSortOptionsArray{ AnalysisFieldSortOptionsArgs{...} }
type AnalysisFieldSortOptionsArrayInput interface {
	pulumi.Input

	ToAnalysisFieldSortOptionsArrayOutput() AnalysisFieldSortOptionsArrayOutput
	ToAnalysisFieldSortOptionsArrayOutputWithContext(context.Context) AnalysisFieldSortOptionsArrayOutput
}

type AnalysisFieldSortOptionsArray []AnalysisFieldSortOptionsInput

func (AnalysisFieldSortOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFieldSortOptions)(nil)).Elem()
}

func (i AnalysisFieldSortOptionsArray) ToAnalysisFieldSortOptionsArrayOutput() AnalysisFieldSortOptionsArrayOutput {
	return i.ToAnalysisFieldSortOptionsArrayOutputWithContext(context.Background())
}

func (i AnalysisFieldSortOptionsArray) ToAnalysisFieldSortOptionsArrayOutputWithContext(ctx context.Context) AnalysisFieldSortOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisFieldSortOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisFieldSortOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldSortOptions)(nil)).Elem()
}

func (o AnalysisFieldSortOptionsOutput) ToAnalysisFieldSortOptionsOutput() AnalysisFieldSortOptionsOutput {
	return o
}

func (o AnalysisFieldSortOptionsOutput) ToAnalysisFieldSortOptionsOutputWithContext(ctx context.Context) AnalysisFieldSortOptionsOutput {
	return o
}

func (o AnalysisFieldSortOptionsOutput) ColumnSort() AnalysisColumnSortPtrOutput {
	return o.ApplyT(func(v AnalysisFieldSortOptions) *AnalysisColumnSort { return v.ColumnSort }).(AnalysisColumnSortPtrOutput)
}

func (o AnalysisFieldSortOptionsOutput) FieldSort() AnalysisFieldSortPtrOutput {
	return o.ApplyT(func(v AnalysisFieldSortOptions) *AnalysisFieldSort { return v.FieldSort }).(AnalysisFieldSortPtrOutput)
}

type AnalysisFieldSortOptionsArrayOutput struct{ *pulumi.OutputState }

func (AnalysisFieldSortOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFieldSortOptions)(nil)).Elem()
}

func (o AnalysisFieldSortOptionsArrayOutput) ToAnalysisFieldSortOptionsArrayOutput() AnalysisFieldSortOptionsArrayOutput {
	return o
}

func (o AnalysisFieldSortOptionsArrayOutput) ToAnalysisFieldSortOptionsArrayOutputWithContext(ctx context.Context) AnalysisFieldSortOptionsArrayOutput {
	return o
}

func (o AnalysisFieldSortOptionsArrayOutput) Index(i pulumi.IntInput) AnalysisFieldSortOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisFieldSortOptions {
		return vs[0].([]AnalysisFieldSortOptions)[vs[1].(int)]
	}).(AnalysisFieldSortOptionsOutput)
}

type AnalysisFieldTooltipItem struct {
	FieldId    string              `pulumi:"fieldId"`
	Label      *string             `pulumi:"label"`
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisFieldTooltipItemInput is an input type that accepts AnalysisFieldTooltipItemArgs and AnalysisFieldTooltipItemOutput values.
// You can construct a concrete instance of `AnalysisFieldTooltipItemInput` via:
//
//	AnalysisFieldTooltipItemArgs{...}
type AnalysisFieldTooltipItemInput interface {
	pulumi.Input

	ToAnalysisFieldTooltipItemOutput() AnalysisFieldTooltipItemOutput
	ToAnalysisFieldTooltipItemOutputWithContext(context.Context) AnalysisFieldTooltipItemOutput
}

type AnalysisFieldTooltipItemArgs struct {
	FieldId    pulumi.StringInput         `pulumi:"fieldId"`
	Label      pulumi.StringPtrInput      `pulumi:"label"`
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisFieldTooltipItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldTooltipItem)(nil)).Elem()
}

func (i AnalysisFieldTooltipItemArgs) ToAnalysisFieldTooltipItemOutput() AnalysisFieldTooltipItemOutput {
	return i.ToAnalysisFieldTooltipItemOutputWithContext(context.Background())
}

func (i AnalysisFieldTooltipItemArgs) ToAnalysisFieldTooltipItemOutputWithContext(ctx context.Context) AnalysisFieldTooltipItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldTooltipItemOutput)
}

func (i AnalysisFieldTooltipItemArgs) ToAnalysisFieldTooltipItemPtrOutput() AnalysisFieldTooltipItemPtrOutput {
	return i.ToAnalysisFieldTooltipItemPtrOutputWithContext(context.Background())
}

func (i AnalysisFieldTooltipItemArgs) ToAnalysisFieldTooltipItemPtrOutputWithContext(ctx context.Context) AnalysisFieldTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldTooltipItemOutput).ToAnalysisFieldTooltipItemPtrOutputWithContext(ctx)
}

// AnalysisFieldTooltipItemPtrInput is an input type that accepts AnalysisFieldTooltipItemArgs, AnalysisFieldTooltipItemPtr and AnalysisFieldTooltipItemPtrOutput values.
// You can construct a concrete instance of `AnalysisFieldTooltipItemPtrInput` via:
//
//	        AnalysisFieldTooltipItemArgs{...}
//
//	or:
//
//	        nil
type AnalysisFieldTooltipItemPtrInput interface {
	pulumi.Input

	ToAnalysisFieldTooltipItemPtrOutput() AnalysisFieldTooltipItemPtrOutput
	ToAnalysisFieldTooltipItemPtrOutputWithContext(context.Context) AnalysisFieldTooltipItemPtrOutput
}

type analysisFieldTooltipItemPtrType AnalysisFieldTooltipItemArgs

func AnalysisFieldTooltipItemPtr(v *AnalysisFieldTooltipItemArgs) AnalysisFieldTooltipItemPtrInput {
	return (*analysisFieldTooltipItemPtrType)(v)
}

func (*analysisFieldTooltipItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFieldTooltipItem)(nil)).Elem()
}

func (i *analysisFieldTooltipItemPtrType) ToAnalysisFieldTooltipItemPtrOutput() AnalysisFieldTooltipItemPtrOutput {
	return i.ToAnalysisFieldTooltipItemPtrOutputWithContext(context.Background())
}

func (i *analysisFieldTooltipItemPtrType) ToAnalysisFieldTooltipItemPtrOutputWithContext(ctx context.Context) AnalysisFieldTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFieldTooltipItemPtrOutput)
}

type AnalysisFieldTooltipItemOutput struct{ *pulumi.OutputState }

func (AnalysisFieldTooltipItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFieldTooltipItem)(nil)).Elem()
}

func (o AnalysisFieldTooltipItemOutput) ToAnalysisFieldTooltipItemOutput() AnalysisFieldTooltipItemOutput {
	return o
}

func (o AnalysisFieldTooltipItemOutput) ToAnalysisFieldTooltipItemOutputWithContext(ctx context.Context) AnalysisFieldTooltipItemOutput {
	return o
}

func (o AnalysisFieldTooltipItemOutput) ToAnalysisFieldTooltipItemPtrOutput() AnalysisFieldTooltipItemPtrOutput {
	return o.ToAnalysisFieldTooltipItemPtrOutputWithContext(context.Background())
}

func (o AnalysisFieldTooltipItemOutput) ToAnalysisFieldTooltipItemPtrOutputWithContext(ctx context.Context) AnalysisFieldTooltipItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFieldTooltipItem) *AnalysisFieldTooltipItem {
		return &v
	}).(AnalysisFieldTooltipItemPtrOutput)
}

func (o AnalysisFieldTooltipItemOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFieldTooltipItem) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisFieldTooltipItemOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisFieldTooltipItem) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o AnalysisFieldTooltipItemOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisFieldTooltipItem) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisFieldTooltipItemPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFieldTooltipItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFieldTooltipItem)(nil)).Elem()
}

func (o AnalysisFieldTooltipItemPtrOutput) ToAnalysisFieldTooltipItemPtrOutput() AnalysisFieldTooltipItemPtrOutput {
	return o
}

func (o AnalysisFieldTooltipItemPtrOutput) ToAnalysisFieldTooltipItemPtrOutputWithContext(ctx context.Context) AnalysisFieldTooltipItemPtrOutput {
	return o
}

func (o AnalysisFieldTooltipItemPtrOutput) Elem() AnalysisFieldTooltipItemOutput {
	return o.ApplyT(func(v *AnalysisFieldTooltipItem) AnalysisFieldTooltipItem {
		if v != nil {
			return *v
		}
		var ret AnalysisFieldTooltipItem
		return ret
	}).(AnalysisFieldTooltipItemOutput)
}

func (o AnalysisFieldTooltipItemPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldTooltipItem) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFieldTooltipItemPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldTooltipItem) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFieldTooltipItemPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisFieldTooltipItem) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisFilledMapAggregatedFieldWells struct {
	Geospatial []AnalysisDimensionField `pulumi:"geospatial"`
	Values     []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisFilledMapAggregatedFieldWellsInput is an input type that accepts AnalysisFilledMapAggregatedFieldWellsArgs and AnalysisFilledMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisFilledMapAggregatedFieldWellsInput` via:
//
//	AnalysisFilledMapAggregatedFieldWellsArgs{...}
type AnalysisFilledMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisFilledMapAggregatedFieldWellsOutput() AnalysisFilledMapAggregatedFieldWellsOutput
	ToAnalysisFilledMapAggregatedFieldWellsOutputWithContext(context.Context) AnalysisFilledMapAggregatedFieldWellsOutput
}

type AnalysisFilledMapAggregatedFieldWellsArgs struct {
	Geospatial AnalysisDimensionFieldArrayInput `pulumi:"geospatial"`
	Values     AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisFilledMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisFilledMapAggregatedFieldWellsArgs) ToAnalysisFilledMapAggregatedFieldWellsOutput() AnalysisFilledMapAggregatedFieldWellsOutput {
	return i.ToAnalysisFilledMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisFilledMapAggregatedFieldWellsArgs) ToAnalysisFilledMapAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisFilledMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapAggregatedFieldWellsOutput)
}

func (i AnalysisFilledMapAggregatedFieldWellsArgs) ToAnalysisFilledMapAggregatedFieldWellsPtrOutput() AnalysisFilledMapAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisFilledMapAggregatedFieldWellsArgs) ToAnalysisFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFilledMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapAggregatedFieldWellsOutput).ToAnalysisFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisFilledMapAggregatedFieldWellsPtrInput is an input type that accepts AnalysisFilledMapAggregatedFieldWellsArgs, AnalysisFilledMapAggregatedFieldWellsPtr and AnalysisFilledMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisFilledMapAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisFilledMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilledMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisFilledMapAggregatedFieldWellsPtrOutput() AnalysisFilledMapAggregatedFieldWellsPtrOutput
	ToAnalysisFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisFilledMapAggregatedFieldWellsPtrOutput
}

type analysisFilledMapAggregatedFieldWellsPtrType AnalysisFilledMapAggregatedFieldWellsArgs

func AnalysisFilledMapAggregatedFieldWellsPtr(v *AnalysisFilledMapAggregatedFieldWellsArgs) AnalysisFilledMapAggregatedFieldWellsPtrInput {
	return (*analysisFilledMapAggregatedFieldWellsPtrType)(v)
}

func (*analysisFilledMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisFilledMapAggregatedFieldWellsPtrType) ToAnalysisFilledMapAggregatedFieldWellsPtrOutput() AnalysisFilledMapAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisFilledMapAggregatedFieldWellsPtrType) ToAnalysisFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFilledMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapAggregatedFieldWellsPtrOutput)
}

type AnalysisFilledMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisFilledMapAggregatedFieldWellsOutput) ToAnalysisFilledMapAggregatedFieldWellsOutput() AnalysisFilledMapAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisFilledMapAggregatedFieldWellsOutput) ToAnalysisFilledMapAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisFilledMapAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisFilledMapAggregatedFieldWellsOutput) ToAnalysisFilledMapAggregatedFieldWellsPtrOutput() AnalysisFilledMapAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisFilledMapAggregatedFieldWellsOutput) ToAnalysisFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFilledMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilledMapAggregatedFieldWells) *AnalysisFilledMapAggregatedFieldWells {
		return &v
	}).(AnalysisFilledMapAggregatedFieldWellsPtrOutput)
}

func (o AnalysisFilledMapAggregatedFieldWellsOutput) Geospatial() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisFilledMapAggregatedFieldWells) []AnalysisDimensionField { return v.Geospatial }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisFilledMapAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisFilledMapAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisFilledMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisFilledMapAggregatedFieldWellsPtrOutput) ToAnalysisFilledMapAggregatedFieldWellsPtrOutput() AnalysisFilledMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisFilledMapAggregatedFieldWellsPtrOutput) ToAnalysisFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFilledMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisFilledMapAggregatedFieldWellsPtrOutput) Elem() AnalysisFilledMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisFilledMapAggregatedFieldWells) AnalysisFilledMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisFilledMapAggregatedFieldWells
		return ret
	}).(AnalysisFilledMapAggregatedFieldWellsOutput)
}

func (o AnalysisFilledMapAggregatedFieldWellsPtrOutput) Geospatial() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisFilledMapAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Geospatial
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisFilledMapAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisFilledMapAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisFilledMapConditionalFormatting struct {
	ConditionalFormattingOptions []AnalysisFilledMapConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// AnalysisFilledMapConditionalFormattingInput is an input type that accepts AnalysisFilledMapConditionalFormattingArgs and AnalysisFilledMapConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisFilledMapConditionalFormattingInput` via:
//
//	AnalysisFilledMapConditionalFormattingArgs{...}
type AnalysisFilledMapConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisFilledMapConditionalFormattingOutput() AnalysisFilledMapConditionalFormattingOutput
	ToAnalysisFilledMapConditionalFormattingOutputWithContext(context.Context) AnalysisFilledMapConditionalFormattingOutput
}

type AnalysisFilledMapConditionalFormattingArgs struct {
	ConditionalFormattingOptions AnalysisFilledMapConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (AnalysisFilledMapConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapConditionalFormatting)(nil)).Elem()
}

func (i AnalysisFilledMapConditionalFormattingArgs) ToAnalysisFilledMapConditionalFormattingOutput() AnalysisFilledMapConditionalFormattingOutput {
	return i.ToAnalysisFilledMapConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisFilledMapConditionalFormattingArgs) ToAnalysisFilledMapConditionalFormattingOutputWithContext(ctx context.Context) AnalysisFilledMapConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapConditionalFormattingOutput)
}

func (i AnalysisFilledMapConditionalFormattingArgs) ToAnalysisFilledMapConditionalFormattingPtrOutput() AnalysisFilledMapConditionalFormattingPtrOutput {
	return i.ToAnalysisFilledMapConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisFilledMapConditionalFormattingArgs) ToAnalysisFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisFilledMapConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapConditionalFormattingOutput).ToAnalysisFilledMapConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisFilledMapConditionalFormattingPtrInput is an input type that accepts AnalysisFilledMapConditionalFormattingArgs, AnalysisFilledMapConditionalFormattingPtr and AnalysisFilledMapConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisFilledMapConditionalFormattingPtrInput` via:
//
//	        AnalysisFilledMapConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilledMapConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisFilledMapConditionalFormattingPtrOutput() AnalysisFilledMapConditionalFormattingPtrOutput
	ToAnalysisFilledMapConditionalFormattingPtrOutputWithContext(context.Context) AnalysisFilledMapConditionalFormattingPtrOutput
}

type analysisFilledMapConditionalFormattingPtrType AnalysisFilledMapConditionalFormattingArgs

func AnalysisFilledMapConditionalFormattingPtr(v *AnalysisFilledMapConditionalFormattingArgs) AnalysisFilledMapConditionalFormattingPtrInput {
	return (*analysisFilledMapConditionalFormattingPtrType)(v)
}

func (*analysisFilledMapConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapConditionalFormatting)(nil)).Elem()
}

func (i *analysisFilledMapConditionalFormattingPtrType) ToAnalysisFilledMapConditionalFormattingPtrOutput() AnalysisFilledMapConditionalFormattingPtrOutput {
	return i.ToAnalysisFilledMapConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisFilledMapConditionalFormattingPtrType) ToAnalysisFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisFilledMapConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapConditionalFormattingPtrOutput)
}

type AnalysisFilledMapConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapConditionalFormatting)(nil)).Elem()
}

func (o AnalysisFilledMapConditionalFormattingOutput) ToAnalysisFilledMapConditionalFormattingOutput() AnalysisFilledMapConditionalFormattingOutput {
	return o
}

func (o AnalysisFilledMapConditionalFormattingOutput) ToAnalysisFilledMapConditionalFormattingOutputWithContext(ctx context.Context) AnalysisFilledMapConditionalFormattingOutput {
	return o
}

func (o AnalysisFilledMapConditionalFormattingOutput) ToAnalysisFilledMapConditionalFormattingPtrOutput() AnalysisFilledMapConditionalFormattingPtrOutput {
	return o.ToAnalysisFilledMapConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisFilledMapConditionalFormattingOutput) ToAnalysisFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisFilledMapConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilledMapConditionalFormatting) *AnalysisFilledMapConditionalFormatting {
		return &v
	}).(AnalysisFilledMapConditionalFormattingPtrOutput)
}

func (o AnalysisFilledMapConditionalFormattingOutput) ConditionalFormattingOptions() AnalysisFilledMapConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v AnalysisFilledMapConditionalFormatting) []AnalysisFilledMapConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(AnalysisFilledMapConditionalFormattingOptionArrayOutput)
}

type AnalysisFilledMapConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapConditionalFormatting)(nil)).Elem()
}

func (o AnalysisFilledMapConditionalFormattingPtrOutput) ToAnalysisFilledMapConditionalFormattingPtrOutput() AnalysisFilledMapConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisFilledMapConditionalFormattingPtrOutput) ToAnalysisFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisFilledMapConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisFilledMapConditionalFormattingPtrOutput) Elem() AnalysisFilledMapConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisFilledMapConditionalFormatting) AnalysisFilledMapConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisFilledMapConditionalFormatting
		return ret
	}).(AnalysisFilledMapConditionalFormattingOutput)
}

func (o AnalysisFilledMapConditionalFormattingPtrOutput) ConditionalFormattingOptions() AnalysisFilledMapConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *AnalysisFilledMapConditionalFormatting) []AnalysisFilledMapConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(AnalysisFilledMapConditionalFormattingOptionArrayOutput)
}

type AnalysisFilledMapConditionalFormattingOption struct {
	Shape AnalysisFilledMapShapeConditionalFormatting `pulumi:"shape"`
}

// AnalysisFilledMapConditionalFormattingOptionInput is an input type that accepts AnalysisFilledMapConditionalFormattingOptionArgs and AnalysisFilledMapConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `AnalysisFilledMapConditionalFormattingOptionInput` via:
//
//	AnalysisFilledMapConditionalFormattingOptionArgs{...}
type AnalysisFilledMapConditionalFormattingOptionInput interface {
	pulumi.Input

	ToAnalysisFilledMapConditionalFormattingOptionOutput() AnalysisFilledMapConditionalFormattingOptionOutput
	ToAnalysisFilledMapConditionalFormattingOptionOutputWithContext(context.Context) AnalysisFilledMapConditionalFormattingOptionOutput
}

type AnalysisFilledMapConditionalFormattingOptionArgs struct {
	Shape AnalysisFilledMapShapeConditionalFormattingInput `pulumi:"shape"`
}

func (AnalysisFilledMapConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (i AnalysisFilledMapConditionalFormattingOptionArgs) ToAnalysisFilledMapConditionalFormattingOptionOutput() AnalysisFilledMapConditionalFormattingOptionOutput {
	return i.ToAnalysisFilledMapConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i AnalysisFilledMapConditionalFormattingOptionArgs) ToAnalysisFilledMapConditionalFormattingOptionOutputWithContext(ctx context.Context) AnalysisFilledMapConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapConditionalFormattingOptionOutput)
}

// AnalysisFilledMapConditionalFormattingOptionArrayInput is an input type that accepts AnalysisFilledMapConditionalFormattingOptionArray and AnalysisFilledMapConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `AnalysisFilledMapConditionalFormattingOptionArrayInput` via:
//
//	AnalysisFilledMapConditionalFormattingOptionArray{ AnalysisFilledMapConditionalFormattingOptionArgs{...} }
type AnalysisFilledMapConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToAnalysisFilledMapConditionalFormattingOptionArrayOutput() AnalysisFilledMapConditionalFormattingOptionArrayOutput
	ToAnalysisFilledMapConditionalFormattingOptionArrayOutputWithContext(context.Context) AnalysisFilledMapConditionalFormattingOptionArrayOutput
}

type AnalysisFilledMapConditionalFormattingOptionArray []AnalysisFilledMapConditionalFormattingOptionInput

func (AnalysisFilledMapConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (i AnalysisFilledMapConditionalFormattingOptionArray) ToAnalysisFilledMapConditionalFormattingOptionArrayOutput() AnalysisFilledMapConditionalFormattingOptionArrayOutput {
	return i.ToAnalysisFilledMapConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i AnalysisFilledMapConditionalFormattingOptionArray) ToAnalysisFilledMapConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) AnalysisFilledMapConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapConditionalFormattingOptionArrayOutput)
}

type AnalysisFilledMapConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (o AnalysisFilledMapConditionalFormattingOptionOutput) ToAnalysisFilledMapConditionalFormattingOptionOutput() AnalysisFilledMapConditionalFormattingOptionOutput {
	return o
}

func (o AnalysisFilledMapConditionalFormattingOptionOutput) ToAnalysisFilledMapConditionalFormattingOptionOutputWithContext(ctx context.Context) AnalysisFilledMapConditionalFormattingOptionOutput {
	return o
}

func (o AnalysisFilledMapConditionalFormattingOptionOutput) Shape() AnalysisFilledMapShapeConditionalFormattingOutput {
	return o.ApplyT(func(v AnalysisFilledMapConditionalFormattingOption) AnalysisFilledMapShapeConditionalFormatting {
		return v.Shape
	}).(AnalysisFilledMapShapeConditionalFormattingOutput)
}

type AnalysisFilledMapConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (o AnalysisFilledMapConditionalFormattingOptionArrayOutput) ToAnalysisFilledMapConditionalFormattingOptionArrayOutput() AnalysisFilledMapConditionalFormattingOptionArrayOutput {
	return o
}

func (o AnalysisFilledMapConditionalFormattingOptionArrayOutput) ToAnalysisFilledMapConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) AnalysisFilledMapConditionalFormattingOptionArrayOutput {
	return o
}

func (o AnalysisFilledMapConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) AnalysisFilledMapConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisFilledMapConditionalFormattingOption {
		return vs[0].([]AnalysisFilledMapConditionalFormattingOption)[vs[1].(int)]
	}).(AnalysisFilledMapConditionalFormattingOptionOutput)
}

type AnalysisFilledMapConfiguration struct {
	FieldWells        *AnalysisFilledMapFieldWells        `pulumi:"fieldWells"`
	Legend            *AnalysisLegendOptions              `pulumi:"legend"`
	MapStyleOptions   *AnalysisGeospatialMapStyleOptions  `pulumi:"mapStyleOptions"`
	SortConfiguration *AnalysisFilledMapSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip           *AnalysisTooltipOptions             `pulumi:"tooltip"`
	WindowOptions     *AnalysisGeospatialWindowOptions    `pulumi:"windowOptions"`
}

// AnalysisFilledMapConfigurationInput is an input type that accepts AnalysisFilledMapConfigurationArgs and AnalysisFilledMapConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFilledMapConfigurationInput` via:
//
//	AnalysisFilledMapConfigurationArgs{...}
type AnalysisFilledMapConfigurationInput interface {
	pulumi.Input

	ToAnalysisFilledMapConfigurationOutput() AnalysisFilledMapConfigurationOutput
	ToAnalysisFilledMapConfigurationOutputWithContext(context.Context) AnalysisFilledMapConfigurationOutput
}

type AnalysisFilledMapConfigurationArgs struct {
	FieldWells        AnalysisFilledMapFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend            AnalysisLegendOptionsPtrInput              `pulumi:"legend"`
	MapStyleOptions   AnalysisGeospatialMapStyleOptionsPtrInput  `pulumi:"mapStyleOptions"`
	SortConfiguration AnalysisFilledMapSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip           AnalysisTooltipOptionsPtrInput             `pulumi:"tooltip"`
	WindowOptions     AnalysisGeospatialWindowOptionsPtrInput    `pulumi:"windowOptions"`
}

func (AnalysisFilledMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapConfiguration)(nil)).Elem()
}

func (i AnalysisFilledMapConfigurationArgs) ToAnalysisFilledMapConfigurationOutput() AnalysisFilledMapConfigurationOutput {
	return i.ToAnalysisFilledMapConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFilledMapConfigurationArgs) ToAnalysisFilledMapConfigurationOutputWithContext(ctx context.Context) AnalysisFilledMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapConfigurationOutput)
}

func (i AnalysisFilledMapConfigurationArgs) ToAnalysisFilledMapConfigurationPtrOutput() AnalysisFilledMapConfigurationPtrOutput {
	return i.ToAnalysisFilledMapConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFilledMapConfigurationArgs) ToAnalysisFilledMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilledMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapConfigurationOutput).ToAnalysisFilledMapConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFilledMapConfigurationPtrInput is an input type that accepts AnalysisFilledMapConfigurationArgs, AnalysisFilledMapConfigurationPtr and AnalysisFilledMapConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFilledMapConfigurationPtrInput` via:
//
//	        AnalysisFilledMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilledMapConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFilledMapConfigurationPtrOutput() AnalysisFilledMapConfigurationPtrOutput
	ToAnalysisFilledMapConfigurationPtrOutputWithContext(context.Context) AnalysisFilledMapConfigurationPtrOutput
}

type analysisFilledMapConfigurationPtrType AnalysisFilledMapConfigurationArgs

func AnalysisFilledMapConfigurationPtr(v *AnalysisFilledMapConfigurationArgs) AnalysisFilledMapConfigurationPtrInput {
	return (*analysisFilledMapConfigurationPtrType)(v)
}

func (*analysisFilledMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapConfiguration)(nil)).Elem()
}

func (i *analysisFilledMapConfigurationPtrType) ToAnalysisFilledMapConfigurationPtrOutput() AnalysisFilledMapConfigurationPtrOutput {
	return i.ToAnalysisFilledMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFilledMapConfigurationPtrType) ToAnalysisFilledMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilledMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapConfigurationPtrOutput)
}

type AnalysisFilledMapConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapConfiguration)(nil)).Elem()
}

func (o AnalysisFilledMapConfigurationOutput) ToAnalysisFilledMapConfigurationOutput() AnalysisFilledMapConfigurationOutput {
	return o
}

func (o AnalysisFilledMapConfigurationOutput) ToAnalysisFilledMapConfigurationOutputWithContext(ctx context.Context) AnalysisFilledMapConfigurationOutput {
	return o
}

func (o AnalysisFilledMapConfigurationOutput) ToAnalysisFilledMapConfigurationPtrOutput() AnalysisFilledMapConfigurationPtrOutput {
	return o.ToAnalysisFilledMapConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFilledMapConfigurationOutput) ToAnalysisFilledMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilledMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilledMapConfiguration) *AnalysisFilledMapConfiguration {
		return &v
	}).(AnalysisFilledMapConfigurationPtrOutput)
}

func (o AnalysisFilledMapConfigurationOutput) FieldWells() AnalysisFilledMapFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapConfiguration) *AnalysisFilledMapFieldWells { return v.FieldWells }).(AnalysisFilledMapFieldWellsPtrOutput)
}

func (o AnalysisFilledMapConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisFilledMapConfigurationOutput) MapStyleOptions() AnalysisGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapConfiguration) *AnalysisGeospatialMapStyleOptions { return v.MapStyleOptions }).(AnalysisGeospatialMapStyleOptionsPtrOutput)
}

func (o AnalysisFilledMapConfigurationOutput) SortConfiguration() AnalysisFilledMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapConfiguration) *AnalysisFilledMapSortConfiguration { return v.SortConfiguration }).(AnalysisFilledMapSortConfigurationPtrOutput)
}

func (o AnalysisFilledMapConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisFilledMapConfigurationOutput) WindowOptions() AnalysisGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapConfiguration) *AnalysisGeospatialWindowOptions { return v.WindowOptions }).(AnalysisGeospatialWindowOptionsPtrOutput)
}

type AnalysisFilledMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapConfiguration)(nil)).Elem()
}

func (o AnalysisFilledMapConfigurationPtrOutput) ToAnalysisFilledMapConfigurationPtrOutput() AnalysisFilledMapConfigurationPtrOutput {
	return o
}

func (o AnalysisFilledMapConfigurationPtrOutput) ToAnalysisFilledMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilledMapConfigurationPtrOutput {
	return o
}

func (o AnalysisFilledMapConfigurationPtrOutput) Elem() AnalysisFilledMapConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFilledMapConfiguration) AnalysisFilledMapConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFilledMapConfiguration
		return ret
	}).(AnalysisFilledMapConfigurationOutput)
}

func (o AnalysisFilledMapConfigurationPtrOutput) FieldWells() AnalysisFilledMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapConfiguration) *AnalysisFilledMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisFilledMapFieldWellsPtrOutput)
}

func (o AnalysisFilledMapConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisFilledMapConfigurationPtrOutput) MapStyleOptions() AnalysisGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapConfiguration) *AnalysisGeospatialMapStyleOptions {
		if v == nil {
			return nil
		}
		return v.MapStyleOptions
	}).(AnalysisGeospatialMapStyleOptionsPtrOutput)
}

func (o AnalysisFilledMapConfigurationPtrOutput) SortConfiguration() AnalysisFilledMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapConfiguration) *AnalysisFilledMapSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisFilledMapSortConfigurationPtrOutput)
}

func (o AnalysisFilledMapConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisFilledMapConfigurationPtrOutput) WindowOptions() AnalysisGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapConfiguration) *AnalysisGeospatialWindowOptions {
		if v == nil {
			return nil
		}
		return v.WindowOptions
	}).(AnalysisGeospatialWindowOptionsPtrOutput)
}

type AnalysisFilledMapFieldWells struct {
	FilledMapAggregatedFieldWells *AnalysisFilledMapAggregatedFieldWells `pulumi:"filledMapAggregatedFieldWells"`
}

// AnalysisFilledMapFieldWellsInput is an input type that accepts AnalysisFilledMapFieldWellsArgs and AnalysisFilledMapFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisFilledMapFieldWellsInput` via:
//
//	AnalysisFilledMapFieldWellsArgs{...}
type AnalysisFilledMapFieldWellsInput interface {
	pulumi.Input

	ToAnalysisFilledMapFieldWellsOutput() AnalysisFilledMapFieldWellsOutput
	ToAnalysisFilledMapFieldWellsOutputWithContext(context.Context) AnalysisFilledMapFieldWellsOutput
}

type AnalysisFilledMapFieldWellsArgs struct {
	FilledMapAggregatedFieldWells AnalysisFilledMapAggregatedFieldWellsPtrInput `pulumi:"filledMapAggregatedFieldWells"`
}

func (AnalysisFilledMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapFieldWells)(nil)).Elem()
}

func (i AnalysisFilledMapFieldWellsArgs) ToAnalysisFilledMapFieldWellsOutput() AnalysisFilledMapFieldWellsOutput {
	return i.ToAnalysisFilledMapFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisFilledMapFieldWellsArgs) ToAnalysisFilledMapFieldWellsOutputWithContext(ctx context.Context) AnalysisFilledMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapFieldWellsOutput)
}

func (i AnalysisFilledMapFieldWellsArgs) ToAnalysisFilledMapFieldWellsPtrOutput() AnalysisFilledMapFieldWellsPtrOutput {
	return i.ToAnalysisFilledMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisFilledMapFieldWellsArgs) ToAnalysisFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFilledMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapFieldWellsOutput).ToAnalysisFilledMapFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisFilledMapFieldWellsPtrInput is an input type that accepts AnalysisFilledMapFieldWellsArgs, AnalysisFilledMapFieldWellsPtr and AnalysisFilledMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisFilledMapFieldWellsPtrInput` via:
//
//	        AnalysisFilledMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilledMapFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisFilledMapFieldWellsPtrOutput() AnalysisFilledMapFieldWellsPtrOutput
	ToAnalysisFilledMapFieldWellsPtrOutputWithContext(context.Context) AnalysisFilledMapFieldWellsPtrOutput
}

type analysisFilledMapFieldWellsPtrType AnalysisFilledMapFieldWellsArgs

func AnalysisFilledMapFieldWellsPtr(v *AnalysisFilledMapFieldWellsArgs) AnalysisFilledMapFieldWellsPtrInput {
	return (*analysisFilledMapFieldWellsPtrType)(v)
}

func (*analysisFilledMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapFieldWells)(nil)).Elem()
}

func (i *analysisFilledMapFieldWellsPtrType) ToAnalysisFilledMapFieldWellsPtrOutput() AnalysisFilledMapFieldWellsPtrOutput {
	return i.ToAnalysisFilledMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisFilledMapFieldWellsPtrType) ToAnalysisFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFilledMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapFieldWellsPtrOutput)
}

type AnalysisFilledMapFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapFieldWells)(nil)).Elem()
}

func (o AnalysisFilledMapFieldWellsOutput) ToAnalysisFilledMapFieldWellsOutput() AnalysisFilledMapFieldWellsOutput {
	return o
}

func (o AnalysisFilledMapFieldWellsOutput) ToAnalysisFilledMapFieldWellsOutputWithContext(ctx context.Context) AnalysisFilledMapFieldWellsOutput {
	return o
}

func (o AnalysisFilledMapFieldWellsOutput) ToAnalysisFilledMapFieldWellsPtrOutput() AnalysisFilledMapFieldWellsPtrOutput {
	return o.ToAnalysisFilledMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisFilledMapFieldWellsOutput) ToAnalysisFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFilledMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilledMapFieldWells) *AnalysisFilledMapFieldWells {
		return &v
	}).(AnalysisFilledMapFieldWellsPtrOutput)
}

func (o AnalysisFilledMapFieldWellsOutput) FilledMapAggregatedFieldWells() AnalysisFilledMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapFieldWells) *AnalysisFilledMapAggregatedFieldWells {
		return v.FilledMapAggregatedFieldWells
	}).(AnalysisFilledMapAggregatedFieldWellsPtrOutput)
}

type AnalysisFilledMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapFieldWells)(nil)).Elem()
}

func (o AnalysisFilledMapFieldWellsPtrOutput) ToAnalysisFilledMapFieldWellsPtrOutput() AnalysisFilledMapFieldWellsPtrOutput {
	return o
}

func (o AnalysisFilledMapFieldWellsPtrOutput) ToAnalysisFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFilledMapFieldWellsPtrOutput {
	return o
}

func (o AnalysisFilledMapFieldWellsPtrOutput) Elem() AnalysisFilledMapFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisFilledMapFieldWells) AnalysisFilledMapFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisFilledMapFieldWells
		return ret
	}).(AnalysisFilledMapFieldWellsOutput)
}

func (o AnalysisFilledMapFieldWellsPtrOutput) FilledMapAggregatedFieldWells() AnalysisFilledMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapFieldWells) *AnalysisFilledMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.FilledMapAggregatedFieldWells
	}).(AnalysisFilledMapAggregatedFieldWellsPtrOutput)
}

type AnalysisFilledMapShapeConditionalFormatting struct {
	FieldId string                          `pulumi:"fieldId"`
	Format  *AnalysisShapeConditionalFormat `pulumi:"format"`
}

// AnalysisFilledMapShapeConditionalFormattingInput is an input type that accepts AnalysisFilledMapShapeConditionalFormattingArgs and AnalysisFilledMapShapeConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisFilledMapShapeConditionalFormattingInput` via:
//
//	AnalysisFilledMapShapeConditionalFormattingArgs{...}
type AnalysisFilledMapShapeConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisFilledMapShapeConditionalFormattingOutput() AnalysisFilledMapShapeConditionalFormattingOutput
	ToAnalysisFilledMapShapeConditionalFormattingOutputWithContext(context.Context) AnalysisFilledMapShapeConditionalFormattingOutput
}

type AnalysisFilledMapShapeConditionalFormattingArgs struct {
	FieldId pulumi.StringInput                     `pulumi:"fieldId"`
	Format  AnalysisShapeConditionalFormatPtrInput `pulumi:"format"`
}

func (AnalysisFilledMapShapeConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapShapeConditionalFormatting)(nil)).Elem()
}

func (i AnalysisFilledMapShapeConditionalFormattingArgs) ToAnalysisFilledMapShapeConditionalFormattingOutput() AnalysisFilledMapShapeConditionalFormattingOutput {
	return i.ToAnalysisFilledMapShapeConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisFilledMapShapeConditionalFormattingArgs) ToAnalysisFilledMapShapeConditionalFormattingOutputWithContext(ctx context.Context) AnalysisFilledMapShapeConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapShapeConditionalFormattingOutput)
}

type AnalysisFilledMapShapeConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapShapeConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapShapeConditionalFormatting)(nil)).Elem()
}

func (o AnalysisFilledMapShapeConditionalFormattingOutput) ToAnalysisFilledMapShapeConditionalFormattingOutput() AnalysisFilledMapShapeConditionalFormattingOutput {
	return o
}

func (o AnalysisFilledMapShapeConditionalFormattingOutput) ToAnalysisFilledMapShapeConditionalFormattingOutputWithContext(ctx context.Context) AnalysisFilledMapShapeConditionalFormattingOutput {
	return o
}

func (o AnalysisFilledMapShapeConditionalFormattingOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilledMapShapeConditionalFormatting) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisFilledMapShapeConditionalFormattingOutput) Format() AnalysisShapeConditionalFormatPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapShapeConditionalFormatting) *AnalysisShapeConditionalFormat { return v.Format }).(AnalysisShapeConditionalFormatPtrOutput)
}

type AnalysisFilledMapSortConfiguration struct {
	CategorySort []AnalysisFieldSortOptions `pulumi:"categorySort"`
}

// AnalysisFilledMapSortConfigurationInput is an input type that accepts AnalysisFilledMapSortConfigurationArgs and AnalysisFilledMapSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFilledMapSortConfigurationInput` via:
//
//	AnalysisFilledMapSortConfigurationArgs{...}
type AnalysisFilledMapSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisFilledMapSortConfigurationOutput() AnalysisFilledMapSortConfigurationOutput
	ToAnalysisFilledMapSortConfigurationOutputWithContext(context.Context) AnalysisFilledMapSortConfigurationOutput
}

type AnalysisFilledMapSortConfigurationArgs struct {
	CategorySort AnalysisFieldSortOptionsArrayInput `pulumi:"categorySort"`
}

func (AnalysisFilledMapSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapSortConfiguration)(nil)).Elem()
}

func (i AnalysisFilledMapSortConfigurationArgs) ToAnalysisFilledMapSortConfigurationOutput() AnalysisFilledMapSortConfigurationOutput {
	return i.ToAnalysisFilledMapSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFilledMapSortConfigurationArgs) ToAnalysisFilledMapSortConfigurationOutputWithContext(ctx context.Context) AnalysisFilledMapSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapSortConfigurationOutput)
}

func (i AnalysisFilledMapSortConfigurationArgs) ToAnalysisFilledMapSortConfigurationPtrOutput() AnalysisFilledMapSortConfigurationPtrOutput {
	return i.ToAnalysisFilledMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFilledMapSortConfigurationArgs) ToAnalysisFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilledMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapSortConfigurationOutput).ToAnalysisFilledMapSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFilledMapSortConfigurationPtrInput is an input type that accepts AnalysisFilledMapSortConfigurationArgs, AnalysisFilledMapSortConfigurationPtr and AnalysisFilledMapSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFilledMapSortConfigurationPtrInput` via:
//
//	        AnalysisFilledMapSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilledMapSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFilledMapSortConfigurationPtrOutput() AnalysisFilledMapSortConfigurationPtrOutput
	ToAnalysisFilledMapSortConfigurationPtrOutputWithContext(context.Context) AnalysisFilledMapSortConfigurationPtrOutput
}

type analysisFilledMapSortConfigurationPtrType AnalysisFilledMapSortConfigurationArgs

func AnalysisFilledMapSortConfigurationPtr(v *AnalysisFilledMapSortConfigurationArgs) AnalysisFilledMapSortConfigurationPtrInput {
	return (*analysisFilledMapSortConfigurationPtrType)(v)
}

func (*analysisFilledMapSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapSortConfiguration)(nil)).Elem()
}

func (i *analysisFilledMapSortConfigurationPtrType) ToAnalysisFilledMapSortConfigurationPtrOutput() AnalysisFilledMapSortConfigurationPtrOutput {
	return i.ToAnalysisFilledMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFilledMapSortConfigurationPtrType) ToAnalysisFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilledMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapSortConfigurationPtrOutput)
}

type AnalysisFilledMapSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapSortConfiguration)(nil)).Elem()
}

func (o AnalysisFilledMapSortConfigurationOutput) ToAnalysisFilledMapSortConfigurationOutput() AnalysisFilledMapSortConfigurationOutput {
	return o
}

func (o AnalysisFilledMapSortConfigurationOutput) ToAnalysisFilledMapSortConfigurationOutputWithContext(ctx context.Context) AnalysisFilledMapSortConfigurationOutput {
	return o
}

func (o AnalysisFilledMapSortConfigurationOutput) ToAnalysisFilledMapSortConfigurationPtrOutput() AnalysisFilledMapSortConfigurationPtrOutput {
	return o.ToAnalysisFilledMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFilledMapSortConfigurationOutput) ToAnalysisFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilledMapSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilledMapSortConfiguration) *AnalysisFilledMapSortConfiguration {
		return &v
	}).(AnalysisFilledMapSortConfigurationPtrOutput)
}

func (o AnalysisFilledMapSortConfigurationOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisFilledMapSortConfiguration) []AnalysisFieldSortOptions { return v.CategorySort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisFilledMapSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapSortConfiguration)(nil)).Elem()
}

func (o AnalysisFilledMapSortConfigurationPtrOutput) ToAnalysisFilledMapSortConfigurationPtrOutput() AnalysisFilledMapSortConfigurationPtrOutput {
	return o
}

func (o AnalysisFilledMapSortConfigurationPtrOutput) ToAnalysisFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilledMapSortConfigurationPtrOutput {
	return o
}

func (o AnalysisFilledMapSortConfigurationPtrOutput) Elem() AnalysisFilledMapSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFilledMapSortConfiguration) AnalysisFilledMapSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFilledMapSortConfiguration
		return ret
	}).(AnalysisFilledMapSortConfigurationOutput)
}

func (o AnalysisFilledMapSortConfigurationPtrOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisFilledMapSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisFilledMapVisual struct {
	Actions               []AnalysisVisualCustomAction            `pulumi:"actions"`
	ChartConfiguration    *AnalysisFilledMapConfiguration         `pulumi:"chartConfiguration"`
	ColumnHierarchies     []AnalysisColumnHierarchy               `pulumi:"columnHierarchies"`
	ConditionalFormatting *AnalysisFilledMapConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *AnalysisVisualSubtitleLabelOptions     `pulumi:"subtitle"`
	Title                 *AnalysisVisualTitleLabelOptions        `pulumi:"title"`
	VisualId              string                                  `pulumi:"visualId"`
}

// AnalysisFilledMapVisualInput is an input type that accepts AnalysisFilledMapVisualArgs and AnalysisFilledMapVisualOutput values.
// You can construct a concrete instance of `AnalysisFilledMapVisualInput` via:
//
//	AnalysisFilledMapVisualArgs{...}
type AnalysisFilledMapVisualInput interface {
	pulumi.Input

	ToAnalysisFilledMapVisualOutput() AnalysisFilledMapVisualOutput
	ToAnalysisFilledMapVisualOutputWithContext(context.Context) AnalysisFilledMapVisualOutput
}

type AnalysisFilledMapVisualArgs struct {
	Actions               AnalysisVisualCustomActionArrayInput           `pulumi:"actions"`
	ChartConfiguration    AnalysisFilledMapConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ColumnHierarchies     AnalysisColumnHierarchyArrayInput              `pulumi:"columnHierarchies"`
	ConditionalFormatting AnalysisFilledMapConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              AnalysisVisualSubtitleLabelOptionsPtrInput     `pulumi:"subtitle"`
	Title                 AnalysisVisualTitleLabelOptionsPtrInput        `pulumi:"title"`
	VisualId              pulumi.StringInput                             `pulumi:"visualId"`
}

func (AnalysisFilledMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapVisual)(nil)).Elem()
}

func (i AnalysisFilledMapVisualArgs) ToAnalysisFilledMapVisualOutput() AnalysisFilledMapVisualOutput {
	return i.ToAnalysisFilledMapVisualOutputWithContext(context.Background())
}

func (i AnalysisFilledMapVisualArgs) ToAnalysisFilledMapVisualOutputWithContext(ctx context.Context) AnalysisFilledMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapVisualOutput)
}

func (i AnalysisFilledMapVisualArgs) ToAnalysisFilledMapVisualPtrOutput() AnalysisFilledMapVisualPtrOutput {
	return i.ToAnalysisFilledMapVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisFilledMapVisualArgs) ToAnalysisFilledMapVisualPtrOutputWithContext(ctx context.Context) AnalysisFilledMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapVisualOutput).ToAnalysisFilledMapVisualPtrOutputWithContext(ctx)
}

// AnalysisFilledMapVisualPtrInput is an input type that accepts AnalysisFilledMapVisualArgs, AnalysisFilledMapVisualPtr and AnalysisFilledMapVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisFilledMapVisualPtrInput` via:
//
//	        AnalysisFilledMapVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilledMapVisualPtrInput interface {
	pulumi.Input

	ToAnalysisFilledMapVisualPtrOutput() AnalysisFilledMapVisualPtrOutput
	ToAnalysisFilledMapVisualPtrOutputWithContext(context.Context) AnalysisFilledMapVisualPtrOutput
}

type analysisFilledMapVisualPtrType AnalysisFilledMapVisualArgs

func AnalysisFilledMapVisualPtr(v *AnalysisFilledMapVisualArgs) AnalysisFilledMapVisualPtrInput {
	return (*analysisFilledMapVisualPtrType)(v)
}

func (*analysisFilledMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapVisual)(nil)).Elem()
}

func (i *analysisFilledMapVisualPtrType) ToAnalysisFilledMapVisualPtrOutput() AnalysisFilledMapVisualPtrOutput {
	return i.ToAnalysisFilledMapVisualPtrOutputWithContext(context.Background())
}

func (i *analysisFilledMapVisualPtrType) ToAnalysisFilledMapVisualPtrOutputWithContext(ctx context.Context) AnalysisFilledMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilledMapVisualPtrOutput)
}

type AnalysisFilledMapVisualOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilledMapVisual)(nil)).Elem()
}

func (o AnalysisFilledMapVisualOutput) ToAnalysisFilledMapVisualOutput() AnalysisFilledMapVisualOutput {
	return o
}

func (o AnalysisFilledMapVisualOutput) ToAnalysisFilledMapVisualOutputWithContext(ctx context.Context) AnalysisFilledMapVisualOutput {
	return o
}

func (o AnalysisFilledMapVisualOutput) ToAnalysisFilledMapVisualPtrOutput() AnalysisFilledMapVisualPtrOutput {
	return o.ToAnalysisFilledMapVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisFilledMapVisualOutput) ToAnalysisFilledMapVisualPtrOutputWithContext(ctx context.Context) AnalysisFilledMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilledMapVisual) *AnalysisFilledMapVisual {
		return &v
	}).(AnalysisFilledMapVisualPtrOutput)
}

func (o AnalysisFilledMapVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisFilledMapVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisFilledMapVisualOutput) ChartConfiguration() AnalysisFilledMapConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapVisual) *AnalysisFilledMapConfiguration { return v.ChartConfiguration }).(AnalysisFilledMapConfigurationPtrOutput)
}

func (o AnalysisFilledMapVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisFilledMapVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisFilledMapVisualOutput) ConditionalFormatting() AnalysisFilledMapConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapVisual) *AnalysisFilledMapConditionalFormatting {
		return v.ConditionalFormatting
	}).(AnalysisFilledMapConditionalFormattingPtrOutput)
}

func (o AnalysisFilledMapVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisFilledMapVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilledMapVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisFilledMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilledMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisFilledMapVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilledMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilledMapVisual)(nil)).Elem()
}

func (o AnalysisFilledMapVisualPtrOutput) ToAnalysisFilledMapVisualPtrOutput() AnalysisFilledMapVisualPtrOutput {
	return o
}

func (o AnalysisFilledMapVisualPtrOutput) ToAnalysisFilledMapVisualPtrOutputWithContext(ctx context.Context) AnalysisFilledMapVisualPtrOutput {
	return o
}

func (o AnalysisFilledMapVisualPtrOutput) Elem() AnalysisFilledMapVisualOutput {
	return o.ApplyT(func(v *AnalysisFilledMapVisual) AnalysisFilledMapVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisFilledMapVisual
		return ret
	}).(AnalysisFilledMapVisualOutput)
}

func (o AnalysisFilledMapVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisFilledMapVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisFilledMapVisualPtrOutput) ChartConfiguration() AnalysisFilledMapConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapVisual) *AnalysisFilledMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisFilledMapConfigurationPtrOutput)
}

func (o AnalysisFilledMapVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisFilledMapVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisFilledMapVisualPtrOutput) ConditionalFormatting() AnalysisFilledMapConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapVisual) *AnalysisFilledMapConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(AnalysisFilledMapConditionalFormattingPtrOutput)
}

func (o AnalysisFilledMapVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisFilledMapVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisFilledMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilledMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisFilter struct {
	CategoryFilter        *AnalysisCategoryFilter        `pulumi:"categoryFilter"`
	NumericEqualityFilter *AnalysisNumericEqualityFilter `pulumi:"numericEqualityFilter"`
	NumericRangeFilter    *AnalysisNumericRangeFilter    `pulumi:"numericRangeFilter"`
	RelativeDatesFilter   *AnalysisRelativeDatesFilter   `pulumi:"relativeDatesFilter"`
	TimeEqualityFilter    *AnalysisTimeEqualityFilter    `pulumi:"timeEqualityFilter"`
	TimeRangeFilter       *AnalysisTimeRangeFilter       `pulumi:"timeRangeFilter"`
	TopBottomFilter       *AnalysisTopBottomFilter       `pulumi:"topBottomFilter"`
}

// AnalysisFilterInput is an input type that accepts AnalysisFilterArgs and AnalysisFilterOutput values.
// You can construct a concrete instance of `AnalysisFilterInput` via:
//
//	AnalysisFilterArgs{...}
type AnalysisFilterInput interface {
	pulumi.Input

	ToAnalysisFilterOutput() AnalysisFilterOutput
	ToAnalysisFilterOutputWithContext(context.Context) AnalysisFilterOutput
}

type AnalysisFilterArgs struct {
	CategoryFilter        AnalysisCategoryFilterPtrInput        `pulumi:"categoryFilter"`
	NumericEqualityFilter AnalysisNumericEqualityFilterPtrInput `pulumi:"numericEqualityFilter"`
	NumericRangeFilter    AnalysisNumericRangeFilterPtrInput    `pulumi:"numericRangeFilter"`
	RelativeDatesFilter   AnalysisRelativeDatesFilterPtrInput   `pulumi:"relativeDatesFilter"`
	TimeEqualityFilter    AnalysisTimeEqualityFilterPtrInput    `pulumi:"timeEqualityFilter"`
	TimeRangeFilter       AnalysisTimeRangeFilterPtrInput       `pulumi:"timeRangeFilter"`
	TopBottomFilter       AnalysisTopBottomFilterPtrInput       `pulumi:"topBottomFilter"`
}

func (AnalysisFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilter)(nil)).Elem()
}

func (i AnalysisFilterArgs) ToAnalysisFilterOutput() AnalysisFilterOutput {
	return i.ToAnalysisFilterOutputWithContext(context.Background())
}

func (i AnalysisFilterArgs) ToAnalysisFilterOutputWithContext(ctx context.Context) AnalysisFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterOutput)
}

// AnalysisFilterArrayInput is an input type that accepts AnalysisFilterArray and AnalysisFilterArrayOutput values.
// You can construct a concrete instance of `AnalysisFilterArrayInput` via:
//
//	AnalysisFilterArray{ AnalysisFilterArgs{...} }
type AnalysisFilterArrayInput interface {
	pulumi.Input

	ToAnalysisFilterArrayOutput() AnalysisFilterArrayOutput
	ToAnalysisFilterArrayOutputWithContext(context.Context) AnalysisFilterArrayOutput
}

type AnalysisFilterArray []AnalysisFilterInput

func (AnalysisFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFilter)(nil)).Elem()
}

func (i AnalysisFilterArray) ToAnalysisFilterArrayOutput() AnalysisFilterArrayOutput {
	return i.ToAnalysisFilterArrayOutputWithContext(context.Background())
}

func (i AnalysisFilterArray) ToAnalysisFilterArrayOutputWithContext(ctx context.Context) AnalysisFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterArrayOutput)
}

type AnalysisFilterOutput struct{ *pulumi.OutputState }

func (AnalysisFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilter)(nil)).Elem()
}

func (o AnalysisFilterOutput) ToAnalysisFilterOutput() AnalysisFilterOutput {
	return o
}

func (o AnalysisFilterOutput) ToAnalysisFilterOutputWithContext(ctx context.Context) AnalysisFilterOutput {
	return o
}

func (o AnalysisFilterOutput) CategoryFilter() AnalysisCategoryFilterPtrOutput {
	return o.ApplyT(func(v AnalysisFilter) *AnalysisCategoryFilter { return v.CategoryFilter }).(AnalysisCategoryFilterPtrOutput)
}

func (o AnalysisFilterOutput) NumericEqualityFilter() AnalysisNumericEqualityFilterPtrOutput {
	return o.ApplyT(func(v AnalysisFilter) *AnalysisNumericEqualityFilter { return v.NumericEqualityFilter }).(AnalysisNumericEqualityFilterPtrOutput)
}

func (o AnalysisFilterOutput) NumericRangeFilter() AnalysisNumericRangeFilterPtrOutput {
	return o.ApplyT(func(v AnalysisFilter) *AnalysisNumericRangeFilter { return v.NumericRangeFilter }).(AnalysisNumericRangeFilterPtrOutput)
}

func (o AnalysisFilterOutput) RelativeDatesFilter() AnalysisRelativeDatesFilterPtrOutput {
	return o.ApplyT(func(v AnalysisFilter) *AnalysisRelativeDatesFilter { return v.RelativeDatesFilter }).(AnalysisRelativeDatesFilterPtrOutput)
}

func (o AnalysisFilterOutput) TimeEqualityFilter() AnalysisTimeEqualityFilterPtrOutput {
	return o.ApplyT(func(v AnalysisFilter) *AnalysisTimeEqualityFilter { return v.TimeEqualityFilter }).(AnalysisTimeEqualityFilterPtrOutput)
}

func (o AnalysisFilterOutput) TimeRangeFilter() AnalysisTimeRangeFilterPtrOutput {
	return o.ApplyT(func(v AnalysisFilter) *AnalysisTimeRangeFilter { return v.TimeRangeFilter }).(AnalysisTimeRangeFilterPtrOutput)
}

func (o AnalysisFilterOutput) TopBottomFilter() AnalysisTopBottomFilterPtrOutput {
	return o.ApplyT(func(v AnalysisFilter) *AnalysisTopBottomFilter { return v.TopBottomFilter }).(AnalysisTopBottomFilterPtrOutput)
}

type AnalysisFilterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFilter)(nil)).Elem()
}

func (o AnalysisFilterArrayOutput) ToAnalysisFilterArrayOutput() AnalysisFilterArrayOutput {
	return o
}

func (o AnalysisFilterArrayOutput) ToAnalysisFilterArrayOutputWithContext(ctx context.Context) AnalysisFilterArrayOutput {
	return o
}

func (o AnalysisFilterArrayOutput) Index(i pulumi.IntInput) AnalysisFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisFilter {
		return vs[0].([]AnalysisFilter)[vs[1].(int)]
	}).(AnalysisFilterOutput)
}

type AnalysisFilterControl struct {
	DateTimePicker   *AnalysisFilterDateTimePickerControl   `pulumi:"dateTimePicker"`
	Dropdown         *AnalysisFilterDropDownControl         `pulumi:"dropdown"`
	List             *AnalysisFilterListControl             `pulumi:"list"`
	RelativeDateTime *AnalysisFilterRelativeDateTimeControl `pulumi:"relativeDateTime"`
	Slider           *AnalysisFilterSliderControl           `pulumi:"slider"`
	TextArea         *AnalysisFilterTextAreaControl         `pulumi:"textArea"`
	TextField        *AnalysisFilterTextFieldControl        `pulumi:"textField"`
}

// AnalysisFilterControlInput is an input type that accepts AnalysisFilterControlArgs and AnalysisFilterControlOutput values.
// You can construct a concrete instance of `AnalysisFilterControlInput` via:
//
//	AnalysisFilterControlArgs{...}
type AnalysisFilterControlInput interface {
	pulumi.Input

	ToAnalysisFilterControlOutput() AnalysisFilterControlOutput
	ToAnalysisFilterControlOutputWithContext(context.Context) AnalysisFilterControlOutput
}

type AnalysisFilterControlArgs struct {
	DateTimePicker   AnalysisFilterDateTimePickerControlPtrInput   `pulumi:"dateTimePicker"`
	Dropdown         AnalysisFilterDropDownControlPtrInput         `pulumi:"dropdown"`
	List             AnalysisFilterListControlPtrInput             `pulumi:"list"`
	RelativeDateTime AnalysisFilterRelativeDateTimeControlPtrInput `pulumi:"relativeDateTime"`
	Slider           AnalysisFilterSliderControlPtrInput           `pulumi:"slider"`
	TextArea         AnalysisFilterTextAreaControlPtrInput         `pulumi:"textArea"`
	TextField        AnalysisFilterTextFieldControlPtrInput        `pulumi:"textField"`
}

func (AnalysisFilterControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterControl)(nil)).Elem()
}

func (i AnalysisFilterControlArgs) ToAnalysisFilterControlOutput() AnalysisFilterControlOutput {
	return i.ToAnalysisFilterControlOutputWithContext(context.Background())
}

func (i AnalysisFilterControlArgs) ToAnalysisFilterControlOutputWithContext(ctx context.Context) AnalysisFilterControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterControlOutput)
}

// AnalysisFilterControlArrayInput is an input type that accepts AnalysisFilterControlArray and AnalysisFilterControlArrayOutput values.
// You can construct a concrete instance of `AnalysisFilterControlArrayInput` via:
//
//	AnalysisFilterControlArray{ AnalysisFilterControlArgs{...} }
type AnalysisFilterControlArrayInput interface {
	pulumi.Input

	ToAnalysisFilterControlArrayOutput() AnalysisFilterControlArrayOutput
	ToAnalysisFilterControlArrayOutputWithContext(context.Context) AnalysisFilterControlArrayOutput
}

type AnalysisFilterControlArray []AnalysisFilterControlInput

func (AnalysisFilterControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFilterControl)(nil)).Elem()
}

func (i AnalysisFilterControlArray) ToAnalysisFilterControlArrayOutput() AnalysisFilterControlArrayOutput {
	return i.ToAnalysisFilterControlArrayOutputWithContext(context.Background())
}

func (i AnalysisFilterControlArray) ToAnalysisFilterControlArrayOutputWithContext(ctx context.Context) AnalysisFilterControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterControlArrayOutput)
}

type AnalysisFilterControlOutput struct{ *pulumi.OutputState }

func (AnalysisFilterControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterControl)(nil)).Elem()
}

func (o AnalysisFilterControlOutput) ToAnalysisFilterControlOutput() AnalysisFilterControlOutput {
	return o
}

func (o AnalysisFilterControlOutput) ToAnalysisFilterControlOutputWithContext(ctx context.Context) AnalysisFilterControlOutput {
	return o
}

func (o AnalysisFilterControlOutput) DateTimePicker() AnalysisFilterDateTimePickerControlPtrOutput {
	return o.ApplyT(func(v AnalysisFilterControl) *AnalysisFilterDateTimePickerControl { return v.DateTimePicker }).(AnalysisFilterDateTimePickerControlPtrOutput)
}

func (o AnalysisFilterControlOutput) Dropdown() AnalysisFilterDropDownControlPtrOutput {
	return o.ApplyT(func(v AnalysisFilterControl) *AnalysisFilterDropDownControl { return v.Dropdown }).(AnalysisFilterDropDownControlPtrOutput)
}

func (o AnalysisFilterControlOutput) List() AnalysisFilterListControlPtrOutput {
	return o.ApplyT(func(v AnalysisFilterControl) *AnalysisFilterListControl { return v.List }).(AnalysisFilterListControlPtrOutput)
}

func (o AnalysisFilterControlOutput) RelativeDateTime() AnalysisFilterRelativeDateTimeControlPtrOutput {
	return o.ApplyT(func(v AnalysisFilterControl) *AnalysisFilterRelativeDateTimeControl { return v.RelativeDateTime }).(AnalysisFilterRelativeDateTimeControlPtrOutput)
}

func (o AnalysisFilterControlOutput) Slider() AnalysisFilterSliderControlPtrOutput {
	return o.ApplyT(func(v AnalysisFilterControl) *AnalysisFilterSliderControl { return v.Slider }).(AnalysisFilterSliderControlPtrOutput)
}

func (o AnalysisFilterControlOutput) TextArea() AnalysisFilterTextAreaControlPtrOutput {
	return o.ApplyT(func(v AnalysisFilterControl) *AnalysisFilterTextAreaControl { return v.TextArea }).(AnalysisFilterTextAreaControlPtrOutput)
}

func (o AnalysisFilterControlOutput) TextField() AnalysisFilterTextFieldControlPtrOutput {
	return o.ApplyT(func(v AnalysisFilterControl) *AnalysisFilterTextFieldControl { return v.TextField }).(AnalysisFilterTextFieldControlPtrOutput)
}

type AnalysisFilterControlArrayOutput struct{ *pulumi.OutputState }

func (AnalysisFilterControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFilterControl)(nil)).Elem()
}

func (o AnalysisFilterControlArrayOutput) ToAnalysisFilterControlArrayOutput() AnalysisFilterControlArrayOutput {
	return o
}

func (o AnalysisFilterControlArrayOutput) ToAnalysisFilterControlArrayOutputWithContext(ctx context.Context) AnalysisFilterControlArrayOutput {
	return o
}

func (o AnalysisFilterControlArrayOutput) Index(i pulumi.IntInput) AnalysisFilterControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisFilterControl {
		return vs[0].([]AnalysisFilterControl)[vs[1].(int)]
	}).(AnalysisFilterControlOutput)
}

type AnalysisFilterDateTimePickerControl struct {
	DisplayOptions  *AnalysisDateTimePickerControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                       `pulumi:"filterControlId"`
	SourceFilterId  string                                       `pulumi:"sourceFilterId"`
	Title           string                                       `pulumi:"title"`
	Type            *AnalysisSheetControlDateTimePickerType      `pulumi:"type"`
}

// AnalysisFilterDateTimePickerControlInput is an input type that accepts AnalysisFilterDateTimePickerControlArgs and AnalysisFilterDateTimePickerControlOutput values.
// You can construct a concrete instance of `AnalysisFilterDateTimePickerControlInput` via:
//
//	AnalysisFilterDateTimePickerControlArgs{...}
type AnalysisFilterDateTimePickerControlInput interface {
	pulumi.Input

	ToAnalysisFilterDateTimePickerControlOutput() AnalysisFilterDateTimePickerControlOutput
	ToAnalysisFilterDateTimePickerControlOutputWithContext(context.Context) AnalysisFilterDateTimePickerControlOutput
}

type AnalysisFilterDateTimePickerControlArgs struct {
	DisplayOptions  AnalysisDateTimePickerControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                                  `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                                  `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                                  `pulumi:"title"`
	Type            AnalysisSheetControlDateTimePickerTypePtrInput      `pulumi:"type"`
}

func (AnalysisFilterDateTimePickerControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterDateTimePickerControl)(nil)).Elem()
}

func (i AnalysisFilterDateTimePickerControlArgs) ToAnalysisFilterDateTimePickerControlOutput() AnalysisFilterDateTimePickerControlOutput {
	return i.ToAnalysisFilterDateTimePickerControlOutputWithContext(context.Background())
}

func (i AnalysisFilterDateTimePickerControlArgs) ToAnalysisFilterDateTimePickerControlOutputWithContext(ctx context.Context) AnalysisFilterDateTimePickerControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterDateTimePickerControlOutput)
}

func (i AnalysisFilterDateTimePickerControlArgs) ToAnalysisFilterDateTimePickerControlPtrOutput() AnalysisFilterDateTimePickerControlPtrOutput {
	return i.ToAnalysisFilterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterDateTimePickerControlArgs) ToAnalysisFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) AnalysisFilterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterDateTimePickerControlOutput).ToAnalysisFilterDateTimePickerControlPtrOutputWithContext(ctx)
}

// AnalysisFilterDateTimePickerControlPtrInput is an input type that accepts AnalysisFilterDateTimePickerControlArgs, AnalysisFilterDateTimePickerControlPtr and AnalysisFilterDateTimePickerControlPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterDateTimePickerControlPtrInput` via:
//
//	        AnalysisFilterDateTimePickerControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterDateTimePickerControlPtrInput interface {
	pulumi.Input

	ToAnalysisFilterDateTimePickerControlPtrOutput() AnalysisFilterDateTimePickerControlPtrOutput
	ToAnalysisFilterDateTimePickerControlPtrOutputWithContext(context.Context) AnalysisFilterDateTimePickerControlPtrOutput
}

type analysisFilterDateTimePickerControlPtrType AnalysisFilterDateTimePickerControlArgs

func AnalysisFilterDateTimePickerControlPtr(v *AnalysisFilterDateTimePickerControlArgs) AnalysisFilterDateTimePickerControlPtrInput {
	return (*analysisFilterDateTimePickerControlPtrType)(v)
}

func (*analysisFilterDateTimePickerControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterDateTimePickerControl)(nil)).Elem()
}

func (i *analysisFilterDateTimePickerControlPtrType) ToAnalysisFilterDateTimePickerControlPtrOutput() AnalysisFilterDateTimePickerControlPtrOutput {
	return i.ToAnalysisFilterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i *analysisFilterDateTimePickerControlPtrType) ToAnalysisFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) AnalysisFilterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterDateTimePickerControlPtrOutput)
}

type AnalysisFilterDateTimePickerControlOutput struct{ *pulumi.OutputState }

func (AnalysisFilterDateTimePickerControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterDateTimePickerControl)(nil)).Elem()
}

func (o AnalysisFilterDateTimePickerControlOutput) ToAnalysisFilterDateTimePickerControlOutput() AnalysisFilterDateTimePickerControlOutput {
	return o
}

func (o AnalysisFilterDateTimePickerControlOutput) ToAnalysisFilterDateTimePickerControlOutputWithContext(ctx context.Context) AnalysisFilterDateTimePickerControlOutput {
	return o
}

func (o AnalysisFilterDateTimePickerControlOutput) ToAnalysisFilterDateTimePickerControlPtrOutput() AnalysisFilterDateTimePickerControlPtrOutput {
	return o.ToAnalysisFilterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterDateTimePickerControlOutput) ToAnalysisFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) AnalysisFilterDateTimePickerControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterDateTimePickerControl) *AnalysisFilterDateTimePickerControl {
		return &v
	}).(AnalysisFilterDateTimePickerControlPtrOutput)
}

func (o AnalysisFilterDateTimePickerControlOutput) DisplayOptions() AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilterDateTimePickerControl) *AnalysisDateTimePickerControlDisplayOptions {
		return v.DisplayOptions
	}).(AnalysisDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterDateTimePickerControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterDateTimePickerControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o AnalysisFilterDateTimePickerControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterDateTimePickerControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o AnalysisFilterDateTimePickerControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterDateTimePickerControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o AnalysisFilterDateTimePickerControlOutput) Type() AnalysisSheetControlDateTimePickerTypePtrOutput {
	return o.ApplyT(func(v AnalysisFilterDateTimePickerControl) *AnalysisSheetControlDateTimePickerType { return v.Type }).(AnalysisSheetControlDateTimePickerTypePtrOutput)
}

type AnalysisFilterDateTimePickerControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterDateTimePickerControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterDateTimePickerControl)(nil)).Elem()
}

func (o AnalysisFilterDateTimePickerControlPtrOutput) ToAnalysisFilterDateTimePickerControlPtrOutput() AnalysisFilterDateTimePickerControlPtrOutput {
	return o
}

func (o AnalysisFilterDateTimePickerControlPtrOutput) ToAnalysisFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) AnalysisFilterDateTimePickerControlPtrOutput {
	return o
}

func (o AnalysisFilterDateTimePickerControlPtrOutput) Elem() AnalysisFilterDateTimePickerControlOutput {
	return o.ApplyT(func(v *AnalysisFilterDateTimePickerControl) AnalysisFilterDateTimePickerControl {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterDateTimePickerControl
		return ret
	}).(AnalysisFilterDateTimePickerControlOutput)
}

func (o AnalysisFilterDateTimePickerControlPtrOutput) DisplayOptions() AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDateTimePickerControl) *AnalysisDateTimePickerControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterDateTimePickerControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterDateTimePickerControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterDateTimePickerControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterDateTimePickerControlPtrOutput) Type() AnalysisSheetControlDateTimePickerTypePtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDateTimePickerControl) *AnalysisSheetControlDateTimePickerType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AnalysisSheetControlDateTimePickerTypePtrOutput)
}

type AnalysisFilterDropDownControl struct {
	CascadingControlConfiguration *AnalysisCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *AnalysisDropDownControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId               string                                 `pulumi:"filterControlId"`
	SelectableValues              *AnalysisFilterSelectableValues        `pulumi:"selectableValues"`
	SourceFilterId                string                                 `pulumi:"sourceFilterId"`
	Title                         string                                 `pulumi:"title"`
	Type                          *AnalysisSheetControlListType          `pulumi:"type"`
}

// AnalysisFilterDropDownControlInput is an input type that accepts AnalysisFilterDropDownControlArgs and AnalysisFilterDropDownControlOutput values.
// You can construct a concrete instance of `AnalysisFilterDropDownControlInput` via:
//
//	AnalysisFilterDropDownControlArgs{...}
type AnalysisFilterDropDownControlInput interface {
	pulumi.Input

	ToAnalysisFilterDropDownControlOutput() AnalysisFilterDropDownControlOutput
	ToAnalysisFilterDropDownControlOutputWithContext(context.Context) AnalysisFilterDropDownControlOutput
}

type AnalysisFilterDropDownControlArgs struct {
	CascadingControlConfiguration AnalysisCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                AnalysisDropDownControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId               pulumi.StringInput                            `pulumi:"filterControlId"`
	SelectableValues              AnalysisFilterSelectableValuesPtrInput        `pulumi:"selectableValues"`
	SourceFilterId                pulumi.StringInput                            `pulumi:"sourceFilterId"`
	Title                         pulumi.StringInput                            `pulumi:"title"`
	Type                          AnalysisSheetControlListTypePtrInput          `pulumi:"type"`
}

func (AnalysisFilterDropDownControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterDropDownControl)(nil)).Elem()
}

func (i AnalysisFilterDropDownControlArgs) ToAnalysisFilterDropDownControlOutput() AnalysisFilterDropDownControlOutput {
	return i.ToAnalysisFilterDropDownControlOutputWithContext(context.Background())
}

func (i AnalysisFilterDropDownControlArgs) ToAnalysisFilterDropDownControlOutputWithContext(ctx context.Context) AnalysisFilterDropDownControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterDropDownControlOutput)
}

func (i AnalysisFilterDropDownControlArgs) ToAnalysisFilterDropDownControlPtrOutput() AnalysisFilterDropDownControlPtrOutput {
	return i.ToAnalysisFilterDropDownControlPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterDropDownControlArgs) ToAnalysisFilterDropDownControlPtrOutputWithContext(ctx context.Context) AnalysisFilterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterDropDownControlOutput).ToAnalysisFilterDropDownControlPtrOutputWithContext(ctx)
}

// AnalysisFilterDropDownControlPtrInput is an input type that accepts AnalysisFilterDropDownControlArgs, AnalysisFilterDropDownControlPtr and AnalysisFilterDropDownControlPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterDropDownControlPtrInput` via:
//
//	        AnalysisFilterDropDownControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterDropDownControlPtrInput interface {
	pulumi.Input

	ToAnalysisFilterDropDownControlPtrOutput() AnalysisFilterDropDownControlPtrOutput
	ToAnalysisFilterDropDownControlPtrOutputWithContext(context.Context) AnalysisFilterDropDownControlPtrOutput
}

type analysisFilterDropDownControlPtrType AnalysisFilterDropDownControlArgs

func AnalysisFilterDropDownControlPtr(v *AnalysisFilterDropDownControlArgs) AnalysisFilterDropDownControlPtrInput {
	return (*analysisFilterDropDownControlPtrType)(v)
}

func (*analysisFilterDropDownControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterDropDownControl)(nil)).Elem()
}

func (i *analysisFilterDropDownControlPtrType) ToAnalysisFilterDropDownControlPtrOutput() AnalysisFilterDropDownControlPtrOutput {
	return i.ToAnalysisFilterDropDownControlPtrOutputWithContext(context.Background())
}

func (i *analysisFilterDropDownControlPtrType) ToAnalysisFilterDropDownControlPtrOutputWithContext(ctx context.Context) AnalysisFilterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterDropDownControlPtrOutput)
}

type AnalysisFilterDropDownControlOutput struct{ *pulumi.OutputState }

func (AnalysisFilterDropDownControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterDropDownControl)(nil)).Elem()
}

func (o AnalysisFilterDropDownControlOutput) ToAnalysisFilterDropDownControlOutput() AnalysisFilterDropDownControlOutput {
	return o
}

func (o AnalysisFilterDropDownControlOutput) ToAnalysisFilterDropDownControlOutputWithContext(ctx context.Context) AnalysisFilterDropDownControlOutput {
	return o
}

func (o AnalysisFilterDropDownControlOutput) ToAnalysisFilterDropDownControlPtrOutput() AnalysisFilterDropDownControlPtrOutput {
	return o.ToAnalysisFilterDropDownControlPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterDropDownControlOutput) ToAnalysisFilterDropDownControlPtrOutputWithContext(ctx context.Context) AnalysisFilterDropDownControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterDropDownControl) *AnalysisFilterDropDownControl {
		return &v
	}).(AnalysisFilterDropDownControlPtrOutput)
}

func (o AnalysisFilterDropDownControlOutput) CascadingControlConfiguration() AnalysisCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFilterDropDownControl) *AnalysisCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(AnalysisCascadingControlConfigurationPtrOutput)
}

func (o AnalysisFilterDropDownControlOutput) DisplayOptions() AnalysisDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilterDropDownControl) *AnalysisDropDownControlDisplayOptions { return v.DisplayOptions }).(AnalysisDropDownControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterDropDownControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterDropDownControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o AnalysisFilterDropDownControlOutput) SelectableValues() AnalysisFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v AnalysisFilterDropDownControl) *AnalysisFilterSelectableValues { return v.SelectableValues }).(AnalysisFilterSelectableValuesPtrOutput)
}

func (o AnalysisFilterDropDownControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterDropDownControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o AnalysisFilterDropDownControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterDropDownControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o AnalysisFilterDropDownControlOutput) Type() AnalysisSheetControlListTypePtrOutput {
	return o.ApplyT(func(v AnalysisFilterDropDownControl) *AnalysisSheetControlListType { return v.Type }).(AnalysisSheetControlListTypePtrOutput)
}

type AnalysisFilterDropDownControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterDropDownControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterDropDownControl)(nil)).Elem()
}

func (o AnalysisFilterDropDownControlPtrOutput) ToAnalysisFilterDropDownControlPtrOutput() AnalysisFilterDropDownControlPtrOutput {
	return o
}

func (o AnalysisFilterDropDownControlPtrOutput) ToAnalysisFilterDropDownControlPtrOutputWithContext(ctx context.Context) AnalysisFilterDropDownControlPtrOutput {
	return o
}

func (o AnalysisFilterDropDownControlPtrOutput) Elem() AnalysisFilterDropDownControlOutput {
	return o.ApplyT(func(v *AnalysisFilterDropDownControl) AnalysisFilterDropDownControl {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterDropDownControl
		return ret
	}).(AnalysisFilterDropDownControlOutput)
}

func (o AnalysisFilterDropDownControlPtrOutput) CascadingControlConfiguration() AnalysisCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDropDownControl) *AnalysisCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(AnalysisCascadingControlConfigurationPtrOutput)
}

func (o AnalysisFilterDropDownControlPtrOutput) DisplayOptions() AnalysisDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDropDownControl) *AnalysisDropDownControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisDropDownControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterDropDownControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterDropDownControlPtrOutput) SelectableValues() AnalysisFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDropDownControl) *AnalysisFilterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(AnalysisFilterSelectableValuesPtrOutput)
}

func (o AnalysisFilterDropDownControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterDropDownControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterDropDownControlPtrOutput) Type() AnalysisSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *AnalysisFilterDropDownControl) *AnalysisSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AnalysisSheetControlListTypePtrOutput)
}

type AnalysisFilterGroup struct {
	CrossDataset       AnalysisCrossDatasetTypes        `pulumi:"crossDataset"`
	FilterGroupId      string                           `pulumi:"filterGroupId"`
	Filters            []AnalysisFilter                 `pulumi:"filters"`
	ScopeConfiguration AnalysisFilterScopeConfiguration `pulumi:"scopeConfiguration"`
	Status             *AnalysisWidgetStatus            `pulumi:"status"`
}

// AnalysisFilterGroupInput is an input type that accepts AnalysisFilterGroupArgs and AnalysisFilterGroupOutput values.
// You can construct a concrete instance of `AnalysisFilterGroupInput` via:
//
//	AnalysisFilterGroupArgs{...}
type AnalysisFilterGroupInput interface {
	pulumi.Input

	ToAnalysisFilterGroupOutput() AnalysisFilterGroupOutput
	ToAnalysisFilterGroupOutputWithContext(context.Context) AnalysisFilterGroupOutput
}

type AnalysisFilterGroupArgs struct {
	CrossDataset       AnalysisCrossDatasetTypesInput        `pulumi:"crossDataset"`
	FilterGroupId      pulumi.StringInput                    `pulumi:"filterGroupId"`
	Filters            AnalysisFilterArrayInput              `pulumi:"filters"`
	ScopeConfiguration AnalysisFilterScopeConfigurationInput `pulumi:"scopeConfiguration"`
	Status             AnalysisWidgetStatusPtrInput          `pulumi:"status"`
}

func (AnalysisFilterGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterGroup)(nil)).Elem()
}

func (i AnalysisFilterGroupArgs) ToAnalysisFilterGroupOutput() AnalysisFilterGroupOutput {
	return i.ToAnalysisFilterGroupOutputWithContext(context.Background())
}

func (i AnalysisFilterGroupArgs) ToAnalysisFilterGroupOutputWithContext(ctx context.Context) AnalysisFilterGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterGroupOutput)
}

// AnalysisFilterGroupArrayInput is an input type that accepts AnalysisFilterGroupArray and AnalysisFilterGroupArrayOutput values.
// You can construct a concrete instance of `AnalysisFilterGroupArrayInput` via:
//
//	AnalysisFilterGroupArray{ AnalysisFilterGroupArgs{...} }
type AnalysisFilterGroupArrayInput interface {
	pulumi.Input

	ToAnalysisFilterGroupArrayOutput() AnalysisFilterGroupArrayOutput
	ToAnalysisFilterGroupArrayOutputWithContext(context.Context) AnalysisFilterGroupArrayOutput
}

type AnalysisFilterGroupArray []AnalysisFilterGroupInput

func (AnalysisFilterGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFilterGroup)(nil)).Elem()
}

func (i AnalysisFilterGroupArray) ToAnalysisFilterGroupArrayOutput() AnalysisFilterGroupArrayOutput {
	return i.ToAnalysisFilterGroupArrayOutputWithContext(context.Background())
}

func (i AnalysisFilterGroupArray) ToAnalysisFilterGroupArrayOutputWithContext(ctx context.Context) AnalysisFilterGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterGroupArrayOutput)
}

type AnalysisFilterGroupOutput struct{ *pulumi.OutputState }

func (AnalysisFilterGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterGroup)(nil)).Elem()
}

func (o AnalysisFilterGroupOutput) ToAnalysisFilterGroupOutput() AnalysisFilterGroupOutput {
	return o
}

func (o AnalysisFilterGroupOutput) ToAnalysisFilterGroupOutputWithContext(ctx context.Context) AnalysisFilterGroupOutput {
	return o
}

func (o AnalysisFilterGroupOutput) CrossDataset() AnalysisCrossDatasetTypesOutput {
	return o.ApplyT(func(v AnalysisFilterGroup) AnalysisCrossDatasetTypes { return v.CrossDataset }).(AnalysisCrossDatasetTypesOutput)
}

func (o AnalysisFilterGroupOutput) FilterGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterGroup) string { return v.FilterGroupId }).(pulumi.StringOutput)
}

func (o AnalysisFilterGroupOutput) Filters() AnalysisFilterArrayOutput {
	return o.ApplyT(func(v AnalysisFilterGroup) []AnalysisFilter { return v.Filters }).(AnalysisFilterArrayOutput)
}

func (o AnalysisFilterGroupOutput) ScopeConfiguration() AnalysisFilterScopeConfigurationOutput {
	return o.ApplyT(func(v AnalysisFilterGroup) AnalysisFilterScopeConfiguration { return v.ScopeConfiguration }).(AnalysisFilterScopeConfigurationOutput)
}

func (o AnalysisFilterGroupOutput) Status() AnalysisWidgetStatusPtrOutput {
	return o.ApplyT(func(v AnalysisFilterGroup) *AnalysisWidgetStatus { return v.Status }).(AnalysisWidgetStatusPtrOutput)
}

type AnalysisFilterGroupArrayOutput struct{ *pulumi.OutputState }

func (AnalysisFilterGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFilterGroup)(nil)).Elem()
}

func (o AnalysisFilterGroupArrayOutput) ToAnalysisFilterGroupArrayOutput() AnalysisFilterGroupArrayOutput {
	return o
}

func (o AnalysisFilterGroupArrayOutput) ToAnalysisFilterGroupArrayOutputWithContext(ctx context.Context) AnalysisFilterGroupArrayOutput {
	return o
}

func (o AnalysisFilterGroupArrayOutput) Index(i pulumi.IntInput) AnalysisFilterGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisFilterGroup {
		return vs[0].([]AnalysisFilterGroup)[vs[1].(int)]
	}).(AnalysisFilterGroupOutput)
}

type AnalysisFilterListConfiguration struct {
	CategoryValues   []string                                `pulumi:"categoryValues"`
	MatchOperator    AnalysisCategoryFilterMatchOperator     `pulumi:"matchOperator"`
	SelectAllOptions *AnalysisCategoryFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// AnalysisFilterListConfigurationInput is an input type that accepts AnalysisFilterListConfigurationArgs and AnalysisFilterListConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFilterListConfigurationInput` via:
//
//	AnalysisFilterListConfigurationArgs{...}
type AnalysisFilterListConfigurationInput interface {
	pulumi.Input

	ToAnalysisFilterListConfigurationOutput() AnalysisFilterListConfigurationOutput
	ToAnalysisFilterListConfigurationOutputWithContext(context.Context) AnalysisFilterListConfigurationOutput
}

type AnalysisFilterListConfigurationArgs struct {
	CategoryValues   pulumi.StringArrayInput                        `pulumi:"categoryValues"`
	MatchOperator    AnalysisCategoryFilterMatchOperatorInput       `pulumi:"matchOperator"`
	SelectAllOptions AnalysisCategoryFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (AnalysisFilterListConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterListConfiguration)(nil)).Elem()
}

func (i AnalysisFilterListConfigurationArgs) ToAnalysisFilterListConfigurationOutput() AnalysisFilterListConfigurationOutput {
	return i.ToAnalysisFilterListConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFilterListConfigurationArgs) ToAnalysisFilterListConfigurationOutputWithContext(ctx context.Context) AnalysisFilterListConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterListConfigurationOutput)
}

func (i AnalysisFilterListConfigurationArgs) ToAnalysisFilterListConfigurationPtrOutput() AnalysisFilterListConfigurationPtrOutput {
	return i.ToAnalysisFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterListConfigurationArgs) ToAnalysisFilterListConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterListConfigurationOutput).ToAnalysisFilterListConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFilterListConfigurationPtrInput is an input type that accepts AnalysisFilterListConfigurationArgs, AnalysisFilterListConfigurationPtr and AnalysisFilterListConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterListConfigurationPtrInput` via:
//
//	        AnalysisFilterListConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterListConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFilterListConfigurationPtrOutput() AnalysisFilterListConfigurationPtrOutput
	ToAnalysisFilterListConfigurationPtrOutputWithContext(context.Context) AnalysisFilterListConfigurationPtrOutput
}

type analysisFilterListConfigurationPtrType AnalysisFilterListConfigurationArgs

func AnalysisFilterListConfigurationPtr(v *AnalysisFilterListConfigurationArgs) AnalysisFilterListConfigurationPtrInput {
	return (*analysisFilterListConfigurationPtrType)(v)
}

func (*analysisFilterListConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterListConfiguration)(nil)).Elem()
}

func (i *analysisFilterListConfigurationPtrType) ToAnalysisFilterListConfigurationPtrOutput() AnalysisFilterListConfigurationPtrOutput {
	return i.ToAnalysisFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFilterListConfigurationPtrType) ToAnalysisFilterListConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterListConfigurationPtrOutput)
}

type AnalysisFilterListConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFilterListConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterListConfiguration)(nil)).Elem()
}

func (o AnalysisFilterListConfigurationOutput) ToAnalysisFilterListConfigurationOutput() AnalysisFilterListConfigurationOutput {
	return o
}

func (o AnalysisFilterListConfigurationOutput) ToAnalysisFilterListConfigurationOutputWithContext(ctx context.Context) AnalysisFilterListConfigurationOutput {
	return o
}

func (o AnalysisFilterListConfigurationOutput) ToAnalysisFilterListConfigurationPtrOutput() AnalysisFilterListConfigurationPtrOutput {
	return o.ToAnalysisFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterListConfigurationOutput) ToAnalysisFilterListConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterListConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterListConfiguration) *AnalysisFilterListConfiguration {
		return &v
	}).(AnalysisFilterListConfigurationPtrOutput)
}

func (o AnalysisFilterListConfigurationOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisFilterListConfiguration) []string { return v.CategoryValues }).(pulumi.StringArrayOutput)
}

func (o AnalysisFilterListConfigurationOutput) MatchOperator() AnalysisCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v AnalysisFilterListConfiguration) AnalysisCategoryFilterMatchOperator { return v.MatchOperator }).(AnalysisCategoryFilterMatchOperatorOutput)
}

func (o AnalysisFilterListConfigurationOutput) SelectAllOptions() AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilterListConfiguration) *AnalysisCategoryFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(AnalysisCategoryFilterSelectAllOptionsPtrOutput)
}

type AnalysisFilterListConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterListConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterListConfiguration)(nil)).Elem()
}

func (o AnalysisFilterListConfigurationPtrOutput) ToAnalysisFilterListConfigurationPtrOutput() AnalysisFilterListConfigurationPtrOutput {
	return o
}

func (o AnalysisFilterListConfigurationPtrOutput) ToAnalysisFilterListConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterListConfigurationPtrOutput {
	return o
}

func (o AnalysisFilterListConfigurationPtrOutput) Elem() AnalysisFilterListConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFilterListConfiguration) AnalysisFilterListConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterListConfiguration
		return ret
	}).(AnalysisFilterListConfigurationOutput)
}

func (o AnalysisFilterListConfigurationPtrOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisFilterListConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.CategoryValues
	}).(pulumi.StringArrayOutput)
}

func (o AnalysisFilterListConfigurationPtrOutput) MatchOperator() AnalysisCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterListConfiguration) *AnalysisCategoryFilterMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(AnalysisCategoryFilterMatchOperatorPtrOutput)
}

func (o AnalysisFilterListConfigurationPtrOutput) SelectAllOptions() AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterListConfiguration) *AnalysisCategoryFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(AnalysisCategoryFilterSelectAllOptionsPtrOutput)
}

type AnalysisFilterListControl struct {
	CascadingControlConfiguration *AnalysisCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *AnalysisListControlDisplayOptions     `pulumi:"displayOptions"`
	FilterControlId               string                                 `pulumi:"filterControlId"`
	SelectableValues              *AnalysisFilterSelectableValues        `pulumi:"selectableValues"`
	SourceFilterId                string                                 `pulumi:"sourceFilterId"`
	Title                         string                                 `pulumi:"title"`
	Type                          *AnalysisSheetControlListType          `pulumi:"type"`
}

// AnalysisFilterListControlInput is an input type that accepts AnalysisFilterListControlArgs and AnalysisFilterListControlOutput values.
// You can construct a concrete instance of `AnalysisFilterListControlInput` via:
//
//	AnalysisFilterListControlArgs{...}
type AnalysisFilterListControlInput interface {
	pulumi.Input

	ToAnalysisFilterListControlOutput() AnalysisFilterListControlOutput
	ToAnalysisFilterListControlOutputWithContext(context.Context) AnalysisFilterListControlOutput
}

type AnalysisFilterListControlArgs struct {
	CascadingControlConfiguration AnalysisCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                AnalysisListControlDisplayOptionsPtrInput     `pulumi:"displayOptions"`
	FilterControlId               pulumi.StringInput                            `pulumi:"filterControlId"`
	SelectableValues              AnalysisFilterSelectableValuesPtrInput        `pulumi:"selectableValues"`
	SourceFilterId                pulumi.StringInput                            `pulumi:"sourceFilterId"`
	Title                         pulumi.StringInput                            `pulumi:"title"`
	Type                          AnalysisSheetControlListTypePtrInput          `pulumi:"type"`
}

func (AnalysisFilterListControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterListControl)(nil)).Elem()
}

func (i AnalysisFilterListControlArgs) ToAnalysisFilterListControlOutput() AnalysisFilterListControlOutput {
	return i.ToAnalysisFilterListControlOutputWithContext(context.Background())
}

func (i AnalysisFilterListControlArgs) ToAnalysisFilterListControlOutputWithContext(ctx context.Context) AnalysisFilterListControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterListControlOutput)
}

func (i AnalysisFilterListControlArgs) ToAnalysisFilterListControlPtrOutput() AnalysisFilterListControlPtrOutput {
	return i.ToAnalysisFilterListControlPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterListControlArgs) ToAnalysisFilterListControlPtrOutputWithContext(ctx context.Context) AnalysisFilterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterListControlOutput).ToAnalysisFilterListControlPtrOutputWithContext(ctx)
}

// AnalysisFilterListControlPtrInput is an input type that accepts AnalysisFilterListControlArgs, AnalysisFilterListControlPtr and AnalysisFilterListControlPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterListControlPtrInput` via:
//
//	        AnalysisFilterListControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterListControlPtrInput interface {
	pulumi.Input

	ToAnalysisFilterListControlPtrOutput() AnalysisFilterListControlPtrOutput
	ToAnalysisFilterListControlPtrOutputWithContext(context.Context) AnalysisFilterListControlPtrOutput
}

type analysisFilterListControlPtrType AnalysisFilterListControlArgs

func AnalysisFilterListControlPtr(v *AnalysisFilterListControlArgs) AnalysisFilterListControlPtrInput {
	return (*analysisFilterListControlPtrType)(v)
}

func (*analysisFilterListControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterListControl)(nil)).Elem()
}

func (i *analysisFilterListControlPtrType) ToAnalysisFilterListControlPtrOutput() AnalysisFilterListControlPtrOutput {
	return i.ToAnalysisFilterListControlPtrOutputWithContext(context.Background())
}

func (i *analysisFilterListControlPtrType) ToAnalysisFilterListControlPtrOutputWithContext(ctx context.Context) AnalysisFilterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterListControlPtrOutput)
}

type AnalysisFilterListControlOutput struct{ *pulumi.OutputState }

func (AnalysisFilterListControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterListControl)(nil)).Elem()
}

func (o AnalysisFilterListControlOutput) ToAnalysisFilterListControlOutput() AnalysisFilterListControlOutput {
	return o
}

func (o AnalysisFilterListControlOutput) ToAnalysisFilterListControlOutputWithContext(ctx context.Context) AnalysisFilterListControlOutput {
	return o
}

func (o AnalysisFilterListControlOutput) ToAnalysisFilterListControlPtrOutput() AnalysisFilterListControlPtrOutput {
	return o.ToAnalysisFilterListControlPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterListControlOutput) ToAnalysisFilterListControlPtrOutputWithContext(ctx context.Context) AnalysisFilterListControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterListControl) *AnalysisFilterListControl {
		return &v
	}).(AnalysisFilterListControlPtrOutput)
}

func (o AnalysisFilterListControlOutput) CascadingControlConfiguration() AnalysisCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFilterListControl) *AnalysisCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(AnalysisCascadingControlConfigurationPtrOutput)
}

func (o AnalysisFilterListControlOutput) DisplayOptions() AnalysisListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilterListControl) *AnalysisListControlDisplayOptions { return v.DisplayOptions }).(AnalysisListControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterListControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterListControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o AnalysisFilterListControlOutput) SelectableValues() AnalysisFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v AnalysisFilterListControl) *AnalysisFilterSelectableValues { return v.SelectableValues }).(AnalysisFilterSelectableValuesPtrOutput)
}

func (o AnalysisFilterListControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterListControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o AnalysisFilterListControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterListControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o AnalysisFilterListControlOutput) Type() AnalysisSheetControlListTypePtrOutput {
	return o.ApplyT(func(v AnalysisFilterListControl) *AnalysisSheetControlListType { return v.Type }).(AnalysisSheetControlListTypePtrOutput)
}

type AnalysisFilterListControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterListControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterListControl)(nil)).Elem()
}

func (o AnalysisFilterListControlPtrOutput) ToAnalysisFilterListControlPtrOutput() AnalysisFilterListControlPtrOutput {
	return o
}

func (o AnalysisFilterListControlPtrOutput) ToAnalysisFilterListControlPtrOutputWithContext(ctx context.Context) AnalysisFilterListControlPtrOutput {
	return o
}

func (o AnalysisFilterListControlPtrOutput) Elem() AnalysisFilterListControlOutput {
	return o.ApplyT(func(v *AnalysisFilterListControl) AnalysisFilterListControl {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterListControl
		return ret
	}).(AnalysisFilterListControlOutput)
}

func (o AnalysisFilterListControlPtrOutput) CascadingControlConfiguration() AnalysisCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterListControl) *AnalysisCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(AnalysisCascadingControlConfigurationPtrOutput)
}

func (o AnalysisFilterListControlPtrOutput) DisplayOptions() AnalysisListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterListControl) *AnalysisListControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisListControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterListControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterListControlPtrOutput) SelectableValues() AnalysisFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterListControl) *AnalysisFilterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(AnalysisFilterSelectableValuesPtrOutput)
}

func (o AnalysisFilterListControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterListControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterListControlPtrOutput) Type() AnalysisSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *AnalysisFilterListControl) *AnalysisSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AnalysisSheetControlListTypePtrOutput)
}

type AnalysisFilterOperationSelectedFieldsConfiguration struct {
	SelectedFieldOptions *AnalysisSelectedFieldOptions `pulumi:"selectedFieldOptions"`
	SelectedFields       []string                      `pulumi:"selectedFields"`
}

// AnalysisFilterOperationSelectedFieldsConfigurationInput is an input type that accepts AnalysisFilterOperationSelectedFieldsConfigurationArgs and AnalysisFilterOperationSelectedFieldsConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFilterOperationSelectedFieldsConfigurationInput` via:
//
//	AnalysisFilterOperationSelectedFieldsConfigurationArgs{...}
type AnalysisFilterOperationSelectedFieldsConfigurationInput interface {
	pulumi.Input

	ToAnalysisFilterOperationSelectedFieldsConfigurationOutput() AnalysisFilterOperationSelectedFieldsConfigurationOutput
	ToAnalysisFilterOperationSelectedFieldsConfigurationOutputWithContext(context.Context) AnalysisFilterOperationSelectedFieldsConfigurationOutput
}

type AnalysisFilterOperationSelectedFieldsConfigurationArgs struct {
	SelectedFieldOptions AnalysisSelectedFieldOptionsPtrInput `pulumi:"selectedFieldOptions"`
	SelectedFields       pulumi.StringArrayInput              `pulumi:"selectedFields"`
}

func (AnalysisFilterOperationSelectedFieldsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (i AnalysisFilterOperationSelectedFieldsConfigurationArgs) ToAnalysisFilterOperationSelectedFieldsConfigurationOutput() AnalysisFilterOperationSelectedFieldsConfigurationOutput {
	return i.ToAnalysisFilterOperationSelectedFieldsConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFilterOperationSelectedFieldsConfigurationArgs) ToAnalysisFilterOperationSelectedFieldsConfigurationOutputWithContext(ctx context.Context) AnalysisFilterOperationSelectedFieldsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterOperationSelectedFieldsConfigurationOutput)
}

func (i AnalysisFilterOperationSelectedFieldsConfigurationArgs) ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutput() AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput {
	return i.ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterOperationSelectedFieldsConfigurationArgs) ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterOperationSelectedFieldsConfigurationOutput).ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFilterOperationSelectedFieldsConfigurationPtrInput is an input type that accepts AnalysisFilterOperationSelectedFieldsConfigurationArgs, AnalysisFilterOperationSelectedFieldsConfigurationPtr and AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterOperationSelectedFieldsConfigurationPtrInput` via:
//
//	        AnalysisFilterOperationSelectedFieldsConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterOperationSelectedFieldsConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutput() AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput
	ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Context) AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput
}

type analysisFilterOperationSelectedFieldsConfigurationPtrType AnalysisFilterOperationSelectedFieldsConfigurationArgs

func AnalysisFilterOperationSelectedFieldsConfigurationPtr(v *AnalysisFilterOperationSelectedFieldsConfigurationArgs) AnalysisFilterOperationSelectedFieldsConfigurationPtrInput {
	return (*analysisFilterOperationSelectedFieldsConfigurationPtrType)(v)
}

func (*analysisFilterOperationSelectedFieldsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (i *analysisFilterOperationSelectedFieldsConfigurationPtrType) ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutput() AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput {
	return i.ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFilterOperationSelectedFieldsConfigurationPtrType) ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput)
}

type AnalysisFilterOperationSelectedFieldsConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFilterOperationSelectedFieldsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationOutput) ToAnalysisFilterOperationSelectedFieldsConfigurationOutput() AnalysisFilterOperationSelectedFieldsConfigurationOutput {
	return o
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationOutput) ToAnalysisFilterOperationSelectedFieldsConfigurationOutputWithContext(ctx context.Context) AnalysisFilterOperationSelectedFieldsConfigurationOutput {
	return o
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationOutput) ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutput() AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o.ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationOutput) ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterOperationSelectedFieldsConfiguration) *AnalysisFilterOperationSelectedFieldsConfiguration {
		return &v
	}).(AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput)
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationOutput) SelectedFieldOptions() AnalysisSelectedFieldOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilterOperationSelectedFieldsConfiguration) *AnalysisSelectedFieldOptions {
		return v.SelectedFieldOptions
	}).(AnalysisSelectedFieldOptionsPtrOutput)
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationOutput) SelectedFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisFilterOperationSelectedFieldsConfiguration) []string { return v.SelectedFields }).(pulumi.StringArrayOutput)
}

type AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput) ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutput() AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput) ToAnalysisFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput) Elem() AnalysisFilterOperationSelectedFieldsConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFilterOperationSelectedFieldsConfiguration) AnalysisFilterOperationSelectedFieldsConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterOperationSelectedFieldsConfiguration
		return ret
	}).(AnalysisFilterOperationSelectedFieldsConfigurationOutput)
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput) SelectedFieldOptions() AnalysisSelectedFieldOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterOperationSelectedFieldsConfiguration) *AnalysisSelectedFieldOptions {
		if v == nil {
			return nil
		}
		return v.SelectedFieldOptions
	}).(AnalysisSelectedFieldOptionsPtrOutput)
}

func (o AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput) SelectedFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisFilterOperationSelectedFieldsConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SelectedFields
	}).(pulumi.StringArrayOutput)
}

type AnalysisFilterOperationTargetVisualsConfiguration struct {
	SameSheetTargetVisualConfiguration *AnalysisSameSheetTargetVisualConfiguration `pulumi:"sameSheetTargetVisualConfiguration"`
}

// AnalysisFilterOperationTargetVisualsConfigurationInput is an input type that accepts AnalysisFilterOperationTargetVisualsConfigurationArgs and AnalysisFilterOperationTargetVisualsConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFilterOperationTargetVisualsConfigurationInput` via:
//
//	AnalysisFilterOperationTargetVisualsConfigurationArgs{...}
type AnalysisFilterOperationTargetVisualsConfigurationInput interface {
	pulumi.Input

	ToAnalysisFilterOperationTargetVisualsConfigurationOutput() AnalysisFilterOperationTargetVisualsConfigurationOutput
	ToAnalysisFilterOperationTargetVisualsConfigurationOutputWithContext(context.Context) AnalysisFilterOperationTargetVisualsConfigurationOutput
}

type AnalysisFilterOperationTargetVisualsConfigurationArgs struct {
	SameSheetTargetVisualConfiguration AnalysisSameSheetTargetVisualConfigurationPtrInput `pulumi:"sameSheetTargetVisualConfiguration"`
}

func (AnalysisFilterOperationTargetVisualsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (i AnalysisFilterOperationTargetVisualsConfigurationArgs) ToAnalysisFilterOperationTargetVisualsConfigurationOutput() AnalysisFilterOperationTargetVisualsConfigurationOutput {
	return i.ToAnalysisFilterOperationTargetVisualsConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFilterOperationTargetVisualsConfigurationArgs) ToAnalysisFilterOperationTargetVisualsConfigurationOutputWithContext(ctx context.Context) AnalysisFilterOperationTargetVisualsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterOperationTargetVisualsConfigurationOutput)
}

func (i AnalysisFilterOperationTargetVisualsConfigurationArgs) ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutput() AnalysisFilterOperationTargetVisualsConfigurationPtrOutput {
	return i.ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterOperationTargetVisualsConfigurationArgs) ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterOperationTargetVisualsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterOperationTargetVisualsConfigurationOutput).ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFilterOperationTargetVisualsConfigurationPtrInput is an input type that accepts AnalysisFilterOperationTargetVisualsConfigurationArgs, AnalysisFilterOperationTargetVisualsConfigurationPtr and AnalysisFilterOperationTargetVisualsConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterOperationTargetVisualsConfigurationPtrInput` via:
//
//	        AnalysisFilterOperationTargetVisualsConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterOperationTargetVisualsConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutput() AnalysisFilterOperationTargetVisualsConfigurationPtrOutput
	ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Context) AnalysisFilterOperationTargetVisualsConfigurationPtrOutput
}

type analysisFilterOperationTargetVisualsConfigurationPtrType AnalysisFilterOperationTargetVisualsConfigurationArgs

func AnalysisFilterOperationTargetVisualsConfigurationPtr(v *AnalysisFilterOperationTargetVisualsConfigurationArgs) AnalysisFilterOperationTargetVisualsConfigurationPtrInput {
	return (*analysisFilterOperationTargetVisualsConfigurationPtrType)(v)
}

func (*analysisFilterOperationTargetVisualsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (i *analysisFilterOperationTargetVisualsConfigurationPtrType) ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutput() AnalysisFilterOperationTargetVisualsConfigurationPtrOutput {
	return i.ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFilterOperationTargetVisualsConfigurationPtrType) ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterOperationTargetVisualsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterOperationTargetVisualsConfigurationPtrOutput)
}

type AnalysisFilterOperationTargetVisualsConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFilterOperationTargetVisualsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (o AnalysisFilterOperationTargetVisualsConfigurationOutput) ToAnalysisFilterOperationTargetVisualsConfigurationOutput() AnalysisFilterOperationTargetVisualsConfigurationOutput {
	return o
}

func (o AnalysisFilterOperationTargetVisualsConfigurationOutput) ToAnalysisFilterOperationTargetVisualsConfigurationOutputWithContext(ctx context.Context) AnalysisFilterOperationTargetVisualsConfigurationOutput {
	return o
}

func (o AnalysisFilterOperationTargetVisualsConfigurationOutput) ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutput() AnalysisFilterOperationTargetVisualsConfigurationPtrOutput {
	return o.ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterOperationTargetVisualsConfigurationOutput) ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterOperationTargetVisualsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterOperationTargetVisualsConfiguration) *AnalysisFilterOperationTargetVisualsConfiguration {
		return &v
	}).(AnalysisFilterOperationTargetVisualsConfigurationPtrOutput)
}

func (o AnalysisFilterOperationTargetVisualsConfigurationOutput) SameSheetTargetVisualConfiguration() AnalysisSameSheetTargetVisualConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFilterOperationTargetVisualsConfiguration) *AnalysisSameSheetTargetVisualConfiguration {
		return v.SameSheetTargetVisualConfiguration
	}).(AnalysisSameSheetTargetVisualConfigurationPtrOutput)
}

type AnalysisFilterOperationTargetVisualsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterOperationTargetVisualsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (o AnalysisFilterOperationTargetVisualsConfigurationPtrOutput) ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutput() AnalysisFilterOperationTargetVisualsConfigurationPtrOutput {
	return o
}

func (o AnalysisFilterOperationTargetVisualsConfigurationPtrOutput) ToAnalysisFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFilterOperationTargetVisualsConfigurationPtrOutput {
	return o
}

func (o AnalysisFilterOperationTargetVisualsConfigurationPtrOutput) Elem() AnalysisFilterOperationTargetVisualsConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFilterOperationTargetVisualsConfiguration) AnalysisFilterOperationTargetVisualsConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterOperationTargetVisualsConfiguration
		return ret
	}).(AnalysisFilterOperationTargetVisualsConfigurationOutput)
}

func (o AnalysisFilterOperationTargetVisualsConfigurationPtrOutput) SameSheetTargetVisualConfiguration() AnalysisSameSheetTargetVisualConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterOperationTargetVisualsConfiguration) *AnalysisSameSheetTargetVisualConfiguration {
		if v == nil {
			return nil
		}
		return v.SameSheetTargetVisualConfiguration
	}).(AnalysisSameSheetTargetVisualConfigurationPtrOutput)
}

type AnalysisFilterRelativeDateTimeControl struct {
	DisplayOptions  *AnalysisRelativeDateTimeControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                         `pulumi:"filterControlId"`
	SourceFilterId  string                                         `pulumi:"sourceFilterId"`
	Title           string                                         `pulumi:"title"`
}

// AnalysisFilterRelativeDateTimeControlInput is an input type that accepts AnalysisFilterRelativeDateTimeControlArgs and AnalysisFilterRelativeDateTimeControlOutput values.
// You can construct a concrete instance of `AnalysisFilterRelativeDateTimeControlInput` via:
//
//	AnalysisFilterRelativeDateTimeControlArgs{...}
type AnalysisFilterRelativeDateTimeControlInput interface {
	pulumi.Input

	ToAnalysisFilterRelativeDateTimeControlOutput() AnalysisFilterRelativeDateTimeControlOutput
	ToAnalysisFilterRelativeDateTimeControlOutputWithContext(context.Context) AnalysisFilterRelativeDateTimeControlOutput
}

type AnalysisFilterRelativeDateTimeControlArgs struct {
	DisplayOptions  AnalysisRelativeDateTimeControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                                    `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                                    `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                                    `pulumi:"title"`
}

func (AnalysisFilterRelativeDateTimeControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterRelativeDateTimeControl)(nil)).Elem()
}

func (i AnalysisFilterRelativeDateTimeControlArgs) ToAnalysisFilterRelativeDateTimeControlOutput() AnalysisFilterRelativeDateTimeControlOutput {
	return i.ToAnalysisFilterRelativeDateTimeControlOutputWithContext(context.Background())
}

func (i AnalysisFilterRelativeDateTimeControlArgs) ToAnalysisFilterRelativeDateTimeControlOutputWithContext(ctx context.Context) AnalysisFilterRelativeDateTimeControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterRelativeDateTimeControlOutput)
}

func (i AnalysisFilterRelativeDateTimeControlArgs) ToAnalysisFilterRelativeDateTimeControlPtrOutput() AnalysisFilterRelativeDateTimeControlPtrOutput {
	return i.ToAnalysisFilterRelativeDateTimeControlPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterRelativeDateTimeControlArgs) ToAnalysisFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) AnalysisFilterRelativeDateTimeControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterRelativeDateTimeControlOutput).ToAnalysisFilterRelativeDateTimeControlPtrOutputWithContext(ctx)
}

// AnalysisFilterRelativeDateTimeControlPtrInput is an input type that accepts AnalysisFilterRelativeDateTimeControlArgs, AnalysisFilterRelativeDateTimeControlPtr and AnalysisFilterRelativeDateTimeControlPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterRelativeDateTimeControlPtrInput` via:
//
//	        AnalysisFilterRelativeDateTimeControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterRelativeDateTimeControlPtrInput interface {
	pulumi.Input

	ToAnalysisFilterRelativeDateTimeControlPtrOutput() AnalysisFilterRelativeDateTimeControlPtrOutput
	ToAnalysisFilterRelativeDateTimeControlPtrOutputWithContext(context.Context) AnalysisFilterRelativeDateTimeControlPtrOutput
}

type analysisFilterRelativeDateTimeControlPtrType AnalysisFilterRelativeDateTimeControlArgs

func AnalysisFilterRelativeDateTimeControlPtr(v *AnalysisFilterRelativeDateTimeControlArgs) AnalysisFilterRelativeDateTimeControlPtrInput {
	return (*analysisFilterRelativeDateTimeControlPtrType)(v)
}

func (*analysisFilterRelativeDateTimeControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterRelativeDateTimeControl)(nil)).Elem()
}

func (i *analysisFilterRelativeDateTimeControlPtrType) ToAnalysisFilterRelativeDateTimeControlPtrOutput() AnalysisFilterRelativeDateTimeControlPtrOutput {
	return i.ToAnalysisFilterRelativeDateTimeControlPtrOutputWithContext(context.Background())
}

func (i *analysisFilterRelativeDateTimeControlPtrType) ToAnalysisFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) AnalysisFilterRelativeDateTimeControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterRelativeDateTimeControlPtrOutput)
}

type AnalysisFilterRelativeDateTimeControlOutput struct{ *pulumi.OutputState }

func (AnalysisFilterRelativeDateTimeControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterRelativeDateTimeControl)(nil)).Elem()
}

func (o AnalysisFilterRelativeDateTimeControlOutput) ToAnalysisFilterRelativeDateTimeControlOutput() AnalysisFilterRelativeDateTimeControlOutput {
	return o
}

func (o AnalysisFilterRelativeDateTimeControlOutput) ToAnalysisFilterRelativeDateTimeControlOutputWithContext(ctx context.Context) AnalysisFilterRelativeDateTimeControlOutput {
	return o
}

func (o AnalysisFilterRelativeDateTimeControlOutput) ToAnalysisFilterRelativeDateTimeControlPtrOutput() AnalysisFilterRelativeDateTimeControlPtrOutput {
	return o.ToAnalysisFilterRelativeDateTimeControlPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterRelativeDateTimeControlOutput) ToAnalysisFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) AnalysisFilterRelativeDateTimeControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterRelativeDateTimeControl) *AnalysisFilterRelativeDateTimeControl {
		return &v
	}).(AnalysisFilterRelativeDateTimeControlPtrOutput)
}

func (o AnalysisFilterRelativeDateTimeControlOutput) DisplayOptions() AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilterRelativeDateTimeControl) *AnalysisRelativeDateTimeControlDisplayOptions {
		return v.DisplayOptions
	}).(AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterRelativeDateTimeControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterRelativeDateTimeControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o AnalysisFilterRelativeDateTimeControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterRelativeDateTimeControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o AnalysisFilterRelativeDateTimeControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterRelativeDateTimeControl) string { return v.Title }).(pulumi.StringOutput)
}

type AnalysisFilterRelativeDateTimeControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterRelativeDateTimeControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterRelativeDateTimeControl)(nil)).Elem()
}

func (o AnalysisFilterRelativeDateTimeControlPtrOutput) ToAnalysisFilterRelativeDateTimeControlPtrOutput() AnalysisFilterRelativeDateTimeControlPtrOutput {
	return o
}

func (o AnalysisFilterRelativeDateTimeControlPtrOutput) ToAnalysisFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) AnalysisFilterRelativeDateTimeControlPtrOutput {
	return o
}

func (o AnalysisFilterRelativeDateTimeControlPtrOutput) Elem() AnalysisFilterRelativeDateTimeControlOutput {
	return o.ApplyT(func(v *AnalysisFilterRelativeDateTimeControl) AnalysisFilterRelativeDateTimeControl {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterRelativeDateTimeControl
		return ret
	}).(AnalysisFilterRelativeDateTimeControlOutput)
}

func (o AnalysisFilterRelativeDateTimeControlPtrOutput) DisplayOptions() AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterRelativeDateTimeControl) *AnalysisRelativeDateTimeControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterRelativeDateTimeControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterRelativeDateTimeControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterRelativeDateTimeControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterRelativeDateTimeControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterRelativeDateTimeControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterRelativeDateTimeControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AnalysisFilterScopeConfiguration struct {
	SelectedSheets *AnalysisSelectedSheetsFilterScopeConfiguration `pulumi:"selectedSheets"`
}

// AnalysisFilterScopeConfigurationInput is an input type that accepts AnalysisFilterScopeConfigurationArgs and AnalysisFilterScopeConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFilterScopeConfigurationInput` via:
//
//	AnalysisFilterScopeConfigurationArgs{...}
type AnalysisFilterScopeConfigurationInput interface {
	pulumi.Input

	ToAnalysisFilterScopeConfigurationOutput() AnalysisFilterScopeConfigurationOutput
	ToAnalysisFilterScopeConfigurationOutputWithContext(context.Context) AnalysisFilterScopeConfigurationOutput
}

type AnalysisFilterScopeConfigurationArgs struct {
	SelectedSheets AnalysisSelectedSheetsFilterScopeConfigurationPtrInput `pulumi:"selectedSheets"`
}

func (AnalysisFilterScopeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterScopeConfiguration)(nil)).Elem()
}

func (i AnalysisFilterScopeConfigurationArgs) ToAnalysisFilterScopeConfigurationOutput() AnalysisFilterScopeConfigurationOutput {
	return i.ToAnalysisFilterScopeConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFilterScopeConfigurationArgs) ToAnalysisFilterScopeConfigurationOutputWithContext(ctx context.Context) AnalysisFilterScopeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterScopeConfigurationOutput)
}

type AnalysisFilterScopeConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFilterScopeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterScopeConfiguration)(nil)).Elem()
}

func (o AnalysisFilterScopeConfigurationOutput) ToAnalysisFilterScopeConfigurationOutput() AnalysisFilterScopeConfigurationOutput {
	return o
}

func (o AnalysisFilterScopeConfigurationOutput) ToAnalysisFilterScopeConfigurationOutputWithContext(ctx context.Context) AnalysisFilterScopeConfigurationOutput {
	return o
}

func (o AnalysisFilterScopeConfigurationOutput) SelectedSheets() AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFilterScopeConfiguration) *AnalysisSelectedSheetsFilterScopeConfiguration {
		return v.SelectedSheets
	}).(AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput)
}

type AnalysisFilterSelectableValues struct {
	Values []string `pulumi:"values"`
}

// AnalysisFilterSelectableValuesInput is an input type that accepts AnalysisFilterSelectableValuesArgs and AnalysisFilterSelectableValuesOutput values.
// You can construct a concrete instance of `AnalysisFilterSelectableValuesInput` via:
//
//	AnalysisFilterSelectableValuesArgs{...}
type AnalysisFilterSelectableValuesInput interface {
	pulumi.Input

	ToAnalysisFilterSelectableValuesOutput() AnalysisFilterSelectableValuesOutput
	ToAnalysisFilterSelectableValuesOutputWithContext(context.Context) AnalysisFilterSelectableValuesOutput
}

type AnalysisFilterSelectableValuesArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AnalysisFilterSelectableValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterSelectableValues)(nil)).Elem()
}

func (i AnalysisFilterSelectableValuesArgs) ToAnalysisFilterSelectableValuesOutput() AnalysisFilterSelectableValuesOutput {
	return i.ToAnalysisFilterSelectableValuesOutputWithContext(context.Background())
}

func (i AnalysisFilterSelectableValuesArgs) ToAnalysisFilterSelectableValuesOutputWithContext(ctx context.Context) AnalysisFilterSelectableValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterSelectableValuesOutput)
}

func (i AnalysisFilterSelectableValuesArgs) ToAnalysisFilterSelectableValuesPtrOutput() AnalysisFilterSelectableValuesPtrOutput {
	return i.ToAnalysisFilterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterSelectableValuesArgs) ToAnalysisFilterSelectableValuesPtrOutputWithContext(ctx context.Context) AnalysisFilterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterSelectableValuesOutput).ToAnalysisFilterSelectableValuesPtrOutputWithContext(ctx)
}

// AnalysisFilterSelectableValuesPtrInput is an input type that accepts AnalysisFilterSelectableValuesArgs, AnalysisFilterSelectableValuesPtr and AnalysisFilterSelectableValuesPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterSelectableValuesPtrInput` via:
//
//	        AnalysisFilterSelectableValuesArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterSelectableValuesPtrInput interface {
	pulumi.Input

	ToAnalysisFilterSelectableValuesPtrOutput() AnalysisFilterSelectableValuesPtrOutput
	ToAnalysisFilterSelectableValuesPtrOutputWithContext(context.Context) AnalysisFilterSelectableValuesPtrOutput
}

type analysisFilterSelectableValuesPtrType AnalysisFilterSelectableValuesArgs

func AnalysisFilterSelectableValuesPtr(v *AnalysisFilterSelectableValuesArgs) AnalysisFilterSelectableValuesPtrInput {
	return (*analysisFilterSelectableValuesPtrType)(v)
}

func (*analysisFilterSelectableValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterSelectableValues)(nil)).Elem()
}

func (i *analysisFilterSelectableValuesPtrType) ToAnalysisFilterSelectableValuesPtrOutput() AnalysisFilterSelectableValuesPtrOutput {
	return i.ToAnalysisFilterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i *analysisFilterSelectableValuesPtrType) ToAnalysisFilterSelectableValuesPtrOutputWithContext(ctx context.Context) AnalysisFilterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterSelectableValuesPtrOutput)
}

type AnalysisFilterSelectableValuesOutput struct{ *pulumi.OutputState }

func (AnalysisFilterSelectableValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterSelectableValues)(nil)).Elem()
}

func (o AnalysisFilterSelectableValuesOutput) ToAnalysisFilterSelectableValuesOutput() AnalysisFilterSelectableValuesOutput {
	return o
}

func (o AnalysisFilterSelectableValuesOutput) ToAnalysisFilterSelectableValuesOutputWithContext(ctx context.Context) AnalysisFilterSelectableValuesOutput {
	return o
}

func (o AnalysisFilterSelectableValuesOutput) ToAnalysisFilterSelectableValuesPtrOutput() AnalysisFilterSelectableValuesPtrOutput {
	return o.ToAnalysisFilterSelectableValuesPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterSelectableValuesOutput) ToAnalysisFilterSelectableValuesPtrOutputWithContext(ctx context.Context) AnalysisFilterSelectableValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterSelectableValues) *AnalysisFilterSelectableValues {
		return &v
	}).(AnalysisFilterSelectableValuesPtrOutput)
}

func (o AnalysisFilterSelectableValuesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisFilterSelectableValues) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AnalysisFilterSelectableValuesPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterSelectableValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterSelectableValues)(nil)).Elem()
}

func (o AnalysisFilterSelectableValuesPtrOutput) ToAnalysisFilterSelectableValuesPtrOutput() AnalysisFilterSelectableValuesPtrOutput {
	return o
}

func (o AnalysisFilterSelectableValuesPtrOutput) ToAnalysisFilterSelectableValuesPtrOutputWithContext(ctx context.Context) AnalysisFilterSelectableValuesPtrOutput {
	return o
}

func (o AnalysisFilterSelectableValuesPtrOutput) Elem() AnalysisFilterSelectableValuesOutput {
	return o.ApplyT(func(v *AnalysisFilterSelectableValues) AnalysisFilterSelectableValues {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterSelectableValues
		return ret
	}).(AnalysisFilterSelectableValuesOutput)
}

func (o AnalysisFilterSelectableValuesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisFilterSelectableValues) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type AnalysisFilterSliderControl struct {
	DisplayOptions  *AnalysisSliderControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                               `pulumi:"filterControlId"`
	MaximumValue    float64                              `pulumi:"maximumValue"`
	MinimumValue    float64                              `pulumi:"minimumValue"`
	SourceFilterId  string                               `pulumi:"sourceFilterId"`
	StepSize        float64                              `pulumi:"stepSize"`
	Title           string                               `pulumi:"title"`
	Type            *AnalysisSheetControlSliderType      `pulumi:"type"`
}

// AnalysisFilterSliderControlInput is an input type that accepts AnalysisFilterSliderControlArgs and AnalysisFilterSliderControlOutput values.
// You can construct a concrete instance of `AnalysisFilterSliderControlInput` via:
//
//	AnalysisFilterSliderControlArgs{...}
type AnalysisFilterSliderControlInput interface {
	pulumi.Input

	ToAnalysisFilterSliderControlOutput() AnalysisFilterSliderControlOutput
	ToAnalysisFilterSliderControlOutputWithContext(context.Context) AnalysisFilterSliderControlOutput
}

type AnalysisFilterSliderControlArgs struct {
	DisplayOptions  AnalysisSliderControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                          `pulumi:"filterControlId"`
	MaximumValue    pulumi.Float64Input                         `pulumi:"maximumValue"`
	MinimumValue    pulumi.Float64Input                         `pulumi:"minimumValue"`
	SourceFilterId  pulumi.StringInput                          `pulumi:"sourceFilterId"`
	StepSize        pulumi.Float64Input                         `pulumi:"stepSize"`
	Title           pulumi.StringInput                          `pulumi:"title"`
	Type            AnalysisSheetControlSliderTypePtrInput      `pulumi:"type"`
}

func (AnalysisFilterSliderControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterSliderControl)(nil)).Elem()
}

func (i AnalysisFilterSliderControlArgs) ToAnalysisFilterSliderControlOutput() AnalysisFilterSliderControlOutput {
	return i.ToAnalysisFilterSliderControlOutputWithContext(context.Background())
}

func (i AnalysisFilterSliderControlArgs) ToAnalysisFilterSliderControlOutputWithContext(ctx context.Context) AnalysisFilterSliderControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterSliderControlOutput)
}

func (i AnalysisFilterSliderControlArgs) ToAnalysisFilterSliderControlPtrOutput() AnalysisFilterSliderControlPtrOutput {
	return i.ToAnalysisFilterSliderControlPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterSliderControlArgs) ToAnalysisFilterSliderControlPtrOutputWithContext(ctx context.Context) AnalysisFilterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterSliderControlOutput).ToAnalysisFilterSliderControlPtrOutputWithContext(ctx)
}

// AnalysisFilterSliderControlPtrInput is an input type that accepts AnalysisFilterSliderControlArgs, AnalysisFilterSliderControlPtr and AnalysisFilterSliderControlPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterSliderControlPtrInput` via:
//
//	        AnalysisFilterSliderControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterSliderControlPtrInput interface {
	pulumi.Input

	ToAnalysisFilterSliderControlPtrOutput() AnalysisFilterSliderControlPtrOutput
	ToAnalysisFilterSliderControlPtrOutputWithContext(context.Context) AnalysisFilterSliderControlPtrOutput
}

type analysisFilterSliderControlPtrType AnalysisFilterSliderControlArgs

func AnalysisFilterSliderControlPtr(v *AnalysisFilterSliderControlArgs) AnalysisFilterSliderControlPtrInput {
	return (*analysisFilterSliderControlPtrType)(v)
}

func (*analysisFilterSliderControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterSliderControl)(nil)).Elem()
}

func (i *analysisFilterSliderControlPtrType) ToAnalysisFilterSliderControlPtrOutput() AnalysisFilterSliderControlPtrOutput {
	return i.ToAnalysisFilterSliderControlPtrOutputWithContext(context.Background())
}

func (i *analysisFilterSliderControlPtrType) ToAnalysisFilterSliderControlPtrOutputWithContext(ctx context.Context) AnalysisFilterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterSliderControlPtrOutput)
}

type AnalysisFilterSliderControlOutput struct{ *pulumi.OutputState }

func (AnalysisFilterSliderControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterSliderControl)(nil)).Elem()
}

func (o AnalysisFilterSliderControlOutput) ToAnalysisFilterSliderControlOutput() AnalysisFilterSliderControlOutput {
	return o
}

func (o AnalysisFilterSliderControlOutput) ToAnalysisFilterSliderControlOutputWithContext(ctx context.Context) AnalysisFilterSliderControlOutput {
	return o
}

func (o AnalysisFilterSliderControlOutput) ToAnalysisFilterSliderControlPtrOutput() AnalysisFilterSliderControlPtrOutput {
	return o.ToAnalysisFilterSliderControlPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterSliderControlOutput) ToAnalysisFilterSliderControlPtrOutputWithContext(ctx context.Context) AnalysisFilterSliderControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterSliderControl) *AnalysisFilterSliderControl {
		return &v
	}).(AnalysisFilterSliderControlPtrOutput)
}

func (o AnalysisFilterSliderControlOutput) DisplayOptions() AnalysisSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilterSliderControl) *AnalysisSliderControlDisplayOptions { return v.DisplayOptions }).(AnalysisSliderControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterSliderControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterSliderControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o AnalysisFilterSliderControlOutput) MaximumValue() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisFilterSliderControl) float64 { return v.MaximumValue }).(pulumi.Float64Output)
}

func (o AnalysisFilterSliderControlOutput) MinimumValue() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisFilterSliderControl) float64 { return v.MinimumValue }).(pulumi.Float64Output)
}

func (o AnalysisFilterSliderControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterSliderControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o AnalysisFilterSliderControlOutput) StepSize() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisFilterSliderControl) float64 { return v.StepSize }).(pulumi.Float64Output)
}

func (o AnalysisFilterSliderControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterSliderControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o AnalysisFilterSliderControlOutput) Type() AnalysisSheetControlSliderTypePtrOutput {
	return o.ApplyT(func(v AnalysisFilterSliderControl) *AnalysisSheetControlSliderType { return v.Type }).(AnalysisSheetControlSliderTypePtrOutput)
}

type AnalysisFilterSliderControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterSliderControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterSliderControl)(nil)).Elem()
}

func (o AnalysisFilterSliderControlPtrOutput) ToAnalysisFilterSliderControlPtrOutput() AnalysisFilterSliderControlPtrOutput {
	return o
}

func (o AnalysisFilterSliderControlPtrOutput) ToAnalysisFilterSliderControlPtrOutputWithContext(ctx context.Context) AnalysisFilterSliderControlPtrOutput {
	return o
}

func (o AnalysisFilterSliderControlPtrOutput) Elem() AnalysisFilterSliderControlOutput {
	return o.ApplyT(func(v *AnalysisFilterSliderControl) AnalysisFilterSliderControl {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterSliderControl
		return ret
	}).(AnalysisFilterSliderControlOutput)
}

func (o AnalysisFilterSliderControlPtrOutput) DisplayOptions() AnalysisSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterSliderControl) *AnalysisSliderControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisSliderControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterSliderControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterSliderControlPtrOutput) MaximumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisFilterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaximumValue
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisFilterSliderControlPtrOutput) MinimumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisFilterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinimumValue
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisFilterSliderControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterSliderControlPtrOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisFilterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.StepSize
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisFilterSliderControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterSliderControlPtrOutput) Type() AnalysisSheetControlSliderTypePtrOutput {
	return o.ApplyT(func(v *AnalysisFilterSliderControl) *AnalysisSheetControlSliderType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AnalysisSheetControlSliderTypePtrOutput)
}

type AnalysisFilterTextAreaControl struct {
	Delimiter       *string                                `pulumi:"delimiter"`
	DisplayOptions  *AnalysisTextAreaControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                 `pulumi:"filterControlId"`
	SourceFilterId  string                                 `pulumi:"sourceFilterId"`
	Title           string                                 `pulumi:"title"`
}

// AnalysisFilterTextAreaControlInput is an input type that accepts AnalysisFilterTextAreaControlArgs and AnalysisFilterTextAreaControlOutput values.
// You can construct a concrete instance of `AnalysisFilterTextAreaControlInput` via:
//
//	AnalysisFilterTextAreaControlArgs{...}
type AnalysisFilterTextAreaControlInput interface {
	pulumi.Input

	ToAnalysisFilterTextAreaControlOutput() AnalysisFilterTextAreaControlOutput
	ToAnalysisFilterTextAreaControlOutputWithContext(context.Context) AnalysisFilterTextAreaControlOutput
}

type AnalysisFilterTextAreaControlArgs struct {
	Delimiter       pulumi.StringPtrInput                         `pulumi:"delimiter"`
	DisplayOptions  AnalysisTextAreaControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                            `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                            `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                            `pulumi:"title"`
}

func (AnalysisFilterTextAreaControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterTextAreaControl)(nil)).Elem()
}

func (i AnalysisFilterTextAreaControlArgs) ToAnalysisFilterTextAreaControlOutput() AnalysisFilterTextAreaControlOutput {
	return i.ToAnalysisFilterTextAreaControlOutputWithContext(context.Background())
}

func (i AnalysisFilterTextAreaControlArgs) ToAnalysisFilterTextAreaControlOutputWithContext(ctx context.Context) AnalysisFilterTextAreaControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterTextAreaControlOutput)
}

func (i AnalysisFilterTextAreaControlArgs) ToAnalysisFilterTextAreaControlPtrOutput() AnalysisFilterTextAreaControlPtrOutput {
	return i.ToAnalysisFilterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterTextAreaControlArgs) ToAnalysisFilterTextAreaControlPtrOutputWithContext(ctx context.Context) AnalysisFilterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterTextAreaControlOutput).ToAnalysisFilterTextAreaControlPtrOutputWithContext(ctx)
}

// AnalysisFilterTextAreaControlPtrInput is an input type that accepts AnalysisFilterTextAreaControlArgs, AnalysisFilterTextAreaControlPtr and AnalysisFilterTextAreaControlPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterTextAreaControlPtrInput` via:
//
//	        AnalysisFilterTextAreaControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterTextAreaControlPtrInput interface {
	pulumi.Input

	ToAnalysisFilterTextAreaControlPtrOutput() AnalysisFilterTextAreaControlPtrOutput
	ToAnalysisFilterTextAreaControlPtrOutputWithContext(context.Context) AnalysisFilterTextAreaControlPtrOutput
}

type analysisFilterTextAreaControlPtrType AnalysisFilterTextAreaControlArgs

func AnalysisFilterTextAreaControlPtr(v *AnalysisFilterTextAreaControlArgs) AnalysisFilterTextAreaControlPtrInput {
	return (*analysisFilterTextAreaControlPtrType)(v)
}

func (*analysisFilterTextAreaControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterTextAreaControl)(nil)).Elem()
}

func (i *analysisFilterTextAreaControlPtrType) ToAnalysisFilterTextAreaControlPtrOutput() AnalysisFilterTextAreaControlPtrOutput {
	return i.ToAnalysisFilterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i *analysisFilterTextAreaControlPtrType) ToAnalysisFilterTextAreaControlPtrOutputWithContext(ctx context.Context) AnalysisFilterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterTextAreaControlPtrOutput)
}

type AnalysisFilterTextAreaControlOutput struct{ *pulumi.OutputState }

func (AnalysisFilterTextAreaControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterTextAreaControl)(nil)).Elem()
}

func (o AnalysisFilterTextAreaControlOutput) ToAnalysisFilterTextAreaControlOutput() AnalysisFilterTextAreaControlOutput {
	return o
}

func (o AnalysisFilterTextAreaControlOutput) ToAnalysisFilterTextAreaControlOutputWithContext(ctx context.Context) AnalysisFilterTextAreaControlOutput {
	return o
}

func (o AnalysisFilterTextAreaControlOutput) ToAnalysisFilterTextAreaControlPtrOutput() AnalysisFilterTextAreaControlPtrOutput {
	return o.ToAnalysisFilterTextAreaControlPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterTextAreaControlOutput) ToAnalysisFilterTextAreaControlPtrOutputWithContext(ctx context.Context) AnalysisFilterTextAreaControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterTextAreaControl) *AnalysisFilterTextAreaControl {
		return &v
	}).(AnalysisFilterTextAreaControlPtrOutput)
}

func (o AnalysisFilterTextAreaControlOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisFilterTextAreaControl) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterTextAreaControlOutput) DisplayOptions() AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilterTextAreaControl) *AnalysisTextAreaControlDisplayOptions { return v.DisplayOptions }).(AnalysisTextAreaControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterTextAreaControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterTextAreaControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o AnalysisFilterTextAreaControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterTextAreaControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o AnalysisFilterTextAreaControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterTextAreaControl) string { return v.Title }).(pulumi.StringOutput)
}

type AnalysisFilterTextAreaControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterTextAreaControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterTextAreaControl)(nil)).Elem()
}

func (o AnalysisFilterTextAreaControlPtrOutput) ToAnalysisFilterTextAreaControlPtrOutput() AnalysisFilterTextAreaControlPtrOutput {
	return o
}

func (o AnalysisFilterTextAreaControlPtrOutput) ToAnalysisFilterTextAreaControlPtrOutputWithContext(ctx context.Context) AnalysisFilterTextAreaControlPtrOutput {
	return o
}

func (o AnalysisFilterTextAreaControlPtrOutput) Elem() AnalysisFilterTextAreaControlOutput {
	return o.ApplyT(func(v *AnalysisFilterTextAreaControl) AnalysisFilterTextAreaControl {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterTextAreaControl
		return ret
	}).(AnalysisFilterTextAreaControlOutput)
}

func (o AnalysisFilterTextAreaControlPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterTextAreaControlPtrOutput) DisplayOptions() AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterTextAreaControl) *AnalysisTextAreaControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisTextAreaControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterTextAreaControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterTextAreaControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterTextAreaControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AnalysisFilterTextFieldControl struct {
	DisplayOptions  *AnalysisTextFieldControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                  `pulumi:"filterControlId"`
	SourceFilterId  string                                  `pulumi:"sourceFilterId"`
	Title           string                                  `pulumi:"title"`
}

// AnalysisFilterTextFieldControlInput is an input type that accepts AnalysisFilterTextFieldControlArgs and AnalysisFilterTextFieldControlOutput values.
// You can construct a concrete instance of `AnalysisFilterTextFieldControlInput` via:
//
//	AnalysisFilterTextFieldControlArgs{...}
type AnalysisFilterTextFieldControlInput interface {
	pulumi.Input

	ToAnalysisFilterTextFieldControlOutput() AnalysisFilterTextFieldControlOutput
	ToAnalysisFilterTextFieldControlOutputWithContext(context.Context) AnalysisFilterTextFieldControlOutput
}

type AnalysisFilterTextFieldControlArgs struct {
	DisplayOptions  AnalysisTextFieldControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                             `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                             `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                             `pulumi:"title"`
}

func (AnalysisFilterTextFieldControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterTextFieldControl)(nil)).Elem()
}

func (i AnalysisFilterTextFieldControlArgs) ToAnalysisFilterTextFieldControlOutput() AnalysisFilterTextFieldControlOutput {
	return i.ToAnalysisFilterTextFieldControlOutputWithContext(context.Background())
}

func (i AnalysisFilterTextFieldControlArgs) ToAnalysisFilterTextFieldControlOutputWithContext(ctx context.Context) AnalysisFilterTextFieldControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterTextFieldControlOutput)
}

func (i AnalysisFilterTextFieldControlArgs) ToAnalysisFilterTextFieldControlPtrOutput() AnalysisFilterTextFieldControlPtrOutput {
	return i.ToAnalysisFilterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i AnalysisFilterTextFieldControlArgs) ToAnalysisFilterTextFieldControlPtrOutputWithContext(ctx context.Context) AnalysisFilterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterTextFieldControlOutput).ToAnalysisFilterTextFieldControlPtrOutputWithContext(ctx)
}

// AnalysisFilterTextFieldControlPtrInput is an input type that accepts AnalysisFilterTextFieldControlArgs, AnalysisFilterTextFieldControlPtr and AnalysisFilterTextFieldControlPtrOutput values.
// You can construct a concrete instance of `AnalysisFilterTextFieldControlPtrInput` via:
//
//	        AnalysisFilterTextFieldControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisFilterTextFieldControlPtrInput interface {
	pulumi.Input

	ToAnalysisFilterTextFieldControlPtrOutput() AnalysisFilterTextFieldControlPtrOutput
	ToAnalysisFilterTextFieldControlPtrOutputWithContext(context.Context) AnalysisFilterTextFieldControlPtrOutput
}

type analysisFilterTextFieldControlPtrType AnalysisFilterTextFieldControlArgs

func AnalysisFilterTextFieldControlPtr(v *AnalysisFilterTextFieldControlArgs) AnalysisFilterTextFieldControlPtrInput {
	return (*analysisFilterTextFieldControlPtrType)(v)
}

func (*analysisFilterTextFieldControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterTextFieldControl)(nil)).Elem()
}

func (i *analysisFilterTextFieldControlPtrType) ToAnalysisFilterTextFieldControlPtrOutput() AnalysisFilterTextFieldControlPtrOutput {
	return i.ToAnalysisFilterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i *analysisFilterTextFieldControlPtrType) ToAnalysisFilterTextFieldControlPtrOutputWithContext(ctx context.Context) AnalysisFilterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFilterTextFieldControlPtrOutput)
}

type AnalysisFilterTextFieldControlOutput struct{ *pulumi.OutputState }

func (AnalysisFilterTextFieldControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterTextFieldControl)(nil)).Elem()
}

func (o AnalysisFilterTextFieldControlOutput) ToAnalysisFilterTextFieldControlOutput() AnalysisFilterTextFieldControlOutput {
	return o
}

func (o AnalysisFilterTextFieldControlOutput) ToAnalysisFilterTextFieldControlOutputWithContext(ctx context.Context) AnalysisFilterTextFieldControlOutput {
	return o
}

func (o AnalysisFilterTextFieldControlOutput) ToAnalysisFilterTextFieldControlPtrOutput() AnalysisFilterTextFieldControlPtrOutput {
	return o.ToAnalysisFilterTextFieldControlPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterTextFieldControlOutput) ToAnalysisFilterTextFieldControlPtrOutputWithContext(ctx context.Context) AnalysisFilterTextFieldControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterTextFieldControl) *AnalysisFilterTextFieldControl {
		return &v
	}).(AnalysisFilterTextFieldControlPtrOutput)
}

func (o AnalysisFilterTextFieldControlOutput) DisplayOptions() AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFilterTextFieldControl) *AnalysisTextFieldControlDisplayOptions {
		return v.DisplayOptions
	}).(AnalysisTextFieldControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterTextFieldControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterTextFieldControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o AnalysisFilterTextFieldControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterTextFieldControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o AnalysisFilterTextFieldControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFilterTextFieldControl) string { return v.Title }).(pulumi.StringOutput)
}

type AnalysisFilterTextFieldControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterTextFieldControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterTextFieldControl)(nil)).Elem()
}

func (o AnalysisFilterTextFieldControlPtrOutput) ToAnalysisFilterTextFieldControlPtrOutput() AnalysisFilterTextFieldControlPtrOutput {
	return o
}

func (o AnalysisFilterTextFieldControlPtrOutput) ToAnalysisFilterTextFieldControlPtrOutputWithContext(ctx context.Context) AnalysisFilterTextFieldControlPtrOutput {
	return o
}

func (o AnalysisFilterTextFieldControlPtrOutput) Elem() AnalysisFilterTextFieldControlOutput {
	return o.ApplyT(func(v *AnalysisFilterTextFieldControl) AnalysisFilterTextFieldControl {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterTextFieldControl
		return ret
	}).(AnalysisFilterTextFieldControlOutput)
}

func (o AnalysisFilterTextFieldControlPtrOutput) DisplayOptions() AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterTextFieldControl) *AnalysisTextFieldControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisTextFieldControlDisplayOptionsPtrOutput)
}

func (o AnalysisFilterTextFieldControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterTextFieldControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFilterTextFieldControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFilterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AnalysisFontConfiguration struct {
	FontColor      *string                 `pulumi:"fontColor"`
	FontDecoration *AnalysisFontDecoration `pulumi:"fontDecoration"`
	FontSize       *AnalysisFontSize       `pulumi:"fontSize"`
	FontStyle      *AnalysisFontStyle      `pulumi:"fontStyle"`
	FontWeight     *AnalysisFontWeight     `pulumi:"fontWeight"`
}

// AnalysisFontConfigurationInput is an input type that accepts AnalysisFontConfigurationArgs and AnalysisFontConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFontConfigurationInput` via:
//
//	AnalysisFontConfigurationArgs{...}
type AnalysisFontConfigurationInput interface {
	pulumi.Input

	ToAnalysisFontConfigurationOutput() AnalysisFontConfigurationOutput
	ToAnalysisFontConfigurationOutputWithContext(context.Context) AnalysisFontConfigurationOutput
}

type AnalysisFontConfigurationArgs struct {
	FontColor      pulumi.StringPtrInput          `pulumi:"fontColor"`
	FontDecoration AnalysisFontDecorationPtrInput `pulumi:"fontDecoration"`
	FontSize       AnalysisFontSizePtrInput       `pulumi:"fontSize"`
	FontStyle      AnalysisFontStylePtrInput      `pulumi:"fontStyle"`
	FontWeight     AnalysisFontWeightPtrInput     `pulumi:"fontWeight"`
}

func (AnalysisFontConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontConfiguration)(nil)).Elem()
}

func (i AnalysisFontConfigurationArgs) ToAnalysisFontConfigurationOutput() AnalysisFontConfigurationOutput {
	return i.ToAnalysisFontConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFontConfigurationArgs) ToAnalysisFontConfigurationOutputWithContext(ctx context.Context) AnalysisFontConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFontConfigurationOutput)
}

func (i AnalysisFontConfigurationArgs) ToAnalysisFontConfigurationPtrOutput() AnalysisFontConfigurationPtrOutput {
	return i.ToAnalysisFontConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFontConfigurationArgs) ToAnalysisFontConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFontConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFontConfigurationOutput).ToAnalysisFontConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFontConfigurationPtrInput is an input type that accepts AnalysisFontConfigurationArgs, AnalysisFontConfigurationPtr and AnalysisFontConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFontConfigurationPtrInput` via:
//
//	        AnalysisFontConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFontConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFontConfigurationPtrOutput() AnalysisFontConfigurationPtrOutput
	ToAnalysisFontConfigurationPtrOutputWithContext(context.Context) AnalysisFontConfigurationPtrOutput
}

type analysisFontConfigurationPtrType AnalysisFontConfigurationArgs

func AnalysisFontConfigurationPtr(v *AnalysisFontConfigurationArgs) AnalysisFontConfigurationPtrInput {
	return (*analysisFontConfigurationPtrType)(v)
}

func (*analysisFontConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFontConfiguration)(nil)).Elem()
}

func (i *analysisFontConfigurationPtrType) ToAnalysisFontConfigurationPtrOutput() AnalysisFontConfigurationPtrOutput {
	return i.ToAnalysisFontConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFontConfigurationPtrType) ToAnalysisFontConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFontConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFontConfigurationPtrOutput)
}

type AnalysisFontConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFontConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontConfiguration)(nil)).Elem()
}

func (o AnalysisFontConfigurationOutput) ToAnalysisFontConfigurationOutput() AnalysisFontConfigurationOutput {
	return o
}

func (o AnalysisFontConfigurationOutput) ToAnalysisFontConfigurationOutputWithContext(ctx context.Context) AnalysisFontConfigurationOutput {
	return o
}

func (o AnalysisFontConfigurationOutput) ToAnalysisFontConfigurationPtrOutput() AnalysisFontConfigurationPtrOutput {
	return o.ToAnalysisFontConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFontConfigurationOutput) ToAnalysisFontConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFontConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFontConfiguration) *AnalysisFontConfiguration {
		return &v
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisFontConfigurationOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisFontConfiguration) *string { return v.FontColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisFontConfigurationOutput) FontDecoration() AnalysisFontDecorationPtrOutput {
	return o.ApplyT(func(v AnalysisFontConfiguration) *AnalysisFontDecoration { return v.FontDecoration }).(AnalysisFontDecorationPtrOutput)
}

func (o AnalysisFontConfigurationOutput) FontSize() AnalysisFontSizePtrOutput {
	return o.ApplyT(func(v AnalysisFontConfiguration) *AnalysisFontSize { return v.FontSize }).(AnalysisFontSizePtrOutput)
}

func (o AnalysisFontConfigurationOutput) FontStyle() AnalysisFontStylePtrOutput {
	return o.ApplyT(func(v AnalysisFontConfiguration) *AnalysisFontStyle { return v.FontStyle }).(AnalysisFontStylePtrOutput)
}

func (o AnalysisFontConfigurationOutput) FontWeight() AnalysisFontWeightPtrOutput {
	return o.ApplyT(func(v AnalysisFontConfiguration) *AnalysisFontWeight { return v.FontWeight }).(AnalysisFontWeightPtrOutput)
}

type AnalysisFontConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFontConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFontConfiguration)(nil)).Elem()
}

func (o AnalysisFontConfigurationPtrOutput) ToAnalysisFontConfigurationPtrOutput() AnalysisFontConfigurationPtrOutput {
	return o
}

func (o AnalysisFontConfigurationPtrOutput) ToAnalysisFontConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFontConfigurationPtrOutput {
	return o
}

func (o AnalysisFontConfigurationPtrOutput) Elem() AnalysisFontConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFontConfiguration) AnalysisFontConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFontConfiguration
		return ret
	}).(AnalysisFontConfigurationOutput)
}

func (o AnalysisFontConfigurationPtrOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFontConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FontColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFontConfigurationPtrOutput) FontDecoration() AnalysisFontDecorationPtrOutput {
	return o.ApplyT(func(v *AnalysisFontConfiguration) *AnalysisFontDecoration {
		if v == nil {
			return nil
		}
		return v.FontDecoration
	}).(AnalysisFontDecorationPtrOutput)
}

func (o AnalysisFontConfigurationPtrOutput) FontSize() AnalysisFontSizePtrOutput {
	return o.ApplyT(func(v *AnalysisFontConfiguration) *AnalysisFontSize {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(AnalysisFontSizePtrOutput)
}

func (o AnalysisFontConfigurationPtrOutput) FontStyle() AnalysisFontStylePtrOutput {
	return o.ApplyT(func(v *AnalysisFontConfiguration) *AnalysisFontStyle {
		if v == nil {
			return nil
		}
		return v.FontStyle
	}).(AnalysisFontStylePtrOutput)
}

func (o AnalysisFontConfigurationPtrOutput) FontWeight() AnalysisFontWeightPtrOutput {
	return o.ApplyT(func(v *AnalysisFontConfiguration) *AnalysisFontWeight {
		if v == nil {
			return nil
		}
		return v.FontWeight
	}).(AnalysisFontWeightPtrOutput)
}

type AnalysisFontSize struct {
	Relative *AnalysisRelativeFontSize `pulumi:"relative"`
}

// AnalysisFontSizeInput is an input type that accepts AnalysisFontSizeArgs and AnalysisFontSizeOutput values.
// You can construct a concrete instance of `AnalysisFontSizeInput` via:
//
//	AnalysisFontSizeArgs{...}
type AnalysisFontSizeInput interface {
	pulumi.Input

	ToAnalysisFontSizeOutput() AnalysisFontSizeOutput
	ToAnalysisFontSizeOutputWithContext(context.Context) AnalysisFontSizeOutput
}

type AnalysisFontSizeArgs struct {
	Relative AnalysisRelativeFontSizePtrInput `pulumi:"relative"`
}

func (AnalysisFontSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontSize)(nil)).Elem()
}

func (i AnalysisFontSizeArgs) ToAnalysisFontSizeOutput() AnalysisFontSizeOutput {
	return i.ToAnalysisFontSizeOutputWithContext(context.Background())
}

func (i AnalysisFontSizeArgs) ToAnalysisFontSizeOutputWithContext(ctx context.Context) AnalysisFontSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFontSizeOutput)
}

func (i AnalysisFontSizeArgs) ToAnalysisFontSizePtrOutput() AnalysisFontSizePtrOutput {
	return i.ToAnalysisFontSizePtrOutputWithContext(context.Background())
}

func (i AnalysisFontSizeArgs) ToAnalysisFontSizePtrOutputWithContext(ctx context.Context) AnalysisFontSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFontSizeOutput).ToAnalysisFontSizePtrOutputWithContext(ctx)
}

// AnalysisFontSizePtrInput is an input type that accepts AnalysisFontSizeArgs, AnalysisFontSizePtr and AnalysisFontSizePtrOutput values.
// You can construct a concrete instance of `AnalysisFontSizePtrInput` via:
//
//	        AnalysisFontSizeArgs{...}
//
//	or:
//
//	        nil
type AnalysisFontSizePtrInput interface {
	pulumi.Input

	ToAnalysisFontSizePtrOutput() AnalysisFontSizePtrOutput
	ToAnalysisFontSizePtrOutputWithContext(context.Context) AnalysisFontSizePtrOutput
}

type analysisFontSizePtrType AnalysisFontSizeArgs

func AnalysisFontSizePtr(v *AnalysisFontSizeArgs) AnalysisFontSizePtrInput {
	return (*analysisFontSizePtrType)(v)
}

func (*analysisFontSizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFontSize)(nil)).Elem()
}

func (i *analysisFontSizePtrType) ToAnalysisFontSizePtrOutput() AnalysisFontSizePtrOutput {
	return i.ToAnalysisFontSizePtrOutputWithContext(context.Background())
}

func (i *analysisFontSizePtrType) ToAnalysisFontSizePtrOutputWithContext(ctx context.Context) AnalysisFontSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFontSizePtrOutput)
}

type AnalysisFontSizeOutput struct{ *pulumi.OutputState }

func (AnalysisFontSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontSize)(nil)).Elem()
}

func (o AnalysisFontSizeOutput) ToAnalysisFontSizeOutput() AnalysisFontSizeOutput {
	return o
}

func (o AnalysisFontSizeOutput) ToAnalysisFontSizeOutputWithContext(ctx context.Context) AnalysisFontSizeOutput {
	return o
}

func (o AnalysisFontSizeOutput) ToAnalysisFontSizePtrOutput() AnalysisFontSizePtrOutput {
	return o.ToAnalysisFontSizePtrOutputWithContext(context.Background())
}

func (o AnalysisFontSizeOutput) ToAnalysisFontSizePtrOutputWithContext(ctx context.Context) AnalysisFontSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFontSize) *AnalysisFontSize {
		return &v
	}).(AnalysisFontSizePtrOutput)
}

func (o AnalysisFontSizeOutput) Relative() AnalysisRelativeFontSizePtrOutput {
	return o.ApplyT(func(v AnalysisFontSize) *AnalysisRelativeFontSize { return v.Relative }).(AnalysisRelativeFontSizePtrOutput)
}

type AnalysisFontSizePtrOutput struct{ *pulumi.OutputState }

func (AnalysisFontSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFontSize)(nil)).Elem()
}

func (o AnalysisFontSizePtrOutput) ToAnalysisFontSizePtrOutput() AnalysisFontSizePtrOutput {
	return o
}

func (o AnalysisFontSizePtrOutput) ToAnalysisFontSizePtrOutputWithContext(ctx context.Context) AnalysisFontSizePtrOutput {
	return o
}

func (o AnalysisFontSizePtrOutput) Elem() AnalysisFontSizeOutput {
	return o.ApplyT(func(v *AnalysisFontSize) AnalysisFontSize {
		if v != nil {
			return *v
		}
		var ret AnalysisFontSize
		return ret
	}).(AnalysisFontSizeOutput)
}

func (o AnalysisFontSizePtrOutput) Relative() AnalysisRelativeFontSizePtrOutput {
	return o.ApplyT(func(v *AnalysisFontSize) *AnalysisRelativeFontSize {
		if v == nil {
			return nil
		}
		return v.Relative
	}).(AnalysisRelativeFontSizePtrOutput)
}

type AnalysisFontWeight struct {
	Name *AnalysisFontWeightName `pulumi:"name"`
}

// AnalysisFontWeightInput is an input type that accepts AnalysisFontWeightArgs and AnalysisFontWeightOutput values.
// You can construct a concrete instance of `AnalysisFontWeightInput` via:
//
//	AnalysisFontWeightArgs{...}
type AnalysisFontWeightInput interface {
	pulumi.Input

	ToAnalysisFontWeightOutput() AnalysisFontWeightOutput
	ToAnalysisFontWeightOutputWithContext(context.Context) AnalysisFontWeightOutput
}

type AnalysisFontWeightArgs struct {
	Name AnalysisFontWeightNamePtrInput `pulumi:"name"`
}

func (AnalysisFontWeightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontWeight)(nil)).Elem()
}

func (i AnalysisFontWeightArgs) ToAnalysisFontWeightOutput() AnalysisFontWeightOutput {
	return i.ToAnalysisFontWeightOutputWithContext(context.Background())
}

func (i AnalysisFontWeightArgs) ToAnalysisFontWeightOutputWithContext(ctx context.Context) AnalysisFontWeightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFontWeightOutput)
}

func (i AnalysisFontWeightArgs) ToAnalysisFontWeightPtrOutput() AnalysisFontWeightPtrOutput {
	return i.ToAnalysisFontWeightPtrOutputWithContext(context.Background())
}

func (i AnalysisFontWeightArgs) ToAnalysisFontWeightPtrOutputWithContext(ctx context.Context) AnalysisFontWeightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFontWeightOutput).ToAnalysisFontWeightPtrOutputWithContext(ctx)
}

// AnalysisFontWeightPtrInput is an input type that accepts AnalysisFontWeightArgs, AnalysisFontWeightPtr and AnalysisFontWeightPtrOutput values.
// You can construct a concrete instance of `AnalysisFontWeightPtrInput` via:
//
//	        AnalysisFontWeightArgs{...}
//
//	or:
//
//	        nil
type AnalysisFontWeightPtrInput interface {
	pulumi.Input

	ToAnalysisFontWeightPtrOutput() AnalysisFontWeightPtrOutput
	ToAnalysisFontWeightPtrOutputWithContext(context.Context) AnalysisFontWeightPtrOutput
}

type analysisFontWeightPtrType AnalysisFontWeightArgs

func AnalysisFontWeightPtr(v *AnalysisFontWeightArgs) AnalysisFontWeightPtrInput {
	return (*analysisFontWeightPtrType)(v)
}

func (*analysisFontWeightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFontWeight)(nil)).Elem()
}

func (i *analysisFontWeightPtrType) ToAnalysisFontWeightPtrOutput() AnalysisFontWeightPtrOutput {
	return i.ToAnalysisFontWeightPtrOutputWithContext(context.Background())
}

func (i *analysisFontWeightPtrType) ToAnalysisFontWeightPtrOutputWithContext(ctx context.Context) AnalysisFontWeightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFontWeightPtrOutput)
}

type AnalysisFontWeightOutput struct{ *pulumi.OutputState }

func (AnalysisFontWeightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontWeight)(nil)).Elem()
}

func (o AnalysisFontWeightOutput) ToAnalysisFontWeightOutput() AnalysisFontWeightOutput {
	return o
}

func (o AnalysisFontWeightOutput) ToAnalysisFontWeightOutputWithContext(ctx context.Context) AnalysisFontWeightOutput {
	return o
}

func (o AnalysisFontWeightOutput) ToAnalysisFontWeightPtrOutput() AnalysisFontWeightPtrOutput {
	return o.ToAnalysisFontWeightPtrOutputWithContext(context.Background())
}

func (o AnalysisFontWeightOutput) ToAnalysisFontWeightPtrOutputWithContext(ctx context.Context) AnalysisFontWeightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFontWeight) *AnalysisFontWeight {
		return &v
	}).(AnalysisFontWeightPtrOutput)
}

func (o AnalysisFontWeightOutput) Name() AnalysisFontWeightNamePtrOutput {
	return o.ApplyT(func(v AnalysisFontWeight) *AnalysisFontWeightName { return v.Name }).(AnalysisFontWeightNamePtrOutput)
}

type AnalysisFontWeightPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFontWeightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFontWeight)(nil)).Elem()
}

func (o AnalysisFontWeightPtrOutput) ToAnalysisFontWeightPtrOutput() AnalysisFontWeightPtrOutput {
	return o
}

func (o AnalysisFontWeightPtrOutput) ToAnalysisFontWeightPtrOutputWithContext(ctx context.Context) AnalysisFontWeightPtrOutput {
	return o
}

func (o AnalysisFontWeightPtrOutput) Elem() AnalysisFontWeightOutput {
	return o.ApplyT(func(v *AnalysisFontWeight) AnalysisFontWeight {
		if v != nil {
			return *v
		}
		var ret AnalysisFontWeight
		return ret
	}).(AnalysisFontWeightOutput)
}

func (o AnalysisFontWeightPtrOutput) Name() AnalysisFontWeightNamePtrOutput {
	return o.ApplyT(func(v *AnalysisFontWeight) *AnalysisFontWeightName {
		if v == nil {
			return nil
		}
		return v.Name
	}).(AnalysisFontWeightNamePtrOutput)
}

type AnalysisForecastComputation struct {
	ComputationId          string                                  `pulumi:"computationId"`
	CustomSeasonalityValue *float64                                `pulumi:"customSeasonalityValue"`
	LowerBoundary          *float64                                `pulumi:"lowerBoundary"`
	Name                   *string                                 `pulumi:"name"`
	PeriodsBackward        *float64                                `pulumi:"periodsBackward"`
	PeriodsForward         *float64                                `pulumi:"periodsForward"`
	PredictionInterval     *float64                                `pulumi:"predictionInterval"`
	Seasonality            *AnalysisForecastComputationSeasonality `pulumi:"seasonality"`
	Time                   AnalysisDimensionField                  `pulumi:"time"`
	UpperBoundary          *float64                                `pulumi:"upperBoundary"`
	Value                  *AnalysisMeasureField                   `pulumi:"value"`
}

// AnalysisForecastComputationInput is an input type that accepts AnalysisForecastComputationArgs and AnalysisForecastComputationOutput values.
// You can construct a concrete instance of `AnalysisForecastComputationInput` via:
//
//	AnalysisForecastComputationArgs{...}
type AnalysisForecastComputationInput interface {
	pulumi.Input

	ToAnalysisForecastComputationOutput() AnalysisForecastComputationOutput
	ToAnalysisForecastComputationOutputWithContext(context.Context) AnalysisForecastComputationOutput
}

type AnalysisForecastComputationArgs struct {
	ComputationId          pulumi.StringInput                             `pulumi:"computationId"`
	CustomSeasonalityValue pulumi.Float64PtrInput                         `pulumi:"customSeasonalityValue"`
	LowerBoundary          pulumi.Float64PtrInput                         `pulumi:"lowerBoundary"`
	Name                   pulumi.StringPtrInput                          `pulumi:"name"`
	PeriodsBackward        pulumi.Float64PtrInput                         `pulumi:"periodsBackward"`
	PeriodsForward         pulumi.Float64PtrInput                         `pulumi:"periodsForward"`
	PredictionInterval     pulumi.Float64PtrInput                         `pulumi:"predictionInterval"`
	Seasonality            AnalysisForecastComputationSeasonalityPtrInput `pulumi:"seasonality"`
	Time                   AnalysisDimensionFieldInput                    `pulumi:"time"`
	UpperBoundary          pulumi.Float64PtrInput                         `pulumi:"upperBoundary"`
	Value                  AnalysisMeasureFieldPtrInput                   `pulumi:"value"`
}

func (AnalysisForecastComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisForecastComputation)(nil)).Elem()
}

func (i AnalysisForecastComputationArgs) ToAnalysisForecastComputationOutput() AnalysisForecastComputationOutput {
	return i.ToAnalysisForecastComputationOutputWithContext(context.Background())
}

func (i AnalysisForecastComputationArgs) ToAnalysisForecastComputationOutputWithContext(ctx context.Context) AnalysisForecastComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisForecastComputationOutput)
}

func (i AnalysisForecastComputationArgs) ToAnalysisForecastComputationPtrOutput() AnalysisForecastComputationPtrOutput {
	return i.ToAnalysisForecastComputationPtrOutputWithContext(context.Background())
}

func (i AnalysisForecastComputationArgs) ToAnalysisForecastComputationPtrOutputWithContext(ctx context.Context) AnalysisForecastComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisForecastComputationOutput).ToAnalysisForecastComputationPtrOutputWithContext(ctx)
}

// AnalysisForecastComputationPtrInput is an input type that accepts AnalysisForecastComputationArgs, AnalysisForecastComputationPtr and AnalysisForecastComputationPtrOutput values.
// You can construct a concrete instance of `AnalysisForecastComputationPtrInput` via:
//
//	        AnalysisForecastComputationArgs{...}
//
//	or:
//
//	        nil
type AnalysisForecastComputationPtrInput interface {
	pulumi.Input

	ToAnalysisForecastComputationPtrOutput() AnalysisForecastComputationPtrOutput
	ToAnalysisForecastComputationPtrOutputWithContext(context.Context) AnalysisForecastComputationPtrOutput
}

type analysisForecastComputationPtrType AnalysisForecastComputationArgs

func AnalysisForecastComputationPtr(v *AnalysisForecastComputationArgs) AnalysisForecastComputationPtrInput {
	return (*analysisForecastComputationPtrType)(v)
}

func (*analysisForecastComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisForecastComputation)(nil)).Elem()
}

func (i *analysisForecastComputationPtrType) ToAnalysisForecastComputationPtrOutput() AnalysisForecastComputationPtrOutput {
	return i.ToAnalysisForecastComputationPtrOutputWithContext(context.Background())
}

func (i *analysisForecastComputationPtrType) ToAnalysisForecastComputationPtrOutputWithContext(ctx context.Context) AnalysisForecastComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisForecastComputationPtrOutput)
}

type AnalysisForecastComputationOutput struct{ *pulumi.OutputState }

func (AnalysisForecastComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisForecastComputation)(nil)).Elem()
}

func (o AnalysisForecastComputationOutput) ToAnalysisForecastComputationOutput() AnalysisForecastComputationOutput {
	return o
}

func (o AnalysisForecastComputationOutput) ToAnalysisForecastComputationOutputWithContext(ctx context.Context) AnalysisForecastComputationOutput {
	return o
}

func (o AnalysisForecastComputationOutput) ToAnalysisForecastComputationPtrOutput() AnalysisForecastComputationPtrOutput {
	return o.ToAnalysisForecastComputationPtrOutputWithContext(context.Background())
}

func (o AnalysisForecastComputationOutput) ToAnalysisForecastComputationPtrOutputWithContext(ctx context.Context) AnalysisForecastComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisForecastComputation) *AnalysisForecastComputation {
		return &v
	}).(AnalysisForecastComputationPtrOutput)
}

func (o AnalysisForecastComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o AnalysisForecastComputationOutput) CustomSeasonalityValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) *float64 { return v.CustomSeasonalityValue }).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) *float64 { return v.LowerBoundary }).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisForecastComputationOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) *float64 { return v.PeriodsBackward }).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) *float64 { return v.PeriodsForward }).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) *float64 { return v.PredictionInterval }).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationOutput) Seasonality() AnalysisForecastComputationSeasonalityPtrOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) *AnalysisForecastComputationSeasonality { return v.Seasonality }).(AnalysisForecastComputationSeasonalityPtrOutput)
}

func (o AnalysisForecastComputationOutput) Time() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) AnalysisDimensionField { return v.Time }).(AnalysisDimensionFieldOutput)
}

func (o AnalysisForecastComputationOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) *float64 { return v.UpperBoundary }).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisForecastComputation) *AnalysisMeasureField { return v.Value }).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisForecastComputationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisForecastComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisForecastComputation)(nil)).Elem()
}

func (o AnalysisForecastComputationPtrOutput) ToAnalysisForecastComputationPtrOutput() AnalysisForecastComputationPtrOutput {
	return o
}

func (o AnalysisForecastComputationPtrOutput) ToAnalysisForecastComputationPtrOutputWithContext(ctx context.Context) AnalysisForecastComputationPtrOutput {
	return o
}

func (o AnalysisForecastComputationPtrOutput) Elem() AnalysisForecastComputationOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) AnalysisForecastComputation {
		if v != nil {
			return *v
		}
		var ret AnalysisForecastComputation
		return ret
	}).(AnalysisForecastComputationOutput)
}

func (o AnalysisForecastComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisForecastComputationPtrOutput) CustomSeasonalityValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.CustomSeasonalityValue
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationPtrOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.LowerBoundary
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisForecastComputationPtrOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsBackward
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationPtrOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsForward
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationPtrOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PredictionInterval
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationPtrOutput) Seasonality() AnalysisForecastComputationSeasonalityPtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *AnalysisForecastComputationSeasonality {
		if v == nil {
			return nil
		}
		return v.Seasonality
	}).(AnalysisForecastComputationSeasonalityPtrOutput)
}

func (o AnalysisForecastComputationPtrOutput) Time() AnalysisDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(AnalysisDimensionFieldPtrOutput)
}

func (o AnalysisForecastComputationPtrOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.UpperBoundary
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisForecastComputationPtrOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisForecastComputation) *AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisForecastConfiguration struct {
	ForecastProperties *AnalysisTimeBasedForecastProperties `pulumi:"forecastProperties"`
	Scenario           *AnalysisForecastScenario            `pulumi:"scenario"`
}

// AnalysisForecastConfigurationInput is an input type that accepts AnalysisForecastConfigurationArgs and AnalysisForecastConfigurationOutput values.
// You can construct a concrete instance of `AnalysisForecastConfigurationInput` via:
//
//	AnalysisForecastConfigurationArgs{...}
type AnalysisForecastConfigurationInput interface {
	pulumi.Input

	ToAnalysisForecastConfigurationOutput() AnalysisForecastConfigurationOutput
	ToAnalysisForecastConfigurationOutputWithContext(context.Context) AnalysisForecastConfigurationOutput
}

type AnalysisForecastConfigurationArgs struct {
	ForecastProperties AnalysisTimeBasedForecastPropertiesPtrInput `pulumi:"forecastProperties"`
	Scenario           AnalysisForecastScenarioPtrInput            `pulumi:"scenario"`
}

func (AnalysisForecastConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisForecastConfiguration)(nil)).Elem()
}

func (i AnalysisForecastConfigurationArgs) ToAnalysisForecastConfigurationOutput() AnalysisForecastConfigurationOutput {
	return i.ToAnalysisForecastConfigurationOutputWithContext(context.Background())
}

func (i AnalysisForecastConfigurationArgs) ToAnalysisForecastConfigurationOutputWithContext(ctx context.Context) AnalysisForecastConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisForecastConfigurationOutput)
}

// AnalysisForecastConfigurationArrayInput is an input type that accepts AnalysisForecastConfigurationArray and AnalysisForecastConfigurationArrayOutput values.
// You can construct a concrete instance of `AnalysisForecastConfigurationArrayInput` via:
//
//	AnalysisForecastConfigurationArray{ AnalysisForecastConfigurationArgs{...} }
type AnalysisForecastConfigurationArrayInput interface {
	pulumi.Input

	ToAnalysisForecastConfigurationArrayOutput() AnalysisForecastConfigurationArrayOutput
	ToAnalysisForecastConfigurationArrayOutputWithContext(context.Context) AnalysisForecastConfigurationArrayOutput
}

type AnalysisForecastConfigurationArray []AnalysisForecastConfigurationInput

func (AnalysisForecastConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisForecastConfiguration)(nil)).Elem()
}

func (i AnalysisForecastConfigurationArray) ToAnalysisForecastConfigurationArrayOutput() AnalysisForecastConfigurationArrayOutput {
	return i.ToAnalysisForecastConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalysisForecastConfigurationArray) ToAnalysisForecastConfigurationArrayOutputWithContext(ctx context.Context) AnalysisForecastConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisForecastConfigurationArrayOutput)
}

type AnalysisForecastConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisForecastConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisForecastConfiguration)(nil)).Elem()
}

func (o AnalysisForecastConfigurationOutput) ToAnalysisForecastConfigurationOutput() AnalysisForecastConfigurationOutput {
	return o
}

func (o AnalysisForecastConfigurationOutput) ToAnalysisForecastConfigurationOutputWithContext(ctx context.Context) AnalysisForecastConfigurationOutput {
	return o
}

func (o AnalysisForecastConfigurationOutput) ForecastProperties() AnalysisTimeBasedForecastPropertiesPtrOutput {
	return o.ApplyT(func(v AnalysisForecastConfiguration) *AnalysisTimeBasedForecastProperties {
		return v.ForecastProperties
	}).(AnalysisTimeBasedForecastPropertiesPtrOutput)
}

func (o AnalysisForecastConfigurationOutput) Scenario() AnalysisForecastScenarioPtrOutput {
	return o.ApplyT(func(v AnalysisForecastConfiguration) *AnalysisForecastScenario { return v.Scenario }).(AnalysisForecastScenarioPtrOutput)
}

type AnalysisForecastConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisForecastConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisForecastConfiguration)(nil)).Elem()
}

func (o AnalysisForecastConfigurationArrayOutput) ToAnalysisForecastConfigurationArrayOutput() AnalysisForecastConfigurationArrayOutput {
	return o
}

func (o AnalysisForecastConfigurationArrayOutput) ToAnalysisForecastConfigurationArrayOutputWithContext(ctx context.Context) AnalysisForecastConfigurationArrayOutput {
	return o
}

func (o AnalysisForecastConfigurationArrayOutput) Index(i pulumi.IntInput) AnalysisForecastConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisForecastConfiguration {
		return vs[0].([]AnalysisForecastConfiguration)[vs[1].(int)]
	}).(AnalysisForecastConfigurationOutput)
}

type AnalysisForecastScenario struct {
	WhatIfPointScenario *AnalysisWhatIfPointScenario `pulumi:"whatIfPointScenario"`
	WhatIfRangeScenario *AnalysisWhatIfRangeScenario `pulumi:"whatIfRangeScenario"`
}

// AnalysisForecastScenarioInput is an input type that accepts AnalysisForecastScenarioArgs and AnalysisForecastScenarioOutput values.
// You can construct a concrete instance of `AnalysisForecastScenarioInput` via:
//
//	AnalysisForecastScenarioArgs{...}
type AnalysisForecastScenarioInput interface {
	pulumi.Input

	ToAnalysisForecastScenarioOutput() AnalysisForecastScenarioOutput
	ToAnalysisForecastScenarioOutputWithContext(context.Context) AnalysisForecastScenarioOutput
}

type AnalysisForecastScenarioArgs struct {
	WhatIfPointScenario AnalysisWhatIfPointScenarioPtrInput `pulumi:"whatIfPointScenario"`
	WhatIfRangeScenario AnalysisWhatIfRangeScenarioPtrInput `pulumi:"whatIfRangeScenario"`
}

func (AnalysisForecastScenarioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisForecastScenario)(nil)).Elem()
}

func (i AnalysisForecastScenarioArgs) ToAnalysisForecastScenarioOutput() AnalysisForecastScenarioOutput {
	return i.ToAnalysisForecastScenarioOutputWithContext(context.Background())
}

func (i AnalysisForecastScenarioArgs) ToAnalysisForecastScenarioOutputWithContext(ctx context.Context) AnalysisForecastScenarioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisForecastScenarioOutput)
}

func (i AnalysisForecastScenarioArgs) ToAnalysisForecastScenarioPtrOutput() AnalysisForecastScenarioPtrOutput {
	return i.ToAnalysisForecastScenarioPtrOutputWithContext(context.Background())
}

func (i AnalysisForecastScenarioArgs) ToAnalysisForecastScenarioPtrOutputWithContext(ctx context.Context) AnalysisForecastScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisForecastScenarioOutput).ToAnalysisForecastScenarioPtrOutputWithContext(ctx)
}

// AnalysisForecastScenarioPtrInput is an input type that accepts AnalysisForecastScenarioArgs, AnalysisForecastScenarioPtr and AnalysisForecastScenarioPtrOutput values.
// You can construct a concrete instance of `AnalysisForecastScenarioPtrInput` via:
//
//	        AnalysisForecastScenarioArgs{...}
//
//	or:
//
//	        nil
type AnalysisForecastScenarioPtrInput interface {
	pulumi.Input

	ToAnalysisForecastScenarioPtrOutput() AnalysisForecastScenarioPtrOutput
	ToAnalysisForecastScenarioPtrOutputWithContext(context.Context) AnalysisForecastScenarioPtrOutput
}

type analysisForecastScenarioPtrType AnalysisForecastScenarioArgs

func AnalysisForecastScenarioPtr(v *AnalysisForecastScenarioArgs) AnalysisForecastScenarioPtrInput {
	return (*analysisForecastScenarioPtrType)(v)
}

func (*analysisForecastScenarioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisForecastScenario)(nil)).Elem()
}

func (i *analysisForecastScenarioPtrType) ToAnalysisForecastScenarioPtrOutput() AnalysisForecastScenarioPtrOutput {
	return i.ToAnalysisForecastScenarioPtrOutputWithContext(context.Background())
}

func (i *analysisForecastScenarioPtrType) ToAnalysisForecastScenarioPtrOutputWithContext(ctx context.Context) AnalysisForecastScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisForecastScenarioPtrOutput)
}

type AnalysisForecastScenarioOutput struct{ *pulumi.OutputState }

func (AnalysisForecastScenarioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisForecastScenario)(nil)).Elem()
}

func (o AnalysisForecastScenarioOutput) ToAnalysisForecastScenarioOutput() AnalysisForecastScenarioOutput {
	return o
}

func (o AnalysisForecastScenarioOutput) ToAnalysisForecastScenarioOutputWithContext(ctx context.Context) AnalysisForecastScenarioOutput {
	return o
}

func (o AnalysisForecastScenarioOutput) ToAnalysisForecastScenarioPtrOutput() AnalysisForecastScenarioPtrOutput {
	return o.ToAnalysisForecastScenarioPtrOutputWithContext(context.Background())
}

func (o AnalysisForecastScenarioOutput) ToAnalysisForecastScenarioPtrOutputWithContext(ctx context.Context) AnalysisForecastScenarioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisForecastScenario) *AnalysisForecastScenario {
		return &v
	}).(AnalysisForecastScenarioPtrOutput)
}

func (o AnalysisForecastScenarioOutput) WhatIfPointScenario() AnalysisWhatIfPointScenarioPtrOutput {
	return o.ApplyT(func(v AnalysisForecastScenario) *AnalysisWhatIfPointScenario { return v.WhatIfPointScenario }).(AnalysisWhatIfPointScenarioPtrOutput)
}

func (o AnalysisForecastScenarioOutput) WhatIfRangeScenario() AnalysisWhatIfRangeScenarioPtrOutput {
	return o.ApplyT(func(v AnalysisForecastScenario) *AnalysisWhatIfRangeScenario { return v.WhatIfRangeScenario }).(AnalysisWhatIfRangeScenarioPtrOutput)
}

type AnalysisForecastScenarioPtrOutput struct{ *pulumi.OutputState }

func (AnalysisForecastScenarioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisForecastScenario)(nil)).Elem()
}

func (o AnalysisForecastScenarioPtrOutput) ToAnalysisForecastScenarioPtrOutput() AnalysisForecastScenarioPtrOutput {
	return o
}

func (o AnalysisForecastScenarioPtrOutput) ToAnalysisForecastScenarioPtrOutputWithContext(ctx context.Context) AnalysisForecastScenarioPtrOutput {
	return o
}

func (o AnalysisForecastScenarioPtrOutput) Elem() AnalysisForecastScenarioOutput {
	return o.ApplyT(func(v *AnalysisForecastScenario) AnalysisForecastScenario {
		if v != nil {
			return *v
		}
		var ret AnalysisForecastScenario
		return ret
	}).(AnalysisForecastScenarioOutput)
}

func (o AnalysisForecastScenarioPtrOutput) WhatIfPointScenario() AnalysisWhatIfPointScenarioPtrOutput {
	return o.ApplyT(func(v *AnalysisForecastScenario) *AnalysisWhatIfPointScenario {
		if v == nil {
			return nil
		}
		return v.WhatIfPointScenario
	}).(AnalysisWhatIfPointScenarioPtrOutput)
}

func (o AnalysisForecastScenarioPtrOutput) WhatIfRangeScenario() AnalysisWhatIfRangeScenarioPtrOutput {
	return o.ApplyT(func(v *AnalysisForecastScenario) *AnalysisWhatIfRangeScenario {
		if v == nil {
			return nil
		}
		return v.WhatIfRangeScenario
	}).(AnalysisWhatIfRangeScenarioPtrOutput)
}

type AnalysisFormatConfiguration struct {
	DateTimeFormatConfiguration *AnalysisDateTimeFormatConfiguration `pulumi:"dateTimeFormatConfiguration"`
	NumberFormatConfiguration   *AnalysisNumberFormatConfiguration   `pulumi:"numberFormatConfiguration"`
	StringFormatConfiguration   *AnalysisStringFormatConfiguration   `pulumi:"stringFormatConfiguration"`
}

// AnalysisFormatConfigurationInput is an input type that accepts AnalysisFormatConfigurationArgs and AnalysisFormatConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFormatConfigurationInput` via:
//
//	AnalysisFormatConfigurationArgs{...}
type AnalysisFormatConfigurationInput interface {
	pulumi.Input

	ToAnalysisFormatConfigurationOutput() AnalysisFormatConfigurationOutput
	ToAnalysisFormatConfigurationOutputWithContext(context.Context) AnalysisFormatConfigurationOutput
}

type AnalysisFormatConfigurationArgs struct {
	DateTimeFormatConfiguration AnalysisDateTimeFormatConfigurationPtrInput `pulumi:"dateTimeFormatConfiguration"`
	NumberFormatConfiguration   AnalysisNumberFormatConfigurationPtrInput   `pulumi:"numberFormatConfiguration"`
	StringFormatConfiguration   AnalysisStringFormatConfigurationPtrInput   `pulumi:"stringFormatConfiguration"`
}

func (AnalysisFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFormatConfiguration)(nil)).Elem()
}

func (i AnalysisFormatConfigurationArgs) ToAnalysisFormatConfigurationOutput() AnalysisFormatConfigurationOutput {
	return i.ToAnalysisFormatConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFormatConfigurationArgs) ToAnalysisFormatConfigurationOutputWithContext(ctx context.Context) AnalysisFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFormatConfigurationOutput)
}

func (i AnalysisFormatConfigurationArgs) ToAnalysisFormatConfigurationPtrOutput() AnalysisFormatConfigurationPtrOutput {
	return i.ToAnalysisFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFormatConfigurationArgs) ToAnalysisFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFormatConfigurationOutput).ToAnalysisFormatConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFormatConfigurationPtrInput is an input type that accepts AnalysisFormatConfigurationArgs, AnalysisFormatConfigurationPtr and AnalysisFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFormatConfigurationPtrInput` via:
//
//	        AnalysisFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFormatConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFormatConfigurationPtrOutput() AnalysisFormatConfigurationPtrOutput
	ToAnalysisFormatConfigurationPtrOutputWithContext(context.Context) AnalysisFormatConfigurationPtrOutput
}

type analysisFormatConfigurationPtrType AnalysisFormatConfigurationArgs

func AnalysisFormatConfigurationPtr(v *AnalysisFormatConfigurationArgs) AnalysisFormatConfigurationPtrInput {
	return (*analysisFormatConfigurationPtrType)(v)
}

func (*analysisFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFormatConfiguration)(nil)).Elem()
}

func (i *analysisFormatConfigurationPtrType) ToAnalysisFormatConfigurationPtrOutput() AnalysisFormatConfigurationPtrOutput {
	return i.ToAnalysisFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFormatConfigurationPtrType) ToAnalysisFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFormatConfigurationPtrOutput)
}

type AnalysisFormatConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFormatConfiguration)(nil)).Elem()
}

func (o AnalysisFormatConfigurationOutput) ToAnalysisFormatConfigurationOutput() AnalysisFormatConfigurationOutput {
	return o
}

func (o AnalysisFormatConfigurationOutput) ToAnalysisFormatConfigurationOutputWithContext(ctx context.Context) AnalysisFormatConfigurationOutput {
	return o
}

func (o AnalysisFormatConfigurationOutput) ToAnalysisFormatConfigurationPtrOutput() AnalysisFormatConfigurationPtrOutput {
	return o.ToAnalysisFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFormatConfigurationOutput) ToAnalysisFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFormatConfiguration) *AnalysisFormatConfiguration {
		return &v
	}).(AnalysisFormatConfigurationPtrOutput)
}

func (o AnalysisFormatConfigurationOutput) DateTimeFormatConfiguration() AnalysisDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFormatConfiguration) *AnalysisDateTimeFormatConfiguration {
		return v.DateTimeFormatConfiguration
	}).(AnalysisDateTimeFormatConfigurationPtrOutput)
}

func (o AnalysisFormatConfigurationOutput) NumberFormatConfiguration() AnalysisNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFormatConfiguration) *AnalysisNumberFormatConfiguration {
		return v.NumberFormatConfiguration
	}).(AnalysisNumberFormatConfigurationPtrOutput)
}

func (o AnalysisFormatConfigurationOutput) StringFormatConfiguration() AnalysisStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFormatConfiguration) *AnalysisStringFormatConfiguration {
		return v.StringFormatConfiguration
	}).(AnalysisStringFormatConfigurationPtrOutput)
}

type AnalysisFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFormatConfiguration)(nil)).Elem()
}

func (o AnalysisFormatConfigurationPtrOutput) ToAnalysisFormatConfigurationPtrOutput() AnalysisFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisFormatConfigurationPtrOutput) ToAnalysisFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisFormatConfigurationPtrOutput) Elem() AnalysisFormatConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFormatConfiguration) AnalysisFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFormatConfiguration
		return ret
	}).(AnalysisFormatConfigurationOutput)
}

func (o AnalysisFormatConfigurationPtrOutput) DateTimeFormatConfiguration() AnalysisDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFormatConfiguration) *AnalysisDateTimeFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.DateTimeFormatConfiguration
	}).(AnalysisDateTimeFormatConfigurationPtrOutput)
}

func (o AnalysisFormatConfigurationPtrOutput) NumberFormatConfiguration() AnalysisNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFormatConfiguration) *AnalysisNumberFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumberFormatConfiguration
	}).(AnalysisNumberFormatConfigurationPtrOutput)
}

func (o AnalysisFormatConfigurationPtrOutput) StringFormatConfiguration() AnalysisStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFormatConfiguration) *AnalysisStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.StringFormatConfiguration
	}).(AnalysisStringFormatConfigurationPtrOutput)
}

type AnalysisFreeFormLayoutCanvasSizeOptions struct {
	ScreenCanvasSizeOptions *AnalysisFreeFormLayoutScreenCanvasSizeOptions `pulumi:"screenCanvasSizeOptions"`
}

// AnalysisFreeFormLayoutCanvasSizeOptionsInput is an input type that accepts AnalysisFreeFormLayoutCanvasSizeOptionsArgs and AnalysisFreeFormLayoutCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutCanvasSizeOptionsInput` via:
//
//	AnalysisFreeFormLayoutCanvasSizeOptionsArgs{...}
type AnalysisFreeFormLayoutCanvasSizeOptionsInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutCanvasSizeOptionsOutput() AnalysisFreeFormLayoutCanvasSizeOptionsOutput
	ToAnalysisFreeFormLayoutCanvasSizeOptionsOutputWithContext(context.Context) AnalysisFreeFormLayoutCanvasSizeOptionsOutput
}

type AnalysisFreeFormLayoutCanvasSizeOptionsArgs struct {
	ScreenCanvasSizeOptions AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrInput `pulumi:"screenCanvasSizeOptions"`
}

func (AnalysisFreeFormLayoutCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i AnalysisFreeFormLayoutCanvasSizeOptionsArgs) ToAnalysisFreeFormLayoutCanvasSizeOptionsOutput() AnalysisFreeFormLayoutCanvasSizeOptionsOutput {
	return i.ToAnalysisFreeFormLayoutCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutCanvasSizeOptionsArgs) ToAnalysisFreeFormLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutCanvasSizeOptionsOutput)
}

func (i AnalysisFreeFormLayoutCanvasSizeOptionsArgs) ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput() AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutCanvasSizeOptionsArgs) ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutCanvasSizeOptionsOutput).ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// AnalysisFreeFormLayoutCanvasSizeOptionsPtrInput is an input type that accepts AnalysisFreeFormLayoutCanvasSizeOptionsArgs, AnalysisFreeFormLayoutCanvasSizeOptionsPtr and AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutCanvasSizeOptionsPtrInput` via:
//
//	        AnalysisFreeFormLayoutCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisFreeFormLayoutCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput() AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput
	ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Context) AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput
}

type analysisFreeFormLayoutCanvasSizeOptionsPtrType AnalysisFreeFormLayoutCanvasSizeOptionsArgs

func AnalysisFreeFormLayoutCanvasSizeOptionsPtr(v *AnalysisFreeFormLayoutCanvasSizeOptionsArgs) AnalysisFreeFormLayoutCanvasSizeOptionsPtrInput {
	return (*analysisFreeFormLayoutCanvasSizeOptionsPtrType)(v)
}

func (*analysisFreeFormLayoutCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i *analysisFreeFormLayoutCanvasSizeOptionsPtrType) ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput() AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisFreeFormLayoutCanvasSizeOptionsPtrType) ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

type AnalysisFreeFormLayoutCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutCanvasSizeOptionsOutput) ToAnalysisFreeFormLayoutCanvasSizeOptionsOutput() AnalysisFreeFormLayoutCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisFreeFormLayoutCanvasSizeOptionsOutput) ToAnalysisFreeFormLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisFreeFormLayoutCanvasSizeOptionsOutput) ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput() AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisFreeFormLayoutCanvasSizeOptionsOutput) ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFreeFormLayoutCanvasSizeOptions) *AnalysisFreeFormLayoutCanvasSizeOptions {
		return &v
	}).(AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

func (o AnalysisFreeFormLayoutCanvasSizeOptionsOutput) ScreenCanvasSizeOptions() AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutCanvasSizeOptions) *AnalysisFreeFormLayoutScreenCanvasSizeOptions {
		return v.ScreenCanvasSizeOptions
	}).(AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

type AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput) ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput() AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput) ToAnalysisFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput) Elem() AnalysisFreeFormLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutCanvasSizeOptions) AnalysisFreeFormLayoutCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisFreeFormLayoutCanvasSizeOptions
		return ret
	}).(AnalysisFreeFormLayoutCanvasSizeOptionsOutput)
}

func (o AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput) ScreenCanvasSizeOptions() AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutCanvasSizeOptions) *AnalysisFreeFormLayoutScreenCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.ScreenCanvasSizeOptions
	}).(AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

type AnalysisFreeFormLayoutConfiguration struct {
	CanvasSizeOptions *AnalysisFreeFormLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
	Elements          []AnalysisFreeFormLayoutElement          `pulumi:"elements"`
}

// AnalysisFreeFormLayoutConfigurationInput is an input type that accepts AnalysisFreeFormLayoutConfigurationArgs and AnalysisFreeFormLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutConfigurationInput` via:
//
//	AnalysisFreeFormLayoutConfigurationArgs{...}
type AnalysisFreeFormLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutConfigurationOutput() AnalysisFreeFormLayoutConfigurationOutput
	ToAnalysisFreeFormLayoutConfigurationOutputWithContext(context.Context) AnalysisFreeFormLayoutConfigurationOutput
}

type AnalysisFreeFormLayoutConfigurationArgs struct {
	CanvasSizeOptions AnalysisFreeFormLayoutCanvasSizeOptionsPtrInput `pulumi:"canvasSizeOptions"`
	Elements          AnalysisFreeFormLayoutElementArrayInput         `pulumi:"elements"`
}

func (AnalysisFreeFormLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisFreeFormLayoutConfigurationArgs) ToAnalysisFreeFormLayoutConfigurationOutput() AnalysisFreeFormLayoutConfigurationOutput {
	return i.ToAnalysisFreeFormLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutConfigurationArgs) ToAnalysisFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutConfigurationOutput)
}

func (i AnalysisFreeFormLayoutConfigurationArgs) ToAnalysisFreeFormLayoutConfigurationPtrOutput() AnalysisFreeFormLayoutConfigurationPtrOutput {
	return i.ToAnalysisFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutConfigurationArgs) ToAnalysisFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutConfigurationOutput).ToAnalysisFreeFormLayoutConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFreeFormLayoutConfigurationPtrInput is an input type that accepts AnalysisFreeFormLayoutConfigurationArgs, AnalysisFreeFormLayoutConfigurationPtr and AnalysisFreeFormLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutConfigurationPtrInput` via:
//
//	        AnalysisFreeFormLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFreeFormLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutConfigurationPtrOutput() AnalysisFreeFormLayoutConfigurationPtrOutput
	ToAnalysisFreeFormLayoutConfigurationPtrOutputWithContext(context.Context) AnalysisFreeFormLayoutConfigurationPtrOutput
}

type analysisFreeFormLayoutConfigurationPtrType AnalysisFreeFormLayoutConfigurationArgs

func AnalysisFreeFormLayoutConfigurationPtr(v *AnalysisFreeFormLayoutConfigurationArgs) AnalysisFreeFormLayoutConfigurationPtrInput {
	return (*analysisFreeFormLayoutConfigurationPtrType)(v)
}

func (*analysisFreeFormLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i *analysisFreeFormLayoutConfigurationPtrType) ToAnalysisFreeFormLayoutConfigurationPtrOutput() AnalysisFreeFormLayoutConfigurationPtrOutput {
	return i.ToAnalysisFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFreeFormLayoutConfigurationPtrType) ToAnalysisFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutConfigurationPtrOutput)
}

type AnalysisFreeFormLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutConfigurationOutput) ToAnalysisFreeFormLayoutConfigurationOutput() AnalysisFreeFormLayoutConfigurationOutput {
	return o
}

func (o AnalysisFreeFormLayoutConfigurationOutput) ToAnalysisFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutConfigurationOutput {
	return o
}

func (o AnalysisFreeFormLayoutConfigurationOutput) ToAnalysisFreeFormLayoutConfigurationPtrOutput() AnalysisFreeFormLayoutConfigurationPtrOutput {
	return o.ToAnalysisFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFreeFormLayoutConfigurationOutput) ToAnalysisFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFreeFormLayoutConfiguration) *AnalysisFreeFormLayoutConfiguration {
		return &v
	}).(AnalysisFreeFormLayoutConfigurationPtrOutput)
}

func (o AnalysisFreeFormLayoutConfigurationOutput) CanvasSizeOptions() AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutConfiguration) *AnalysisFreeFormLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

func (o AnalysisFreeFormLayoutConfigurationOutput) Elements() AnalysisFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutConfiguration) []AnalysisFreeFormLayoutElement { return v.Elements }).(AnalysisFreeFormLayoutElementArrayOutput)
}

type AnalysisFreeFormLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutConfigurationPtrOutput) ToAnalysisFreeFormLayoutConfigurationPtrOutput() AnalysisFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisFreeFormLayoutConfigurationPtrOutput) ToAnalysisFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisFreeFormLayoutConfigurationPtrOutput) Elem() AnalysisFreeFormLayoutConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutConfiguration) AnalysisFreeFormLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFreeFormLayoutConfiguration
		return ret
	}).(AnalysisFreeFormLayoutConfigurationOutput)
}

func (o AnalysisFreeFormLayoutConfigurationPtrOutput) CanvasSizeOptions() AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutConfiguration) *AnalysisFreeFormLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.CanvasSizeOptions
	}).(AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

func (o AnalysisFreeFormLayoutConfigurationPtrOutput) Elements() AnalysisFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutConfiguration) []AnalysisFreeFormLayoutElement {
		if v == nil {
			return nil
		}
		return v.Elements
	}).(AnalysisFreeFormLayoutElementArrayOutput)
}

type AnalysisFreeFormLayoutElement struct {
	BackgroundStyle *AnalysisFreeFormLayoutElementBackgroundStyle `pulumi:"backgroundStyle"`
	BorderStyle     *AnalysisFreeFormLayoutElementBorderStyle     `pulumi:"borderStyle"`
	ElementId       string                                        `pulumi:"elementId"`
	ElementType_    AnalysisLayoutElementType                     `pulumi:"elementType"`
	// String based length that is composed of value and unit in px
	Height              string                                    `pulumi:"height"`
	LoadingAnimation    *AnalysisLoadingAnimation                 `pulumi:"loadingAnimation"`
	RenderingRules      []AnalysisSheetElementRenderingRule       `pulumi:"renderingRules"`
	SelectedBorderStyle *AnalysisFreeFormLayoutElementBorderStyle `pulumi:"selectedBorderStyle"`
	Visibility          *AnalysisVisibility                       `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width string `pulumi:"width"`
	// String based length that is composed of value and unit in px
	XAxisLocation string `pulumi:"xAxisLocation"`
	// String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value
	YAxisLocation string `pulumi:"yAxisLocation"`
}

// AnalysisFreeFormLayoutElementInput is an input type that accepts AnalysisFreeFormLayoutElementArgs and AnalysisFreeFormLayoutElementOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutElementInput` via:
//
//	AnalysisFreeFormLayoutElementArgs{...}
type AnalysisFreeFormLayoutElementInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutElementOutput() AnalysisFreeFormLayoutElementOutput
	ToAnalysisFreeFormLayoutElementOutputWithContext(context.Context) AnalysisFreeFormLayoutElementOutput
}

type AnalysisFreeFormLayoutElementArgs struct {
	BackgroundStyle AnalysisFreeFormLayoutElementBackgroundStylePtrInput `pulumi:"backgroundStyle"`
	BorderStyle     AnalysisFreeFormLayoutElementBorderStylePtrInput     `pulumi:"borderStyle"`
	ElementId       pulumi.StringInput                                   `pulumi:"elementId"`
	ElementType_    AnalysisLayoutElementTypeInput                       `pulumi:"elementType"`
	// String based length that is composed of value and unit in px
	Height              pulumi.StringInput                               `pulumi:"height"`
	LoadingAnimation    AnalysisLoadingAnimationPtrInput                 `pulumi:"loadingAnimation"`
	RenderingRules      AnalysisSheetElementRenderingRuleArrayInput      `pulumi:"renderingRules"`
	SelectedBorderStyle AnalysisFreeFormLayoutElementBorderStylePtrInput `pulumi:"selectedBorderStyle"`
	Visibility          AnalysisVisibilityPtrInput                       `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringInput `pulumi:"width"`
	// String based length that is composed of value and unit in px
	XAxisLocation pulumi.StringInput `pulumi:"xAxisLocation"`
	// String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value
	YAxisLocation pulumi.StringInput `pulumi:"yAxisLocation"`
}

func (AnalysisFreeFormLayoutElementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutElement)(nil)).Elem()
}

func (i AnalysisFreeFormLayoutElementArgs) ToAnalysisFreeFormLayoutElementOutput() AnalysisFreeFormLayoutElementOutput {
	return i.ToAnalysisFreeFormLayoutElementOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutElementArgs) ToAnalysisFreeFormLayoutElementOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutElementOutput)
}

// AnalysisFreeFormLayoutElementArrayInput is an input type that accepts AnalysisFreeFormLayoutElementArray and AnalysisFreeFormLayoutElementArrayOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutElementArrayInput` via:
//
//	AnalysisFreeFormLayoutElementArray{ AnalysisFreeFormLayoutElementArgs{...} }
type AnalysisFreeFormLayoutElementArrayInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutElementArrayOutput() AnalysisFreeFormLayoutElementArrayOutput
	ToAnalysisFreeFormLayoutElementArrayOutputWithContext(context.Context) AnalysisFreeFormLayoutElementArrayOutput
}

type AnalysisFreeFormLayoutElementArray []AnalysisFreeFormLayoutElementInput

func (AnalysisFreeFormLayoutElementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFreeFormLayoutElement)(nil)).Elem()
}

func (i AnalysisFreeFormLayoutElementArray) ToAnalysisFreeFormLayoutElementArrayOutput() AnalysisFreeFormLayoutElementArrayOutput {
	return i.ToAnalysisFreeFormLayoutElementArrayOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutElementArray) ToAnalysisFreeFormLayoutElementArrayOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutElementArrayOutput)
}

type AnalysisFreeFormLayoutElementOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutElementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutElement)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutElementOutput) ToAnalysisFreeFormLayoutElementOutput() AnalysisFreeFormLayoutElementOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementOutput) ToAnalysisFreeFormLayoutElementOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementOutput) BackgroundStyle() AnalysisFreeFormLayoutElementBackgroundStylePtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) *AnalysisFreeFormLayoutElementBackgroundStyle {
		return v.BackgroundStyle
	}).(AnalysisFreeFormLayoutElementBackgroundStylePtrOutput)
}

func (o AnalysisFreeFormLayoutElementOutput) BorderStyle() AnalysisFreeFormLayoutElementBorderStylePtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) *AnalysisFreeFormLayoutElementBorderStyle { return v.BorderStyle }).(AnalysisFreeFormLayoutElementBorderStylePtrOutput)
}

func (o AnalysisFreeFormLayoutElementOutput) ElementId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) string { return v.ElementId }).(pulumi.StringOutput)
}

func (o AnalysisFreeFormLayoutElementOutput) GetElementType_() AnalysisLayoutElementTypeOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) AnalysisLayoutElementType { return v.ElementType_ }).(AnalysisLayoutElementTypeOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisFreeFormLayoutElementOutput) Height() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) string { return v.Height }).(pulumi.StringOutput)
}

func (o AnalysisFreeFormLayoutElementOutput) LoadingAnimation() AnalysisLoadingAnimationPtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) *AnalysisLoadingAnimation { return v.LoadingAnimation }).(AnalysisLoadingAnimationPtrOutput)
}

func (o AnalysisFreeFormLayoutElementOutput) RenderingRules() AnalysisSheetElementRenderingRuleArrayOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) []AnalysisSheetElementRenderingRule { return v.RenderingRules }).(AnalysisSheetElementRenderingRuleArrayOutput)
}

func (o AnalysisFreeFormLayoutElementOutput) SelectedBorderStyle() AnalysisFreeFormLayoutElementBorderStylePtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) *AnalysisFreeFormLayoutElementBorderStyle {
		return v.SelectedBorderStyle
	}).(AnalysisFreeFormLayoutElementBorderStylePtrOutput)
}

func (o AnalysisFreeFormLayoutElementOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisFreeFormLayoutElementOutput) Width() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) string { return v.Width }).(pulumi.StringOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisFreeFormLayoutElementOutput) XAxisLocation() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) string { return v.XAxisLocation }).(pulumi.StringOutput)
}

// String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value
func (o AnalysisFreeFormLayoutElementOutput) YAxisLocation() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElement) string { return v.YAxisLocation }).(pulumi.StringOutput)
}

type AnalysisFreeFormLayoutElementArrayOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutElementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisFreeFormLayoutElement)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutElementArrayOutput) ToAnalysisFreeFormLayoutElementArrayOutput() AnalysisFreeFormLayoutElementArrayOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementArrayOutput) ToAnalysisFreeFormLayoutElementArrayOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementArrayOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementArrayOutput) Index(i pulumi.IntInput) AnalysisFreeFormLayoutElementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisFreeFormLayoutElement {
		return vs[0].([]AnalysisFreeFormLayoutElement)[vs[1].(int)]
	}).(AnalysisFreeFormLayoutElementOutput)
}

type AnalysisFreeFormLayoutElementBackgroundStyle struct {
	Color      *string             `pulumi:"color"`
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisFreeFormLayoutElementBackgroundStyleInput is an input type that accepts AnalysisFreeFormLayoutElementBackgroundStyleArgs and AnalysisFreeFormLayoutElementBackgroundStyleOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutElementBackgroundStyleInput` via:
//
//	AnalysisFreeFormLayoutElementBackgroundStyleArgs{...}
type AnalysisFreeFormLayoutElementBackgroundStyleInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutElementBackgroundStyleOutput() AnalysisFreeFormLayoutElementBackgroundStyleOutput
	ToAnalysisFreeFormLayoutElementBackgroundStyleOutputWithContext(context.Context) AnalysisFreeFormLayoutElementBackgroundStyleOutput
}

type AnalysisFreeFormLayoutElementBackgroundStyleArgs struct {
	Color      pulumi.StringPtrInput      `pulumi:"color"`
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisFreeFormLayoutElementBackgroundStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (i AnalysisFreeFormLayoutElementBackgroundStyleArgs) ToAnalysisFreeFormLayoutElementBackgroundStyleOutput() AnalysisFreeFormLayoutElementBackgroundStyleOutput {
	return i.ToAnalysisFreeFormLayoutElementBackgroundStyleOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutElementBackgroundStyleArgs) ToAnalysisFreeFormLayoutElementBackgroundStyleOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBackgroundStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutElementBackgroundStyleOutput)
}

func (i AnalysisFreeFormLayoutElementBackgroundStyleArgs) ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutput() AnalysisFreeFormLayoutElementBackgroundStylePtrOutput {
	return i.ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutElementBackgroundStyleArgs) ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBackgroundStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutElementBackgroundStyleOutput).ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx)
}

// AnalysisFreeFormLayoutElementBackgroundStylePtrInput is an input type that accepts AnalysisFreeFormLayoutElementBackgroundStyleArgs, AnalysisFreeFormLayoutElementBackgroundStylePtr and AnalysisFreeFormLayoutElementBackgroundStylePtrOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutElementBackgroundStylePtrInput` via:
//
//	        AnalysisFreeFormLayoutElementBackgroundStyleArgs{...}
//
//	or:
//
//	        nil
type AnalysisFreeFormLayoutElementBackgroundStylePtrInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutput() AnalysisFreeFormLayoutElementBackgroundStylePtrOutput
	ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Context) AnalysisFreeFormLayoutElementBackgroundStylePtrOutput
}

type analysisFreeFormLayoutElementBackgroundStylePtrType AnalysisFreeFormLayoutElementBackgroundStyleArgs

func AnalysisFreeFormLayoutElementBackgroundStylePtr(v *AnalysisFreeFormLayoutElementBackgroundStyleArgs) AnalysisFreeFormLayoutElementBackgroundStylePtrInput {
	return (*analysisFreeFormLayoutElementBackgroundStylePtrType)(v)
}

func (*analysisFreeFormLayoutElementBackgroundStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (i *analysisFreeFormLayoutElementBackgroundStylePtrType) ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutput() AnalysisFreeFormLayoutElementBackgroundStylePtrOutput {
	return i.ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Background())
}

func (i *analysisFreeFormLayoutElementBackgroundStylePtrType) ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBackgroundStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutElementBackgroundStylePtrOutput)
}

type AnalysisFreeFormLayoutElementBackgroundStyleOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutElementBackgroundStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutElementBackgroundStyleOutput) ToAnalysisFreeFormLayoutElementBackgroundStyleOutput() AnalysisFreeFormLayoutElementBackgroundStyleOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementBackgroundStyleOutput) ToAnalysisFreeFormLayoutElementBackgroundStyleOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBackgroundStyleOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementBackgroundStyleOutput) ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutput() AnalysisFreeFormLayoutElementBackgroundStylePtrOutput {
	return o.ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Background())
}

func (o AnalysisFreeFormLayoutElementBackgroundStyleOutput) ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBackgroundStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFreeFormLayoutElementBackgroundStyle) *AnalysisFreeFormLayoutElementBackgroundStyle {
		return &v
	}).(AnalysisFreeFormLayoutElementBackgroundStylePtrOutput)
}

func (o AnalysisFreeFormLayoutElementBackgroundStyleOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElementBackgroundStyle) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o AnalysisFreeFormLayoutElementBackgroundStyleOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElementBackgroundStyle) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisFreeFormLayoutElementBackgroundStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutElementBackgroundStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutElementBackgroundStylePtrOutput) ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutput() AnalysisFreeFormLayoutElementBackgroundStylePtrOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementBackgroundStylePtrOutput) ToAnalysisFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBackgroundStylePtrOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementBackgroundStylePtrOutput) Elem() AnalysisFreeFormLayoutElementBackgroundStyleOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutElementBackgroundStyle) AnalysisFreeFormLayoutElementBackgroundStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisFreeFormLayoutElementBackgroundStyle
		return ret
	}).(AnalysisFreeFormLayoutElementBackgroundStyleOutput)
}

func (o AnalysisFreeFormLayoutElementBackgroundStylePtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutElementBackgroundStyle) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFreeFormLayoutElementBackgroundStylePtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutElementBackgroundStyle) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisFreeFormLayoutElementBorderStyle struct {
	Color      *string             `pulumi:"color"`
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisFreeFormLayoutElementBorderStyleInput is an input type that accepts AnalysisFreeFormLayoutElementBorderStyleArgs and AnalysisFreeFormLayoutElementBorderStyleOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutElementBorderStyleInput` via:
//
//	AnalysisFreeFormLayoutElementBorderStyleArgs{...}
type AnalysisFreeFormLayoutElementBorderStyleInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutElementBorderStyleOutput() AnalysisFreeFormLayoutElementBorderStyleOutput
	ToAnalysisFreeFormLayoutElementBorderStyleOutputWithContext(context.Context) AnalysisFreeFormLayoutElementBorderStyleOutput
}

type AnalysisFreeFormLayoutElementBorderStyleArgs struct {
	Color      pulumi.StringPtrInput      `pulumi:"color"`
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisFreeFormLayoutElementBorderStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (i AnalysisFreeFormLayoutElementBorderStyleArgs) ToAnalysisFreeFormLayoutElementBorderStyleOutput() AnalysisFreeFormLayoutElementBorderStyleOutput {
	return i.ToAnalysisFreeFormLayoutElementBorderStyleOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutElementBorderStyleArgs) ToAnalysisFreeFormLayoutElementBorderStyleOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBorderStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutElementBorderStyleOutput)
}

func (i AnalysisFreeFormLayoutElementBorderStyleArgs) ToAnalysisFreeFormLayoutElementBorderStylePtrOutput() AnalysisFreeFormLayoutElementBorderStylePtrOutput {
	return i.ToAnalysisFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutElementBorderStyleArgs) ToAnalysisFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutElementBorderStyleOutput).ToAnalysisFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx)
}

// AnalysisFreeFormLayoutElementBorderStylePtrInput is an input type that accepts AnalysisFreeFormLayoutElementBorderStyleArgs, AnalysisFreeFormLayoutElementBorderStylePtr and AnalysisFreeFormLayoutElementBorderStylePtrOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutElementBorderStylePtrInput` via:
//
//	        AnalysisFreeFormLayoutElementBorderStyleArgs{...}
//
//	or:
//
//	        nil
type AnalysisFreeFormLayoutElementBorderStylePtrInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutElementBorderStylePtrOutput() AnalysisFreeFormLayoutElementBorderStylePtrOutput
	ToAnalysisFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Context) AnalysisFreeFormLayoutElementBorderStylePtrOutput
}

type analysisFreeFormLayoutElementBorderStylePtrType AnalysisFreeFormLayoutElementBorderStyleArgs

func AnalysisFreeFormLayoutElementBorderStylePtr(v *AnalysisFreeFormLayoutElementBorderStyleArgs) AnalysisFreeFormLayoutElementBorderStylePtrInput {
	return (*analysisFreeFormLayoutElementBorderStylePtrType)(v)
}

func (*analysisFreeFormLayoutElementBorderStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (i *analysisFreeFormLayoutElementBorderStylePtrType) ToAnalysisFreeFormLayoutElementBorderStylePtrOutput() AnalysisFreeFormLayoutElementBorderStylePtrOutput {
	return i.ToAnalysisFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Background())
}

func (i *analysisFreeFormLayoutElementBorderStylePtrType) ToAnalysisFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutElementBorderStylePtrOutput)
}

type AnalysisFreeFormLayoutElementBorderStyleOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutElementBorderStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutElementBorderStyleOutput) ToAnalysisFreeFormLayoutElementBorderStyleOutput() AnalysisFreeFormLayoutElementBorderStyleOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementBorderStyleOutput) ToAnalysisFreeFormLayoutElementBorderStyleOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBorderStyleOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementBorderStyleOutput) ToAnalysisFreeFormLayoutElementBorderStylePtrOutput() AnalysisFreeFormLayoutElementBorderStylePtrOutput {
	return o.ToAnalysisFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Background())
}

func (o AnalysisFreeFormLayoutElementBorderStyleOutput) ToAnalysisFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBorderStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFreeFormLayoutElementBorderStyle) *AnalysisFreeFormLayoutElementBorderStyle {
		return &v
	}).(AnalysisFreeFormLayoutElementBorderStylePtrOutput)
}

func (o AnalysisFreeFormLayoutElementBorderStyleOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElementBorderStyle) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o AnalysisFreeFormLayoutElementBorderStyleOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutElementBorderStyle) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisFreeFormLayoutElementBorderStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutElementBorderStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutElementBorderStylePtrOutput) ToAnalysisFreeFormLayoutElementBorderStylePtrOutput() AnalysisFreeFormLayoutElementBorderStylePtrOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementBorderStylePtrOutput) ToAnalysisFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutElementBorderStylePtrOutput {
	return o
}

func (o AnalysisFreeFormLayoutElementBorderStylePtrOutput) Elem() AnalysisFreeFormLayoutElementBorderStyleOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutElementBorderStyle) AnalysisFreeFormLayoutElementBorderStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisFreeFormLayoutElementBorderStyle
		return ret
	}).(AnalysisFreeFormLayoutElementBorderStyleOutput)
}

func (o AnalysisFreeFormLayoutElementBorderStylePtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutElementBorderStyle) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFreeFormLayoutElementBorderStylePtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutElementBorderStyle) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisFreeFormLayoutScreenCanvasSizeOptions struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth string `pulumi:"optimizedViewPortWidth"`
}

// AnalysisFreeFormLayoutScreenCanvasSizeOptionsInput is an input type that accepts AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs and AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutScreenCanvasSizeOptionsInput` via:
//
//	AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs{...}
type AnalysisFreeFormLayoutScreenCanvasSizeOptionsInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput() AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput
	ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(context.Context) AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput
}

type AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth pulumi.StringInput `pulumi:"optimizedViewPortWidth"`
}

func (AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput() AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return i.ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput)
}

func (i AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput).ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrInput is an input type that accepts AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs, AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtr and AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrInput` via:
//
//	        AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput
	ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Context) AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput
}

type analysisFreeFormLayoutScreenCanvasSizeOptionsPtrType AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs

func AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtr(v *AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs) AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrInput {
	return (*analysisFreeFormLayoutScreenCanvasSizeOptionsPtrType)(v)
}

func (*analysisFreeFormLayoutScreenCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i *analysisFreeFormLayoutScreenCanvasSizeOptionsPtrType) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisFreeFormLayoutScreenCanvasSizeOptionsPtrType) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

type AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput() AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFreeFormLayoutScreenCanvasSizeOptions) *AnalysisFreeFormLayoutScreenCanvasSizeOptions {
		return &v
	}).(AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput) OptimizedViewPortWidth() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFreeFormLayoutScreenCanvasSizeOptions) string { return v.OptimizedViewPortWidth }).(pulumi.StringOutput)
}

type AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) ToAnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) Elem() AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutScreenCanvasSizeOptions) AnalysisFreeFormLayoutScreenCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisFreeFormLayoutScreenCanvasSizeOptions
		return ret
	}).(AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) OptimizedViewPortWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFreeFormLayoutScreenCanvasSizeOptions) *string {
		if v == nil {
			return nil
		}
		return &v.OptimizedViewPortWidth
	}).(pulumi.StringPtrOutput)
}

type AnalysisFreeFormSectionLayoutConfiguration struct {
	Elements []AnalysisFreeFormLayoutElement `pulumi:"elements"`
}

// AnalysisFreeFormSectionLayoutConfigurationInput is an input type that accepts AnalysisFreeFormSectionLayoutConfigurationArgs and AnalysisFreeFormSectionLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFreeFormSectionLayoutConfigurationInput` via:
//
//	AnalysisFreeFormSectionLayoutConfigurationArgs{...}
type AnalysisFreeFormSectionLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisFreeFormSectionLayoutConfigurationOutput() AnalysisFreeFormSectionLayoutConfigurationOutput
	ToAnalysisFreeFormSectionLayoutConfigurationOutputWithContext(context.Context) AnalysisFreeFormSectionLayoutConfigurationOutput
}

type AnalysisFreeFormSectionLayoutConfigurationArgs struct {
	Elements AnalysisFreeFormLayoutElementArrayInput `pulumi:"elements"`
}

func (AnalysisFreeFormSectionLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisFreeFormSectionLayoutConfigurationArgs) ToAnalysisFreeFormSectionLayoutConfigurationOutput() AnalysisFreeFormSectionLayoutConfigurationOutput {
	return i.ToAnalysisFreeFormSectionLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFreeFormSectionLayoutConfigurationArgs) ToAnalysisFreeFormSectionLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisFreeFormSectionLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormSectionLayoutConfigurationOutput)
}

func (i AnalysisFreeFormSectionLayoutConfigurationArgs) ToAnalysisFreeFormSectionLayoutConfigurationPtrOutput() AnalysisFreeFormSectionLayoutConfigurationPtrOutput {
	return i.ToAnalysisFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFreeFormSectionLayoutConfigurationArgs) ToAnalysisFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFreeFormSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormSectionLayoutConfigurationOutput).ToAnalysisFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFreeFormSectionLayoutConfigurationPtrInput is an input type that accepts AnalysisFreeFormSectionLayoutConfigurationArgs, AnalysisFreeFormSectionLayoutConfigurationPtr and AnalysisFreeFormSectionLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFreeFormSectionLayoutConfigurationPtrInput` via:
//
//	        AnalysisFreeFormSectionLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFreeFormSectionLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFreeFormSectionLayoutConfigurationPtrOutput() AnalysisFreeFormSectionLayoutConfigurationPtrOutput
	ToAnalysisFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Context) AnalysisFreeFormSectionLayoutConfigurationPtrOutput
}

type analysisFreeFormSectionLayoutConfigurationPtrType AnalysisFreeFormSectionLayoutConfigurationArgs

func AnalysisFreeFormSectionLayoutConfigurationPtr(v *AnalysisFreeFormSectionLayoutConfigurationArgs) AnalysisFreeFormSectionLayoutConfigurationPtrInput {
	return (*analysisFreeFormSectionLayoutConfigurationPtrType)(v)
}

func (*analysisFreeFormSectionLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (i *analysisFreeFormSectionLayoutConfigurationPtrType) ToAnalysisFreeFormSectionLayoutConfigurationPtrOutput() AnalysisFreeFormSectionLayoutConfigurationPtrOutput {
	return i.ToAnalysisFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFreeFormSectionLayoutConfigurationPtrType) ToAnalysisFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFreeFormSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFreeFormSectionLayoutConfigurationPtrOutput)
}

type AnalysisFreeFormSectionLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormSectionLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisFreeFormSectionLayoutConfigurationOutput) ToAnalysisFreeFormSectionLayoutConfigurationOutput() AnalysisFreeFormSectionLayoutConfigurationOutput {
	return o
}

func (o AnalysisFreeFormSectionLayoutConfigurationOutput) ToAnalysisFreeFormSectionLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisFreeFormSectionLayoutConfigurationOutput {
	return o
}

func (o AnalysisFreeFormSectionLayoutConfigurationOutput) ToAnalysisFreeFormSectionLayoutConfigurationPtrOutput() AnalysisFreeFormSectionLayoutConfigurationPtrOutput {
	return o.ToAnalysisFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFreeFormSectionLayoutConfigurationOutput) ToAnalysisFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFreeFormSectionLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFreeFormSectionLayoutConfiguration) *AnalysisFreeFormSectionLayoutConfiguration {
		return &v
	}).(AnalysisFreeFormSectionLayoutConfigurationPtrOutput)
}

func (o AnalysisFreeFormSectionLayoutConfigurationOutput) Elements() AnalysisFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v AnalysisFreeFormSectionLayoutConfiguration) []AnalysisFreeFormLayoutElement { return v.Elements }).(AnalysisFreeFormLayoutElementArrayOutput)
}

type AnalysisFreeFormSectionLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFreeFormSectionLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisFreeFormSectionLayoutConfigurationPtrOutput) ToAnalysisFreeFormSectionLayoutConfigurationPtrOutput() AnalysisFreeFormSectionLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisFreeFormSectionLayoutConfigurationPtrOutput) ToAnalysisFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFreeFormSectionLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisFreeFormSectionLayoutConfigurationPtrOutput) Elem() AnalysisFreeFormSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFreeFormSectionLayoutConfiguration) AnalysisFreeFormSectionLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFreeFormSectionLayoutConfiguration
		return ret
	}).(AnalysisFreeFormSectionLayoutConfigurationOutput)
}

func (o AnalysisFreeFormSectionLayoutConfigurationPtrOutput) Elements() AnalysisFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v *AnalysisFreeFormSectionLayoutConfiguration) []AnalysisFreeFormLayoutElement {
		if v == nil {
			return nil
		}
		return v.Elements
	}).(AnalysisFreeFormLayoutElementArrayOutput)
}

type AnalysisFunnelChartAggregatedFieldWells struct {
	Category []AnalysisDimensionField `pulumi:"category"`
	Values   []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisFunnelChartAggregatedFieldWellsInput is an input type that accepts AnalysisFunnelChartAggregatedFieldWellsArgs and AnalysisFunnelChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartAggregatedFieldWellsInput` via:
//
//	AnalysisFunnelChartAggregatedFieldWellsArgs{...}
type AnalysisFunnelChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisFunnelChartAggregatedFieldWellsOutput() AnalysisFunnelChartAggregatedFieldWellsOutput
	ToAnalysisFunnelChartAggregatedFieldWellsOutputWithContext(context.Context) AnalysisFunnelChartAggregatedFieldWellsOutput
}

type AnalysisFunnelChartAggregatedFieldWellsArgs struct {
	Category AnalysisDimensionFieldArrayInput `pulumi:"category"`
	Values   AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisFunnelChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisFunnelChartAggregatedFieldWellsArgs) ToAnalysisFunnelChartAggregatedFieldWellsOutput() AnalysisFunnelChartAggregatedFieldWellsOutput {
	return i.ToAnalysisFunnelChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartAggregatedFieldWellsArgs) ToAnalysisFunnelChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisFunnelChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartAggregatedFieldWellsOutput)
}

func (i AnalysisFunnelChartAggregatedFieldWellsArgs) ToAnalysisFunnelChartAggregatedFieldWellsPtrOutput() AnalysisFunnelChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartAggregatedFieldWellsArgs) ToAnalysisFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartAggregatedFieldWellsOutput).ToAnalysisFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisFunnelChartAggregatedFieldWellsPtrInput is an input type that accepts AnalysisFunnelChartAggregatedFieldWellsArgs, AnalysisFunnelChartAggregatedFieldWellsPtr and AnalysisFunnelChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisFunnelChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisFunnelChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisFunnelChartAggregatedFieldWellsPtrOutput() AnalysisFunnelChartAggregatedFieldWellsPtrOutput
	ToAnalysisFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisFunnelChartAggregatedFieldWellsPtrOutput
}

type analysisFunnelChartAggregatedFieldWellsPtrType AnalysisFunnelChartAggregatedFieldWellsArgs

func AnalysisFunnelChartAggregatedFieldWellsPtr(v *AnalysisFunnelChartAggregatedFieldWellsArgs) AnalysisFunnelChartAggregatedFieldWellsPtrInput {
	return (*analysisFunnelChartAggregatedFieldWellsPtrType)(v)
}

func (*analysisFunnelChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisFunnelChartAggregatedFieldWellsPtrType) ToAnalysisFunnelChartAggregatedFieldWellsPtrOutput() AnalysisFunnelChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisFunnelChartAggregatedFieldWellsPtrType) ToAnalysisFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartAggregatedFieldWellsPtrOutput)
}

type AnalysisFunnelChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisFunnelChartAggregatedFieldWellsOutput) ToAnalysisFunnelChartAggregatedFieldWellsOutput() AnalysisFunnelChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisFunnelChartAggregatedFieldWellsOutput) ToAnalysisFunnelChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisFunnelChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisFunnelChartAggregatedFieldWellsOutput) ToAnalysisFunnelChartAggregatedFieldWellsPtrOutput() AnalysisFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisFunnelChartAggregatedFieldWellsOutput) ToAnalysisFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFunnelChartAggregatedFieldWells) *AnalysisFunnelChartAggregatedFieldWells {
		return &v
	}).(AnalysisFunnelChartAggregatedFieldWellsPtrOutput)
}

func (o AnalysisFunnelChartAggregatedFieldWellsOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisFunnelChartAggregatedFieldWells) []AnalysisDimensionField { return v.Category }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisFunnelChartAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisFunnelChartAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisFunnelChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisFunnelChartAggregatedFieldWellsPtrOutput) ToAnalysisFunnelChartAggregatedFieldWellsPtrOutput() AnalysisFunnelChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisFunnelChartAggregatedFieldWellsPtrOutput) ToAnalysisFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisFunnelChartAggregatedFieldWellsPtrOutput) Elem() AnalysisFunnelChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartAggregatedFieldWells) AnalysisFunnelChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisFunnelChartAggregatedFieldWells
		return ret
	}).(AnalysisFunnelChartAggregatedFieldWellsOutput)
}

func (o AnalysisFunnelChartAggregatedFieldWellsPtrOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisFunnelChartAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisFunnelChartConfiguration struct {
	CategoryLabelOptions *AnalysisChartAxisLabelOptions        `pulumi:"categoryLabelOptions"`
	DataLabelOptions     *AnalysisFunnelChartDataLabelOptions  `pulumi:"dataLabelOptions"`
	FieldWells           *AnalysisFunnelChartFieldWells        `pulumi:"fieldWells"`
	SortConfiguration    *AnalysisFunnelChartSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip              *AnalysisTooltipOptions               `pulumi:"tooltip"`
	ValueLabelOptions    *AnalysisChartAxisLabelOptions        `pulumi:"valueLabelOptions"`
	VisualPalette        *AnalysisVisualPalette                `pulumi:"visualPalette"`
}

// AnalysisFunnelChartConfigurationInput is an input type that accepts AnalysisFunnelChartConfigurationArgs and AnalysisFunnelChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartConfigurationInput` via:
//
//	AnalysisFunnelChartConfigurationArgs{...}
type AnalysisFunnelChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisFunnelChartConfigurationOutput() AnalysisFunnelChartConfigurationOutput
	ToAnalysisFunnelChartConfigurationOutputWithContext(context.Context) AnalysisFunnelChartConfigurationOutput
}

type AnalysisFunnelChartConfigurationArgs struct {
	CategoryLabelOptions AnalysisChartAxisLabelOptionsPtrInput        `pulumi:"categoryLabelOptions"`
	DataLabelOptions     AnalysisFunnelChartDataLabelOptionsPtrInput  `pulumi:"dataLabelOptions"`
	FieldWells           AnalysisFunnelChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	SortConfiguration    AnalysisFunnelChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip              AnalysisTooltipOptionsPtrInput               `pulumi:"tooltip"`
	ValueLabelOptions    AnalysisChartAxisLabelOptionsPtrInput        `pulumi:"valueLabelOptions"`
	VisualPalette        AnalysisVisualPalettePtrInput                `pulumi:"visualPalette"`
}

func (AnalysisFunnelChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartConfiguration)(nil)).Elem()
}

func (i AnalysisFunnelChartConfigurationArgs) ToAnalysisFunnelChartConfigurationOutput() AnalysisFunnelChartConfigurationOutput {
	return i.ToAnalysisFunnelChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartConfigurationArgs) ToAnalysisFunnelChartConfigurationOutputWithContext(ctx context.Context) AnalysisFunnelChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartConfigurationOutput)
}

func (i AnalysisFunnelChartConfigurationArgs) ToAnalysisFunnelChartConfigurationPtrOutput() AnalysisFunnelChartConfigurationPtrOutput {
	return i.ToAnalysisFunnelChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartConfigurationArgs) ToAnalysisFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartConfigurationOutput).ToAnalysisFunnelChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFunnelChartConfigurationPtrInput is an input type that accepts AnalysisFunnelChartConfigurationArgs, AnalysisFunnelChartConfigurationPtr and AnalysisFunnelChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartConfigurationPtrInput` via:
//
//	        AnalysisFunnelChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFunnelChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFunnelChartConfigurationPtrOutput() AnalysisFunnelChartConfigurationPtrOutput
	ToAnalysisFunnelChartConfigurationPtrOutputWithContext(context.Context) AnalysisFunnelChartConfigurationPtrOutput
}

type analysisFunnelChartConfigurationPtrType AnalysisFunnelChartConfigurationArgs

func AnalysisFunnelChartConfigurationPtr(v *AnalysisFunnelChartConfigurationArgs) AnalysisFunnelChartConfigurationPtrInput {
	return (*analysisFunnelChartConfigurationPtrType)(v)
}

func (*analysisFunnelChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartConfiguration)(nil)).Elem()
}

func (i *analysisFunnelChartConfigurationPtrType) ToAnalysisFunnelChartConfigurationPtrOutput() AnalysisFunnelChartConfigurationPtrOutput {
	return i.ToAnalysisFunnelChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFunnelChartConfigurationPtrType) ToAnalysisFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartConfigurationPtrOutput)
}

type AnalysisFunnelChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartConfiguration)(nil)).Elem()
}

func (o AnalysisFunnelChartConfigurationOutput) ToAnalysisFunnelChartConfigurationOutput() AnalysisFunnelChartConfigurationOutput {
	return o
}

func (o AnalysisFunnelChartConfigurationOutput) ToAnalysisFunnelChartConfigurationOutputWithContext(ctx context.Context) AnalysisFunnelChartConfigurationOutput {
	return o
}

func (o AnalysisFunnelChartConfigurationOutput) ToAnalysisFunnelChartConfigurationPtrOutput() AnalysisFunnelChartConfigurationPtrOutput {
	return o.ToAnalysisFunnelChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFunnelChartConfigurationOutput) ToAnalysisFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFunnelChartConfiguration) *AnalysisFunnelChartConfiguration {
		return &v
	}).(AnalysisFunnelChartConfigurationPtrOutput)
}

func (o AnalysisFunnelChartConfigurationOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartConfiguration) *AnalysisChartAxisLabelOptions { return v.CategoryLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartConfigurationOutput) DataLabelOptions() AnalysisFunnelChartDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartConfiguration) *AnalysisFunnelChartDataLabelOptions {
		return v.DataLabelOptions
	}).(AnalysisFunnelChartDataLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartConfigurationOutput) FieldWells() AnalysisFunnelChartFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartConfiguration) *AnalysisFunnelChartFieldWells { return v.FieldWells }).(AnalysisFunnelChartFieldWellsPtrOutput)
}

func (o AnalysisFunnelChartConfigurationOutput) SortConfiguration() AnalysisFunnelChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartConfiguration) *AnalysisFunnelChartSortConfiguration {
		return v.SortConfiguration
	}).(AnalysisFunnelChartSortConfigurationPtrOutput)
}

func (o AnalysisFunnelChartConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisFunnelChartConfigurationOutput) ValueLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartConfiguration) *AnalysisChartAxisLabelOptions { return v.ValueLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

type AnalysisFunnelChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartConfiguration)(nil)).Elem()
}

func (o AnalysisFunnelChartConfigurationPtrOutput) ToAnalysisFunnelChartConfigurationPtrOutput() AnalysisFunnelChartConfigurationPtrOutput {
	return o
}

func (o AnalysisFunnelChartConfigurationPtrOutput) ToAnalysisFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartConfigurationPtrOutput {
	return o
}

func (o AnalysisFunnelChartConfigurationPtrOutput) Elem() AnalysisFunnelChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartConfiguration) AnalysisFunnelChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFunnelChartConfiguration
		return ret
	}).(AnalysisFunnelChartConfigurationOutput)
}

func (o AnalysisFunnelChartConfigurationPtrOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartConfigurationPtrOutput) DataLabelOptions() AnalysisFunnelChartDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartConfiguration) *AnalysisFunnelChartDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabelOptions
	}).(AnalysisFunnelChartDataLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartConfigurationPtrOutput) FieldWells() AnalysisFunnelChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartConfiguration) *AnalysisFunnelChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisFunnelChartFieldWellsPtrOutput)
}

func (o AnalysisFunnelChartConfigurationPtrOutput) SortConfiguration() AnalysisFunnelChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartConfiguration) *AnalysisFunnelChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisFunnelChartSortConfigurationPtrOutput)
}

func (o AnalysisFunnelChartConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisFunnelChartConfigurationPtrOutput) ValueLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ValueLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

type AnalysisFunnelChartDataLabelOptions struct {
	CategoryLabelVisibility *AnalysisVisibility                       `pulumi:"categoryLabelVisibility"`
	LabelColor              *string                                   `pulumi:"labelColor"`
	LabelFontConfiguration  *AnalysisFontConfiguration                `pulumi:"labelFontConfiguration"`
	MeasureDataLabelStyle   *AnalysisFunnelChartMeasureDataLabelStyle `pulumi:"measureDataLabelStyle"`
	MeasureLabelVisibility  *AnalysisVisibility                       `pulumi:"measureLabelVisibility"`
	Position                *AnalysisDataLabelPosition                `pulumi:"position"`
	Visibility              *AnalysisVisibility                       `pulumi:"visibility"`
}

// AnalysisFunnelChartDataLabelOptionsInput is an input type that accepts AnalysisFunnelChartDataLabelOptionsArgs and AnalysisFunnelChartDataLabelOptionsOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartDataLabelOptionsInput` via:
//
//	AnalysisFunnelChartDataLabelOptionsArgs{...}
type AnalysisFunnelChartDataLabelOptionsInput interface {
	pulumi.Input

	ToAnalysisFunnelChartDataLabelOptionsOutput() AnalysisFunnelChartDataLabelOptionsOutput
	ToAnalysisFunnelChartDataLabelOptionsOutputWithContext(context.Context) AnalysisFunnelChartDataLabelOptionsOutput
}

type AnalysisFunnelChartDataLabelOptionsArgs struct {
	CategoryLabelVisibility AnalysisVisibilityPtrInput                       `pulumi:"categoryLabelVisibility"`
	LabelColor              pulumi.StringPtrInput                            `pulumi:"labelColor"`
	LabelFontConfiguration  AnalysisFontConfigurationPtrInput                `pulumi:"labelFontConfiguration"`
	MeasureDataLabelStyle   AnalysisFunnelChartMeasureDataLabelStylePtrInput `pulumi:"measureDataLabelStyle"`
	MeasureLabelVisibility  AnalysisVisibilityPtrInput                       `pulumi:"measureLabelVisibility"`
	Position                AnalysisDataLabelPositionPtrInput                `pulumi:"position"`
	Visibility              AnalysisVisibilityPtrInput                       `pulumi:"visibility"`
}

func (AnalysisFunnelChartDataLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartDataLabelOptions)(nil)).Elem()
}

func (i AnalysisFunnelChartDataLabelOptionsArgs) ToAnalysisFunnelChartDataLabelOptionsOutput() AnalysisFunnelChartDataLabelOptionsOutput {
	return i.ToAnalysisFunnelChartDataLabelOptionsOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartDataLabelOptionsArgs) ToAnalysisFunnelChartDataLabelOptionsOutputWithContext(ctx context.Context) AnalysisFunnelChartDataLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartDataLabelOptionsOutput)
}

func (i AnalysisFunnelChartDataLabelOptionsArgs) ToAnalysisFunnelChartDataLabelOptionsPtrOutput() AnalysisFunnelChartDataLabelOptionsPtrOutput {
	return i.ToAnalysisFunnelChartDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartDataLabelOptionsArgs) ToAnalysisFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartDataLabelOptionsOutput).ToAnalysisFunnelChartDataLabelOptionsPtrOutputWithContext(ctx)
}

// AnalysisFunnelChartDataLabelOptionsPtrInput is an input type that accepts AnalysisFunnelChartDataLabelOptionsArgs, AnalysisFunnelChartDataLabelOptionsPtr and AnalysisFunnelChartDataLabelOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartDataLabelOptionsPtrInput` via:
//
//	        AnalysisFunnelChartDataLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisFunnelChartDataLabelOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisFunnelChartDataLabelOptionsPtrOutput() AnalysisFunnelChartDataLabelOptionsPtrOutput
	ToAnalysisFunnelChartDataLabelOptionsPtrOutputWithContext(context.Context) AnalysisFunnelChartDataLabelOptionsPtrOutput
}

type analysisFunnelChartDataLabelOptionsPtrType AnalysisFunnelChartDataLabelOptionsArgs

func AnalysisFunnelChartDataLabelOptionsPtr(v *AnalysisFunnelChartDataLabelOptionsArgs) AnalysisFunnelChartDataLabelOptionsPtrInput {
	return (*analysisFunnelChartDataLabelOptionsPtrType)(v)
}

func (*analysisFunnelChartDataLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartDataLabelOptions)(nil)).Elem()
}

func (i *analysisFunnelChartDataLabelOptionsPtrType) ToAnalysisFunnelChartDataLabelOptionsPtrOutput() AnalysisFunnelChartDataLabelOptionsPtrOutput {
	return i.ToAnalysisFunnelChartDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisFunnelChartDataLabelOptionsPtrType) ToAnalysisFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartDataLabelOptionsPtrOutput)
}

type AnalysisFunnelChartDataLabelOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartDataLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartDataLabelOptions)(nil)).Elem()
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) ToAnalysisFunnelChartDataLabelOptionsOutput() AnalysisFunnelChartDataLabelOptionsOutput {
	return o
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) ToAnalysisFunnelChartDataLabelOptionsOutputWithContext(ctx context.Context) AnalysisFunnelChartDataLabelOptionsOutput {
	return o
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) ToAnalysisFunnelChartDataLabelOptionsPtrOutput() AnalysisFunnelChartDataLabelOptionsPtrOutput {
	return o.ToAnalysisFunnelChartDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) ToAnalysisFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartDataLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFunnelChartDataLabelOptions) *AnalysisFunnelChartDataLabelOptions {
		return &v
	}).(AnalysisFunnelChartDataLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) CategoryLabelVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartDataLabelOptions) *AnalysisVisibility { return v.CategoryLabelVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartDataLabelOptions) *string { return v.LabelColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) LabelFontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartDataLabelOptions) *AnalysisFontConfiguration {
		return v.LabelFontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) MeasureDataLabelStyle() AnalysisFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartDataLabelOptions) *AnalysisFunnelChartMeasureDataLabelStyle {
		return v.MeasureDataLabelStyle
	}).(AnalysisFunnelChartMeasureDataLabelStylePtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) MeasureLabelVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartDataLabelOptions) *AnalysisVisibility { return v.MeasureLabelVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) Position() AnalysisDataLabelPositionPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartDataLabelOptions) *AnalysisDataLabelPosition { return v.Position }).(AnalysisDataLabelPositionPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartDataLabelOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisFunnelChartDataLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartDataLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartDataLabelOptions)(nil)).Elem()
}

func (o AnalysisFunnelChartDataLabelOptionsPtrOutput) ToAnalysisFunnelChartDataLabelOptionsPtrOutput() AnalysisFunnelChartDataLabelOptionsPtrOutput {
	return o
}

func (o AnalysisFunnelChartDataLabelOptionsPtrOutput) ToAnalysisFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartDataLabelOptionsPtrOutput {
	return o
}

func (o AnalysisFunnelChartDataLabelOptionsPtrOutput) Elem() AnalysisFunnelChartDataLabelOptionsOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartDataLabelOptions) AnalysisFunnelChartDataLabelOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisFunnelChartDataLabelOptions
		return ret
	}).(AnalysisFunnelChartDataLabelOptionsOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsPtrOutput) CategoryLabelVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartDataLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.CategoryLabelVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsPtrOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartDataLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.LabelColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsPtrOutput) LabelFontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartDataLabelOptions) *AnalysisFontConfiguration {
		if v == nil {
			return nil
		}
		return v.LabelFontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsPtrOutput) MeasureDataLabelStyle() AnalysisFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartDataLabelOptions) *AnalysisFunnelChartMeasureDataLabelStyle {
		if v == nil {
			return nil
		}
		return v.MeasureDataLabelStyle
	}).(AnalysisFunnelChartMeasureDataLabelStylePtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsPtrOutput) MeasureLabelVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartDataLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.MeasureLabelVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsPtrOutput) Position() AnalysisDataLabelPositionPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartDataLabelOptions) *AnalysisDataLabelPosition {
		if v == nil {
			return nil
		}
		return v.Position
	}).(AnalysisDataLabelPositionPtrOutput)
}

func (o AnalysisFunnelChartDataLabelOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartDataLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisFunnelChartFieldWells struct {
	FunnelChartAggregatedFieldWells *AnalysisFunnelChartAggregatedFieldWells `pulumi:"funnelChartAggregatedFieldWells"`
}

// AnalysisFunnelChartFieldWellsInput is an input type that accepts AnalysisFunnelChartFieldWellsArgs and AnalysisFunnelChartFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartFieldWellsInput` via:
//
//	AnalysisFunnelChartFieldWellsArgs{...}
type AnalysisFunnelChartFieldWellsInput interface {
	pulumi.Input

	ToAnalysisFunnelChartFieldWellsOutput() AnalysisFunnelChartFieldWellsOutput
	ToAnalysisFunnelChartFieldWellsOutputWithContext(context.Context) AnalysisFunnelChartFieldWellsOutput
}

type AnalysisFunnelChartFieldWellsArgs struct {
	FunnelChartAggregatedFieldWells AnalysisFunnelChartAggregatedFieldWellsPtrInput `pulumi:"funnelChartAggregatedFieldWells"`
}

func (AnalysisFunnelChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartFieldWells)(nil)).Elem()
}

func (i AnalysisFunnelChartFieldWellsArgs) ToAnalysisFunnelChartFieldWellsOutput() AnalysisFunnelChartFieldWellsOutput {
	return i.ToAnalysisFunnelChartFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartFieldWellsArgs) ToAnalysisFunnelChartFieldWellsOutputWithContext(ctx context.Context) AnalysisFunnelChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartFieldWellsOutput)
}

func (i AnalysisFunnelChartFieldWellsArgs) ToAnalysisFunnelChartFieldWellsPtrOutput() AnalysisFunnelChartFieldWellsPtrOutput {
	return i.ToAnalysisFunnelChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartFieldWellsArgs) ToAnalysisFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartFieldWellsOutput).ToAnalysisFunnelChartFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisFunnelChartFieldWellsPtrInput is an input type that accepts AnalysisFunnelChartFieldWellsArgs, AnalysisFunnelChartFieldWellsPtr and AnalysisFunnelChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartFieldWellsPtrInput` via:
//
//	        AnalysisFunnelChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisFunnelChartFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisFunnelChartFieldWellsPtrOutput() AnalysisFunnelChartFieldWellsPtrOutput
	ToAnalysisFunnelChartFieldWellsPtrOutputWithContext(context.Context) AnalysisFunnelChartFieldWellsPtrOutput
}

type analysisFunnelChartFieldWellsPtrType AnalysisFunnelChartFieldWellsArgs

func AnalysisFunnelChartFieldWellsPtr(v *AnalysisFunnelChartFieldWellsArgs) AnalysisFunnelChartFieldWellsPtrInput {
	return (*analysisFunnelChartFieldWellsPtrType)(v)
}

func (*analysisFunnelChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartFieldWells)(nil)).Elem()
}

func (i *analysisFunnelChartFieldWellsPtrType) ToAnalysisFunnelChartFieldWellsPtrOutput() AnalysisFunnelChartFieldWellsPtrOutput {
	return i.ToAnalysisFunnelChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisFunnelChartFieldWellsPtrType) ToAnalysisFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartFieldWellsPtrOutput)
}

type AnalysisFunnelChartFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartFieldWells)(nil)).Elem()
}

func (o AnalysisFunnelChartFieldWellsOutput) ToAnalysisFunnelChartFieldWellsOutput() AnalysisFunnelChartFieldWellsOutput {
	return o
}

func (o AnalysisFunnelChartFieldWellsOutput) ToAnalysisFunnelChartFieldWellsOutputWithContext(ctx context.Context) AnalysisFunnelChartFieldWellsOutput {
	return o
}

func (o AnalysisFunnelChartFieldWellsOutput) ToAnalysisFunnelChartFieldWellsPtrOutput() AnalysisFunnelChartFieldWellsPtrOutput {
	return o.ToAnalysisFunnelChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisFunnelChartFieldWellsOutput) ToAnalysisFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFunnelChartFieldWells) *AnalysisFunnelChartFieldWells {
		return &v
	}).(AnalysisFunnelChartFieldWellsPtrOutput)
}

func (o AnalysisFunnelChartFieldWellsOutput) FunnelChartAggregatedFieldWells() AnalysisFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartFieldWells) *AnalysisFunnelChartAggregatedFieldWells {
		return v.FunnelChartAggregatedFieldWells
	}).(AnalysisFunnelChartAggregatedFieldWellsPtrOutput)
}

type AnalysisFunnelChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartFieldWells)(nil)).Elem()
}

func (o AnalysisFunnelChartFieldWellsPtrOutput) ToAnalysisFunnelChartFieldWellsPtrOutput() AnalysisFunnelChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisFunnelChartFieldWellsPtrOutput) ToAnalysisFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisFunnelChartFieldWellsPtrOutput) Elem() AnalysisFunnelChartFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartFieldWells) AnalysisFunnelChartFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisFunnelChartFieldWells
		return ret
	}).(AnalysisFunnelChartFieldWellsOutput)
}

func (o AnalysisFunnelChartFieldWellsPtrOutput) FunnelChartAggregatedFieldWells() AnalysisFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartFieldWells) *AnalysisFunnelChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.FunnelChartAggregatedFieldWells
	}).(AnalysisFunnelChartAggregatedFieldWellsPtrOutput)
}

type AnalysisFunnelChartSortConfiguration struct {
	CategoryItemsLimit *AnalysisItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []AnalysisFieldSortOptions       `pulumi:"categorySort"`
}

// AnalysisFunnelChartSortConfigurationInput is an input type that accepts AnalysisFunnelChartSortConfigurationArgs and AnalysisFunnelChartSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartSortConfigurationInput` via:
//
//	AnalysisFunnelChartSortConfigurationArgs{...}
type AnalysisFunnelChartSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisFunnelChartSortConfigurationOutput() AnalysisFunnelChartSortConfigurationOutput
	ToAnalysisFunnelChartSortConfigurationOutputWithContext(context.Context) AnalysisFunnelChartSortConfigurationOutput
}

type AnalysisFunnelChartSortConfigurationArgs struct {
	CategoryItemsLimit AnalysisItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       AnalysisFieldSortOptionsArrayInput      `pulumi:"categorySort"`
}

func (AnalysisFunnelChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartSortConfiguration)(nil)).Elem()
}

func (i AnalysisFunnelChartSortConfigurationArgs) ToAnalysisFunnelChartSortConfigurationOutput() AnalysisFunnelChartSortConfigurationOutput {
	return i.ToAnalysisFunnelChartSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartSortConfigurationArgs) ToAnalysisFunnelChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisFunnelChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartSortConfigurationOutput)
}

func (i AnalysisFunnelChartSortConfigurationArgs) ToAnalysisFunnelChartSortConfigurationPtrOutput() AnalysisFunnelChartSortConfigurationPtrOutput {
	return i.ToAnalysisFunnelChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartSortConfigurationArgs) ToAnalysisFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartSortConfigurationOutput).ToAnalysisFunnelChartSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisFunnelChartSortConfigurationPtrInput is an input type that accepts AnalysisFunnelChartSortConfigurationArgs, AnalysisFunnelChartSortConfigurationPtr and AnalysisFunnelChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartSortConfigurationPtrInput` via:
//
//	        AnalysisFunnelChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisFunnelChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisFunnelChartSortConfigurationPtrOutput() AnalysisFunnelChartSortConfigurationPtrOutput
	ToAnalysisFunnelChartSortConfigurationPtrOutputWithContext(context.Context) AnalysisFunnelChartSortConfigurationPtrOutput
}

type analysisFunnelChartSortConfigurationPtrType AnalysisFunnelChartSortConfigurationArgs

func AnalysisFunnelChartSortConfigurationPtr(v *AnalysisFunnelChartSortConfigurationArgs) AnalysisFunnelChartSortConfigurationPtrInput {
	return (*analysisFunnelChartSortConfigurationPtrType)(v)
}

func (*analysisFunnelChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartSortConfiguration)(nil)).Elem()
}

func (i *analysisFunnelChartSortConfigurationPtrType) ToAnalysisFunnelChartSortConfigurationPtrOutput() AnalysisFunnelChartSortConfigurationPtrOutput {
	return i.ToAnalysisFunnelChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisFunnelChartSortConfigurationPtrType) ToAnalysisFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartSortConfigurationPtrOutput)
}

type AnalysisFunnelChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisFunnelChartSortConfigurationOutput) ToAnalysisFunnelChartSortConfigurationOutput() AnalysisFunnelChartSortConfigurationOutput {
	return o
}

func (o AnalysisFunnelChartSortConfigurationOutput) ToAnalysisFunnelChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisFunnelChartSortConfigurationOutput {
	return o
}

func (o AnalysisFunnelChartSortConfigurationOutput) ToAnalysisFunnelChartSortConfigurationPtrOutput() AnalysisFunnelChartSortConfigurationPtrOutput {
	return o.ToAnalysisFunnelChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisFunnelChartSortConfigurationOutput) ToAnalysisFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFunnelChartSortConfiguration) *AnalysisFunnelChartSortConfiguration {
		return &v
	}).(AnalysisFunnelChartSortConfigurationPtrOutput)
}

func (o AnalysisFunnelChartSortConfigurationOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisFunnelChartSortConfigurationOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisFunnelChartSortConfiguration) []AnalysisFieldSortOptions { return v.CategorySort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisFunnelChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisFunnelChartSortConfigurationPtrOutput) ToAnalysisFunnelChartSortConfigurationPtrOutput() AnalysisFunnelChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisFunnelChartSortConfigurationPtrOutput) ToAnalysisFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisFunnelChartSortConfigurationPtrOutput) Elem() AnalysisFunnelChartSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartSortConfiguration) AnalysisFunnelChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisFunnelChartSortConfiguration
		return ret
	}).(AnalysisFunnelChartSortConfigurationOutput)
}

func (o AnalysisFunnelChartSortConfigurationPtrOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisFunnelChartSortConfigurationPtrOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisFunnelChartVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisFunnelChartConfiguration   `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisFunnelChartVisualInput is an input type that accepts AnalysisFunnelChartVisualArgs and AnalysisFunnelChartVisualOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartVisualInput` via:
//
//	AnalysisFunnelChartVisualArgs{...}
type AnalysisFunnelChartVisualInput interface {
	pulumi.Input

	ToAnalysisFunnelChartVisualOutput() AnalysisFunnelChartVisualOutput
	ToAnalysisFunnelChartVisualOutputWithContext(context.Context) AnalysisFunnelChartVisualOutput
}

type AnalysisFunnelChartVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisFunnelChartConfigurationPtrInput   `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisFunnelChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartVisual)(nil)).Elem()
}

func (i AnalysisFunnelChartVisualArgs) ToAnalysisFunnelChartVisualOutput() AnalysisFunnelChartVisualOutput {
	return i.ToAnalysisFunnelChartVisualOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartVisualArgs) ToAnalysisFunnelChartVisualOutputWithContext(ctx context.Context) AnalysisFunnelChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartVisualOutput)
}

func (i AnalysisFunnelChartVisualArgs) ToAnalysisFunnelChartVisualPtrOutput() AnalysisFunnelChartVisualPtrOutput {
	return i.ToAnalysisFunnelChartVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisFunnelChartVisualArgs) ToAnalysisFunnelChartVisualPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartVisualOutput).ToAnalysisFunnelChartVisualPtrOutputWithContext(ctx)
}

// AnalysisFunnelChartVisualPtrInput is an input type that accepts AnalysisFunnelChartVisualArgs, AnalysisFunnelChartVisualPtr and AnalysisFunnelChartVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisFunnelChartVisualPtrInput` via:
//
//	        AnalysisFunnelChartVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisFunnelChartVisualPtrInput interface {
	pulumi.Input

	ToAnalysisFunnelChartVisualPtrOutput() AnalysisFunnelChartVisualPtrOutput
	ToAnalysisFunnelChartVisualPtrOutputWithContext(context.Context) AnalysisFunnelChartVisualPtrOutput
}

type analysisFunnelChartVisualPtrType AnalysisFunnelChartVisualArgs

func AnalysisFunnelChartVisualPtr(v *AnalysisFunnelChartVisualArgs) AnalysisFunnelChartVisualPtrInput {
	return (*analysisFunnelChartVisualPtrType)(v)
}

func (*analysisFunnelChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartVisual)(nil)).Elem()
}

func (i *analysisFunnelChartVisualPtrType) ToAnalysisFunnelChartVisualPtrOutput() AnalysisFunnelChartVisualPtrOutput {
	return i.ToAnalysisFunnelChartVisualPtrOutputWithContext(context.Background())
}

func (i *analysisFunnelChartVisualPtrType) ToAnalysisFunnelChartVisualPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisFunnelChartVisualPtrOutput)
}

type AnalysisFunnelChartVisualOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartVisual)(nil)).Elem()
}

func (o AnalysisFunnelChartVisualOutput) ToAnalysisFunnelChartVisualOutput() AnalysisFunnelChartVisualOutput {
	return o
}

func (o AnalysisFunnelChartVisualOutput) ToAnalysisFunnelChartVisualOutputWithContext(ctx context.Context) AnalysisFunnelChartVisualOutput {
	return o
}

func (o AnalysisFunnelChartVisualOutput) ToAnalysisFunnelChartVisualPtrOutput() AnalysisFunnelChartVisualPtrOutput {
	return o.ToAnalysisFunnelChartVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisFunnelChartVisualOutput) ToAnalysisFunnelChartVisualPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFunnelChartVisual) *AnalysisFunnelChartVisual {
		return &v
	}).(AnalysisFunnelChartVisualPtrOutput)
}

func (o AnalysisFunnelChartVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisFunnelChartVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisFunnelChartVisualOutput) ChartConfiguration() AnalysisFunnelChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartVisual) *AnalysisFunnelChartConfiguration { return v.ChartConfiguration }).(AnalysisFunnelChartConfigurationPtrOutput)
}

func (o AnalysisFunnelChartVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisFunnelChartVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisFunnelChartVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisFunnelChartVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisFunnelChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisFunnelChartVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartVisual)(nil)).Elem()
}

func (o AnalysisFunnelChartVisualPtrOutput) ToAnalysisFunnelChartVisualPtrOutput() AnalysisFunnelChartVisualPtrOutput {
	return o
}

func (o AnalysisFunnelChartVisualPtrOutput) ToAnalysisFunnelChartVisualPtrOutputWithContext(ctx context.Context) AnalysisFunnelChartVisualPtrOutput {
	return o
}

func (o AnalysisFunnelChartVisualPtrOutput) Elem() AnalysisFunnelChartVisualOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartVisual) AnalysisFunnelChartVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisFunnelChartVisual
		return ret
	}).(AnalysisFunnelChartVisualOutput)
}

func (o AnalysisFunnelChartVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisFunnelChartVisualPtrOutput) ChartConfiguration() AnalysisFunnelChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartVisual) *AnalysisFunnelChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisFunnelChartConfigurationPtrOutput)
}

func (o AnalysisFunnelChartVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisFunnelChartVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisFunnelChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisGaugeChartArcConditionalFormatting struct {
	ForegroundColor *AnalysisConditionalFormattingColor `pulumi:"foregroundColor"`
}

// AnalysisGaugeChartArcConditionalFormattingInput is an input type that accepts AnalysisGaugeChartArcConditionalFormattingArgs and AnalysisGaugeChartArcConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartArcConditionalFormattingInput` via:
//
//	AnalysisGaugeChartArcConditionalFormattingArgs{...}
type AnalysisGaugeChartArcConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisGaugeChartArcConditionalFormattingOutput() AnalysisGaugeChartArcConditionalFormattingOutput
	ToAnalysisGaugeChartArcConditionalFormattingOutputWithContext(context.Context) AnalysisGaugeChartArcConditionalFormattingOutput
}

type AnalysisGaugeChartArcConditionalFormattingArgs struct {
	ForegroundColor AnalysisConditionalFormattingColorPtrInput `pulumi:"foregroundColor"`
}

func (AnalysisGaugeChartArcConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (i AnalysisGaugeChartArcConditionalFormattingArgs) ToAnalysisGaugeChartArcConditionalFormattingOutput() AnalysisGaugeChartArcConditionalFormattingOutput {
	return i.ToAnalysisGaugeChartArcConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartArcConditionalFormattingArgs) ToAnalysisGaugeChartArcConditionalFormattingOutputWithContext(ctx context.Context) AnalysisGaugeChartArcConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartArcConditionalFormattingOutput)
}

func (i AnalysisGaugeChartArcConditionalFormattingArgs) ToAnalysisGaugeChartArcConditionalFormattingPtrOutput() AnalysisGaugeChartArcConditionalFormattingPtrOutput {
	return i.ToAnalysisGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartArcConditionalFormattingArgs) ToAnalysisGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartArcConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartArcConditionalFormattingOutput).ToAnalysisGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisGaugeChartArcConditionalFormattingPtrInput is an input type that accepts AnalysisGaugeChartArcConditionalFormattingArgs, AnalysisGaugeChartArcConditionalFormattingPtr and AnalysisGaugeChartArcConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartArcConditionalFormattingPtrInput` via:
//
//	        AnalysisGaugeChartArcConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisGaugeChartArcConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisGaugeChartArcConditionalFormattingPtrOutput() AnalysisGaugeChartArcConditionalFormattingPtrOutput
	ToAnalysisGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Context) AnalysisGaugeChartArcConditionalFormattingPtrOutput
}

type analysisGaugeChartArcConditionalFormattingPtrType AnalysisGaugeChartArcConditionalFormattingArgs

func AnalysisGaugeChartArcConditionalFormattingPtr(v *AnalysisGaugeChartArcConditionalFormattingArgs) AnalysisGaugeChartArcConditionalFormattingPtrInput {
	return (*analysisGaugeChartArcConditionalFormattingPtrType)(v)
}

func (*analysisGaugeChartArcConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (i *analysisGaugeChartArcConditionalFormattingPtrType) ToAnalysisGaugeChartArcConditionalFormattingPtrOutput() AnalysisGaugeChartArcConditionalFormattingPtrOutput {
	return i.ToAnalysisGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisGaugeChartArcConditionalFormattingPtrType) ToAnalysisGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartArcConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartArcConditionalFormattingPtrOutput)
}

type AnalysisGaugeChartArcConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartArcConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (o AnalysisGaugeChartArcConditionalFormattingOutput) ToAnalysisGaugeChartArcConditionalFormattingOutput() AnalysisGaugeChartArcConditionalFormattingOutput {
	return o
}

func (o AnalysisGaugeChartArcConditionalFormattingOutput) ToAnalysisGaugeChartArcConditionalFormattingOutputWithContext(ctx context.Context) AnalysisGaugeChartArcConditionalFormattingOutput {
	return o
}

func (o AnalysisGaugeChartArcConditionalFormattingOutput) ToAnalysisGaugeChartArcConditionalFormattingPtrOutput() AnalysisGaugeChartArcConditionalFormattingPtrOutput {
	return o.ToAnalysisGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisGaugeChartArcConditionalFormattingOutput) ToAnalysisGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartArcConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGaugeChartArcConditionalFormatting) *AnalysisGaugeChartArcConditionalFormatting {
		return &v
	}).(AnalysisGaugeChartArcConditionalFormattingPtrOutput)
}

func (o AnalysisGaugeChartArcConditionalFormattingOutput) ForegroundColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartArcConditionalFormatting) *AnalysisConditionalFormattingColor {
		return v.ForegroundColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisGaugeChartArcConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartArcConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (o AnalysisGaugeChartArcConditionalFormattingPtrOutput) ToAnalysisGaugeChartArcConditionalFormattingPtrOutput() AnalysisGaugeChartArcConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisGaugeChartArcConditionalFormattingPtrOutput) ToAnalysisGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartArcConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisGaugeChartArcConditionalFormattingPtrOutput) Elem() AnalysisGaugeChartArcConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartArcConditionalFormatting) AnalysisGaugeChartArcConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisGaugeChartArcConditionalFormatting
		return ret
	}).(AnalysisGaugeChartArcConditionalFormattingOutput)
}

func (o AnalysisGaugeChartArcConditionalFormattingPtrOutput) ForegroundColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartArcConditionalFormatting) *AnalysisConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.ForegroundColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisGaugeChartConditionalFormatting struct {
	ConditionalFormattingOptions []AnalysisGaugeChartConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// AnalysisGaugeChartConditionalFormattingInput is an input type that accepts AnalysisGaugeChartConditionalFormattingArgs and AnalysisGaugeChartConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartConditionalFormattingInput` via:
//
//	AnalysisGaugeChartConditionalFormattingArgs{...}
type AnalysisGaugeChartConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisGaugeChartConditionalFormattingOutput() AnalysisGaugeChartConditionalFormattingOutput
	ToAnalysisGaugeChartConditionalFormattingOutputWithContext(context.Context) AnalysisGaugeChartConditionalFormattingOutput
}

type AnalysisGaugeChartConditionalFormattingArgs struct {
	ConditionalFormattingOptions AnalysisGaugeChartConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (AnalysisGaugeChartConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartConditionalFormatting)(nil)).Elem()
}

func (i AnalysisGaugeChartConditionalFormattingArgs) ToAnalysisGaugeChartConditionalFormattingOutput() AnalysisGaugeChartConditionalFormattingOutput {
	return i.ToAnalysisGaugeChartConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartConditionalFormattingArgs) ToAnalysisGaugeChartConditionalFormattingOutputWithContext(ctx context.Context) AnalysisGaugeChartConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartConditionalFormattingOutput)
}

func (i AnalysisGaugeChartConditionalFormattingArgs) ToAnalysisGaugeChartConditionalFormattingPtrOutput() AnalysisGaugeChartConditionalFormattingPtrOutput {
	return i.ToAnalysisGaugeChartConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartConditionalFormattingArgs) ToAnalysisGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartConditionalFormattingOutput).ToAnalysisGaugeChartConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisGaugeChartConditionalFormattingPtrInput is an input type that accepts AnalysisGaugeChartConditionalFormattingArgs, AnalysisGaugeChartConditionalFormattingPtr and AnalysisGaugeChartConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartConditionalFormattingPtrInput` via:
//
//	        AnalysisGaugeChartConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisGaugeChartConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisGaugeChartConditionalFormattingPtrOutput() AnalysisGaugeChartConditionalFormattingPtrOutput
	ToAnalysisGaugeChartConditionalFormattingPtrOutputWithContext(context.Context) AnalysisGaugeChartConditionalFormattingPtrOutput
}

type analysisGaugeChartConditionalFormattingPtrType AnalysisGaugeChartConditionalFormattingArgs

func AnalysisGaugeChartConditionalFormattingPtr(v *AnalysisGaugeChartConditionalFormattingArgs) AnalysisGaugeChartConditionalFormattingPtrInput {
	return (*analysisGaugeChartConditionalFormattingPtrType)(v)
}

func (*analysisGaugeChartConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartConditionalFormatting)(nil)).Elem()
}

func (i *analysisGaugeChartConditionalFormattingPtrType) ToAnalysisGaugeChartConditionalFormattingPtrOutput() AnalysisGaugeChartConditionalFormattingPtrOutput {
	return i.ToAnalysisGaugeChartConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisGaugeChartConditionalFormattingPtrType) ToAnalysisGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartConditionalFormattingPtrOutput)
}

type AnalysisGaugeChartConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartConditionalFormatting)(nil)).Elem()
}

func (o AnalysisGaugeChartConditionalFormattingOutput) ToAnalysisGaugeChartConditionalFormattingOutput() AnalysisGaugeChartConditionalFormattingOutput {
	return o
}

func (o AnalysisGaugeChartConditionalFormattingOutput) ToAnalysisGaugeChartConditionalFormattingOutputWithContext(ctx context.Context) AnalysisGaugeChartConditionalFormattingOutput {
	return o
}

func (o AnalysisGaugeChartConditionalFormattingOutput) ToAnalysisGaugeChartConditionalFormattingPtrOutput() AnalysisGaugeChartConditionalFormattingPtrOutput {
	return o.ToAnalysisGaugeChartConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisGaugeChartConditionalFormattingOutput) ToAnalysisGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGaugeChartConditionalFormatting) *AnalysisGaugeChartConditionalFormatting {
		return &v
	}).(AnalysisGaugeChartConditionalFormattingPtrOutput)
}

func (o AnalysisGaugeChartConditionalFormattingOutput) ConditionalFormattingOptions() AnalysisGaugeChartConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v AnalysisGaugeChartConditionalFormatting) []AnalysisGaugeChartConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(AnalysisGaugeChartConditionalFormattingOptionArrayOutput)
}

type AnalysisGaugeChartConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartConditionalFormatting)(nil)).Elem()
}

func (o AnalysisGaugeChartConditionalFormattingPtrOutput) ToAnalysisGaugeChartConditionalFormattingPtrOutput() AnalysisGaugeChartConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisGaugeChartConditionalFormattingPtrOutput) ToAnalysisGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisGaugeChartConditionalFormattingPtrOutput) Elem() AnalysisGaugeChartConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartConditionalFormatting) AnalysisGaugeChartConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisGaugeChartConditionalFormatting
		return ret
	}).(AnalysisGaugeChartConditionalFormattingOutput)
}

func (o AnalysisGaugeChartConditionalFormattingPtrOutput) ConditionalFormattingOptions() AnalysisGaugeChartConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartConditionalFormatting) []AnalysisGaugeChartConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(AnalysisGaugeChartConditionalFormattingOptionArrayOutput)
}

type AnalysisGaugeChartConditionalFormattingOption struct {
	Arc          *AnalysisGaugeChartArcConditionalFormatting          `pulumi:"arc"`
	PrimaryValue *AnalysisGaugeChartPrimaryValueConditionalFormatting `pulumi:"primaryValue"`
}

// AnalysisGaugeChartConditionalFormattingOptionInput is an input type that accepts AnalysisGaugeChartConditionalFormattingOptionArgs and AnalysisGaugeChartConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartConditionalFormattingOptionInput` via:
//
//	AnalysisGaugeChartConditionalFormattingOptionArgs{...}
type AnalysisGaugeChartConditionalFormattingOptionInput interface {
	pulumi.Input

	ToAnalysisGaugeChartConditionalFormattingOptionOutput() AnalysisGaugeChartConditionalFormattingOptionOutput
	ToAnalysisGaugeChartConditionalFormattingOptionOutputWithContext(context.Context) AnalysisGaugeChartConditionalFormattingOptionOutput
}

type AnalysisGaugeChartConditionalFormattingOptionArgs struct {
	Arc          AnalysisGaugeChartArcConditionalFormattingPtrInput          `pulumi:"arc"`
	PrimaryValue AnalysisGaugeChartPrimaryValueConditionalFormattingPtrInput `pulumi:"primaryValue"`
}

func (AnalysisGaugeChartConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (i AnalysisGaugeChartConditionalFormattingOptionArgs) ToAnalysisGaugeChartConditionalFormattingOptionOutput() AnalysisGaugeChartConditionalFormattingOptionOutput {
	return i.ToAnalysisGaugeChartConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartConditionalFormattingOptionArgs) ToAnalysisGaugeChartConditionalFormattingOptionOutputWithContext(ctx context.Context) AnalysisGaugeChartConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartConditionalFormattingOptionOutput)
}

// AnalysisGaugeChartConditionalFormattingOptionArrayInput is an input type that accepts AnalysisGaugeChartConditionalFormattingOptionArray and AnalysisGaugeChartConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartConditionalFormattingOptionArrayInput` via:
//
//	AnalysisGaugeChartConditionalFormattingOptionArray{ AnalysisGaugeChartConditionalFormattingOptionArgs{...} }
type AnalysisGaugeChartConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToAnalysisGaugeChartConditionalFormattingOptionArrayOutput() AnalysisGaugeChartConditionalFormattingOptionArrayOutput
	ToAnalysisGaugeChartConditionalFormattingOptionArrayOutputWithContext(context.Context) AnalysisGaugeChartConditionalFormattingOptionArrayOutput
}

type AnalysisGaugeChartConditionalFormattingOptionArray []AnalysisGaugeChartConditionalFormattingOptionInput

func (AnalysisGaugeChartConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (i AnalysisGaugeChartConditionalFormattingOptionArray) ToAnalysisGaugeChartConditionalFormattingOptionArrayOutput() AnalysisGaugeChartConditionalFormattingOptionArrayOutput {
	return i.ToAnalysisGaugeChartConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartConditionalFormattingOptionArray) ToAnalysisGaugeChartConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) AnalysisGaugeChartConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartConditionalFormattingOptionArrayOutput)
}

type AnalysisGaugeChartConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (o AnalysisGaugeChartConditionalFormattingOptionOutput) ToAnalysisGaugeChartConditionalFormattingOptionOutput() AnalysisGaugeChartConditionalFormattingOptionOutput {
	return o
}

func (o AnalysisGaugeChartConditionalFormattingOptionOutput) ToAnalysisGaugeChartConditionalFormattingOptionOutputWithContext(ctx context.Context) AnalysisGaugeChartConditionalFormattingOptionOutput {
	return o
}

func (o AnalysisGaugeChartConditionalFormattingOptionOutput) Arc() AnalysisGaugeChartArcConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartConditionalFormattingOption) *AnalysisGaugeChartArcConditionalFormatting {
		return v.Arc
	}).(AnalysisGaugeChartArcConditionalFormattingPtrOutput)
}

func (o AnalysisGaugeChartConditionalFormattingOptionOutput) PrimaryValue() AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartConditionalFormattingOption) *AnalysisGaugeChartPrimaryValueConditionalFormatting {
		return v.PrimaryValue
	}).(AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput)
}

type AnalysisGaugeChartConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (o AnalysisGaugeChartConditionalFormattingOptionArrayOutput) ToAnalysisGaugeChartConditionalFormattingOptionArrayOutput() AnalysisGaugeChartConditionalFormattingOptionArrayOutput {
	return o
}

func (o AnalysisGaugeChartConditionalFormattingOptionArrayOutput) ToAnalysisGaugeChartConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) AnalysisGaugeChartConditionalFormattingOptionArrayOutput {
	return o
}

func (o AnalysisGaugeChartConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) AnalysisGaugeChartConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisGaugeChartConditionalFormattingOption {
		return vs[0].([]AnalysisGaugeChartConditionalFormattingOption)[vs[1].(int)]
	}).(AnalysisGaugeChartConditionalFormattingOptionOutput)
}

type AnalysisGaugeChartConfiguration struct {
	DataLabels        *AnalysisDataLabelOptions     `pulumi:"dataLabels"`
	FieldWells        *AnalysisGaugeChartFieldWells `pulumi:"fieldWells"`
	GaugeChartOptions *AnalysisGaugeChartOptions    `pulumi:"gaugeChartOptions"`
	TooltipOptions    *AnalysisTooltipOptions       `pulumi:"tooltipOptions"`
	VisualPalette     *AnalysisVisualPalette        `pulumi:"visualPalette"`
}

// AnalysisGaugeChartConfigurationInput is an input type that accepts AnalysisGaugeChartConfigurationArgs and AnalysisGaugeChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartConfigurationInput` via:
//
//	AnalysisGaugeChartConfigurationArgs{...}
type AnalysisGaugeChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisGaugeChartConfigurationOutput() AnalysisGaugeChartConfigurationOutput
	ToAnalysisGaugeChartConfigurationOutputWithContext(context.Context) AnalysisGaugeChartConfigurationOutput
}

type AnalysisGaugeChartConfigurationArgs struct {
	DataLabels        AnalysisDataLabelOptionsPtrInput     `pulumi:"dataLabels"`
	FieldWells        AnalysisGaugeChartFieldWellsPtrInput `pulumi:"fieldWells"`
	GaugeChartOptions AnalysisGaugeChartOptionsPtrInput    `pulumi:"gaugeChartOptions"`
	TooltipOptions    AnalysisTooltipOptionsPtrInput       `pulumi:"tooltipOptions"`
	VisualPalette     AnalysisVisualPalettePtrInput        `pulumi:"visualPalette"`
}

func (AnalysisGaugeChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartConfiguration)(nil)).Elem()
}

func (i AnalysisGaugeChartConfigurationArgs) ToAnalysisGaugeChartConfigurationOutput() AnalysisGaugeChartConfigurationOutput {
	return i.ToAnalysisGaugeChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartConfigurationArgs) ToAnalysisGaugeChartConfigurationOutputWithContext(ctx context.Context) AnalysisGaugeChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartConfigurationOutput)
}

func (i AnalysisGaugeChartConfigurationArgs) ToAnalysisGaugeChartConfigurationPtrOutput() AnalysisGaugeChartConfigurationPtrOutput {
	return i.ToAnalysisGaugeChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartConfigurationArgs) ToAnalysisGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartConfigurationOutput).ToAnalysisGaugeChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisGaugeChartConfigurationPtrInput is an input type that accepts AnalysisGaugeChartConfigurationArgs, AnalysisGaugeChartConfigurationPtr and AnalysisGaugeChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartConfigurationPtrInput` via:
//
//	        AnalysisGaugeChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisGaugeChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisGaugeChartConfigurationPtrOutput() AnalysisGaugeChartConfigurationPtrOutput
	ToAnalysisGaugeChartConfigurationPtrOutputWithContext(context.Context) AnalysisGaugeChartConfigurationPtrOutput
}

type analysisGaugeChartConfigurationPtrType AnalysisGaugeChartConfigurationArgs

func AnalysisGaugeChartConfigurationPtr(v *AnalysisGaugeChartConfigurationArgs) AnalysisGaugeChartConfigurationPtrInput {
	return (*analysisGaugeChartConfigurationPtrType)(v)
}

func (*analysisGaugeChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartConfiguration)(nil)).Elem()
}

func (i *analysisGaugeChartConfigurationPtrType) ToAnalysisGaugeChartConfigurationPtrOutput() AnalysisGaugeChartConfigurationPtrOutput {
	return i.ToAnalysisGaugeChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisGaugeChartConfigurationPtrType) ToAnalysisGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartConfigurationPtrOutput)
}

type AnalysisGaugeChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartConfiguration)(nil)).Elem()
}

func (o AnalysisGaugeChartConfigurationOutput) ToAnalysisGaugeChartConfigurationOutput() AnalysisGaugeChartConfigurationOutput {
	return o
}

func (o AnalysisGaugeChartConfigurationOutput) ToAnalysisGaugeChartConfigurationOutputWithContext(ctx context.Context) AnalysisGaugeChartConfigurationOutput {
	return o
}

func (o AnalysisGaugeChartConfigurationOutput) ToAnalysisGaugeChartConfigurationPtrOutput() AnalysisGaugeChartConfigurationPtrOutput {
	return o.ToAnalysisGaugeChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisGaugeChartConfigurationOutput) ToAnalysisGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGaugeChartConfiguration) *AnalysisGaugeChartConfiguration {
		return &v
	}).(AnalysisGaugeChartConfigurationPtrOutput)
}

func (o AnalysisGaugeChartConfigurationOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartConfiguration) *AnalysisDataLabelOptions { return v.DataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisGaugeChartConfigurationOutput) FieldWells() AnalysisGaugeChartFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartConfiguration) *AnalysisGaugeChartFieldWells { return v.FieldWells }).(AnalysisGaugeChartFieldWellsPtrOutput)
}

func (o AnalysisGaugeChartConfigurationOutput) GaugeChartOptions() AnalysisGaugeChartOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartConfiguration) *AnalysisGaugeChartOptions { return v.GaugeChartOptions }).(AnalysisGaugeChartOptionsPtrOutput)
}

func (o AnalysisGaugeChartConfigurationOutput) TooltipOptions() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartConfiguration) *AnalysisTooltipOptions { return v.TooltipOptions }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisGaugeChartConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

type AnalysisGaugeChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartConfiguration)(nil)).Elem()
}

func (o AnalysisGaugeChartConfigurationPtrOutput) ToAnalysisGaugeChartConfigurationPtrOutput() AnalysisGaugeChartConfigurationPtrOutput {
	return o
}

func (o AnalysisGaugeChartConfigurationPtrOutput) ToAnalysisGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartConfigurationPtrOutput {
	return o
}

func (o AnalysisGaugeChartConfigurationPtrOutput) Elem() AnalysisGaugeChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartConfiguration) AnalysisGaugeChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisGaugeChartConfiguration
		return ret
	}).(AnalysisGaugeChartConfigurationOutput)
}

func (o AnalysisGaugeChartConfigurationPtrOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisGaugeChartConfigurationPtrOutput) FieldWells() AnalysisGaugeChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartConfiguration) *AnalysisGaugeChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisGaugeChartFieldWellsPtrOutput)
}

func (o AnalysisGaugeChartConfigurationPtrOutput) GaugeChartOptions() AnalysisGaugeChartOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartConfiguration) *AnalysisGaugeChartOptions {
		if v == nil {
			return nil
		}
		return v.GaugeChartOptions
	}).(AnalysisGaugeChartOptionsPtrOutput)
}

func (o AnalysisGaugeChartConfigurationPtrOutput) TooltipOptions() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.TooltipOptions
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisGaugeChartConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

type AnalysisGaugeChartFieldWells struct {
	TargetValues []AnalysisMeasureField `pulumi:"targetValues"`
	Values       []AnalysisMeasureField `pulumi:"values"`
}

// AnalysisGaugeChartFieldWellsInput is an input type that accepts AnalysisGaugeChartFieldWellsArgs and AnalysisGaugeChartFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartFieldWellsInput` via:
//
//	AnalysisGaugeChartFieldWellsArgs{...}
type AnalysisGaugeChartFieldWellsInput interface {
	pulumi.Input

	ToAnalysisGaugeChartFieldWellsOutput() AnalysisGaugeChartFieldWellsOutput
	ToAnalysisGaugeChartFieldWellsOutputWithContext(context.Context) AnalysisGaugeChartFieldWellsOutput
}

type AnalysisGaugeChartFieldWellsArgs struct {
	TargetValues AnalysisMeasureFieldArrayInput `pulumi:"targetValues"`
	Values       AnalysisMeasureFieldArrayInput `pulumi:"values"`
}

func (AnalysisGaugeChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartFieldWells)(nil)).Elem()
}

func (i AnalysisGaugeChartFieldWellsArgs) ToAnalysisGaugeChartFieldWellsOutput() AnalysisGaugeChartFieldWellsOutput {
	return i.ToAnalysisGaugeChartFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartFieldWellsArgs) ToAnalysisGaugeChartFieldWellsOutputWithContext(ctx context.Context) AnalysisGaugeChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartFieldWellsOutput)
}

func (i AnalysisGaugeChartFieldWellsArgs) ToAnalysisGaugeChartFieldWellsPtrOutput() AnalysisGaugeChartFieldWellsPtrOutput {
	return i.ToAnalysisGaugeChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartFieldWellsArgs) ToAnalysisGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartFieldWellsOutput).ToAnalysisGaugeChartFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisGaugeChartFieldWellsPtrInput is an input type that accepts AnalysisGaugeChartFieldWellsArgs, AnalysisGaugeChartFieldWellsPtr and AnalysisGaugeChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartFieldWellsPtrInput` via:
//
//	        AnalysisGaugeChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGaugeChartFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisGaugeChartFieldWellsPtrOutput() AnalysisGaugeChartFieldWellsPtrOutput
	ToAnalysisGaugeChartFieldWellsPtrOutputWithContext(context.Context) AnalysisGaugeChartFieldWellsPtrOutput
}

type analysisGaugeChartFieldWellsPtrType AnalysisGaugeChartFieldWellsArgs

func AnalysisGaugeChartFieldWellsPtr(v *AnalysisGaugeChartFieldWellsArgs) AnalysisGaugeChartFieldWellsPtrInput {
	return (*analysisGaugeChartFieldWellsPtrType)(v)
}

func (*analysisGaugeChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartFieldWells)(nil)).Elem()
}

func (i *analysisGaugeChartFieldWellsPtrType) ToAnalysisGaugeChartFieldWellsPtrOutput() AnalysisGaugeChartFieldWellsPtrOutput {
	return i.ToAnalysisGaugeChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisGaugeChartFieldWellsPtrType) ToAnalysisGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartFieldWellsPtrOutput)
}

type AnalysisGaugeChartFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartFieldWells)(nil)).Elem()
}

func (o AnalysisGaugeChartFieldWellsOutput) ToAnalysisGaugeChartFieldWellsOutput() AnalysisGaugeChartFieldWellsOutput {
	return o
}

func (o AnalysisGaugeChartFieldWellsOutput) ToAnalysisGaugeChartFieldWellsOutputWithContext(ctx context.Context) AnalysisGaugeChartFieldWellsOutput {
	return o
}

func (o AnalysisGaugeChartFieldWellsOutput) ToAnalysisGaugeChartFieldWellsPtrOutput() AnalysisGaugeChartFieldWellsPtrOutput {
	return o.ToAnalysisGaugeChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisGaugeChartFieldWellsOutput) ToAnalysisGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGaugeChartFieldWells) *AnalysisGaugeChartFieldWells {
		return &v
	}).(AnalysisGaugeChartFieldWellsPtrOutput)
}

func (o AnalysisGaugeChartFieldWellsOutput) TargetValues() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisGaugeChartFieldWells) []AnalysisMeasureField { return v.TargetValues }).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisGaugeChartFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisGaugeChartFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisGaugeChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartFieldWells)(nil)).Elem()
}

func (o AnalysisGaugeChartFieldWellsPtrOutput) ToAnalysisGaugeChartFieldWellsPtrOutput() AnalysisGaugeChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisGaugeChartFieldWellsPtrOutput) ToAnalysisGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisGaugeChartFieldWellsPtrOutput) Elem() AnalysisGaugeChartFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartFieldWells) AnalysisGaugeChartFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisGaugeChartFieldWells
		return ret
	}).(AnalysisGaugeChartFieldWellsOutput)
}

func (o AnalysisGaugeChartFieldWellsPtrOutput) TargetValues() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.TargetValues
	}).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisGaugeChartFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisGaugeChartOptions struct {
	Arc                           *AnalysisArcConfiguration        `pulumi:"arc"`
	ArcAxis                       *AnalysisArcAxisConfiguration    `pulumi:"arcAxis"`
	Comparison                    *AnalysisComparisonConfiguration `pulumi:"comparison"`
	PrimaryValueDisplayType       *AnalysisPrimaryValueDisplayType `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration *AnalysisFontConfiguration       `pulumi:"primaryValueFontConfiguration"`
}

// AnalysisGaugeChartOptionsInput is an input type that accepts AnalysisGaugeChartOptionsArgs and AnalysisGaugeChartOptionsOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartOptionsInput` via:
//
//	AnalysisGaugeChartOptionsArgs{...}
type AnalysisGaugeChartOptionsInput interface {
	pulumi.Input

	ToAnalysisGaugeChartOptionsOutput() AnalysisGaugeChartOptionsOutput
	ToAnalysisGaugeChartOptionsOutputWithContext(context.Context) AnalysisGaugeChartOptionsOutput
}

type AnalysisGaugeChartOptionsArgs struct {
	Arc                           AnalysisArcConfigurationPtrInput        `pulumi:"arc"`
	ArcAxis                       AnalysisArcAxisConfigurationPtrInput    `pulumi:"arcAxis"`
	Comparison                    AnalysisComparisonConfigurationPtrInput `pulumi:"comparison"`
	PrimaryValueDisplayType       AnalysisPrimaryValueDisplayTypePtrInput `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration AnalysisFontConfigurationPtrInput       `pulumi:"primaryValueFontConfiguration"`
}

func (AnalysisGaugeChartOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartOptions)(nil)).Elem()
}

func (i AnalysisGaugeChartOptionsArgs) ToAnalysisGaugeChartOptionsOutput() AnalysisGaugeChartOptionsOutput {
	return i.ToAnalysisGaugeChartOptionsOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartOptionsArgs) ToAnalysisGaugeChartOptionsOutputWithContext(ctx context.Context) AnalysisGaugeChartOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartOptionsOutput)
}

func (i AnalysisGaugeChartOptionsArgs) ToAnalysisGaugeChartOptionsPtrOutput() AnalysisGaugeChartOptionsPtrOutput {
	return i.ToAnalysisGaugeChartOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartOptionsArgs) ToAnalysisGaugeChartOptionsPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartOptionsOutput).ToAnalysisGaugeChartOptionsPtrOutputWithContext(ctx)
}

// AnalysisGaugeChartOptionsPtrInput is an input type that accepts AnalysisGaugeChartOptionsArgs, AnalysisGaugeChartOptionsPtr and AnalysisGaugeChartOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartOptionsPtrInput` via:
//
//	        AnalysisGaugeChartOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGaugeChartOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisGaugeChartOptionsPtrOutput() AnalysisGaugeChartOptionsPtrOutput
	ToAnalysisGaugeChartOptionsPtrOutputWithContext(context.Context) AnalysisGaugeChartOptionsPtrOutput
}

type analysisGaugeChartOptionsPtrType AnalysisGaugeChartOptionsArgs

func AnalysisGaugeChartOptionsPtr(v *AnalysisGaugeChartOptionsArgs) AnalysisGaugeChartOptionsPtrInput {
	return (*analysisGaugeChartOptionsPtrType)(v)
}

func (*analysisGaugeChartOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartOptions)(nil)).Elem()
}

func (i *analysisGaugeChartOptionsPtrType) ToAnalysisGaugeChartOptionsPtrOutput() AnalysisGaugeChartOptionsPtrOutput {
	return i.ToAnalysisGaugeChartOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisGaugeChartOptionsPtrType) ToAnalysisGaugeChartOptionsPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartOptionsPtrOutput)
}

type AnalysisGaugeChartOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartOptions)(nil)).Elem()
}

func (o AnalysisGaugeChartOptionsOutput) ToAnalysisGaugeChartOptionsOutput() AnalysisGaugeChartOptionsOutput {
	return o
}

func (o AnalysisGaugeChartOptionsOutput) ToAnalysisGaugeChartOptionsOutputWithContext(ctx context.Context) AnalysisGaugeChartOptionsOutput {
	return o
}

func (o AnalysisGaugeChartOptionsOutput) ToAnalysisGaugeChartOptionsPtrOutput() AnalysisGaugeChartOptionsPtrOutput {
	return o.ToAnalysisGaugeChartOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisGaugeChartOptionsOutput) ToAnalysisGaugeChartOptionsPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGaugeChartOptions) *AnalysisGaugeChartOptions {
		return &v
	}).(AnalysisGaugeChartOptionsPtrOutput)
}

func (o AnalysisGaugeChartOptionsOutput) Arc() AnalysisArcConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartOptions) *AnalysisArcConfiguration { return v.Arc }).(AnalysisArcConfigurationPtrOutput)
}

func (o AnalysisGaugeChartOptionsOutput) ArcAxis() AnalysisArcAxisConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartOptions) *AnalysisArcAxisConfiguration { return v.ArcAxis }).(AnalysisArcAxisConfigurationPtrOutput)
}

func (o AnalysisGaugeChartOptionsOutput) Comparison() AnalysisComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartOptions) *AnalysisComparisonConfiguration { return v.Comparison }).(AnalysisComparisonConfigurationPtrOutput)
}

func (o AnalysisGaugeChartOptionsOutput) PrimaryValueDisplayType() AnalysisPrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartOptions) *AnalysisPrimaryValueDisplayType { return v.PrimaryValueDisplayType }).(AnalysisPrimaryValueDisplayTypePtrOutput)
}

func (o AnalysisGaugeChartOptionsOutput) PrimaryValueFontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartOptions) *AnalysisFontConfiguration { return v.PrimaryValueFontConfiguration }).(AnalysisFontConfigurationPtrOutput)
}

type AnalysisGaugeChartOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartOptions)(nil)).Elem()
}

func (o AnalysisGaugeChartOptionsPtrOutput) ToAnalysisGaugeChartOptionsPtrOutput() AnalysisGaugeChartOptionsPtrOutput {
	return o
}

func (o AnalysisGaugeChartOptionsPtrOutput) ToAnalysisGaugeChartOptionsPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartOptionsPtrOutput {
	return o
}

func (o AnalysisGaugeChartOptionsPtrOutput) Elem() AnalysisGaugeChartOptionsOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartOptions) AnalysisGaugeChartOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisGaugeChartOptions
		return ret
	}).(AnalysisGaugeChartOptionsOutput)
}

func (o AnalysisGaugeChartOptionsPtrOutput) Arc() AnalysisArcConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartOptions) *AnalysisArcConfiguration {
		if v == nil {
			return nil
		}
		return v.Arc
	}).(AnalysisArcConfigurationPtrOutput)
}

func (o AnalysisGaugeChartOptionsPtrOutput) ArcAxis() AnalysisArcAxisConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartOptions) *AnalysisArcAxisConfiguration {
		if v == nil {
			return nil
		}
		return v.ArcAxis
	}).(AnalysisArcAxisConfigurationPtrOutput)
}

func (o AnalysisGaugeChartOptionsPtrOutput) Comparison() AnalysisComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartOptions) *AnalysisComparisonConfiguration {
		if v == nil {
			return nil
		}
		return v.Comparison
	}).(AnalysisComparisonConfigurationPtrOutput)
}

func (o AnalysisGaugeChartOptionsPtrOutput) PrimaryValueDisplayType() AnalysisPrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartOptions) *AnalysisPrimaryValueDisplayType {
		if v == nil {
			return nil
		}
		return v.PrimaryValueDisplayType
	}).(AnalysisPrimaryValueDisplayTypePtrOutput)
}

func (o AnalysisGaugeChartOptionsPtrOutput) PrimaryValueFontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartOptions) *AnalysisFontConfiguration {
		if v == nil {
			return nil
		}
		return v.PrimaryValueFontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

type AnalysisGaugeChartPrimaryValueConditionalFormatting struct {
	Icon      *AnalysisConditionalFormattingIcon  `pulumi:"icon"`
	TextColor *AnalysisConditionalFormattingColor `pulumi:"textColor"`
}

// AnalysisGaugeChartPrimaryValueConditionalFormattingInput is an input type that accepts AnalysisGaugeChartPrimaryValueConditionalFormattingArgs and AnalysisGaugeChartPrimaryValueConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartPrimaryValueConditionalFormattingInput` via:
//
//	AnalysisGaugeChartPrimaryValueConditionalFormattingArgs{...}
type AnalysisGaugeChartPrimaryValueConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisGaugeChartPrimaryValueConditionalFormattingOutput() AnalysisGaugeChartPrimaryValueConditionalFormattingOutput
	ToAnalysisGaugeChartPrimaryValueConditionalFormattingOutputWithContext(context.Context) AnalysisGaugeChartPrimaryValueConditionalFormattingOutput
}

type AnalysisGaugeChartPrimaryValueConditionalFormattingArgs struct {
	Icon      AnalysisConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor AnalysisConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (AnalysisGaugeChartPrimaryValueConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i AnalysisGaugeChartPrimaryValueConditionalFormattingArgs) ToAnalysisGaugeChartPrimaryValueConditionalFormattingOutput() AnalysisGaugeChartPrimaryValueConditionalFormattingOutput {
	return i.ToAnalysisGaugeChartPrimaryValueConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartPrimaryValueConditionalFormattingArgs) ToAnalysisGaugeChartPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) AnalysisGaugeChartPrimaryValueConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartPrimaryValueConditionalFormattingOutput)
}

func (i AnalysisGaugeChartPrimaryValueConditionalFormattingArgs) ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput() AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return i.ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartPrimaryValueConditionalFormattingArgs) ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartPrimaryValueConditionalFormattingOutput).ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisGaugeChartPrimaryValueConditionalFormattingPtrInput is an input type that accepts AnalysisGaugeChartPrimaryValueConditionalFormattingArgs, AnalysisGaugeChartPrimaryValueConditionalFormattingPtr and AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartPrimaryValueConditionalFormattingPtrInput` via:
//
//	        AnalysisGaugeChartPrimaryValueConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisGaugeChartPrimaryValueConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput() AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput
	ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Context) AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput
}

type analysisGaugeChartPrimaryValueConditionalFormattingPtrType AnalysisGaugeChartPrimaryValueConditionalFormattingArgs

func AnalysisGaugeChartPrimaryValueConditionalFormattingPtr(v *AnalysisGaugeChartPrimaryValueConditionalFormattingArgs) AnalysisGaugeChartPrimaryValueConditionalFormattingPtrInput {
	return (*analysisGaugeChartPrimaryValueConditionalFormattingPtrType)(v)
}

func (*analysisGaugeChartPrimaryValueConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i *analysisGaugeChartPrimaryValueConditionalFormattingPtrType) ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput() AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return i.ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisGaugeChartPrimaryValueConditionalFormattingPtrType) ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput)
}

type AnalysisGaugeChartPrimaryValueConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartPrimaryValueConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingOutput) ToAnalysisGaugeChartPrimaryValueConditionalFormattingOutput() AnalysisGaugeChartPrimaryValueConditionalFormattingOutput {
	return o
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingOutput) ToAnalysisGaugeChartPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) AnalysisGaugeChartPrimaryValueConditionalFormattingOutput {
	return o
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingOutput) ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput() AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o.ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingOutput) ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGaugeChartPrimaryValueConditionalFormatting) *AnalysisGaugeChartPrimaryValueConditionalFormatting {
		return &v
	}).(AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput)
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingOutput) Icon() AnalysisConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartPrimaryValueConditionalFormatting) *AnalysisConditionalFormattingIcon {
		return v.Icon
	}).(AnalysisConditionalFormattingIconPtrOutput)
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingOutput) TextColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartPrimaryValueConditionalFormatting) *AnalysisConditionalFormattingColor {
		return v.TextColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput) ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput() AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput) ToAnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput) Elem() AnalysisGaugeChartPrimaryValueConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartPrimaryValueConditionalFormatting) AnalysisGaugeChartPrimaryValueConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisGaugeChartPrimaryValueConditionalFormatting
		return ret
	}).(AnalysisGaugeChartPrimaryValueConditionalFormattingOutput)
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput) Icon() AnalysisConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartPrimaryValueConditionalFormatting) *AnalysisConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(AnalysisConditionalFormattingIconPtrOutput)
}

func (o AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput) TextColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartPrimaryValueConditionalFormatting) *AnalysisConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisGaugeChartVisual struct {
	Actions               []AnalysisVisualCustomAction             `pulumi:"actions"`
	ChartConfiguration    *AnalysisGaugeChartConfiguration         `pulumi:"chartConfiguration"`
	ConditionalFormatting *AnalysisGaugeChartConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *AnalysisVisualSubtitleLabelOptions      `pulumi:"subtitle"`
	Title                 *AnalysisVisualTitleLabelOptions         `pulumi:"title"`
	VisualId              string                                   `pulumi:"visualId"`
}

// AnalysisGaugeChartVisualInput is an input type that accepts AnalysisGaugeChartVisualArgs and AnalysisGaugeChartVisualOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartVisualInput` via:
//
//	AnalysisGaugeChartVisualArgs{...}
type AnalysisGaugeChartVisualInput interface {
	pulumi.Input

	ToAnalysisGaugeChartVisualOutput() AnalysisGaugeChartVisualOutput
	ToAnalysisGaugeChartVisualOutputWithContext(context.Context) AnalysisGaugeChartVisualOutput
}

type AnalysisGaugeChartVisualArgs struct {
	Actions               AnalysisVisualCustomActionArrayInput            `pulumi:"actions"`
	ChartConfiguration    AnalysisGaugeChartConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ConditionalFormatting AnalysisGaugeChartConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              AnalysisVisualSubtitleLabelOptionsPtrInput      `pulumi:"subtitle"`
	Title                 AnalysisVisualTitleLabelOptionsPtrInput         `pulumi:"title"`
	VisualId              pulumi.StringInput                              `pulumi:"visualId"`
}

func (AnalysisGaugeChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartVisual)(nil)).Elem()
}

func (i AnalysisGaugeChartVisualArgs) ToAnalysisGaugeChartVisualOutput() AnalysisGaugeChartVisualOutput {
	return i.ToAnalysisGaugeChartVisualOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartVisualArgs) ToAnalysisGaugeChartVisualOutputWithContext(ctx context.Context) AnalysisGaugeChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartVisualOutput)
}

func (i AnalysisGaugeChartVisualArgs) ToAnalysisGaugeChartVisualPtrOutput() AnalysisGaugeChartVisualPtrOutput {
	return i.ToAnalysisGaugeChartVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisGaugeChartVisualArgs) ToAnalysisGaugeChartVisualPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartVisualOutput).ToAnalysisGaugeChartVisualPtrOutputWithContext(ctx)
}

// AnalysisGaugeChartVisualPtrInput is an input type that accepts AnalysisGaugeChartVisualArgs, AnalysisGaugeChartVisualPtr and AnalysisGaugeChartVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisGaugeChartVisualPtrInput` via:
//
//	        AnalysisGaugeChartVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisGaugeChartVisualPtrInput interface {
	pulumi.Input

	ToAnalysisGaugeChartVisualPtrOutput() AnalysisGaugeChartVisualPtrOutput
	ToAnalysisGaugeChartVisualPtrOutputWithContext(context.Context) AnalysisGaugeChartVisualPtrOutput
}

type analysisGaugeChartVisualPtrType AnalysisGaugeChartVisualArgs

func AnalysisGaugeChartVisualPtr(v *AnalysisGaugeChartVisualArgs) AnalysisGaugeChartVisualPtrInput {
	return (*analysisGaugeChartVisualPtrType)(v)
}

func (*analysisGaugeChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartVisual)(nil)).Elem()
}

func (i *analysisGaugeChartVisualPtrType) ToAnalysisGaugeChartVisualPtrOutput() AnalysisGaugeChartVisualPtrOutput {
	return i.ToAnalysisGaugeChartVisualPtrOutputWithContext(context.Background())
}

func (i *analysisGaugeChartVisualPtrType) ToAnalysisGaugeChartVisualPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGaugeChartVisualPtrOutput)
}

type AnalysisGaugeChartVisualOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGaugeChartVisual)(nil)).Elem()
}

func (o AnalysisGaugeChartVisualOutput) ToAnalysisGaugeChartVisualOutput() AnalysisGaugeChartVisualOutput {
	return o
}

func (o AnalysisGaugeChartVisualOutput) ToAnalysisGaugeChartVisualOutputWithContext(ctx context.Context) AnalysisGaugeChartVisualOutput {
	return o
}

func (o AnalysisGaugeChartVisualOutput) ToAnalysisGaugeChartVisualPtrOutput() AnalysisGaugeChartVisualPtrOutput {
	return o.ToAnalysisGaugeChartVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisGaugeChartVisualOutput) ToAnalysisGaugeChartVisualPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGaugeChartVisual) *AnalysisGaugeChartVisual {
		return &v
	}).(AnalysisGaugeChartVisualPtrOutput)
}

func (o AnalysisGaugeChartVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisGaugeChartVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisGaugeChartVisualOutput) ChartConfiguration() AnalysisGaugeChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartVisual) *AnalysisGaugeChartConfiguration { return v.ChartConfiguration }).(AnalysisGaugeChartConfigurationPtrOutput)
}

func (o AnalysisGaugeChartVisualOutput) ConditionalFormatting() AnalysisGaugeChartConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartVisual) *AnalysisGaugeChartConditionalFormatting {
		return v.ConditionalFormatting
	}).(AnalysisGaugeChartConditionalFormattingPtrOutput)
}

func (o AnalysisGaugeChartVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisGaugeChartVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGaugeChartVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisGaugeChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisGaugeChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisGaugeChartVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGaugeChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGaugeChartVisual)(nil)).Elem()
}

func (o AnalysisGaugeChartVisualPtrOutput) ToAnalysisGaugeChartVisualPtrOutput() AnalysisGaugeChartVisualPtrOutput {
	return o
}

func (o AnalysisGaugeChartVisualPtrOutput) ToAnalysisGaugeChartVisualPtrOutputWithContext(ctx context.Context) AnalysisGaugeChartVisualPtrOutput {
	return o
}

func (o AnalysisGaugeChartVisualPtrOutput) Elem() AnalysisGaugeChartVisualOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartVisual) AnalysisGaugeChartVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisGaugeChartVisual
		return ret
	}).(AnalysisGaugeChartVisualOutput)
}

func (o AnalysisGaugeChartVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisGaugeChartVisualPtrOutput) ChartConfiguration() AnalysisGaugeChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartVisual) *AnalysisGaugeChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisGaugeChartConfigurationPtrOutput)
}

func (o AnalysisGaugeChartVisualPtrOutput) ConditionalFormatting() AnalysisGaugeChartConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartVisual) *AnalysisGaugeChartConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(AnalysisGaugeChartConditionalFormattingPtrOutput)
}

func (o AnalysisGaugeChartVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisGaugeChartVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisGaugeChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisGaugeChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisGeospatialCoordinateBounds struct {
	East  float64 `pulumi:"east"`
	North float64 `pulumi:"north"`
	South float64 `pulumi:"south"`
	West  float64 `pulumi:"west"`
}

// AnalysisGeospatialCoordinateBoundsInput is an input type that accepts AnalysisGeospatialCoordinateBoundsArgs and AnalysisGeospatialCoordinateBoundsOutput values.
// You can construct a concrete instance of `AnalysisGeospatialCoordinateBoundsInput` via:
//
//	AnalysisGeospatialCoordinateBoundsArgs{...}
type AnalysisGeospatialCoordinateBoundsInput interface {
	pulumi.Input

	ToAnalysisGeospatialCoordinateBoundsOutput() AnalysisGeospatialCoordinateBoundsOutput
	ToAnalysisGeospatialCoordinateBoundsOutputWithContext(context.Context) AnalysisGeospatialCoordinateBoundsOutput
}

type AnalysisGeospatialCoordinateBoundsArgs struct {
	East  pulumi.Float64Input `pulumi:"east"`
	North pulumi.Float64Input `pulumi:"north"`
	South pulumi.Float64Input `pulumi:"south"`
	West  pulumi.Float64Input `pulumi:"west"`
}

func (AnalysisGeospatialCoordinateBoundsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialCoordinateBounds)(nil)).Elem()
}

func (i AnalysisGeospatialCoordinateBoundsArgs) ToAnalysisGeospatialCoordinateBoundsOutput() AnalysisGeospatialCoordinateBoundsOutput {
	return i.ToAnalysisGeospatialCoordinateBoundsOutputWithContext(context.Background())
}

func (i AnalysisGeospatialCoordinateBoundsArgs) ToAnalysisGeospatialCoordinateBoundsOutputWithContext(ctx context.Context) AnalysisGeospatialCoordinateBoundsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialCoordinateBoundsOutput)
}

func (i AnalysisGeospatialCoordinateBoundsArgs) ToAnalysisGeospatialCoordinateBoundsPtrOutput() AnalysisGeospatialCoordinateBoundsPtrOutput {
	return i.ToAnalysisGeospatialCoordinateBoundsPtrOutputWithContext(context.Background())
}

func (i AnalysisGeospatialCoordinateBoundsArgs) ToAnalysisGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialCoordinateBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialCoordinateBoundsOutput).ToAnalysisGeospatialCoordinateBoundsPtrOutputWithContext(ctx)
}

// AnalysisGeospatialCoordinateBoundsPtrInput is an input type that accepts AnalysisGeospatialCoordinateBoundsArgs, AnalysisGeospatialCoordinateBoundsPtr and AnalysisGeospatialCoordinateBoundsPtrOutput values.
// You can construct a concrete instance of `AnalysisGeospatialCoordinateBoundsPtrInput` via:
//
//	        AnalysisGeospatialCoordinateBoundsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGeospatialCoordinateBoundsPtrInput interface {
	pulumi.Input

	ToAnalysisGeospatialCoordinateBoundsPtrOutput() AnalysisGeospatialCoordinateBoundsPtrOutput
	ToAnalysisGeospatialCoordinateBoundsPtrOutputWithContext(context.Context) AnalysisGeospatialCoordinateBoundsPtrOutput
}

type analysisGeospatialCoordinateBoundsPtrType AnalysisGeospatialCoordinateBoundsArgs

func AnalysisGeospatialCoordinateBoundsPtr(v *AnalysisGeospatialCoordinateBoundsArgs) AnalysisGeospatialCoordinateBoundsPtrInput {
	return (*analysisGeospatialCoordinateBoundsPtrType)(v)
}

func (*analysisGeospatialCoordinateBoundsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialCoordinateBounds)(nil)).Elem()
}

func (i *analysisGeospatialCoordinateBoundsPtrType) ToAnalysisGeospatialCoordinateBoundsPtrOutput() AnalysisGeospatialCoordinateBoundsPtrOutput {
	return i.ToAnalysisGeospatialCoordinateBoundsPtrOutputWithContext(context.Background())
}

func (i *analysisGeospatialCoordinateBoundsPtrType) ToAnalysisGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialCoordinateBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialCoordinateBoundsPtrOutput)
}

type AnalysisGeospatialCoordinateBoundsOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialCoordinateBoundsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialCoordinateBounds)(nil)).Elem()
}

func (o AnalysisGeospatialCoordinateBoundsOutput) ToAnalysisGeospatialCoordinateBoundsOutput() AnalysisGeospatialCoordinateBoundsOutput {
	return o
}

func (o AnalysisGeospatialCoordinateBoundsOutput) ToAnalysisGeospatialCoordinateBoundsOutputWithContext(ctx context.Context) AnalysisGeospatialCoordinateBoundsOutput {
	return o
}

func (o AnalysisGeospatialCoordinateBoundsOutput) ToAnalysisGeospatialCoordinateBoundsPtrOutput() AnalysisGeospatialCoordinateBoundsPtrOutput {
	return o.ToAnalysisGeospatialCoordinateBoundsPtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialCoordinateBoundsOutput) ToAnalysisGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialCoordinateBoundsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGeospatialCoordinateBounds) *AnalysisGeospatialCoordinateBounds {
		return &v
	}).(AnalysisGeospatialCoordinateBoundsPtrOutput)
}

func (o AnalysisGeospatialCoordinateBoundsOutput) East() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisGeospatialCoordinateBounds) float64 { return v.East }).(pulumi.Float64Output)
}

func (o AnalysisGeospatialCoordinateBoundsOutput) North() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisGeospatialCoordinateBounds) float64 { return v.North }).(pulumi.Float64Output)
}

func (o AnalysisGeospatialCoordinateBoundsOutput) South() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisGeospatialCoordinateBounds) float64 { return v.South }).(pulumi.Float64Output)
}

func (o AnalysisGeospatialCoordinateBoundsOutput) West() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisGeospatialCoordinateBounds) float64 { return v.West }).(pulumi.Float64Output)
}

type AnalysisGeospatialCoordinateBoundsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialCoordinateBoundsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialCoordinateBounds)(nil)).Elem()
}

func (o AnalysisGeospatialCoordinateBoundsPtrOutput) ToAnalysisGeospatialCoordinateBoundsPtrOutput() AnalysisGeospatialCoordinateBoundsPtrOutput {
	return o
}

func (o AnalysisGeospatialCoordinateBoundsPtrOutput) ToAnalysisGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialCoordinateBoundsPtrOutput {
	return o
}

func (o AnalysisGeospatialCoordinateBoundsPtrOutput) Elem() AnalysisGeospatialCoordinateBoundsOutput {
	return o.ApplyT(func(v *AnalysisGeospatialCoordinateBounds) AnalysisGeospatialCoordinateBounds {
		if v != nil {
			return *v
		}
		var ret AnalysisGeospatialCoordinateBounds
		return ret
	}).(AnalysisGeospatialCoordinateBoundsOutput)
}

func (o AnalysisGeospatialCoordinateBoundsPtrOutput) East() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.East
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisGeospatialCoordinateBoundsPtrOutput) North() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.North
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisGeospatialCoordinateBoundsPtrOutput) South() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.South
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisGeospatialCoordinateBoundsPtrOutput) West() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.West
	}).(pulumi.Float64PtrOutput)
}

type AnalysisGeospatialMapAggregatedFieldWells struct {
	Colors     []AnalysisDimensionField `pulumi:"colors"`
	Geospatial []AnalysisDimensionField `pulumi:"geospatial"`
	Values     []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisGeospatialMapAggregatedFieldWellsInput is an input type that accepts AnalysisGeospatialMapAggregatedFieldWellsArgs and AnalysisGeospatialMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisGeospatialMapAggregatedFieldWellsInput` via:
//
//	AnalysisGeospatialMapAggregatedFieldWellsArgs{...}
type AnalysisGeospatialMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisGeospatialMapAggregatedFieldWellsOutput() AnalysisGeospatialMapAggregatedFieldWellsOutput
	ToAnalysisGeospatialMapAggregatedFieldWellsOutputWithContext(context.Context) AnalysisGeospatialMapAggregatedFieldWellsOutput
}

type AnalysisGeospatialMapAggregatedFieldWellsArgs struct {
	Colors     AnalysisDimensionFieldArrayInput `pulumi:"colors"`
	Geospatial AnalysisDimensionFieldArrayInput `pulumi:"geospatial"`
	Values     AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisGeospatialMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisGeospatialMapAggregatedFieldWellsArgs) ToAnalysisGeospatialMapAggregatedFieldWellsOutput() AnalysisGeospatialMapAggregatedFieldWellsOutput {
	return i.ToAnalysisGeospatialMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisGeospatialMapAggregatedFieldWellsArgs) ToAnalysisGeospatialMapAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisGeospatialMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapAggregatedFieldWellsOutput)
}

func (i AnalysisGeospatialMapAggregatedFieldWellsArgs) ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutput() AnalysisGeospatialMapAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisGeospatialMapAggregatedFieldWellsArgs) ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapAggregatedFieldWellsOutput).ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisGeospatialMapAggregatedFieldWellsPtrInput is an input type that accepts AnalysisGeospatialMapAggregatedFieldWellsArgs, AnalysisGeospatialMapAggregatedFieldWellsPtr and AnalysisGeospatialMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisGeospatialMapAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisGeospatialMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGeospatialMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutput() AnalysisGeospatialMapAggregatedFieldWellsPtrOutput
	ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisGeospatialMapAggregatedFieldWellsPtrOutput
}

type analysisGeospatialMapAggregatedFieldWellsPtrType AnalysisGeospatialMapAggregatedFieldWellsArgs

func AnalysisGeospatialMapAggregatedFieldWellsPtr(v *AnalysisGeospatialMapAggregatedFieldWellsArgs) AnalysisGeospatialMapAggregatedFieldWellsPtrInput {
	return (*analysisGeospatialMapAggregatedFieldWellsPtrType)(v)
}

func (*analysisGeospatialMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisGeospatialMapAggregatedFieldWellsPtrType) ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutput() AnalysisGeospatialMapAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisGeospatialMapAggregatedFieldWellsPtrType) ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapAggregatedFieldWellsPtrOutput)
}

type AnalysisGeospatialMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisGeospatialMapAggregatedFieldWellsOutput) ToAnalysisGeospatialMapAggregatedFieldWellsOutput() AnalysisGeospatialMapAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisGeospatialMapAggregatedFieldWellsOutput) ToAnalysisGeospatialMapAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisGeospatialMapAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisGeospatialMapAggregatedFieldWellsOutput) ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutput() AnalysisGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialMapAggregatedFieldWellsOutput) ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGeospatialMapAggregatedFieldWells) *AnalysisGeospatialMapAggregatedFieldWells {
		return &v
	}).(AnalysisGeospatialMapAggregatedFieldWellsPtrOutput)
}

func (o AnalysisGeospatialMapAggregatedFieldWellsOutput) Colors() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapAggregatedFieldWells) []AnalysisDimensionField { return v.Colors }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisGeospatialMapAggregatedFieldWellsOutput) Geospatial() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapAggregatedFieldWells) []AnalysisDimensionField { return v.Geospatial }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisGeospatialMapAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisGeospatialMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisGeospatialMapAggregatedFieldWellsPtrOutput) ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutput() AnalysisGeospatialMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisGeospatialMapAggregatedFieldWellsPtrOutput) ToAnalysisGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisGeospatialMapAggregatedFieldWellsPtrOutput) Elem() AnalysisGeospatialMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapAggregatedFieldWells) AnalysisGeospatialMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisGeospatialMapAggregatedFieldWells
		return ret
	}).(AnalysisGeospatialMapAggregatedFieldWellsOutput)
}

func (o AnalysisGeospatialMapAggregatedFieldWellsPtrOutput) Colors() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisGeospatialMapAggregatedFieldWellsPtrOutput) Geospatial() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Geospatial
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisGeospatialMapAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisGeospatialMapConfiguration struct {
	FieldWells        *AnalysisGeospatialMapFieldWells     `pulumi:"fieldWells"`
	Legend            *AnalysisLegendOptions               `pulumi:"legend"`
	MapStyleOptions   *AnalysisGeospatialMapStyleOptions   `pulumi:"mapStyleOptions"`
	PointStyleOptions *AnalysisGeospatialPointStyleOptions `pulumi:"pointStyleOptions"`
	Tooltip           *AnalysisTooltipOptions              `pulumi:"tooltip"`
	VisualPalette     *AnalysisVisualPalette               `pulumi:"visualPalette"`
	WindowOptions     *AnalysisGeospatialWindowOptions     `pulumi:"windowOptions"`
}

// AnalysisGeospatialMapConfigurationInput is an input type that accepts AnalysisGeospatialMapConfigurationArgs and AnalysisGeospatialMapConfigurationOutput values.
// You can construct a concrete instance of `AnalysisGeospatialMapConfigurationInput` via:
//
//	AnalysisGeospatialMapConfigurationArgs{...}
type AnalysisGeospatialMapConfigurationInput interface {
	pulumi.Input

	ToAnalysisGeospatialMapConfigurationOutput() AnalysisGeospatialMapConfigurationOutput
	ToAnalysisGeospatialMapConfigurationOutputWithContext(context.Context) AnalysisGeospatialMapConfigurationOutput
}

type AnalysisGeospatialMapConfigurationArgs struct {
	FieldWells        AnalysisGeospatialMapFieldWellsPtrInput     `pulumi:"fieldWells"`
	Legend            AnalysisLegendOptionsPtrInput               `pulumi:"legend"`
	MapStyleOptions   AnalysisGeospatialMapStyleOptionsPtrInput   `pulumi:"mapStyleOptions"`
	PointStyleOptions AnalysisGeospatialPointStyleOptionsPtrInput `pulumi:"pointStyleOptions"`
	Tooltip           AnalysisTooltipOptionsPtrInput              `pulumi:"tooltip"`
	VisualPalette     AnalysisVisualPalettePtrInput               `pulumi:"visualPalette"`
	WindowOptions     AnalysisGeospatialWindowOptionsPtrInput     `pulumi:"windowOptions"`
}

func (AnalysisGeospatialMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialMapConfiguration)(nil)).Elem()
}

func (i AnalysisGeospatialMapConfigurationArgs) ToAnalysisGeospatialMapConfigurationOutput() AnalysisGeospatialMapConfigurationOutput {
	return i.ToAnalysisGeospatialMapConfigurationOutputWithContext(context.Background())
}

func (i AnalysisGeospatialMapConfigurationArgs) ToAnalysisGeospatialMapConfigurationOutputWithContext(ctx context.Context) AnalysisGeospatialMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapConfigurationOutput)
}

func (i AnalysisGeospatialMapConfigurationArgs) ToAnalysisGeospatialMapConfigurationPtrOutput() AnalysisGeospatialMapConfigurationPtrOutput {
	return i.ToAnalysisGeospatialMapConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisGeospatialMapConfigurationArgs) ToAnalysisGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapConfigurationOutput).ToAnalysisGeospatialMapConfigurationPtrOutputWithContext(ctx)
}

// AnalysisGeospatialMapConfigurationPtrInput is an input type that accepts AnalysisGeospatialMapConfigurationArgs, AnalysisGeospatialMapConfigurationPtr and AnalysisGeospatialMapConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisGeospatialMapConfigurationPtrInput` via:
//
//	        AnalysisGeospatialMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisGeospatialMapConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisGeospatialMapConfigurationPtrOutput() AnalysisGeospatialMapConfigurationPtrOutput
	ToAnalysisGeospatialMapConfigurationPtrOutputWithContext(context.Context) AnalysisGeospatialMapConfigurationPtrOutput
}

type analysisGeospatialMapConfigurationPtrType AnalysisGeospatialMapConfigurationArgs

func AnalysisGeospatialMapConfigurationPtr(v *AnalysisGeospatialMapConfigurationArgs) AnalysisGeospatialMapConfigurationPtrInput {
	return (*analysisGeospatialMapConfigurationPtrType)(v)
}

func (*analysisGeospatialMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialMapConfiguration)(nil)).Elem()
}

func (i *analysisGeospatialMapConfigurationPtrType) ToAnalysisGeospatialMapConfigurationPtrOutput() AnalysisGeospatialMapConfigurationPtrOutput {
	return i.ToAnalysisGeospatialMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisGeospatialMapConfigurationPtrType) ToAnalysisGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapConfigurationPtrOutput)
}

type AnalysisGeospatialMapConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialMapConfiguration)(nil)).Elem()
}

func (o AnalysisGeospatialMapConfigurationOutput) ToAnalysisGeospatialMapConfigurationOutput() AnalysisGeospatialMapConfigurationOutput {
	return o
}

func (o AnalysisGeospatialMapConfigurationOutput) ToAnalysisGeospatialMapConfigurationOutputWithContext(ctx context.Context) AnalysisGeospatialMapConfigurationOutput {
	return o
}

func (o AnalysisGeospatialMapConfigurationOutput) ToAnalysisGeospatialMapConfigurationPtrOutput() AnalysisGeospatialMapConfigurationPtrOutput {
	return o.ToAnalysisGeospatialMapConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialMapConfigurationOutput) ToAnalysisGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGeospatialMapConfiguration) *AnalysisGeospatialMapConfiguration {
		return &v
	}).(AnalysisGeospatialMapConfigurationPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationOutput) FieldWells() AnalysisGeospatialMapFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapConfiguration) *AnalysisGeospatialMapFieldWells { return v.FieldWells }).(AnalysisGeospatialMapFieldWellsPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationOutput) MapStyleOptions() AnalysisGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapConfiguration) *AnalysisGeospatialMapStyleOptions {
		return v.MapStyleOptions
	}).(AnalysisGeospatialMapStyleOptionsPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationOutput) PointStyleOptions() AnalysisGeospatialPointStyleOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapConfiguration) *AnalysisGeospatialPointStyleOptions {
		return v.PointStyleOptions
	}).(AnalysisGeospatialPointStyleOptionsPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisGeospatialMapConfigurationOutput) WindowOptions() AnalysisGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapConfiguration) *AnalysisGeospatialWindowOptions { return v.WindowOptions }).(AnalysisGeospatialWindowOptionsPtrOutput)
}

type AnalysisGeospatialMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialMapConfiguration)(nil)).Elem()
}

func (o AnalysisGeospatialMapConfigurationPtrOutput) ToAnalysisGeospatialMapConfigurationPtrOutput() AnalysisGeospatialMapConfigurationPtrOutput {
	return o
}

func (o AnalysisGeospatialMapConfigurationPtrOutput) ToAnalysisGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapConfigurationPtrOutput {
	return o
}

func (o AnalysisGeospatialMapConfigurationPtrOutput) Elem() AnalysisGeospatialMapConfigurationOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapConfiguration) AnalysisGeospatialMapConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisGeospatialMapConfiguration
		return ret
	}).(AnalysisGeospatialMapConfigurationOutput)
}

func (o AnalysisGeospatialMapConfigurationPtrOutput) FieldWells() AnalysisGeospatialMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapConfiguration) *AnalysisGeospatialMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisGeospatialMapFieldWellsPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationPtrOutput) MapStyleOptions() AnalysisGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapConfiguration) *AnalysisGeospatialMapStyleOptions {
		if v == nil {
			return nil
		}
		return v.MapStyleOptions
	}).(AnalysisGeospatialMapStyleOptionsPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationPtrOutput) PointStyleOptions() AnalysisGeospatialPointStyleOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapConfiguration) *AnalysisGeospatialPointStyleOptions {
		if v == nil {
			return nil
		}
		return v.PointStyleOptions
	}).(AnalysisGeospatialPointStyleOptionsPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisGeospatialMapConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisGeospatialMapConfigurationPtrOutput) WindowOptions() AnalysisGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapConfiguration) *AnalysisGeospatialWindowOptions {
		if v == nil {
			return nil
		}
		return v.WindowOptions
	}).(AnalysisGeospatialWindowOptionsPtrOutput)
}

type AnalysisGeospatialMapFieldWells struct {
	GeospatialMapAggregatedFieldWells *AnalysisGeospatialMapAggregatedFieldWells `pulumi:"geospatialMapAggregatedFieldWells"`
}

// AnalysisGeospatialMapFieldWellsInput is an input type that accepts AnalysisGeospatialMapFieldWellsArgs and AnalysisGeospatialMapFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisGeospatialMapFieldWellsInput` via:
//
//	AnalysisGeospatialMapFieldWellsArgs{...}
type AnalysisGeospatialMapFieldWellsInput interface {
	pulumi.Input

	ToAnalysisGeospatialMapFieldWellsOutput() AnalysisGeospatialMapFieldWellsOutput
	ToAnalysisGeospatialMapFieldWellsOutputWithContext(context.Context) AnalysisGeospatialMapFieldWellsOutput
}

type AnalysisGeospatialMapFieldWellsArgs struct {
	GeospatialMapAggregatedFieldWells AnalysisGeospatialMapAggregatedFieldWellsPtrInput `pulumi:"geospatialMapAggregatedFieldWells"`
}

func (AnalysisGeospatialMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialMapFieldWells)(nil)).Elem()
}

func (i AnalysisGeospatialMapFieldWellsArgs) ToAnalysisGeospatialMapFieldWellsOutput() AnalysisGeospatialMapFieldWellsOutput {
	return i.ToAnalysisGeospatialMapFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisGeospatialMapFieldWellsArgs) ToAnalysisGeospatialMapFieldWellsOutputWithContext(ctx context.Context) AnalysisGeospatialMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapFieldWellsOutput)
}

func (i AnalysisGeospatialMapFieldWellsArgs) ToAnalysisGeospatialMapFieldWellsPtrOutput() AnalysisGeospatialMapFieldWellsPtrOutput {
	return i.ToAnalysisGeospatialMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisGeospatialMapFieldWellsArgs) ToAnalysisGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapFieldWellsOutput).ToAnalysisGeospatialMapFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisGeospatialMapFieldWellsPtrInput is an input type that accepts AnalysisGeospatialMapFieldWellsArgs, AnalysisGeospatialMapFieldWellsPtr and AnalysisGeospatialMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisGeospatialMapFieldWellsPtrInput` via:
//
//	        AnalysisGeospatialMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGeospatialMapFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisGeospatialMapFieldWellsPtrOutput() AnalysisGeospatialMapFieldWellsPtrOutput
	ToAnalysisGeospatialMapFieldWellsPtrOutputWithContext(context.Context) AnalysisGeospatialMapFieldWellsPtrOutput
}

type analysisGeospatialMapFieldWellsPtrType AnalysisGeospatialMapFieldWellsArgs

func AnalysisGeospatialMapFieldWellsPtr(v *AnalysisGeospatialMapFieldWellsArgs) AnalysisGeospatialMapFieldWellsPtrInput {
	return (*analysisGeospatialMapFieldWellsPtrType)(v)
}

func (*analysisGeospatialMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialMapFieldWells)(nil)).Elem()
}

func (i *analysisGeospatialMapFieldWellsPtrType) ToAnalysisGeospatialMapFieldWellsPtrOutput() AnalysisGeospatialMapFieldWellsPtrOutput {
	return i.ToAnalysisGeospatialMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisGeospatialMapFieldWellsPtrType) ToAnalysisGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapFieldWellsPtrOutput)
}

type AnalysisGeospatialMapFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialMapFieldWells)(nil)).Elem()
}

func (o AnalysisGeospatialMapFieldWellsOutput) ToAnalysisGeospatialMapFieldWellsOutput() AnalysisGeospatialMapFieldWellsOutput {
	return o
}

func (o AnalysisGeospatialMapFieldWellsOutput) ToAnalysisGeospatialMapFieldWellsOutputWithContext(ctx context.Context) AnalysisGeospatialMapFieldWellsOutput {
	return o
}

func (o AnalysisGeospatialMapFieldWellsOutput) ToAnalysisGeospatialMapFieldWellsPtrOutput() AnalysisGeospatialMapFieldWellsPtrOutput {
	return o.ToAnalysisGeospatialMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialMapFieldWellsOutput) ToAnalysisGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGeospatialMapFieldWells) *AnalysisGeospatialMapFieldWells {
		return &v
	}).(AnalysisGeospatialMapFieldWellsPtrOutput)
}

func (o AnalysisGeospatialMapFieldWellsOutput) GeospatialMapAggregatedFieldWells() AnalysisGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapFieldWells) *AnalysisGeospatialMapAggregatedFieldWells {
		return v.GeospatialMapAggregatedFieldWells
	}).(AnalysisGeospatialMapAggregatedFieldWellsPtrOutput)
}

type AnalysisGeospatialMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialMapFieldWells)(nil)).Elem()
}

func (o AnalysisGeospatialMapFieldWellsPtrOutput) ToAnalysisGeospatialMapFieldWellsPtrOutput() AnalysisGeospatialMapFieldWellsPtrOutput {
	return o
}

func (o AnalysisGeospatialMapFieldWellsPtrOutput) ToAnalysisGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapFieldWellsPtrOutput {
	return o
}

func (o AnalysisGeospatialMapFieldWellsPtrOutput) Elem() AnalysisGeospatialMapFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapFieldWells) AnalysisGeospatialMapFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisGeospatialMapFieldWells
		return ret
	}).(AnalysisGeospatialMapFieldWellsOutput)
}

func (o AnalysisGeospatialMapFieldWellsPtrOutput) GeospatialMapAggregatedFieldWells() AnalysisGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapFieldWells) *AnalysisGeospatialMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.GeospatialMapAggregatedFieldWells
	}).(AnalysisGeospatialMapAggregatedFieldWellsPtrOutput)
}

type AnalysisGeospatialMapStyleOptions struct {
	BaseMapStyle *AnalysisBaseMapStyleType `pulumi:"baseMapStyle"`
}

// AnalysisGeospatialMapStyleOptionsInput is an input type that accepts AnalysisGeospatialMapStyleOptionsArgs and AnalysisGeospatialMapStyleOptionsOutput values.
// You can construct a concrete instance of `AnalysisGeospatialMapStyleOptionsInput` via:
//
//	AnalysisGeospatialMapStyleOptionsArgs{...}
type AnalysisGeospatialMapStyleOptionsInput interface {
	pulumi.Input

	ToAnalysisGeospatialMapStyleOptionsOutput() AnalysisGeospatialMapStyleOptionsOutput
	ToAnalysisGeospatialMapStyleOptionsOutputWithContext(context.Context) AnalysisGeospatialMapStyleOptionsOutput
}

type AnalysisGeospatialMapStyleOptionsArgs struct {
	BaseMapStyle AnalysisBaseMapStyleTypePtrInput `pulumi:"baseMapStyle"`
}

func (AnalysisGeospatialMapStyleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialMapStyleOptions)(nil)).Elem()
}

func (i AnalysisGeospatialMapStyleOptionsArgs) ToAnalysisGeospatialMapStyleOptionsOutput() AnalysisGeospatialMapStyleOptionsOutput {
	return i.ToAnalysisGeospatialMapStyleOptionsOutputWithContext(context.Background())
}

func (i AnalysisGeospatialMapStyleOptionsArgs) ToAnalysisGeospatialMapStyleOptionsOutputWithContext(ctx context.Context) AnalysisGeospatialMapStyleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapStyleOptionsOutput)
}

func (i AnalysisGeospatialMapStyleOptionsArgs) ToAnalysisGeospatialMapStyleOptionsPtrOutput() AnalysisGeospatialMapStyleOptionsPtrOutput {
	return i.ToAnalysisGeospatialMapStyleOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisGeospatialMapStyleOptionsArgs) ToAnalysisGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapStyleOptionsOutput).ToAnalysisGeospatialMapStyleOptionsPtrOutputWithContext(ctx)
}

// AnalysisGeospatialMapStyleOptionsPtrInput is an input type that accepts AnalysisGeospatialMapStyleOptionsArgs, AnalysisGeospatialMapStyleOptionsPtr and AnalysisGeospatialMapStyleOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisGeospatialMapStyleOptionsPtrInput` via:
//
//	        AnalysisGeospatialMapStyleOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGeospatialMapStyleOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisGeospatialMapStyleOptionsPtrOutput() AnalysisGeospatialMapStyleOptionsPtrOutput
	ToAnalysisGeospatialMapStyleOptionsPtrOutputWithContext(context.Context) AnalysisGeospatialMapStyleOptionsPtrOutput
}

type analysisGeospatialMapStyleOptionsPtrType AnalysisGeospatialMapStyleOptionsArgs

func AnalysisGeospatialMapStyleOptionsPtr(v *AnalysisGeospatialMapStyleOptionsArgs) AnalysisGeospatialMapStyleOptionsPtrInput {
	return (*analysisGeospatialMapStyleOptionsPtrType)(v)
}

func (*analysisGeospatialMapStyleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialMapStyleOptions)(nil)).Elem()
}

func (i *analysisGeospatialMapStyleOptionsPtrType) ToAnalysisGeospatialMapStyleOptionsPtrOutput() AnalysisGeospatialMapStyleOptionsPtrOutput {
	return i.ToAnalysisGeospatialMapStyleOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisGeospatialMapStyleOptionsPtrType) ToAnalysisGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapStyleOptionsPtrOutput)
}

type AnalysisGeospatialMapStyleOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialMapStyleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialMapStyleOptions)(nil)).Elem()
}

func (o AnalysisGeospatialMapStyleOptionsOutput) ToAnalysisGeospatialMapStyleOptionsOutput() AnalysisGeospatialMapStyleOptionsOutput {
	return o
}

func (o AnalysisGeospatialMapStyleOptionsOutput) ToAnalysisGeospatialMapStyleOptionsOutputWithContext(ctx context.Context) AnalysisGeospatialMapStyleOptionsOutput {
	return o
}

func (o AnalysisGeospatialMapStyleOptionsOutput) ToAnalysisGeospatialMapStyleOptionsPtrOutput() AnalysisGeospatialMapStyleOptionsPtrOutput {
	return o.ToAnalysisGeospatialMapStyleOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialMapStyleOptionsOutput) ToAnalysisGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGeospatialMapStyleOptions) *AnalysisGeospatialMapStyleOptions {
		return &v
	}).(AnalysisGeospatialMapStyleOptionsPtrOutput)
}

func (o AnalysisGeospatialMapStyleOptionsOutput) BaseMapStyle() AnalysisBaseMapStyleTypePtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapStyleOptions) *AnalysisBaseMapStyleType { return v.BaseMapStyle }).(AnalysisBaseMapStyleTypePtrOutput)
}

type AnalysisGeospatialMapStyleOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialMapStyleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialMapStyleOptions)(nil)).Elem()
}

func (o AnalysisGeospatialMapStyleOptionsPtrOutput) ToAnalysisGeospatialMapStyleOptionsPtrOutput() AnalysisGeospatialMapStyleOptionsPtrOutput {
	return o
}

func (o AnalysisGeospatialMapStyleOptionsPtrOutput) ToAnalysisGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapStyleOptionsPtrOutput {
	return o
}

func (o AnalysisGeospatialMapStyleOptionsPtrOutput) Elem() AnalysisGeospatialMapStyleOptionsOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapStyleOptions) AnalysisGeospatialMapStyleOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisGeospatialMapStyleOptions
		return ret
	}).(AnalysisGeospatialMapStyleOptionsOutput)
}

func (o AnalysisGeospatialMapStyleOptionsPtrOutput) BaseMapStyle() AnalysisBaseMapStyleTypePtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapStyleOptions) *AnalysisBaseMapStyleType {
		if v == nil {
			return nil
		}
		return v.BaseMapStyle
	}).(AnalysisBaseMapStyleTypePtrOutput)
}

type AnalysisGeospatialMapVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisGeospatialMapConfiguration `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisGeospatialMapVisualInput is an input type that accepts AnalysisGeospatialMapVisualArgs and AnalysisGeospatialMapVisualOutput values.
// You can construct a concrete instance of `AnalysisGeospatialMapVisualInput` via:
//
//	AnalysisGeospatialMapVisualArgs{...}
type AnalysisGeospatialMapVisualInput interface {
	pulumi.Input

	ToAnalysisGeospatialMapVisualOutput() AnalysisGeospatialMapVisualOutput
	ToAnalysisGeospatialMapVisualOutputWithContext(context.Context) AnalysisGeospatialMapVisualOutput
}

type AnalysisGeospatialMapVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisGeospatialMapConfigurationPtrInput `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisGeospatialMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialMapVisual)(nil)).Elem()
}

func (i AnalysisGeospatialMapVisualArgs) ToAnalysisGeospatialMapVisualOutput() AnalysisGeospatialMapVisualOutput {
	return i.ToAnalysisGeospatialMapVisualOutputWithContext(context.Background())
}

func (i AnalysisGeospatialMapVisualArgs) ToAnalysisGeospatialMapVisualOutputWithContext(ctx context.Context) AnalysisGeospatialMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapVisualOutput)
}

func (i AnalysisGeospatialMapVisualArgs) ToAnalysisGeospatialMapVisualPtrOutput() AnalysisGeospatialMapVisualPtrOutput {
	return i.ToAnalysisGeospatialMapVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisGeospatialMapVisualArgs) ToAnalysisGeospatialMapVisualPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapVisualOutput).ToAnalysisGeospatialMapVisualPtrOutputWithContext(ctx)
}

// AnalysisGeospatialMapVisualPtrInput is an input type that accepts AnalysisGeospatialMapVisualArgs, AnalysisGeospatialMapVisualPtr and AnalysisGeospatialMapVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisGeospatialMapVisualPtrInput` via:
//
//	        AnalysisGeospatialMapVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisGeospatialMapVisualPtrInput interface {
	pulumi.Input

	ToAnalysisGeospatialMapVisualPtrOutput() AnalysisGeospatialMapVisualPtrOutput
	ToAnalysisGeospatialMapVisualPtrOutputWithContext(context.Context) AnalysisGeospatialMapVisualPtrOutput
}

type analysisGeospatialMapVisualPtrType AnalysisGeospatialMapVisualArgs

func AnalysisGeospatialMapVisualPtr(v *AnalysisGeospatialMapVisualArgs) AnalysisGeospatialMapVisualPtrInput {
	return (*analysisGeospatialMapVisualPtrType)(v)
}

func (*analysisGeospatialMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialMapVisual)(nil)).Elem()
}

func (i *analysisGeospatialMapVisualPtrType) ToAnalysisGeospatialMapVisualPtrOutput() AnalysisGeospatialMapVisualPtrOutput {
	return i.ToAnalysisGeospatialMapVisualPtrOutputWithContext(context.Background())
}

func (i *analysisGeospatialMapVisualPtrType) ToAnalysisGeospatialMapVisualPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialMapVisualPtrOutput)
}

type AnalysisGeospatialMapVisualOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialMapVisual)(nil)).Elem()
}

func (o AnalysisGeospatialMapVisualOutput) ToAnalysisGeospatialMapVisualOutput() AnalysisGeospatialMapVisualOutput {
	return o
}

func (o AnalysisGeospatialMapVisualOutput) ToAnalysisGeospatialMapVisualOutputWithContext(ctx context.Context) AnalysisGeospatialMapVisualOutput {
	return o
}

func (o AnalysisGeospatialMapVisualOutput) ToAnalysisGeospatialMapVisualPtrOutput() AnalysisGeospatialMapVisualPtrOutput {
	return o.ToAnalysisGeospatialMapVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialMapVisualOutput) ToAnalysisGeospatialMapVisualPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGeospatialMapVisual) *AnalysisGeospatialMapVisual {
		return &v
	}).(AnalysisGeospatialMapVisualPtrOutput)
}

func (o AnalysisGeospatialMapVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisGeospatialMapVisualOutput) ChartConfiguration() AnalysisGeospatialMapConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapVisual) *AnalysisGeospatialMapConfiguration { return v.ChartConfiguration }).(AnalysisGeospatialMapConfigurationPtrOutput)
}

func (o AnalysisGeospatialMapVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisGeospatialMapVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisGeospatialMapVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisGeospatialMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisGeospatialMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisGeospatialMapVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialMapVisual)(nil)).Elem()
}

func (o AnalysisGeospatialMapVisualPtrOutput) ToAnalysisGeospatialMapVisualPtrOutput() AnalysisGeospatialMapVisualPtrOutput {
	return o
}

func (o AnalysisGeospatialMapVisualPtrOutput) ToAnalysisGeospatialMapVisualPtrOutputWithContext(ctx context.Context) AnalysisGeospatialMapVisualPtrOutput {
	return o
}

func (o AnalysisGeospatialMapVisualPtrOutput) Elem() AnalysisGeospatialMapVisualOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapVisual) AnalysisGeospatialMapVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisGeospatialMapVisual
		return ret
	}).(AnalysisGeospatialMapVisualOutput)
}

func (o AnalysisGeospatialMapVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisGeospatialMapVisualPtrOutput) ChartConfiguration() AnalysisGeospatialMapConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapVisual) *AnalysisGeospatialMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisGeospatialMapConfigurationPtrOutput)
}

func (o AnalysisGeospatialMapVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisGeospatialMapVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisGeospatialMapVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisGeospatialMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisGeospatialPointStyleOptions struct {
	ClusterMarkerConfiguration *AnalysisClusterMarkerConfiguration   `pulumi:"clusterMarkerConfiguration"`
	SelectedPointStyle         *AnalysisGeospatialSelectedPointStyle `pulumi:"selectedPointStyle"`
}

// AnalysisGeospatialPointStyleOptionsInput is an input type that accepts AnalysisGeospatialPointStyleOptionsArgs and AnalysisGeospatialPointStyleOptionsOutput values.
// You can construct a concrete instance of `AnalysisGeospatialPointStyleOptionsInput` via:
//
//	AnalysisGeospatialPointStyleOptionsArgs{...}
type AnalysisGeospatialPointStyleOptionsInput interface {
	pulumi.Input

	ToAnalysisGeospatialPointStyleOptionsOutput() AnalysisGeospatialPointStyleOptionsOutput
	ToAnalysisGeospatialPointStyleOptionsOutputWithContext(context.Context) AnalysisGeospatialPointStyleOptionsOutput
}

type AnalysisGeospatialPointStyleOptionsArgs struct {
	ClusterMarkerConfiguration AnalysisClusterMarkerConfigurationPtrInput   `pulumi:"clusterMarkerConfiguration"`
	SelectedPointStyle         AnalysisGeospatialSelectedPointStylePtrInput `pulumi:"selectedPointStyle"`
}

func (AnalysisGeospatialPointStyleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialPointStyleOptions)(nil)).Elem()
}

func (i AnalysisGeospatialPointStyleOptionsArgs) ToAnalysisGeospatialPointStyleOptionsOutput() AnalysisGeospatialPointStyleOptionsOutput {
	return i.ToAnalysisGeospatialPointStyleOptionsOutputWithContext(context.Background())
}

func (i AnalysisGeospatialPointStyleOptionsArgs) ToAnalysisGeospatialPointStyleOptionsOutputWithContext(ctx context.Context) AnalysisGeospatialPointStyleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialPointStyleOptionsOutput)
}

func (i AnalysisGeospatialPointStyleOptionsArgs) ToAnalysisGeospatialPointStyleOptionsPtrOutput() AnalysisGeospatialPointStyleOptionsPtrOutput {
	return i.ToAnalysisGeospatialPointStyleOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisGeospatialPointStyleOptionsArgs) ToAnalysisGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialPointStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialPointStyleOptionsOutput).ToAnalysisGeospatialPointStyleOptionsPtrOutputWithContext(ctx)
}

// AnalysisGeospatialPointStyleOptionsPtrInput is an input type that accepts AnalysisGeospatialPointStyleOptionsArgs, AnalysisGeospatialPointStyleOptionsPtr and AnalysisGeospatialPointStyleOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisGeospatialPointStyleOptionsPtrInput` via:
//
//	        AnalysisGeospatialPointStyleOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGeospatialPointStyleOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisGeospatialPointStyleOptionsPtrOutput() AnalysisGeospatialPointStyleOptionsPtrOutput
	ToAnalysisGeospatialPointStyleOptionsPtrOutputWithContext(context.Context) AnalysisGeospatialPointStyleOptionsPtrOutput
}

type analysisGeospatialPointStyleOptionsPtrType AnalysisGeospatialPointStyleOptionsArgs

func AnalysisGeospatialPointStyleOptionsPtr(v *AnalysisGeospatialPointStyleOptionsArgs) AnalysisGeospatialPointStyleOptionsPtrInput {
	return (*analysisGeospatialPointStyleOptionsPtrType)(v)
}

func (*analysisGeospatialPointStyleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialPointStyleOptions)(nil)).Elem()
}

func (i *analysisGeospatialPointStyleOptionsPtrType) ToAnalysisGeospatialPointStyleOptionsPtrOutput() AnalysisGeospatialPointStyleOptionsPtrOutput {
	return i.ToAnalysisGeospatialPointStyleOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisGeospatialPointStyleOptionsPtrType) ToAnalysisGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialPointStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialPointStyleOptionsPtrOutput)
}

type AnalysisGeospatialPointStyleOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialPointStyleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialPointStyleOptions)(nil)).Elem()
}

func (o AnalysisGeospatialPointStyleOptionsOutput) ToAnalysisGeospatialPointStyleOptionsOutput() AnalysisGeospatialPointStyleOptionsOutput {
	return o
}

func (o AnalysisGeospatialPointStyleOptionsOutput) ToAnalysisGeospatialPointStyleOptionsOutputWithContext(ctx context.Context) AnalysisGeospatialPointStyleOptionsOutput {
	return o
}

func (o AnalysisGeospatialPointStyleOptionsOutput) ToAnalysisGeospatialPointStyleOptionsPtrOutput() AnalysisGeospatialPointStyleOptionsPtrOutput {
	return o.ToAnalysisGeospatialPointStyleOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialPointStyleOptionsOutput) ToAnalysisGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialPointStyleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGeospatialPointStyleOptions) *AnalysisGeospatialPointStyleOptions {
		return &v
	}).(AnalysisGeospatialPointStyleOptionsPtrOutput)
}

func (o AnalysisGeospatialPointStyleOptionsOutput) ClusterMarkerConfiguration() AnalysisClusterMarkerConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialPointStyleOptions) *AnalysisClusterMarkerConfiguration {
		return v.ClusterMarkerConfiguration
	}).(AnalysisClusterMarkerConfigurationPtrOutput)
}

func (o AnalysisGeospatialPointStyleOptionsOutput) SelectedPointStyle() AnalysisGeospatialSelectedPointStylePtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialPointStyleOptions) *AnalysisGeospatialSelectedPointStyle {
		return v.SelectedPointStyle
	}).(AnalysisGeospatialSelectedPointStylePtrOutput)
}

type AnalysisGeospatialPointStyleOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialPointStyleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialPointStyleOptions)(nil)).Elem()
}

func (o AnalysisGeospatialPointStyleOptionsPtrOutput) ToAnalysisGeospatialPointStyleOptionsPtrOutput() AnalysisGeospatialPointStyleOptionsPtrOutput {
	return o
}

func (o AnalysisGeospatialPointStyleOptionsPtrOutput) ToAnalysisGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialPointStyleOptionsPtrOutput {
	return o
}

func (o AnalysisGeospatialPointStyleOptionsPtrOutput) Elem() AnalysisGeospatialPointStyleOptionsOutput {
	return o.ApplyT(func(v *AnalysisGeospatialPointStyleOptions) AnalysisGeospatialPointStyleOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisGeospatialPointStyleOptions
		return ret
	}).(AnalysisGeospatialPointStyleOptionsOutput)
}

func (o AnalysisGeospatialPointStyleOptionsPtrOutput) ClusterMarkerConfiguration() AnalysisClusterMarkerConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialPointStyleOptions) *AnalysisClusterMarkerConfiguration {
		if v == nil {
			return nil
		}
		return v.ClusterMarkerConfiguration
	}).(AnalysisClusterMarkerConfigurationPtrOutput)
}

func (o AnalysisGeospatialPointStyleOptionsPtrOutput) SelectedPointStyle() AnalysisGeospatialSelectedPointStylePtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialPointStyleOptions) *AnalysisGeospatialSelectedPointStyle {
		if v == nil {
			return nil
		}
		return v.SelectedPointStyle
	}).(AnalysisGeospatialSelectedPointStylePtrOutput)
}

type AnalysisGeospatialWindowOptions struct {
	Bounds      *AnalysisGeospatialCoordinateBounds `pulumi:"bounds"`
	MapZoomMode *AnalysisMapZoomMode                `pulumi:"mapZoomMode"`
}

// AnalysisGeospatialWindowOptionsInput is an input type that accepts AnalysisGeospatialWindowOptionsArgs and AnalysisGeospatialWindowOptionsOutput values.
// You can construct a concrete instance of `AnalysisGeospatialWindowOptionsInput` via:
//
//	AnalysisGeospatialWindowOptionsArgs{...}
type AnalysisGeospatialWindowOptionsInput interface {
	pulumi.Input

	ToAnalysisGeospatialWindowOptionsOutput() AnalysisGeospatialWindowOptionsOutput
	ToAnalysisGeospatialWindowOptionsOutputWithContext(context.Context) AnalysisGeospatialWindowOptionsOutput
}

type AnalysisGeospatialWindowOptionsArgs struct {
	Bounds      AnalysisGeospatialCoordinateBoundsPtrInput `pulumi:"bounds"`
	MapZoomMode AnalysisMapZoomModePtrInput                `pulumi:"mapZoomMode"`
}

func (AnalysisGeospatialWindowOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialWindowOptions)(nil)).Elem()
}

func (i AnalysisGeospatialWindowOptionsArgs) ToAnalysisGeospatialWindowOptionsOutput() AnalysisGeospatialWindowOptionsOutput {
	return i.ToAnalysisGeospatialWindowOptionsOutputWithContext(context.Background())
}

func (i AnalysisGeospatialWindowOptionsArgs) ToAnalysisGeospatialWindowOptionsOutputWithContext(ctx context.Context) AnalysisGeospatialWindowOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialWindowOptionsOutput)
}

func (i AnalysisGeospatialWindowOptionsArgs) ToAnalysisGeospatialWindowOptionsPtrOutput() AnalysisGeospatialWindowOptionsPtrOutput {
	return i.ToAnalysisGeospatialWindowOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisGeospatialWindowOptionsArgs) ToAnalysisGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialWindowOptionsOutput).ToAnalysisGeospatialWindowOptionsPtrOutputWithContext(ctx)
}

// AnalysisGeospatialWindowOptionsPtrInput is an input type that accepts AnalysisGeospatialWindowOptionsArgs, AnalysisGeospatialWindowOptionsPtr and AnalysisGeospatialWindowOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisGeospatialWindowOptionsPtrInput` via:
//
//	        AnalysisGeospatialWindowOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGeospatialWindowOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisGeospatialWindowOptionsPtrOutput() AnalysisGeospatialWindowOptionsPtrOutput
	ToAnalysisGeospatialWindowOptionsPtrOutputWithContext(context.Context) AnalysisGeospatialWindowOptionsPtrOutput
}

type analysisGeospatialWindowOptionsPtrType AnalysisGeospatialWindowOptionsArgs

func AnalysisGeospatialWindowOptionsPtr(v *AnalysisGeospatialWindowOptionsArgs) AnalysisGeospatialWindowOptionsPtrInput {
	return (*analysisGeospatialWindowOptionsPtrType)(v)
}

func (*analysisGeospatialWindowOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialWindowOptions)(nil)).Elem()
}

func (i *analysisGeospatialWindowOptionsPtrType) ToAnalysisGeospatialWindowOptionsPtrOutput() AnalysisGeospatialWindowOptionsPtrOutput {
	return i.ToAnalysisGeospatialWindowOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisGeospatialWindowOptionsPtrType) ToAnalysisGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGeospatialWindowOptionsPtrOutput)
}

type AnalysisGeospatialWindowOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialWindowOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialWindowOptions)(nil)).Elem()
}

func (o AnalysisGeospatialWindowOptionsOutput) ToAnalysisGeospatialWindowOptionsOutput() AnalysisGeospatialWindowOptionsOutput {
	return o
}

func (o AnalysisGeospatialWindowOptionsOutput) ToAnalysisGeospatialWindowOptionsOutputWithContext(ctx context.Context) AnalysisGeospatialWindowOptionsOutput {
	return o
}

func (o AnalysisGeospatialWindowOptionsOutput) ToAnalysisGeospatialWindowOptionsPtrOutput() AnalysisGeospatialWindowOptionsPtrOutput {
	return o.ToAnalysisGeospatialWindowOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialWindowOptionsOutput) ToAnalysisGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialWindowOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGeospatialWindowOptions) *AnalysisGeospatialWindowOptions {
		return &v
	}).(AnalysisGeospatialWindowOptionsPtrOutput)
}

func (o AnalysisGeospatialWindowOptionsOutput) Bounds() AnalysisGeospatialCoordinateBoundsPtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialWindowOptions) *AnalysisGeospatialCoordinateBounds { return v.Bounds }).(AnalysisGeospatialCoordinateBoundsPtrOutput)
}

func (o AnalysisGeospatialWindowOptionsOutput) MapZoomMode() AnalysisMapZoomModePtrOutput {
	return o.ApplyT(func(v AnalysisGeospatialWindowOptions) *AnalysisMapZoomMode { return v.MapZoomMode }).(AnalysisMapZoomModePtrOutput)
}

type AnalysisGeospatialWindowOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialWindowOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialWindowOptions)(nil)).Elem()
}

func (o AnalysisGeospatialWindowOptionsPtrOutput) ToAnalysisGeospatialWindowOptionsPtrOutput() AnalysisGeospatialWindowOptionsPtrOutput {
	return o
}

func (o AnalysisGeospatialWindowOptionsPtrOutput) ToAnalysisGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) AnalysisGeospatialWindowOptionsPtrOutput {
	return o
}

func (o AnalysisGeospatialWindowOptionsPtrOutput) Elem() AnalysisGeospatialWindowOptionsOutput {
	return o.ApplyT(func(v *AnalysisGeospatialWindowOptions) AnalysisGeospatialWindowOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisGeospatialWindowOptions
		return ret
	}).(AnalysisGeospatialWindowOptionsOutput)
}

func (o AnalysisGeospatialWindowOptionsPtrOutput) Bounds() AnalysisGeospatialCoordinateBoundsPtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialWindowOptions) *AnalysisGeospatialCoordinateBounds {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(AnalysisGeospatialCoordinateBoundsPtrOutput)
}

func (o AnalysisGeospatialWindowOptionsPtrOutput) MapZoomMode() AnalysisMapZoomModePtrOutput {
	return o.ApplyT(func(v *AnalysisGeospatialWindowOptions) *AnalysisMapZoomMode {
		if v == nil {
			return nil
		}
		return v.MapZoomMode
	}).(AnalysisMapZoomModePtrOutput)
}

type AnalysisGlobalTableBorderOptions struct {
	SideSpecificBorder *AnalysisTableSideBorderOptions `pulumi:"sideSpecificBorder"`
	UniformBorder      *AnalysisTableBorderOptions     `pulumi:"uniformBorder"`
}

// AnalysisGlobalTableBorderOptionsInput is an input type that accepts AnalysisGlobalTableBorderOptionsArgs and AnalysisGlobalTableBorderOptionsOutput values.
// You can construct a concrete instance of `AnalysisGlobalTableBorderOptionsInput` via:
//
//	AnalysisGlobalTableBorderOptionsArgs{...}
type AnalysisGlobalTableBorderOptionsInput interface {
	pulumi.Input

	ToAnalysisGlobalTableBorderOptionsOutput() AnalysisGlobalTableBorderOptionsOutput
	ToAnalysisGlobalTableBorderOptionsOutputWithContext(context.Context) AnalysisGlobalTableBorderOptionsOutput
}

type AnalysisGlobalTableBorderOptionsArgs struct {
	SideSpecificBorder AnalysisTableSideBorderOptionsPtrInput `pulumi:"sideSpecificBorder"`
	UniformBorder      AnalysisTableBorderOptionsPtrInput     `pulumi:"uniformBorder"`
}

func (AnalysisGlobalTableBorderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGlobalTableBorderOptions)(nil)).Elem()
}

func (i AnalysisGlobalTableBorderOptionsArgs) ToAnalysisGlobalTableBorderOptionsOutput() AnalysisGlobalTableBorderOptionsOutput {
	return i.ToAnalysisGlobalTableBorderOptionsOutputWithContext(context.Background())
}

func (i AnalysisGlobalTableBorderOptionsArgs) ToAnalysisGlobalTableBorderOptionsOutputWithContext(ctx context.Context) AnalysisGlobalTableBorderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGlobalTableBorderOptionsOutput)
}

func (i AnalysisGlobalTableBorderOptionsArgs) ToAnalysisGlobalTableBorderOptionsPtrOutput() AnalysisGlobalTableBorderOptionsPtrOutput {
	return i.ToAnalysisGlobalTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisGlobalTableBorderOptionsArgs) ToAnalysisGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisGlobalTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGlobalTableBorderOptionsOutput).ToAnalysisGlobalTableBorderOptionsPtrOutputWithContext(ctx)
}

// AnalysisGlobalTableBorderOptionsPtrInput is an input type that accepts AnalysisGlobalTableBorderOptionsArgs, AnalysisGlobalTableBorderOptionsPtr and AnalysisGlobalTableBorderOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisGlobalTableBorderOptionsPtrInput` via:
//
//	        AnalysisGlobalTableBorderOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGlobalTableBorderOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisGlobalTableBorderOptionsPtrOutput() AnalysisGlobalTableBorderOptionsPtrOutput
	ToAnalysisGlobalTableBorderOptionsPtrOutputWithContext(context.Context) AnalysisGlobalTableBorderOptionsPtrOutput
}

type analysisGlobalTableBorderOptionsPtrType AnalysisGlobalTableBorderOptionsArgs

func AnalysisGlobalTableBorderOptionsPtr(v *AnalysisGlobalTableBorderOptionsArgs) AnalysisGlobalTableBorderOptionsPtrInput {
	return (*analysisGlobalTableBorderOptionsPtrType)(v)
}

func (*analysisGlobalTableBorderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGlobalTableBorderOptions)(nil)).Elem()
}

func (i *analysisGlobalTableBorderOptionsPtrType) ToAnalysisGlobalTableBorderOptionsPtrOutput() AnalysisGlobalTableBorderOptionsPtrOutput {
	return i.ToAnalysisGlobalTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisGlobalTableBorderOptionsPtrType) ToAnalysisGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisGlobalTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGlobalTableBorderOptionsPtrOutput)
}

type AnalysisGlobalTableBorderOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisGlobalTableBorderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGlobalTableBorderOptions)(nil)).Elem()
}

func (o AnalysisGlobalTableBorderOptionsOutput) ToAnalysisGlobalTableBorderOptionsOutput() AnalysisGlobalTableBorderOptionsOutput {
	return o
}

func (o AnalysisGlobalTableBorderOptionsOutput) ToAnalysisGlobalTableBorderOptionsOutputWithContext(ctx context.Context) AnalysisGlobalTableBorderOptionsOutput {
	return o
}

func (o AnalysisGlobalTableBorderOptionsOutput) ToAnalysisGlobalTableBorderOptionsPtrOutput() AnalysisGlobalTableBorderOptionsPtrOutput {
	return o.ToAnalysisGlobalTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisGlobalTableBorderOptionsOutput) ToAnalysisGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisGlobalTableBorderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGlobalTableBorderOptions) *AnalysisGlobalTableBorderOptions {
		return &v
	}).(AnalysisGlobalTableBorderOptionsPtrOutput)
}

func (o AnalysisGlobalTableBorderOptionsOutput) SideSpecificBorder() AnalysisTableSideBorderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGlobalTableBorderOptions) *AnalysisTableSideBorderOptions { return v.SideSpecificBorder }).(AnalysisTableSideBorderOptionsPtrOutput)
}

func (o AnalysisGlobalTableBorderOptionsOutput) UniformBorder() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGlobalTableBorderOptions) *AnalysisTableBorderOptions { return v.UniformBorder }).(AnalysisTableBorderOptionsPtrOutput)
}

type AnalysisGlobalTableBorderOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGlobalTableBorderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGlobalTableBorderOptions)(nil)).Elem()
}

func (o AnalysisGlobalTableBorderOptionsPtrOutput) ToAnalysisGlobalTableBorderOptionsPtrOutput() AnalysisGlobalTableBorderOptionsPtrOutput {
	return o
}

func (o AnalysisGlobalTableBorderOptionsPtrOutput) ToAnalysisGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisGlobalTableBorderOptionsPtrOutput {
	return o
}

func (o AnalysisGlobalTableBorderOptionsPtrOutput) Elem() AnalysisGlobalTableBorderOptionsOutput {
	return o.ApplyT(func(v *AnalysisGlobalTableBorderOptions) AnalysisGlobalTableBorderOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisGlobalTableBorderOptions
		return ret
	}).(AnalysisGlobalTableBorderOptionsOutput)
}

func (o AnalysisGlobalTableBorderOptionsPtrOutput) SideSpecificBorder() AnalysisTableSideBorderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGlobalTableBorderOptions) *AnalysisTableSideBorderOptions {
		if v == nil {
			return nil
		}
		return v.SideSpecificBorder
	}).(AnalysisTableSideBorderOptionsPtrOutput)
}

func (o AnalysisGlobalTableBorderOptionsPtrOutput) UniformBorder() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGlobalTableBorderOptions) *AnalysisTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.UniformBorder
	}).(AnalysisTableBorderOptionsPtrOutput)
}

type AnalysisGradientColor struct {
	Stops []AnalysisGradientStop `pulumi:"stops"`
}

// AnalysisGradientColorInput is an input type that accepts AnalysisGradientColorArgs and AnalysisGradientColorOutput values.
// You can construct a concrete instance of `AnalysisGradientColorInput` via:
//
//	AnalysisGradientColorArgs{...}
type AnalysisGradientColorInput interface {
	pulumi.Input

	ToAnalysisGradientColorOutput() AnalysisGradientColorOutput
	ToAnalysisGradientColorOutputWithContext(context.Context) AnalysisGradientColorOutput
}

type AnalysisGradientColorArgs struct {
	Stops AnalysisGradientStopArrayInput `pulumi:"stops"`
}

func (AnalysisGradientColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGradientColor)(nil)).Elem()
}

func (i AnalysisGradientColorArgs) ToAnalysisGradientColorOutput() AnalysisGradientColorOutput {
	return i.ToAnalysisGradientColorOutputWithContext(context.Background())
}

func (i AnalysisGradientColorArgs) ToAnalysisGradientColorOutputWithContext(ctx context.Context) AnalysisGradientColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGradientColorOutput)
}

func (i AnalysisGradientColorArgs) ToAnalysisGradientColorPtrOutput() AnalysisGradientColorPtrOutput {
	return i.ToAnalysisGradientColorPtrOutputWithContext(context.Background())
}

func (i AnalysisGradientColorArgs) ToAnalysisGradientColorPtrOutputWithContext(ctx context.Context) AnalysisGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGradientColorOutput).ToAnalysisGradientColorPtrOutputWithContext(ctx)
}

// AnalysisGradientColorPtrInput is an input type that accepts AnalysisGradientColorArgs, AnalysisGradientColorPtr and AnalysisGradientColorPtrOutput values.
// You can construct a concrete instance of `AnalysisGradientColorPtrInput` via:
//
//	        AnalysisGradientColorArgs{...}
//
//	or:
//
//	        nil
type AnalysisGradientColorPtrInput interface {
	pulumi.Input

	ToAnalysisGradientColorPtrOutput() AnalysisGradientColorPtrOutput
	ToAnalysisGradientColorPtrOutputWithContext(context.Context) AnalysisGradientColorPtrOutput
}

type analysisGradientColorPtrType AnalysisGradientColorArgs

func AnalysisGradientColorPtr(v *AnalysisGradientColorArgs) AnalysisGradientColorPtrInput {
	return (*analysisGradientColorPtrType)(v)
}

func (*analysisGradientColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGradientColor)(nil)).Elem()
}

func (i *analysisGradientColorPtrType) ToAnalysisGradientColorPtrOutput() AnalysisGradientColorPtrOutput {
	return i.ToAnalysisGradientColorPtrOutputWithContext(context.Background())
}

func (i *analysisGradientColorPtrType) ToAnalysisGradientColorPtrOutputWithContext(ctx context.Context) AnalysisGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGradientColorPtrOutput)
}

type AnalysisGradientColorOutput struct{ *pulumi.OutputState }

func (AnalysisGradientColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGradientColor)(nil)).Elem()
}

func (o AnalysisGradientColorOutput) ToAnalysisGradientColorOutput() AnalysisGradientColorOutput {
	return o
}

func (o AnalysisGradientColorOutput) ToAnalysisGradientColorOutputWithContext(ctx context.Context) AnalysisGradientColorOutput {
	return o
}

func (o AnalysisGradientColorOutput) ToAnalysisGradientColorPtrOutput() AnalysisGradientColorPtrOutput {
	return o.ToAnalysisGradientColorPtrOutputWithContext(context.Background())
}

func (o AnalysisGradientColorOutput) ToAnalysisGradientColorPtrOutputWithContext(ctx context.Context) AnalysisGradientColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGradientColor) *AnalysisGradientColor {
		return &v
	}).(AnalysisGradientColorPtrOutput)
}

func (o AnalysisGradientColorOutput) Stops() AnalysisGradientStopArrayOutput {
	return o.ApplyT(func(v AnalysisGradientColor) []AnalysisGradientStop { return v.Stops }).(AnalysisGradientStopArrayOutput)
}

type AnalysisGradientColorPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGradientColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGradientColor)(nil)).Elem()
}

func (o AnalysisGradientColorPtrOutput) ToAnalysisGradientColorPtrOutput() AnalysisGradientColorPtrOutput {
	return o
}

func (o AnalysisGradientColorPtrOutput) ToAnalysisGradientColorPtrOutputWithContext(ctx context.Context) AnalysisGradientColorPtrOutput {
	return o
}

func (o AnalysisGradientColorPtrOutput) Elem() AnalysisGradientColorOutput {
	return o.ApplyT(func(v *AnalysisGradientColor) AnalysisGradientColor {
		if v != nil {
			return *v
		}
		var ret AnalysisGradientColor
		return ret
	}).(AnalysisGradientColorOutput)
}

func (o AnalysisGradientColorPtrOutput) Stops() AnalysisGradientStopArrayOutput {
	return o.ApplyT(func(v *AnalysisGradientColor) []AnalysisGradientStop {
		if v == nil {
			return nil
		}
		return v.Stops
	}).(AnalysisGradientStopArrayOutput)
}

type AnalysisGradientStop struct {
	Color          *string  `pulumi:"color"`
	DataValue      *float64 `pulumi:"dataValue"`
	GradientOffset float64  `pulumi:"gradientOffset"`
}

// AnalysisGradientStopInput is an input type that accepts AnalysisGradientStopArgs and AnalysisGradientStopOutput values.
// You can construct a concrete instance of `AnalysisGradientStopInput` via:
//
//	AnalysisGradientStopArgs{...}
type AnalysisGradientStopInput interface {
	pulumi.Input

	ToAnalysisGradientStopOutput() AnalysisGradientStopOutput
	ToAnalysisGradientStopOutputWithContext(context.Context) AnalysisGradientStopOutput
}

type AnalysisGradientStopArgs struct {
	Color          pulumi.StringPtrInput  `pulumi:"color"`
	DataValue      pulumi.Float64PtrInput `pulumi:"dataValue"`
	GradientOffset pulumi.Float64Input    `pulumi:"gradientOffset"`
}

func (AnalysisGradientStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGradientStop)(nil)).Elem()
}

func (i AnalysisGradientStopArgs) ToAnalysisGradientStopOutput() AnalysisGradientStopOutput {
	return i.ToAnalysisGradientStopOutputWithContext(context.Background())
}

func (i AnalysisGradientStopArgs) ToAnalysisGradientStopOutputWithContext(ctx context.Context) AnalysisGradientStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGradientStopOutput)
}

// AnalysisGradientStopArrayInput is an input type that accepts AnalysisGradientStopArray and AnalysisGradientStopArrayOutput values.
// You can construct a concrete instance of `AnalysisGradientStopArrayInput` via:
//
//	AnalysisGradientStopArray{ AnalysisGradientStopArgs{...} }
type AnalysisGradientStopArrayInput interface {
	pulumi.Input

	ToAnalysisGradientStopArrayOutput() AnalysisGradientStopArrayOutput
	ToAnalysisGradientStopArrayOutputWithContext(context.Context) AnalysisGradientStopArrayOutput
}

type AnalysisGradientStopArray []AnalysisGradientStopInput

func (AnalysisGradientStopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisGradientStop)(nil)).Elem()
}

func (i AnalysisGradientStopArray) ToAnalysisGradientStopArrayOutput() AnalysisGradientStopArrayOutput {
	return i.ToAnalysisGradientStopArrayOutputWithContext(context.Background())
}

func (i AnalysisGradientStopArray) ToAnalysisGradientStopArrayOutputWithContext(ctx context.Context) AnalysisGradientStopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGradientStopArrayOutput)
}

type AnalysisGradientStopOutput struct{ *pulumi.OutputState }

func (AnalysisGradientStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGradientStop)(nil)).Elem()
}

func (o AnalysisGradientStopOutput) ToAnalysisGradientStopOutput() AnalysisGradientStopOutput {
	return o
}

func (o AnalysisGradientStopOutput) ToAnalysisGradientStopOutputWithContext(ctx context.Context) AnalysisGradientStopOutput {
	return o
}

func (o AnalysisGradientStopOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisGradientStop) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o AnalysisGradientStopOutput) DataValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisGradientStop) *float64 { return v.DataValue }).(pulumi.Float64PtrOutput)
}

func (o AnalysisGradientStopOutput) GradientOffset() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisGradientStop) float64 { return v.GradientOffset }).(pulumi.Float64Output)
}

type AnalysisGradientStopArrayOutput struct{ *pulumi.OutputState }

func (AnalysisGradientStopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisGradientStop)(nil)).Elem()
}

func (o AnalysisGradientStopArrayOutput) ToAnalysisGradientStopArrayOutput() AnalysisGradientStopArrayOutput {
	return o
}

func (o AnalysisGradientStopArrayOutput) ToAnalysisGradientStopArrayOutputWithContext(ctx context.Context) AnalysisGradientStopArrayOutput {
	return o
}

func (o AnalysisGradientStopArrayOutput) Index(i pulumi.IntInput) AnalysisGradientStopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisGradientStop {
		return vs[0].([]AnalysisGradientStop)[vs[1].(int)]
	}).(AnalysisGradientStopOutput)
}

type AnalysisGridLayoutCanvasSizeOptions struct {
	ScreenCanvasSizeOptions *AnalysisGridLayoutScreenCanvasSizeOptions `pulumi:"screenCanvasSizeOptions"`
}

// AnalysisGridLayoutCanvasSizeOptionsInput is an input type that accepts AnalysisGridLayoutCanvasSizeOptionsArgs and AnalysisGridLayoutCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `AnalysisGridLayoutCanvasSizeOptionsInput` via:
//
//	AnalysisGridLayoutCanvasSizeOptionsArgs{...}
type AnalysisGridLayoutCanvasSizeOptionsInput interface {
	pulumi.Input

	ToAnalysisGridLayoutCanvasSizeOptionsOutput() AnalysisGridLayoutCanvasSizeOptionsOutput
	ToAnalysisGridLayoutCanvasSizeOptionsOutputWithContext(context.Context) AnalysisGridLayoutCanvasSizeOptionsOutput
}

type AnalysisGridLayoutCanvasSizeOptionsArgs struct {
	ScreenCanvasSizeOptions AnalysisGridLayoutScreenCanvasSizeOptionsPtrInput `pulumi:"screenCanvasSizeOptions"`
}

func (AnalysisGridLayoutCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i AnalysisGridLayoutCanvasSizeOptionsArgs) ToAnalysisGridLayoutCanvasSizeOptionsOutput() AnalysisGridLayoutCanvasSizeOptionsOutput {
	return i.ToAnalysisGridLayoutCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i AnalysisGridLayoutCanvasSizeOptionsArgs) ToAnalysisGridLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisGridLayoutCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutCanvasSizeOptionsOutput)
}

func (i AnalysisGridLayoutCanvasSizeOptionsArgs) ToAnalysisGridLayoutCanvasSizeOptionsPtrOutput() AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisGridLayoutCanvasSizeOptionsArgs) ToAnalysisGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutCanvasSizeOptionsOutput).ToAnalysisGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// AnalysisGridLayoutCanvasSizeOptionsPtrInput is an input type that accepts AnalysisGridLayoutCanvasSizeOptionsArgs, AnalysisGridLayoutCanvasSizeOptionsPtr and AnalysisGridLayoutCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisGridLayoutCanvasSizeOptionsPtrInput` via:
//
//	        AnalysisGridLayoutCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGridLayoutCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisGridLayoutCanvasSizeOptionsPtrOutput() AnalysisGridLayoutCanvasSizeOptionsPtrOutput
	ToAnalysisGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Context) AnalysisGridLayoutCanvasSizeOptionsPtrOutput
}

type analysisGridLayoutCanvasSizeOptionsPtrType AnalysisGridLayoutCanvasSizeOptionsArgs

func AnalysisGridLayoutCanvasSizeOptionsPtr(v *AnalysisGridLayoutCanvasSizeOptionsArgs) AnalysisGridLayoutCanvasSizeOptionsPtrInput {
	return (*analysisGridLayoutCanvasSizeOptionsPtrType)(v)
}

func (*analysisGridLayoutCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i *analysisGridLayoutCanvasSizeOptionsPtrType) ToAnalysisGridLayoutCanvasSizeOptionsPtrOutput() AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisGridLayoutCanvasSizeOptionsPtrType) ToAnalysisGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutCanvasSizeOptionsPtrOutput)
}

type AnalysisGridLayoutCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisGridLayoutCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisGridLayoutCanvasSizeOptionsOutput) ToAnalysisGridLayoutCanvasSizeOptionsOutput() AnalysisGridLayoutCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisGridLayoutCanvasSizeOptionsOutput) ToAnalysisGridLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisGridLayoutCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisGridLayoutCanvasSizeOptionsOutput) ToAnalysisGridLayoutCanvasSizeOptionsPtrOutput() AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ToAnalysisGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisGridLayoutCanvasSizeOptionsOutput) ToAnalysisGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGridLayoutCanvasSizeOptions) *AnalysisGridLayoutCanvasSizeOptions {
		return &v
	}).(AnalysisGridLayoutCanvasSizeOptionsPtrOutput)
}

func (o AnalysisGridLayoutCanvasSizeOptionsOutput) ScreenCanvasSizeOptions() AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGridLayoutCanvasSizeOptions) *AnalysisGridLayoutScreenCanvasSizeOptions {
		return v.ScreenCanvasSizeOptions
	}).(AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

type AnalysisGridLayoutCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGridLayoutCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisGridLayoutCanvasSizeOptionsPtrOutput) ToAnalysisGridLayoutCanvasSizeOptionsPtrOutput() AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisGridLayoutCanvasSizeOptionsPtrOutput) ToAnalysisGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisGridLayoutCanvasSizeOptionsPtrOutput) Elem() AnalysisGridLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *AnalysisGridLayoutCanvasSizeOptions) AnalysisGridLayoutCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisGridLayoutCanvasSizeOptions
		return ret
	}).(AnalysisGridLayoutCanvasSizeOptionsOutput)
}

func (o AnalysisGridLayoutCanvasSizeOptionsPtrOutput) ScreenCanvasSizeOptions() AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGridLayoutCanvasSizeOptions) *AnalysisGridLayoutScreenCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.ScreenCanvasSizeOptions
	}).(AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

type AnalysisGridLayoutConfiguration struct {
	CanvasSizeOptions *AnalysisGridLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
	Elements          []AnalysisGridLayoutElement          `pulumi:"elements"`
}

// AnalysisGridLayoutConfigurationInput is an input type that accepts AnalysisGridLayoutConfigurationArgs and AnalysisGridLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisGridLayoutConfigurationInput` via:
//
//	AnalysisGridLayoutConfigurationArgs{...}
type AnalysisGridLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisGridLayoutConfigurationOutput() AnalysisGridLayoutConfigurationOutput
	ToAnalysisGridLayoutConfigurationOutputWithContext(context.Context) AnalysisGridLayoutConfigurationOutput
}

type AnalysisGridLayoutConfigurationArgs struct {
	CanvasSizeOptions AnalysisGridLayoutCanvasSizeOptionsPtrInput `pulumi:"canvasSizeOptions"`
	Elements          AnalysisGridLayoutElementArrayInput         `pulumi:"elements"`
}

func (AnalysisGridLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGridLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisGridLayoutConfigurationArgs) ToAnalysisGridLayoutConfigurationOutput() AnalysisGridLayoutConfigurationOutput {
	return i.ToAnalysisGridLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisGridLayoutConfigurationArgs) ToAnalysisGridLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisGridLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutConfigurationOutput)
}

func (i AnalysisGridLayoutConfigurationArgs) ToAnalysisGridLayoutConfigurationPtrOutput() AnalysisGridLayoutConfigurationPtrOutput {
	return i.ToAnalysisGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisGridLayoutConfigurationArgs) ToAnalysisGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutConfigurationOutput).ToAnalysisGridLayoutConfigurationPtrOutputWithContext(ctx)
}

// AnalysisGridLayoutConfigurationPtrInput is an input type that accepts AnalysisGridLayoutConfigurationArgs, AnalysisGridLayoutConfigurationPtr and AnalysisGridLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisGridLayoutConfigurationPtrInput` via:
//
//	        AnalysisGridLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisGridLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisGridLayoutConfigurationPtrOutput() AnalysisGridLayoutConfigurationPtrOutput
	ToAnalysisGridLayoutConfigurationPtrOutputWithContext(context.Context) AnalysisGridLayoutConfigurationPtrOutput
}

type analysisGridLayoutConfigurationPtrType AnalysisGridLayoutConfigurationArgs

func AnalysisGridLayoutConfigurationPtr(v *AnalysisGridLayoutConfigurationArgs) AnalysisGridLayoutConfigurationPtrInput {
	return (*analysisGridLayoutConfigurationPtrType)(v)
}

func (*analysisGridLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGridLayoutConfiguration)(nil)).Elem()
}

func (i *analysisGridLayoutConfigurationPtrType) ToAnalysisGridLayoutConfigurationPtrOutput() AnalysisGridLayoutConfigurationPtrOutput {
	return i.ToAnalysisGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisGridLayoutConfigurationPtrType) ToAnalysisGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutConfigurationPtrOutput)
}

type AnalysisGridLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisGridLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGridLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisGridLayoutConfigurationOutput) ToAnalysisGridLayoutConfigurationOutput() AnalysisGridLayoutConfigurationOutput {
	return o
}

func (o AnalysisGridLayoutConfigurationOutput) ToAnalysisGridLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisGridLayoutConfigurationOutput {
	return o
}

func (o AnalysisGridLayoutConfigurationOutput) ToAnalysisGridLayoutConfigurationPtrOutput() AnalysisGridLayoutConfigurationPtrOutput {
	return o.ToAnalysisGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisGridLayoutConfigurationOutput) ToAnalysisGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGridLayoutConfiguration) *AnalysisGridLayoutConfiguration {
		return &v
	}).(AnalysisGridLayoutConfigurationPtrOutput)
}

func (o AnalysisGridLayoutConfigurationOutput) CanvasSizeOptions() AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisGridLayoutConfiguration) *AnalysisGridLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(AnalysisGridLayoutCanvasSizeOptionsPtrOutput)
}

func (o AnalysisGridLayoutConfigurationOutput) Elements() AnalysisGridLayoutElementArrayOutput {
	return o.ApplyT(func(v AnalysisGridLayoutConfiguration) []AnalysisGridLayoutElement { return v.Elements }).(AnalysisGridLayoutElementArrayOutput)
}

type AnalysisGridLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGridLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGridLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisGridLayoutConfigurationPtrOutput) ToAnalysisGridLayoutConfigurationPtrOutput() AnalysisGridLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisGridLayoutConfigurationPtrOutput) ToAnalysisGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisGridLayoutConfigurationPtrOutput) Elem() AnalysisGridLayoutConfigurationOutput {
	return o.ApplyT(func(v *AnalysisGridLayoutConfiguration) AnalysisGridLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisGridLayoutConfiguration
		return ret
	}).(AnalysisGridLayoutConfigurationOutput)
}

func (o AnalysisGridLayoutConfigurationPtrOutput) CanvasSizeOptions() AnalysisGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisGridLayoutConfiguration) *AnalysisGridLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.CanvasSizeOptions
	}).(AnalysisGridLayoutCanvasSizeOptionsPtrOutput)
}

func (o AnalysisGridLayoutConfigurationPtrOutput) Elements() AnalysisGridLayoutElementArrayOutput {
	return o.ApplyT(func(v *AnalysisGridLayoutConfiguration) []AnalysisGridLayoutElement {
		if v == nil {
			return nil
		}
		return v.Elements
	}).(AnalysisGridLayoutElementArrayOutput)
}

type AnalysisGridLayoutElement struct {
	ColumnIndex  *float64                  `pulumi:"columnIndex"`
	ColumnSpan   float64                   `pulumi:"columnSpan"`
	ElementId    string                    `pulumi:"elementId"`
	ElementType_ AnalysisLayoutElementType `pulumi:"elementType"`
	RowIndex     *float64                  `pulumi:"rowIndex"`
	RowSpan      float64                   `pulumi:"rowSpan"`
}

// AnalysisGridLayoutElementInput is an input type that accepts AnalysisGridLayoutElementArgs and AnalysisGridLayoutElementOutput values.
// You can construct a concrete instance of `AnalysisGridLayoutElementInput` via:
//
//	AnalysisGridLayoutElementArgs{...}
type AnalysisGridLayoutElementInput interface {
	pulumi.Input

	ToAnalysisGridLayoutElementOutput() AnalysisGridLayoutElementOutput
	ToAnalysisGridLayoutElementOutputWithContext(context.Context) AnalysisGridLayoutElementOutput
}

type AnalysisGridLayoutElementArgs struct {
	ColumnIndex  pulumi.Float64PtrInput         `pulumi:"columnIndex"`
	ColumnSpan   pulumi.Float64Input            `pulumi:"columnSpan"`
	ElementId    pulumi.StringInput             `pulumi:"elementId"`
	ElementType_ AnalysisLayoutElementTypeInput `pulumi:"elementType"`
	RowIndex     pulumi.Float64PtrInput         `pulumi:"rowIndex"`
	RowSpan      pulumi.Float64Input            `pulumi:"rowSpan"`
}

func (AnalysisGridLayoutElementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGridLayoutElement)(nil)).Elem()
}

func (i AnalysisGridLayoutElementArgs) ToAnalysisGridLayoutElementOutput() AnalysisGridLayoutElementOutput {
	return i.ToAnalysisGridLayoutElementOutputWithContext(context.Background())
}

func (i AnalysisGridLayoutElementArgs) ToAnalysisGridLayoutElementOutputWithContext(ctx context.Context) AnalysisGridLayoutElementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutElementOutput)
}

// AnalysisGridLayoutElementArrayInput is an input type that accepts AnalysisGridLayoutElementArray and AnalysisGridLayoutElementArrayOutput values.
// You can construct a concrete instance of `AnalysisGridLayoutElementArrayInput` via:
//
//	AnalysisGridLayoutElementArray{ AnalysisGridLayoutElementArgs{...} }
type AnalysisGridLayoutElementArrayInput interface {
	pulumi.Input

	ToAnalysisGridLayoutElementArrayOutput() AnalysisGridLayoutElementArrayOutput
	ToAnalysisGridLayoutElementArrayOutputWithContext(context.Context) AnalysisGridLayoutElementArrayOutput
}

type AnalysisGridLayoutElementArray []AnalysisGridLayoutElementInput

func (AnalysisGridLayoutElementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisGridLayoutElement)(nil)).Elem()
}

func (i AnalysisGridLayoutElementArray) ToAnalysisGridLayoutElementArrayOutput() AnalysisGridLayoutElementArrayOutput {
	return i.ToAnalysisGridLayoutElementArrayOutputWithContext(context.Background())
}

func (i AnalysisGridLayoutElementArray) ToAnalysisGridLayoutElementArrayOutputWithContext(ctx context.Context) AnalysisGridLayoutElementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutElementArrayOutput)
}

type AnalysisGridLayoutElementOutput struct{ *pulumi.OutputState }

func (AnalysisGridLayoutElementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGridLayoutElement)(nil)).Elem()
}

func (o AnalysisGridLayoutElementOutput) ToAnalysisGridLayoutElementOutput() AnalysisGridLayoutElementOutput {
	return o
}

func (o AnalysisGridLayoutElementOutput) ToAnalysisGridLayoutElementOutputWithContext(ctx context.Context) AnalysisGridLayoutElementOutput {
	return o
}

func (o AnalysisGridLayoutElementOutput) ColumnIndex() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisGridLayoutElement) *float64 { return v.ColumnIndex }).(pulumi.Float64PtrOutput)
}

func (o AnalysisGridLayoutElementOutput) ColumnSpan() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisGridLayoutElement) float64 { return v.ColumnSpan }).(pulumi.Float64Output)
}

func (o AnalysisGridLayoutElementOutput) ElementId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisGridLayoutElement) string { return v.ElementId }).(pulumi.StringOutput)
}

func (o AnalysisGridLayoutElementOutput) GetElementType_() AnalysisLayoutElementTypeOutput {
	return o.ApplyT(func(v AnalysisGridLayoutElement) AnalysisLayoutElementType { return v.ElementType_ }).(AnalysisLayoutElementTypeOutput)
}

func (o AnalysisGridLayoutElementOutput) RowIndex() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisGridLayoutElement) *float64 { return v.RowIndex }).(pulumi.Float64PtrOutput)
}

func (o AnalysisGridLayoutElementOutput) RowSpan() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisGridLayoutElement) float64 { return v.RowSpan }).(pulumi.Float64Output)
}

type AnalysisGridLayoutElementArrayOutput struct{ *pulumi.OutputState }

func (AnalysisGridLayoutElementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisGridLayoutElement)(nil)).Elem()
}

func (o AnalysisGridLayoutElementArrayOutput) ToAnalysisGridLayoutElementArrayOutput() AnalysisGridLayoutElementArrayOutput {
	return o
}

func (o AnalysisGridLayoutElementArrayOutput) ToAnalysisGridLayoutElementArrayOutputWithContext(ctx context.Context) AnalysisGridLayoutElementArrayOutput {
	return o
}

func (o AnalysisGridLayoutElementArrayOutput) Index(i pulumi.IntInput) AnalysisGridLayoutElementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisGridLayoutElement {
		return vs[0].([]AnalysisGridLayoutElement)[vs[1].(int)]
	}).(AnalysisGridLayoutElementOutput)
}

type AnalysisGridLayoutScreenCanvasSizeOptions struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth *string              `pulumi:"optimizedViewPortWidth"`
	ResizeOption           AnalysisResizeOption `pulumi:"resizeOption"`
}

// AnalysisGridLayoutScreenCanvasSizeOptionsInput is an input type that accepts AnalysisGridLayoutScreenCanvasSizeOptionsArgs and AnalysisGridLayoutScreenCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `AnalysisGridLayoutScreenCanvasSizeOptionsInput` via:
//
//	AnalysisGridLayoutScreenCanvasSizeOptionsArgs{...}
type AnalysisGridLayoutScreenCanvasSizeOptionsInput interface {
	pulumi.Input

	ToAnalysisGridLayoutScreenCanvasSizeOptionsOutput() AnalysisGridLayoutScreenCanvasSizeOptionsOutput
	ToAnalysisGridLayoutScreenCanvasSizeOptionsOutputWithContext(context.Context) AnalysisGridLayoutScreenCanvasSizeOptionsOutput
}

type AnalysisGridLayoutScreenCanvasSizeOptionsArgs struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth pulumi.StringPtrInput     `pulumi:"optimizedViewPortWidth"`
	ResizeOption           AnalysisResizeOptionInput `pulumi:"resizeOption"`
}

func (AnalysisGridLayoutScreenCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i AnalysisGridLayoutScreenCanvasSizeOptionsArgs) ToAnalysisGridLayoutScreenCanvasSizeOptionsOutput() AnalysisGridLayoutScreenCanvasSizeOptionsOutput {
	return i.ToAnalysisGridLayoutScreenCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i AnalysisGridLayoutScreenCanvasSizeOptionsArgs) ToAnalysisGridLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisGridLayoutScreenCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutScreenCanvasSizeOptionsOutput)
}

func (i AnalysisGridLayoutScreenCanvasSizeOptionsArgs) ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput() AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisGridLayoutScreenCanvasSizeOptionsArgs) ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutScreenCanvasSizeOptionsOutput).ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// AnalysisGridLayoutScreenCanvasSizeOptionsPtrInput is an input type that accepts AnalysisGridLayoutScreenCanvasSizeOptionsArgs, AnalysisGridLayoutScreenCanvasSizeOptionsPtr and AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisGridLayoutScreenCanvasSizeOptionsPtrInput` via:
//
//	        AnalysisGridLayoutScreenCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisGridLayoutScreenCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput() AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput
	ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Context) AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput
}

type analysisGridLayoutScreenCanvasSizeOptionsPtrType AnalysisGridLayoutScreenCanvasSizeOptionsArgs

func AnalysisGridLayoutScreenCanvasSizeOptionsPtr(v *AnalysisGridLayoutScreenCanvasSizeOptionsArgs) AnalysisGridLayoutScreenCanvasSizeOptionsPtrInput {
	return (*analysisGridLayoutScreenCanvasSizeOptionsPtrType)(v)
}

func (*analysisGridLayoutScreenCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i *analysisGridLayoutScreenCanvasSizeOptionsPtrType) ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput() AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisGridLayoutScreenCanvasSizeOptionsPtrType) ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

type AnalysisGridLayoutScreenCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisGridLayoutScreenCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisGridLayoutScreenCanvasSizeOptionsOutput) ToAnalysisGridLayoutScreenCanvasSizeOptionsOutput() AnalysisGridLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisGridLayoutScreenCanvasSizeOptionsOutput) ToAnalysisGridLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisGridLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisGridLayoutScreenCanvasSizeOptionsOutput) ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput() AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisGridLayoutScreenCanvasSizeOptionsOutput) ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGridLayoutScreenCanvasSizeOptions) *AnalysisGridLayoutScreenCanvasSizeOptions {
		return &v
	}).(AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisGridLayoutScreenCanvasSizeOptionsOutput) OptimizedViewPortWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisGridLayoutScreenCanvasSizeOptions) *string { return v.OptimizedViewPortWidth }).(pulumi.StringPtrOutput)
}

func (o AnalysisGridLayoutScreenCanvasSizeOptionsOutput) ResizeOption() AnalysisResizeOptionOutput {
	return o.ApplyT(func(v AnalysisGridLayoutScreenCanvasSizeOptions) AnalysisResizeOption { return v.ResizeOption }).(AnalysisResizeOptionOutput)
}

type AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput) ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput() AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput) ToAnalysisGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput) Elem() AnalysisGridLayoutScreenCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *AnalysisGridLayoutScreenCanvasSizeOptions) AnalysisGridLayoutScreenCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisGridLayoutScreenCanvasSizeOptions
		return ret
	}).(AnalysisGridLayoutScreenCanvasSizeOptionsOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput) OptimizedViewPortWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisGridLayoutScreenCanvasSizeOptions) *string {
		if v == nil {
			return nil
		}
		return v.OptimizedViewPortWidth
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput) ResizeOption() AnalysisResizeOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisGridLayoutScreenCanvasSizeOptions) *AnalysisResizeOption {
		if v == nil {
			return nil
		}
		return &v.ResizeOption
	}).(AnalysisResizeOptionPtrOutput)
}

type AnalysisGrowthRateComputation struct {
	ComputationId string                 `pulumi:"computationId"`
	Name          *string                `pulumi:"name"`
	PeriodSize    *float64               `pulumi:"periodSize"`
	Time          AnalysisDimensionField `pulumi:"time"`
	Value         *AnalysisMeasureField  `pulumi:"value"`
}

// AnalysisGrowthRateComputationInput is an input type that accepts AnalysisGrowthRateComputationArgs and AnalysisGrowthRateComputationOutput values.
// You can construct a concrete instance of `AnalysisGrowthRateComputationInput` via:
//
//	AnalysisGrowthRateComputationArgs{...}
type AnalysisGrowthRateComputationInput interface {
	pulumi.Input

	ToAnalysisGrowthRateComputationOutput() AnalysisGrowthRateComputationOutput
	ToAnalysisGrowthRateComputationOutputWithContext(context.Context) AnalysisGrowthRateComputationOutput
}

type AnalysisGrowthRateComputationArgs struct {
	ComputationId pulumi.StringInput           `pulumi:"computationId"`
	Name          pulumi.StringPtrInput        `pulumi:"name"`
	PeriodSize    pulumi.Float64PtrInput       `pulumi:"periodSize"`
	Time          AnalysisDimensionFieldInput  `pulumi:"time"`
	Value         AnalysisMeasureFieldPtrInput `pulumi:"value"`
}

func (AnalysisGrowthRateComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGrowthRateComputation)(nil)).Elem()
}

func (i AnalysisGrowthRateComputationArgs) ToAnalysisGrowthRateComputationOutput() AnalysisGrowthRateComputationOutput {
	return i.ToAnalysisGrowthRateComputationOutputWithContext(context.Background())
}

func (i AnalysisGrowthRateComputationArgs) ToAnalysisGrowthRateComputationOutputWithContext(ctx context.Context) AnalysisGrowthRateComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGrowthRateComputationOutput)
}

func (i AnalysisGrowthRateComputationArgs) ToAnalysisGrowthRateComputationPtrOutput() AnalysisGrowthRateComputationPtrOutput {
	return i.ToAnalysisGrowthRateComputationPtrOutputWithContext(context.Background())
}

func (i AnalysisGrowthRateComputationArgs) ToAnalysisGrowthRateComputationPtrOutputWithContext(ctx context.Context) AnalysisGrowthRateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGrowthRateComputationOutput).ToAnalysisGrowthRateComputationPtrOutputWithContext(ctx)
}

// AnalysisGrowthRateComputationPtrInput is an input type that accepts AnalysisGrowthRateComputationArgs, AnalysisGrowthRateComputationPtr and AnalysisGrowthRateComputationPtrOutput values.
// You can construct a concrete instance of `AnalysisGrowthRateComputationPtrInput` via:
//
//	        AnalysisGrowthRateComputationArgs{...}
//
//	or:
//
//	        nil
type AnalysisGrowthRateComputationPtrInput interface {
	pulumi.Input

	ToAnalysisGrowthRateComputationPtrOutput() AnalysisGrowthRateComputationPtrOutput
	ToAnalysisGrowthRateComputationPtrOutputWithContext(context.Context) AnalysisGrowthRateComputationPtrOutput
}

type analysisGrowthRateComputationPtrType AnalysisGrowthRateComputationArgs

func AnalysisGrowthRateComputationPtr(v *AnalysisGrowthRateComputationArgs) AnalysisGrowthRateComputationPtrInput {
	return (*analysisGrowthRateComputationPtrType)(v)
}

func (*analysisGrowthRateComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGrowthRateComputation)(nil)).Elem()
}

func (i *analysisGrowthRateComputationPtrType) ToAnalysisGrowthRateComputationPtrOutput() AnalysisGrowthRateComputationPtrOutput {
	return i.ToAnalysisGrowthRateComputationPtrOutputWithContext(context.Background())
}

func (i *analysisGrowthRateComputationPtrType) ToAnalysisGrowthRateComputationPtrOutputWithContext(ctx context.Context) AnalysisGrowthRateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisGrowthRateComputationPtrOutput)
}

type AnalysisGrowthRateComputationOutput struct{ *pulumi.OutputState }

func (AnalysisGrowthRateComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGrowthRateComputation)(nil)).Elem()
}

func (o AnalysisGrowthRateComputationOutput) ToAnalysisGrowthRateComputationOutput() AnalysisGrowthRateComputationOutput {
	return o
}

func (o AnalysisGrowthRateComputationOutput) ToAnalysisGrowthRateComputationOutputWithContext(ctx context.Context) AnalysisGrowthRateComputationOutput {
	return o
}

func (o AnalysisGrowthRateComputationOutput) ToAnalysisGrowthRateComputationPtrOutput() AnalysisGrowthRateComputationPtrOutput {
	return o.ToAnalysisGrowthRateComputationPtrOutputWithContext(context.Background())
}

func (o AnalysisGrowthRateComputationOutput) ToAnalysisGrowthRateComputationPtrOutputWithContext(ctx context.Context) AnalysisGrowthRateComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGrowthRateComputation) *AnalysisGrowthRateComputation {
		return &v
	}).(AnalysisGrowthRateComputationPtrOutput)
}

func (o AnalysisGrowthRateComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisGrowthRateComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o AnalysisGrowthRateComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisGrowthRateComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisGrowthRateComputationOutput) PeriodSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisGrowthRateComputation) *float64 { return v.PeriodSize }).(pulumi.Float64PtrOutput)
}

func (o AnalysisGrowthRateComputationOutput) Time() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v AnalysisGrowthRateComputation) AnalysisDimensionField { return v.Time }).(AnalysisDimensionFieldOutput)
}

func (o AnalysisGrowthRateComputationOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisGrowthRateComputation) *AnalysisMeasureField { return v.Value }).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisGrowthRateComputationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisGrowthRateComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGrowthRateComputation)(nil)).Elem()
}

func (o AnalysisGrowthRateComputationPtrOutput) ToAnalysisGrowthRateComputationPtrOutput() AnalysisGrowthRateComputationPtrOutput {
	return o
}

func (o AnalysisGrowthRateComputationPtrOutput) ToAnalysisGrowthRateComputationPtrOutputWithContext(ctx context.Context) AnalysisGrowthRateComputationPtrOutput {
	return o
}

func (o AnalysisGrowthRateComputationPtrOutput) Elem() AnalysisGrowthRateComputationOutput {
	return o.ApplyT(func(v *AnalysisGrowthRateComputation) AnalysisGrowthRateComputation {
		if v != nil {
			return *v
		}
		var ret AnalysisGrowthRateComputation
		return ret
	}).(AnalysisGrowthRateComputationOutput)
}

func (o AnalysisGrowthRateComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisGrowthRateComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisGrowthRateComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisGrowthRateComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisGrowthRateComputationPtrOutput) PeriodSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisGrowthRateComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodSize
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisGrowthRateComputationPtrOutput) Time() AnalysisDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisGrowthRateComputation) *AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(AnalysisDimensionFieldPtrOutput)
}

func (o AnalysisGrowthRateComputationPtrOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisGrowthRateComputation) *AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisHeaderFooterSectionConfiguration struct {
	Layout    AnalysisSectionLayoutConfiguration `pulumi:"layout"`
	SectionId string                             `pulumi:"sectionId"`
	Style     *AnalysisSectionStyle              `pulumi:"style"`
}

// AnalysisHeaderFooterSectionConfigurationInput is an input type that accepts AnalysisHeaderFooterSectionConfigurationArgs and AnalysisHeaderFooterSectionConfigurationOutput values.
// You can construct a concrete instance of `AnalysisHeaderFooterSectionConfigurationInput` via:
//
//	AnalysisHeaderFooterSectionConfigurationArgs{...}
type AnalysisHeaderFooterSectionConfigurationInput interface {
	pulumi.Input

	ToAnalysisHeaderFooterSectionConfigurationOutput() AnalysisHeaderFooterSectionConfigurationOutput
	ToAnalysisHeaderFooterSectionConfigurationOutputWithContext(context.Context) AnalysisHeaderFooterSectionConfigurationOutput
}

type AnalysisHeaderFooterSectionConfigurationArgs struct {
	Layout    AnalysisSectionLayoutConfigurationInput `pulumi:"layout"`
	SectionId pulumi.StringInput                      `pulumi:"sectionId"`
	Style     AnalysisSectionStylePtrInput            `pulumi:"style"`
}

func (AnalysisHeaderFooterSectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (i AnalysisHeaderFooterSectionConfigurationArgs) ToAnalysisHeaderFooterSectionConfigurationOutput() AnalysisHeaderFooterSectionConfigurationOutput {
	return i.ToAnalysisHeaderFooterSectionConfigurationOutputWithContext(context.Background())
}

func (i AnalysisHeaderFooterSectionConfigurationArgs) ToAnalysisHeaderFooterSectionConfigurationOutputWithContext(ctx context.Context) AnalysisHeaderFooterSectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeaderFooterSectionConfigurationOutput)
}

// AnalysisHeaderFooterSectionConfigurationArrayInput is an input type that accepts AnalysisHeaderFooterSectionConfigurationArray and AnalysisHeaderFooterSectionConfigurationArrayOutput values.
// You can construct a concrete instance of `AnalysisHeaderFooterSectionConfigurationArrayInput` via:
//
//	AnalysisHeaderFooterSectionConfigurationArray{ AnalysisHeaderFooterSectionConfigurationArgs{...} }
type AnalysisHeaderFooterSectionConfigurationArrayInput interface {
	pulumi.Input

	ToAnalysisHeaderFooterSectionConfigurationArrayOutput() AnalysisHeaderFooterSectionConfigurationArrayOutput
	ToAnalysisHeaderFooterSectionConfigurationArrayOutputWithContext(context.Context) AnalysisHeaderFooterSectionConfigurationArrayOutput
}

type AnalysisHeaderFooterSectionConfigurationArray []AnalysisHeaderFooterSectionConfigurationInput

func (AnalysisHeaderFooterSectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (i AnalysisHeaderFooterSectionConfigurationArray) ToAnalysisHeaderFooterSectionConfigurationArrayOutput() AnalysisHeaderFooterSectionConfigurationArrayOutput {
	return i.ToAnalysisHeaderFooterSectionConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalysisHeaderFooterSectionConfigurationArray) ToAnalysisHeaderFooterSectionConfigurationArrayOutputWithContext(ctx context.Context) AnalysisHeaderFooterSectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeaderFooterSectionConfigurationArrayOutput)
}

type AnalysisHeaderFooterSectionConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisHeaderFooterSectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (o AnalysisHeaderFooterSectionConfigurationOutput) ToAnalysisHeaderFooterSectionConfigurationOutput() AnalysisHeaderFooterSectionConfigurationOutput {
	return o
}

func (o AnalysisHeaderFooterSectionConfigurationOutput) ToAnalysisHeaderFooterSectionConfigurationOutputWithContext(ctx context.Context) AnalysisHeaderFooterSectionConfigurationOutput {
	return o
}

func (o AnalysisHeaderFooterSectionConfigurationOutput) Layout() AnalysisSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v AnalysisHeaderFooterSectionConfiguration) AnalysisSectionLayoutConfiguration { return v.Layout }).(AnalysisSectionLayoutConfigurationOutput)
}

func (o AnalysisHeaderFooterSectionConfigurationOutput) SectionId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisHeaderFooterSectionConfiguration) string { return v.SectionId }).(pulumi.StringOutput)
}

func (o AnalysisHeaderFooterSectionConfigurationOutput) Style() AnalysisSectionStylePtrOutput {
	return o.ApplyT(func(v AnalysisHeaderFooterSectionConfiguration) *AnalysisSectionStyle { return v.Style }).(AnalysisSectionStylePtrOutput)
}

type AnalysisHeaderFooterSectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisHeaderFooterSectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (o AnalysisHeaderFooterSectionConfigurationArrayOutput) ToAnalysisHeaderFooterSectionConfigurationArrayOutput() AnalysisHeaderFooterSectionConfigurationArrayOutput {
	return o
}

func (o AnalysisHeaderFooterSectionConfigurationArrayOutput) ToAnalysisHeaderFooterSectionConfigurationArrayOutputWithContext(ctx context.Context) AnalysisHeaderFooterSectionConfigurationArrayOutput {
	return o
}

func (o AnalysisHeaderFooterSectionConfigurationArrayOutput) Index(i pulumi.IntInput) AnalysisHeaderFooterSectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisHeaderFooterSectionConfiguration {
		return vs[0].([]AnalysisHeaderFooterSectionConfiguration)[vs[1].(int)]
	}).(AnalysisHeaderFooterSectionConfigurationOutput)
}

type AnalysisHeatMapAggregatedFieldWells struct {
	Columns []AnalysisDimensionField `pulumi:"columns"`
	Rows    []AnalysisDimensionField `pulumi:"rows"`
	Values  []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisHeatMapAggregatedFieldWellsInput is an input type that accepts AnalysisHeatMapAggregatedFieldWellsArgs and AnalysisHeatMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisHeatMapAggregatedFieldWellsInput` via:
//
//	AnalysisHeatMapAggregatedFieldWellsArgs{...}
type AnalysisHeatMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisHeatMapAggregatedFieldWellsOutput() AnalysisHeatMapAggregatedFieldWellsOutput
	ToAnalysisHeatMapAggregatedFieldWellsOutputWithContext(context.Context) AnalysisHeatMapAggregatedFieldWellsOutput
}

type AnalysisHeatMapAggregatedFieldWellsArgs struct {
	Columns AnalysisDimensionFieldArrayInput `pulumi:"columns"`
	Rows    AnalysisDimensionFieldArrayInput `pulumi:"rows"`
	Values  AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisHeatMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisHeatMapAggregatedFieldWellsArgs) ToAnalysisHeatMapAggregatedFieldWellsOutput() AnalysisHeatMapAggregatedFieldWellsOutput {
	return i.ToAnalysisHeatMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisHeatMapAggregatedFieldWellsArgs) ToAnalysisHeatMapAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisHeatMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapAggregatedFieldWellsOutput)
}

func (i AnalysisHeatMapAggregatedFieldWellsArgs) ToAnalysisHeatMapAggregatedFieldWellsPtrOutput() AnalysisHeatMapAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisHeatMapAggregatedFieldWellsArgs) ToAnalysisHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHeatMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapAggregatedFieldWellsOutput).ToAnalysisHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisHeatMapAggregatedFieldWellsPtrInput is an input type that accepts AnalysisHeatMapAggregatedFieldWellsArgs, AnalysisHeatMapAggregatedFieldWellsPtr and AnalysisHeatMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisHeatMapAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisHeatMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisHeatMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisHeatMapAggregatedFieldWellsPtrOutput() AnalysisHeatMapAggregatedFieldWellsPtrOutput
	ToAnalysisHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisHeatMapAggregatedFieldWellsPtrOutput
}

type analysisHeatMapAggregatedFieldWellsPtrType AnalysisHeatMapAggregatedFieldWellsArgs

func AnalysisHeatMapAggregatedFieldWellsPtr(v *AnalysisHeatMapAggregatedFieldWellsArgs) AnalysisHeatMapAggregatedFieldWellsPtrInput {
	return (*analysisHeatMapAggregatedFieldWellsPtrType)(v)
}

func (*analysisHeatMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisHeatMapAggregatedFieldWellsPtrType) ToAnalysisHeatMapAggregatedFieldWellsPtrOutput() AnalysisHeatMapAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisHeatMapAggregatedFieldWellsPtrType) ToAnalysisHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHeatMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapAggregatedFieldWellsPtrOutput)
}

type AnalysisHeatMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisHeatMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisHeatMapAggregatedFieldWellsOutput) ToAnalysisHeatMapAggregatedFieldWellsOutput() AnalysisHeatMapAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisHeatMapAggregatedFieldWellsOutput) ToAnalysisHeatMapAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisHeatMapAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisHeatMapAggregatedFieldWellsOutput) ToAnalysisHeatMapAggregatedFieldWellsPtrOutput() AnalysisHeatMapAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisHeatMapAggregatedFieldWellsOutput) ToAnalysisHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHeatMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHeatMapAggregatedFieldWells) *AnalysisHeatMapAggregatedFieldWells {
		return &v
	}).(AnalysisHeatMapAggregatedFieldWellsPtrOutput)
}

func (o AnalysisHeatMapAggregatedFieldWellsOutput) Columns() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisHeatMapAggregatedFieldWells) []AnalysisDimensionField { return v.Columns }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisHeatMapAggregatedFieldWellsOutput) Rows() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisHeatMapAggregatedFieldWells) []AnalysisDimensionField { return v.Rows }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisHeatMapAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisHeatMapAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisHeatMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHeatMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisHeatMapAggregatedFieldWellsPtrOutput) ToAnalysisHeatMapAggregatedFieldWellsPtrOutput() AnalysisHeatMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisHeatMapAggregatedFieldWellsPtrOutput) ToAnalysisHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHeatMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisHeatMapAggregatedFieldWellsPtrOutput) Elem() AnalysisHeatMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisHeatMapAggregatedFieldWells) AnalysisHeatMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisHeatMapAggregatedFieldWells
		return ret
	}).(AnalysisHeatMapAggregatedFieldWellsOutput)
}

func (o AnalysisHeatMapAggregatedFieldWellsPtrOutput) Columns() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisHeatMapAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisHeatMapAggregatedFieldWellsPtrOutput) Rows() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisHeatMapAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisHeatMapAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisHeatMapAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisHeatMapConfiguration struct {
	ColorScale         *AnalysisColorScale               `pulumi:"colorScale"`
	ColumnLabelOptions *AnalysisChartAxisLabelOptions    `pulumi:"columnLabelOptions"`
	DataLabels         *AnalysisDataLabelOptions         `pulumi:"dataLabels"`
	FieldWells         *AnalysisHeatMapFieldWells        `pulumi:"fieldWells"`
	Legend             *AnalysisLegendOptions            `pulumi:"legend"`
	RowLabelOptions    *AnalysisChartAxisLabelOptions    `pulumi:"rowLabelOptions"`
	SortConfiguration  *AnalysisHeatMapSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip            *AnalysisTooltipOptions           `pulumi:"tooltip"`
}

// AnalysisHeatMapConfigurationInput is an input type that accepts AnalysisHeatMapConfigurationArgs and AnalysisHeatMapConfigurationOutput values.
// You can construct a concrete instance of `AnalysisHeatMapConfigurationInput` via:
//
//	AnalysisHeatMapConfigurationArgs{...}
type AnalysisHeatMapConfigurationInput interface {
	pulumi.Input

	ToAnalysisHeatMapConfigurationOutput() AnalysisHeatMapConfigurationOutput
	ToAnalysisHeatMapConfigurationOutputWithContext(context.Context) AnalysisHeatMapConfigurationOutput
}

type AnalysisHeatMapConfigurationArgs struct {
	ColorScale         AnalysisColorScalePtrInput               `pulumi:"colorScale"`
	ColumnLabelOptions AnalysisChartAxisLabelOptionsPtrInput    `pulumi:"columnLabelOptions"`
	DataLabels         AnalysisDataLabelOptionsPtrInput         `pulumi:"dataLabels"`
	FieldWells         AnalysisHeatMapFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend             AnalysisLegendOptionsPtrInput            `pulumi:"legend"`
	RowLabelOptions    AnalysisChartAxisLabelOptionsPtrInput    `pulumi:"rowLabelOptions"`
	SortConfiguration  AnalysisHeatMapSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip            AnalysisTooltipOptionsPtrInput           `pulumi:"tooltip"`
}

func (AnalysisHeatMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeatMapConfiguration)(nil)).Elem()
}

func (i AnalysisHeatMapConfigurationArgs) ToAnalysisHeatMapConfigurationOutput() AnalysisHeatMapConfigurationOutput {
	return i.ToAnalysisHeatMapConfigurationOutputWithContext(context.Background())
}

func (i AnalysisHeatMapConfigurationArgs) ToAnalysisHeatMapConfigurationOutputWithContext(ctx context.Context) AnalysisHeatMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapConfigurationOutput)
}

func (i AnalysisHeatMapConfigurationArgs) ToAnalysisHeatMapConfigurationPtrOutput() AnalysisHeatMapConfigurationPtrOutput {
	return i.ToAnalysisHeatMapConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisHeatMapConfigurationArgs) ToAnalysisHeatMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHeatMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapConfigurationOutput).ToAnalysisHeatMapConfigurationPtrOutputWithContext(ctx)
}

// AnalysisHeatMapConfigurationPtrInput is an input type that accepts AnalysisHeatMapConfigurationArgs, AnalysisHeatMapConfigurationPtr and AnalysisHeatMapConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisHeatMapConfigurationPtrInput` via:
//
//	        AnalysisHeatMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisHeatMapConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisHeatMapConfigurationPtrOutput() AnalysisHeatMapConfigurationPtrOutput
	ToAnalysisHeatMapConfigurationPtrOutputWithContext(context.Context) AnalysisHeatMapConfigurationPtrOutput
}

type analysisHeatMapConfigurationPtrType AnalysisHeatMapConfigurationArgs

func AnalysisHeatMapConfigurationPtr(v *AnalysisHeatMapConfigurationArgs) AnalysisHeatMapConfigurationPtrInput {
	return (*analysisHeatMapConfigurationPtrType)(v)
}

func (*analysisHeatMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHeatMapConfiguration)(nil)).Elem()
}

func (i *analysisHeatMapConfigurationPtrType) ToAnalysisHeatMapConfigurationPtrOutput() AnalysisHeatMapConfigurationPtrOutput {
	return i.ToAnalysisHeatMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisHeatMapConfigurationPtrType) ToAnalysisHeatMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHeatMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapConfigurationPtrOutput)
}

type AnalysisHeatMapConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisHeatMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeatMapConfiguration)(nil)).Elem()
}

func (o AnalysisHeatMapConfigurationOutput) ToAnalysisHeatMapConfigurationOutput() AnalysisHeatMapConfigurationOutput {
	return o
}

func (o AnalysisHeatMapConfigurationOutput) ToAnalysisHeatMapConfigurationOutputWithContext(ctx context.Context) AnalysisHeatMapConfigurationOutput {
	return o
}

func (o AnalysisHeatMapConfigurationOutput) ToAnalysisHeatMapConfigurationPtrOutput() AnalysisHeatMapConfigurationPtrOutput {
	return o.ToAnalysisHeatMapConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisHeatMapConfigurationOutput) ToAnalysisHeatMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHeatMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHeatMapConfiguration) *AnalysisHeatMapConfiguration {
		return &v
	}).(AnalysisHeatMapConfigurationPtrOutput)
}

func (o AnalysisHeatMapConfigurationOutput) ColorScale() AnalysisColorScalePtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapConfiguration) *AnalysisColorScale { return v.ColorScale }).(AnalysisColorScalePtrOutput)
}

func (o AnalysisHeatMapConfigurationOutput) ColumnLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapConfiguration) *AnalysisChartAxisLabelOptions { return v.ColumnLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisHeatMapConfigurationOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapConfiguration) *AnalysisDataLabelOptions { return v.DataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisHeatMapConfigurationOutput) FieldWells() AnalysisHeatMapFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapConfiguration) *AnalysisHeatMapFieldWells { return v.FieldWells }).(AnalysisHeatMapFieldWellsPtrOutput)
}

func (o AnalysisHeatMapConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisHeatMapConfigurationOutput) RowLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapConfiguration) *AnalysisChartAxisLabelOptions { return v.RowLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisHeatMapConfigurationOutput) SortConfiguration() AnalysisHeatMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapConfiguration) *AnalysisHeatMapSortConfiguration { return v.SortConfiguration }).(AnalysisHeatMapSortConfigurationPtrOutput)
}

func (o AnalysisHeatMapConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

type AnalysisHeatMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHeatMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHeatMapConfiguration)(nil)).Elem()
}

func (o AnalysisHeatMapConfigurationPtrOutput) ToAnalysisHeatMapConfigurationPtrOutput() AnalysisHeatMapConfigurationPtrOutput {
	return o
}

func (o AnalysisHeatMapConfigurationPtrOutput) ToAnalysisHeatMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHeatMapConfigurationPtrOutput {
	return o
}

func (o AnalysisHeatMapConfigurationPtrOutput) Elem() AnalysisHeatMapConfigurationOutput {
	return o.ApplyT(func(v *AnalysisHeatMapConfiguration) AnalysisHeatMapConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisHeatMapConfiguration
		return ret
	}).(AnalysisHeatMapConfigurationOutput)
}

func (o AnalysisHeatMapConfigurationPtrOutput) ColorScale() AnalysisColorScalePtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapConfiguration) *AnalysisColorScale {
		if v == nil {
			return nil
		}
		return v.ColorScale
	}).(AnalysisColorScalePtrOutput)
}

func (o AnalysisHeatMapConfigurationPtrOutput) ColumnLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColumnLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisHeatMapConfigurationPtrOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisHeatMapConfigurationPtrOutput) FieldWells() AnalysisHeatMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapConfiguration) *AnalysisHeatMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisHeatMapFieldWellsPtrOutput)
}

func (o AnalysisHeatMapConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisHeatMapConfigurationPtrOutput) RowLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.RowLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisHeatMapConfigurationPtrOutput) SortConfiguration() AnalysisHeatMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapConfiguration) *AnalysisHeatMapSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisHeatMapSortConfigurationPtrOutput)
}

func (o AnalysisHeatMapConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

type AnalysisHeatMapFieldWells struct {
	HeatMapAggregatedFieldWells *AnalysisHeatMapAggregatedFieldWells `pulumi:"heatMapAggregatedFieldWells"`
}

// AnalysisHeatMapFieldWellsInput is an input type that accepts AnalysisHeatMapFieldWellsArgs and AnalysisHeatMapFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisHeatMapFieldWellsInput` via:
//
//	AnalysisHeatMapFieldWellsArgs{...}
type AnalysisHeatMapFieldWellsInput interface {
	pulumi.Input

	ToAnalysisHeatMapFieldWellsOutput() AnalysisHeatMapFieldWellsOutput
	ToAnalysisHeatMapFieldWellsOutputWithContext(context.Context) AnalysisHeatMapFieldWellsOutput
}

type AnalysisHeatMapFieldWellsArgs struct {
	HeatMapAggregatedFieldWells AnalysisHeatMapAggregatedFieldWellsPtrInput `pulumi:"heatMapAggregatedFieldWells"`
}

func (AnalysisHeatMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeatMapFieldWells)(nil)).Elem()
}

func (i AnalysisHeatMapFieldWellsArgs) ToAnalysisHeatMapFieldWellsOutput() AnalysisHeatMapFieldWellsOutput {
	return i.ToAnalysisHeatMapFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisHeatMapFieldWellsArgs) ToAnalysisHeatMapFieldWellsOutputWithContext(ctx context.Context) AnalysisHeatMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapFieldWellsOutput)
}

func (i AnalysisHeatMapFieldWellsArgs) ToAnalysisHeatMapFieldWellsPtrOutput() AnalysisHeatMapFieldWellsPtrOutput {
	return i.ToAnalysisHeatMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisHeatMapFieldWellsArgs) ToAnalysisHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHeatMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapFieldWellsOutput).ToAnalysisHeatMapFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisHeatMapFieldWellsPtrInput is an input type that accepts AnalysisHeatMapFieldWellsArgs, AnalysisHeatMapFieldWellsPtr and AnalysisHeatMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisHeatMapFieldWellsPtrInput` via:
//
//	        AnalysisHeatMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisHeatMapFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisHeatMapFieldWellsPtrOutput() AnalysisHeatMapFieldWellsPtrOutput
	ToAnalysisHeatMapFieldWellsPtrOutputWithContext(context.Context) AnalysisHeatMapFieldWellsPtrOutput
}

type analysisHeatMapFieldWellsPtrType AnalysisHeatMapFieldWellsArgs

func AnalysisHeatMapFieldWellsPtr(v *AnalysisHeatMapFieldWellsArgs) AnalysisHeatMapFieldWellsPtrInput {
	return (*analysisHeatMapFieldWellsPtrType)(v)
}

func (*analysisHeatMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHeatMapFieldWells)(nil)).Elem()
}

func (i *analysisHeatMapFieldWellsPtrType) ToAnalysisHeatMapFieldWellsPtrOutput() AnalysisHeatMapFieldWellsPtrOutput {
	return i.ToAnalysisHeatMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisHeatMapFieldWellsPtrType) ToAnalysisHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHeatMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapFieldWellsPtrOutput)
}

type AnalysisHeatMapFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisHeatMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeatMapFieldWells)(nil)).Elem()
}

func (o AnalysisHeatMapFieldWellsOutput) ToAnalysisHeatMapFieldWellsOutput() AnalysisHeatMapFieldWellsOutput {
	return o
}

func (o AnalysisHeatMapFieldWellsOutput) ToAnalysisHeatMapFieldWellsOutputWithContext(ctx context.Context) AnalysisHeatMapFieldWellsOutput {
	return o
}

func (o AnalysisHeatMapFieldWellsOutput) ToAnalysisHeatMapFieldWellsPtrOutput() AnalysisHeatMapFieldWellsPtrOutput {
	return o.ToAnalysisHeatMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisHeatMapFieldWellsOutput) ToAnalysisHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHeatMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHeatMapFieldWells) *AnalysisHeatMapFieldWells {
		return &v
	}).(AnalysisHeatMapFieldWellsPtrOutput)
}

func (o AnalysisHeatMapFieldWellsOutput) HeatMapAggregatedFieldWells() AnalysisHeatMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapFieldWells) *AnalysisHeatMapAggregatedFieldWells {
		return v.HeatMapAggregatedFieldWells
	}).(AnalysisHeatMapAggregatedFieldWellsPtrOutput)
}

type AnalysisHeatMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHeatMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHeatMapFieldWells)(nil)).Elem()
}

func (o AnalysisHeatMapFieldWellsPtrOutput) ToAnalysisHeatMapFieldWellsPtrOutput() AnalysisHeatMapFieldWellsPtrOutput {
	return o
}

func (o AnalysisHeatMapFieldWellsPtrOutput) ToAnalysisHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHeatMapFieldWellsPtrOutput {
	return o
}

func (o AnalysisHeatMapFieldWellsPtrOutput) Elem() AnalysisHeatMapFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisHeatMapFieldWells) AnalysisHeatMapFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisHeatMapFieldWells
		return ret
	}).(AnalysisHeatMapFieldWellsOutput)
}

func (o AnalysisHeatMapFieldWellsPtrOutput) HeatMapAggregatedFieldWells() AnalysisHeatMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapFieldWells) *AnalysisHeatMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.HeatMapAggregatedFieldWells
	}).(AnalysisHeatMapAggregatedFieldWellsPtrOutput)
}

type AnalysisHeatMapSortConfiguration struct {
	HeatMapColumnItemsLimitConfiguration *AnalysisItemsLimitConfiguration `pulumi:"heatMapColumnItemsLimitConfiguration"`
	HeatMapColumnSort                    []AnalysisFieldSortOptions       `pulumi:"heatMapColumnSort"`
	HeatMapRowItemsLimitConfiguration    *AnalysisItemsLimitConfiguration `pulumi:"heatMapRowItemsLimitConfiguration"`
	HeatMapRowSort                       []AnalysisFieldSortOptions       `pulumi:"heatMapRowSort"`
}

// AnalysisHeatMapSortConfigurationInput is an input type that accepts AnalysisHeatMapSortConfigurationArgs and AnalysisHeatMapSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisHeatMapSortConfigurationInput` via:
//
//	AnalysisHeatMapSortConfigurationArgs{...}
type AnalysisHeatMapSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisHeatMapSortConfigurationOutput() AnalysisHeatMapSortConfigurationOutput
	ToAnalysisHeatMapSortConfigurationOutputWithContext(context.Context) AnalysisHeatMapSortConfigurationOutput
}

type AnalysisHeatMapSortConfigurationArgs struct {
	HeatMapColumnItemsLimitConfiguration AnalysisItemsLimitConfigurationPtrInput `pulumi:"heatMapColumnItemsLimitConfiguration"`
	HeatMapColumnSort                    AnalysisFieldSortOptionsArrayInput      `pulumi:"heatMapColumnSort"`
	HeatMapRowItemsLimitConfiguration    AnalysisItemsLimitConfigurationPtrInput `pulumi:"heatMapRowItemsLimitConfiguration"`
	HeatMapRowSort                       AnalysisFieldSortOptionsArrayInput      `pulumi:"heatMapRowSort"`
}

func (AnalysisHeatMapSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeatMapSortConfiguration)(nil)).Elem()
}

func (i AnalysisHeatMapSortConfigurationArgs) ToAnalysisHeatMapSortConfigurationOutput() AnalysisHeatMapSortConfigurationOutput {
	return i.ToAnalysisHeatMapSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisHeatMapSortConfigurationArgs) ToAnalysisHeatMapSortConfigurationOutputWithContext(ctx context.Context) AnalysisHeatMapSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapSortConfigurationOutput)
}

func (i AnalysisHeatMapSortConfigurationArgs) ToAnalysisHeatMapSortConfigurationPtrOutput() AnalysisHeatMapSortConfigurationPtrOutput {
	return i.ToAnalysisHeatMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisHeatMapSortConfigurationArgs) ToAnalysisHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHeatMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapSortConfigurationOutput).ToAnalysisHeatMapSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisHeatMapSortConfigurationPtrInput is an input type that accepts AnalysisHeatMapSortConfigurationArgs, AnalysisHeatMapSortConfigurationPtr and AnalysisHeatMapSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisHeatMapSortConfigurationPtrInput` via:
//
//	        AnalysisHeatMapSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisHeatMapSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisHeatMapSortConfigurationPtrOutput() AnalysisHeatMapSortConfigurationPtrOutput
	ToAnalysisHeatMapSortConfigurationPtrOutputWithContext(context.Context) AnalysisHeatMapSortConfigurationPtrOutput
}

type analysisHeatMapSortConfigurationPtrType AnalysisHeatMapSortConfigurationArgs

func AnalysisHeatMapSortConfigurationPtr(v *AnalysisHeatMapSortConfigurationArgs) AnalysisHeatMapSortConfigurationPtrInput {
	return (*analysisHeatMapSortConfigurationPtrType)(v)
}

func (*analysisHeatMapSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHeatMapSortConfiguration)(nil)).Elem()
}

func (i *analysisHeatMapSortConfigurationPtrType) ToAnalysisHeatMapSortConfigurationPtrOutput() AnalysisHeatMapSortConfigurationPtrOutput {
	return i.ToAnalysisHeatMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisHeatMapSortConfigurationPtrType) ToAnalysisHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHeatMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapSortConfigurationPtrOutput)
}

type AnalysisHeatMapSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisHeatMapSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeatMapSortConfiguration)(nil)).Elem()
}

func (o AnalysisHeatMapSortConfigurationOutput) ToAnalysisHeatMapSortConfigurationOutput() AnalysisHeatMapSortConfigurationOutput {
	return o
}

func (o AnalysisHeatMapSortConfigurationOutput) ToAnalysisHeatMapSortConfigurationOutputWithContext(ctx context.Context) AnalysisHeatMapSortConfigurationOutput {
	return o
}

func (o AnalysisHeatMapSortConfigurationOutput) ToAnalysisHeatMapSortConfigurationPtrOutput() AnalysisHeatMapSortConfigurationPtrOutput {
	return o.ToAnalysisHeatMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisHeatMapSortConfigurationOutput) ToAnalysisHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHeatMapSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHeatMapSortConfiguration) *AnalysisHeatMapSortConfiguration {
		return &v
	}).(AnalysisHeatMapSortConfigurationPtrOutput)
}

func (o AnalysisHeatMapSortConfigurationOutput) HeatMapColumnItemsLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.HeatMapColumnItemsLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisHeatMapSortConfigurationOutput) HeatMapColumnSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisHeatMapSortConfiguration) []AnalysisFieldSortOptions { return v.HeatMapColumnSort }).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisHeatMapSortConfigurationOutput) HeatMapRowItemsLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.HeatMapRowItemsLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisHeatMapSortConfigurationOutput) HeatMapRowSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisHeatMapSortConfiguration) []AnalysisFieldSortOptions { return v.HeatMapRowSort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisHeatMapSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHeatMapSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHeatMapSortConfiguration)(nil)).Elem()
}

func (o AnalysisHeatMapSortConfigurationPtrOutput) ToAnalysisHeatMapSortConfigurationPtrOutput() AnalysisHeatMapSortConfigurationPtrOutput {
	return o
}

func (o AnalysisHeatMapSortConfigurationPtrOutput) ToAnalysisHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHeatMapSortConfigurationPtrOutput {
	return o
}

func (o AnalysisHeatMapSortConfigurationPtrOutput) Elem() AnalysisHeatMapSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisHeatMapSortConfiguration) AnalysisHeatMapSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisHeatMapSortConfiguration
		return ret
	}).(AnalysisHeatMapSortConfigurationOutput)
}

func (o AnalysisHeatMapSortConfigurationPtrOutput) HeatMapColumnItemsLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.HeatMapColumnItemsLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisHeatMapSortConfigurationPtrOutput) HeatMapColumnSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisHeatMapSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.HeatMapColumnSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisHeatMapSortConfigurationPtrOutput) HeatMapRowItemsLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.HeatMapRowItemsLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisHeatMapSortConfigurationPtrOutput) HeatMapRowSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisHeatMapSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.HeatMapRowSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisHeatMapVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisHeatMapConfiguration       `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisHeatMapVisualInput is an input type that accepts AnalysisHeatMapVisualArgs and AnalysisHeatMapVisualOutput values.
// You can construct a concrete instance of `AnalysisHeatMapVisualInput` via:
//
//	AnalysisHeatMapVisualArgs{...}
type AnalysisHeatMapVisualInput interface {
	pulumi.Input

	ToAnalysisHeatMapVisualOutput() AnalysisHeatMapVisualOutput
	ToAnalysisHeatMapVisualOutputWithContext(context.Context) AnalysisHeatMapVisualOutput
}

type AnalysisHeatMapVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisHeatMapConfigurationPtrInput       `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisHeatMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeatMapVisual)(nil)).Elem()
}

func (i AnalysisHeatMapVisualArgs) ToAnalysisHeatMapVisualOutput() AnalysisHeatMapVisualOutput {
	return i.ToAnalysisHeatMapVisualOutputWithContext(context.Background())
}

func (i AnalysisHeatMapVisualArgs) ToAnalysisHeatMapVisualOutputWithContext(ctx context.Context) AnalysisHeatMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapVisualOutput)
}

func (i AnalysisHeatMapVisualArgs) ToAnalysisHeatMapVisualPtrOutput() AnalysisHeatMapVisualPtrOutput {
	return i.ToAnalysisHeatMapVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisHeatMapVisualArgs) ToAnalysisHeatMapVisualPtrOutputWithContext(ctx context.Context) AnalysisHeatMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapVisualOutput).ToAnalysisHeatMapVisualPtrOutputWithContext(ctx)
}

// AnalysisHeatMapVisualPtrInput is an input type that accepts AnalysisHeatMapVisualArgs, AnalysisHeatMapVisualPtr and AnalysisHeatMapVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisHeatMapVisualPtrInput` via:
//
//	        AnalysisHeatMapVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisHeatMapVisualPtrInput interface {
	pulumi.Input

	ToAnalysisHeatMapVisualPtrOutput() AnalysisHeatMapVisualPtrOutput
	ToAnalysisHeatMapVisualPtrOutputWithContext(context.Context) AnalysisHeatMapVisualPtrOutput
}

type analysisHeatMapVisualPtrType AnalysisHeatMapVisualArgs

func AnalysisHeatMapVisualPtr(v *AnalysisHeatMapVisualArgs) AnalysisHeatMapVisualPtrInput {
	return (*analysisHeatMapVisualPtrType)(v)
}

func (*analysisHeatMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHeatMapVisual)(nil)).Elem()
}

func (i *analysisHeatMapVisualPtrType) ToAnalysisHeatMapVisualPtrOutput() AnalysisHeatMapVisualPtrOutput {
	return i.ToAnalysisHeatMapVisualPtrOutputWithContext(context.Background())
}

func (i *analysisHeatMapVisualPtrType) ToAnalysisHeatMapVisualPtrOutputWithContext(ctx context.Context) AnalysisHeatMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHeatMapVisualPtrOutput)
}

type AnalysisHeatMapVisualOutput struct{ *pulumi.OutputState }

func (AnalysisHeatMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHeatMapVisual)(nil)).Elem()
}

func (o AnalysisHeatMapVisualOutput) ToAnalysisHeatMapVisualOutput() AnalysisHeatMapVisualOutput {
	return o
}

func (o AnalysisHeatMapVisualOutput) ToAnalysisHeatMapVisualOutputWithContext(ctx context.Context) AnalysisHeatMapVisualOutput {
	return o
}

func (o AnalysisHeatMapVisualOutput) ToAnalysisHeatMapVisualPtrOutput() AnalysisHeatMapVisualPtrOutput {
	return o.ToAnalysisHeatMapVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisHeatMapVisualOutput) ToAnalysisHeatMapVisualPtrOutputWithContext(ctx context.Context) AnalysisHeatMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHeatMapVisual) *AnalysisHeatMapVisual {
		return &v
	}).(AnalysisHeatMapVisualPtrOutput)
}

func (o AnalysisHeatMapVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisHeatMapVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisHeatMapVisualOutput) ChartConfiguration() AnalysisHeatMapConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapVisual) *AnalysisHeatMapConfiguration { return v.ChartConfiguration }).(AnalysisHeatMapConfigurationPtrOutput)
}

func (o AnalysisHeatMapVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisHeatMapVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisHeatMapVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisHeatMapVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHeatMapVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisHeatMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisHeatMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisHeatMapVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHeatMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHeatMapVisual)(nil)).Elem()
}

func (o AnalysisHeatMapVisualPtrOutput) ToAnalysisHeatMapVisualPtrOutput() AnalysisHeatMapVisualPtrOutput {
	return o
}

func (o AnalysisHeatMapVisualPtrOutput) ToAnalysisHeatMapVisualPtrOutputWithContext(ctx context.Context) AnalysisHeatMapVisualPtrOutput {
	return o
}

func (o AnalysisHeatMapVisualPtrOutput) Elem() AnalysisHeatMapVisualOutput {
	return o.ApplyT(func(v *AnalysisHeatMapVisual) AnalysisHeatMapVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisHeatMapVisual
		return ret
	}).(AnalysisHeatMapVisualOutput)
}

func (o AnalysisHeatMapVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisHeatMapVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisHeatMapVisualPtrOutput) ChartConfiguration() AnalysisHeatMapConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapVisual) *AnalysisHeatMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisHeatMapConfigurationPtrOutput)
}

func (o AnalysisHeatMapVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisHeatMapVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisHeatMapVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisHeatMapVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisHeatMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisHeatMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisHistogramAggregatedFieldWells struct {
	Values []AnalysisMeasureField `pulumi:"values"`
}

// AnalysisHistogramAggregatedFieldWellsInput is an input type that accepts AnalysisHistogramAggregatedFieldWellsArgs and AnalysisHistogramAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisHistogramAggregatedFieldWellsInput` via:
//
//	AnalysisHistogramAggregatedFieldWellsArgs{...}
type AnalysisHistogramAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisHistogramAggregatedFieldWellsOutput() AnalysisHistogramAggregatedFieldWellsOutput
	ToAnalysisHistogramAggregatedFieldWellsOutputWithContext(context.Context) AnalysisHistogramAggregatedFieldWellsOutput
}

type AnalysisHistogramAggregatedFieldWellsArgs struct {
	Values AnalysisMeasureFieldArrayInput `pulumi:"values"`
}

func (AnalysisHistogramAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisHistogramAggregatedFieldWellsArgs) ToAnalysisHistogramAggregatedFieldWellsOutput() AnalysisHistogramAggregatedFieldWellsOutput {
	return i.ToAnalysisHistogramAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisHistogramAggregatedFieldWellsArgs) ToAnalysisHistogramAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisHistogramAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramAggregatedFieldWellsOutput)
}

func (i AnalysisHistogramAggregatedFieldWellsArgs) ToAnalysisHistogramAggregatedFieldWellsPtrOutput() AnalysisHistogramAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisHistogramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisHistogramAggregatedFieldWellsArgs) ToAnalysisHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHistogramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramAggregatedFieldWellsOutput).ToAnalysisHistogramAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisHistogramAggregatedFieldWellsPtrInput is an input type that accepts AnalysisHistogramAggregatedFieldWellsArgs, AnalysisHistogramAggregatedFieldWellsPtr and AnalysisHistogramAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisHistogramAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisHistogramAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisHistogramAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisHistogramAggregatedFieldWellsPtrOutput() AnalysisHistogramAggregatedFieldWellsPtrOutput
	ToAnalysisHistogramAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisHistogramAggregatedFieldWellsPtrOutput
}

type analysisHistogramAggregatedFieldWellsPtrType AnalysisHistogramAggregatedFieldWellsArgs

func AnalysisHistogramAggregatedFieldWellsPtr(v *AnalysisHistogramAggregatedFieldWellsArgs) AnalysisHistogramAggregatedFieldWellsPtrInput {
	return (*analysisHistogramAggregatedFieldWellsPtrType)(v)
}

func (*analysisHistogramAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisHistogramAggregatedFieldWellsPtrType) ToAnalysisHistogramAggregatedFieldWellsPtrOutput() AnalysisHistogramAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisHistogramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisHistogramAggregatedFieldWellsPtrType) ToAnalysisHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHistogramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramAggregatedFieldWellsPtrOutput)
}

type AnalysisHistogramAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisHistogramAggregatedFieldWellsOutput) ToAnalysisHistogramAggregatedFieldWellsOutput() AnalysisHistogramAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisHistogramAggregatedFieldWellsOutput) ToAnalysisHistogramAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisHistogramAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisHistogramAggregatedFieldWellsOutput) ToAnalysisHistogramAggregatedFieldWellsPtrOutput() AnalysisHistogramAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisHistogramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisHistogramAggregatedFieldWellsOutput) ToAnalysisHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHistogramAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHistogramAggregatedFieldWells) *AnalysisHistogramAggregatedFieldWells {
		return &v
	}).(AnalysisHistogramAggregatedFieldWellsPtrOutput)
}

func (o AnalysisHistogramAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisHistogramAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisHistogramAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisHistogramAggregatedFieldWellsPtrOutput) ToAnalysisHistogramAggregatedFieldWellsPtrOutput() AnalysisHistogramAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisHistogramAggregatedFieldWellsPtrOutput) ToAnalysisHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHistogramAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisHistogramAggregatedFieldWellsPtrOutput) Elem() AnalysisHistogramAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisHistogramAggregatedFieldWells) AnalysisHistogramAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisHistogramAggregatedFieldWells
		return ret
	}).(AnalysisHistogramAggregatedFieldWellsOutput)
}

func (o AnalysisHistogramAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisHistogramAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisHistogramBinOptions struct {
	BinCount        *AnalysisBinCountOptions  `pulumi:"binCount"`
	BinWidth        *AnalysisBinWidthOptions  `pulumi:"binWidth"`
	SelectedBinType *AnalysisHistogramBinType `pulumi:"selectedBinType"`
	StartValue      *float64                  `pulumi:"startValue"`
}

// AnalysisHistogramBinOptionsInput is an input type that accepts AnalysisHistogramBinOptionsArgs and AnalysisHistogramBinOptionsOutput values.
// You can construct a concrete instance of `AnalysisHistogramBinOptionsInput` via:
//
//	AnalysisHistogramBinOptionsArgs{...}
type AnalysisHistogramBinOptionsInput interface {
	pulumi.Input

	ToAnalysisHistogramBinOptionsOutput() AnalysisHistogramBinOptionsOutput
	ToAnalysisHistogramBinOptionsOutputWithContext(context.Context) AnalysisHistogramBinOptionsOutput
}

type AnalysisHistogramBinOptionsArgs struct {
	BinCount        AnalysisBinCountOptionsPtrInput  `pulumi:"binCount"`
	BinWidth        AnalysisBinWidthOptionsPtrInput  `pulumi:"binWidth"`
	SelectedBinType AnalysisHistogramBinTypePtrInput `pulumi:"selectedBinType"`
	StartValue      pulumi.Float64PtrInput           `pulumi:"startValue"`
}

func (AnalysisHistogramBinOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramBinOptions)(nil)).Elem()
}

func (i AnalysisHistogramBinOptionsArgs) ToAnalysisHistogramBinOptionsOutput() AnalysisHistogramBinOptionsOutput {
	return i.ToAnalysisHistogramBinOptionsOutputWithContext(context.Background())
}

func (i AnalysisHistogramBinOptionsArgs) ToAnalysisHistogramBinOptionsOutputWithContext(ctx context.Context) AnalysisHistogramBinOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramBinOptionsOutput)
}

func (i AnalysisHistogramBinOptionsArgs) ToAnalysisHistogramBinOptionsPtrOutput() AnalysisHistogramBinOptionsPtrOutput {
	return i.ToAnalysisHistogramBinOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisHistogramBinOptionsArgs) ToAnalysisHistogramBinOptionsPtrOutputWithContext(ctx context.Context) AnalysisHistogramBinOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramBinOptionsOutput).ToAnalysisHistogramBinOptionsPtrOutputWithContext(ctx)
}

// AnalysisHistogramBinOptionsPtrInput is an input type that accepts AnalysisHistogramBinOptionsArgs, AnalysisHistogramBinOptionsPtr and AnalysisHistogramBinOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisHistogramBinOptionsPtrInput` via:
//
//	        AnalysisHistogramBinOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisHistogramBinOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisHistogramBinOptionsPtrOutput() AnalysisHistogramBinOptionsPtrOutput
	ToAnalysisHistogramBinOptionsPtrOutputWithContext(context.Context) AnalysisHistogramBinOptionsPtrOutput
}

type analysisHistogramBinOptionsPtrType AnalysisHistogramBinOptionsArgs

func AnalysisHistogramBinOptionsPtr(v *AnalysisHistogramBinOptionsArgs) AnalysisHistogramBinOptionsPtrInput {
	return (*analysisHistogramBinOptionsPtrType)(v)
}

func (*analysisHistogramBinOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramBinOptions)(nil)).Elem()
}

func (i *analysisHistogramBinOptionsPtrType) ToAnalysisHistogramBinOptionsPtrOutput() AnalysisHistogramBinOptionsPtrOutput {
	return i.ToAnalysisHistogramBinOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisHistogramBinOptionsPtrType) ToAnalysisHistogramBinOptionsPtrOutputWithContext(ctx context.Context) AnalysisHistogramBinOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramBinOptionsPtrOutput)
}

type AnalysisHistogramBinOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramBinOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramBinOptions)(nil)).Elem()
}

func (o AnalysisHistogramBinOptionsOutput) ToAnalysisHistogramBinOptionsOutput() AnalysisHistogramBinOptionsOutput {
	return o
}

func (o AnalysisHistogramBinOptionsOutput) ToAnalysisHistogramBinOptionsOutputWithContext(ctx context.Context) AnalysisHistogramBinOptionsOutput {
	return o
}

func (o AnalysisHistogramBinOptionsOutput) ToAnalysisHistogramBinOptionsPtrOutput() AnalysisHistogramBinOptionsPtrOutput {
	return o.ToAnalysisHistogramBinOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisHistogramBinOptionsOutput) ToAnalysisHistogramBinOptionsPtrOutputWithContext(ctx context.Context) AnalysisHistogramBinOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHistogramBinOptions) *AnalysisHistogramBinOptions {
		return &v
	}).(AnalysisHistogramBinOptionsPtrOutput)
}

func (o AnalysisHistogramBinOptionsOutput) BinCount() AnalysisBinCountOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramBinOptions) *AnalysisBinCountOptions { return v.BinCount }).(AnalysisBinCountOptionsPtrOutput)
}

func (o AnalysisHistogramBinOptionsOutput) BinWidth() AnalysisBinWidthOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramBinOptions) *AnalysisBinWidthOptions { return v.BinWidth }).(AnalysisBinWidthOptionsPtrOutput)
}

func (o AnalysisHistogramBinOptionsOutput) SelectedBinType() AnalysisHistogramBinTypePtrOutput {
	return o.ApplyT(func(v AnalysisHistogramBinOptions) *AnalysisHistogramBinType { return v.SelectedBinType }).(AnalysisHistogramBinTypePtrOutput)
}

func (o AnalysisHistogramBinOptionsOutput) StartValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisHistogramBinOptions) *float64 { return v.StartValue }).(pulumi.Float64PtrOutput)
}

type AnalysisHistogramBinOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramBinOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramBinOptions)(nil)).Elem()
}

func (o AnalysisHistogramBinOptionsPtrOutput) ToAnalysisHistogramBinOptionsPtrOutput() AnalysisHistogramBinOptionsPtrOutput {
	return o
}

func (o AnalysisHistogramBinOptionsPtrOutput) ToAnalysisHistogramBinOptionsPtrOutputWithContext(ctx context.Context) AnalysisHistogramBinOptionsPtrOutput {
	return o
}

func (o AnalysisHistogramBinOptionsPtrOutput) Elem() AnalysisHistogramBinOptionsOutput {
	return o.ApplyT(func(v *AnalysisHistogramBinOptions) AnalysisHistogramBinOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisHistogramBinOptions
		return ret
	}).(AnalysisHistogramBinOptionsOutput)
}

func (o AnalysisHistogramBinOptionsPtrOutput) BinCount() AnalysisBinCountOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramBinOptions) *AnalysisBinCountOptions {
		if v == nil {
			return nil
		}
		return v.BinCount
	}).(AnalysisBinCountOptionsPtrOutput)
}

func (o AnalysisHistogramBinOptionsPtrOutput) BinWidth() AnalysisBinWidthOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramBinOptions) *AnalysisBinWidthOptions {
		if v == nil {
			return nil
		}
		return v.BinWidth
	}).(AnalysisBinWidthOptionsPtrOutput)
}

func (o AnalysisHistogramBinOptionsPtrOutput) SelectedBinType() AnalysisHistogramBinTypePtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramBinOptions) *AnalysisHistogramBinType {
		if v == nil {
			return nil
		}
		return v.SelectedBinType
	}).(AnalysisHistogramBinTypePtrOutput)
}

func (o AnalysisHistogramBinOptionsPtrOutput) StartValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramBinOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.StartValue
	}).(pulumi.Float64PtrOutput)
}

type AnalysisHistogramConfiguration struct {
	BinOptions          *AnalysisHistogramBinOptions   `pulumi:"binOptions"`
	DataLabels          *AnalysisDataLabelOptions      `pulumi:"dataLabels"`
	FieldWells          *AnalysisHistogramFieldWells   `pulumi:"fieldWells"`
	Tooltip             *AnalysisTooltipOptions        `pulumi:"tooltip"`
	VisualPalette       *AnalysisVisualPalette         `pulumi:"visualPalette"`
	XAxisDisplayOptions *AnalysisAxisDisplayOptions    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   *AnalysisChartAxisLabelOptions `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions *AnalysisAxisDisplayOptions    `pulumi:"yAxisDisplayOptions"`
}

// AnalysisHistogramConfigurationInput is an input type that accepts AnalysisHistogramConfigurationArgs and AnalysisHistogramConfigurationOutput values.
// You can construct a concrete instance of `AnalysisHistogramConfigurationInput` via:
//
//	AnalysisHistogramConfigurationArgs{...}
type AnalysisHistogramConfigurationInput interface {
	pulumi.Input

	ToAnalysisHistogramConfigurationOutput() AnalysisHistogramConfigurationOutput
	ToAnalysisHistogramConfigurationOutputWithContext(context.Context) AnalysisHistogramConfigurationOutput
}

type AnalysisHistogramConfigurationArgs struct {
	BinOptions          AnalysisHistogramBinOptionsPtrInput   `pulumi:"binOptions"`
	DataLabels          AnalysisDataLabelOptionsPtrInput      `pulumi:"dataLabels"`
	FieldWells          AnalysisHistogramFieldWellsPtrInput   `pulumi:"fieldWells"`
	Tooltip             AnalysisTooltipOptionsPtrInput        `pulumi:"tooltip"`
	VisualPalette       AnalysisVisualPalettePtrInput         `pulumi:"visualPalette"`
	XAxisDisplayOptions AnalysisAxisDisplayOptionsPtrInput    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   AnalysisChartAxisLabelOptionsPtrInput `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions AnalysisAxisDisplayOptionsPtrInput    `pulumi:"yAxisDisplayOptions"`
}

func (AnalysisHistogramConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramConfiguration)(nil)).Elem()
}

func (i AnalysisHistogramConfigurationArgs) ToAnalysisHistogramConfigurationOutput() AnalysisHistogramConfigurationOutput {
	return i.ToAnalysisHistogramConfigurationOutputWithContext(context.Background())
}

func (i AnalysisHistogramConfigurationArgs) ToAnalysisHistogramConfigurationOutputWithContext(ctx context.Context) AnalysisHistogramConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramConfigurationOutput)
}

func (i AnalysisHistogramConfigurationArgs) ToAnalysisHistogramConfigurationPtrOutput() AnalysisHistogramConfigurationPtrOutput {
	return i.ToAnalysisHistogramConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisHistogramConfigurationArgs) ToAnalysisHistogramConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHistogramConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramConfigurationOutput).ToAnalysisHistogramConfigurationPtrOutputWithContext(ctx)
}

// AnalysisHistogramConfigurationPtrInput is an input type that accepts AnalysisHistogramConfigurationArgs, AnalysisHistogramConfigurationPtr and AnalysisHistogramConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisHistogramConfigurationPtrInput` via:
//
//	        AnalysisHistogramConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisHistogramConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisHistogramConfigurationPtrOutput() AnalysisHistogramConfigurationPtrOutput
	ToAnalysisHistogramConfigurationPtrOutputWithContext(context.Context) AnalysisHistogramConfigurationPtrOutput
}

type analysisHistogramConfigurationPtrType AnalysisHistogramConfigurationArgs

func AnalysisHistogramConfigurationPtr(v *AnalysisHistogramConfigurationArgs) AnalysisHistogramConfigurationPtrInput {
	return (*analysisHistogramConfigurationPtrType)(v)
}

func (*analysisHistogramConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramConfiguration)(nil)).Elem()
}

func (i *analysisHistogramConfigurationPtrType) ToAnalysisHistogramConfigurationPtrOutput() AnalysisHistogramConfigurationPtrOutput {
	return i.ToAnalysisHistogramConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisHistogramConfigurationPtrType) ToAnalysisHistogramConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHistogramConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramConfigurationPtrOutput)
}

type AnalysisHistogramConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramConfiguration)(nil)).Elem()
}

func (o AnalysisHistogramConfigurationOutput) ToAnalysisHistogramConfigurationOutput() AnalysisHistogramConfigurationOutput {
	return o
}

func (o AnalysisHistogramConfigurationOutput) ToAnalysisHistogramConfigurationOutputWithContext(ctx context.Context) AnalysisHistogramConfigurationOutput {
	return o
}

func (o AnalysisHistogramConfigurationOutput) ToAnalysisHistogramConfigurationPtrOutput() AnalysisHistogramConfigurationPtrOutput {
	return o.ToAnalysisHistogramConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisHistogramConfigurationOutput) ToAnalysisHistogramConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHistogramConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHistogramConfiguration) *AnalysisHistogramConfiguration {
		return &v
	}).(AnalysisHistogramConfigurationPtrOutput)
}

func (o AnalysisHistogramConfigurationOutput) BinOptions() AnalysisHistogramBinOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramConfiguration) *AnalysisHistogramBinOptions { return v.BinOptions }).(AnalysisHistogramBinOptionsPtrOutput)
}

func (o AnalysisHistogramConfigurationOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramConfiguration) *AnalysisDataLabelOptions { return v.DataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisHistogramConfigurationOutput) FieldWells() AnalysisHistogramFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramConfiguration) *AnalysisHistogramFieldWells { return v.FieldWells }).(AnalysisHistogramFieldWellsPtrOutput)
}

func (o AnalysisHistogramConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisHistogramConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisHistogramConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisHistogramConfigurationOutput) XAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramConfiguration) *AnalysisAxisDisplayOptions { return v.XAxisDisplayOptions }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisHistogramConfigurationOutput) XAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramConfiguration) *AnalysisChartAxisLabelOptions { return v.XAxisLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisHistogramConfigurationOutput) YAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramConfiguration) *AnalysisAxisDisplayOptions { return v.YAxisDisplayOptions }).(AnalysisAxisDisplayOptionsPtrOutput)
}

type AnalysisHistogramConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramConfiguration)(nil)).Elem()
}

func (o AnalysisHistogramConfigurationPtrOutput) ToAnalysisHistogramConfigurationPtrOutput() AnalysisHistogramConfigurationPtrOutput {
	return o
}

func (o AnalysisHistogramConfigurationPtrOutput) ToAnalysisHistogramConfigurationPtrOutputWithContext(ctx context.Context) AnalysisHistogramConfigurationPtrOutput {
	return o
}

func (o AnalysisHistogramConfigurationPtrOutput) Elem() AnalysisHistogramConfigurationOutput {
	return o.ApplyT(func(v *AnalysisHistogramConfiguration) AnalysisHistogramConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisHistogramConfiguration
		return ret
	}).(AnalysisHistogramConfigurationOutput)
}

func (o AnalysisHistogramConfigurationPtrOutput) BinOptions() AnalysisHistogramBinOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramConfiguration) *AnalysisHistogramBinOptions {
		if v == nil {
			return nil
		}
		return v.BinOptions
	}).(AnalysisHistogramBinOptionsPtrOutput)
}

func (o AnalysisHistogramConfigurationPtrOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisHistogramConfigurationPtrOutput) FieldWells() AnalysisHistogramFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramConfiguration) *AnalysisHistogramFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisHistogramFieldWellsPtrOutput)
}

func (o AnalysisHistogramConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisHistogramConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisHistogramConfigurationPtrOutput) XAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.XAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisHistogramConfigurationPtrOutput) XAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.XAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisHistogramConfigurationPtrOutput) YAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.YAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

type AnalysisHistogramFieldWells struct {
	HistogramAggregatedFieldWells *AnalysisHistogramAggregatedFieldWells `pulumi:"histogramAggregatedFieldWells"`
}

// AnalysisHistogramFieldWellsInput is an input type that accepts AnalysisHistogramFieldWellsArgs and AnalysisHistogramFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisHistogramFieldWellsInput` via:
//
//	AnalysisHistogramFieldWellsArgs{...}
type AnalysisHistogramFieldWellsInput interface {
	pulumi.Input

	ToAnalysisHistogramFieldWellsOutput() AnalysisHistogramFieldWellsOutput
	ToAnalysisHistogramFieldWellsOutputWithContext(context.Context) AnalysisHistogramFieldWellsOutput
}

type AnalysisHistogramFieldWellsArgs struct {
	HistogramAggregatedFieldWells AnalysisHistogramAggregatedFieldWellsPtrInput `pulumi:"histogramAggregatedFieldWells"`
}

func (AnalysisHistogramFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramFieldWells)(nil)).Elem()
}

func (i AnalysisHistogramFieldWellsArgs) ToAnalysisHistogramFieldWellsOutput() AnalysisHistogramFieldWellsOutput {
	return i.ToAnalysisHistogramFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisHistogramFieldWellsArgs) ToAnalysisHistogramFieldWellsOutputWithContext(ctx context.Context) AnalysisHistogramFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramFieldWellsOutput)
}

func (i AnalysisHistogramFieldWellsArgs) ToAnalysisHistogramFieldWellsPtrOutput() AnalysisHistogramFieldWellsPtrOutput {
	return i.ToAnalysisHistogramFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisHistogramFieldWellsArgs) ToAnalysisHistogramFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHistogramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramFieldWellsOutput).ToAnalysisHistogramFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisHistogramFieldWellsPtrInput is an input type that accepts AnalysisHistogramFieldWellsArgs, AnalysisHistogramFieldWellsPtr and AnalysisHistogramFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisHistogramFieldWellsPtrInput` via:
//
//	        AnalysisHistogramFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisHistogramFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisHistogramFieldWellsPtrOutput() AnalysisHistogramFieldWellsPtrOutput
	ToAnalysisHistogramFieldWellsPtrOutputWithContext(context.Context) AnalysisHistogramFieldWellsPtrOutput
}

type analysisHistogramFieldWellsPtrType AnalysisHistogramFieldWellsArgs

func AnalysisHistogramFieldWellsPtr(v *AnalysisHistogramFieldWellsArgs) AnalysisHistogramFieldWellsPtrInput {
	return (*analysisHistogramFieldWellsPtrType)(v)
}

func (*analysisHistogramFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramFieldWells)(nil)).Elem()
}

func (i *analysisHistogramFieldWellsPtrType) ToAnalysisHistogramFieldWellsPtrOutput() AnalysisHistogramFieldWellsPtrOutput {
	return i.ToAnalysisHistogramFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisHistogramFieldWellsPtrType) ToAnalysisHistogramFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHistogramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramFieldWellsPtrOutput)
}

type AnalysisHistogramFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramFieldWells)(nil)).Elem()
}

func (o AnalysisHistogramFieldWellsOutput) ToAnalysisHistogramFieldWellsOutput() AnalysisHistogramFieldWellsOutput {
	return o
}

func (o AnalysisHistogramFieldWellsOutput) ToAnalysisHistogramFieldWellsOutputWithContext(ctx context.Context) AnalysisHistogramFieldWellsOutput {
	return o
}

func (o AnalysisHistogramFieldWellsOutput) ToAnalysisHistogramFieldWellsPtrOutput() AnalysisHistogramFieldWellsPtrOutput {
	return o.ToAnalysisHistogramFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisHistogramFieldWellsOutput) ToAnalysisHistogramFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHistogramFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHistogramFieldWells) *AnalysisHistogramFieldWells {
		return &v
	}).(AnalysisHistogramFieldWellsPtrOutput)
}

func (o AnalysisHistogramFieldWellsOutput) HistogramAggregatedFieldWells() AnalysisHistogramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramFieldWells) *AnalysisHistogramAggregatedFieldWells {
		return v.HistogramAggregatedFieldWells
	}).(AnalysisHistogramAggregatedFieldWellsPtrOutput)
}

type AnalysisHistogramFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramFieldWells)(nil)).Elem()
}

func (o AnalysisHistogramFieldWellsPtrOutput) ToAnalysisHistogramFieldWellsPtrOutput() AnalysisHistogramFieldWellsPtrOutput {
	return o
}

func (o AnalysisHistogramFieldWellsPtrOutput) ToAnalysisHistogramFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisHistogramFieldWellsPtrOutput {
	return o
}

func (o AnalysisHistogramFieldWellsPtrOutput) Elem() AnalysisHistogramFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisHistogramFieldWells) AnalysisHistogramFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisHistogramFieldWells
		return ret
	}).(AnalysisHistogramFieldWellsOutput)
}

func (o AnalysisHistogramFieldWellsPtrOutput) HistogramAggregatedFieldWells() AnalysisHistogramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramFieldWells) *AnalysisHistogramAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.HistogramAggregatedFieldWells
	}).(AnalysisHistogramAggregatedFieldWellsPtrOutput)
}

type AnalysisHistogramVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisHistogramConfiguration     `pulumi:"chartConfiguration"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisHistogramVisualInput is an input type that accepts AnalysisHistogramVisualArgs and AnalysisHistogramVisualOutput values.
// You can construct a concrete instance of `AnalysisHistogramVisualInput` via:
//
//	AnalysisHistogramVisualArgs{...}
type AnalysisHistogramVisualInput interface {
	pulumi.Input

	ToAnalysisHistogramVisualOutput() AnalysisHistogramVisualOutput
	ToAnalysisHistogramVisualOutputWithContext(context.Context) AnalysisHistogramVisualOutput
}

type AnalysisHistogramVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisHistogramConfigurationPtrInput     `pulumi:"chartConfiguration"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisHistogramVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramVisual)(nil)).Elem()
}

func (i AnalysisHistogramVisualArgs) ToAnalysisHistogramVisualOutput() AnalysisHistogramVisualOutput {
	return i.ToAnalysisHistogramVisualOutputWithContext(context.Background())
}

func (i AnalysisHistogramVisualArgs) ToAnalysisHistogramVisualOutputWithContext(ctx context.Context) AnalysisHistogramVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramVisualOutput)
}

func (i AnalysisHistogramVisualArgs) ToAnalysisHistogramVisualPtrOutput() AnalysisHistogramVisualPtrOutput {
	return i.ToAnalysisHistogramVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisHistogramVisualArgs) ToAnalysisHistogramVisualPtrOutputWithContext(ctx context.Context) AnalysisHistogramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramVisualOutput).ToAnalysisHistogramVisualPtrOutputWithContext(ctx)
}

// AnalysisHistogramVisualPtrInput is an input type that accepts AnalysisHistogramVisualArgs, AnalysisHistogramVisualPtr and AnalysisHistogramVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisHistogramVisualPtrInput` via:
//
//	        AnalysisHistogramVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisHistogramVisualPtrInput interface {
	pulumi.Input

	ToAnalysisHistogramVisualPtrOutput() AnalysisHistogramVisualPtrOutput
	ToAnalysisHistogramVisualPtrOutputWithContext(context.Context) AnalysisHistogramVisualPtrOutput
}

type analysisHistogramVisualPtrType AnalysisHistogramVisualArgs

func AnalysisHistogramVisualPtr(v *AnalysisHistogramVisualArgs) AnalysisHistogramVisualPtrInput {
	return (*analysisHistogramVisualPtrType)(v)
}

func (*analysisHistogramVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramVisual)(nil)).Elem()
}

func (i *analysisHistogramVisualPtrType) ToAnalysisHistogramVisualPtrOutput() AnalysisHistogramVisualPtrOutput {
	return i.ToAnalysisHistogramVisualPtrOutputWithContext(context.Background())
}

func (i *analysisHistogramVisualPtrType) ToAnalysisHistogramVisualPtrOutputWithContext(ctx context.Context) AnalysisHistogramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisHistogramVisualPtrOutput)
}

type AnalysisHistogramVisualOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramVisual)(nil)).Elem()
}

func (o AnalysisHistogramVisualOutput) ToAnalysisHistogramVisualOutput() AnalysisHistogramVisualOutput {
	return o
}

func (o AnalysisHistogramVisualOutput) ToAnalysisHistogramVisualOutputWithContext(ctx context.Context) AnalysisHistogramVisualOutput {
	return o
}

func (o AnalysisHistogramVisualOutput) ToAnalysisHistogramVisualPtrOutput() AnalysisHistogramVisualPtrOutput {
	return o.ToAnalysisHistogramVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisHistogramVisualOutput) ToAnalysisHistogramVisualPtrOutputWithContext(ctx context.Context) AnalysisHistogramVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHistogramVisual) *AnalysisHistogramVisual {
		return &v
	}).(AnalysisHistogramVisualPtrOutput)
}

func (o AnalysisHistogramVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisHistogramVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisHistogramVisualOutput) ChartConfiguration() AnalysisHistogramConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramVisual) *AnalysisHistogramConfiguration { return v.ChartConfiguration }).(AnalysisHistogramConfigurationPtrOutput)
}

func (o AnalysisHistogramVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisHistogramVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisHistogramVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisHistogramVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisHistogramVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisHistogramVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramVisual)(nil)).Elem()
}

func (o AnalysisHistogramVisualPtrOutput) ToAnalysisHistogramVisualPtrOutput() AnalysisHistogramVisualPtrOutput {
	return o
}

func (o AnalysisHistogramVisualPtrOutput) ToAnalysisHistogramVisualPtrOutputWithContext(ctx context.Context) AnalysisHistogramVisualPtrOutput {
	return o
}

func (o AnalysisHistogramVisualPtrOutput) Elem() AnalysisHistogramVisualOutput {
	return o.ApplyT(func(v *AnalysisHistogramVisual) AnalysisHistogramVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisHistogramVisual
		return ret
	}).(AnalysisHistogramVisualOutput)
}

func (o AnalysisHistogramVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisHistogramVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisHistogramVisualPtrOutput) ChartConfiguration() AnalysisHistogramConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramVisual) *AnalysisHistogramConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisHistogramConfigurationPtrOutput)
}

func (o AnalysisHistogramVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisHistogramVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisHistogramVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisHistogramVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisInsightConfiguration struct {
	Computations    []AnalysisComputation           `pulumi:"computations"`
	CustomNarrative *AnalysisCustomNarrativeOptions `pulumi:"customNarrative"`
}

// AnalysisInsightConfigurationInput is an input type that accepts AnalysisInsightConfigurationArgs and AnalysisInsightConfigurationOutput values.
// You can construct a concrete instance of `AnalysisInsightConfigurationInput` via:
//
//	AnalysisInsightConfigurationArgs{...}
type AnalysisInsightConfigurationInput interface {
	pulumi.Input

	ToAnalysisInsightConfigurationOutput() AnalysisInsightConfigurationOutput
	ToAnalysisInsightConfigurationOutputWithContext(context.Context) AnalysisInsightConfigurationOutput
}

type AnalysisInsightConfigurationArgs struct {
	Computations    AnalysisComputationArrayInput          `pulumi:"computations"`
	CustomNarrative AnalysisCustomNarrativeOptionsPtrInput `pulumi:"customNarrative"`
}

func (AnalysisInsightConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisInsightConfiguration)(nil)).Elem()
}

func (i AnalysisInsightConfigurationArgs) ToAnalysisInsightConfigurationOutput() AnalysisInsightConfigurationOutput {
	return i.ToAnalysisInsightConfigurationOutputWithContext(context.Background())
}

func (i AnalysisInsightConfigurationArgs) ToAnalysisInsightConfigurationOutputWithContext(ctx context.Context) AnalysisInsightConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisInsightConfigurationOutput)
}

func (i AnalysisInsightConfigurationArgs) ToAnalysisInsightConfigurationPtrOutput() AnalysisInsightConfigurationPtrOutput {
	return i.ToAnalysisInsightConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisInsightConfigurationArgs) ToAnalysisInsightConfigurationPtrOutputWithContext(ctx context.Context) AnalysisInsightConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisInsightConfigurationOutput).ToAnalysisInsightConfigurationPtrOutputWithContext(ctx)
}

// AnalysisInsightConfigurationPtrInput is an input type that accepts AnalysisInsightConfigurationArgs, AnalysisInsightConfigurationPtr and AnalysisInsightConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisInsightConfigurationPtrInput` via:
//
//	        AnalysisInsightConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisInsightConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisInsightConfigurationPtrOutput() AnalysisInsightConfigurationPtrOutput
	ToAnalysisInsightConfigurationPtrOutputWithContext(context.Context) AnalysisInsightConfigurationPtrOutput
}

type analysisInsightConfigurationPtrType AnalysisInsightConfigurationArgs

func AnalysisInsightConfigurationPtr(v *AnalysisInsightConfigurationArgs) AnalysisInsightConfigurationPtrInput {
	return (*analysisInsightConfigurationPtrType)(v)
}

func (*analysisInsightConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisInsightConfiguration)(nil)).Elem()
}

func (i *analysisInsightConfigurationPtrType) ToAnalysisInsightConfigurationPtrOutput() AnalysisInsightConfigurationPtrOutput {
	return i.ToAnalysisInsightConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisInsightConfigurationPtrType) ToAnalysisInsightConfigurationPtrOutputWithContext(ctx context.Context) AnalysisInsightConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisInsightConfigurationPtrOutput)
}

type AnalysisInsightConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisInsightConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisInsightConfiguration)(nil)).Elem()
}

func (o AnalysisInsightConfigurationOutput) ToAnalysisInsightConfigurationOutput() AnalysisInsightConfigurationOutput {
	return o
}

func (o AnalysisInsightConfigurationOutput) ToAnalysisInsightConfigurationOutputWithContext(ctx context.Context) AnalysisInsightConfigurationOutput {
	return o
}

func (o AnalysisInsightConfigurationOutput) ToAnalysisInsightConfigurationPtrOutput() AnalysisInsightConfigurationPtrOutput {
	return o.ToAnalysisInsightConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisInsightConfigurationOutput) ToAnalysisInsightConfigurationPtrOutputWithContext(ctx context.Context) AnalysisInsightConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisInsightConfiguration) *AnalysisInsightConfiguration {
		return &v
	}).(AnalysisInsightConfigurationPtrOutput)
}

func (o AnalysisInsightConfigurationOutput) Computations() AnalysisComputationArrayOutput {
	return o.ApplyT(func(v AnalysisInsightConfiguration) []AnalysisComputation { return v.Computations }).(AnalysisComputationArrayOutput)
}

func (o AnalysisInsightConfigurationOutput) CustomNarrative() AnalysisCustomNarrativeOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisInsightConfiguration) *AnalysisCustomNarrativeOptions { return v.CustomNarrative }).(AnalysisCustomNarrativeOptionsPtrOutput)
}

type AnalysisInsightConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisInsightConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisInsightConfiguration)(nil)).Elem()
}

func (o AnalysisInsightConfigurationPtrOutput) ToAnalysisInsightConfigurationPtrOutput() AnalysisInsightConfigurationPtrOutput {
	return o
}

func (o AnalysisInsightConfigurationPtrOutput) ToAnalysisInsightConfigurationPtrOutputWithContext(ctx context.Context) AnalysisInsightConfigurationPtrOutput {
	return o
}

func (o AnalysisInsightConfigurationPtrOutput) Elem() AnalysisInsightConfigurationOutput {
	return o.ApplyT(func(v *AnalysisInsightConfiguration) AnalysisInsightConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisInsightConfiguration
		return ret
	}).(AnalysisInsightConfigurationOutput)
}

func (o AnalysisInsightConfigurationPtrOutput) Computations() AnalysisComputationArrayOutput {
	return o.ApplyT(func(v *AnalysisInsightConfiguration) []AnalysisComputation {
		if v == nil {
			return nil
		}
		return v.Computations
	}).(AnalysisComputationArrayOutput)
}

func (o AnalysisInsightConfigurationPtrOutput) CustomNarrative() AnalysisCustomNarrativeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisInsightConfiguration) *AnalysisCustomNarrativeOptions {
		if v == nil {
			return nil
		}
		return v.CustomNarrative
	}).(AnalysisCustomNarrativeOptionsPtrOutput)
}

type AnalysisInsightVisual struct {
	Actions              []AnalysisVisualCustomAction        `pulumi:"actions"`
	DataSetIdentifier    string                              `pulumi:"dataSetIdentifier"`
	InsightConfiguration *AnalysisInsightConfiguration       `pulumi:"insightConfiguration"`
	Subtitle             *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title                *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId             string                              `pulumi:"visualId"`
}

// AnalysisInsightVisualInput is an input type that accepts AnalysisInsightVisualArgs and AnalysisInsightVisualOutput values.
// You can construct a concrete instance of `AnalysisInsightVisualInput` via:
//
//	AnalysisInsightVisualArgs{...}
type AnalysisInsightVisualInput interface {
	pulumi.Input

	ToAnalysisInsightVisualOutput() AnalysisInsightVisualOutput
	ToAnalysisInsightVisualOutputWithContext(context.Context) AnalysisInsightVisualOutput
}

type AnalysisInsightVisualArgs struct {
	Actions              AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	DataSetIdentifier    pulumi.StringInput                         `pulumi:"dataSetIdentifier"`
	InsightConfiguration AnalysisInsightConfigurationPtrInput       `pulumi:"insightConfiguration"`
	Subtitle             AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title                AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId             pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisInsightVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisInsightVisual)(nil)).Elem()
}

func (i AnalysisInsightVisualArgs) ToAnalysisInsightVisualOutput() AnalysisInsightVisualOutput {
	return i.ToAnalysisInsightVisualOutputWithContext(context.Background())
}

func (i AnalysisInsightVisualArgs) ToAnalysisInsightVisualOutputWithContext(ctx context.Context) AnalysisInsightVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisInsightVisualOutput)
}

func (i AnalysisInsightVisualArgs) ToAnalysisInsightVisualPtrOutput() AnalysisInsightVisualPtrOutput {
	return i.ToAnalysisInsightVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisInsightVisualArgs) ToAnalysisInsightVisualPtrOutputWithContext(ctx context.Context) AnalysisInsightVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisInsightVisualOutput).ToAnalysisInsightVisualPtrOutputWithContext(ctx)
}

// AnalysisInsightVisualPtrInput is an input type that accepts AnalysisInsightVisualArgs, AnalysisInsightVisualPtr and AnalysisInsightVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisInsightVisualPtrInput` via:
//
//	        AnalysisInsightVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisInsightVisualPtrInput interface {
	pulumi.Input

	ToAnalysisInsightVisualPtrOutput() AnalysisInsightVisualPtrOutput
	ToAnalysisInsightVisualPtrOutputWithContext(context.Context) AnalysisInsightVisualPtrOutput
}

type analysisInsightVisualPtrType AnalysisInsightVisualArgs

func AnalysisInsightVisualPtr(v *AnalysisInsightVisualArgs) AnalysisInsightVisualPtrInput {
	return (*analysisInsightVisualPtrType)(v)
}

func (*analysisInsightVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisInsightVisual)(nil)).Elem()
}

func (i *analysisInsightVisualPtrType) ToAnalysisInsightVisualPtrOutput() AnalysisInsightVisualPtrOutput {
	return i.ToAnalysisInsightVisualPtrOutputWithContext(context.Background())
}

func (i *analysisInsightVisualPtrType) ToAnalysisInsightVisualPtrOutputWithContext(ctx context.Context) AnalysisInsightVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisInsightVisualPtrOutput)
}

type AnalysisInsightVisualOutput struct{ *pulumi.OutputState }

func (AnalysisInsightVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisInsightVisual)(nil)).Elem()
}

func (o AnalysisInsightVisualOutput) ToAnalysisInsightVisualOutput() AnalysisInsightVisualOutput {
	return o
}

func (o AnalysisInsightVisualOutput) ToAnalysisInsightVisualOutputWithContext(ctx context.Context) AnalysisInsightVisualOutput {
	return o
}

func (o AnalysisInsightVisualOutput) ToAnalysisInsightVisualPtrOutput() AnalysisInsightVisualPtrOutput {
	return o.ToAnalysisInsightVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisInsightVisualOutput) ToAnalysisInsightVisualPtrOutputWithContext(ctx context.Context) AnalysisInsightVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisInsightVisual) *AnalysisInsightVisual {
		return &v
	}).(AnalysisInsightVisualPtrOutput)
}

func (o AnalysisInsightVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisInsightVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisInsightVisualOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisInsightVisual) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o AnalysisInsightVisualOutput) InsightConfiguration() AnalysisInsightConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisInsightVisual) *AnalysisInsightConfiguration { return v.InsightConfiguration }).(AnalysisInsightConfigurationPtrOutput)
}

func (o AnalysisInsightVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisInsightVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisInsightVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisInsightVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisInsightVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisInsightVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisInsightVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisInsightVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisInsightVisual)(nil)).Elem()
}

func (o AnalysisInsightVisualPtrOutput) ToAnalysisInsightVisualPtrOutput() AnalysisInsightVisualPtrOutput {
	return o
}

func (o AnalysisInsightVisualPtrOutput) ToAnalysisInsightVisualPtrOutputWithContext(ctx context.Context) AnalysisInsightVisualPtrOutput {
	return o
}

func (o AnalysisInsightVisualPtrOutput) Elem() AnalysisInsightVisualOutput {
	return o.ApplyT(func(v *AnalysisInsightVisual) AnalysisInsightVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisInsightVisual
		return ret
	}).(AnalysisInsightVisualOutput)
}

func (o AnalysisInsightVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisInsightVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisInsightVisualPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisInsightVisual) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisInsightVisualPtrOutput) InsightConfiguration() AnalysisInsightConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisInsightVisual) *AnalysisInsightConfiguration {
		if v == nil {
			return nil
		}
		return v.InsightConfiguration
	}).(AnalysisInsightConfigurationPtrOutput)
}

func (o AnalysisInsightVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisInsightVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisInsightVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisInsightVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisInsightVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisInsightVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisIntegerDefaultValues struct {
	DynamicValue *AnalysisDynamicDefaultValue `pulumi:"dynamicValue"`
	StaticValues []float64                    `pulumi:"staticValues"`
}

// AnalysisIntegerDefaultValuesInput is an input type that accepts AnalysisIntegerDefaultValuesArgs and AnalysisIntegerDefaultValuesOutput values.
// You can construct a concrete instance of `AnalysisIntegerDefaultValuesInput` via:
//
//	AnalysisIntegerDefaultValuesArgs{...}
type AnalysisIntegerDefaultValuesInput interface {
	pulumi.Input

	ToAnalysisIntegerDefaultValuesOutput() AnalysisIntegerDefaultValuesOutput
	ToAnalysisIntegerDefaultValuesOutputWithContext(context.Context) AnalysisIntegerDefaultValuesOutput
}

type AnalysisIntegerDefaultValuesArgs struct {
	DynamicValue AnalysisDynamicDefaultValuePtrInput `pulumi:"dynamicValue"`
	StaticValues pulumi.Float64ArrayInput            `pulumi:"staticValues"`
}

func (AnalysisIntegerDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIntegerDefaultValues)(nil)).Elem()
}

func (i AnalysisIntegerDefaultValuesArgs) ToAnalysisIntegerDefaultValuesOutput() AnalysisIntegerDefaultValuesOutput {
	return i.ToAnalysisIntegerDefaultValuesOutputWithContext(context.Background())
}

func (i AnalysisIntegerDefaultValuesArgs) ToAnalysisIntegerDefaultValuesOutputWithContext(ctx context.Context) AnalysisIntegerDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerDefaultValuesOutput)
}

func (i AnalysisIntegerDefaultValuesArgs) ToAnalysisIntegerDefaultValuesPtrOutput() AnalysisIntegerDefaultValuesPtrOutput {
	return i.ToAnalysisIntegerDefaultValuesPtrOutputWithContext(context.Background())
}

func (i AnalysisIntegerDefaultValuesArgs) ToAnalysisIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisIntegerDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerDefaultValuesOutput).ToAnalysisIntegerDefaultValuesPtrOutputWithContext(ctx)
}

// AnalysisIntegerDefaultValuesPtrInput is an input type that accepts AnalysisIntegerDefaultValuesArgs, AnalysisIntegerDefaultValuesPtr and AnalysisIntegerDefaultValuesPtrOutput values.
// You can construct a concrete instance of `AnalysisIntegerDefaultValuesPtrInput` via:
//
//	        AnalysisIntegerDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type AnalysisIntegerDefaultValuesPtrInput interface {
	pulumi.Input

	ToAnalysisIntegerDefaultValuesPtrOutput() AnalysisIntegerDefaultValuesPtrOutput
	ToAnalysisIntegerDefaultValuesPtrOutputWithContext(context.Context) AnalysisIntegerDefaultValuesPtrOutput
}

type analysisIntegerDefaultValuesPtrType AnalysisIntegerDefaultValuesArgs

func AnalysisIntegerDefaultValuesPtr(v *AnalysisIntegerDefaultValuesArgs) AnalysisIntegerDefaultValuesPtrInput {
	return (*analysisIntegerDefaultValuesPtrType)(v)
}

func (*analysisIntegerDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisIntegerDefaultValues)(nil)).Elem()
}

func (i *analysisIntegerDefaultValuesPtrType) ToAnalysisIntegerDefaultValuesPtrOutput() AnalysisIntegerDefaultValuesPtrOutput {
	return i.ToAnalysisIntegerDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *analysisIntegerDefaultValuesPtrType) ToAnalysisIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisIntegerDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerDefaultValuesPtrOutput)
}

type AnalysisIntegerDefaultValuesOutput struct{ *pulumi.OutputState }

func (AnalysisIntegerDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIntegerDefaultValues)(nil)).Elem()
}

func (o AnalysisIntegerDefaultValuesOutput) ToAnalysisIntegerDefaultValuesOutput() AnalysisIntegerDefaultValuesOutput {
	return o
}

func (o AnalysisIntegerDefaultValuesOutput) ToAnalysisIntegerDefaultValuesOutputWithContext(ctx context.Context) AnalysisIntegerDefaultValuesOutput {
	return o
}

func (o AnalysisIntegerDefaultValuesOutput) ToAnalysisIntegerDefaultValuesPtrOutput() AnalysisIntegerDefaultValuesPtrOutput {
	return o.ToAnalysisIntegerDefaultValuesPtrOutputWithContext(context.Background())
}

func (o AnalysisIntegerDefaultValuesOutput) ToAnalysisIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisIntegerDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisIntegerDefaultValues) *AnalysisIntegerDefaultValues {
		return &v
	}).(AnalysisIntegerDefaultValuesPtrOutput)
}

func (o AnalysisIntegerDefaultValuesOutput) DynamicValue() AnalysisDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v AnalysisIntegerDefaultValues) *AnalysisDynamicDefaultValue { return v.DynamicValue }).(AnalysisDynamicDefaultValuePtrOutput)
}

func (o AnalysisIntegerDefaultValuesOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v AnalysisIntegerDefaultValues) []float64 { return v.StaticValues }).(pulumi.Float64ArrayOutput)
}

type AnalysisIntegerDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (AnalysisIntegerDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisIntegerDefaultValues)(nil)).Elem()
}

func (o AnalysisIntegerDefaultValuesPtrOutput) ToAnalysisIntegerDefaultValuesPtrOutput() AnalysisIntegerDefaultValuesPtrOutput {
	return o
}

func (o AnalysisIntegerDefaultValuesPtrOutput) ToAnalysisIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisIntegerDefaultValuesPtrOutput {
	return o
}

func (o AnalysisIntegerDefaultValuesPtrOutput) Elem() AnalysisIntegerDefaultValuesOutput {
	return o.ApplyT(func(v *AnalysisIntegerDefaultValues) AnalysisIntegerDefaultValues {
		if v != nil {
			return *v
		}
		var ret AnalysisIntegerDefaultValues
		return ret
	}).(AnalysisIntegerDefaultValuesOutput)
}

func (o AnalysisIntegerDefaultValuesPtrOutput) DynamicValue() AnalysisDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *AnalysisIntegerDefaultValues) *AnalysisDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(AnalysisDynamicDefaultValuePtrOutput)
}

func (o AnalysisIntegerDefaultValuesPtrOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *AnalysisIntegerDefaultValues) []float64 {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.Float64ArrayOutput)
}

type AnalysisIntegerParameter struct {
	Name   string    `pulumi:"name"`
	Values []float64 `pulumi:"values"`
}

// AnalysisIntegerParameterInput is an input type that accepts AnalysisIntegerParameterArgs and AnalysisIntegerParameterOutput values.
// You can construct a concrete instance of `AnalysisIntegerParameterInput` via:
//
//	AnalysisIntegerParameterArgs{...}
type AnalysisIntegerParameterInput interface {
	pulumi.Input

	ToAnalysisIntegerParameterOutput() AnalysisIntegerParameterOutput
	ToAnalysisIntegerParameterOutputWithContext(context.Context) AnalysisIntegerParameterOutput
}

type AnalysisIntegerParameterArgs struct {
	Name   pulumi.StringInput       `pulumi:"name"`
	Values pulumi.Float64ArrayInput `pulumi:"values"`
}

func (AnalysisIntegerParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIntegerParameter)(nil)).Elem()
}

func (i AnalysisIntegerParameterArgs) ToAnalysisIntegerParameterOutput() AnalysisIntegerParameterOutput {
	return i.ToAnalysisIntegerParameterOutputWithContext(context.Background())
}

func (i AnalysisIntegerParameterArgs) ToAnalysisIntegerParameterOutputWithContext(ctx context.Context) AnalysisIntegerParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerParameterOutput)
}

// AnalysisIntegerParameterArrayInput is an input type that accepts AnalysisIntegerParameterArray and AnalysisIntegerParameterArrayOutput values.
// You can construct a concrete instance of `AnalysisIntegerParameterArrayInput` via:
//
//	AnalysisIntegerParameterArray{ AnalysisIntegerParameterArgs{...} }
type AnalysisIntegerParameterArrayInput interface {
	pulumi.Input

	ToAnalysisIntegerParameterArrayOutput() AnalysisIntegerParameterArrayOutput
	ToAnalysisIntegerParameterArrayOutputWithContext(context.Context) AnalysisIntegerParameterArrayOutput
}

type AnalysisIntegerParameterArray []AnalysisIntegerParameterInput

func (AnalysisIntegerParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisIntegerParameter)(nil)).Elem()
}

func (i AnalysisIntegerParameterArray) ToAnalysisIntegerParameterArrayOutput() AnalysisIntegerParameterArrayOutput {
	return i.ToAnalysisIntegerParameterArrayOutputWithContext(context.Background())
}

func (i AnalysisIntegerParameterArray) ToAnalysisIntegerParameterArrayOutputWithContext(ctx context.Context) AnalysisIntegerParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerParameterArrayOutput)
}

type AnalysisIntegerParameterOutput struct{ *pulumi.OutputState }

func (AnalysisIntegerParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIntegerParameter)(nil)).Elem()
}

func (o AnalysisIntegerParameterOutput) ToAnalysisIntegerParameterOutput() AnalysisIntegerParameterOutput {
	return o
}

func (o AnalysisIntegerParameterOutput) ToAnalysisIntegerParameterOutputWithContext(ctx context.Context) AnalysisIntegerParameterOutput {
	return o
}

func (o AnalysisIntegerParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisIntegerParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalysisIntegerParameterOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v AnalysisIntegerParameter) []float64 { return v.Values }).(pulumi.Float64ArrayOutput)
}

type AnalysisIntegerParameterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisIntegerParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisIntegerParameter)(nil)).Elem()
}

func (o AnalysisIntegerParameterArrayOutput) ToAnalysisIntegerParameterArrayOutput() AnalysisIntegerParameterArrayOutput {
	return o
}

func (o AnalysisIntegerParameterArrayOutput) ToAnalysisIntegerParameterArrayOutputWithContext(ctx context.Context) AnalysisIntegerParameterArrayOutput {
	return o
}

func (o AnalysisIntegerParameterArrayOutput) Index(i pulumi.IntInput) AnalysisIntegerParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisIntegerParameter {
		return vs[0].([]AnalysisIntegerParameter)[vs[1].(int)]
	}).(AnalysisIntegerParameterOutput)
}

type AnalysisIntegerParameterDeclaration struct {
	DefaultValues           *AnalysisIntegerDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []AnalysisMappedDataSetParameter            `pulumi:"mappedDataSetParameters"`
	Name                    string                                      `pulumi:"name"`
	ParameterValueType      AnalysisParameterValueType                  `pulumi:"parameterValueType"`
	ValueWhenUnset          *AnalysisIntegerValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// AnalysisIntegerParameterDeclarationInput is an input type that accepts AnalysisIntegerParameterDeclarationArgs and AnalysisIntegerParameterDeclarationOutput values.
// You can construct a concrete instance of `AnalysisIntegerParameterDeclarationInput` via:
//
//	AnalysisIntegerParameterDeclarationArgs{...}
type AnalysisIntegerParameterDeclarationInput interface {
	pulumi.Input

	ToAnalysisIntegerParameterDeclarationOutput() AnalysisIntegerParameterDeclarationOutput
	ToAnalysisIntegerParameterDeclarationOutputWithContext(context.Context) AnalysisIntegerParameterDeclarationOutput
}

type AnalysisIntegerParameterDeclarationArgs struct {
	DefaultValues           AnalysisIntegerDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters AnalysisMappedDataSetParameterArrayInput           `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                 `pulumi:"name"`
	ParameterValueType      AnalysisParameterValueTypeInput                    `pulumi:"parameterValueType"`
	ValueWhenUnset          AnalysisIntegerValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (AnalysisIntegerParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIntegerParameterDeclaration)(nil)).Elem()
}

func (i AnalysisIntegerParameterDeclarationArgs) ToAnalysisIntegerParameterDeclarationOutput() AnalysisIntegerParameterDeclarationOutput {
	return i.ToAnalysisIntegerParameterDeclarationOutputWithContext(context.Background())
}

func (i AnalysisIntegerParameterDeclarationArgs) ToAnalysisIntegerParameterDeclarationOutputWithContext(ctx context.Context) AnalysisIntegerParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerParameterDeclarationOutput)
}

func (i AnalysisIntegerParameterDeclarationArgs) ToAnalysisIntegerParameterDeclarationPtrOutput() AnalysisIntegerParameterDeclarationPtrOutput {
	return i.ToAnalysisIntegerParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i AnalysisIntegerParameterDeclarationArgs) ToAnalysisIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisIntegerParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerParameterDeclarationOutput).ToAnalysisIntegerParameterDeclarationPtrOutputWithContext(ctx)
}

// AnalysisIntegerParameterDeclarationPtrInput is an input type that accepts AnalysisIntegerParameterDeclarationArgs, AnalysisIntegerParameterDeclarationPtr and AnalysisIntegerParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `AnalysisIntegerParameterDeclarationPtrInput` via:
//
//	        AnalysisIntegerParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type AnalysisIntegerParameterDeclarationPtrInput interface {
	pulumi.Input

	ToAnalysisIntegerParameterDeclarationPtrOutput() AnalysisIntegerParameterDeclarationPtrOutput
	ToAnalysisIntegerParameterDeclarationPtrOutputWithContext(context.Context) AnalysisIntegerParameterDeclarationPtrOutput
}

type analysisIntegerParameterDeclarationPtrType AnalysisIntegerParameterDeclarationArgs

func AnalysisIntegerParameterDeclarationPtr(v *AnalysisIntegerParameterDeclarationArgs) AnalysisIntegerParameterDeclarationPtrInput {
	return (*analysisIntegerParameterDeclarationPtrType)(v)
}

func (*analysisIntegerParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisIntegerParameterDeclaration)(nil)).Elem()
}

func (i *analysisIntegerParameterDeclarationPtrType) ToAnalysisIntegerParameterDeclarationPtrOutput() AnalysisIntegerParameterDeclarationPtrOutput {
	return i.ToAnalysisIntegerParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *analysisIntegerParameterDeclarationPtrType) ToAnalysisIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisIntegerParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerParameterDeclarationPtrOutput)
}

type AnalysisIntegerParameterDeclarationOutput struct{ *pulumi.OutputState }

func (AnalysisIntegerParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIntegerParameterDeclaration)(nil)).Elem()
}

func (o AnalysisIntegerParameterDeclarationOutput) ToAnalysisIntegerParameterDeclarationOutput() AnalysisIntegerParameterDeclarationOutput {
	return o
}

func (o AnalysisIntegerParameterDeclarationOutput) ToAnalysisIntegerParameterDeclarationOutputWithContext(ctx context.Context) AnalysisIntegerParameterDeclarationOutput {
	return o
}

func (o AnalysisIntegerParameterDeclarationOutput) ToAnalysisIntegerParameterDeclarationPtrOutput() AnalysisIntegerParameterDeclarationPtrOutput {
	return o.ToAnalysisIntegerParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o AnalysisIntegerParameterDeclarationOutput) ToAnalysisIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisIntegerParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisIntegerParameterDeclaration) *AnalysisIntegerParameterDeclaration {
		return &v
	}).(AnalysisIntegerParameterDeclarationPtrOutput)
}

func (o AnalysisIntegerParameterDeclarationOutput) DefaultValues() AnalysisIntegerDefaultValuesPtrOutput {
	return o.ApplyT(func(v AnalysisIntegerParameterDeclaration) *AnalysisIntegerDefaultValues { return v.DefaultValues }).(AnalysisIntegerDefaultValuesPtrOutput)
}

func (o AnalysisIntegerParameterDeclarationOutput) MappedDataSetParameters() AnalysisMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v AnalysisIntegerParameterDeclaration) []AnalysisMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(AnalysisMappedDataSetParameterArrayOutput)
}

func (o AnalysisIntegerParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisIntegerParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalysisIntegerParameterDeclarationOutput) ParameterValueType() AnalysisParameterValueTypeOutput {
	return o.ApplyT(func(v AnalysisIntegerParameterDeclaration) AnalysisParameterValueType { return v.ParameterValueType }).(AnalysisParameterValueTypeOutput)
}

func (o AnalysisIntegerParameterDeclarationOutput) ValueWhenUnset() AnalysisIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisIntegerParameterDeclaration) *AnalysisIntegerValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(AnalysisIntegerValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisIntegerParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisIntegerParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisIntegerParameterDeclaration)(nil)).Elem()
}

func (o AnalysisIntegerParameterDeclarationPtrOutput) ToAnalysisIntegerParameterDeclarationPtrOutput() AnalysisIntegerParameterDeclarationPtrOutput {
	return o
}

func (o AnalysisIntegerParameterDeclarationPtrOutput) ToAnalysisIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisIntegerParameterDeclarationPtrOutput {
	return o
}

func (o AnalysisIntegerParameterDeclarationPtrOutput) Elem() AnalysisIntegerParameterDeclarationOutput {
	return o.ApplyT(func(v *AnalysisIntegerParameterDeclaration) AnalysisIntegerParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret AnalysisIntegerParameterDeclaration
		return ret
	}).(AnalysisIntegerParameterDeclarationOutput)
}

func (o AnalysisIntegerParameterDeclarationPtrOutput) DefaultValues() AnalysisIntegerDefaultValuesPtrOutput {
	return o.ApplyT(func(v *AnalysisIntegerParameterDeclaration) *AnalysisIntegerDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(AnalysisIntegerDefaultValuesPtrOutput)
}

func (o AnalysisIntegerParameterDeclarationPtrOutput) MappedDataSetParameters() AnalysisMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisIntegerParameterDeclaration) []AnalysisMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(AnalysisMappedDataSetParameterArrayOutput)
}

func (o AnalysisIntegerParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisIntegerParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisIntegerParameterDeclarationPtrOutput) ParameterValueType() AnalysisParameterValueTypePtrOutput {
	return o.ApplyT(func(v *AnalysisIntegerParameterDeclaration) *AnalysisParameterValueType {
		if v == nil {
			return nil
		}
		return &v.ParameterValueType
	}).(AnalysisParameterValueTypePtrOutput)
}

func (o AnalysisIntegerParameterDeclarationPtrOutput) ValueWhenUnset() AnalysisIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisIntegerParameterDeclaration) *AnalysisIntegerValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(AnalysisIntegerValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisIntegerValueWhenUnsetConfiguration struct {
	CustomValue          *float64                      `pulumi:"customValue"`
	ValueWhenUnsetOption *AnalysisValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// AnalysisIntegerValueWhenUnsetConfigurationInput is an input type that accepts AnalysisIntegerValueWhenUnsetConfigurationArgs and AnalysisIntegerValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `AnalysisIntegerValueWhenUnsetConfigurationInput` via:
//
//	AnalysisIntegerValueWhenUnsetConfigurationArgs{...}
type AnalysisIntegerValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToAnalysisIntegerValueWhenUnsetConfigurationOutput() AnalysisIntegerValueWhenUnsetConfigurationOutput
	ToAnalysisIntegerValueWhenUnsetConfigurationOutputWithContext(context.Context) AnalysisIntegerValueWhenUnsetConfigurationOutput
}

type AnalysisIntegerValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.Float64PtrInput               `pulumi:"customValue"`
	ValueWhenUnsetOption AnalysisValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (AnalysisIntegerValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i AnalysisIntegerValueWhenUnsetConfigurationArgs) ToAnalysisIntegerValueWhenUnsetConfigurationOutput() AnalysisIntegerValueWhenUnsetConfigurationOutput {
	return i.ToAnalysisIntegerValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i AnalysisIntegerValueWhenUnsetConfigurationArgs) ToAnalysisIntegerValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) AnalysisIntegerValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerValueWhenUnsetConfigurationOutput)
}

func (i AnalysisIntegerValueWhenUnsetConfigurationArgs) ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutput() AnalysisIntegerValueWhenUnsetConfigurationPtrOutput {
	return i.ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisIntegerValueWhenUnsetConfigurationArgs) ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisIntegerValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerValueWhenUnsetConfigurationOutput).ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// AnalysisIntegerValueWhenUnsetConfigurationPtrInput is an input type that accepts AnalysisIntegerValueWhenUnsetConfigurationArgs, AnalysisIntegerValueWhenUnsetConfigurationPtr and AnalysisIntegerValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisIntegerValueWhenUnsetConfigurationPtrInput` via:
//
//	        AnalysisIntegerValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisIntegerValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutput() AnalysisIntegerValueWhenUnsetConfigurationPtrOutput
	ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) AnalysisIntegerValueWhenUnsetConfigurationPtrOutput
}

type analysisIntegerValueWhenUnsetConfigurationPtrType AnalysisIntegerValueWhenUnsetConfigurationArgs

func AnalysisIntegerValueWhenUnsetConfigurationPtr(v *AnalysisIntegerValueWhenUnsetConfigurationArgs) AnalysisIntegerValueWhenUnsetConfigurationPtrInput {
	return (*analysisIntegerValueWhenUnsetConfigurationPtrType)(v)
}

func (*analysisIntegerValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *analysisIntegerValueWhenUnsetConfigurationPtrType) ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutput() AnalysisIntegerValueWhenUnsetConfigurationPtrOutput {
	return i.ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisIntegerValueWhenUnsetConfigurationPtrType) ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisIntegerValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisIntegerValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisIntegerValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisIntegerValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o AnalysisIntegerValueWhenUnsetConfigurationOutput) ToAnalysisIntegerValueWhenUnsetConfigurationOutput() AnalysisIntegerValueWhenUnsetConfigurationOutput {
	return o
}

func (o AnalysisIntegerValueWhenUnsetConfigurationOutput) ToAnalysisIntegerValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) AnalysisIntegerValueWhenUnsetConfigurationOutput {
	return o
}

func (o AnalysisIntegerValueWhenUnsetConfigurationOutput) ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutput() AnalysisIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisIntegerValueWhenUnsetConfigurationOutput) ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisIntegerValueWhenUnsetConfiguration) *AnalysisIntegerValueWhenUnsetConfiguration {
		return &v
	}).(AnalysisIntegerValueWhenUnsetConfigurationPtrOutput)
}

func (o AnalysisIntegerValueWhenUnsetConfigurationOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisIntegerValueWhenUnsetConfiguration) *float64 { return v.CustomValue }).(pulumi.Float64PtrOutput)
}

func (o AnalysisIntegerValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() AnalysisValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v AnalysisIntegerValueWhenUnsetConfiguration) *AnalysisValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(AnalysisValueWhenUnsetOptionPtrOutput)
}

type AnalysisIntegerValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisIntegerValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o AnalysisIntegerValueWhenUnsetConfigurationPtrOutput) ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutput() AnalysisIntegerValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o AnalysisIntegerValueWhenUnsetConfigurationPtrOutput) ToAnalysisIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisIntegerValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o AnalysisIntegerValueWhenUnsetConfigurationPtrOutput) Elem() AnalysisIntegerValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *AnalysisIntegerValueWhenUnsetConfiguration) AnalysisIntegerValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisIntegerValueWhenUnsetConfiguration
		return ret
	}).(AnalysisIntegerValueWhenUnsetConfigurationOutput)
}

func (o AnalysisIntegerValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisIntegerValueWhenUnsetConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisIntegerValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() AnalysisValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisIntegerValueWhenUnsetConfiguration) *AnalysisValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(AnalysisValueWhenUnsetOptionPtrOutput)
}

type AnalysisItemsLimitConfiguration struct {
	ItemsLimit      *float64                 `pulumi:"itemsLimit"`
	OtherCategories *AnalysisOtherCategories `pulumi:"otherCategories"`
}

// AnalysisItemsLimitConfigurationInput is an input type that accepts AnalysisItemsLimitConfigurationArgs and AnalysisItemsLimitConfigurationOutput values.
// You can construct a concrete instance of `AnalysisItemsLimitConfigurationInput` via:
//
//	AnalysisItemsLimitConfigurationArgs{...}
type AnalysisItemsLimitConfigurationInput interface {
	pulumi.Input

	ToAnalysisItemsLimitConfigurationOutput() AnalysisItemsLimitConfigurationOutput
	ToAnalysisItemsLimitConfigurationOutputWithContext(context.Context) AnalysisItemsLimitConfigurationOutput
}

type AnalysisItemsLimitConfigurationArgs struct {
	ItemsLimit      pulumi.Float64PtrInput          `pulumi:"itemsLimit"`
	OtherCategories AnalysisOtherCategoriesPtrInput `pulumi:"otherCategories"`
}

func (AnalysisItemsLimitConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisItemsLimitConfiguration)(nil)).Elem()
}

func (i AnalysisItemsLimitConfigurationArgs) ToAnalysisItemsLimitConfigurationOutput() AnalysisItemsLimitConfigurationOutput {
	return i.ToAnalysisItemsLimitConfigurationOutputWithContext(context.Background())
}

func (i AnalysisItemsLimitConfigurationArgs) ToAnalysisItemsLimitConfigurationOutputWithContext(ctx context.Context) AnalysisItemsLimitConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisItemsLimitConfigurationOutput)
}

func (i AnalysisItemsLimitConfigurationArgs) ToAnalysisItemsLimitConfigurationPtrOutput() AnalysisItemsLimitConfigurationPtrOutput {
	return i.ToAnalysisItemsLimitConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisItemsLimitConfigurationArgs) ToAnalysisItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) AnalysisItemsLimitConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisItemsLimitConfigurationOutput).ToAnalysisItemsLimitConfigurationPtrOutputWithContext(ctx)
}

// AnalysisItemsLimitConfigurationPtrInput is an input type that accepts AnalysisItemsLimitConfigurationArgs, AnalysisItemsLimitConfigurationPtr and AnalysisItemsLimitConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisItemsLimitConfigurationPtrInput` via:
//
//	        AnalysisItemsLimitConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisItemsLimitConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisItemsLimitConfigurationPtrOutput() AnalysisItemsLimitConfigurationPtrOutput
	ToAnalysisItemsLimitConfigurationPtrOutputWithContext(context.Context) AnalysisItemsLimitConfigurationPtrOutput
}

type analysisItemsLimitConfigurationPtrType AnalysisItemsLimitConfigurationArgs

func AnalysisItemsLimitConfigurationPtr(v *AnalysisItemsLimitConfigurationArgs) AnalysisItemsLimitConfigurationPtrInput {
	return (*analysisItemsLimitConfigurationPtrType)(v)
}

func (*analysisItemsLimitConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisItemsLimitConfiguration)(nil)).Elem()
}

func (i *analysisItemsLimitConfigurationPtrType) ToAnalysisItemsLimitConfigurationPtrOutput() AnalysisItemsLimitConfigurationPtrOutput {
	return i.ToAnalysisItemsLimitConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisItemsLimitConfigurationPtrType) ToAnalysisItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) AnalysisItemsLimitConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisItemsLimitConfigurationPtrOutput)
}

type AnalysisItemsLimitConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisItemsLimitConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisItemsLimitConfiguration)(nil)).Elem()
}

func (o AnalysisItemsLimitConfigurationOutput) ToAnalysisItemsLimitConfigurationOutput() AnalysisItemsLimitConfigurationOutput {
	return o
}

func (o AnalysisItemsLimitConfigurationOutput) ToAnalysisItemsLimitConfigurationOutputWithContext(ctx context.Context) AnalysisItemsLimitConfigurationOutput {
	return o
}

func (o AnalysisItemsLimitConfigurationOutput) ToAnalysisItemsLimitConfigurationPtrOutput() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ToAnalysisItemsLimitConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisItemsLimitConfigurationOutput) ToAnalysisItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisItemsLimitConfiguration) *AnalysisItemsLimitConfiguration {
		return &v
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisItemsLimitConfigurationOutput) ItemsLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisItemsLimitConfiguration) *float64 { return v.ItemsLimit }).(pulumi.Float64PtrOutput)
}

func (o AnalysisItemsLimitConfigurationOutput) OtherCategories() AnalysisOtherCategoriesPtrOutput {
	return o.ApplyT(func(v AnalysisItemsLimitConfiguration) *AnalysisOtherCategories { return v.OtherCategories }).(AnalysisOtherCategoriesPtrOutput)
}

type AnalysisItemsLimitConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisItemsLimitConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisItemsLimitConfiguration)(nil)).Elem()
}

func (o AnalysisItemsLimitConfigurationPtrOutput) ToAnalysisItemsLimitConfigurationPtrOutput() AnalysisItemsLimitConfigurationPtrOutput {
	return o
}

func (o AnalysisItemsLimitConfigurationPtrOutput) ToAnalysisItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) AnalysisItemsLimitConfigurationPtrOutput {
	return o
}

func (o AnalysisItemsLimitConfigurationPtrOutput) Elem() AnalysisItemsLimitConfigurationOutput {
	return o.ApplyT(func(v *AnalysisItemsLimitConfiguration) AnalysisItemsLimitConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisItemsLimitConfiguration
		return ret
	}).(AnalysisItemsLimitConfigurationOutput)
}

func (o AnalysisItemsLimitConfigurationPtrOutput) ItemsLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisItemsLimitConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ItemsLimit
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisItemsLimitConfigurationPtrOutput) OtherCategories() AnalysisOtherCategoriesPtrOutput {
	return o.ApplyT(func(v *AnalysisItemsLimitConfiguration) *AnalysisOtherCategories {
		if v == nil {
			return nil
		}
		return v.OtherCategories
	}).(AnalysisOtherCategoriesPtrOutput)
}

type AnalysisKPIConditionalFormatting struct {
	ConditionalFormattingOptions []AnalysisKPIConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// AnalysisKPIConditionalFormattingInput is an input type that accepts AnalysisKPIConditionalFormattingArgs and AnalysisKPIConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisKPIConditionalFormattingInput` via:
//
//	AnalysisKPIConditionalFormattingArgs{...}
type AnalysisKPIConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisKPIConditionalFormattingOutput() AnalysisKPIConditionalFormattingOutput
	ToAnalysisKPIConditionalFormattingOutputWithContext(context.Context) AnalysisKPIConditionalFormattingOutput
}

type AnalysisKPIConditionalFormattingArgs struct {
	ConditionalFormattingOptions AnalysisKPIConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (AnalysisKPIConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIConditionalFormatting)(nil)).Elem()
}

func (i AnalysisKPIConditionalFormattingArgs) ToAnalysisKPIConditionalFormattingOutput() AnalysisKPIConditionalFormattingOutput {
	return i.ToAnalysisKPIConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisKPIConditionalFormattingArgs) ToAnalysisKPIConditionalFormattingOutputWithContext(ctx context.Context) AnalysisKPIConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIConditionalFormattingOutput)
}

func (i AnalysisKPIConditionalFormattingArgs) ToAnalysisKPIConditionalFormattingPtrOutput() AnalysisKPIConditionalFormattingPtrOutput {
	return i.ToAnalysisKPIConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisKPIConditionalFormattingArgs) ToAnalysisKPIConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIConditionalFormattingOutput).ToAnalysisKPIConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisKPIConditionalFormattingPtrInput is an input type that accepts AnalysisKPIConditionalFormattingArgs, AnalysisKPIConditionalFormattingPtr and AnalysisKPIConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisKPIConditionalFormattingPtrInput` via:
//
//	        AnalysisKPIConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisKPIConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisKPIConditionalFormattingPtrOutput() AnalysisKPIConditionalFormattingPtrOutput
	ToAnalysisKPIConditionalFormattingPtrOutputWithContext(context.Context) AnalysisKPIConditionalFormattingPtrOutput
}

type analysisKPIConditionalFormattingPtrType AnalysisKPIConditionalFormattingArgs

func AnalysisKPIConditionalFormattingPtr(v *AnalysisKPIConditionalFormattingArgs) AnalysisKPIConditionalFormattingPtrInput {
	return (*analysisKPIConditionalFormattingPtrType)(v)
}

func (*analysisKPIConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIConditionalFormatting)(nil)).Elem()
}

func (i *analysisKPIConditionalFormattingPtrType) ToAnalysisKPIConditionalFormattingPtrOutput() AnalysisKPIConditionalFormattingPtrOutput {
	return i.ToAnalysisKPIConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisKPIConditionalFormattingPtrType) ToAnalysisKPIConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIConditionalFormattingPtrOutput)
}

type AnalysisKPIConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisKPIConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIConditionalFormatting)(nil)).Elem()
}

func (o AnalysisKPIConditionalFormattingOutput) ToAnalysisKPIConditionalFormattingOutput() AnalysisKPIConditionalFormattingOutput {
	return o
}

func (o AnalysisKPIConditionalFormattingOutput) ToAnalysisKPIConditionalFormattingOutputWithContext(ctx context.Context) AnalysisKPIConditionalFormattingOutput {
	return o
}

func (o AnalysisKPIConditionalFormattingOutput) ToAnalysisKPIConditionalFormattingPtrOutput() AnalysisKPIConditionalFormattingPtrOutput {
	return o.ToAnalysisKPIConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisKPIConditionalFormattingOutput) ToAnalysisKPIConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisKPIConditionalFormatting) *AnalysisKPIConditionalFormatting {
		return &v
	}).(AnalysisKPIConditionalFormattingPtrOutput)
}

func (o AnalysisKPIConditionalFormattingOutput) ConditionalFormattingOptions() AnalysisKPIConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v AnalysisKPIConditionalFormatting) []AnalysisKPIConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(AnalysisKPIConditionalFormattingOptionArrayOutput)
}

type AnalysisKPIConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisKPIConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIConditionalFormatting)(nil)).Elem()
}

func (o AnalysisKPIConditionalFormattingPtrOutput) ToAnalysisKPIConditionalFormattingPtrOutput() AnalysisKPIConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisKPIConditionalFormattingPtrOutput) ToAnalysisKPIConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisKPIConditionalFormattingPtrOutput) Elem() AnalysisKPIConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisKPIConditionalFormatting) AnalysisKPIConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisKPIConditionalFormatting
		return ret
	}).(AnalysisKPIConditionalFormattingOutput)
}

func (o AnalysisKPIConditionalFormattingPtrOutput) ConditionalFormattingOptions() AnalysisKPIConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *AnalysisKPIConditionalFormatting) []AnalysisKPIConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(AnalysisKPIConditionalFormattingOptionArrayOutput)
}

type AnalysisKPIConditionalFormattingOption struct {
	PrimaryValue *AnalysisKPIPrimaryValueConditionalFormatting `pulumi:"primaryValue"`
	ProgressBar  *AnalysisKPIProgressBarConditionalFormatting  `pulumi:"progressBar"`
}

// AnalysisKPIConditionalFormattingOptionInput is an input type that accepts AnalysisKPIConditionalFormattingOptionArgs and AnalysisKPIConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `AnalysisKPIConditionalFormattingOptionInput` via:
//
//	AnalysisKPIConditionalFormattingOptionArgs{...}
type AnalysisKPIConditionalFormattingOptionInput interface {
	pulumi.Input

	ToAnalysisKPIConditionalFormattingOptionOutput() AnalysisKPIConditionalFormattingOptionOutput
	ToAnalysisKPIConditionalFormattingOptionOutputWithContext(context.Context) AnalysisKPIConditionalFormattingOptionOutput
}

type AnalysisKPIConditionalFormattingOptionArgs struct {
	PrimaryValue AnalysisKPIPrimaryValueConditionalFormattingPtrInput `pulumi:"primaryValue"`
	ProgressBar  AnalysisKPIProgressBarConditionalFormattingPtrInput  `pulumi:"progressBar"`
}

func (AnalysisKPIConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIConditionalFormattingOption)(nil)).Elem()
}

func (i AnalysisKPIConditionalFormattingOptionArgs) ToAnalysisKPIConditionalFormattingOptionOutput() AnalysisKPIConditionalFormattingOptionOutput {
	return i.ToAnalysisKPIConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i AnalysisKPIConditionalFormattingOptionArgs) ToAnalysisKPIConditionalFormattingOptionOutputWithContext(ctx context.Context) AnalysisKPIConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIConditionalFormattingOptionOutput)
}

// AnalysisKPIConditionalFormattingOptionArrayInput is an input type that accepts AnalysisKPIConditionalFormattingOptionArray and AnalysisKPIConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `AnalysisKPIConditionalFormattingOptionArrayInput` via:
//
//	AnalysisKPIConditionalFormattingOptionArray{ AnalysisKPIConditionalFormattingOptionArgs{...} }
type AnalysisKPIConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToAnalysisKPIConditionalFormattingOptionArrayOutput() AnalysisKPIConditionalFormattingOptionArrayOutput
	ToAnalysisKPIConditionalFormattingOptionArrayOutputWithContext(context.Context) AnalysisKPIConditionalFormattingOptionArrayOutput
}

type AnalysisKPIConditionalFormattingOptionArray []AnalysisKPIConditionalFormattingOptionInput

func (AnalysisKPIConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisKPIConditionalFormattingOption)(nil)).Elem()
}

func (i AnalysisKPIConditionalFormattingOptionArray) ToAnalysisKPIConditionalFormattingOptionArrayOutput() AnalysisKPIConditionalFormattingOptionArrayOutput {
	return i.ToAnalysisKPIConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i AnalysisKPIConditionalFormattingOptionArray) ToAnalysisKPIConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) AnalysisKPIConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIConditionalFormattingOptionArrayOutput)
}

type AnalysisKPIConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (AnalysisKPIConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIConditionalFormattingOption)(nil)).Elem()
}

func (o AnalysisKPIConditionalFormattingOptionOutput) ToAnalysisKPIConditionalFormattingOptionOutput() AnalysisKPIConditionalFormattingOptionOutput {
	return o
}

func (o AnalysisKPIConditionalFormattingOptionOutput) ToAnalysisKPIConditionalFormattingOptionOutputWithContext(ctx context.Context) AnalysisKPIConditionalFormattingOptionOutput {
	return o
}

func (o AnalysisKPIConditionalFormattingOptionOutput) PrimaryValue() AnalysisKPIPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisKPIConditionalFormattingOption) *AnalysisKPIPrimaryValueConditionalFormatting {
		return v.PrimaryValue
	}).(AnalysisKPIPrimaryValueConditionalFormattingPtrOutput)
}

func (o AnalysisKPIConditionalFormattingOptionOutput) ProgressBar() AnalysisKPIProgressBarConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisKPIConditionalFormattingOption) *AnalysisKPIProgressBarConditionalFormatting {
		return v.ProgressBar
	}).(AnalysisKPIProgressBarConditionalFormattingPtrOutput)
}

type AnalysisKPIConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisKPIConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisKPIConditionalFormattingOption)(nil)).Elem()
}

func (o AnalysisKPIConditionalFormattingOptionArrayOutput) ToAnalysisKPIConditionalFormattingOptionArrayOutput() AnalysisKPIConditionalFormattingOptionArrayOutput {
	return o
}

func (o AnalysisKPIConditionalFormattingOptionArrayOutput) ToAnalysisKPIConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) AnalysisKPIConditionalFormattingOptionArrayOutput {
	return o
}

func (o AnalysisKPIConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) AnalysisKPIConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisKPIConditionalFormattingOption {
		return vs[0].([]AnalysisKPIConditionalFormattingOption)[vs[1].(int)]
	}).(AnalysisKPIConditionalFormattingOptionOutput)
}

type AnalysisKPIConfiguration struct {
	FieldWells        *AnalysisKPIFieldWells        `pulumi:"fieldWells"`
	KPIOptions        *AnalysisKPIOptions           `pulumi:"kPIOptions"`
	SortConfiguration *AnalysisKPISortConfiguration `pulumi:"sortConfiguration"`
}

// AnalysisKPIConfigurationInput is an input type that accepts AnalysisKPIConfigurationArgs and AnalysisKPIConfigurationOutput values.
// You can construct a concrete instance of `AnalysisKPIConfigurationInput` via:
//
//	AnalysisKPIConfigurationArgs{...}
type AnalysisKPIConfigurationInput interface {
	pulumi.Input

	ToAnalysisKPIConfigurationOutput() AnalysisKPIConfigurationOutput
	ToAnalysisKPIConfigurationOutputWithContext(context.Context) AnalysisKPIConfigurationOutput
}

type AnalysisKPIConfigurationArgs struct {
	FieldWells        AnalysisKPIFieldWellsPtrInput        `pulumi:"fieldWells"`
	KPIOptions        AnalysisKPIOptionsPtrInput           `pulumi:"kPIOptions"`
	SortConfiguration AnalysisKPISortConfigurationPtrInput `pulumi:"sortConfiguration"`
}

func (AnalysisKPIConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIConfiguration)(nil)).Elem()
}

func (i AnalysisKPIConfigurationArgs) ToAnalysisKPIConfigurationOutput() AnalysisKPIConfigurationOutput {
	return i.ToAnalysisKPIConfigurationOutputWithContext(context.Background())
}

func (i AnalysisKPIConfigurationArgs) ToAnalysisKPIConfigurationOutputWithContext(ctx context.Context) AnalysisKPIConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIConfigurationOutput)
}

func (i AnalysisKPIConfigurationArgs) ToAnalysisKPIConfigurationPtrOutput() AnalysisKPIConfigurationPtrOutput {
	return i.ToAnalysisKPIConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisKPIConfigurationArgs) ToAnalysisKPIConfigurationPtrOutputWithContext(ctx context.Context) AnalysisKPIConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIConfigurationOutput).ToAnalysisKPIConfigurationPtrOutputWithContext(ctx)
}

// AnalysisKPIConfigurationPtrInput is an input type that accepts AnalysisKPIConfigurationArgs, AnalysisKPIConfigurationPtr and AnalysisKPIConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisKPIConfigurationPtrInput` via:
//
//	        AnalysisKPIConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisKPIConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisKPIConfigurationPtrOutput() AnalysisKPIConfigurationPtrOutput
	ToAnalysisKPIConfigurationPtrOutputWithContext(context.Context) AnalysisKPIConfigurationPtrOutput
}

type analysisKPIConfigurationPtrType AnalysisKPIConfigurationArgs

func AnalysisKPIConfigurationPtr(v *AnalysisKPIConfigurationArgs) AnalysisKPIConfigurationPtrInput {
	return (*analysisKPIConfigurationPtrType)(v)
}

func (*analysisKPIConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIConfiguration)(nil)).Elem()
}

func (i *analysisKPIConfigurationPtrType) ToAnalysisKPIConfigurationPtrOutput() AnalysisKPIConfigurationPtrOutput {
	return i.ToAnalysisKPIConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisKPIConfigurationPtrType) ToAnalysisKPIConfigurationPtrOutputWithContext(ctx context.Context) AnalysisKPIConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIConfigurationPtrOutput)
}

type AnalysisKPIConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisKPIConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIConfiguration)(nil)).Elem()
}

func (o AnalysisKPIConfigurationOutput) ToAnalysisKPIConfigurationOutput() AnalysisKPIConfigurationOutput {
	return o
}

func (o AnalysisKPIConfigurationOutput) ToAnalysisKPIConfigurationOutputWithContext(ctx context.Context) AnalysisKPIConfigurationOutput {
	return o
}

func (o AnalysisKPIConfigurationOutput) ToAnalysisKPIConfigurationPtrOutput() AnalysisKPIConfigurationPtrOutput {
	return o.ToAnalysisKPIConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisKPIConfigurationOutput) ToAnalysisKPIConfigurationPtrOutputWithContext(ctx context.Context) AnalysisKPIConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisKPIConfiguration) *AnalysisKPIConfiguration {
		return &v
	}).(AnalysisKPIConfigurationPtrOutput)
}

func (o AnalysisKPIConfigurationOutput) FieldWells() AnalysisKPIFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisKPIConfiguration) *AnalysisKPIFieldWells { return v.FieldWells }).(AnalysisKPIFieldWellsPtrOutput)
}

func (o AnalysisKPIConfigurationOutput) KPIOptions() AnalysisKPIOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisKPIConfiguration) *AnalysisKPIOptions { return v.KPIOptions }).(AnalysisKPIOptionsPtrOutput)
}

func (o AnalysisKPIConfigurationOutput) SortConfiguration() AnalysisKPISortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisKPIConfiguration) *AnalysisKPISortConfiguration { return v.SortConfiguration }).(AnalysisKPISortConfigurationPtrOutput)
}

type AnalysisKPIConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisKPIConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIConfiguration)(nil)).Elem()
}

func (o AnalysisKPIConfigurationPtrOutput) ToAnalysisKPIConfigurationPtrOutput() AnalysisKPIConfigurationPtrOutput {
	return o
}

func (o AnalysisKPIConfigurationPtrOutput) ToAnalysisKPIConfigurationPtrOutputWithContext(ctx context.Context) AnalysisKPIConfigurationPtrOutput {
	return o
}

func (o AnalysisKPIConfigurationPtrOutput) Elem() AnalysisKPIConfigurationOutput {
	return o.ApplyT(func(v *AnalysisKPIConfiguration) AnalysisKPIConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisKPIConfiguration
		return ret
	}).(AnalysisKPIConfigurationOutput)
}

func (o AnalysisKPIConfigurationPtrOutput) FieldWells() AnalysisKPIFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIConfiguration) *AnalysisKPIFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisKPIFieldWellsPtrOutput)
}

func (o AnalysisKPIConfigurationPtrOutput) KPIOptions() AnalysisKPIOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIConfiguration) *AnalysisKPIOptions {
		if v == nil {
			return nil
		}
		return v.KPIOptions
	}).(AnalysisKPIOptionsPtrOutput)
}

func (o AnalysisKPIConfigurationPtrOutput) SortConfiguration() AnalysisKPISortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIConfiguration) *AnalysisKPISortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisKPISortConfigurationPtrOutput)
}

type AnalysisKPIFieldWells struct {
	TargetValues []AnalysisMeasureField   `pulumi:"targetValues"`
	TrendGroups  []AnalysisDimensionField `pulumi:"trendGroups"`
	Values       []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisKPIFieldWellsInput is an input type that accepts AnalysisKPIFieldWellsArgs and AnalysisKPIFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisKPIFieldWellsInput` via:
//
//	AnalysisKPIFieldWellsArgs{...}
type AnalysisKPIFieldWellsInput interface {
	pulumi.Input

	ToAnalysisKPIFieldWellsOutput() AnalysisKPIFieldWellsOutput
	ToAnalysisKPIFieldWellsOutputWithContext(context.Context) AnalysisKPIFieldWellsOutput
}

type AnalysisKPIFieldWellsArgs struct {
	TargetValues AnalysisMeasureFieldArrayInput   `pulumi:"targetValues"`
	TrendGroups  AnalysisDimensionFieldArrayInput `pulumi:"trendGroups"`
	Values       AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisKPIFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIFieldWells)(nil)).Elem()
}

func (i AnalysisKPIFieldWellsArgs) ToAnalysisKPIFieldWellsOutput() AnalysisKPIFieldWellsOutput {
	return i.ToAnalysisKPIFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisKPIFieldWellsArgs) ToAnalysisKPIFieldWellsOutputWithContext(ctx context.Context) AnalysisKPIFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIFieldWellsOutput)
}

func (i AnalysisKPIFieldWellsArgs) ToAnalysisKPIFieldWellsPtrOutput() AnalysisKPIFieldWellsPtrOutput {
	return i.ToAnalysisKPIFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisKPIFieldWellsArgs) ToAnalysisKPIFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisKPIFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIFieldWellsOutput).ToAnalysisKPIFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisKPIFieldWellsPtrInput is an input type that accepts AnalysisKPIFieldWellsArgs, AnalysisKPIFieldWellsPtr and AnalysisKPIFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisKPIFieldWellsPtrInput` via:
//
//	        AnalysisKPIFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisKPIFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisKPIFieldWellsPtrOutput() AnalysisKPIFieldWellsPtrOutput
	ToAnalysisKPIFieldWellsPtrOutputWithContext(context.Context) AnalysisKPIFieldWellsPtrOutput
}

type analysisKPIFieldWellsPtrType AnalysisKPIFieldWellsArgs

func AnalysisKPIFieldWellsPtr(v *AnalysisKPIFieldWellsArgs) AnalysisKPIFieldWellsPtrInput {
	return (*analysisKPIFieldWellsPtrType)(v)
}

func (*analysisKPIFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIFieldWells)(nil)).Elem()
}

func (i *analysisKPIFieldWellsPtrType) ToAnalysisKPIFieldWellsPtrOutput() AnalysisKPIFieldWellsPtrOutput {
	return i.ToAnalysisKPIFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisKPIFieldWellsPtrType) ToAnalysisKPIFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisKPIFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIFieldWellsPtrOutput)
}

type AnalysisKPIFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisKPIFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIFieldWells)(nil)).Elem()
}

func (o AnalysisKPIFieldWellsOutput) ToAnalysisKPIFieldWellsOutput() AnalysisKPIFieldWellsOutput {
	return o
}

func (o AnalysisKPIFieldWellsOutput) ToAnalysisKPIFieldWellsOutputWithContext(ctx context.Context) AnalysisKPIFieldWellsOutput {
	return o
}

func (o AnalysisKPIFieldWellsOutput) ToAnalysisKPIFieldWellsPtrOutput() AnalysisKPIFieldWellsPtrOutput {
	return o.ToAnalysisKPIFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisKPIFieldWellsOutput) ToAnalysisKPIFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisKPIFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisKPIFieldWells) *AnalysisKPIFieldWells {
		return &v
	}).(AnalysisKPIFieldWellsPtrOutput)
}

func (o AnalysisKPIFieldWellsOutput) TargetValues() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisKPIFieldWells) []AnalysisMeasureField { return v.TargetValues }).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisKPIFieldWellsOutput) TrendGroups() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisKPIFieldWells) []AnalysisDimensionField { return v.TrendGroups }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisKPIFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisKPIFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisKPIFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisKPIFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIFieldWells)(nil)).Elem()
}

func (o AnalysisKPIFieldWellsPtrOutput) ToAnalysisKPIFieldWellsPtrOutput() AnalysisKPIFieldWellsPtrOutput {
	return o
}

func (o AnalysisKPIFieldWellsPtrOutput) ToAnalysisKPIFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisKPIFieldWellsPtrOutput {
	return o
}

func (o AnalysisKPIFieldWellsPtrOutput) Elem() AnalysisKPIFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisKPIFieldWells) AnalysisKPIFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisKPIFieldWells
		return ret
	}).(AnalysisKPIFieldWellsOutput)
}

func (o AnalysisKPIFieldWellsPtrOutput) TargetValues() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisKPIFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.TargetValues
	}).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisKPIFieldWellsPtrOutput) TrendGroups() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisKPIFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.TrendGroups
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisKPIFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisKPIFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisKPIOptions struct {
	Comparison                      *AnalysisComparisonConfiguration `pulumi:"comparison"`
	PrimaryValueDisplayType         *AnalysisPrimaryValueDisplayType `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration   *AnalysisFontConfiguration       `pulumi:"primaryValueFontConfiguration"`
	ProgressBar                     *AnalysisProgressBarOptions      `pulumi:"progressBar"`
	SecondaryValue                  *AnalysisSecondaryValueOptions   `pulumi:"secondaryValue"`
	SecondaryValueFontConfiguration *AnalysisFontConfiguration       `pulumi:"secondaryValueFontConfiguration"`
	TrendArrows                     *AnalysisTrendArrowOptions       `pulumi:"trendArrows"`
}

// AnalysisKPIOptionsInput is an input type that accepts AnalysisKPIOptionsArgs and AnalysisKPIOptionsOutput values.
// You can construct a concrete instance of `AnalysisKPIOptionsInput` via:
//
//	AnalysisKPIOptionsArgs{...}
type AnalysisKPIOptionsInput interface {
	pulumi.Input

	ToAnalysisKPIOptionsOutput() AnalysisKPIOptionsOutput
	ToAnalysisKPIOptionsOutputWithContext(context.Context) AnalysisKPIOptionsOutput
}

type AnalysisKPIOptionsArgs struct {
	Comparison                      AnalysisComparisonConfigurationPtrInput `pulumi:"comparison"`
	PrimaryValueDisplayType         AnalysisPrimaryValueDisplayTypePtrInput `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration   AnalysisFontConfigurationPtrInput       `pulumi:"primaryValueFontConfiguration"`
	ProgressBar                     AnalysisProgressBarOptionsPtrInput      `pulumi:"progressBar"`
	SecondaryValue                  AnalysisSecondaryValueOptionsPtrInput   `pulumi:"secondaryValue"`
	SecondaryValueFontConfiguration AnalysisFontConfigurationPtrInput       `pulumi:"secondaryValueFontConfiguration"`
	TrendArrows                     AnalysisTrendArrowOptionsPtrInput       `pulumi:"trendArrows"`
}

func (AnalysisKPIOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIOptions)(nil)).Elem()
}

func (i AnalysisKPIOptionsArgs) ToAnalysisKPIOptionsOutput() AnalysisKPIOptionsOutput {
	return i.ToAnalysisKPIOptionsOutputWithContext(context.Background())
}

func (i AnalysisKPIOptionsArgs) ToAnalysisKPIOptionsOutputWithContext(ctx context.Context) AnalysisKPIOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIOptionsOutput)
}

func (i AnalysisKPIOptionsArgs) ToAnalysisKPIOptionsPtrOutput() AnalysisKPIOptionsPtrOutput {
	return i.ToAnalysisKPIOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisKPIOptionsArgs) ToAnalysisKPIOptionsPtrOutputWithContext(ctx context.Context) AnalysisKPIOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIOptionsOutput).ToAnalysisKPIOptionsPtrOutputWithContext(ctx)
}

// AnalysisKPIOptionsPtrInput is an input type that accepts AnalysisKPIOptionsArgs, AnalysisKPIOptionsPtr and AnalysisKPIOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisKPIOptionsPtrInput` via:
//
//	        AnalysisKPIOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisKPIOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisKPIOptionsPtrOutput() AnalysisKPIOptionsPtrOutput
	ToAnalysisKPIOptionsPtrOutputWithContext(context.Context) AnalysisKPIOptionsPtrOutput
}

type analysisKPIOptionsPtrType AnalysisKPIOptionsArgs

func AnalysisKPIOptionsPtr(v *AnalysisKPIOptionsArgs) AnalysisKPIOptionsPtrInput {
	return (*analysisKPIOptionsPtrType)(v)
}

func (*analysisKPIOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIOptions)(nil)).Elem()
}

func (i *analysisKPIOptionsPtrType) ToAnalysisKPIOptionsPtrOutput() AnalysisKPIOptionsPtrOutput {
	return i.ToAnalysisKPIOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisKPIOptionsPtrType) ToAnalysisKPIOptionsPtrOutputWithContext(ctx context.Context) AnalysisKPIOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIOptionsPtrOutput)
}

type AnalysisKPIOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisKPIOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIOptions)(nil)).Elem()
}

func (o AnalysisKPIOptionsOutput) ToAnalysisKPIOptionsOutput() AnalysisKPIOptionsOutput {
	return o
}

func (o AnalysisKPIOptionsOutput) ToAnalysisKPIOptionsOutputWithContext(ctx context.Context) AnalysisKPIOptionsOutput {
	return o
}

func (o AnalysisKPIOptionsOutput) ToAnalysisKPIOptionsPtrOutput() AnalysisKPIOptionsPtrOutput {
	return o.ToAnalysisKPIOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisKPIOptionsOutput) ToAnalysisKPIOptionsPtrOutputWithContext(ctx context.Context) AnalysisKPIOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisKPIOptions) *AnalysisKPIOptions {
		return &v
	}).(AnalysisKPIOptionsPtrOutput)
}

func (o AnalysisKPIOptionsOutput) Comparison() AnalysisComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisKPIOptions) *AnalysisComparisonConfiguration { return v.Comparison }).(AnalysisComparisonConfigurationPtrOutput)
}

func (o AnalysisKPIOptionsOutput) PrimaryValueDisplayType() AnalysisPrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v AnalysisKPIOptions) *AnalysisPrimaryValueDisplayType { return v.PrimaryValueDisplayType }).(AnalysisPrimaryValueDisplayTypePtrOutput)
}

func (o AnalysisKPIOptionsOutput) PrimaryValueFontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisKPIOptions) *AnalysisFontConfiguration { return v.PrimaryValueFontConfiguration }).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisKPIOptionsOutput) ProgressBar() AnalysisProgressBarOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisKPIOptions) *AnalysisProgressBarOptions { return v.ProgressBar }).(AnalysisProgressBarOptionsPtrOutput)
}

func (o AnalysisKPIOptionsOutput) SecondaryValue() AnalysisSecondaryValueOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisKPIOptions) *AnalysisSecondaryValueOptions { return v.SecondaryValue }).(AnalysisSecondaryValueOptionsPtrOutput)
}

func (o AnalysisKPIOptionsOutput) SecondaryValueFontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisKPIOptions) *AnalysisFontConfiguration { return v.SecondaryValueFontConfiguration }).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisKPIOptionsOutput) TrendArrows() AnalysisTrendArrowOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisKPIOptions) *AnalysisTrendArrowOptions { return v.TrendArrows }).(AnalysisTrendArrowOptionsPtrOutput)
}

type AnalysisKPIOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisKPIOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIOptions)(nil)).Elem()
}

func (o AnalysisKPIOptionsPtrOutput) ToAnalysisKPIOptionsPtrOutput() AnalysisKPIOptionsPtrOutput {
	return o
}

func (o AnalysisKPIOptionsPtrOutput) ToAnalysisKPIOptionsPtrOutputWithContext(ctx context.Context) AnalysisKPIOptionsPtrOutput {
	return o
}

func (o AnalysisKPIOptionsPtrOutput) Elem() AnalysisKPIOptionsOutput {
	return o.ApplyT(func(v *AnalysisKPIOptions) AnalysisKPIOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisKPIOptions
		return ret
	}).(AnalysisKPIOptionsOutput)
}

func (o AnalysisKPIOptionsPtrOutput) Comparison() AnalysisComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIOptions) *AnalysisComparisonConfiguration {
		if v == nil {
			return nil
		}
		return v.Comparison
	}).(AnalysisComparisonConfigurationPtrOutput)
}

func (o AnalysisKPIOptionsPtrOutput) PrimaryValueDisplayType() AnalysisPrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v *AnalysisKPIOptions) *AnalysisPrimaryValueDisplayType {
		if v == nil {
			return nil
		}
		return v.PrimaryValueDisplayType
	}).(AnalysisPrimaryValueDisplayTypePtrOutput)
}

func (o AnalysisKPIOptionsPtrOutput) PrimaryValueFontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIOptions) *AnalysisFontConfiguration {
		if v == nil {
			return nil
		}
		return v.PrimaryValueFontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisKPIOptionsPtrOutput) ProgressBar() AnalysisProgressBarOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIOptions) *AnalysisProgressBarOptions {
		if v == nil {
			return nil
		}
		return v.ProgressBar
	}).(AnalysisProgressBarOptionsPtrOutput)
}

func (o AnalysisKPIOptionsPtrOutput) SecondaryValue() AnalysisSecondaryValueOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIOptions) *AnalysisSecondaryValueOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryValue
	}).(AnalysisSecondaryValueOptionsPtrOutput)
}

func (o AnalysisKPIOptionsPtrOutput) SecondaryValueFontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIOptions) *AnalysisFontConfiguration {
		if v == nil {
			return nil
		}
		return v.SecondaryValueFontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisKPIOptionsPtrOutput) TrendArrows() AnalysisTrendArrowOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIOptions) *AnalysisTrendArrowOptions {
		if v == nil {
			return nil
		}
		return v.TrendArrows
	}).(AnalysisTrendArrowOptionsPtrOutput)
}

type AnalysisKPIPrimaryValueConditionalFormatting struct {
	Icon      *AnalysisConditionalFormattingIcon  `pulumi:"icon"`
	TextColor *AnalysisConditionalFormattingColor `pulumi:"textColor"`
}

// AnalysisKPIPrimaryValueConditionalFormattingInput is an input type that accepts AnalysisKPIPrimaryValueConditionalFormattingArgs and AnalysisKPIPrimaryValueConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisKPIPrimaryValueConditionalFormattingInput` via:
//
//	AnalysisKPIPrimaryValueConditionalFormattingArgs{...}
type AnalysisKPIPrimaryValueConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisKPIPrimaryValueConditionalFormattingOutput() AnalysisKPIPrimaryValueConditionalFormattingOutput
	ToAnalysisKPIPrimaryValueConditionalFormattingOutputWithContext(context.Context) AnalysisKPIPrimaryValueConditionalFormattingOutput
}

type AnalysisKPIPrimaryValueConditionalFormattingArgs struct {
	Icon      AnalysisConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor AnalysisConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (AnalysisKPIPrimaryValueConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i AnalysisKPIPrimaryValueConditionalFormattingArgs) ToAnalysisKPIPrimaryValueConditionalFormattingOutput() AnalysisKPIPrimaryValueConditionalFormattingOutput {
	return i.ToAnalysisKPIPrimaryValueConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisKPIPrimaryValueConditionalFormattingArgs) ToAnalysisKPIPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) AnalysisKPIPrimaryValueConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIPrimaryValueConditionalFormattingOutput)
}

func (i AnalysisKPIPrimaryValueConditionalFormattingArgs) ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutput() AnalysisKPIPrimaryValueConditionalFormattingPtrOutput {
	return i.ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisKPIPrimaryValueConditionalFormattingArgs) ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIPrimaryValueConditionalFormattingOutput).ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisKPIPrimaryValueConditionalFormattingPtrInput is an input type that accepts AnalysisKPIPrimaryValueConditionalFormattingArgs, AnalysisKPIPrimaryValueConditionalFormattingPtr and AnalysisKPIPrimaryValueConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisKPIPrimaryValueConditionalFormattingPtrInput` via:
//
//	        AnalysisKPIPrimaryValueConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisKPIPrimaryValueConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutput() AnalysisKPIPrimaryValueConditionalFormattingPtrOutput
	ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutputWithContext(context.Context) AnalysisKPIPrimaryValueConditionalFormattingPtrOutput
}

type analysisKPIPrimaryValueConditionalFormattingPtrType AnalysisKPIPrimaryValueConditionalFormattingArgs

func AnalysisKPIPrimaryValueConditionalFormattingPtr(v *AnalysisKPIPrimaryValueConditionalFormattingArgs) AnalysisKPIPrimaryValueConditionalFormattingPtrInput {
	return (*analysisKPIPrimaryValueConditionalFormattingPtrType)(v)
}

func (*analysisKPIPrimaryValueConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i *analysisKPIPrimaryValueConditionalFormattingPtrType) ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutput() AnalysisKPIPrimaryValueConditionalFormattingPtrOutput {
	return i.ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisKPIPrimaryValueConditionalFormattingPtrType) ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIPrimaryValueConditionalFormattingPtrOutput)
}

type AnalysisKPIPrimaryValueConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisKPIPrimaryValueConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o AnalysisKPIPrimaryValueConditionalFormattingOutput) ToAnalysisKPIPrimaryValueConditionalFormattingOutput() AnalysisKPIPrimaryValueConditionalFormattingOutput {
	return o
}

func (o AnalysisKPIPrimaryValueConditionalFormattingOutput) ToAnalysisKPIPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) AnalysisKPIPrimaryValueConditionalFormattingOutput {
	return o
}

func (o AnalysisKPIPrimaryValueConditionalFormattingOutput) ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutput() AnalysisKPIPrimaryValueConditionalFormattingPtrOutput {
	return o.ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisKPIPrimaryValueConditionalFormattingOutput) ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisKPIPrimaryValueConditionalFormatting) *AnalysisKPIPrimaryValueConditionalFormatting {
		return &v
	}).(AnalysisKPIPrimaryValueConditionalFormattingPtrOutput)
}

func (o AnalysisKPIPrimaryValueConditionalFormattingOutput) Icon() AnalysisConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v AnalysisKPIPrimaryValueConditionalFormatting) *AnalysisConditionalFormattingIcon { return v.Icon }).(AnalysisConditionalFormattingIconPtrOutput)
}

func (o AnalysisKPIPrimaryValueConditionalFormattingOutput) TextColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v AnalysisKPIPrimaryValueConditionalFormatting) *AnalysisConditionalFormattingColor {
		return v.TextColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisKPIPrimaryValueConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisKPIPrimaryValueConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o AnalysisKPIPrimaryValueConditionalFormattingPtrOutput) ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutput() AnalysisKPIPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisKPIPrimaryValueConditionalFormattingPtrOutput) ToAnalysisKPIPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisKPIPrimaryValueConditionalFormattingPtrOutput) Elem() AnalysisKPIPrimaryValueConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisKPIPrimaryValueConditionalFormatting) AnalysisKPIPrimaryValueConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisKPIPrimaryValueConditionalFormatting
		return ret
	}).(AnalysisKPIPrimaryValueConditionalFormattingOutput)
}

func (o AnalysisKPIPrimaryValueConditionalFormattingPtrOutput) Icon() AnalysisConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIPrimaryValueConditionalFormatting) *AnalysisConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(AnalysisConditionalFormattingIconPtrOutput)
}

func (o AnalysisKPIPrimaryValueConditionalFormattingPtrOutput) TextColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIPrimaryValueConditionalFormatting) *AnalysisConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisKPIProgressBarConditionalFormatting struct {
	ForegroundColor *AnalysisConditionalFormattingColor `pulumi:"foregroundColor"`
}

// AnalysisKPIProgressBarConditionalFormattingInput is an input type that accepts AnalysisKPIProgressBarConditionalFormattingArgs and AnalysisKPIProgressBarConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisKPIProgressBarConditionalFormattingInput` via:
//
//	AnalysisKPIProgressBarConditionalFormattingArgs{...}
type AnalysisKPIProgressBarConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisKPIProgressBarConditionalFormattingOutput() AnalysisKPIProgressBarConditionalFormattingOutput
	ToAnalysisKPIProgressBarConditionalFormattingOutputWithContext(context.Context) AnalysisKPIProgressBarConditionalFormattingOutput
}

type AnalysisKPIProgressBarConditionalFormattingArgs struct {
	ForegroundColor AnalysisConditionalFormattingColorPtrInput `pulumi:"foregroundColor"`
}

func (AnalysisKPIProgressBarConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIProgressBarConditionalFormatting)(nil)).Elem()
}

func (i AnalysisKPIProgressBarConditionalFormattingArgs) ToAnalysisKPIProgressBarConditionalFormattingOutput() AnalysisKPIProgressBarConditionalFormattingOutput {
	return i.ToAnalysisKPIProgressBarConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisKPIProgressBarConditionalFormattingArgs) ToAnalysisKPIProgressBarConditionalFormattingOutputWithContext(ctx context.Context) AnalysisKPIProgressBarConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIProgressBarConditionalFormattingOutput)
}

func (i AnalysisKPIProgressBarConditionalFormattingArgs) ToAnalysisKPIProgressBarConditionalFormattingPtrOutput() AnalysisKPIProgressBarConditionalFormattingPtrOutput {
	return i.ToAnalysisKPIProgressBarConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisKPIProgressBarConditionalFormattingArgs) ToAnalysisKPIProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIProgressBarConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIProgressBarConditionalFormattingOutput).ToAnalysisKPIProgressBarConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisKPIProgressBarConditionalFormattingPtrInput is an input type that accepts AnalysisKPIProgressBarConditionalFormattingArgs, AnalysisKPIProgressBarConditionalFormattingPtr and AnalysisKPIProgressBarConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisKPIProgressBarConditionalFormattingPtrInput` via:
//
//	        AnalysisKPIProgressBarConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisKPIProgressBarConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisKPIProgressBarConditionalFormattingPtrOutput() AnalysisKPIProgressBarConditionalFormattingPtrOutput
	ToAnalysisKPIProgressBarConditionalFormattingPtrOutputWithContext(context.Context) AnalysisKPIProgressBarConditionalFormattingPtrOutput
}

type analysisKPIProgressBarConditionalFormattingPtrType AnalysisKPIProgressBarConditionalFormattingArgs

func AnalysisKPIProgressBarConditionalFormattingPtr(v *AnalysisKPIProgressBarConditionalFormattingArgs) AnalysisKPIProgressBarConditionalFormattingPtrInput {
	return (*analysisKPIProgressBarConditionalFormattingPtrType)(v)
}

func (*analysisKPIProgressBarConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIProgressBarConditionalFormatting)(nil)).Elem()
}

func (i *analysisKPIProgressBarConditionalFormattingPtrType) ToAnalysisKPIProgressBarConditionalFormattingPtrOutput() AnalysisKPIProgressBarConditionalFormattingPtrOutput {
	return i.ToAnalysisKPIProgressBarConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisKPIProgressBarConditionalFormattingPtrType) ToAnalysisKPIProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIProgressBarConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIProgressBarConditionalFormattingPtrOutput)
}

type AnalysisKPIProgressBarConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisKPIProgressBarConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIProgressBarConditionalFormatting)(nil)).Elem()
}

func (o AnalysisKPIProgressBarConditionalFormattingOutput) ToAnalysisKPIProgressBarConditionalFormattingOutput() AnalysisKPIProgressBarConditionalFormattingOutput {
	return o
}

func (o AnalysisKPIProgressBarConditionalFormattingOutput) ToAnalysisKPIProgressBarConditionalFormattingOutputWithContext(ctx context.Context) AnalysisKPIProgressBarConditionalFormattingOutput {
	return o
}

func (o AnalysisKPIProgressBarConditionalFormattingOutput) ToAnalysisKPIProgressBarConditionalFormattingPtrOutput() AnalysisKPIProgressBarConditionalFormattingPtrOutput {
	return o.ToAnalysisKPIProgressBarConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisKPIProgressBarConditionalFormattingOutput) ToAnalysisKPIProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIProgressBarConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisKPIProgressBarConditionalFormatting) *AnalysisKPIProgressBarConditionalFormatting {
		return &v
	}).(AnalysisKPIProgressBarConditionalFormattingPtrOutput)
}

func (o AnalysisKPIProgressBarConditionalFormattingOutput) ForegroundColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v AnalysisKPIProgressBarConditionalFormatting) *AnalysisConditionalFormattingColor {
		return v.ForegroundColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisKPIProgressBarConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisKPIProgressBarConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIProgressBarConditionalFormatting)(nil)).Elem()
}

func (o AnalysisKPIProgressBarConditionalFormattingPtrOutput) ToAnalysisKPIProgressBarConditionalFormattingPtrOutput() AnalysisKPIProgressBarConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisKPIProgressBarConditionalFormattingPtrOutput) ToAnalysisKPIProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisKPIProgressBarConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisKPIProgressBarConditionalFormattingPtrOutput) Elem() AnalysisKPIProgressBarConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisKPIProgressBarConditionalFormatting) AnalysisKPIProgressBarConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisKPIProgressBarConditionalFormatting
		return ret
	}).(AnalysisKPIProgressBarConditionalFormattingOutput)
}

func (o AnalysisKPIProgressBarConditionalFormattingPtrOutput) ForegroundColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIProgressBarConditionalFormatting) *AnalysisConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.ForegroundColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisKPISortConfiguration struct {
	TrendGroupSort []AnalysisFieldSortOptions `pulumi:"trendGroupSort"`
}

// AnalysisKPISortConfigurationInput is an input type that accepts AnalysisKPISortConfigurationArgs and AnalysisKPISortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisKPISortConfigurationInput` via:
//
//	AnalysisKPISortConfigurationArgs{...}
type AnalysisKPISortConfigurationInput interface {
	pulumi.Input

	ToAnalysisKPISortConfigurationOutput() AnalysisKPISortConfigurationOutput
	ToAnalysisKPISortConfigurationOutputWithContext(context.Context) AnalysisKPISortConfigurationOutput
}

type AnalysisKPISortConfigurationArgs struct {
	TrendGroupSort AnalysisFieldSortOptionsArrayInput `pulumi:"trendGroupSort"`
}

func (AnalysisKPISortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPISortConfiguration)(nil)).Elem()
}

func (i AnalysisKPISortConfigurationArgs) ToAnalysisKPISortConfigurationOutput() AnalysisKPISortConfigurationOutput {
	return i.ToAnalysisKPISortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisKPISortConfigurationArgs) ToAnalysisKPISortConfigurationOutputWithContext(ctx context.Context) AnalysisKPISortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPISortConfigurationOutput)
}

func (i AnalysisKPISortConfigurationArgs) ToAnalysisKPISortConfigurationPtrOutput() AnalysisKPISortConfigurationPtrOutput {
	return i.ToAnalysisKPISortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisKPISortConfigurationArgs) ToAnalysisKPISortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisKPISortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPISortConfigurationOutput).ToAnalysisKPISortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisKPISortConfigurationPtrInput is an input type that accepts AnalysisKPISortConfigurationArgs, AnalysisKPISortConfigurationPtr and AnalysisKPISortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisKPISortConfigurationPtrInput` via:
//
//	        AnalysisKPISortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisKPISortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisKPISortConfigurationPtrOutput() AnalysisKPISortConfigurationPtrOutput
	ToAnalysisKPISortConfigurationPtrOutputWithContext(context.Context) AnalysisKPISortConfigurationPtrOutput
}

type analysisKPISortConfigurationPtrType AnalysisKPISortConfigurationArgs

func AnalysisKPISortConfigurationPtr(v *AnalysisKPISortConfigurationArgs) AnalysisKPISortConfigurationPtrInput {
	return (*analysisKPISortConfigurationPtrType)(v)
}

func (*analysisKPISortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPISortConfiguration)(nil)).Elem()
}

func (i *analysisKPISortConfigurationPtrType) ToAnalysisKPISortConfigurationPtrOutput() AnalysisKPISortConfigurationPtrOutput {
	return i.ToAnalysisKPISortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisKPISortConfigurationPtrType) ToAnalysisKPISortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisKPISortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPISortConfigurationPtrOutput)
}

type AnalysisKPISortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisKPISortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPISortConfiguration)(nil)).Elem()
}

func (o AnalysisKPISortConfigurationOutput) ToAnalysisKPISortConfigurationOutput() AnalysisKPISortConfigurationOutput {
	return o
}

func (o AnalysisKPISortConfigurationOutput) ToAnalysisKPISortConfigurationOutputWithContext(ctx context.Context) AnalysisKPISortConfigurationOutput {
	return o
}

func (o AnalysisKPISortConfigurationOutput) ToAnalysisKPISortConfigurationPtrOutput() AnalysisKPISortConfigurationPtrOutput {
	return o.ToAnalysisKPISortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisKPISortConfigurationOutput) ToAnalysisKPISortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisKPISortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisKPISortConfiguration) *AnalysisKPISortConfiguration {
		return &v
	}).(AnalysisKPISortConfigurationPtrOutput)
}

func (o AnalysisKPISortConfigurationOutput) TrendGroupSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisKPISortConfiguration) []AnalysisFieldSortOptions { return v.TrendGroupSort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisKPISortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisKPISortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPISortConfiguration)(nil)).Elem()
}

func (o AnalysisKPISortConfigurationPtrOutput) ToAnalysisKPISortConfigurationPtrOutput() AnalysisKPISortConfigurationPtrOutput {
	return o
}

func (o AnalysisKPISortConfigurationPtrOutput) ToAnalysisKPISortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisKPISortConfigurationPtrOutput {
	return o
}

func (o AnalysisKPISortConfigurationPtrOutput) Elem() AnalysisKPISortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisKPISortConfiguration) AnalysisKPISortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisKPISortConfiguration
		return ret
	}).(AnalysisKPISortConfigurationOutput)
}

func (o AnalysisKPISortConfigurationPtrOutput) TrendGroupSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisKPISortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.TrendGroupSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisKPIVisual struct {
	Actions               []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration    *AnalysisKPIConfiguration           `pulumi:"chartConfiguration"`
	ColumnHierarchies     []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	ConditionalFormatting *AnalysisKPIConditionalFormatting   `pulumi:"conditionalFormatting"`
	Subtitle              *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title                 *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId              string                              `pulumi:"visualId"`
}

// AnalysisKPIVisualInput is an input type that accepts AnalysisKPIVisualArgs and AnalysisKPIVisualOutput values.
// You can construct a concrete instance of `AnalysisKPIVisualInput` via:
//
//	AnalysisKPIVisualArgs{...}
type AnalysisKPIVisualInput interface {
	pulumi.Input

	ToAnalysisKPIVisualOutput() AnalysisKPIVisualOutput
	ToAnalysisKPIVisualOutputWithContext(context.Context) AnalysisKPIVisualOutput
}

type AnalysisKPIVisualArgs struct {
	Actions               AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration    AnalysisKPIConfigurationPtrInput           `pulumi:"chartConfiguration"`
	ColumnHierarchies     AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	ConditionalFormatting AnalysisKPIConditionalFormattingPtrInput   `pulumi:"conditionalFormatting"`
	Subtitle              AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title                 AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId              pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisKPIVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIVisual)(nil)).Elem()
}

func (i AnalysisKPIVisualArgs) ToAnalysisKPIVisualOutput() AnalysisKPIVisualOutput {
	return i.ToAnalysisKPIVisualOutputWithContext(context.Background())
}

func (i AnalysisKPIVisualArgs) ToAnalysisKPIVisualOutputWithContext(ctx context.Context) AnalysisKPIVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIVisualOutput)
}

func (i AnalysisKPIVisualArgs) ToAnalysisKPIVisualPtrOutput() AnalysisKPIVisualPtrOutput {
	return i.ToAnalysisKPIVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisKPIVisualArgs) ToAnalysisKPIVisualPtrOutputWithContext(ctx context.Context) AnalysisKPIVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIVisualOutput).ToAnalysisKPIVisualPtrOutputWithContext(ctx)
}

// AnalysisKPIVisualPtrInput is an input type that accepts AnalysisKPIVisualArgs, AnalysisKPIVisualPtr and AnalysisKPIVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisKPIVisualPtrInput` via:
//
//	        AnalysisKPIVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisKPIVisualPtrInput interface {
	pulumi.Input

	ToAnalysisKPIVisualPtrOutput() AnalysisKPIVisualPtrOutput
	ToAnalysisKPIVisualPtrOutputWithContext(context.Context) AnalysisKPIVisualPtrOutput
}

type analysisKPIVisualPtrType AnalysisKPIVisualArgs

func AnalysisKPIVisualPtr(v *AnalysisKPIVisualArgs) AnalysisKPIVisualPtrInput {
	return (*analysisKPIVisualPtrType)(v)
}

func (*analysisKPIVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIVisual)(nil)).Elem()
}

func (i *analysisKPIVisualPtrType) ToAnalysisKPIVisualPtrOutput() AnalysisKPIVisualPtrOutput {
	return i.ToAnalysisKPIVisualPtrOutputWithContext(context.Background())
}

func (i *analysisKPIVisualPtrType) ToAnalysisKPIVisualPtrOutputWithContext(ctx context.Context) AnalysisKPIVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisKPIVisualPtrOutput)
}

type AnalysisKPIVisualOutput struct{ *pulumi.OutputState }

func (AnalysisKPIVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKPIVisual)(nil)).Elem()
}

func (o AnalysisKPIVisualOutput) ToAnalysisKPIVisualOutput() AnalysisKPIVisualOutput {
	return o
}

func (o AnalysisKPIVisualOutput) ToAnalysisKPIVisualOutputWithContext(ctx context.Context) AnalysisKPIVisualOutput {
	return o
}

func (o AnalysisKPIVisualOutput) ToAnalysisKPIVisualPtrOutput() AnalysisKPIVisualPtrOutput {
	return o.ToAnalysisKPIVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisKPIVisualOutput) ToAnalysisKPIVisualPtrOutputWithContext(ctx context.Context) AnalysisKPIVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisKPIVisual) *AnalysisKPIVisual {
		return &v
	}).(AnalysisKPIVisualPtrOutput)
}

func (o AnalysisKPIVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisKPIVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisKPIVisualOutput) ChartConfiguration() AnalysisKPIConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisKPIVisual) *AnalysisKPIConfiguration { return v.ChartConfiguration }).(AnalysisKPIConfigurationPtrOutput)
}

func (o AnalysisKPIVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisKPIVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisKPIVisualOutput) ConditionalFormatting() AnalysisKPIConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisKPIVisual) *AnalysisKPIConditionalFormatting { return v.ConditionalFormatting }).(AnalysisKPIConditionalFormattingPtrOutput)
}

func (o AnalysisKPIVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisKPIVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisKPIVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisKPIVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisKPIVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisKPIVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisKPIVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisKPIVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKPIVisual)(nil)).Elem()
}

func (o AnalysisKPIVisualPtrOutput) ToAnalysisKPIVisualPtrOutput() AnalysisKPIVisualPtrOutput {
	return o
}

func (o AnalysisKPIVisualPtrOutput) ToAnalysisKPIVisualPtrOutputWithContext(ctx context.Context) AnalysisKPIVisualPtrOutput {
	return o
}

func (o AnalysisKPIVisualPtrOutput) Elem() AnalysisKPIVisualOutput {
	return o.ApplyT(func(v *AnalysisKPIVisual) AnalysisKPIVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisKPIVisual
		return ret
	}).(AnalysisKPIVisualOutput)
}

func (o AnalysisKPIVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisKPIVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisKPIVisualPtrOutput) ChartConfiguration() AnalysisKPIConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIVisual) *AnalysisKPIConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisKPIConfigurationPtrOutput)
}

func (o AnalysisKPIVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisKPIVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisKPIVisualPtrOutput) ConditionalFormatting() AnalysisKPIConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIVisual) *AnalysisKPIConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(AnalysisKPIConditionalFormattingPtrOutput)
}

func (o AnalysisKPIVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisKPIVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisKPIVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisKPIVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisLabelOptions struct {
	CustomLabel       *string                    `pulumi:"customLabel"`
	FontConfiguration *AnalysisFontConfiguration `pulumi:"fontConfiguration"`
	Visibility        *AnalysisVisibility        `pulumi:"visibility"`
}

// AnalysisLabelOptionsInput is an input type that accepts AnalysisLabelOptionsArgs and AnalysisLabelOptionsOutput values.
// You can construct a concrete instance of `AnalysisLabelOptionsInput` via:
//
//	AnalysisLabelOptionsArgs{...}
type AnalysisLabelOptionsInput interface {
	pulumi.Input

	ToAnalysisLabelOptionsOutput() AnalysisLabelOptionsOutput
	ToAnalysisLabelOptionsOutputWithContext(context.Context) AnalysisLabelOptionsOutput
}

type AnalysisLabelOptionsArgs struct {
	CustomLabel       pulumi.StringPtrInput             `pulumi:"customLabel"`
	FontConfiguration AnalysisFontConfigurationPtrInput `pulumi:"fontConfiguration"`
	Visibility        AnalysisVisibilityPtrInput        `pulumi:"visibility"`
}

func (AnalysisLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLabelOptions)(nil)).Elem()
}

func (i AnalysisLabelOptionsArgs) ToAnalysisLabelOptionsOutput() AnalysisLabelOptionsOutput {
	return i.ToAnalysisLabelOptionsOutputWithContext(context.Background())
}

func (i AnalysisLabelOptionsArgs) ToAnalysisLabelOptionsOutputWithContext(ctx context.Context) AnalysisLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLabelOptionsOutput)
}

func (i AnalysisLabelOptionsArgs) ToAnalysisLabelOptionsPtrOutput() AnalysisLabelOptionsPtrOutput {
	return i.ToAnalysisLabelOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisLabelOptionsArgs) ToAnalysisLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLabelOptionsOutput).ToAnalysisLabelOptionsPtrOutputWithContext(ctx)
}

// AnalysisLabelOptionsPtrInput is an input type that accepts AnalysisLabelOptionsArgs, AnalysisLabelOptionsPtr and AnalysisLabelOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisLabelOptionsPtrInput` via:
//
//	        AnalysisLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisLabelOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisLabelOptionsPtrOutput() AnalysisLabelOptionsPtrOutput
	ToAnalysisLabelOptionsPtrOutputWithContext(context.Context) AnalysisLabelOptionsPtrOutput
}

type analysisLabelOptionsPtrType AnalysisLabelOptionsArgs

func AnalysisLabelOptionsPtr(v *AnalysisLabelOptionsArgs) AnalysisLabelOptionsPtrInput {
	return (*analysisLabelOptionsPtrType)(v)
}

func (*analysisLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLabelOptions)(nil)).Elem()
}

func (i *analysisLabelOptionsPtrType) ToAnalysisLabelOptionsPtrOutput() AnalysisLabelOptionsPtrOutput {
	return i.ToAnalysisLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisLabelOptionsPtrType) ToAnalysisLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisLabelOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLabelOptions)(nil)).Elem()
}

func (o AnalysisLabelOptionsOutput) ToAnalysisLabelOptionsOutput() AnalysisLabelOptionsOutput {
	return o
}

func (o AnalysisLabelOptionsOutput) ToAnalysisLabelOptionsOutputWithContext(ctx context.Context) AnalysisLabelOptionsOutput {
	return o
}

func (o AnalysisLabelOptionsOutput) ToAnalysisLabelOptionsPtrOutput() AnalysisLabelOptionsPtrOutput {
	return o.ToAnalysisLabelOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisLabelOptionsOutput) ToAnalysisLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLabelOptions) *AnalysisLabelOptions {
		return &v
	}).(AnalysisLabelOptionsPtrOutput)
}

func (o AnalysisLabelOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisLabelOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o AnalysisLabelOptionsOutput) FontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisLabelOptions) *AnalysisFontConfiguration { return v.FontConfiguration }).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisLabelOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisLabelOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLabelOptions)(nil)).Elem()
}

func (o AnalysisLabelOptionsPtrOutput) ToAnalysisLabelOptionsPtrOutput() AnalysisLabelOptionsPtrOutput {
	return o
}

func (o AnalysisLabelOptionsPtrOutput) ToAnalysisLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisLabelOptionsPtrOutput {
	return o
}

func (o AnalysisLabelOptionsPtrOutput) Elem() AnalysisLabelOptionsOutput {
	return o.ApplyT(func(v *AnalysisLabelOptions) AnalysisLabelOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisLabelOptions
		return ret
	}).(AnalysisLabelOptionsOutput)
}

func (o AnalysisLabelOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisLabelOptionsPtrOutput) FontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisLabelOptions) *AnalysisFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisLabelOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisLayout struct {
	Configuration AnalysisLayoutConfiguration `pulumi:"configuration"`
}

// AnalysisLayoutInput is an input type that accepts AnalysisLayoutArgs and AnalysisLayoutOutput values.
// You can construct a concrete instance of `AnalysisLayoutInput` via:
//
//	AnalysisLayoutArgs{...}
type AnalysisLayoutInput interface {
	pulumi.Input

	ToAnalysisLayoutOutput() AnalysisLayoutOutput
	ToAnalysisLayoutOutputWithContext(context.Context) AnalysisLayoutOutput
}

type AnalysisLayoutArgs struct {
	Configuration AnalysisLayoutConfigurationInput `pulumi:"configuration"`
}

func (AnalysisLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLayout)(nil)).Elem()
}

func (i AnalysisLayoutArgs) ToAnalysisLayoutOutput() AnalysisLayoutOutput {
	return i.ToAnalysisLayoutOutputWithContext(context.Background())
}

func (i AnalysisLayoutArgs) ToAnalysisLayoutOutputWithContext(ctx context.Context) AnalysisLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLayoutOutput)
}

// AnalysisLayoutArrayInput is an input type that accepts AnalysisLayoutArray and AnalysisLayoutArrayOutput values.
// You can construct a concrete instance of `AnalysisLayoutArrayInput` via:
//
//	AnalysisLayoutArray{ AnalysisLayoutArgs{...} }
type AnalysisLayoutArrayInput interface {
	pulumi.Input

	ToAnalysisLayoutArrayOutput() AnalysisLayoutArrayOutput
	ToAnalysisLayoutArrayOutputWithContext(context.Context) AnalysisLayoutArrayOutput
}

type AnalysisLayoutArray []AnalysisLayoutInput

func (AnalysisLayoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisLayout)(nil)).Elem()
}

func (i AnalysisLayoutArray) ToAnalysisLayoutArrayOutput() AnalysisLayoutArrayOutput {
	return i.ToAnalysisLayoutArrayOutputWithContext(context.Background())
}

func (i AnalysisLayoutArray) ToAnalysisLayoutArrayOutputWithContext(ctx context.Context) AnalysisLayoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLayoutArrayOutput)
}

type AnalysisLayoutOutput struct{ *pulumi.OutputState }

func (AnalysisLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLayout)(nil)).Elem()
}

func (o AnalysisLayoutOutput) ToAnalysisLayoutOutput() AnalysisLayoutOutput {
	return o
}

func (o AnalysisLayoutOutput) ToAnalysisLayoutOutputWithContext(ctx context.Context) AnalysisLayoutOutput {
	return o
}

func (o AnalysisLayoutOutput) Configuration() AnalysisLayoutConfigurationOutput {
	return o.ApplyT(func(v AnalysisLayout) AnalysisLayoutConfiguration { return v.Configuration }).(AnalysisLayoutConfigurationOutput)
}

type AnalysisLayoutArrayOutput struct{ *pulumi.OutputState }

func (AnalysisLayoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisLayout)(nil)).Elem()
}

func (o AnalysisLayoutArrayOutput) ToAnalysisLayoutArrayOutput() AnalysisLayoutArrayOutput {
	return o
}

func (o AnalysisLayoutArrayOutput) ToAnalysisLayoutArrayOutputWithContext(ctx context.Context) AnalysisLayoutArrayOutput {
	return o
}

func (o AnalysisLayoutArrayOutput) Index(i pulumi.IntInput) AnalysisLayoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisLayout {
		return vs[0].([]AnalysisLayout)[vs[1].(int)]
	}).(AnalysisLayoutOutput)
}

type AnalysisLayoutConfiguration struct {
	FreeFormLayout     *AnalysisFreeFormLayoutConfiguration     `pulumi:"freeFormLayout"`
	GridLayout         *AnalysisGridLayoutConfiguration         `pulumi:"gridLayout"`
	SectionBasedLayout *AnalysisSectionBasedLayoutConfiguration `pulumi:"sectionBasedLayout"`
}

// AnalysisLayoutConfigurationInput is an input type that accepts AnalysisLayoutConfigurationArgs and AnalysisLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisLayoutConfigurationInput` via:
//
//	AnalysisLayoutConfigurationArgs{...}
type AnalysisLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisLayoutConfigurationOutput() AnalysisLayoutConfigurationOutput
	ToAnalysisLayoutConfigurationOutputWithContext(context.Context) AnalysisLayoutConfigurationOutput
}

type AnalysisLayoutConfigurationArgs struct {
	FreeFormLayout     AnalysisFreeFormLayoutConfigurationPtrInput     `pulumi:"freeFormLayout"`
	GridLayout         AnalysisGridLayoutConfigurationPtrInput         `pulumi:"gridLayout"`
	SectionBasedLayout AnalysisSectionBasedLayoutConfigurationPtrInput `pulumi:"sectionBasedLayout"`
}

func (AnalysisLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisLayoutConfigurationArgs) ToAnalysisLayoutConfigurationOutput() AnalysisLayoutConfigurationOutput {
	return i.ToAnalysisLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisLayoutConfigurationArgs) ToAnalysisLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLayoutConfigurationOutput)
}

type AnalysisLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisLayoutConfigurationOutput) ToAnalysisLayoutConfigurationOutput() AnalysisLayoutConfigurationOutput {
	return o
}

func (o AnalysisLayoutConfigurationOutput) ToAnalysisLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisLayoutConfigurationOutput {
	return o
}

func (o AnalysisLayoutConfigurationOutput) FreeFormLayout() AnalysisFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisLayoutConfiguration) *AnalysisFreeFormLayoutConfiguration { return v.FreeFormLayout }).(AnalysisFreeFormLayoutConfigurationPtrOutput)
}

func (o AnalysisLayoutConfigurationOutput) GridLayout() AnalysisGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisLayoutConfiguration) *AnalysisGridLayoutConfiguration { return v.GridLayout }).(AnalysisGridLayoutConfigurationPtrOutput)
}

func (o AnalysisLayoutConfigurationOutput) SectionBasedLayout() AnalysisSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisLayoutConfiguration) *AnalysisSectionBasedLayoutConfiguration {
		return v.SectionBasedLayout
	}).(AnalysisSectionBasedLayoutConfigurationPtrOutput)
}

type AnalysisLegendOptions struct {
	// String based length that is composed of value and unit in px
	Height     *string                 `pulumi:"height"`
	Position   *AnalysisLegendPosition `pulumi:"position"`
	Title      *AnalysisLabelOptions   `pulumi:"title"`
	Visibility *AnalysisVisibility     `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width *string `pulumi:"width"`
}

// AnalysisLegendOptionsInput is an input type that accepts AnalysisLegendOptionsArgs and AnalysisLegendOptionsOutput values.
// You can construct a concrete instance of `AnalysisLegendOptionsInput` via:
//
//	AnalysisLegendOptionsArgs{...}
type AnalysisLegendOptionsInput interface {
	pulumi.Input

	ToAnalysisLegendOptionsOutput() AnalysisLegendOptionsOutput
	ToAnalysisLegendOptionsOutputWithContext(context.Context) AnalysisLegendOptionsOutput
}

type AnalysisLegendOptionsArgs struct {
	// String based length that is composed of value and unit in px
	Height     pulumi.StringPtrInput          `pulumi:"height"`
	Position   AnalysisLegendPositionPtrInput `pulumi:"position"`
	Title      AnalysisLabelOptionsPtrInput   `pulumi:"title"`
	Visibility AnalysisVisibilityPtrInput     `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringPtrInput `pulumi:"width"`
}

func (AnalysisLegendOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLegendOptions)(nil)).Elem()
}

func (i AnalysisLegendOptionsArgs) ToAnalysisLegendOptionsOutput() AnalysisLegendOptionsOutput {
	return i.ToAnalysisLegendOptionsOutputWithContext(context.Background())
}

func (i AnalysisLegendOptionsArgs) ToAnalysisLegendOptionsOutputWithContext(ctx context.Context) AnalysisLegendOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLegendOptionsOutput)
}

func (i AnalysisLegendOptionsArgs) ToAnalysisLegendOptionsPtrOutput() AnalysisLegendOptionsPtrOutput {
	return i.ToAnalysisLegendOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisLegendOptionsArgs) ToAnalysisLegendOptionsPtrOutputWithContext(ctx context.Context) AnalysisLegendOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLegendOptionsOutput).ToAnalysisLegendOptionsPtrOutputWithContext(ctx)
}

// AnalysisLegendOptionsPtrInput is an input type that accepts AnalysisLegendOptionsArgs, AnalysisLegendOptionsPtr and AnalysisLegendOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisLegendOptionsPtrInput` via:
//
//	        AnalysisLegendOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisLegendOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisLegendOptionsPtrOutput() AnalysisLegendOptionsPtrOutput
	ToAnalysisLegendOptionsPtrOutputWithContext(context.Context) AnalysisLegendOptionsPtrOutput
}

type analysisLegendOptionsPtrType AnalysisLegendOptionsArgs

func AnalysisLegendOptionsPtr(v *AnalysisLegendOptionsArgs) AnalysisLegendOptionsPtrInput {
	return (*analysisLegendOptionsPtrType)(v)
}

func (*analysisLegendOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLegendOptions)(nil)).Elem()
}

func (i *analysisLegendOptionsPtrType) ToAnalysisLegendOptionsPtrOutput() AnalysisLegendOptionsPtrOutput {
	return i.ToAnalysisLegendOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisLegendOptionsPtrType) ToAnalysisLegendOptionsPtrOutputWithContext(ctx context.Context) AnalysisLegendOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLegendOptionsPtrOutput)
}

type AnalysisLegendOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisLegendOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLegendOptions)(nil)).Elem()
}

func (o AnalysisLegendOptionsOutput) ToAnalysisLegendOptionsOutput() AnalysisLegendOptionsOutput {
	return o
}

func (o AnalysisLegendOptionsOutput) ToAnalysisLegendOptionsOutputWithContext(ctx context.Context) AnalysisLegendOptionsOutput {
	return o
}

func (o AnalysisLegendOptionsOutput) ToAnalysisLegendOptionsPtrOutput() AnalysisLegendOptionsPtrOutput {
	return o.ToAnalysisLegendOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisLegendOptionsOutput) ToAnalysisLegendOptionsPtrOutputWithContext(ctx context.Context) AnalysisLegendOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLegendOptions) *AnalysisLegendOptions {
		return &v
	}).(AnalysisLegendOptionsPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisLegendOptionsOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisLegendOptions) *string { return v.Height }).(pulumi.StringPtrOutput)
}

func (o AnalysisLegendOptionsOutput) Position() AnalysisLegendPositionPtrOutput {
	return o.ApplyT(func(v AnalysisLegendOptions) *AnalysisLegendPosition { return v.Position }).(AnalysisLegendPositionPtrOutput)
}

func (o AnalysisLegendOptionsOutput) Title() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLegendOptions) *AnalysisLabelOptions { return v.Title }).(AnalysisLabelOptionsPtrOutput)
}

func (o AnalysisLegendOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisLegendOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisLegendOptionsOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisLegendOptions) *string { return v.Width }).(pulumi.StringPtrOutput)
}

type AnalysisLegendOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLegendOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLegendOptions)(nil)).Elem()
}

func (o AnalysisLegendOptionsPtrOutput) ToAnalysisLegendOptionsPtrOutput() AnalysisLegendOptionsPtrOutput {
	return o
}

func (o AnalysisLegendOptionsPtrOutput) ToAnalysisLegendOptionsPtrOutputWithContext(ctx context.Context) AnalysisLegendOptionsPtrOutput {
	return o
}

func (o AnalysisLegendOptionsPtrOutput) Elem() AnalysisLegendOptionsOutput {
	return o.ApplyT(func(v *AnalysisLegendOptions) AnalysisLegendOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisLegendOptions
		return ret
	}).(AnalysisLegendOptionsOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisLegendOptionsPtrOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisLegendOptions) *string {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisLegendOptionsPtrOutput) Position() AnalysisLegendPositionPtrOutput {
	return o.ApplyT(func(v *AnalysisLegendOptions) *AnalysisLegendPosition {
		if v == nil {
			return nil
		}
		return v.Position
	}).(AnalysisLegendPositionPtrOutput)
}

func (o AnalysisLegendOptionsPtrOutput) Title() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLegendOptions) *AnalysisLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisLabelOptionsPtrOutput)
}

func (o AnalysisLegendOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisLegendOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisLegendOptionsPtrOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisLegendOptions) *string {
		if v == nil {
			return nil
		}
		return v.Width
	}).(pulumi.StringPtrOutput)
}

type AnalysisLineChartAggregatedFieldWells struct {
	Category       []AnalysisDimensionField `pulumi:"category"`
	Colors         []AnalysisDimensionField `pulumi:"colors"`
	SmallMultiples []AnalysisDimensionField `pulumi:"smallMultiples"`
	Values         []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisLineChartAggregatedFieldWellsInput is an input type that accepts AnalysisLineChartAggregatedFieldWellsArgs and AnalysisLineChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisLineChartAggregatedFieldWellsInput` via:
//
//	AnalysisLineChartAggregatedFieldWellsArgs{...}
type AnalysisLineChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisLineChartAggregatedFieldWellsOutput() AnalysisLineChartAggregatedFieldWellsOutput
	ToAnalysisLineChartAggregatedFieldWellsOutputWithContext(context.Context) AnalysisLineChartAggregatedFieldWellsOutput
}

type AnalysisLineChartAggregatedFieldWellsArgs struct {
	Category       AnalysisDimensionFieldArrayInput `pulumi:"category"`
	Colors         AnalysisDimensionFieldArrayInput `pulumi:"colors"`
	SmallMultiples AnalysisDimensionFieldArrayInput `pulumi:"smallMultiples"`
	Values         AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisLineChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisLineChartAggregatedFieldWellsArgs) ToAnalysisLineChartAggregatedFieldWellsOutput() AnalysisLineChartAggregatedFieldWellsOutput {
	return i.ToAnalysisLineChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisLineChartAggregatedFieldWellsArgs) ToAnalysisLineChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisLineChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartAggregatedFieldWellsOutput)
}

func (i AnalysisLineChartAggregatedFieldWellsArgs) ToAnalysisLineChartAggregatedFieldWellsPtrOutput() AnalysisLineChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisLineChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisLineChartAggregatedFieldWellsArgs) ToAnalysisLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisLineChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartAggregatedFieldWellsOutput).ToAnalysisLineChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisLineChartAggregatedFieldWellsPtrInput is an input type that accepts AnalysisLineChartAggregatedFieldWellsArgs, AnalysisLineChartAggregatedFieldWellsPtr and AnalysisLineChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisLineChartAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisLineChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisLineChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisLineChartAggregatedFieldWellsPtrOutput() AnalysisLineChartAggregatedFieldWellsPtrOutput
	ToAnalysisLineChartAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisLineChartAggregatedFieldWellsPtrOutput
}

type analysisLineChartAggregatedFieldWellsPtrType AnalysisLineChartAggregatedFieldWellsArgs

func AnalysisLineChartAggregatedFieldWellsPtr(v *AnalysisLineChartAggregatedFieldWellsArgs) AnalysisLineChartAggregatedFieldWellsPtrInput {
	return (*analysisLineChartAggregatedFieldWellsPtrType)(v)
}

func (*analysisLineChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisLineChartAggregatedFieldWellsPtrType) ToAnalysisLineChartAggregatedFieldWellsPtrOutput() AnalysisLineChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisLineChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisLineChartAggregatedFieldWellsPtrType) ToAnalysisLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisLineChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartAggregatedFieldWellsPtrOutput)
}

type AnalysisLineChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisLineChartAggregatedFieldWellsOutput) ToAnalysisLineChartAggregatedFieldWellsOutput() AnalysisLineChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisLineChartAggregatedFieldWellsOutput) ToAnalysisLineChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisLineChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisLineChartAggregatedFieldWellsOutput) ToAnalysisLineChartAggregatedFieldWellsPtrOutput() AnalysisLineChartAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisLineChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartAggregatedFieldWellsOutput) ToAnalysisLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisLineChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartAggregatedFieldWells) *AnalysisLineChartAggregatedFieldWells {
		return &v
	}).(AnalysisLineChartAggregatedFieldWellsPtrOutput)
}

func (o AnalysisLineChartAggregatedFieldWellsOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartAggregatedFieldWells) []AnalysisDimensionField { return v.Category }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisLineChartAggregatedFieldWellsOutput) Colors() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartAggregatedFieldWells) []AnalysisDimensionField { return v.Colors }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisLineChartAggregatedFieldWellsOutput) SmallMultiples() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartAggregatedFieldWells) []AnalysisDimensionField { return v.SmallMultiples }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisLineChartAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisLineChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisLineChartAggregatedFieldWellsPtrOutput) ToAnalysisLineChartAggregatedFieldWellsPtrOutput() AnalysisLineChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisLineChartAggregatedFieldWellsPtrOutput) ToAnalysisLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisLineChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisLineChartAggregatedFieldWellsPtrOutput) Elem() AnalysisLineChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisLineChartAggregatedFieldWells) AnalysisLineChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartAggregatedFieldWells
		return ret
	}).(AnalysisLineChartAggregatedFieldWellsOutput)
}

func (o AnalysisLineChartAggregatedFieldWellsPtrOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisLineChartAggregatedFieldWellsPtrOutput) Colors() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisLineChartAggregatedFieldWellsPtrOutput) SmallMultiples() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.SmallMultiples
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisLineChartAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisLineChartConfiguration struct {
	ContributionAnalysisDefaults []AnalysisContributionAnalysisDefault   `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   *AnalysisDataLabelOptions               `pulumi:"dataLabels"`
	DefaultSeriesSettings        *AnalysisLineChartDefaultSeriesSettings `pulumi:"defaultSeriesSettings"`
	FieldWells                   *AnalysisLineChartFieldWells            `pulumi:"fieldWells"`
	ForecastConfigurations       []AnalysisForecastConfiguration         `pulumi:"forecastConfigurations"`
	Legend                       *AnalysisLegendOptions                  `pulumi:"legend"`
	PrimaryYAxisDisplayOptions   *AnalysisLineSeriesAxisDisplayOptions   `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     *AnalysisChartAxisLabelOptions          `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               []AnalysisReferenceLine                 `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions *AnalysisLineSeriesAxisDisplayOptions   `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   *AnalysisChartAxisLabelOptions          `pulumi:"secondaryYAxisLabelOptions"`
	Series                       []AnalysisSeriesItem                    `pulumi:"series"`
	SmallMultiplesOptions        *AnalysisSmallMultiplesOptions          `pulumi:"smallMultiplesOptions"`
	SortConfiguration            *AnalysisLineChartSortConfiguration     `pulumi:"sortConfiguration"`
	Tooltip                      *AnalysisTooltipOptions                 `pulumi:"tooltip"`
	Type                         *AnalysisLineChartType                  `pulumi:"type"`
	VisualPalette                *AnalysisVisualPalette                  `pulumi:"visualPalette"`
	XAxisDisplayOptions          *AnalysisAxisDisplayOptions             `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions            *AnalysisChartAxisLabelOptions          `pulumi:"xAxisLabelOptions"`
}

// AnalysisLineChartConfigurationInput is an input type that accepts AnalysisLineChartConfigurationArgs and AnalysisLineChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisLineChartConfigurationInput` via:
//
//	AnalysisLineChartConfigurationArgs{...}
type AnalysisLineChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisLineChartConfigurationOutput() AnalysisLineChartConfigurationOutput
	ToAnalysisLineChartConfigurationOutputWithContext(context.Context) AnalysisLineChartConfigurationOutput
}

type AnalysisLineChartConfigurationArgs struct {
	ContributionAnalysisDefaults AnalysisContributionAnalysisDefaultArrayInput  `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   AnalysisDataLabelOptionsPtrInput               `pulumi:"dataLabels"`
	DefaultSeriesSettings        AnalysisLineChartDefaultSeriesSettingsPtrInput `pulumi:"defaultSeriesSettings"`
	FieldWells                   AnalysisLineChartFieldWellsPtrInput            `pulumi:"fieldWells"`
	ForecastConfigurations       AnalysisForecastConfigurationArrayInput        `pulumi:"forecastConfigurations"`
	Legend                       AnalysisLegendOptionsPtrInput                  `pulumi:"legend"`
	PrimaryYAxisDisplayOptions   AnalysisLineSeriesAxisDisplayOptionsPtrInput   `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     AnalysisChartAxisLabelOptionsPtrInput          `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               AnalysisReferenceLineArrayInput                `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions AnalysisLineSeriesAxisDisplayOptionsPtrInput   `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   AnalysisChartAxisLabelOptionsPtrInput          `pulumi:"secondaryYAxisLabelOptions"`
	Series                       AnalysisSeriesItemArrayInput                   `pulumi:"series"`
	SmallMultiplesOptions        AnalysisSmallMultiplesOptionsPtrInput          `pulumi:"smallMultiplesOptions"`
	SortConfiguration            AnalysisLineChartSortConfigurationPtrInput     `pulumi:"sortConfiguration"`
	Tooltip                      AnalysisTooltipOptionsPtrInput                 `pulumi:"tooltip"`
	Type                         AnalysisLineChartTypePtrInput                  `pulumi:"type"`
	VisualPalette                AnalysisVisualPalettePtrInput                  `pulumi:"visualPalette"`
	XAxisDisplayOptions          AnalysisAxisDisplayOptionsPtrInput             `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions            AnalysisChartAxisLabelOptionsPtrInput          `pulumi:"xAxisLabelOptions"`
}

func (AnalysisLineChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartConfiguration)(nil)).Elem()
}

func (i AnalysisLineChartConfigurationArgs) ToAnalysisLineChartConfigurationOutput() AnalysisLineChartConfigurationOutput {
	return i.ToAnalysisLineChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisLineChartConfigurationArgs) ToAnalysisLineChartConfigurationOutputWithContext(ctx context.Context) AnalysisLineChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartConfigurationOutput)
}

func (i AnalysisLineChartConfigurationArgs) ToAnalysisLineChartConfigurationPtrOutput() AnalysisLineChartConfigurationPtrOutput {
	return i.ToAnalysisLineChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisLineChartConfigurationArgs) ToAnalysisLineChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLineChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartConfigurationOutput).ToAnalysisLineChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisLineChartConfigurationPtrInput is an input type that accepts AnalysisLineChartConfigurationArgs, AnalysisLineChartConfigurationPtr and AnalysisLineChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisLineChartConfigurationPtrInput` via:
//
//	        AnalysisLineChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisLineChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisLineChartConfigurationPtrOutput() AnalysisLineChartConfigurationPtrOutput
	ToAnalysisLineChartConfigurationPtrOutputWithContext(context.Context) AnalysisLineChartConfigurationPtrOutput
}

type analysisLineChartConfigurationPtrType AnalysisLineChartConfigurationArgs

func AnalysisLineChartConfigurationPtr(v *AnalysisLineChartConfigurationArgs) AnalysisLineChartConfigurationPtrInput {
	return (*analysisLineChartConfigurationPtrType)(v)
}

func (*analysisLineChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartConfiguration)(nil)).Elem()
}

func (i *analysisLineChartConfigurationPtrType) ToAnalysisLineChartConfigurationPtrOutput() AnalysisLineChartConfigurationPtrOutput {
	return i.ToAnalysisLineChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisLineChartConfigurationPtrType) ToAnalysisLineChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLineChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartConfigurationPtrOutput)
}

type AnalysisLineChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartConfiguration)(nil)).Elem()
}

func (o AnalysisLineChartConfigurationOutput) ToAnalysisLineChartConfigurationOutput() AnalysisLineChartConfigurationOutput {
	return o
}

func (o AnalysisLineChartConfigurationOutput) ToAnalysisLineChartConfigurationOutputWithContext(ctx context.Context) AnalysisLineChartConfigurationOutput {
	return o
}

func (o AnalysisLineChartConfigurationOutput) ToAnalysisLineChartConfigurationPtrOutput() AnalysisLineChartConfigurationPtrOutput {
	return o.ToAnalysisLineChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartConfigurationOutput) ToAnalysisLineChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLineChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartConfiguration) *AnalysisLineChartConfiguration {
		return &v
	}).(AnalysisLineChartConfigurationPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) ContributionAnalysisDefaults() AnalysisContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) []AnalysisContributionAnalysisDefault {
		return v.ContributionAnalysisDefaults
	}).(AnalysisContributionAnalysisDefaultArrayOutput)
}

func (o AnalysisLineChartConfigurationOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisDataLabelOptions { return v.DataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) DefaultSeriesSettings() AnalysisLineChartDefaultSeriesSettingsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisLineChartDefaultSeriesSettings {
		return v.DefaultSeriesSettings
	}).(AnalysisLineChartDefaultSeriesSettingsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) FieldWells() AnalysisLineChartFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisLineChartFieldWells { return v.FieldWells }).(AnalysisLineChartFieldWellsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) ForecastConfigurations() AnalysisForecastConfigurationArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) []AnalysisForecastConfiguration {
		return v.ForecastConfigurations
	}).(AnalysisForecastConfigurationArrayOutput)
}

func (o AnalysisLineChartConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) PrimaryYAxisDisplayOptions() AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisLineSeriesAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(AnalysisLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) PrimaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) ReferenceLines() AnalysisReferenceLineArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) []AnalysisReferenceLine { return v.ReferenceLines }).(AnalysisReferenceLineArrayOutput)
}

func (o AnalysisLineChartConfigurationOutput) SecondaryYAxisDisplayOptions() AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisLineSeriesAxisDisplayOptions {
		return v.SecondaryYAxisDisplayOptions
	}).(AnalysisLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) SecondaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisChartAxisLabelOptions {
		return v.SecondaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) Series() AnalysisSeriesItemArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) []AnalysisSeriesItem { return v.Series }).(AnalysisSeriesItemArrayOutput)
}

func (o AnalysisLineChartConfigurationOutput) SmallMultiplesOptions() AnalysisSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisSmallMultiplesOptions { return v.SmallMultiplesOptions }).(AnalysisSmallMultiplesOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) SortConfiguration() AnalysisLineChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisLineChartSortConfiguration { return v.SortConfiguration }).(AnalysisLineChartSortConfigurationPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) Type() AnalysisLineChartTypePtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisLineChartType { return v.Type }).(AnalysisLineChartTypePtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) XAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisAxisDisplayOptions { return v.XAxisDisplayOptions }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationOutput) XAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartConfiguration) *AnalysisChartAxisLabelOptions { return v.XAxisLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

type AnalysisLineChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartConfiguration)(nil)).Elem()
}

func (o AnalysisLineChartConfigurationPtrOutput) ToAnalysisLineChartConfigurationPtrOutput() AnalysisLineChartConfigurationPtrOutput {
	return o
}

func (o AnalysisLineChartConfigurationPtrOutput) ToAnalysisLineChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLineChartConfigurationPtrOutput {
	return o
}

func (o AnalysisLineChartConfigurationPtrOutput) Elem() AnalysisLineChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) AnalysisLineChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartConfiguration
		return ret
	}).(AnalysisLineChartConfigurationOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) ContributionAnalysisDefaults() AnalysisContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) []AnalysisContributionAnalysisDefault {
		if v == nil {
			return nil
		}
		return v.ContributionAnalysisDefaults
	}).(AnalysisContributionAnalysisDefaultArrayOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) DefaultSeriesSettings() AnalysisLineChartDefaultSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisLineChartDefaultSeriesSettings {
		if v == nil {
			return nil
		}
		return v.DefaultSeriesSettings
	}).(AnalysisLineChartDefaultSeriesSettingsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) FieldWells() AnalysisLineChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisLineChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisLineChartFieldWellsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) ForecastConfigurations() AnalysisForecastConfigurationArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) []AnalysisForecastConfiguration {
		if v == nil {
			return nil
		}
		return v.ForecastConfigurations
	}).(AnalysisForecastConfigurationArrayOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisLineSeriesAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(AnalysisLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) ReferenceLines() AnalysisReferenceLineArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) []AnalysisReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(AnalysisReferenceLineArrayOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) SecondaryYAxisDisplayOptions() AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisLineSeriesAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisDisplayOptions
	}).(AnalysisLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) SecondaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) Series() AnalysisSeriesItemArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) []AnalysisSeriesItem {
		if v == nil {
			return nil
		}
		return v.Series
	}).(AnalysisSeriesItemArrayOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) SmallMultiplesOptions() AnalysisSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisSmallMultiplesOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesOptions
	}).(AnalysisSmallMultiplesOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) SortConfiguration() AnalysisLineChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisLineChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisLineChartSortConfigurationPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) Type() AnalysisLineChartTypePtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisLineChartType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AnalysisLineChartTypePtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) XAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.XAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisLineChartConfigurationPtrOutput) XAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.XAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

type AnalysisLineChartDefaultSeriesSettings struct {
	AxisBinding         *AnalysisAxisBinding                  `pulumi:"axisBinding"`
	LineStyleSettings   *AnalysisLineChartLineStyleSettings   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings *AnalysisLineChartMarkerStyleSettings `pulumi:"markerStyleSettings"`
}

// AnalysisLineChartDefaultSeriesSettingsInput is an input type that accepts AnalysisLineChartDefaultSeriesSettingsArgs and AnalysisLineChartDefaultSeriesSettingsOutput values.
// You can construct a concrete instance of `AnalysisLineChartDefaultSeriesSettingsInput` via:
//
//	AnalysisLineChartDefaultSeriesSettingsArgs{...}
type AnalysisLineChartDefaultSeriesSettingsInput interface {
	pulumi.Input

	ToAnalysisLineChartDefaultSeriesSettingsOutput() AnalysisLineChartDefaultSeriesSettingsOutput
	ToAnalysisLineChartDefaultSeriesSettingsOutputWithContext(context.Context) AnalysisLineChartDefaultSeriesSettingsOutput
}

type AnalysisLineChartDefaultSeriesSettingsArgs struct {
	AxisBinding         AnalysisAxisBindingPtrInput                  `pulumi:"axisBinding"`
	LineStyleSettings   AnalysisLineChartLineStyleSettingsPtrInput   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings AnalysisLineChartMarkerStyleSettingsPtrInput `pulumi:"markerStyleSettings"`
}

func (AnalysisLineChartDefaultSeriesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (i AnalysisLineChartDefaultSeriesSettingsArgs) ToAnalysisLineChartDefaultSeriesSettingsOutput() AnalysisLineChartDefaultSeriesSettingsOutput {
	return i.ToAnalysisLineChartDefaultSeriesSettingsOutputWithContext(context.Background())
}

func (i AnalysisLineChartDefaultSeriesSettingsArgs) ToAnalysisLineChartDefaultSeriesSettingsOutputWithContext(ctx context.Context) AnalysisLineChartDefaultSeriesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartDefaultSeriesSettingsOutput)
}

func (i AnalysisLineChartDefaultSeriesSettingsArgs) ToAnalysisLineChartDefaultSeriesSettingsPtrOutput() AnalysisLineChartDefaultSeriesSettingsPtrOutput {
	return i.ToAnalysisLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i AnalysisLineChartDefaultSeriesSettingsArgs) ToAnalysisLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartDefaultSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartDefaultSeriesSettingsOutput).ToAnalysisLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx)
}

// AnalysisLineChartDefaultSeriesSettingsPtrInput is an input type that accepts AnalysisLineChartDefaultSeriesSettingsArgs, AnalysisLineChartDefaultSeriesSettingsPtr and AnalysisLineChartDefaultSeriesSettingsPtrOutput values.
// You can construct a concrete instance of `AnalysisLineChartDefaultSeriesSettingsPtrInput` via:
//
//	        AnalysisLineChartDefaultSeriesSettingsArgs{...}
//
//	or:
//
//	        nil
type AnalysisLineChartDefaultSeriesSettingsPtrInput interface {
	pulumi.Input

	ToAnalysisLineChartDefaultSeriesSettingsPtrOutput() AnalysisLineChartDefaultSeriesSettingsPtrOutput
	ToAnalysisLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Context) AnalysisLineChartDefaultSeriesSettingsPtrOutput
}

type analysisLineChartDefaultSeriesSettingsPtrType AnalysisLineChartDefaultSeriesSettingsArgs

func AnalysisLineChartDefaultSeriesSettingsPtr(v *AnalysisLineChartDefaultSeriesSettingsArgs) AnalysisLineChartDefaultSeriesSettingsPtrInput {
	return (*analysisLineChartDefaultSeriesSettingsPtrType)(v)
}

func (*analysisLineChartDefaultSeriesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (i *analysisLineChartDefaultSeriesSettingsPtrType) ToAnalysisLineChartDefaultSeriesSettingsPtrOutput() AnalysisLineChartDefaultSeriesSettingsPtrOutput {
	return i.ToAnalysisLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i *analysisLineChartDefaultSeriesSettingsPtrType) ToAnalysisLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartDefaultSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartDefaultSeriesSettingsPtrOutput)
}

type AnalysisLineChartDefaultSeriesSettingsOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartDefaultSeriesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (o AnalysisLineChartDefaultSeriesSettingsOutput) ToAnalysisLineChartDefaultSeriesSettingsOutput() AnalysisLineChartDefaultSeriesSettingsOutput {
	return o
}

func (o AnalysisLineChartDefaultSeriesSettingsOutput) ToAnalysisLineChartDefaultSeriesSettingsOutputWithContext(ctx context.Context) AnalysisLineChartDefaultSeriesSettingsOutput {
	return o
}

func (o AnalysisLineChartDefaultSeriesSettingsOutput) ToAnalysisLineChartDefaultSeriesSettingsPtrOutput() AnalysisLineChartDefaultSeriesSettingsPtrOutput {
	return o.ToAnalysisLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartDefaultSeriesSettingsOutput) ToAnalysisLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartDefaultSeriesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartDefaultSeriesSettings) *AnalysisLineChartDefaultSeriesSettings {
		return &v
	}).(AnalysisLineChartDefaultSeriesSettingsPtrOutput)
}

func (o AnalysisLineChartDefaultSeriesSettingsOutput) AxisBinding() AnalysisAxisBindingPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartDefaultSeriesSettings) *AnalysisAxisBinding { return v.AxisBinding }).(AnalysisAxisBindingPtrOutput)
}

func (o AnalysisLineChartDefaultSeriesSettingsOutput) LineStyleSettings() AnalysisLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartDefaultSeriesSettings) *AnalysisLineChartLineStyleSettings {
		return v.LineStyleSettings
	}).(AnalysisLineChartLineStyleSettingsPtrOutput)
}

func (o AnalysisLineChartDefaultSeriesSettingsOutput) MarkerStyleSettings() AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartDefaultSeriesSettings) *AnalysisLineChartMarkerStyleSettings {
		return v.MarkerStyleSettings
	}).(AnalysisLineChartMarkerStyleSettingsPtrOutput)
}

type AnalysisLineChartDefaultSeriesSettingsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartDefaultSeriesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (o AnalysisLineChartDefaultSeriesSettingsPtrOutput) ToAnalysisLineChartDefaultSeriesSettingsPtrOutput() AnalysisLineChartDefaultSeriesSettingsPtrOutput {
	return o
}

func (o AnalysisLineChartDefaultSeriesSettingsPtrOutput) ToAnalysisLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartDefaultSeriesSettingsPtrOutput {
	return o
}

func (o AnalysisLineChartDefaultSeriesSettingsPtrOutput) Elem() AnalysisLineChartDefaultSeriesSettingsOutput {
	return o.ApplyT(func(v *AnalysisLineChartDefaultSeriesSettings) AnalysisLineChartDefaultSeriesSettings {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartDefaultSeriesSettings
		return ret
	}).(AnalysisLineChartDefaultSeriesSettingsOutput)
}

func (o AnalysisLineChartDefaultSeriesSettingsPtrOutput) AxisBinding() AnalysisAxisBindingPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartDefaultSeriesSettings) *AnalysisAxisBinding {
		if v == nil {
			return nil
		}
		return v.AxisBinding
	}).(AnalysisAxisBindingPtrOutput)
}

func (o AnalysisLineChartDefaultSeriesSettingsPtrOutput) LineStyleSettings() AnalysisLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartDefaultSeriesSettings) *AnalysisLineChartLineStyleSettings {
		if v == nil {
			return nil
		}
		return v.LineStyleSettings
	}).(AnalysisLineChartLineStyleSettingsPtrOutput)
}

func (o AnalysisLineChartDefaultSeriesSettingsPtrOutput) MarkerStyleSettings() AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartDefaultSeriesSettings) *AnalysisLineChartMarkerStyleSettings {
		if v == nil {
			return nil
		}
		return v.MarkerStyleSettings
	}).(AnalysisLineChartMarkerStyleSettingsPtrOutput)
}

type AnalysisLineChartFieldWells struct {
	LineChartAggregatedFieldWells *AnalysisLineChartAggregatedFieldWells `pulumi:"lineChartAggregatedFieldWells"`
}

// AnalysisLineChartFieldWellsInput is an input type that accepts AnalysisLineChartFieldWellsArgs and AnalysisLineChartFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisLineChartFieldWellsInput` via:
//
//	AnalysisLineChartFieldWellsArgs{...}
type AnalysisLineChartFieldWellsInput interface {
	pulumi.Input

	ToAnalysisLineChartFieldWellsOutput() AnalysisLineChartFieldWellsOutput
	ToAnalysisLineChartFieldWellsOutputWithContext(context.Context) AnalysisLineChartFieldWellsOutput
}

type AnalysisLineChartFieldWellsArgs struct {
	LineChartAggregatedFieldWells AnalysisLineChartAggregatedFieldWellsPtrInput `pulumi:"lineChartAggregatedFieldWells"`
}

func (AnalysisLineChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartFieldWells)(nil)).Elem()
}

func (i AnalysisLineChartFieldWellsArgs) ToAnalysisLineChartFieldWellsOutput() AnalysisLineChartFieldWellsOutput {
	return i.ToAnalysisLineChartFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisLineChartFieldWellsArgs) ToAnalysisLineChartFieldWellsOutputWithContext(ctx context.Context) AnalysisLineChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartFieldWellsOutput)
}

func (i AnalysisLineChartFieldWellsArgs) ToAnalysisLineChartFieldWellsPtrOutput() AnalysisLineChartFieldWellsPtrOutput {
	return i.ToAnalysisLineChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisLineChartFieldWellsArgs) ToAnalysisLineChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisLineChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartFieldWellsOutput).ToAnalysisLineChartFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisLineChartFieldWellsPtrInput is an input type that accepts AnalysisLineChartFieldWellsArgs, AnalysisLineChartFieldWellsPtr and AnalysisLineChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisLineChartFieldWellsPtrInput` via:
//
//	        AnalysisLineChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisLineChartFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisLineChartFieldWellsPtrOutput() AnalysisLineChartFieldWellsPtrOutput
	ToAnalysisLineChartFieldWellsPtrOutputWithContext(context.Context) AnalysisLineChartFieldWellsPtrOutput
}

type analysisLineChartFieldWellsPtrType AnalysisLineChartFieldWellsArgs

func AnalysisLineChartFieldWellsPtr(v *AnalysisLineChartFieldWellsArgs) AnalysisLineChartFieldWellsPtrInput {
	return (*analysisLineChartFieldWellsPtrType)(v)
}

func (*analysisLineChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartFieldWells)(nil)).Elem()
}

func (i *analysisLineChartFieldWellsPtrType) ToAnalysisLineChartFieldWellsPtrOutput() AnalysisLineChartFieldWellsPtrOutput {
	return i.ToAnalysisLineChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisLineChartFieldWellsPtrType) ToAnalysisLineChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisLineChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartFieldWellsPtrOutput)
}

type AnalysisLineChartFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartFieldWells)(nil)).Elem()
}

func (o AnalysisLineChartFieldWellsOutput) ToAnalysisLineChartFieldWellsOutput() AnalysisLineChartFieldWellsOutput {
	return o
}

func (o AnalysisLineChartFieldWellsOutput) ToAnalysisLineChartFieldWellsOutputWithContext(ctx context.Context) AnalysisLineChartFieldWellsOutput {
	return o
}

func (o AnalysisLineChartFieldWellsOutput) ToAnalysisLineChartFieldWellsPtrOutput() AnalysisLineChartFieldWellsPtrOutput {
	return o.ToAnalysisLineChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartFieldWellsOutput) ToAnalysisLineChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisLineChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartFieldWells) *AnalysisLineChartFieldWells {
		return &v
	}).(AnalysisLineChartFieldWellsPtrOutput)
}

func (o AnalysisLineChartFieldWellsOutput) LineChartAggregatedFieldWells() AnalysisLineChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartFieldWells) *AnalysisLineChartAggregatedFieldWells {
		return v.LineChartAggregatedFieldWells
	}).(AnalysisLineChartAggregatedFieldWellsPtrOutput)
}

type AnalysisLineChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartFieldWells)(nil)).Elem()
}

func (o AnalysisLineChartFieldWellsPtrOutput) ToAnalysisLineChartFieldWellsPtrOutput() AnalysisLineChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisLineChartFieldWellsPtrOutput) ToAnalysisLineChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisLineChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisLineChartFieldWellsPtrOutput) Elem() AnalysisLineChartFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisLineChartFieldWells) AnalysisLineChartFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartFieldWells
		return ret
	}).(AnalysisLineChartFieldWellsOutput)
}

func (o AnalysisLineChartFieldWellsPtrOutput) LineChartAggregatedFieldWells() AnalysisLineChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartFieldWells) *AnalysisLineChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.LineChartAggregatedFieldWells
	}).(AnalysisLineChartAggregatedFieldWellsPtrOutput)
}

type AnalysisLineChartLineStyleSettings struct {
	LineInterpolation *AnalysisLineInterpolation  `pulumi:"lineInterpolation"`
	LineStyle         *AnalysisLineChartLineStyle `pulumi:"lineStyle"`
	LineVisibility    *AnalysisVisibility         `pulumi:"lineVisibility"`
	// String based length that is composed of value and unit in px
	LineWidth *string `pulumi:"lineWidth"`
}

// AnalysisLineChartLineStyleSettingsInput is an input type that accepts AnalysisLineChartLineStyleSettingsArgs and AnalysisLineChartLineStyleSettingsOutput values.
// You can construct a concrete instance of `AnalysisLineChartLineStyleSettingsInput` via:
//
//	AnalysisLineChartLineStyleSettingsArgs{...}
type AnalysisLineChartLineStyleSettingsInput interface {
	pulumi.Input

	ToAnalysisLineChartLineStyleSettingsOutput() AnalysisLineChartLineStyleSettingsOutput
	ToAnalysisLineChartLineStyleSettingsOutputWithContext(context.Context) AnalysisLineChartLineStyleSettingsOutput
}

type AnalysisLineChartLineStyleSettingsArgs struct {
	LineInterpolation AnalysisLineInterpolationPtrInput  `pulumi:"lineInterpolation"`
	LineStyle         AnalysisLineChartLineStylePtrInput `pulumi:"lineStyle"`
	LineVisibility    AnalysisVisibilityPtrInput         `pulumi:"lineVisibility"`
	// String based length that is composed of value and unit in px
	LineWidth pulumi.StringPtrInput `pulumi:"lineWidth"`
}

func (AnalysisLineChartLineStyleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartLineStyleSettings)(nil)).Elem()
}

func (i AnalysisLineChartLineStyleSettingsArgs) ToAnalysisLineChartLineStyleSettingsOutput() AnalysisLineChartLineStyleSettingsOutput {
	return i.ToAnalysisLineChartLineStyleSettingsOutputWithContext(context.Background())
}

func (i AnalysisLineChartLineStyleSettingsArgs) ToAnalysisLineChartLineStyleSettingsOutputWithContext(ctx context.Context) AnalysisLineChartLineStyleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartLineStyleSettingsOutput)
}

func (i AnalysisLineChartLineStyleSettingsArgs) ToAnalysisLineChartLineStyleSettingsPtrOutput() AnalysisLineChartLineStyleSettingsPtrOutput {
	return i.ToAnalysisLineChartLineStyleSettingsPtrOutputWithContext(context.Background())
}

func (i AnalysisLineChartLineStyleSettingsArgs) ToAnalysisLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartLineStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartLineStyleSettingsOutput).ToAnalysisLineChartLineStyleSettingsPtrOutputWithContext(ctx)
}

// AnalysisLineChartLineStyleSettingsPtrInput is an input type that accepts AnalysisLineChartLineStyleSettingsArgs, AnalysisLineChartLineStyleSettingsPtr and AnalysisLineChartLineStyleSettingsPtrOutput values.
// You can construct a concrete instance of `AnalysisLineChartLineStyleSettingsPtrInput` via:
//
//	        AnalysisLineChartLineStyleSettingsArgs{...}
//
//	or:
//
//	        nil
type AnalysisLineChartLineStyleSettingsPtrInput interface {
	pulumi.Input

	ToAnalysisLineChartLineStyleSettingsPtrOutput() AnalysisLineChartLineStyleSettingsPtrOutput
	ToAnalysisLineChartLineStyleSettingsPtrOutputWithContext(context.Context) AnalysisLineChartLineStyleSettingsPtrOutput
}

type analysisLineChartLineStyleSettingsPtrType AnalysisLineChartLineStyleSettingsArgs

func AnalysisLineChartLineStyleSettingsPtr(v *AnalysisLineChartLineStyleSettingsArgs) AnalysisLineChartLineStyleSettingsPtrInput {
	return (*analysisLineChartLineStyleSettingsPtrType)(v)
}

func (*analysisLineChartLineStyleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartLineStyleSettings)(nil)).Elem()
}

func (i *analysisLineChartLineStyleSettingsPtrType) ToAnalysisLineChartLineStyleSettingsPtrOutput() AnalysisLineChartLineStyleSettingsPtrOutput {
	return i.ToAnalysisLineChartLineStyleSettingsPtrOutputWithContext(context.Background())
}

func (i *analysisLineChartLineStyleSettingsPtrType) ToAnalysisLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartLineStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartLineStyleSettingsPtrOutput)
}

type AnalysisLineChartLineStyleSettingsOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartLineStyleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartLineStyleSettings)(nil)).Elem()
}

func (o AnalysisLineChartLineStyleSettingsOutput) ToAnalysisLineChartLineStyleSettingsOutput() AnalysisLineChartLineStyleSettingsOutput {
	return o
}

func (o AnalysisLineChartLineStyleSettingsOutput) ToAnalysisLineChartLineStyleSettingsOutputWithContext(ctx context.Context) AnalysisLineChartLineStyleSettingsOutput {
	return o
}

func (o AnalysisLineChartLineStyleSettingsOutput) ToAnalysisLineChartLineStyleSettingsPtrOutput() AnalysisLineChartLineStyleSettingsPtrOutput {
	return o.ToAnalysisLineChartLineStyleSettingsPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartLineStyleSettingsOutput) ToAnalysisLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartLineStyleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartLineStyleSettings) *AnalysisLineChartLineStyleSettings {
		return &v
	}).(AnalysisLineChartLineStyleSettingsPtrOutput)
}

func (o AnalysisLineChartLineStyleSettingsOutput) LineInterpolation() AnalysisLineInterpolationPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartLineStyleSettings) *AnalysisLineInterpolation { return v.LineInterpolation }).(AnalysisLineInterpolationPtrOutput)
}

func (o AnalysisLineChartLineStyleSettingsOutput) LineStyle() AnalysisLineChartLineStylePtrOutput {
	return o.ApplyT(func(v AnalysisLineChartLineStyleSettings) *AnalysisLineChartLineStyle { return v.LineStyle }).(AnalysisLineChartLineStylePtrOutput)
}

func (o AnalysisLineChartLineStyleSettingsOutput) LineVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartLineStyleSettings) *AnalysisVisibility { return v.LineVisibility }).(AnalysisVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisLineChartLineStyleSettingsOutput) LineWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartLineStyleSettings) *string { return v.LineWidth }).(pulumi.StringPtrOutput)
}

type AnalysisLineChartLineStyleSettingsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartLineStyleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartLineStyleSettings)(nil)).Elem()
}

func (o AnalysisLineChartLineStyleSettingsPtrOutput) ToAnalysisLineChartLineStyleSettingsPtrOutput() AnalysisLineChartLineStyleSettingsPtrOutput {
	return o
}

func (o AnalysisLineChartLineStyleSettingsPtrOutput) ToAnalysisLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartLineStyleSettingsPtrOutput {
	return o
}

func (o AnalysisLineChartLineStyleSettingsPtrOutput) Elem() AnalysisLineChartLineStyleSettingsOutput {
	return o.ApplyT(func(v *AnalysisLineChartLineStyleSettings) AnalysisLineChartLineStyleSettings {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartLineStyleSettings
		return ret
	}).(AnalysisLineChartLineStyleSettingsOutput)
}

func (o AnalysisLineChartLineStyleSettingsPtrOutput) LineInterpolation() AnalysisLineInterpolationPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartLineStyleSettings) *AnalysisLineInterpolation {
		if v == nil {
			return nil
		}
		return v.LineInterpolation
	}).(AnalysisLineInterpolationPtrOutput)
}

func (o AnalysisLineChartLineStyleSettingsPtrOutput) LineStyle() AnalysisLineChartLineStylePtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartLineStyleSettings) *AnalysisLineChartLineStyle {
		if v == nil {
			return nil
		}
		return v.LineStyle
	}).(AnalysisLineChartLineStylePtrOutput)
}

func (o AnalysisLineChartLineStyleSettingsPtrOutput) LineVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartLineStyleSettings) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.LineVisibility
	}).(AnalysisVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisLineChartLineStyleSettingsPtrOutput) LineWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartLineStyleSettings) *string {
		if v == nil {
			return nil
		}
		return v.LineWidth
	}).(pulumi.StringPtrOutput)
}

type AnalysisLineChartMarkerStyleSettings struct {
	MarkerColor *string                       `pulumi:"markerColor"`
	MarkerShape *AnalysisLineChartMarkerShape `pulumi:"markerShape"`
	// String based length that is composed of value and unit in px
	MarkerSize       *string             `pulumi:"markerSize"`
	MarkerVisibility *AnalysisVisibility `pulumi:"markerVisibility"`
}

// AnalysisLineChartMarkerStyleSettingsInput is an input type that accepts AnalysisLineChartMarkerStyleSettingsArgs and AnalysisLineChartMarkerStyleSettingsOutput values.
// You can construct a concrete instance of `AnalysisLineChartMarkerStyleSettingsInput` via:
//
//	AnalysisLineChartMarkerStyleSettingsArgs{...}
type AnalysisLineChartMarkerStyleSettingsInput interface {
	pulumi.Input

	ToAnalysisLineChartMarkerStyleSettingsOutput() AnalysisLineChartMarkerStyleSettingsOutput
	ToAnalysisLineChartMarkerStyleSettingsOutputWithContext(context.Context) AnalysisLineChartMarkerStyleSettingsOutput
}

type AnalysisLineChartMarkerStyleSettingsArgs struct {
	MarkerColor pulumi.StringPtrInput                `pulumi:"markerColor"`
	MarkerShape AnalysisLineChartMarkerShapePtrInput `pulumi:"markerShape"`
	// String based length that is composed of value and unit in px
	MarkerSize       pulumi.StringPtrInput      `pulumi:"markerSize"`
	MarkerVisibility AnalysisVisibilityPtrInput `pulumi:"markerVisibility"`
}

func (AnalysisLineChartMarkerStyleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartMarkerStyleSettings)(nil)).Elem()
}

func (i AnalysisLineChartMarkerStyleSettingsArgs) ToAnalysisLineChartMarkerStyleSettingsOutput() AnalysisLineChartMarkerStyleSettingsOutput {
	return i.ToAnalysisLineChartMarkerStyleSettingsOutputWithContext(context.Background())
}

func (i AnalysisLineChartMarkerStyleSettingsArgs) ToAnalysisLineChartMarkerStyleSettingsOutputWithContext(ctx context.Context) AnalysisLineChartMarkerStyleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartMarkerStyleSettingsOutput)
}

func (i AnalysisLineChartMarkerStyleSettingsArgs) ToAnalysisLineChartMarkerStyleSettingsPtrOutput() AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return i.ToAnalysisLineChartMarkerStyleSettingsPtrOutputWithContext(context.Background())
}

func (i AnalysisLineChartMarkerStyleSettingsArgs) ToAnalysisLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartMarkerStyleSettingsOutput).ToAnalysisLineChartMarkerStyleSettingsPtrOutputWithContext(ctx)
}

// AnalysisLineChartMarkerStyleSettingsPtrInput is an input type that accepts AnalysisLineChartMarkerStyleSettingsArgs, AnalysisLineChartMarkerStyleSettingsPtr and AnalysisLineChartMarkerStyleSettingsPtrOutput values.
// You can construct a concrete instance of `AnalysisLineChartMarkerStyleSettingsPtrInput` via:
//
//	        AnalysisLineChartMarkerStyleSettingsArgs{...}
//
//	or:
//
//	        nil
type AnalysisLineChartMarkerStyleSettingsPtrInput interface {
	pulumi.Input

	ToAnalysisLineChartMarkerStyleSettingsPtrOutput() AnalysisLineChartMarkerStyleSettingsPtrOutput
	ToAnalysisLineChartMarkerStyleSettingsPtrOutputWithContext(context.Context) AnalysisLineChartMarkerStyleSettingsPtrOutput
}

type analysisLineChartMarkerStyleSettingsPtrType AnalysisLineChartMarkerStyleSettingsArgs

func AnalysisLineChartMarkerStyleSettingsPtr(v *AnalysisLineChartMarkerStyleSettingsArgs) AnalysisLineChartMarkerStyleSettingsPtrInput {
	return (*analysisLineChartMarkerStyleSettingsPtrType)(v)
}

func (*analysisLineChartMarkerStyleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartMarkerStyleSettings)(nil)).Elem()
}

func (i *analysisLineChartMarkerStyleSettingsPtrType) ToAnalysisLineChartMarkerStyleSettingsPtrOutput() AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return i.ToAnalysisLineChartMarkerStyleSettingsPtrOutputWithContext(context.Background())
}

func (i *analysisLineChartMarkerStyleSettingsPtrType) ToAnalysisLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartMarkerStyleSettingsPtrOutput)
}

type AnalysisLineChartMarkerStyleSettingsOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartMarkerStyleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartMarkerStyleSettings)(nil)).Elem()
}

func (o AnalysisLineChartMarkerStyleSettingsOutput) ToAnalysisLineChartMarkerStyleSettingsOutput() AnalysisLineChartMarkerStyleSettingsOutput {
	return o
}

func (o AnalysisLineChartMarkerStyleSettingsOutput) ToAnalysisLineChartMarkerStyleSettingsOutputWithContext(ctx context.Context) AnalysisLineChartMarkerStyleSettingsOutput {
	return o
}

func (o AnalysisLineChartMarkerStyleSettingsOutput) ToAnalysisLineChartMarkerStyleSettingsPtrOutput() AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return o.ToAnalysisLineChartMarkerStyleSettingsPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartMarkerStyleSettingsOutput) ToAnalysisLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartMarkerStyleSettings) *AnalysisLineChartMarkerStyleSettings {
		return &v
	}).(AnalysisLineChartMarkerStyleSettingsPtrOutput)
}

func (o AnalysisLineChartMarkerStyleSettingsOutput) MarkerColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartMarkerStyleSettings) *string { return v.MarkerColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisLineChartMarkerStyleSettingsOutput) MarkerShape() AnalysisLineChartMarkerShapePtrOutput {
	return o.ApplyT(func(v AnalysisLineChartMarkerStyleSettings) *AnalysisLineChartMarkerShape { return v.MarkerShape }).(AnalysisLineChartMarkerShapePtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisLineChartMarkerStyleSettingsOutput) MarkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartMarkerStyleSettings) *string { return v.MarkerSize }).(pulumi.StringPtrOutput)
}

func (o AnalysisLineChartMarkerStyleSettingsOutput) MarkerVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartMarkerStyleSettings) *AnalysisVisibility { return v.MarkerVisibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisLineChartMarkerStyleSettingsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartMarkerStyleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartMarkerStyleSettings)(nil)).Elem()
}

func (o AnalysisLineChartMarkerStyleSettingsPtrOutput) ToAnalysisLineChartMarkerStyleSettingsPtrOutput() AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return o
}

func (o AnalysisLineChartMarkerStyleSettingsPtrOutput) ToAnalysisLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return o
}

func (o AnalysisLineChartMarkerStyleSettingsPtrOutput) Elem() AnalysisLineChartMarkerStyleSettingsOutput {
	return o.ApplyT(func(v *AnalysisLineChartMarkerStyleSettings) AnalysisLineChartMarkerStyleSettings {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartMarkerStyleSettings
		return ret
	}).(AnalysisLineChartMarkerStyleSettingsOutput)
}

func (o AnalysisLineChartMarkerStyleSettingsPtrOutput) MarkerColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartMarkerStyleSettings) *string {
		if v == nil {
			return nil
		}
		return v.MarkerColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisLineChartMarkerStyleSettingsPtrOutput) MarkerShape() AnalysisLineChartMarkerShapePtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartMarkerStyleSettings) *AnalysisLineChartMarkerShape {
		if v == nil {
			return nil
		}
		return v.MarkerShape
	}).(AnalysisLineChartMarkerShapePtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisLineChartMarkerStyleSettingsPtrOutput) MarkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartMarkerStyleSettings) *string {
		if v == nil {
			return nil
		}
		return v.MarkerSize
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisLineChartMarkerStyleSettingsPtrOutput) MarkerVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartMarkerStyleSettings) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.MarkerVisibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisLineChartSeriesSettings struct {
	LineStyleSettings   *AnalysisLineChartLineStyleSettings   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings *AnalysisLineChartMarkerStyleSettings `pulumi:"markerStyleSettings"`
}

// AnalysisLineChartSeriesSettingsInput is an input type that accepts AnalysisLineChartSeriesSettingsArgs and AnalysisLineChartSeriesSettingsOutput values.
// You can construct a concrete instance of `AnalysisLineChartSeriesSettingsInput` via:
//
//	AnalysisLineChartSeriesSettingsArgs{...}
type AnalysisLineChartSeriesSettingsInput interface {
	pulumi.Input

	ToAnalysisLineChartSeriesSettingsOutput() AnalysisLineChartSeriesSettingsOutput
	ToAnalysisLineChartSeriesSettingsOutputWithContext(context.Context) AnalysisLineChartSeriesSettingsOutput
}

type AnalysisLineChartSeriesSettingsArgs struct {
	LineStyleSettings   AnalysisLineChartLineStyleSettingsPtrInput   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings AnalysisLineChartMarkerStyleSettingsPtrInput `pulumi:"markerStyleSettings"`
}

func (AnalysisLineChartSeriesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartSeriesSettings)(nil)).Elem()
}

func (i AnalysisLineChartSeriesSettingsArgs) ToAnalysisLineChartSeriesSettingsOutput() AnalysisLineChartSeriesSettingsOutput {
	return i.ToAnalysisLineChartSeriesSettingsOutputWithContext(context.Background())
}

func (i AnalysisLineChartSeriesSettingsArgs) ToAnalysisLineChartSeriesSettingsOutputWithContext(ctx context.Context) AnalysisLineChartSeriesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartSeriesSettingsOutput)
}

func (i AnalysisLineChartSeriesSettingsArgs) ToAnalysisLineChartSeriesSettingsPtrOutput() AnalysisLineChartSeriesSettingsPtrOutput {
	return i.ToAnalysisLineChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i AnalysisLineChartSeriesSettingsArgs) ToAnalysisLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartSeriesSettingsOutput).ToAnalysisLineChartSeriesSettingsPtrOutputWithContext(ctx)
}

// AnalysisLineChartSeriesSettingsPtrInput is an input type that accepts AnalysisLineChartSeriesSettingsArgs, AnalysisLineChartSeriesSettingsPtr and AnalysisLineChartSeriesSettingsPtrOutput values.
// You can construct a concrete instance of `AnalysisLineChartSeriesSettingsPtrInput` via:
//
//	        AnalysisLineChartSeriesSettingsArgs{...}
//
//	or:
//
//	        nil
type AnalysisLineChartSeriesSettingsPtrInput interface {
	pulumi.Input

	ToAnalysisLineChartSeriesSettingsPtrOutput() AnalysisLineChartSeriesSettingsPtrOutput
	ToAnalysisLineChartSeriesSettingsPtrOutputWithContext(context.Context) AnalysisLineChartSeriesSettingsPtrOutput
}

type analysisLineChartSeriesSettingsPtrType AnalysisLineChartSeriesSettingsArgs

func AnalysisLineChartSeriesSettingsPtr(v *AnalysisLineChartSeriesSettingsArgs) AnalysisLineChartSeriesSettingsPtrInput {
	return (*analysisLineChartSeriesSettingsPtrType)(v)
}

func (*analysisLineChartSeriesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartSeriesSettings)(nil)).Elem()
}

func (i *analysisLineChartSeriesSettingsPtrType) ToAnalysisLineChartSeriesSettingsPtrOutput() AnalysisLineChartSeriesSettingsPtrOutput {
	return i.ToAnalysisLineChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i *analysisLineChartSeriesSettingsPtrType) ToAnalysisLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartSeriesSettingsPtrOutput)
}

type AnalysisLineChartSeriesSettingsOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartSeriesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartSeriesSettings)(nil)).Elem()
}

func (o AnalysisLineChartSeriesSettingsOutput) ToAnalysisLineChartSeriesSettingsOutput() AnalysisLineChartSeriesSettingsOutput {
	return o
}

func (o AnalysisLineChartSeriesSettingsOutput) ToAnalysisLineChartSeriesSettingsOutputWithContext(ctx context.Context) AnalysisLineChartSeriesSettingsOutput {
	return o
}

func (o AnalysisLineChartSeriesSettingsOutput) ToAnalysisLineChartSeriesSettingsPtrOutput() AnalysisLineChartSeriesSettingsPtrOutput {
	return o.ToAnalysisLineChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartSeriesSettingsOutput) ToAnalysisLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartSeriesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartSeriesSettings) *AnalysisLineChartSeriesSettings {
		return &v
	}).(AnalysisLineChartSeriesSettingsPtrOutput)
}

func (o AnalysisLineChartSeriesSettingsOutput) LineStyleSettings() AnalysisLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartSeriesSettings) *AnalysisLineChartLineStyleSettings {
		return v.LineStyleSettings
	}).(AnalysisLineChartLineStyleSettingsPtrOutput)
}

func (o AnalysisLineChartSeriesSettingsOutput) MarkerStyleSettings() AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartSeriesSettings) *AnalysisLineChartMarkerStyleSettings {
		return v.MarkerStyleSettings
	}).(AnalysisLineChartMarkerStyleSettingsPtrOutput)
}

type AnalysisLineChartSeriesSettingsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartSeriesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartSeriesSettings)(nil)).Elem()
}

func (o AnalysisLineChartSeriesSettingsPtrOutput) ToAnalysisLineChartSeriesSettingsPtrOutput() AnalysisLineChartSeriesSettingsPtrOutput {
	return o
}

func (o AnalysisLineChartSeriesSettingsPtrOutput) ToAnalysisLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisLineChartSeriesSettingsPtrOutput {
	return o
}

func (o AnalysisLineChartSeriesSettingsPtrOutput) Elem() AnalysisLineChartSeriesSettingsOutput {
	return o.ApplyT(func(v *AnalysisLineChartSeriesSettings) AnalysisLineChartSeriesSettings {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartSeriesSettings
		return ret
	}).(AnalysisLineChartSeriesSettingsOutput)
}

func (o AnalysisLineChartSeriesSettingsPtrOutput) LineStyleSettings() AnalysisLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartSeriesSettings) *AnalysisLineChartLineStyleSettings {
		if v == nil {
			return nil
		}
		return v.LineStyleSettings
	}).(AnalysisLineChartLineStyleSettingsPtrOutput)
}

func (o AnalysisLineChartSeriesSettingsPtrOutput) MarkerStyleSettings() AnalysisLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartSeriesSettings) *AnalysisLineChartMarkerStyleSettings {
		if v == nil {
			return nil
		}
		return v.MarkerStyleSettings
	}).(AnalysisLineChartMarkerStyleSettingsPtrOutput)
}

type AnalysisLineChartSortConfiguration struct {
	CategoryItemsLimitConfiguration  *AnalysisItemsLimitConfiguration `pulumi:"categoryItemsLimitConfiguration"`
	CategorySort                     []AnalysisFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimitConfiguration     *AnalysisItemsLimitConfiguration `pulumi:"colorItemsLimitConfiguration"`
	SmallMultiplesLimitConfiguration *AnalysisItemsLimitConfiguration `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               []AnalysisFieldSortOptions       `pulumi:"smallMultiplesSort"`
}

// AnalysisLineChartSortConfigurationInput is an input type that accepts AnalysisLineChartSortConfigurationArgs and AnalysisLineChartSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisLineChartSortConfigurationInput` via:
//
//	AnalysisLineChartSortConfigurationArgs{...}
type AnalysisLineChartSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisLineChartSortConfigurationOutput() AnalysisLineChartSortConfigurationOutput
	ToAnalysisLineChartSortConfigurationOutputWithContext(context.Context) AnalysisLineChartSortConfigurationOutput
}

type AnalysisLineChartSortConfigurationArgs struct {
	CategoryItemsLimitConfiguration  AnalysisItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimitConfiguration"`
	CategorySort                     AnalysisFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimitConfiguration     AnalysisItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimitConfiguration"`
	SmallMultiplesLimitConfiguration AnalysisItemsLimitConfigurationPtrInput `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               AnalysisFieldSortOptionsArrayInput      `pulumi:"smallMultiplesSort"`
}

func (AnalysisLineChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartSortConfiguration)(nil)).Elem()
}

func (i AnalysisLineChartSortConfigurationArgs) ToAnalysisLineChartSortConfigurationOutput() AnalysisLineChartSortConfigurationOutput {
	return i.ToAnalysisLineChartSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisLineChartSortConfigurationArgs) ToAnalysisLineChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisLineChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartSortConfigurationOutput)
}

func (i AnalysisLineChartSortConfigurationArgs) ToAnalysisLineChartSortConfigurationPtrOutput() AnalysisLineChartSortConfigurationPtrOutput {
	return i.ToAnalysisLineChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisLineChartSortConfigurationArgs) ToAnalysisLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLineChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartSortConfigurationOutput).ToAnalysisLineChartSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisLineChartSortConfigurationPtrInput is an input type that accepts AnalysisLineChartSortConfigurationArgs, AnalysisLineChartSortConfigurationPtr and AnalysisLineChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisLineChartSortConfigurationPtrInput` via:
//
//	        AnalysisLineChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisLineChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisLineChartSortConfigurationPtrOutput() AnalysisLineChartSortConfigurationPtrOutput
	ToAnalysisLineChartSortConfigurationPtrOutputWithContext(context.Context) AnalysisLineChartSortConfigurationPtrOutput
}

type analysisLineChartSortConfigurationPtrType AnalysisLineChartSortConfigurationArgs

func AnalysisLineChartSortConfigurationPtr(v *AnalysisLineChartSortConfigurationArgs) AnalysisLineChartSortConfigurationPtrInput {
	return (*analysisLineChartSortConfigurationPtrType)(v)
}

func (*analysisLineChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartSortConfiguration)(nil)).Elem()
}

func (i *analysisLineChartSortConfigurationPtrType) ToAnalysisLineChartSortConfigurationPtrOutput() AnalysisLineChartSortConfigurationPtrOutput {
	return i.ToAnalysisLineChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisLineChartSortConfigurationPtrType) ToAnalysisLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLineChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartSortConfigurationPtrOutput)
}

type AnalysisLineChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisLineChartSortConfigurationOutput) ToAnalysisLineChartSortConfigurationOutput() AnalysisLineChartSortConfigurationOutput {
	return o
}

func (o AnalysisLineChartSortConfigurationOutput) ToAnalysisLineChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisLineChartSortConfigurationOutput {
	return o
}

func (o AnalysisLineChartSortConfigurationOutput) ToAnalysisLineChartSortConfigurationPtrOutput() AnalysisLineChartSortConfigurationPtrOutput {
	return o.ToAnalysisLineChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartSortConfigurationOutput) ToAnalysisLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLineChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartSortConfiguration) *AnalysisLineChartSortConfiguration {
		return &v
	}).(AnalysisLineChartSortConfigurationPtrOutput)
}

func (o AnalysisLineChartSortConfigurationOutput) CategoryItemsLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.CategoryItemsLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisLineChartSortConfigurationOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartSortConfiguration) []AnalysisFieldSortOptions { return v.CategorySort }).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisLineChartSortConfigurationOutput) ColorItemsLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.ColorItemsLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisLineChartSortConfigurationOutput) SmallMultiplesLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.SmallMultiplesLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisLineChartSortConfigurationOutput) SmallMultiplesSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartSortConfiguration) []AnalysisFieldSortOptions { return v.SmallMultiplesSort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisLineChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisLineChartSortConfigurationPtrOutput) ToAnalysisLineChartSortConfigurationPtrOutput() AnalysisLineChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisLineChartSortConfigurationPtrOutput) ToAnalysisLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLineChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisLineChartSortConfigurationPtrOutput) Elem() AnalysisLineChartSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisLineChartSortConfiguration) AnalysisLineChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartSortConfiguration
		return ret
	}).(AnalysisLineChartSortConfigurationOutput)
}

func (o AnalysisLineChartSortConfigurationPtrOutput) CategoryItemsLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisLineChartSortConfigurationPtrOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisLineChartSortConfigurationPtrOutput) ColorItemsLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisLineChartSortConfigurationPtrOutput) SmallMultiplesLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisLineChartSortConfigurationPtrOutput) SmallMultiplesSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisLineChartVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisLineChartConfiguration     `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisLineChartVisualInput is an input type that accepts AnalysisLineChartVisualArgs and AnalysisLineChartVisualOutput values.
// You can construct a concrete instance of `AnalysisLineChartVisualInput` via:
//
//	AnalysisLineChartVisualArgs{...}
type AnalysisLineChartVisualInput interface {
	pulumi.Input

	ToAnalysisLineChartVisualOutput() AnalysisLineChartVisualOutput
	ToAnalysisLineChartVisualOutputWithContext(context.Context) AnalysisLineChartVisualOutput
}

type AnalysisLineChartVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisLineChartConfigurationPtrInput     `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisLineChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartVisual)(nil)).Elem()
}

func (i AnalysisLineChartVisualArgs) ToAnalysisLineChartVisualOutput() AnalysisLineChartVisualOutput {
	return i.ToAnalysisLineChartVisualOutputWithContext(context.Background())
}

func (i AnalysisLineChartVisualArgs) ToAnalysisLineChartVisualOutputWithContext(ctx context.Context) AnalysisLineChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartVisualOutput)
}

func (i AnalysisLineChartVisualArgs) ToAnalysisLineChartVisualPtrOutput() AnalysisLineChartVisualPtrOutput {
	return i.ToAnalysisLineChartVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisLineChartVisualArgs) ToAnalysisLineChartVisualPtrOutputWithContext(ctx context.Context) AnalysisLineChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartVisualOutput).ToAnalysisLineChartVisualPtrOutputWithContext(ctx)
}

// AnalysisLineChartVisualPtrInput is an input type that accepts AnalysisLineChartVisualArgs, AnalysisLineChartVisualPtr and AnalysisLineChartVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisLineChartVisualPtrInput` via:
//
//	        AnalysisLineChartVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisLineChartVisualPtrInput interface {
	pulumi.Input

	ToAnalysisLineChartVisualPtrOutput() AnalysisLineChartVisualPtrOutput
	ToAnalysisLineChartVisualPtrOutputWithContext(context.Context) AnalysisLineChartVisualPtrOutput
}

type analysisLineChartVisualPtrType AnalysisLineChartVisualArgs

func AnalysisLineChartVisualPtr(v *AnalysisLineChartVisualArgs) AnalysisLineChartVisualPtrInput {
	return (*analysisLineChartVisualPtrType)(v)
}

func (*analysisLineChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartVisual)(nil)).Elem()
}

func (i *analysisLineChartVisualPtrType) ToAnalysisLineChartVisualPtrOutput() AnalysisLineChartVisualPtrOutput {
	return i.ToAnalysisLineChartVisualPtrOutputWithContext(context.Background())
}

func (i *analysisLineChartVisualPtrType) ToAnalysisLineChartVisualPtrOutputWithContext(ctx context.Context) AnalysisLineChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineChartVisualPtrOutput)
}

type AnalysisLineChartVisualOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartVisual)(nil)).Elem()
}

func (o AnalysisLineChartVisualOutput) ToAnalysisLineChartVisualOutput() AnalysisLineChartVisualOutput {
	return o
}

func (o AnalysisLineChartVisualOutput) ToAnalysisLineChartVisualOutputWithContext(ctx context.Context) AnalysisLineChartVisualOutput {
	return o
}

func (o AnalysisLineChartVisualOutput) ToAnalysisLineChartVisualPtrOutput() AnalysisLineChartVisualPtrOutput {
	return o.ToAnalysisLineChartVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartVisualOutput) ToAnalysisLineChartVisualPtrOutputWithContext(ctx context.Context) AnalysisLineChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartVisual) *AnalysisLineChartVisual {
		return &v
	}).(AnalysisLineChartVisualPtrOutput)
}

func (o AnalysisLineChartVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisLineChartVisualOutput) ChartConfiguration() AnalysisLineChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartVisual) *AnalysisLineChartConfiguration { return v.ChartConfiguration }).(AnalysisLineChartConfigurationPtrOutput)
}

func (o AnalysisLineChartVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisLineChartVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisLineChartVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisLineChartVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineChartVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisLineChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisLineChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisLineChartVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartVisual)(nil)).Elem()
}

func (o AnalysisLineChartVisualPtrOutput) ToAnalysisLineChartVisualPtrOutput() AnalysisLineChartVisualPtrOutput {
	return o
}

func (o AnalysisLineChartVisualPtrOutput) ToAnalysisLineChartVisualPtrOutputWithContext(ctx context.Context) AnalysisLineChartVisualPtrOutput {
	return o
}

func (o AnalysisLineChartVisualPtrOutput) Elem() AnalysisLineChartVisualOutput {
	return o.ApplyT(func(v *AnalysisLineChartVisual) AnalysisLineChartVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartVisual
		return ret
	}).(AnalysisLineChartVisualOutput)
}

func (o AnalysisLineChartVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisLineChartVisualPtrOutput) ChartConfiguration() AnalysisLineChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartVisual) *AnalysisLineChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisLineChartConfigurationPtrOutput)
}

func (o AnalysisLineChartVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisLineChartVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisLineChartVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisLineChartVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisLineChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisLineChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisLineSeriesAxisDisplayOptions struct {
	AxisOptions               *AnalysisAxisDisplayOptions        `pulumi:"axisOptions"`
	MissingDataConfigurations []AnalysisMissingDataConfiguration `pulumi:"missingDataConfigurations"`
}

// AnalysisLineSeriesAxisDisplayOptionsInput is an input type that accepts AnalysisLineSeriesAxisDisplayOptionsArgs and AnalysisLineSeriesAxisDisplayOptionsOutput values.
// You can construct a concrete instance of `AnalysisLineSeriesAxisDisplayOptionsInput` via:
//
//	AnalysisLineSeriesAxisDisplayOptionsArgs{...}
type AnalysisLineSeriesAxisDisplayOptionsInput interface {
	pulumi.Input

	ToAnalysisLineSeriesAxisDisplayOptionsOutput() AnalysisLineSeriesAxisDisplayOptionsOutput
	ToAnalysisLineSeriesAxisDisplayOptionsOutputWithContext(context.Context) AnalysisLineSeriesAxisDisplayOptionsOutput
}

type AnalysisLineSeriesAxisDisplayOptionsArgs struct {
	AxisOptions               AnalysisAxisDisplayOptionsPtrInput         `pulumi:"axisOptions"`
	MissingDataConfigurations AnalysisMissingDataConfigurationArrayInput `pulumi:"missingDataConfigurations"`
}

func (AnalysisLineSeriesAxisDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (i AnalysisLineSeriesAxisDisplayOptionsArgs) ToAnalysisLineSeriesAxisDisplayOptionsOutput() AnalysisLineSeriesAxisDisplayOptionsOutput {
	return i.ToAnalysisLineSeriesAxisDisplayOptionsOutputWithContext(context.Background())
}

func (i AnalysisLineSeriesAxisDisplayOptionsArgs) ToAnalysisLineSeriesAxisDisplayOptionsOutputWithContext(ctx context.Context) AnalysisLineSeriesAxisDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineSeriesAxisDisplayOptionsOutput)
}

func (i AnalysisLineSeriesAxisDisplayOptionsArgs) ToAnalysisLineSeriesAxisDisplayOptionsPtrOutput() AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return i.ToAnalysisLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisLineSeriesAxisDisplayOptionsArgs) ToAnalysisLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineSeriesAxisDisplayOptionsOutput).ToAnalysisLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx)
}

// AnalysisLineSeriesAxisDisplayOptionsPtrInput is an input type that accepts AnalysisLineSeriesAxisDisplayOptionsArgs, AnalysisLineSeriesAxisDisplayOptionsPtr and AnalysisLineSeriesAxisDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisLineSeriesAxisDisplayOptionsPtrInput` via:
//
//	        AnalysisLineSeriesAxisDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisLineSeriesAxisDisplayOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisLineSeriesAxisDisplayOptionsPtrOutput() AnalysisLineSeriesAxisDisplayOptionsPtrOutput
	ToAnalysisLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Context) AnalysisLineSeriesAxisDisplayOptionsPtrOutput
}

type analysisLineSeriesAxisDisplayOptionsPtrType AnalysisLineSeriesAxisDisplayOptionsArgs

func AnalysisLineSeriesAxisDisplayOptionsPtr(v *AnalysisLineSeriesAxisDisplayOptionsArgs) AnalysisLineSeriesAxisDisplayOptionsPtrInput {
	return (*analysisLineSeriesAxisDisplayOptionsPtrType)(v)
}

func (*analysisLineSeriesAxisDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (i *analysisLineSeriesAxisDisplayOptionsPtrType) ToAnalysisLineSeriesAxisDisplayOptionsPtrOutput() AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return i.ToAnalysisLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisLineSeriesAxisDisplayOptionsPtrType) ToAnalysisLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLineSeriesAxisDisplayOptionsPtrOutput)
}

type AnalysisLineSeriesAxisDisplayOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisLineSeriesAxisDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (o AnalysisLineSeriesAxisDisplayOptionsOutput) ToAnalysisLineSeriesAxisDisplayOptionsOutput() AnalysisLineSeriesAxisDisplayOptionsOutput {
	return o
}

func (o AnalysisLineSeriesAxisDisplayOptionsOutput) ToAnalysisLineSeriesAxisDisplayOptionsOutputWithContext(ctx context.Context) AnalysisLineSeriesAxisDisplayOptionsOutput {
	return o
}

func (o AnalysisLineSeriesAxisDisplayOptionsOutput) ToAnalysisLineSeriesAxisDisplayOptionsPtrOutput() AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ToAnalysisLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisLineSeriesAxisDisplayOptionsOutput) ToAnalysisLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineSeriesAxisDisplayOptions) *AnalysisLineSeriesAxisDisplayOptions {
		return &v
	}).(AnalysisLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o AnalysisLineSeriesAxisDisplayOptionsOutput) AxisOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisLineSeriesAxisDisplayOptions) *AnalysisAxisDisplayOptions { return v.AxisOptions }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisLineSeriesAxisDisplayOptionsOutput) MissingDataConfigurations() AnalysisMissingDataConfigurationArrayOutput {
	return o.ApplyT(func(v AnalysisLineSeriesAxisDisplayOptions) []AnalysisMissingDataConfiguration {
		return v.MissingDataConfigurations
	}).(AnalysisMissingDataConfigurationArrayOutput)
}

type AnalysisLineSeriesAxisDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineSeriesAxisDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (o AnalysisLineSeriesAxisDisplayOptionsPtrOutput) ToAnalysisLineSeriesAxisDisplayOptionsPtrOutput() AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisLineSeriesAxisDisplayOptionsPtrOutput) ToAnalysisLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisLineSeriesAxisDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisLineSeriesAxisDisplayOptionsPtrOutput) Elem() AnalysisLineSeriesAxisDisplayOptionsOutput {
	return o.ApplyT(func(v *AnalysisLineSeriesAxisDisplayOptions) AnalysisLineSeriesAxisDisplayOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisLineSeriesAxisDisplayOptions
		return ret
	}).(AnalysisLineSeriesAxisDisplayOptionsOutput)
}

func (o AnalysisLineSeriesAxisDisplayOptionsPtrOutput) AxisOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisLineSeriesAxisDisplayOptions) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.AxisOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisLineSeriesAxisDisplayOptionsPtrOutput) MissingDataConfigurations() AnalysisMissingDataConfigurationArrayOutput {
	return o.ApplyT(func(v *AnalysisLineSeriesAxisDisplayOptions) []AnalysisMissingDataConfiguration {
		if v == nil {
			return nil
		}
		return v.MissingDataConfigurations
	}).(AnalysisMissingDataConfigurationArrayOutput)
}

type AnalysisListControlDisplayOptions struct {
	SearchOptions    *AnalysisListControlSearchOptions    `pulumi:"searchOptions"`
	SelectAllOptions *AnalysisListControlSelectAllOptions `pulumi:"selectAllOptions"`
	TitleOptions     *AnalysisLabelOptions                `pulumi:"titleOptions"`
}

// AnalysisListControlDisplayOptionsInput is an input type that accepts AnalysisListControlDisplayOptionsArgs and AnalysisListControlDisplayOptionsOutput values.
// You can construct a concrete instance of `AnalysisListControlDisplayOptionsInput` via:
//
//	AnalysisListControlDisplayOptionsArgs{...}
type AnalysisListControlDisplayOptionsInput interface {
	pulumi.Input

	ToAnalysisListControlDisplayOptionsOutput() AnalysisListControlDisplayOptionsOutput
	ToAnalysisListControlDisplayOptionsOutputWithContext(context.Context) AnalysisListControlDisplayOptionsOutput
}

type AnalysisListControlDisplayOptionsArgs struct {
	SearchOptions    AnalysisListControlSearchOptionsPtrInput    `pulumi:"searchOptions"`
	SelectAllOptions AnalysisListControlSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
	TitleOptions     AnalysisLabelOptionsPtrInput                `pulumi:"titleOptions"`
}

func (AnalysisListControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisListControlDisplayOptions)(nil)).Elem()
}

func (i AnalysisListControlDisplayOptionsArgs) ToAnalysisListControlDisplayOptionsOutput() AnalysisListControlDisplayOptionsOutput {
	return i.ToAnalysisListControlDisplayOptionsOutputWithContext(context.Background())
}

func (i AnalysisListControlDisplayOptionsArgs) ToAnalysisListControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisListControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisListControlDisplayOptionsOutput)
}

func (i AnalysisListControlDisplayOptionsArgs) ToAnalysisListControlDisplayOptionsPtrOutput() AnalysisListControlDisplayOptionsPtrOutput {
	return i.ToAnalysisListControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisListControlDisplayOptionsArgs) ToAnalysisListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisListControlDisplayOptionsOutput).ToAnalysisListControlDisplayOptionsPtrOutputWithContext(ctx)
}

// AnalysisListControlDisplayOptionsPtrInput is an input type that accepts AnalysisListControlDisplayOptionsArgs, AnalysisListControlDisplayOptionsPtr and AnalysisListControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisListControlDisplayOptionsPtrInput` via:
//
//	        AnalysisListControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisListControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisListControlDisplayOptionsPtrOutput() AnalysisListControlDisplayOptionsPtrOutput
	ToAnalysisListControlDisplayOptionsPtrOutputWithContext(context.Context) AnalysisListControlDisplayOptionsPtrOutput
}

type analysisListControlDisplayOptionsPtrType AnalysisListControlDisplayOptionsArgs

func AnalysisListControlDisplayOptionsPtr(v *AnalysisListControlDisplayOptionsArgs) AnalysisListControlDisplayOptionsPtrInput {
	return (*analysisListControlDisplayOptionsPtrType)(v)
}

func (*analysisListControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisListControlDisplayOptions)(nil)).Elem()
}

func (i *analysisListControlDisplayOptionsPtrType) ToAnalysisListControlDisplayOptionsPtrOutput() AnalysisListControlDisplayOptionsPtrOutput {
	return i.ToAnalysisListControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisListControlDisplayOptionsPtrType) ToAnalysisListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisListControlDisplayOptionsPtrOutput)
}

type AnalysisListControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisListControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisListControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisListControlDisplayOptionsOutput) ToAnalysisListControlDisplayOptionsOutput() AnalysisListControlDisplayOptionsOutput {
	return o
}

func (o AnalysisListControlDisplayOptionsOutput) ToAnalysisListControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisListControlDisplayOptionsOutput {
	return o
}

func (o AnalysisListControlDisplayOptionsOutput) ToAnalysisListControlDisplayOptionsPtrOutput() AnalysisListControlDisplayOptionsPtrOutput {
	return o.ToAnalysisListControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisListControlDisplayOptionsOutput) ToAnalysisListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisListControlDisplayOptions) *AnalysisListControlDisplayOptions {
		return &v
	}).(AnalysisListControlDisplayOptionsPtrOutput)
}

func (o AnalysisListControlDisplayOptionsOutput) SearchOptions() AnalysisListControlSearchOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisListControlDisplayOptions) *AnalysisListControlSearchOptions { return v.SearchOptions }).(AnalysisListControlSearchOptionsPtrOutput)
}

func (o AnalysisListControlDisplayOptionsOutput) SelectAllOptions() AnalysisListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisListControlDisplayOptions) *AnalysisListControlSelectAllOptions {
		return v.SelectAllOptions
	}).(AnalysisListControlSelectAllOptionsPtrOutput)
}

func (o AnalysisListControlDisplayOptionsOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisListControlDisplayOptions) *AnalysisLabelOptions { return v.TitleOptions }).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisListControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisListControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisListControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisListControlDisplayOptionsPtrOutput) ToAnalysisListControlDisplayOptionsPtrOutput() AnalysisListControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisListControlDisplayOptionsPtrOutput) ToAnalysisListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisListControlDisplayOptionsPtrOutput) Elem() AnalysisListControlDisplayOptionsOutput {
	return o.ApplyT(func(v *AnalysisListControlDisplayOptions) AnalysisListControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisListControlDisplayOptions
		return ret
	}).(AnalysisListControlDisplayOptionsOutput)
}

func (o AnalysisListControlDisplayOptionsPtrOutput) SearchOptions() AnalysisListControlSearchOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisListControlDisplayOptions) *AnalysisListControlSearchOptions {
		if v == nil {
			return nil
		}
		return v.SearchOptions
	}).(AnalysisListControlSearchOptionsPtrOutput)
}

func (o AnalysisListControlDisplayOptionsPtrOutput) SelectAllOptions() AnalysisListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisListControlDisplayOptions) *AnalysisListControlSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(AnalysisListControlSelectAllOptionsPtrOutput)
}

func (o AnalysisListControlDisplayOptionsPtrOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisListControlDisplayOptions) *AnalysisLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisListControlSearchOptions struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisListControlSearchOptionsInput is an input type that accepts AnalysisListControlSearchOptionsArgs and AnalysisListControlSearchOptionsOutput values.
// You can construct a concrete instance of `AnalysisListControlSearchOptionsInput` via:
//
//	AnalysisListControlSearchOptionsArgs{...}
type AnalysisListControlSearchOptionsInput interface {
	pulumi.Input

	ToAnalysisListControlSearchOptionsOutput() AnalysisListControlSearchOptionsOutput
	ToAnalysisListControlSearchOptionsOutputWithContext(context.Context) AnalysisListControlSearchOptionsOutput
}

type AnalysisListControlSearchOptionsArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisListControlSearchOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisListControlSearchOptions)(nil)).Elem()
}

func (i AnalysisListControlSearchOptionsArgs) ToAnalysisListControlSearchOptionsOutput() AnalysisListControlSearchOptionsOutput {
	return i.ToAnalysisListControlSearchOptionsOutputWithContext(context.Background())
}

func (i AnalysisListControlSearchOptionsArgs) ToAnalysisListControlSearchOptionsOutputWithContext(ctx context.Context) AnalysisListControlSearchOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisListControlSearchOptionsOutput)
}

func (i AnalysisListControlSearchOptionsArgs) ToAnalysisListControlSearchOptionsPtrOutput() AnalysisListControlSearchOptionsPtrOutput {
	return i.ToAnalysisListControlSearchOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisListControlSearchOptionsArgs) ToAnalysisListControlSearchOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlSearchOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisListControlSearchOptionsOutput).ToAnalysisListControlSearchOptionsPtrOutputWithContext(ctx)
}

// AnalysisListControlSearchOptionsPtrInput is an input type that accepts AnalysisListControlSearchOptionsArgs, AnalysisListControlSearchOptionsPtr and AnalysisListControlSearchOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisListControlSearchOptionsPtrInput` via:
//
//	        AnalysisListControlSearchOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisListControlSearchOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisListControlSearchOptionsPtrOutput() AnalysisListControlSearchOptionsPtrOutput
	ToAnalysisListControlSearchOptionsPtrOutputWithContext(context.Context) AnalysisListControlSearchOptionsPtrOutput
}

type analysisListControlSearchOptionsPtrType AnalysisListControlSearchOptionsArgs

func AnalysisListControlSearchOptionsPtr(v *AnalysisListControlSearchOptionsArgs) AnalysisListControlSearchOptionsPtrInput {
	return (*analysisListControlSearchOptionsPtrType)(v)
}

func (*analysisListControlSearchOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisListControlSearchOptions)(nil)).Elem()
}

func (i *analysisListControlSearchOptionsPtrType) ToAnalysisListControlSearchOptionsPtrOutput() AnalysisListControlSearchOptionsPtrOutput {
	return i.ToAnalysisListControlSearchOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisListControlSearchOptionsPtrType) ToAnalysisListControlSearchOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlSearchOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisListControlSearchOptionsPtrOutput)
}

type AnalysisListControlSearchOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisListControlSearchOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisListControlSearchOptions)(nil)).Elem()
}

func (o AnalysisListControlSearchOptionsOutput) ToAnalysisListControlSearchOptionsOutput() AnalysisListControlSearchOptionsOutput {
	return o
}

func (o AnalysisListControlSearchOptionsOutput) ToAnalysisListControlSearchOptionsOutputWithContext(ctx context.Context) AnalysisListControlSearchOptionsOutput {
	return o
}

func (o AnalysisListControlSearchOptionsOutput) ToAnalysisListControlSearchOptionsPtrOutput() AnalysisListControlSearchOptionsPtrOutput {
	return o.ToAnalysisListControlSearchOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisListControlSearchOptionsOutput) ToAnalysisListControlSearchOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlSearchOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisListControlSearchOptions) *AnalysisListControlSearchOptions {
		return &v
	}).(AnalysisListControlSearchOptionsPtrOutput)
}

func (o AnalysisListControlSearchOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisListControlSearchOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisListControlSearchOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisListControlSearchOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisListControlSearchOptions)(nil)).Elem()
}

func (o AnalysisListControlSearchOptionsPtrOutput) ToAnalysisListControlSearchOptionsPtrOutput() AnalysisListControlSearchOptionsPtrOutput {
	return o
}

func (o AnalysisListControlSearchOptionsPtrOutput) ToAnalysisListControlSearchOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlSearchOptionsPtrOutput {
	return o
}

func (o AnalysisListControlSearchOptionsPtrOutput) Elem() AnalysisListControlSearchOptionsOutput {
	return o.ApplyT(func(v *AnalysisListControlSearchOptions) AnalysisListControlSearchOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisListControlSearchOptions
		return ret
	}).(AnalysisListControlSearchOptionsOutput)
}

func (o AnalysisListControlSearchOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisListControlSearchOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisListControlSelectAllOptions struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisListControlSelectAllOptionsInput is an input type that accepts AnalysisListControlSelectAllOptionsArgs and AnalysisListControlSelectAllOptionsOutput values.
// You can construct a concrete instance of `AnalysisListControlSelectAllOptionsInput` via:
//
//	AnalysisListControlSelectAllOptionsArgs{...}
type AnalysisListControlSelectAllOptionsInput interface {
	pulumi.Input

	ToAnalysisListControlSelectAllOptionsOutput() AnalysisListControlSelectAllOptionsOutput
	ToAnalysisListControlSelectAllOptionsOutputWithContext(context.Context) AnalysisListControlSelectAllOptionsOutput
}

type AnalysisListControlSelectAllOptionsArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisListControlSelectAllOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisListControlSelectAllOptions)(nil)).Elem()
}

func (i AnalysisListControlSelectAllOptionsArgs) ToAnalysisListControlSelectAllOptionsOutput() AnalysisListControlSelectAllOptionsOutput {
	return i.ToAnalysisListControlSelectAllOptionsOutputWithContext(context.Background())
}

func (i AnalysisListControlSelectAllOptionsArgs) ToAnalysisListControlSelectAllOptionsOutputWithContext(ctx context.Context) AnalysisListControlSelectAllOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisListControlSelectAllOptionsOutput)
}

func (i AnalysisListControlSelectAllOptionsArgs) ToAnalysisListControlSelectAllOptionsPtrOutput() AnalysisListControlSelectAllOptionsPtrOutput {
	return i.ToAnalysisListControlSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisListControlSelectAllOptionsArgs) ToAnalysisListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisListControlSelectAllOptionsOutput).ToAnalysisListControlSelectAllOptionsPtrOutputWithContext(ctx)
}

// AnalysisListControlSelectAllOptionsPtrInput is an input type that accepts AnalysisListControlSelectAllOptionsArgs, AnalysisListControlSelectAllOptionsPtr and AnalysisListControlSelectAllOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisListControlSelectAllOptionsPtrInput` via:
//
//	        AnalysisListControlSelectAllOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisListControlSelectAllOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisListControlSelectAllOptionsPtrOutput() AnalysisListControlSelectAllOptionsPtrOutput
	ToAnalysisListControlSelectAllOptionsPtrOutputWithContext(context.Context) AnalysisListControlSelectAllOptionsPtrOutput
}

type analysisListControlSelectAllOptionsPtrType AnalysisListControlSelectAllOptionsArgs

func AnalysisListControlSelectAllOptionsPtr(v *AnalysisListControlSelectAllOptionsArgs) AnalysisListControlSelectAllOptionsPtrInput {
	return (*analysisListControlSelectAllOptionsPtrType)(v)
}

func (*analysisListControlSelectAllOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisListControlSelectAllOptions)(nil)).Elem()
}

func (i *analysisListControlSelectAllOptionsPtrType) ToAnalysisListControlSelectAllOptionsPtrOutput() AnalysisListControlSelectAllOptionsPtrOutput {
	return i.ToAnalysisListControlSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisListControlSelectAllOptionsPtrType) ToAnalysisListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisListControlSelectAllOptionsPtrOutput)
}

type AnalysisListControlSelectAllOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisListControlSelectAllOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisListControlSelectAllOptions)(nil)).Elem()
}

func (o AnalysisListControlSelectAllOptionsOutput) ToAnalysisListControlSelectAllOptionsOutput() AnalysisListControlSelectAllOptionsOutput {
	return o
}

func (o AnalysisListControlSelectAllOptionsOutput) ToAnalysisListControlSelectAllOptionsOutputWithContext(ctx context.Context) AnalysisListControlSelectAllOptionsOutput {
	return o
}

func (o AnalysisListControlSelectAllOptionsOutput) ToAnalysisListControlSelectAllOptionsPtrOutput() AnalysisListControlSelectAllOptionsPtrOutput {
	return o.ToAnalysisListControlSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisListControlSelectAllOptionsOutput) ToAnalysisListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlSelectAllOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisListControlSelectAllOptions) *AnalysisListControlSelectAllOptions {
		return &v
	}).(AnalysisListControlSelectAllOptionsPtrOutput)
}

func (o AnalysisListControlSelectAllOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisListControlSelectAllOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisListControlSelectAllOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisListControlSelectAllOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisListControlSelectAllOptions)(nil)).Elem()
}

func (o AnalysisListControlSelectAllOptionsPtrOutput) ToAnalysisListControlSelectAllOptionsPtrOutput() AnalysisListControlSelectAllOptionsPtrOutput {
	return o
}

func (o AnalysisListControlSelectAllOptionsPtrOutput) ToAnalysisListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisListControlSelectAllOptionsPtrOutput {
	return o
}

func (o AnalysisListControlSelectAllOptionsPtrOutput) Elem() AnalysisListControlSelectAllOptionsOutput {
	return o.ApplyT(func(v *AnalysisListControlSelectAllOptions) AnalysisListControlSelectAllOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisListControlSelectAllOptions
		return ret
	}).(AnalysisListControlSelectAllOptionsOutput)
}

func (o AnalysisListControlSelectAllOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisListControlSelectAllOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisLoadingAnimation struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisLoadingAnimationInput is an input type that accepts AnalysisLoadingAnimationArgs and AnalysisLoadingAnimationOutput values.
// You can construct a concrete instance of `AnalysisLoadingAnimationInput` via:
//
//	AnalysisLoadingAnimationArgs{...}
type AnalysisLoadingAnimationInput interface {
	pulumi.Input

	ToAnalysisLoadingAnimationOutput() AnalysisLoadingAnimationOutput
	ToAnalysisLoadingAnimationOutputWithContext(context.Context) AnalysisLoadingAnimationOutput
}

type AnalysisLoadingAnimationArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisLoadingAnimationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLoadingAnimation)(nil)).Elem()
}

func (i AnalysisLoadingAnimationArgs) ToAnalysisLoadingAnimationOutput() AnalysisLoadingAnimationOutput {
	return i.ToAnalysisLoadingAnimationOutputWithContext(context.Background())
}

func (i AnalysisLoadingAnimationArgs) ToAnalysisLoadingAnimationOutputWithContext(ctx context.Context) AnalysisLoadingAnimationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLoadingAnimationOutput)
}

func (i AnalysisLoadingAnimationArgs) ToAnalysisLoadingAnimationPtrOutput() AnalysisLoadingAnimationPtrOutput {
	return i.ToAnalysisLoadingAnimationPtrOutputWithContext(context.Background())
}

func (i AnalysisLoadingAnimationArgs) ToAnalysisLoadingAnimationPtrOutputWithContext(ctx context.Context) AnalysisLoadingAnimationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLoadingAnimationOutput).ToAnalysisLoadingAnimationPtrOutputWithContext(ctx)
}

// AnalysisLoadingAnimationPtrInput is an input type that accepts AnalysisLoadingAnimationArgs, AnalysisLoadingAnimationPtr and AnalysisLoadingAnimationPtrOutput values.
// You can construct a concrete instance of `AnalysisLoadingAnimationPtrInput` via:
//
//	        AnalysisLoadingAnimationArgs{...}
//
//	or:
//
//	        nil
type AnalysisLoadingAnimationPtrInput interface {
	pulumi.Input

	ToAnalysisLoadingAnimationPtrOutput() AnalysisLoadingAnimationPtrOutput
	ToAnalysisLoadingAnimationPtrOutputWithContext(context.Context) AnalysisLoadingAnimationPtrOutput
}

type analysisLoadingAnimationPtrType AnalysisLoadingAnimationArgs

func AnalysisLoadingAnimationPtr(v *AnalysisLoadingAnimationArgs) AnalysisLoadingAnimationPtrInput {
	return (*analysisLoadingAnimationPtrType)(v)
}

func (*analysisLoadingAnimationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLoadingAnimation)(nil)).Elem()
}

func (i *analysisLoadingAnimationPtrType) ToAnalysisLoadingAnimationPtrOutput() AnalysisLoadingAnimationPtrOutput {
	return i.ToAnalysisLoadingAnimationPtrOutputWithContext(context.Background())
}

func (i *analysisLoadingAnimationPtrType) ToAnalysisLoadingAnimationPtrOutputWithContext(ctx context.Context) AnalysisLoadingAnimationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLoadingAnimationPtrOutput)
}

type AnalysisLoadingAnimationOutput struct{ *pulumi.OutputState }

func (AnalysisLoadingAnimationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLoadingAnimation)(nil)).Elem()
}

func (o AnalysisLoadingAnimationOutput) ToAnalysisLoadingAnimationOutput() AnalysisLoadingAnimationOutput {
	return o
}

func (o AnalysisLoadingAnimationOutput) ToAnalysisLoadingAnimationOutputWithContext(ctx context.Context) AnalysisLoadingAnimationOutput {
	return o
}

func (o AnalysisLoadingAnimationOutput) ToAnalysisLoadingAnimationPtrOutput() AnalysisLoadingAnimationPtrOutput {
	return o.ToAnalysisLoadingAnimationPtrOutputWithContext(context.Background())
}

func (o AnalysisLoadingAnimationOutput) ToAnalysisLoadingAnimationPtrOutputWithContext(ctx context.Context) AnalysisLoadingAnimationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLoadingAnimation) *AnalysisLoadingAnimation {
		return &v
	}).(AnalysisLoadingAnimationPtrOutput)
}

func (o AnalysisLoadingAnimationOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisLoadingAnimation) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisLoadingAnimationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLoadingAnimationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLoadingAnimation)(nil)).Elem()
}

func (o AnalysisLoadingAnimationPtrOutput) ToAnalysisLoadingAnimationPtrOutput() AnalysisLoadingAnimationPtrOutput {
	return o
}

func (o AnalysisLoadingAnimationPtrOutput) ToAnalysisLoadingAnimationPtrOutputWithContext(ctx context.Context) AnalysisLoadingAnimationPtrOutput {
	return o
}

func (o AnalysisLoadingAnimationPtrOutput) Elem() AnalysisLoadingAnimationOutput {
	return o.ApplyT(func(v *AnalysisLoadingAnimation) AnalysisLoadingAnimation {
		if v != nil {
			return *v
		}
		var ret AnalysisLoadingAnimation
		return ret
	}).(AnalysisLoadingAnimationOutput)
}

func (o AnalysisLoadingAnimationPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisLoadingAnimation) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisLocalNavigationConfiguration struct {
	TargetSheetId string `pulumi:"targetSheetId"`
}

// AnalysisLocalNavigationConfigurationInput is an input type that accepts AnalysisLocalNavigationConfigurationArgs and AnalysisLocalNavigationConfigurationOutput values.
// You can construct a concrete instance of `AnalysisLocalNavigationConfigurationInput` via:
//
//	AnalysisLocalNavigationConfigurationArgs{...}
type AnalysisLocalNavigationConfigurationInput interface {
	pulumi.Input

	ToAnalysisLocalNavigationConfigurationOutput() AnalysisLocalNavigationConfigurationOutput
	ToAnalysisLocalNavigationConfigurationOutputWithContext(context.Context) AnalysisLocalNavigationConfigurationOutput
}

type AnalysisLocalNavigationConfigurationArgs struct {
	TargetSheetId pulumi.StringInput `pulumi:"targetSheetId"`
}

func (AnalysisLocalNavigationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLocalNavigationConfiguration)(nil)).Elem()
}

func (i AnalysisLocalNavigationConfigurationArgs) ToAnalysisLocalNavigationConfigurationOutput() AnalysisLocalNavigationConfigurationOutput {
	return i.ToAnalysisLocalNavigationConfigurationOutputWithContext(context.Background())
}

func (i AnalysisLocalNavigationConfigurationArgs) ToAnalysisLocalNavigationConfigurationOutputWithContext(ctx context.Context) AnalysisLocalNavigationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLocalNavigationConfigurationOutput)
}

func (i AnalysisLocalNavigationConfigurationArgs) ToAnalysisLocalNavigationConfigurationPtrOutput() AnalysisLocalNavigationConfigurationPtrOutput {
	return i.ToAnalysisLocalNavigationConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisLocalNavigationConfigurationArgs) ToAnalysisLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLocalNavigationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLocalNavigationConfigurationOutput).ToAnalysisLocalNavigationConfigurationPtrOutputWithContext(ctx)
}

// AnalysisLocalNavigationConfigurationPtrInput is an input type that accepts AnalysisLocalNavigationConfigurationArgs, AnalysisLocalNavigationConfigurationPtr and AnalysisLocalNavigationConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisLocalNavigationConfigurationPtrInput` via:
//
//	        AnalysisLocalNavigationConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisLocalNavigationConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisLocalNavigationConfigurationPtrOutput() AnalysisLocalNavigationConfigurationPtrOutput
	ToAnalysisLocalNavigationConfigurationPtrOutputWithContext(context.Context) AnalysisLocalNavigationConfigurationPtrOutput
}

type analysisLocalNavigationConfigurationPtrType AnalysisLocalNavigationConfigurationArgs

func AnalysisLocalNavigationConfigurationPtr(v *AnalysisLocalNavigationConfigurationArgs) AnalysisLocalNavigationConfigurationPtrInput {
	return (*analysisLocalNavigationConfigurationPtrType)(v)
}

func (*analysisLocalNavigationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLocalNavigationConfiguration)(nil)).Elem()
}

func (i *analysisLocalNavigationConfigurationPtrType) ToAnalysisLocalNavigationConfigurationPtrOutput() AnalysisLocalNavigationConfigurationPtrOutput {
	return i.ToAnalysisLocalNavigationConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisLocalNavigationConfigurationPtrType) ToAnalysisLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLocalNavigationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLocalNavigationConfigurationPtrOutput)
}

type AnalysisLocalNavigationConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisLocalNavigationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLocalNavigationConfiguration)(nil)).Elem()
}

func (o AnalysisLocalNavigationConfigurationOutput) ToAnalysisLocalNavigationConfigurationOutput() AnalysisLocalNavigationConfigurationOutput {
	return o
}

func (o AnalysisLocalNavigationConfigurationOutput) ToAnalysisLocalNavigationConfigurationOutputWithContext(ctx context.Context) AnalysisLocalNavigationConfigurationOutput {
	return o
}

func (o AnalysisLocalNavigationConfigurationOutput) ToAnalysisLocalNavigationConfigurationPtrOutput() AnalysisLocalNavigationConfigurationPtrOutput {
	return o.ToAnalysisLocalNavigationConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisLocalNavigationConfigurationOutput) ToAnalysisLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLocalNavigationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLocalNavigationConfiguration) *AnalysisLocalNavigationConfiguration {
		return &v
	}).(AnalysisLocalNavigationConfigurationPtrOutput)
}

func (o AnalysisLocalNavigationConfigurationOutput) TargetSheetId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisLocalNavigationConfiguration) string { return v.TargetSheetId }).(pulumi.StringOutput)
}

type AnalysisLocalNavigationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLocalNavigationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLocalNavigationConfiguration)(nil)).Elem()
}

func (o AnalysisLocalNavigationConfigurationPtrOutput) ToAnalysisLocalNavigationConfigurationPtrOutput() AnalysisLocalNavigationConfigurationPtrOutput {
	return o
}

func (o AnalysisLocalNavigationConfigurationPtrOutput) ToAnalysisLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) AnalysisLocalNavigationConfigurationPtrOutput {
	return o
}

func (o AnalysisLocalNavigationConfigurationPtrOutput) Elem() AnalysisLocalNavigationConfigurationOutput {
	return o.ApplyT(func(v *AnalysisLocalNavigationConfiguration) AnalysisLocalNavigationConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisLocalNavigationConfiguration
		return ret
	}).(AnalysisLocalNavigationConfigurationOutput)
}

func (o AnalysisLocalNavigationConfigurationPtrOutput) TargetSheetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisLocalNavigationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TargetSheetId
	}).(pulumi.StringPtrOutput)
}

type AnalysisLongFormatText struct {
	PlainText *string `pulumi:"plainText"`
	RichText  *string `pulumi:"richText"`
}

// AnalysisLongFormatTextInput is an input type that accepts AnalysisLongFormatTextArgs and AnalysisLongFormatTextOutput values.
// You can construct a concrete instance of `AnalysisLongFormatTextInput` via:
//
//	AnalysisLongFormatTextArgs{...}
type AnalysisLongFormatTextInput interface {
	pulumi.Input

	ToAnalysisLongFormatTextOutput() AnalysisLongFormatTextOutput
	ToAnalysisLongFormatTextOutputWithContext(context.Context) AnalysisLongFormatTextOutput
}

type AnalysisLongFormatTextArgs struct {
	PlainText pulumi.StringPtrInput `pulumi:"plainText"`
	RichText  pulumi.StringPtrInput `pulumi:"richText"`
}

func (AnalysisLongFormatTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLongFormatText)(nil)).Elem()
}

func (i AnalysisLongFormatTextArgs) ToAnalysisLongFormatTextOutput() AnalysisLongFormatTextOutput {
	return i.ToAnalysisLongFormatTextOutputWithContext(context.Background())
}

func (i AnalysisLongFormatTextArgs) ToAnalysisLongFormatTextOutputWithContext(ctx context.Context) AnalysisLongFormatTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLongFormatTextOutput)
}

func (i AnalysisLongFormatTextArgs) ToAnalysisLongFormatTextPtrOutput() AnalysisLongFormatTextPtrOutput {
	return i.ToAnalysisLongFormatTextPtrOutputWithContext(context.Background())
}

func (i AnalysisLongFormatTextArgs) ToAnalysisLongFormatTextPtrOutputWithContext(ctx context.Context) AnalysisLongFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLongFormatTextOutput).ToAnalysisLongFormatTextPtrOutputWithContext(ctx)
}

// AnalysisLongFormatTextPtrInput is an input type that accepts AnalysisLongFormatTextArgs, AnalysisLongFormatTextPtr and AnalysisLongFormatTextPtrOutput values.
// You can construct a concrete instance of `AnalysisLongFormatTextPtrInput` via:
//
//	        AnalysisLongFormatTextArgs{...}
//
//	or:
//
//	        nil
type AnalysisLongFormatTextPtrInput interface {
	pulumi.Input

	ToAnalysisLongFormatTextPtrOutput() AnalysisLongFormatTextPtrOutput
	ToAnalysisLongFormatTextPtrOutputWithContext(context.Context) AnalysisLongFormatTextPtrOutput
}

type analysisLongFormatTextPtrType AnalysisLongFormatTextArgs

func AnalysisLongFormatTextPtr(v *AnalysisLongFormatTextArgs) AnalysisLongFormatTextPtrInput {
	return (*analysisLongFormatTextPtrType)(v)
}

func (*analysisLongFormatTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLongFormatText)(nil)).Elem()
}

func (i *analysisLongFormatTextPtrType) ToAnalysisLongFormatTextPtrOutput() AnalysisLongFormatTextPtrOutput {
	return i.ToAnalysisLongFormatTextPtrOutputWithContext(context.Background())
}

func (i *analysisLongFormatTextPtrType) ToAnalysisLongFormatTextPtrOutputWithContext(ctx context.Context) AnalysisLongFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisLongFormatTextPtrOutput)
}

type AnalysisLongFormatTextOutput struct{ *pulumi.OutputState }

func (AnalysisLongFormatTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLongFormatText)(nil)).Elem()
}

func (o AnalysisLongFormatTextOutput) ToAnalysisLongFormatTextOutput() AnalysisLongFormatTextOutput {
	return o
}

func (o AnalysisLongFormatTextOutput) ToAnalysisLongFormatTextOutputWithContext(ctx context.Context) AnalysisLongFormatTextOutput {
	return o
}

func (o AnalysisLongFormatTextOutput) ToAnalysisLongFormatTextPtrOutput() AnalysisLongFormatTextPtrOutput {
	return o.ToAnalysisLongFormatTextPtrOutputWithContext(context.Background())
}

func (o AnalysisLongFormatTextOutput) ToAnalysisLongFormatTextPtrOutputWithContext(ctx context.Context) AnalysisLongFormatTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLongFormatText) *AnalysisLongFormatText {
		return &v
	}).(AnalysisLongFormatTextPtrOutput)
}

func (o AnalysisLongFormatTextOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisLongFormatText) *string { return v.PlainText }).(pulumi.StringPtrOutput)
}

func (o AnalysisLongFormatTextOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisLongFormatText) *string { return v.RichText }).(pulumi.StringPtrOutput)
}

type AnalysisLongFormatTextPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLongFormatTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLongFormatText)(nil)).Elem()
}

func (o AnalysisLongFormatTextPtrOutput) ToAnalysisLongFormatTextPtrOutput() AnalysisLongFormatTextPtrOutput {
	return o
}

func (o AnalysisLongFormatTextPtrOutput) ToAnalysisLongFormatTextPtrOutputWithContext(ctx context.Context) AnalysisLongFormatTextPtrOutput {
	return o
}

func (o AnalysisLongFormatTextPtrOutput) Elem() AnalysisLongFormatTextOutput {
	return o.ApplyT(func(v *AnalysisLongFormatText) AnalysisLongFormatText {
		if v != nil {
			return *v
		}
		var ret AnalysisLongFormatText
		return ret
	}).(AnalysisLongFormatTextOutput)
}

func (o AnalysisLongFormatTextPtrOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisLongFormatText) *string {
		if v == nil {
			return nil
		}
		return v.PlainText
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisLongFormatTextPtrOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisLongFormatText) *string {
		if v == nil {
			return nil
		}
		return v.RichText
	}).(pulumi.StringPtrOutput)
}

type AnalysisMappedDataSetParameter struct {
	DataSetIdentifier    string `pulumi:"dataSetIdentifier"`
	DataSetParameterName string `pulumi:"dataSetParameterName"`
}

// AnalysisMappedDataSetParameterInput is an input type that accepts AnalysisMappedDataSetParameterArgs and AnalysisMappedDataSetParameterOutput values.
// You can construct a concrete instance of `AnalysisMappedDataSetParameterInput` via:
//
//	AnalysisMappedDataSetParameterArgs{...}
type AnalysisMappedDataSetParameterInput interface {
	pulumi.Input

	ToAnalysisMappedDataSetParameterOutput() AnalysisMappedDataSetParameterOutput
	ToAnalysisMappedDataSetParameterOutputWithContext(context.Context) AnalysisMappedDataSetParameterOutput
}

type AnalysisMappedDataSetParameterArgs struct {
	DataSetIdentifier    pulumi.StringInput `pulumi:"dataSetIdentifier"`
	DataSetParameterName pulumi.StringInput `pulumi:"dataSetParameterName"`
}

func (AnalysisMappedDataSetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMappedDataSetParameter)(nil)).Elem()
}

func (i AnalysisMappedDataSetParameterArgs) ToAnalysisMappedDataSetParameterOutput() AnalysisMappedDataSetParameterOutput {
	return i.ToAnalysisMappedDataSetParameterOutputWithContext(context.Background())
}

func (i AnalysisMappedDataSetParameterArgs) ToAnalysisMappedDataSetParameterOutputWithContext(ctx context.Context) AnalysisMappedDataSetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMappedDataSetParameterOutput)
}

// AnalysisMappedDataSetParameterArrayInput is an input type that accepts AnalysisMappedDataSetParameterArray and AnalysisMappedDataSetParameterArrayOutput values.
// You can construct a concrete instance of `AnalysisMappedDataSetParameterArrayInput` via:
//
//	AnalysisMappedDataSetParameterArray{ AnalysisMappedDataSetParameterArgs{...} }
type AnalysisMappedDataSetParameterArrayInput interface {
	pulumi.Input

	ToAnalysisMappedDataSetParameterArrayOutput() AnalysisMappedDataSetParameterArrayOutput
	ToAnalysisMappedDataSetParameterArrayOutputWithContext(context.Context) AnalysisMappedDataSetParameterArrayOutput
}

type AnalysisMappedDataSetParameterArray []AnalysisMappedDataSetParameterInput

func (AnalysisMappedDataSetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisMappedDataSetParameter)(nil)).Elem()
}

func (i AnalysisMappedDataSetParameterArray) ToAnalysisMappedDataSetParameterArrayOutput() AnalysisMappedDataSetParameterArrayOutput {
	return i.ToAnalysisMappedDataSetParameterArrayOutputWithContext(context.Background())
}

func (i AnalysisMappedDataSetParameterArray) ToAnalysisMappedDataSetParameterArrayOutputWithContext(ctx context.Context) AnalysisMappedDataSetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMappedDataSetParameterArrayOutput)
}

type AnalysisMappedDataSetParameterOutput struct{ *pulumi.OutputState }

func (AnalysisMappedDataSetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMappedDataSetParameter)(nil)).Elem()
}

func (o AnalysisMappedDataSetParameterOutput) ToAnalysisMappedDataSetParameterOutput() AnalysisMappedDataSetParameterOutput {
	return o
}

func (o AnalysisMappedDataSetParameterOutput) ToAnalysisMappedDataSetParameterOutputWithContext(ctx context.Context) AnalysisMappedDataSetParameterOutput {
	return o
}

func (o AnalysisMappedDataSetParameterOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisMappedDataSetParameter) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o AnalysisMappedDataSetParameterOutput) DataSetParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisMappedDataSetParameter) string { return v.DataSetParameterName }).(pulumi.StringOutput)
}

type AnalysisMappedDataSetParameterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisMappedDataSetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisMappedDataSetParameter)(nil)).Elem()
}

func (o AnalysisMappedDataSetParameterArrayOutput) ToAnalysisMappedDataSetParameterArrayOutput() AnalysisMappedDataSetParameterArrayOutput {
	return o
}

func (o AnalysisMappedDataSetParameterArrayOutput) ToAnalysisMappedDataSetParameterArrayOutputWithContext(ctx context.Context) AnalysisMappedDataSetParameterArrayOutput {
	return o
}

func (o AnalysisMappedDataSetParameterArrayOutput) Index(i pulumi.IntInput) AnalysisMappedDataSetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisMappedDataSetParameter {
		return vs[0].([]AnalysisMappedDataSetParameter)[vs[1].(int)]
	}).(AnalysisMappedDataSetParameterOutput)
}

type AnalysisMaximumLabelType struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisMaximumLabelTypeInput is an input type that accepts AnalysisMaximumLabelTypeArgs and AnalysisMaximumLabelTypeOutput values.
// You can construct a concrete instance of `AnalysisMaximumLabelTypeInput` via:
//
//	AnalysisMaximumLabelTypeArgs{...}
type AnalysisMaximumLabelTypeInput interface {
	pulumi.Input

	ToAnalysisMaximumLabelTypeOutput() AnalysisMaximumLabelTypeOutput
	ToAnalysisMaximumLabelTypeOutputWithContext(context.Context) AnalysisMaximumLabelTypeOutput
}

type AnalysisMaximumLabelTypeArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisMaximumLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMaximumLabelType)(nil)).Elem()
}

func (i AnalysisMaximumLabelTypeArgs) ToAnalysisMaximumLabelTypeOutput() AnalysisMaximumLabelTypeOutput {
	return i.ToAnalysisMaximumLabelTypeOutputWithContext(context.Background())
}

func (i AnalysisMaximumLabelTypeArgs) ToAnalysisMaximumLabelTypeOutputWithContext(ctx context.Context) AnalysisMaximumLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMaximumLabelTypeOutput)
}

func (i AnalysisMaximumLabelTypeArgs) ToAnalysisMaximumLabelTypePtrOutput() AnalysisMaximumLabelTypePtrOutput {
	return i.ToAnalysisMaximumLabelTypePtrOutputWithContext(context.Background())
}

func (i AnalysisMaximumLabelTypeArgs) ToAnalysisMaximumLabelTypePtrOutputWithContext(ctx context.Context) AnalysisMaximumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMaximumLabelTypeOutput).ToAnalysisMaximumLabelTypePtrOutputWithContext(ctx)
}

// AnalysisMaximumLabelTypePtrInput is an input type that accepts AnalysisMaximumLabelTypeArgs, AnalysisMaximumLabelTypePtr and AnalysisMaximumLabelTypePtrOutput values.
// You can construct a concrete instance of `AnalysisMaximumLabelTypePtrInput` via:
//
//	        AnalysisMaximumLabelTypeArgs{...}
//
//	or:
//
//	        nil
type AnalysisMaximumLabelTypePtrInput interface {
	pulumi.Input

	ToAnalysisMaximumLabelTypePtrOutput() AnalysisMaximumLabelTypePtrOutput
	ToAnalysisMaximumLabelTypePtrOutputWithContext(context.Context) AnalysisMaximumLabelTypePtrOutput
}

type analysisMaximumLabelTypePtrType AnalysisMaximumLabelTypeArgs

func AnalysisMaximumLabelTypePtr(v *AnalysisMaximumLabelTypeArgs) AnalysisMaximumLabelTypePtrInput {
	return (*analysisMaximumLabelTypePtrType)(v)
}

func (*analysisMaximumLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMaximumLabelType)(nil)).Elem()
}

func (i *analysisMaximumLabelTypePtrType) ToAnalysisMaximumLabelTypePtrOutput() AnalysisMaximumLabelTypePtrOutput {
	return i.ToAnalysisMaximumLabelTypePtrOutputWithContext(context.Background())
}

func (i *analysisMaximumLabelTypePtrType) ToAnalysisMaximumLabelTypePtrOutputWithContext(ctx context.Context) AnalysisMaximumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMaximumLabelTypePtrOutput)
}

type AnalysisMaximumLabelTypeOutput struct{ *pulumi.OutputState }

func (AnalysisMaximumLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMaximumLabelType)(nil)).Elem()
}

func (o AnalysisMaximumLabelTypeOutput) ToAnalysisMaximumLabelTypeOutput() AnalysisMaximumLabelTypeOutput {
	return o
}

func (o AnalysisMaximumLabelTypeOutput) ToAnalysisMaximumLabelTypeOutputWithContext(ctx context.Context) AnalysisMaximumLabelTypeOutput {
	return o
}

func (o AnalysisMaximumLabelTypeOutput) ToAnalysisMaximumLabelTypePtrOutput() AnalysisMaximumLabelTypePtrOutput {
	return o.ToAnalysisMaximumLabelTypePtrOutputWithContext(context.Background())
}

func (o AnalysisMaximumLabelTypeOutput) ToAnalysisMaximumLabelTypePtrOutputWithContext(ctx context.Context) AnalysisMaximumLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisMaximumLabelType) *AnalysisMaximumLabelType {
		return &v
	}).(AnalysisMaximumLabelTypePtrOutput)
}

func (o AnalysisMaximumLabelTypeOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisMaximumLabelType) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisMaximumLabelTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisMaximumLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMaximumLabelType)(nil)).Elem()
}

func (o AnalysisMaximumLabelTypePtrOutput) ToAnalysisMaximumLabelTypePtrOutput() AnalysisMaximumLabelTypePtrOutput {
	return o
}

func (o AnalysisMaximumLabelTypePtrOutput) ToAnalysisMaximumLabelTypePtrOutputWithContext(ctx context.Context) AnalysisMaximumLabelTypePtrOutput {
	return o
}

func (o AnalysisMaximumLabelTypePtrOutput) Elem() AnalysisMaximumLabelTypeOutput {
	return o.ApplyT(func(v *AnalysisMaximumLabelType) AnalysisMaximumLabelType {
		if v != nil {
			return *v
		}
		var ret AnalysisMaximumLabelType
		return ret
	}).(AnalysisMaximumLabelTypeOutput)
}

func (o AnalysisMaximumLabelTypePtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisMaximumLabelType) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisMaximumMinimumComputation struct {
	ComputationId string                                `pulumi:"computationId"`
	Name          *string                               `pulumi:"name"`
	Time          AnalysisDimensionField                `pulumi:"time"`
	Type          AnalysisMaximumMinimumComputationType `pulumi:"type"`
	Value         *AnalysisMeasureField                 `pulumi:"value"`
}

// AnalysisMaximumMinimumComputationInput is an input type that accepts AnalysisMaximumMinimumComputationArgs and AnalysisMaximumMinimumComputationOutput values.
// You can construct a concrete instance of `AnalysisMaximumMinimumComputationInput` via:
//
//	AnalysisMaximumMinimumComputationArgs{...}
type AnalysisMaximumMinimumComputationInput interface {
	pulumi.Input

	ToAnalysisMaximumMinimumComputationOutput() AnalysisMaximumMinimumComputationOutput
	ToAnalysisMaximumMinimumComputationOutputWithContext(context.Context) AnalysisMaximumMinimumComputationOutput
}

type AnalysisMaximumMinimumComputationArgs struct {
	ComputationId pulumi.StringInput                         `pulumi:"computationId"`
	Name          pulumi.StringPtrInput                      `pulumi:"name"`
	Time          AnalysisDimensionFieldInput                `pulumi:"time"`
	Type          AnalysisMaximumMinimumComputationTypeInput `pulumi:"type"`
	Value         AnalysisMeasureFieldPtrInput               `pulumi:"value"`
}

func (AnalysisMaximumMinimumComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMaximumMinimumComputation)(nil)).Elem()
}

func (i AnalysisMaximumMinimumComputationArgs) ToAnalysisMaximumMinimumComputationOutput() AnalysisMaximumMinimumComputationOutput {
	return i.ToAnalysisMaximumMinimumComputationOutputWithContext(context.Background())
}

func (i AnalysisMaximumMinimumComputationArgs) ToAnalysisMaximumMinimumComputationOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMaximumMinimumComputationOutput)
}

func (i AnalysisMaximumMinimumComputationArgs) ToAnalysisMaximumMinimumComputationPtrOutput() AnalysisMaximumMinimumComputationPtrOutput {
	return i.ToAnalysisMaximumMinimumComputationPtrOutputWithContext(context.Background())
}

func (i AnalysisMaximumMinimumComputationArgs) ToAnalysisMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMaximumMinimumComputationOutput).ToAnalysisMaximumMinimumComputationPtrOutputWithContext(ctx)
}

// AnalysisMaximumMinimumComputationPtrInput is an input type that accepts AnalysisMaximumMinimumComputationArgs, AnalysisMaximumMinimumComputationPtr and AnalysisMaximumMinimumComputationPtrOutput values.
// You can construct a concrete instance of `AnalysisMaximumMinimumComputationPtrInput` via:
//
//	        AnalysisMaximumMinimumComputationArgs{...}
//
//	or:
//
//	        nil
type AnalysisMaximumMinimumComputationPtrInput interface {
	pulumi.Input

	ToAnalysisMaximumMinimumComputationPtrOutput() AnalysisMaximumMinimumComputationPtrOutput
	ToAnalysisMaximumMinimumComputationPtrOutputWithContext(context.Context) AnalysisMaximumMinimumComputationPtrOutput
}

type analysisMaximumMinimumComputationPtrType AnalysisMaximumMinimumComputationArgs

func AnalysisMaximumMinimumComputationPtr(v *AnalysisMaximumMinimumComputationArgs) AnalysisMaximumMinimumComputationPtrInput {
	return (*analysisMaximumMinimumComputationPtrType)(v)
}

func (*analysisMaximumMinimumComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMaximumMinimumComputation)(nil)).Elem()
}

func (i *analysisMaximumMinimumComputationPtrType) ToAnalysisMaximumMinimumComputationPtrOutput() AnalysisMaximumMinimumComputationPtrOutput {
	return i.ToAnalysisMaximumMinimumComputationPtrOutputWithContext(context.Background())
}

func (i *analysisMaximumMinimumComputationPtrType) ToAnalysisMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMaximumMinimumComputationPtrOutput)
}

type AnalysisMaximumMinimumComputationOutput struct{ *pulumi.OutputState }

func (AnalysisMaximumMinimumComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMaximumMinimumComputation)(nil)).Elem()
}

func (o AnalysisMaximumMinimumComputationOutput) ToAnalysisMaximumMinimumComputationOutput() AnalysisMaximumMinimumComputationOutput {
	return o
}

func (o AnalysisMaximumMinimumComputationOutput) ToAnalysisMaximumMinimumComputationOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationOutput {
	return o
}

func (o AnalysisMaximumMinimumComputationOutput) ToAnalysisMaximumMinimumComputationPtrOutput() AnalysisMaximumMinimumComputationPtrOutput {
	return o.ToAnalysisMaximumMinimumComputationPtrOutputWithContext(context.Background())
}

func (o AnalysisMaximumMinimumComputationOutput) ToAnalysisMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisMaximumMinimumComputation) *AnalysisMaximumMinimumComputation {
		return &v
	}).(AnalysisMaximumMinimumComputationPtrOutput)
}

func (o AnalysisMaximumMinimumComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisMaximumMinimumComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o AnalysisMaximumMinimumComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisMaximumMinimumComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisMaximumMinimumComputationOutput) Time() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v AnalysisMaximumMinimumComputation) AnalysisDimensionField { return v.Time }).(AnalysisDimensionFieldOutput)
}

func (o AnalysisMaximumMinimumComputationOutput) Type() AnalysisMaximumMinimumComputationTypeOutput {
	return o.ApplyT(func(v AnalysisMaximumMinimumComputation) AnalysisMaximumMinimumComputationType { return v.Type }).(AnalysisMaximumMinimumComputationTypeOutput)
}

func (o AnalysisMaximumMinimumComputationOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisMaximumMinimumComputation) *AnalysisMeasureField { return v.Value }).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisMaximumMinimumComputationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisMaximumMinimumComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMaximumMinimumComputation)(nil)).Elem()
}

func (o AnalysisMaximumMinimumComputationPtrOutput) ToAnalysisMaximumMinimumComputationPtrOutput() AnalysisMaximumMinimumComputationPtrOutput {
	return o
}

func (o AnalysisMaximumMinimumComputationPtrOutput) ToAnalysisMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationPtrOutput {
	return o
}

func (o AnalysisMaximumMinimumComputationPtrOutput) Elem() AnalysisMaximumMinimumComputationOutput {
	return o.ApplyT(func(v *AnalysisMaximumMinimumComputation) AnalysisMaximumMinimumComputation {
		if v != nil {
			return *v
		}
		var ret AnalysisMaximumMinimumComputation
		return ret
	}).(AnalysisMaximumMinimumComputationOutput)
}

func (o AnalysisMaximumMinimumComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisMaximumMinimumComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisMaximumMinimumComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisMaximumMinimumComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisMaximumMinimumComputationPtrOutput) Time() AnalysisDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisMaximumMinimumComputation) *AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(AnalysisDimensionFieldPtrOutput)
}

func (o AnalysisMaximumMinimumComputationPtrOutput) Type() AnalysisMaximumMinimumComputationTypePtrOutput {
	return o.ApplyT(func(v *AnalysisMaximumMinimumComputation) *AnalysisMaximumMinimumComputationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(AnalysisMaximumMinimumComputationTypePtrOutput)
}

func (o AnalysisMaximumMinimumComputationPtrOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisMaximumMinimumComputation) *AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisMeasureField struct {
	CalculatedMeasureField  *AnalysisCalculatedMeasureField  `pulumi:"calculatedMeasureField"`
	CategoricalMeasureField *AnalysisCategoricalMeasureField `pulumi:"categoricalMeasureField"`
	DateMeasureField        *AnalysisDateMeasureField        `pulumi:"dateMeasureField"`
	NumericalMeasureField   *AnalysisNumericalMeasureField   `pulumi:"numericalMeasureField"`
}

// AnalysisMeasureFieldInput is an input type that accepts AnalysisMeasureFieldArgs and AnalysisMeasureFieldOutput values.
// You can construct a concrete instance of `AnalysisMeasureFieldInput` via:
//
//	AnalysisMeasureFieldArgs{...}
type AnalysisMeasureFieldInput interface {
	pulumi.Input

	ToAnalysisMeasureFieldOutput() AnalysisMeasureFieldOutput
	ToAnalysisMeasureFieldOutputWithContext(context.Context) AnalysisMeasureFieldOutput
}

type AnalysisMeasureFieldArgs struct {
	CalculatedMeasureField  AnalysisCalculatedMeasureFieldPtrInput  `pulumi:"calculatedMeasureField"`
	CategoricalMeasureField AnalysisCategoricalMeasureFieldPtrInput `pulumi:"categoricalMeasureField"`
	DateMeasureField        AnalysisDateMeasureFieldPtrInput        `pulumi:"dateMeasureField"`
	NumericalMeasureField   AnalysisNumericalMeasureFieldPtrInput   `pulumi:"numericalMeasureField"`
}

func (AnalysisMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMeasureField)(nil)).Elem()
}

func (i AnalysisMeasureFieldArgs) ToAnalysisMeasureFieldOutput() AnalysisMeasureFieldOutput {
	return i.ToAnalysisMeasureFieldOutputWithContext(context.Background())
}

func (i AnalysisMeasureFieldArgs) ToAnalysisMeasureFieldOutputWithContext(ctx context.Context) AnalysisMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMeasureFieldOutput)
}

func (i AnalysisMeasureFieldArgs) ToAnalysisMeasureFieldPtrOutput() AnalysisMeasureFieldPtrOutput {
	return i.ToAnalysisMeasureFieldPtrOutputWithContext(context.Background())
}

func (i AnalysisMeasureFieldArgs) ToAnalysisMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMeasureFieldOutput).ToAnalysisMeasureFieldPtrOutputWithContext(ctx)
}

// AnalysisMeasureFieldPtrInput is an input type that accepts AnalysisMeasureFieldArgs, AnalysisMeasureFieldPtr and AnalysisMeasureFieldPtrOutput values.
// You can construct a concrete instance of `AnalysisMeasureFieldPtrInput` via:
//
//	        AnalysisMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type AnalysisMeasureFieldPtrInput interface {
	pulumi.Input

	ToAnalysisMeasureFieldPtrOutput() AnalysisMeasureFieldPtrOutput
	ToAnalysisMeasureFieldPtrOutputWithContext(context.Context) AnalysisMeasureFieldPtrOutput
}

type analysisMeasureFieldPtrType AnalysisMeasureFieldArgs

func AnalysisMeasureFieldPtr(v *AnalysisMeasureFieldArgs) AnalysisMeasureFieldPtrInput {
	return (*analysisMeasureFieldPtrType)(v)
}

func (*analysisMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMeasureField)(nil)).Elem()
}

func (i *analysisMeasureFieldPtrType) ToAnalysisMeasureFieldPtrOutput() AnalysisMeasureFieldPtrOutput {
	return i.ToAnalysisMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *analysisMeasureFieldPtrType) ToAnalysisMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMeasureFieldPtrOutput)
}

// AnalysisMeasureFieldArrayInput is an input type that accepts AnalysisMeasureFieldArray and AnalysisMeasureFieldArrayOutput values.
// You can construct a concrete instance of `AnalysisMeasureFieldArrayInput` via:
//
//	AnalysisMeasureFieldArray{ AnalysisMeasureFieldArgs{...} }
type AnalysisMeasureFieldArrayInput interface {
	pulumi.Input

	ToAnalysisMeasureFieldArrayOutput() AnalysisMeasureFieldArrayOutput
	ToAnalysisMeasureFieldArrayOutputWithContext(context.Context) AnalysisMeasureFieldArrayOutput
}

type AnalysisMeasureFieldArray []AnalysisMeasureFieldInput

func (AnalysisMeasureFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisMeasureField)(nil)).Elem()
}

func (i AnalysisMeasureFieldArray) ToAnalysisMeasureFieldArrayOutput() AnalysisMeasureFieldArrayOutput {
	return i.ToAnalysisMeasureFieldArrayOutputWithContext(context.Background())
}

func (i AnalysisMeasureFieldArray) ToAnalysisMeasureFieldArrayOutputWithContext(ctx context.Context) AnalysisMeasureFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisMeasureFieldOutput struct{ *pulumi.OutputState }

func (AnalysisMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMeasureField)(nil)).Elem()
}

func (o AnalysisMeasureFieldOutput) ToAnalysisMeasureFieldOutput() AnalysisMeasureFieldOutput {
	return o
}

func (o AnalysisMeasureFieldOutput) ToAnalysisMeasureFieldOutputWithContext(ctx context.Context) AnalysisMeasureFieldOutput {
	return o
}

func (o AnalysisMeasureFieldOutput) ToAnalysisMeasureFieldPtrOutput() AnalysisMeasureFieldPtrOutput {
	return o.ToAnalysisMeasureFieldPtrOutputWithContext(context.Background())
}

func (o AnalysisMeasureFieldOutput) ToAnalysisMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisMeasureField) *AnalysisMeasureField {
		return &v
	}).(AnalysisMeasureFieldPtrOutput)
}

func (o AnalysisMeasureFieldOutput) CalculatedMeasureField() AnalysisCalculatedMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisMeasureField) *AnalysisCalculatedMeasureField { return v.CalculatedMeasureField }).(AnalysisCalculatedMeasureFieldPtrOutput)
}

func (o AnalysisMeasureFieldOutput) CategoricalMeasureField() AnalysisCategoricalMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisMeasureField) *AnalysisCategoricalMeasureField { return v.CategoricalMeasureField }).(AnalysisCategoricalMeasureFieldPtrOutput)
}

func (o AnalysisMeasureFieldOutput) DateMeasureField() AnalysisDateMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisMeasureField) *AnalysisDateMeasureField { return v.DateMeasureField }).(AnalysisDateMeasureFieldPtrOutput)
}

func (o AnalysisMeasureFieldOutput) NumericalMeasureField() AnalysisNumericalMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisMeasureField) *AnalysisNumericalMeasureField { return v.NumericalMeasureField }).(AnalysisNumericalMeasureFieldPtrOutput)
}

type AnalysisMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (AnalysisMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMeasureField)(nil)).Elem()
}

func (o AnalysisMeasureFieldPtrOutput) ToAnalysisMeasureFieldPtrOutput() AnalysisMeasureFieldPtrOutput {
	return o
}

func (o AnalysisMeasureFieldPtrOutput) ToAnalysisMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisMeasureFieldPtrOutput {
	return o
}

func (o AnalysisMeasureFieldPtrOutput) Elem() AnalysisMeasureFieldOutput {
	return o.ApplyT(func(v *AnalysisMeasureField) AnalysisMeasureField {
		if v != nil {
			return *v
		}
		var ret AnalysisMeasureField
		return ret
	}).(AnalysisMeasureFieldOutput)
}

func (o AnalysisMeasureFieldPtrOutput) CalculatedMeasureField() AnalysisCalculatedMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisMeasureField) *AnalysisCalculatedMeasureField {
		if v == nil {
			return nil
		}
		return v.CalculatedMeasureField
	}).(AnalysisCalculatedMeasureFieldPtrOutput)
}

func (o AnalysisMeasureFieldPtrOutput) CategoricalMeasureField() AnalysisCategoricalMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisMeasureField) *AnalysisCategoricalMeasureField {
		if v == nil {
			return nil
		}
		return v.CategoricalMeasureField
	}).(AnalysisCategoricalMeasureFieldPtrOutput)
}

func (o AnalysisMeasureFieldPtrOutput) DateMeasureField() AnalysisDateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisMeasureField) *AnalysisDateMeasureField {
		if v == nil {
			return nil
		}
		return v.DateMeasureField
	}).(AnalysisDateMeasureFieldPtrOutput)
}

func (o AnalysisMeasureFieldPtrOutput) NumericalMeasureField() AnalysisNumericalMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisMeasureField) *AnalysisNumericalMeasureField {
		if v == nil {
			return nil
		}
		return v.NumericalMeasureField
	}).(AnalysisNumericalMeasureFieldPtrOutput)
}

type AnalysisMeasureFieldArrayOutput struct{ *pulumi.OutputState }

func (AnalysisMeasureFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisMeasureField)(nil)).Elem()
}

func (o AnalysisMeasureFieldArrayOutput) ToAnalysisMeasureFieldArrayOutput() AnalysisMeasureFieldArrayOutput {
	return o
}

func (o AnalysisMeasureFieldArrayOutput) ToAnalysisMeasureFieldArrayOutputWithContext(ctx context.Context) AnalysisMeasureFieldArrayOutput {
	return o
}

func (o AnalysisMeasureFieldArrayOutput) Index(i pulumi.IntInput) AnalysisMeasureFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisMeasureField {
		return vs[0].([]AnalysisMeasureField)[vs[1].(int)]
	}).(AnalysisMeasureFieldOutput)
}

type AnalysisMetricComparisonComputation struct {
	ComputationId string                 `pulumi:"computationId"`
	FromValue     AnalysisMeasureField   `pulumi:"fromValue"`
	Name          *string                `pulumi:"name"`
	TargetValue   AnalysisMeasureField   `pulumi:"targetValue"`
	Time          AnalysisDimensionField `pulumi:"time"`
}

// AnalysisMetricComparisonComputationInput is an input type that accepts AnalysisMetricComparisonComputationArgs and AnalysisMetricComparisonComputationOutput values.
// You can construct a concrete instance of `AnalysisMetricComparisonComputationInput` via:
//
//	AnalysisMetricComparisonComputationArgs{...}
type AnalysisMetricComparisonComputationInput interface {
	pulumi.Input

	ToAnalysisMetricComparisonComputationOutput() AnalysisMetricComparisonComputationOutput
	ToAnalysisMetricComparisonComputationOutputWithContext(context.Context) AnalysisMetricComparisonComputationOutput
}

type AnalysisMetricComparisonComputationArgs struct {
	ComputationId pulumi.StringInput          `pulumi:"computationId"`
	FromValue     AnalysisMeasureFieldInput   `pulumi:"fromValue"`
	Name          pulumi.StringPtrInput       `pulumi:"name"`
	TargetValue   AnalysisMeasureFieldInput   `pulumi:"targetValue"`
	Time          AnalysisDimensionFieldInput `pulumi:"time"`
}

func (AnalysisMetricComparisonComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMetricComparisonComputation)(nil)).Elem()
}

func (i AnalysisMetricComparisonComputationArgs) ToAnalysisMetricComparisonComputationOutput() AnalysisMetricComparisonComputationOutput {
	return i.ToAnalysisMetricComparisonComputationOutputWithContext(context.Background())
}

func (i AnalysisMetricComparisonComputationArgs) ToAnalysisMetricComparisonComputationOutputWithContext(ctx context.Context) AnalysisMetricComparisonComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMetricComparisonComputationOutput)
}

func (i AnalysisMetricComparisonComputationArgs) ToAnalysisMetricComparisonComputationPtrOutput() AnalysisMetricComparisonComputationPtrOutput {
	return i.ToAnalysisMetricComparisonComputationPtrOutputWithContext(context.Background())
}

func (i AnalysisMetricComparisonComputationArgs) ToAnalysisMetricComparisonComputationPtrOutputWithContext(ctx context.Context) AnalysisMetricComparisonComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMetricComparisonComputationOutput).ToAnalysisMetricComparisonComputationPtrOutputWithContext(ctx)
}

// AnalysisMetricComparisonComputationPtrInput is an input type that accepts AnalysisMetricComparisonComputationArgs, AnalysisMetricComparisonComputationPtr and AnalysisMetricComparisonComputationPtrOutput values.
// You can construct a concrete instance of `AnalysisMetricComparisonComputationPtrInput` via:
//
//	        AnalysisMetricComparisonComputationArgs{...}
//
//	or:
//
//	        nil
type AnalysisMetricComparisonComputationPtrInput interface {
	pulumi.Input

	ToAnalysisMetricComparisonComputationPtrOutput() AnalysisMetricComparisonComputationPtrOutput
	ToAnalysisMetricComparisonComputationPtrOutputWithContext(context.Context) AnalysisMetricComparisonComputationPtrOutput
}

type analysisMetricComparisonComputationPtrType AnalysisMetricComparisonComputationArgs

func AnalysisMetricComparisonComputationPtr(v *AnalysisMetricComparisonComputationArgs) AnalysisMetricComparisonComputationPtrInput {
	return (*analysisMetricComparisonComputationPtrType)(v)
}

func (*analysisMetricComparisonComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMetricComparisonComputation)(nil)).Elem()
}

func (i *analysisMetricComparisonComputationPtrType) ToAnalysisMetricComparisonComputationPtrOutput() AnalysisMetricComparisonComputationPtrOutput {
	return i.ToAnalysisMetricComparisonComputationPtrOutputWithContext(context.Background())
}

func (i *analysisMetricComparisonComputationPtrType) ToAnalysisMetricComparisonComputationPtrOutputWithContext(ctx context.Context) AnalysisMetricComparisonComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMetricComparisonComputationPtrOutput)
}

type AnalysisMetricComparisonComputationOutput struct{ *pulumi.OutputState }

func (AnalysisMetricComparisonComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMetricComparisonComputation)(nil)).Elem()
}

func (o AnalysisMetricComparisonComputationOutput) ToAnalysisMetricComparisonComputationOutput() AnalysisMetricComparisonComputationOutput {
	return o
}

func (o AnalysisMetricComparisonComputationOutput) ToAnalysisMetricComparisonComputationOutputWithContext(ctx context.Context) AnalysisMetricComparisonComputationOutput {
	return o
}

func (o AnalysisMetricComparisonComputationOutput) ToAnalysisMetricComparisonComputationPtrOutput() AnalysisMetricComparisonComputationPtrOutput {
	return o.ToAnalysisMetricComparisonComputationPtrOutputWithContext(context.Background())
}

func (o AnalysisMetricComparisonComputationOutput) ToAnalysisMetricComparisonComputationPtrOutputWithContext(ctx context.Context) AnalysisMetricComparisonComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisMetricComparisonComputation) *AnalysisMetricComparisonComputation {
		return &v
	}).(AnalysisMetricComparisonComputationPtrOutput)
}

func (o AnalysisMetricComparisonComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisMetricComparisonComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o AnalysisMetricComparisonComputationOutput) FromValue() AnalysisMeasureFieldOutput {
	return o.ApplyT(func(v AnalysisMetricComparisonComputation) AnalysisMeasureField { return v.FromValue }).(AnalysisMeasureFieldOutput)
}

func (o AnalysisMetricComparisonComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisMetricComparisonComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisMetricComparisonComputationOutput) TargetValue() AnalysisMeasureFieldOutput {
	return o.ApplyT(func(v AnalysisMetricComparisonComputation) AnalysisMeasureField { return v.TargetValue }).(AnalysisMeasureFieldOutput)
}

func (o AnalysisMetricComparisonComputationOutput) Time() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v AnalysisMetricComparisonComputation) AnalysisDimensionField { return v.Time }).(AnalysisDimensionFieldOutput)
}

type AnalysisMetricComparisonComputationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisMetricComparisonComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMetricComparisonComputation)(nil)).Elem()
}

func (o AnalysisMetricComparisonComputationPtrOutput) ToAnalysisMetricComparisonComputationPtrOutput() AnalysisMetricComparisonComputationPtrOutput {
	return o
}

func (o AnalysisMetricComparisonComputationPtrOutput) ToAnalysisMetricComparisonComputationPtrOutputWithContext(ctx context.Context) AnalysisMetricComparisonComputationPtrOutput {
	return o
}

func (o AnalysisMetricComparisonComputationPtrOutput) Elem() AnalysisMetricComparisonComputationOutput {
	return o.ApplyT(func(v *AnalysisMetricComparisonComputation) AnalysisMetricComparisonComputation {
		if v != nil {
			return *v
		}
		var ret AnalysisMetricComparisonComputation
		return ret
	}).(AnalysisMetricComparisonComputationOutput)
}

func (o AnalysisMetricComparisonComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisMetricComparisonComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisMetricComparisonComputationPtrOutput) FromValue() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisMetricComparisonComputation) *AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return &v.FromValue
	}).(AnalysisMeasureFieldPtrOutput)
}

func (o AnalysisMetricComparisonComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisMetricComparisonComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisMetricComparisonComputationPtrOutput) TargetValue() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisMetricComparisonComputation) *AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return &v.TargetValue
	}).(AnalysisMeasureFieldPtrOutput)
}

func (o AnalysisMetricComparisonComputationPtrOutput) Time() AnalysisDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisMetricComparisonComputation) *AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(AnalysisDimensionFieldPtrOutput)
}

type AnalysisMinimumLabelType struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisMinimumLabelTypeInput is an input type that accepts AnalysisMinimumLabelTypeArgs and AnalysisMinimumLabelTypeOutput values.
// You can construct a concrete instance of `AnalysisMinimumLabelTypeInput` via:
//
//	AnalysisMinimumLabelTypeArgs{...}
type AnalysisMinimumLabelTypeInput interface {
	pulumi.Input

	ToAnalysisMinimumLabelTypeOutput() AnalysisMinimumLabelTypeOutput
	ToAnalysisMinimumLabelTypeOutputWithContext(context.Context) AnalysisMinimumLabelTypeOutput
}

type AnalysisMinimumLabelTypeArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisMinimumLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMinimumLabelType)(nil)).Elem()
}

func (i AnalysisMinimumLabelTypeArgs) ToAnalysisMinimumLabelTypeOutput() AnalysisMinimumLabelTypeOutput {
	return i.ToAnalysisMinimumLabelTypeOutputWithContext(context.Background())
}

func (i AnalysisMinimumLabelTypeArgs) ToAnalysisMinimumLabelTypeOutputWithContext(ctx context.Context) AnalysisMinimumLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMinimumLabelTypeOutput)
}

func (i AnalysisMinimumLabelTypeArgs) ToAnalysisMinimumLabelTypePtrOutput() AnalysisMinimumLabelTypePtrOutput {
	return i.ToAnalysisMinimumLabelTypePtrOutputWithContext(context.Background())
}

func (i AnalysisMinimumLabelTypeArgs) ToAnalysisMinimumLabelTypePtrOutputWithContext(ctx context.Context) AnalysisMinimumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMinimumLabelTypeOutput).ToAnalysisMinimumLabelTypePtrOutputWithContext(ctx)
}

// AnalysisMinimumLabelTypePtrInput is an input type that accepts AnalysisMinimumLabelTypeArgs, AnalysisMinimumLabelTypePtr and AnalysisMinimumLabelTypePtrOutput values.
// You can construct a concrete instance of `AnalysisMinimumLabelTypePtrInput` via:
//
//	        AnalysisMinimumLabelTypeArgs{...}
//
//	or:
//
//	        nil
type AnalysisMinimumLabelTypePtrInput interface {
	pulumi.Input

	ToAnalysisMinimumLabelTypePtrOutput() AnalysisMinimumLabelTypePtrOutput
	ToAnalysisMinimumLabelTypePtrOutputWithContext(context.Context) AnalysisMinimumLabelTypePtrOutput
}

type analysisMinimumLabelTypePtrType AnalysisMinimumLabelTypeArgs

func AnalysisMinimumLabelTypePtr(v *AnalysisMinimumLabelTypeArgs) AnalysisMinimumLabelTypePtrInput {
	return (*analysisMinimumLabelTypePtrType)(v)
}

func (*analysisMinimumLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMinimumLabelType)(nil)).Elem()
}

func (i *analysisMinimumLabelTypePtrType) ToAnalysisMinimumLabelTypePtrOutput() AnalysisMinimumLabelTypePtrOutput {
	return i.ToAnalysisMinimumLabelTypePtrOutputWithContext(context.Background())
}

func (i *analysisMinimumLabelTypePtrType) ToAnalysisMinimumLabelTypePtrOutputWithContext(ctx context.Context) AnalysisMinimumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMinimumLabelTypePtrOutput)
}

type AnalysisMinimumLabelTypeOutput struct{ *pulumi.OutputState }

func (AnalysisMinimumLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMinimumLabelType)(nil)).Elem()
}

func (o AnalysisMinimumLabelTypeOutput) ToAnalysisMinimumLabelTypeOutput() AnalysisMinimumLabelTypeOutput {
	return o
}

func (o AnalysisMinimumLabelTypeOutput) ToAnalysisMinimumLabelTypeOutputWithContext(ctx context.Context) AnalysisMinimumLabelTypeOutput {
	return o
}

func (o AnalysisMinimumLabelTypeOutput) ToAnalysisMinimumLabelTypePtrOutput() AnalysisMinimumLabelTypePtrOutput {
	return o.ToAnalysisMinimumLabelTypePtrOutputWithContext(context.Background())
}

func (o AnalysisMinimumLabelTypeOutput) ToAnalysisMinimumLabelTypePtrOutputWithContext(ctx context.Context) AnalysisMinimumLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisMinimumLabelType) *AnalysisMinimumLabelType {
		return &v
	}).(AnalysisMinimumLabelTypePtrOutput)
}

func (o AnalysisMinimumLabelTypeOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisMinimumLabelType) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisMinimumLabelTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisMinimumLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMinimumLabelType)(nil)).Elem()
}

func (o AnalysisMinimumLabelTypePtrOutput) ToAnalysisMinimumLabelTypePtrOutput() AnalysisMinimumLabelTypePtrOutput {
	return o
}

func (o AnalysisMinimumLabelTypePtrOutput) ToAnalysisMinimumLabelTypePtrOutputWithContext(ctx context.Context) AnalysisMinimumLabelTypePtrOutput {
	return o
}

func (o AnalysisMinimumLabelTypePtrOutput) Elem() AnalysisMinimumLabelTypeOutput {
	return o.ApplyT(func(v *AnalysisMinimumLabelType) AnalysisMinimumLabelType {
		if v != nil {
			return *v
		}
		var ret AnalysisMinimumLabelType
		return ret
	}).(AnalysisMinimumLabelTypeOutput)
}

func (o AnalysisMinimumLabelTypePtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisMinimumLabelType) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisMissingDataConfiguration struct {
	TreatmentOption *AnalysisMissingDataTreatmentOption `pulumi:"treatmentOption"`
}

// AnalysisMissingDataConfigurationInput is an input type that accepts AnalysisMissingDataConfigurationArgs and AnalysisMissingDataConfigurationOutput values.
// You can construct a concrete instance of `AnalysisMissingDataConfigurationInput` via:
//
//	AnalysisMissingDataConfigurationArgs{...}
type AnalysisMissingDataConfigurationInput interface {
	pulumi.Input

	ToAnalysisMissingDataConfigurationOutput() AnalysisMissingDataConfigurationOutput
	ToAnalysisMissingDataConfigurationOutputWithContext(context.Context) AnalysisMissingDataConfigurationOutput
}

type AnalysisMissingDataConfigurationArgs struct {
	TreatmentOption AnalysisMissingDataTreatmentOptionPtrInput `pulumi:"treatmentOption"`
}

func (AnalysisMissingDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMissingDataConfiguration)(nil)).Elem()
}

func (i AnalysisMissingDataConfigurationArgs) ToAnalysisMissingDataConfigurationOutput() AnalysisMissingDataConfigurationOutput {
	return i.ToAnalysisMissingDataConfigurationOutputWithContext(context.Background())
}

func (i AnalysisMissingDataConfigurationArgs) ToAnalysisMissingDataConfigurationOutputWithContext(ctx context.Context) AnalysisMissingDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMissingDataConfigurationOutput)
}

// AnalysisMissingDataConfigurationArrayInput is an input type that accepts AnalysisMissingDataConfigurationArray and AnalysisMissingDataConfigurationArrayOutput values.
// You can construct a concrete instance of `AnalysisMissingDataConfigurationArrayInput` via:
//
//	AnalysisMissingDataConfigurationArray{ AnalysisMissingDataConfigurationArgs{...} }
type AnalysisMissingDataConfigurationArrayInput interface {
	pulumi.Input

	ToAnalysisMissingDataConfigurationArrayOutput() AnalysisMissingDataConfigurationArrayOutput
	ToAnalysisMissingDataConfigurationArrayOutputWithContext(context.Context) AnalysisMissingDataConfigurationArrayOutput
}

type AnalysisMissingDataConfigurationArray []AnalysisMissingDataConfigurationInput

func (AnalysisMissingDataConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisMissingDataConfiguration)(nil)).Elem()
}

func (i AnalysisMissingDataConfigurationArray) ToAnalysisMissingDataConfigurationArrayOutput() AnalysisMissingDataConfigurationArrayOutput {
	return i.ToAnalysisMissingDataConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalysisMissingDataConfigurationArray) ToAnalysisMissingDataConfigurationArrayOutputWithContext(ctx context.Context) AnalysisMissingDataConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMissingDataConfigurationArrayOutput)
}

type AnalysisMissingDataConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisMissingDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMissingDataConfiguration)(nil)).Elem()
}

func (o AnalysisMissingDataConfigurationOutput) ToAnalysisMissingDataConfigurationOutput() AnalysisMissingDataConfigurationOutput {
	return o
}

func (o AnalysisMissingDataConfigurationOutput) ToAnalysisMissingDataConfigurationOutputWithContext(ctx context.Context) AnalysisMissingDataConfigurationOutput {
	return o
}

func (o AnalysisMissingDataConfigurationOutput) TreatmentOption() AnalysisMissingDataTreatmentOptionPtrOutput {
	return o.ApplyT(func(v AnalysisMissingDataConfiguration) *AnalysisMissingDataTreatmentOption { return v.TreatmentOption }).(AnalysisMissingDataTreatmentOptionPtrOutput)
}

type AnalysisMissingDataConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisMissingDataConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisMissingDataConfiguration)(nil)).Elem()
}

func (o AnalysisMissingDataConfigurationArrayOutput) ToAnalysisMissingDataConfigurationArrayOutput() AnalysisMissingDataConfigurationArrayOutput {
	return o
}

func (o AnalysisMissingDataConfigurationArrayOutput) ToAnalysisMissingDataConfigurationArrayOutputWithContext(ctx context.Context) AnalysisMissingDataConfigurationArrayOutput {
	return o
}

func (o AnalysisMissingDataConfigurationArrayOutput) Index(i pulumi.IntInput) AnalysisMissingDataConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisMissingDataConfiguration {
		return vs[0].([]AnalysisMissingDataConfiguration)[vs[1].(int)]
	}).(AnalysisMissingDataConfigurationOutput)
}

type AnalysisNegativeValueConfiguration struct {
	DisplayMode AnalysisNegativeValueDisplayMode `pulumi:"displayMode"`
}

// AnalysisNegativeValueConfigurationInput is an input type that accepts AnalysisNegativeValueConfigurationArgs and AnalysisNegativeValueConfigurationOutput values.
// You can construct a concrete instance of `AnalysisNegativeValueConfigurationInput` via:
//
//	AnalysisNegativeValueConfigurationArgs{...}
type AnalysisNegativeValueConfigurationInput interface {
	pulumi.Input

	ToAnalysisNegativeValueConfigurationOutput() AnalysisNegativeValueConfigurationOutput
	ToAnalysisNegativeValueConfigurationOutputWithContext(context.Context) AnalysisNegativeValueConfigurationOutput
}

type AnalysisNegativeValueConfigurationArgs struct {
	DisplayMode AnalysisNegativeValueDisplayModeInput `pulumi:"displayMode"`
}

func (AnalysisNegativeValueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNegativeValueConfiguration)(nil)).Elem()
}

func (i AnalysisNegativeValueConfigurationArgs) ToAnalysisNegativeValueConfigurationOutput() AnalysisNegativeValueConfigurationOutput {
	return i.ToAnalysisNegativeValueConfigurationOutputWithContext(context.Background())
}

func (i AnalysisNegativeValueConfigurationArgs) ToAnalysisNegativeValueConfigurationOutputWithContext(ctx context.Context) AnalysisNegativeValueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNegativeValueConfigurationOutput)
}

func (i AnalysisNegativeValueConfigurationArgs) ToAnalysisNegativeValueConfigurationPtrOutput() AnalysisNegativeValueConfigurationPtrOutput {
	return i.ToAnalysisNegativeValueConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisNegativeValueConfigurationArgs) ToAnalysisNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNegativeValueConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNegativeValueConfigurationOutput).ToAnalysisNegativeValueConfigurationPtrOutputWithContext(ctx)
}

// AnalysisNegativeValueConfigurationPtrInput is an input type that accepts AnalysisNegativeValueConfigurationArgs, AnalysisNegativeValueConfigurationPtr and AnalysisNegativeValueConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisNegativeValueConfigurationPtrInput` via:
//
//	        AnalysisNegativeValueConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisNegativeValueConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisNegativeValueConfigurationPtrOutput() AnalysisNegativeValueConfigurationPtrOutput
	ToAnalysisNegativeValueConfigurationPtrOutputWithContext(context.Context) AnalysisNegativeValueConfigurationPtrOutput
}

type analysisNegativeValueConfigurationPtrType AnalysisNegativeValueConfigurationArgs

func AnalysisNegativeValueConfigurationPtr(v *AnalysisNegativeValueConfigurationArgs) AnalysisNegativeValueConfigurationPtrInput {
	return (*analysisNegativeValueConfigurationPtrType)(v)
}

func (*analysisNegativeValueConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNegativeValueConfiguration)(nil)).Elem()
}

func (i *analysisNegativeValueConfigurationPtrType) ToAnalysisNegativeValueConfigurationPtrOutput() AnalysisNegativeValueConfigurationPtrOutput {
	return i.ToAnalysisNegativeValueConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisNegativeValueConfigurationPtrType) ToAnalysisNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNegativeValueConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNegativeValueConfigurationPtrOutput)
}

type AnalysisNegativeValueConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisNegativeValueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNegativeValueConfiguration)(nil)).Elem()
}

func (o AnalysisNegativeValueConfigurationOutput) ToAnalysisNegativeValueConfigurationOutput() AnalysisNegativeValueConfigurationOutput {
	return o
}

func (o AnalysisNegativeValueConfigurationOutput) ToAnalysisNegativeValueConfigurationOutputWithContext(ctx context.Context) AnalysisNegativeValueConfigurationOutput {
	return o
}

func (o AnalysisNegativeValueConfigurationOutput) ToAnalysisNegativeValueConfigurationPtrOutput() AnalysisNegativeValueConfigurationPtrOutput {
	return o.ToAnalysisNegativeValueConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisNegativeValueConfigurationOutput) ToAnalysisNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNegativeValueConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNegativeValueConfiguration) *AnalysisNegativeValueConfiguration {
		return &v
	}).(AnalysisNegativeValueConfigurationPtrOutput)
}

func (o AnalysisNegativeValueConfigurationOutput) DisplayMode() AnalysisNegativeValueDisplayModeOutput {
	return o.ApplyT(func(v AnalysisNegativeValueConfiguration) AnalysisNegativeValueDisplayMode { return v.DisplayMode }).(AnalysisNegativeValueDisplayModeOutput)
}

type AnalysisNegativeValueConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNegativeValueConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNegativeValueConfiguration)(nil)).Elem()
}

func (o AnalysisNegativeValueConfigurationPtrOutput) ToAnalysisNegativeValueConfigurationPtrOutput() AnalysisNegativeValueConfigurationPtrOutput {
	return o
}

func (o AnalysisNegativeValueConfigurationPtrOutput) ToAnalysisNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNegativeValueConfigurationPtrOutput {
	return o
}

func (o AnalysisNegativeValueConfigurationPtrOutput) Elem() AnalysisNegativeValueConfigurationOutput {
	return o.ApplyT(func(v *AnalysisNegativeValueConfiguration) AnalysisNegativeValueConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisNegativeValueConfiguration
		return ret
	}).(AnalysisNegativeValueConfigurationOutput)
}

func (o AnalysisNegativeValueConfigurationPtrOutput) DisplayMode() AnalysisNegativeValueDisplayModePtrOutput {
	return o.ApplyT(func(v *AnalysisNegativeValueConfiguration) *AnalysisNegativeValueDisplayMode {
		if v == nil {
			return nil
		}
		return &v.DisplayMode
	}).(AnalysisNegativeValueDisplayModePtrOutput)
}

type AnalysisNullValueFormatConfiguration struct {
	NullString string `pulumi:"nullString"`
}

// AnalysisNullValueFormatConfigurationInput is an input type that accepts AnalysisNullValueFormatConfigurationArgs and AnalysisNullValueFormatConfigurationOutput values.
// You can construct a concrete instance of `AnalysisNullValueFormatConfigurationInput` via:
//
//	AnalysisNullValueFormatConfigurationArgs{...}
type AnalysisNullValueFormatConfigurationInput interface {
	pulumi.Input

	ToAnalysisNullValueFormatConfigurationOutput() AnalysisNullValueFormatConfigurationOutput
	ToAnalysisNullValueFormatConfigurationOutputWithContext(context.Context) AnalysisNullValueFormatConfigurationOutput
}

type AnalysisNullValueFormatConfigurationArgs struct {
	NullString pulumi.StringInput `pulumi:"nullString"`
}

func (AnalysisNullValueFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNullValueFormatConfiguration)(nil)).Elem()
}

func (i AnalysisNullValueFormatConfigurationArgs) ToAnalysisNullValueFormatConfigurationOutput() AnalysisNullValueFormatConfigurationOutput {
	return i.ToAnalysisNullValueFormatConfigurationOutputWithContext(context.Background())
}

func (i AnalysisNullValueFormatConfigurationArgs) ToAnalysisNullValueFormatConfigurationOutputWithContext(ctx context.Context) AnalysisNullValueFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNullValueFormatConfigurationOutput)
}

func (i AnalysisNullValueFormatConfigurationArgs) ToAnalysisNullValueFormatConfigurationPtrOutput() AnalysisNullValueFormatConfigurationPtrOutput {
	return i.ToAnalysisNullValueFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisNullValueFormatConfigurationArgs) ToAnalysisNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNullValueFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNullValueFormatConfigurationOutput).ToAnalysisNullValueFormatConfigurationPtrOutputWithContext(ctx)
}

// AnalysisNullValueFormatConfigurationPtrInput is an input type that accepts AnalysisNullValueFormatConfigurationArgs, AnalysisNullValueFormatConfigurationPtr and AnalysisNullValueFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisNullValueFormatConfigurationPtrInput` via:
//
//	        AnalysisNullValueFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisNullValueFormatConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisNullValueFormatConfigurationPtrOutput() AnalysisNullValueFormatConfigurationPtrOutput
	ToAnalysisNullValueFormatConfigurationPtrOutputWithContext(context.Context) AnalysisNullValueFormatConfigurationPtrOutput
}

type analysisNullValueFormatConfigurationPtrType AnalysisNullValueFormatConfigurationArgs

func AnalysisNullValueFormatConfigurationPtr(v *AnalysisNullValueFormatConfigurationArgs) AnalysisNullValueFormatConfigurationPtrInput {
	return (*analysisNullValueFormatConfigurationPtrType)(v)
}

func (*analysisNullValueFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNullValueFormatConfiguration)(nil)).Elem()
}

func (i *analysisNullValueFormatConfigurationPtrType) ToAnalysisNullValueFormatConfigurationPtrOutput() AnalysisNullValueFormatConfigurationPtrOutput {
	return i.ToAnalysisNullValueFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisNullValueFormatConfigurationPtrType) ToAnalysisNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNullValueFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNullValueFormatConfigurationPtrOutput)
}

type AnalysisNullValueFormatConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisNullValueFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNullValueFormatConfiguration)(nil)).Elem()
}

func (o AnalysisNullValueFormatConfigurationOutput) ToAnalysisNullValueFormatConfigurationOutput() AnalysisNullValueFormatConfigurationOutput {
	return o
}

func (o AnalysisNullValueFormatConfigurationOutput) ToAnalysisNullValueFormatConfigurationOutputWithContext(ctx context.Context) AnalysisNullValueFormatConfigurationOutput {
	return o
}

func (o AnalysisNullValueFormatConfigurationOutput) ToAnalysisNullValueFormatConfigurationPtrOutput() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ToAnalysisNullValueFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisNullValueFormatConfigurationOutput) ToAnalysisNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNullValueFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		return &v
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisNullValueFormatConfigurationOutput) NullString() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisNullValueFormatConfiguration) string { return v.NullString }).(pulumi.StringOutput)
}

type AnalysisNullValueFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNullValueFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNullValueFormatConfiguration)(nil)).Elem()
}

func (o AnalysisNullValueFormatConfigurationPtrOutput) ToAnalysisNullValueFormatConfigurationPtrOutput() AnalysisNullValueFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisNullValueFormatConfigurationPtrOutput) ToAnalysisNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNullValueFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisNullValueFormatConfigurationPtrOutput) Elem() AnalysisNullValueFormatConfigurationOutput {
	return o.ApplyT(func(v *AnalysisNullValueFormatConfiguration) AnalysisNullValueFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisNullValueFormatConfiguration
		return ret
	}).(AnalysisNullValueFormatConfigurationOutput)
}

func (o AnalysisNullValueFormatConfigurationPtrOutput) NullString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisNullValueFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.NullString
	}).(pulumi.StringPtrOutput)
}

type AnalysisNumberDisplayFormatConfiguration struct {
	DecimalPlacesConfiguration   *AnalysisDecimalPlacesConfiguration    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   *AnalysisNegativeValueConfiguration    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration *AnalysisNullValueFormatConfiguration  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  *AnalysisNumberScale                   `pulumi:"numberScale"`
	Prefix                       *string                                `pulumi:"prefix"`
	SeparatorConfiguration       *AnalysisNumericSeparatorConfiguration `pulumi:"separatorConfiguration"`
	Suffix                       *string                                `pulumi:"suffix"`
}

// AnalysisNumberDisplayFormatConfigurationInput is an input type that accepts AnalysisNumberDisplayFormatConfigurationArgs and AnalysisNumberDisplayFormatConfigurationOutput values.
// You can construct a concrete instance of `AnalysisNumberDisplayFormatConfigurationInput` via:
//
//	AnalysisNumberDisplayFormatConfigurationArgs{...}
type AnalysisNumberDisplayFormatConfigurationInput interface {
	pulumi.Input

	ToAnalysisNumberDisplayFormatConfigurationOutput() AnalysisNumberDisplayFormatConfigurationOutput
	ToAnalysisNumberDisplayFormatConfigurationOutputWithContext(context.Context) AnalysisNumberDisplayFormatConfigurationOutput
}

type AnalysisNumberDisplayFormatConfigurationArgs struct {
	DecimalPlacesConfiguration   AnalysisDecimalPlacesConfigurationPtrInput    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   AnalysisNegativeValueConfigurationPtrInput    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration AnalysisNullValueFormatConfigurationPtrInput  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  AnalysisNumberScalePtrInput                   `pulumi:"numberScale"`
	Prefix                       pulumi.StringPtrInput                         `pulumi:"prefix"`
	SeparatorConfiguration       AnalysisNumericSeparatorConfigurationPtrInput `pulumi:"separatorConfiguration"`
	Suffix                       pulumi.StringPtrInput                         `pulumi:"suffix"`
}

func (AnalysisNumberDisplayFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (i AnalysisNumberDisplayFormatConfigurationArgs) ToAnalysisNumberDisplayFormatConfigurationOutput() AnalysisNumberDisplayFormatConfigurationOutput {
	return i.ToAnalysisNumberDisplayFormatConfigurationOutputWithContext(context.Background())
}

func (i AnalysisNumberDisplayFormatConfigurationArgs) ToAnalysisNumberDisplayFormatConfigurationOutputWithContext(ctx context.Context) AnalysisNumberDisplayFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumberDisplayFormatConfigurationOutput)
}

func (i AnalysisNumberDisplayFormatConfigurationArgs) ToAnalysisNumberDisplayFormatConfigurationPtrOutput() AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return i.ToAnalysisNumberDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisNumberDisplayFormatConfigurationArgs) ToAnalysisNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumberDisplayFormatConfigurationOutput).ToAnalysisNumberDisplayFormatConfigurationPtrOutputWithContext(ctx)
}

// AnalysisNumberDisplayFormatConfigurationPtrInput is an input type that accepts AnalysisNumberDisplayFormatConfigurationArgs, AnalysisNumberDisplayFormatConfigurationPtr and AnalysisNumberDisplayFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisNumberDisplayFormatConfigurationPtrInput` via:
//
//	        AnalysisNumberDisplayFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumberDisplayFormatConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisNumberDisplayFormatConfigurationPtrOutput() AnalysisNumberDisplayFormatConfigurationPtrOutput
	ToAnalysisNumberDisplayFormatConfigurationPtrOutputWithContext(context.Context) AnalysisNumberDisplayFormatConfigurationPtrOutput
}

type analysisNumberDisplayFormatConfigurationPtrType AnalysisNumberDisplayFormatConfigurationArgs

func AnalysisNumberDisplayFormatConfigurationPtr(v *AnalysisNumberDisplayFormatConfigurationArgs) AnalysisNumberDisplayFormatConfigurationPtrInput {
	return (*analysisNumberDisplayFormatConfigurationPtrType)(v)
}

func (*analysisNumberDisplayFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (i *analysisNumberDisplayFormatConfigurationPtrType) ToAnalysisNumberDisplayFormatConfigurationPtrOutput() AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return i.ToAnalysisNumberDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisNumberDisplayFormatConfigurationPtrType) ToAnalysisNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumberDisplayFormatConfigurationPtrOutput)
}

type AnalysisNumberDisplayFormatConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisNumberDisplayFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) ToAnalysisNumberDisplayFormatConfigurationOutput() AnalysisNumberDisplayFormatConfigurationOutput {
	return o
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) ToAnalysisNumberDisplayFormatConfigurationOutputWithContext(ctx context.Context) AnalysisNumberDisplayFormatConfigurationOutput {
	return o
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) ToAnalysisNumberDisplayFormatConfigurationPtrOutput() AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return o.ToAnalysisNumberDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) ToAnalysisNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumberDisplayFormatConfiguration) *AnalysisNumberDisplayFormatConfiguration {
		return &v
	}).(AnalysisNumberDisplayFormatConfigurationPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) DecimalPlacesConfiguration() AnalysisDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisNumberDisplayFormatConfiguration) *AnalysisDecimalPlacesConfiguration {
		return v.DecimalPlacesConfiguration
	}).(AnalysisDecimalPlacesConfigurationPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) NegativeValueConfiguration() AnalysisNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisNumberDisplayFormatConfiguration) *AnalysisNegativeValueConfiguration {
		return v.NegativeValueConfiguration
	}).(AnalysisNegativeValueConfigurationPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) NullValueFormatConfiguration() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisNumberDisplayFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) NumberScale() AnalysisNumberScalePtrOutput {
	return o.ApplyT(func(v AnalysisNumberDisplayFormatConfiguration) *AnalysisNumberScale { return v.NumberScale }).(AnalysisNumberScalePtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisNumberDisplayFormatConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) SeparatorConfiguration() AnalysisNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisNumberDisplayFormatConfiguration) *AnalysisNumericSeparatorConfiguration {
		return v.SeparatorConfiguration
	}).(AnalysisNumericSeparatorConfigurationPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisNumberDisplayFormatConfiguration) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type AnalysisNumberDisplayFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumberDisplayFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (o AnalysisNumberDisplayFormatConfigurationPtrOutput) ToAnalysisNumberDisplayFormatConfigurationPtrOutput() AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisNumberDisplayFormatConfigurationPtrOutput) ToAnalysisNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisNumberDisplayFormatConfigurationPtrOutput) Elem() AnalysisNumberDisplayFormatConfigurationOutput {
	return o.ApplyT(func(v *AnalysisNumberDisplayFormatConfiguration) AnalysisNumberDisplayFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisNumberDisplayFormatConfiguration
		return ret
	}).(AnalysisNumberDisplayFormatConfigurationOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationPtrOutput) DecimalPlacesConfiguration() AnalysisDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumberDisplayFormatConfiguration) *AnalysisDecimalPlacesConfiguration {
		if v == nil {
			return nil
		}
		return v.DecimalPlacesConfiguration
	}).(AnalysisDecimalPlacesConfigurationPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationPtrOutput) NegativeValueConfiguration() AnalysisNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumberDisplayFormatConfiguration) *AnalysisNegativeValueConfiguration {
		if v == nil {
			return nil
		}
		return v.NegativeValueConfiguration
	}).(AnalysisNegativeValueConfigurationPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationPtrOutput) NullValueFormatConfiguration() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumberDisplayFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationPtrOutput) NumberScale() AnalysisNumberScalePtrOutput {
	return o.ApplyT(func(v *AnalysisNumberDisplayFormatConfiguration) *AnalysisNumberScale {
		if v == nil {
			return nil
		}
		return v.NumberScale
	}).(AnalysisNumberScalePtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisNumberDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationPtrOutput) SeparatorConfiguration() AnalysisNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumberDisplayFormatConfiguration) *AnalysisNumericSeparatorConfiguration {
		if v == nil {
			return nil
		}
		return v.SeparatorConfiguration
	}).(AnalysisNumericSeparatorConfigurationPtrOutput)
}

func (o AnalysisNumberDisplayFormatConfigurationPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisNumberDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type AnalysisNumberFormatConfiguration struct {
	FormatConfiguration *AnalysisNumericFormatConfiguration `pulumi:"formatConfiguration"`
}

// AnalysisNumberFormatConfigurationInput is an input type that accepts AnalysisNumberFormatConfigurationArgs and AnalysisNumberFormatConfigurationOutput values.
// You can construct a concrete instance of `AnalysisNumberFormatConfigurationInput` via:
//
//	AnalysisNumberFormatConfigurationArgs{...}
type AnalysisNumberFormatConfigurationInput interface {
	pulumi.Input

	ToAnalysisNumberFormatConfigurationOutput() AnalysisNumberFormatConfigurationOutput
	ToAnalysisNumberFormatConfigurationOutputWithContext(context.Context) AnalysisNumberFormatConfigurationOutput
}

type AnalysisNumberFormatConfigurationArgs struct {
	FormatConfiguration AnalysisNumericFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
}

func (AnalysisNumberFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumberFormatConfiguration)(nil)).Elem()
}

func (i AnalysisNumberFormatConfigurationArgs) ToAnalysisNumberFormatConfigurationOutput() AnalysisNumberFormatConfigurationOutput {
	return i.ToAnalysisNumberFormatConfigurationOutputWithContext(context.Background())
}

func (i AnalysisNumberFormatConfigurationArgs) ToAnalysisNumberFormatConfigurationOutputWithContext(ctx context.Context) AnalysisNumberFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumberFormatConfigurationOutput)
}

func (i AnalysisNumberFormatConfigurationArgs) ToAnalysisNumberFormatConfigurationPtrOutput() AnalysisNumberFormatConfigurationPtrOutput {
	return i.ToAnalysisNumberFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisNumberFormatConfigurationArgs) ToAnalysisNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumberFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumberFormatConfigurationOutput).ToAnalysisNumberFormatConfigurationPtrOutputWithContext(ctx)
}

// AnalysisNumberFormatConfigurationPtrInput is an input type that accepts AnalysisNumberFormatConfigurationArgs, AnalysisNumberFormatConfigurationPtr and AnalysisNumberFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisNumberFormatConfigurationPtrInput` via:
//
//	        AnalysisNumberFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumberFormatConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisNumberFormatConfigurationPtrOutput() AnalysisNumberFormatConfigurationPtrOutput
	ToAnalysisNumberFormatConfigurationPtrOutputWithContext(context.Context) AnalysisNumberFormatConfigurationPtrOutput
}

type analysisNumberFormatConfigurationPtrType AnalysisNumberFormatConfigurationArgs

func AnalysisNumberFormatConfigurationPtr(v *AnalysisNumberFormatConfigurationArgs) AnalysisNumberFormatConfigurationPtrInput {
	return (*analysisNumberFormatConfigurationPtrType)(v)
}

func (*analysisNumberFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumberFormatConfiguration)(nil)).Elem()
}

func (i *analysisNumberFormatConfigurationPtrType) ToAnalysisNumberFormatConfigurationPtrOutput() AnalysisNumberFormatConfigurationPtrOutput {
	return i.ToAnalysisNumberFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisNumberFormatConfigurationPtrType) ToAnalysisNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumberFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumberFormatConfigurationPtrOutput)
}

type AnalysisNumberFormatConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisNumberFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumberFormatConfiguration)(nil)).Elem()
}

func (o AnalysisNumberFormatConfigurationOutput) ToAnalysisNumberFormatConfigurationOutput() AnalysisNumberFormatConfigurationOutput {
	return o
}

func (o AnalysisNumberFormatConfigurationOutput) ToAnalysisNumberFormatConfigurationOutputWithContext(ctx context.Context) AnalysisNumberFormatConfigurationOutput {
	return o
}

func (o AnalysisNumberFormatConfigurationOutput) ToAnalysisNumberFormatConfigurationPtrOutput() AnalysisNumberFormatConfigurationPtrOutput {
	return o.ToAnalysisNumberFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisNumberFormatConfigurationOutput) ToAnalysisNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumberFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumberFormatConfiguration) *AnalysisNumberFormatConfiguration {
		return &v
	}).(AnalysisNumberFormatConfigurationPtrOutput)
}

func (o AnalysisNumberFormatConfigurationOutput) FormatConfiguration() AnalysisNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisNumberFormatConfiguration) *AnalysisNumericFormatConfiguration {
		return v.FormatConfiguration
	}).(AnalysisNumericFormatConfigurationPtrOutput)
}

type AnalysisNumberFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumberFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumberFormatConfiguration)(nil)).Elem()
}

func (o AnalysisNumberFormatConfigurationPtrOutput) ToAnalysisNumberFormatConfigurationPtrOutput() AnalysisNumberFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisNumberFormatConfigurationPtrOutput) ToAnalysisNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumberFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisNumberFormatConfigurationPtrOutput) Elem() AnalysisNumberFormatConfigurationOutput {
	return o.ApplyT(func(v *AnalysisNumberFormatConfiguration) AnalysisNumberFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisNumberFormatConfiguration
		return ret
	}).(AnalysisNumberFormatConfigurationOutput)
}

func (o AnalysisNumberFormatConfigurationPtrOutput) FormatConfiguration() AnalysisNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumberFormatConfiguration) *AnalysisNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(AnalysisNumericFormatConfigurationPtrOutput)
}

type AnalysisNumericAxisOptions struct {
	Range *AnalysisAxisDisplayRange `pulumi:"range"`
	Scale *AnalysisAxisScale        `pulumi:"scale"`
}

// AnalysisNumericAxisOptionsInput is an input type that accepts AnalysisNumericAxisOptionsArgs and AnalysisNumericAxisOptionsOutput values.
// You can construct a concrete instance of `AnalysisNumericAxisOptionsInput` via:
//
//	AnalysisNumericAxisOptionsArgs{...}
type AnalysisNumericAxisOptionsInput interface {
	pulumi.Input

	ToAnalysisNumericAxisOptionsOutput() AnalysisNumericAxisOptionsOutput
	ToAnalysisNumericAxisOptionsOutputWithContext(context.Context) AnalysisNumericAxisOptionsOutput
}

type AnalysisNumericAxisOptionsArgs struct {
	Range AnalysisAxisDisplayRangePtrInput `pulumi:"range"`
	Scale AnalysisAxisScalePtrInput        `pulumi:"scale"`
}

func (AnalysisNumericAxisOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericAxisOptions)(nil)).Elem()
}

func (i AnalysisNumericAxisOptionsArgs) ToAnalysisNumericAxisOptionsOutput() AnalysisNumericAxisOptionsOutput {
	return i.ToAnalysisNumericAxisOptionsOutputWithContext(context.Background())
}

func (i AnalysisNumericAxisOptionsArgs) ToAnalysisNumericAxisOptionsOutputWithContext(ctx context.Context) AnalysisNumericAxisOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericAxisOptionsOutput)
}

func (i AnalysisNumericAxisOptionsArgs) ToAnalysisNumericAxisOptionsPtrOutput() AnalysisNumericAxisOptionsPtrOutput {
	return i.ToAnalysisNumericAxisOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisNumericAxisOptionsArgs) ToAnalysisNumericAxisOptionsPtrOutputWithContext(ctx context.Context) AnalysisNumericAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericAxisOptionsOutput).ToAnalysisNumericAxisOptionsPtrOutputWithContext(ctx)
}

// AnalysisNumericAxisOptionsPtrInput is an input type that accepts AnalysisNumericAxisOptionsArgs, AnalysisNumericAxisOptionsPtr and AnalysisNumericAxisOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisNumericAxisOptionsPtrInput` via:
//
//	        AnalysisNumericAxisOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumericAxisOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisNumericAxisOptionsPtrOutput() AnalysisNumericAxisOptionsPtrOutput
	ToAnalysisNumericAxisOptionsPtrOutputWithContext(context.Context) AnalysisNumericAxisOptionsPtrOutput
}

type analysisNumericAxisOptionsPtrType AnalysisNumericAxisOptionsArgs

func AnalysisNumericAxisOptionsPtr(v *AnalysisNumericAxisOptionsArgs) AnalysisNumericAxisOptionsPtrInput {
	return (*analysisNumericAxisOptionsPtrType)(v)
}

func (*analysisNumericAxisOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericAxisOptions)(nil)).Elem()
}

func (i *analysisNumericAxisOptionsPtrType) ToAnalysisNumericAxisOptionsPtrOutput() AnalysisNumericAxisOptionsPtrOutput {
	return i.ToAnalysisNumericAxisOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisNumericAxisOptionsPtrType) ToAnalysisNumericAxisOptionsPtrOutputWithContext(ctx context.Context) AnalysisNumericAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericAxisOptionsPtrOutput)
}

type AnalysisNumericAxisOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisNumericAxisOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericAxisOptions)(nil)).Elem()
}

func (o AnalysisNumericAxisOptionsOutput) ToAnalysisNumericAxisOptionsOutput() AnalysisNumericAxisOptionsOutput {
	return o
}

func (o AnalysisNumericAxisOptionsOutput) ToAnalysisNumericAxisOptionsOutputWithContext(ctx context.Context) AnalysisNumericAxisOptionsOutput {
	return o
}

func (o AnalysisNumericAxisOptionsOutput) ToAnalysisNumericAxisOptionsPtrOutput() AnalysisNumericAxisOptionsPtrOutput {
	return o.ToAnalysisNumericAxisOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericAxisOptionsOutput) ToAnalysisNumericAxisOptionsPtrOutputWithContext(ctx context.Context) AnalysisNumericAxisOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericAxisOptions) *AnalysisNumericAxisOptions {
		return &v
	}).(AnalysisNumericAxisOptionsPtrOutput)
}

func (o AnalysisNumericAxisOptionsOutput) Range() AnalysisAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v AnalysisNumericAxisOptions) *AnalysisAxisDisplayRange { return v.Range }).(AnalysisAxisDisplayRangePtrOutput)
}

func (o AnalysisNumericAxisOptionsOutput) Scale() AnalysisAxisScalePtrOutput {
	return o.ApplyT(func(v AnalysisNumericAxisOptions) *AnalysisAxisScale { return v.Scale }).(AnalysisAxisScalePtrOutput)
}

type AnalysisNumericAxisOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericAxisOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericAxisOptions)(nil)).Elem()
}

func (o AnalysisNumericAxisOptionsPtrOutput) ToAnalysisNumericAxisOptionsPtrOutput() AnalysisNumericAxisOptionsPtrOutput {
	return o
}

func (o AnalysisNumericAxisOptionsPtrOutput) ToAnalysisNumericAxisOptionsPtrOutputWithContext(ctx context.Context) AnalysisNumericAxisOptionsPtrOutput {
	return o
}

func (o AnalysisNumericAxisOptionsPtrOutput) Elem() AnalysisNumericAxisOptionsOutput {
	return o.ApplyT(func(v *AnalysisNumericAxisOptions) AnalysisNumericAxisOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericAxisOptions
		return ret
	}).(AnalysisNumericAxisOptionsOutput)
}

func (o AnalysisNumericAxisOptionsPtrOutput) Range() AnalysisAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v *AnalysisNumericAxisOptions) *AnalysisAxisDisplayRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(AnalysisAxisDisplayRangePtrOutput)
}

func (o AnalysisNumericAxisOptionsPtrOutput) Scale() AnalysisAxisScalePtrOutput {
	return o.ApplyT(func(v *AnalysisNumericAxisOptions) *AnalysisAxisScale {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(AnalysisAxisScalePtrOutput)
}

type AnalysisNumericEqualityDrillDownFilter struct {
	Column AnalysisColumnIdentifier `pulumi:"column"`
	Value  float64                  `pulumi:"value"`
}

// AnalysisNumericEqualityDrillDownFilterInput is an input type that accepts AnalysisNumericEqualityDrillDownFilterArgs and AnalysisNumericEqualityDrillDownFilterOutput values.
// You can construct a concrete instance of `AnalysisNumericEqualityDrillDownFilterInput` via:
//
//	AnalysisNumericEqualityDrillDownFilterArgs{...}
type AnalysisNumericEqualityDrillDownFilterInput interface {
	pulumi.Input

	ToAnalysisNumericEqualityDrillDownFilterOutput() AnalysisNumericEqualityDrillDownFilterOutput
	ToAnalysisNumericEqualityDrillDownFilterOutputWithContext(context.Context) AnalysisNumericEqualityDrillDownFilterOutput
}

type AnalysisNumericEqualityDrillDownFilterArgs struct {
	Column AnalysisColumnIdentifierInput `pulumi:"column"`
	Value  pulumi.Float64Input           `pulumi:"value"`
}

func (AnalysisNumericEqualityDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (i AnalysisNumericEqualityDrillDownFilterArgs) ToAnalysisNumericEqualityDrillDownFilterOutput() AnalysisNumericEqualityDrillDownFilterOutput {
	return i.ToAnalysisNumericEqualityDrillDownFilterOutputWithContext(context.Background())
}

func (i AnalysisNumericEqualityDrillDownFilterArgs) ToAnalysisNumericEqualityDrillDownFilterOutputWithContext(ctx context.Context) AnalysisNumericEqualityDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericEqualityDrillDownFilterOutput)
}

func (i AnalysisNumericEqualityDrillDownFilterArgs) ToAnalysisNumericEqualityDrillDownFilterPtrOutput() AnalysisNumericEqualityDrillDownFilterPtrOutput {
	return i.ToAnalysisNumericEqualityDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i AnalysisNumericEqualityDrillDownFilterArgs) ToAnalysisNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericEqualityDrillDownFilterOutput).ToAnalysisNumericEqualityDrillDownFilterPtrOutputWithContext(ctx)
}

// AnalysisNumericEqualityDrillDownFilterPtrInput is an input type that accepts AnalysisNumericEqualityDrillDownFilterArgs, AnalysisNumericEqualityDrillDownFilterPtr and AnalysisNumericEqualityDrillDownFilterPtrOutput values.
// You can construct a concrete instance of `AnalysisNumericEqualityDrillDownFilterPtrInput` via:
//
//	        AnalysisNumericEqualityDrillDownFilterArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumericEqualityDrillDownFilterPtrInput interface {
	pulumi.Input

	ToAnalysisNumericEqualityDrillDownFilterPtrOutput() AnalysisNumericEqualityDrillDownFilterPtrOutput
	ToAnalysisNumericEqualityDrillDownFilterPtrOutputWithContext(context.Context) AnalysisNumericEqualityDrillDownFilterPtrOutput
}

type analysisNumericEqualityDrillDownFilterPtrType AnalysisNumericEqualityDrillDownFilterArgs

func AnalysisNumericEqualityDrillDownFilterPtr(v *AnalysisNumericEqualityDrillDownFilterArgs) AnalysisNumericEqualityDrillDownFilterPtrInput {
	return (*analysisNumericEqualityDrillDownFilterPtrType)(v)
}

func (*analysisNumericEqualityDrillDownFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (i *analysisNumericEqualityDrillDownFilterPtrType) ToAnalysisNumericEqualityDrillDownFilterPtrOutput() AnalysisNumericEqualityDrillDownFilterPtrOutput {
	return i.ToAnalysisNumericEqualityDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i *analysisNumericEqualityDrillDownFilterPtrType) ToAnalysisNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericEqualityDrillDownFilterPtrOutput)
}

type AnalysisNumericEqualityDrillDownFilterOutput struct{ *pulumi.OutputState }

func (AnalysisNumericEqualityDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (o AnalysisNumericEqualityDrillDownFilterOutput) ToAnalysisNumericEqualityDrillDownFilterOutput() AnalysisNumericEqualityDrillDownFilterOutput {
	return o
}

func (o AnalysisNumericEqualityDrillDownFilterOutput) ToAnalysisNumericEqualityDrillDownFilterOutputWithContext(ctx context.Context) AnalysisNumericEqualityDrillDownFilterOutput {
	return o
}

func (o AnalysisNumericEqualityDrillDownFilterOutput) ToAnalysisNumericEqualityDrillDownFilterPtrOutput() AnalysisNumericEqualityDrillDownFilterPtrOutput {
	return o.ToAnalysisNumericEqualityDrillDownFilterPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericEqualityDrillDownFilterOutput) ToAnalysisNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityDrillDownFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericEqualityDrillDownFilter) *AnalysisNumericEqualityDrillDownFilter {
		return &v
	}).(AnalysisNumericEqualityDrillDownFilterPtrOutput)
}

func (o AnalysisNumericEqualityDrillDownFilterOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisNumericEqualityDrillDownFilter) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisNumericEqualityDrillDownFilterOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisNumericEqualityDrillDownFilter) float64 { return v.Value }).(pulumi.Float64Output)
}

type AnalysisNumericEqualityDrillDownFilterPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericEqualityDrillDownFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (o AnalysisNumericEqualityDrillDownFilterPtrOutput) ToAnalysisNumericEqualityDrillDownFilterPtrOutput() AnalysisNumericEqualityDrillDownFilterPtrOutput {
	return o
}

func (o AnalysisNumericEqualityDrillDownFilterPtrOutput) ToAnalysisNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityDrillDownFilterPtrOutput {
	return o
}

func (o AnalysisNumericEqualityDrillDownFilterPtrOutput) Elem() AnalysisNumericEqualityDrillDownFilterOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityDrillDownFilter) AnalysisNumericEqualityDrillDownFilter {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericEqualityDrillDownFilter
		return ret
	}).(AnalysisNumericEqualityDrillDownFilterOutput)
}

func (o AnalysisNumericEqualityDrillDownFilterPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityDrillDownFilter) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisNumericEqualityDrillDownFilterPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityDrillDownFilter) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type AnalysisNumericEqualityFilter struct {
	AggregationFunction *AnalysisAggregationFunction           `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifier               `pulumi:"column"`
	FilterId            string                                 `pulumi:"filterId"`
	MatchOperator       AnalysisNumericEqualityMatchOperator   `pulumi:"matchOperator"`
	NullOption          AnalysisFilterNullOption               `pulumi:"nullOption"`
	ParameterName       *string                                `pulumi:"parameterName"`
	SelectAllOptions    *AnalysisNumericFilterSelectAllOptions `pulumi:"selectAllOptions"`
	Value               *float64                               `pulumi:"value"`
}

// AnalysisNumericEqualityFilterInput is an input type that accepts AnalysisNumericEqualityFilterArgs and AnalysisNumericEqualityFilterOutput values.
// You can construct a concrete instance of `AnalysisNumericEqualityFilterInput` via:
//
//	AnalysisNumericEqualityFilterArgs{...}
type AnalysisNumericEqualityFilterInput interface {
	pulumi.Input

	ToAnalysisNumericEqualityFilterOutput() AnalysisNumericEqualityFilterOutput
	ToAnalysisNumericEqualityFilterOutputWithContext(context.Context) AnalysisNumericEqualityFilterOutput
}

type AnalysisNumericEqualityFilterArgs struct {
	AggregationFunction AnalysisAggregationFunctionPtrInput           `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifierInput                 `pulumi:"column"`
	FilterId            pulumi.StringInput                            `pulumi:"filterId"`
	MatchOperator       AnalysisNumericEqualityMatchOperatorInput     `pulumi:"matchOperator"`
	NullOption          AnalysisFilterNullOptionInput                 `pulumi:"nullOption"`
	ParameterName       pulumi.StringPtrInput                         `pulumi:"parameterName"`
	SelectAllOptions    AnalysisNumericFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
	Value               pulumi.Float64PtrInput                        `pulumi:"value"`
}

func (AnalysisNumericEqualityFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericEqualityFilter)(nil)).Elem()
}

func (i AnalysisNumericEqualityFilterArgs) ToAnalysisNumericEqualityFilterOutput() AnalysisNumericEqualityFilterOutput {
	return i.ToAnalysisNumericEqualityFilterOutputWithContext(context.Background())
}

func (i AnalysisNumericEqualityFilterArgs) ToAnalysisNumericEqualityFilterOutputWithContext(ctx context.Context) AnalysisNumericEqualityFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericEqualityFilterOutput)
}

func (i AnalysisNumericEqualityFilterArgs) ToAnalysisNumericEqualityFilterPtrOutput() AnalysisNumericEqualityFilterPtrOutput {
	return i.ToAnalysisNumericEqualityFilterPtrOutputWithContext(context.Background())
}

func (i AnalysisNumericEqualityFilterArgs) ToAnalysisNumericEqualityFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericEqualityFilterOutput).ToAnalysisNumericEqualityFilterPtrOutputWithContext(ctx)
}

// AnalysisNumericEqualityFilterPtrInput is an input type that accepts AnalysisNumericEqualityFilterArgs, AnalysisNumericEqualityFilterPtr and AnalysisNumericEqualityFilterPtrOutput values.
// You can construct a concrete instance of `AnalysisNumericEqualityFilterPtrInput` via:
//
//	        AnalysisNumericEqualityFilterArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumericEqualityFilterPtrInput interface {
	pulumi.Input

	ToAnalysisNumericEqualityFilterPtrOutput() AnalysisNumericEqualityFilterPtrOutput
	ToAnalysisNumericEqualityFilterPtrOutputWithContext(context.Context) AnalysisNumericEqualityFilterPtrOutput
}

type analysisNumericEqualityFilterPtrType AnalysisNumericEqualityFilterArgs

func AnalysisNumericEqualityFilterPtr(v *AnalysisNumericEqualityFilterArgs) AnalysisNumericEqualityFilterPtrInput {
	return (*analysisNumericEqualityFilterPtrType)(v)
}

func (*analysisNumericEqualityFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericEqualityFilter)(nil)).Elem()
}

func (i *analysisNumericEqualityFilterPtrType) ToAnalysisNumericEqualityFilterPtrOutput() AnalysisNumericEqualityFilterPtrOutput {
	return i.ToAnalysisNumericEqualityFilterPtrOutputWithContext(context.Background())
}

func (i *analysisNumericEqualityFilterPtrType) ToAnalysisNumericEqualityFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericEqualityFilterPtrOutput)
}

type AnalysisNumericEqualityFilterOutput struct{ *pulumi.OutputState }

func (AnalysisNumericEqualityFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericEqualityFilter)(nil)).Elem()
}

func (o AnalysisNumericEqualityFilterOutput) ToAnalysisNumericEqualityFilterOutput() AnalysisNumericEqualityFilterOutput {
	return o
}

func (o AnalysisNumericEqualityFilterOutput) ToAnalysisNumericEqualityFilterOutputWithContext(ctx context.Context) AnalysisNumericEqualityFilterOutput {
	return o
}

func (o AnalysisNumericEqualityFilterOutput) ToAnalysisNumericEqualityFilterPtrOutput() AnalysisNumericEqualityFilterPtrOutput {
	return o.ToAnalysisNumericEqualityFilterPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericEqualityFilterOutput) ToAnalysisNumericEqualityFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericEqualityFilter) *AnalysisNumericEqualityFilter {
		return &v
	}).(AnalysisNumericEqualityFilterPtrOutput)
}

func (o AnalysisNumericEqualityFilterOutput) AggregationFunction() AnalysisAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisNumericEqualityFilter) *AnalysisAggregationFunction { return v.AggregationFunction }).(AnalysisAggregationFunctionPtrOutput)
}

func (o AnalysisNumericEqualityFilterOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisNumericEqualityFilter) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisNumericEqualityFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisNumericEqualityFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o AnalysisNumericEqualityFilterOutput) MatchOperator() AnalysisNumericEqualityMatchOperatorOutput {
	return o.ApplyT(func(v AnalysisNumericEqualityFilter) AnalysisNumericEqualityMatchOperator { return v.MatchOperator }).(AnalysisNumericEqualityMatchOperatorOutput)
}

func (o AnalysisNumericEqualityFilterOutput) NullOption() AnalysisFilterNullOptionOutput {
	return o.ApplyT(func(v AnalysisNumericEqualityFilter) AnalysisFilterNullOption { return v.NullOption }).(AnalysisFilterNullOptionOutput)
}

func (o AnalysisNumericEqualityFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisNumericEqualityFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o AnalysisNumericEqualityFilterOutput) SelectAllOptions() AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisNumericEqualityFilter) *AnalysisNumericFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(AnalysisNumericFilterSelectAllOptionsPtrOutput)
}

func (o AnalysisNumericEqualityFilterOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisNumericEqualityFilter) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type AnalysisNumericEqualityFilterPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericEqualityFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericEqualityFilter)(nil)).Elem()
}

func (o AnalysisNumericEqualityFilterPtrOutput) ToAnalysisNumericEqualityFilterPtrOutput() AnalysisNumericEqualityFilterPtrOutput {
	return o
}

func (o AnalysisNumericEqualityFilterPtrOutput) ToAnalysisNumericEqualityFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityFilterPtrOutput {
	return o
}

func (o AnalysisNumericEqualityFilterPtrOutput) Elem() AnalysisNumericEqualityFilterOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityFilter) AnalysisNumericEqualityFilter {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericEqualityFilter
		return ret
	}).(AnalysisNumericEqualityFilterOutput)
}

func (o AnalysisNumericEqualityFilterPtrOutput) AggregationFunction() AnalysisAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityFilter) *AnalysisAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(AnalysisAggregationFunctionPtrOutput)
}

func (o AnalysisNumericEqualityFilterPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityFilter) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisNumericEqualityFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisNumericEqualityFilterPtrOutput) MatchOperator() AnalysisNumericEqualityMatchOperatorPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityFilter) *AnalysisNumericEqualityMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(AnalysisNumericEqualityMatchOperatorPtrOutput)
}

func (o AnalysisNumericEqualityFilterPtrOutput) NullOption() AnalysisFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityFilter) *AnalysisFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(AnalysisFilterNullOptionPtrOutput)
}

func (o AnalysisNumericEqualityFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisNumericEqualityFilterPtrOutput) SelectAllOptions() AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityFilter) *AnalysisNumericFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(AnalysisNumericFilterSelectAllOptionsPtrOutput)
}

func (o AnalysisNumericEqualityFilterPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type AnalysisNumericFormatConfiguration struct {
	CurrencyDisplayFormatConfiguration   *AnalysisCurrencyDisplayFormatConfiguration   `pulumi:"currencyDisplayFormatConfiguration"`
	NumberDisplayFormatConfiguration     *AnalysisNumberDisplayFormatConfiguration     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration *AnalysisPercentageDisplayFormatConfiguration `pulumi:"percentageDisplayFormatConfiguration"`
}

// AnalysisNumericFormatConfigurationInput is an input type that accepts AnalysisNumericFormatConfigurationArgs and AnalysisNumericFormatConfigurationOutput values.
// You can construct a concrete instance of `AnalysisNumericFormatConfigurationInput` via:
//
//	AnalysisNumericFormatConfigurationArgs{...}
type AnalysisNumericFormatConfigurationInput interface {
	pulumi.Input

	ToAnalysisNumericFormatConfigurationOutput() AnalysisNumericFormatConfigurationOutput
	ToAnalysisNumericFormatConfigurationOutputWithContext(context.Context) AnalysisNumericFormatConfigurationOutput
}

type AnalysisNumericFormatConfigurationArgs struct {
	CurrencyDisplayFormatConfiguration   AnalysisCurrencyDisplayFormatConfigurationPtrInput   `pulumi:"currencyDisplayFormatConfiguration"`
	NumberDisplayFormatConfiguration     AnalysisNumberDisplayFormatConfigurationPtrInput     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration AnalysisPercentageDisplayFormatConfigurationPtrInput `pulumi:"percentageDisplayFormatConfiguration"`
}

func (AnalysisNumericFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericFormatConfiguration)(nil)).Elem()
}

func (i AnalysisNumericFormatConfigurationArgs) ToAnalysisNumericFormatConfigurationOutput() AnalysisNumericFormatConfigurationOutput {
	return i.ToAnalysisNumericFormatConfigurationOutputWithContext(context.Background())
}

func (i AnalysisNumericFormatConfigurationArgs) ToAnalysisNumericFormatConfigurationOutputWithContext(ctx context.Context) AnalysisNumericFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericFormatConfigurationOutput)
}

func (i AnalysisNumericFormatConfigurationArgs) ToAnalysisNumericFormatConfigurationPtrOutput() AnalysisNumericFormatConfigurationPtrOutput {
	return i.ToAnalysisNumericFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisNumericFormatConfigurationArgs) ToAnalysisNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumericFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericFormatConfigurationOutput).ToAnalysisNumericFormatConfigurationPtrOutputWithContext(ctx)
}

// AnalysisNumericFormatConfigurationPtrInput is an input type that accepts AnalysisNumericFormatConfigurationArgs, AnalysisNumericFormatConfigurationPtr and AnalysisNumericFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisNumericFormatConfigurationPtrInput` via:
//
//	        AnalysisNumericFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumericFormatConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisNumericFormatConfigurationPtrOutput() AnalysisNumericFormatConfigurationPtrOutput
	ToAnalysisNumericFormatConfigurationPtrOutputWithContext(context.Context) AnalysisNumericFormatConfigurationPtrOutput
}

type analysisNumericFormatConfigurationPtrType AnalysisNumericFormatConfigurationArgs

func AnalysisNumericFormatConfigurationPtr(v *AnalysisNumericFormatConfigurationArgs) AnalysisNumericFormatConfigurationPtrInput {
	return (*analysisNumericFormatConfigurationPtrType)(v)
}

func (*analysisNumericFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericFormatConfiguration)(nil)).Elem()
}

func (i *analysisNumericFormatConfigurationPtrType) ToAnalysisNumericFormatConfigurationPtrOutput() AnalysisNumericFormatConfigurationPtrOutput {
	return i.ToAnalysisNumericFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisNumericFormatConfigurationPtrType) ToAnalysisNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumericFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericFormatConfigurationPtrOutput)
}

type AnalysisNumericFormatConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisNumericFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericFormatConfiguration)(nil)).Elem()
}

func (o AnalysisNumericFormatConfigurationOutput) ToAnalysisNumericFormatConfigurationOutput() AnalysisNumericFormatConfigurationOutput {
	return o
}

func (o AnalysisNumericFormatConfigurationOutput) ToAnalysisNumericFormatConfigurationOutputWithContext(ctx context.Context) AnalysisNumericFormatConfigurationOutput {
	return o
}

func (o AnalysisNumericFormatConfigurationOutput) ToAnalysisNumericFormatConfigurationPtrOutput() AnalysisNumericFormatConfigurationPtrOutput {
	return o.ToAnalysisNumericFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericFormatConfigurationOutput) ToAnalysisNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumericFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericFormatConfiguration) *AnalysisNumericFormatConfiguration {
		return &v
	}).(AnalysisNumericFormatConfigurationPtrOutput)
}

func (o AnalysisNumericFormatConfigurationOutput) CurrencyDisplayFormatConfiguration() AnalysisCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisNumericFormatConfiguration) *AnalysisCurrencyDisplayFormatConfiguration {
		return v.CurrencyDisplayFormatConfiguration
	}).(AnalysisCurrencyDisplayFormatConfigurationPtrOutput)
}

func (o AnalysisNumericFormatConfigurationOutput) NumberDisplayFormatConfiguration() AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisNumericFormatConfiguration) *AnalysisNumberDisplayFormatConfiguration {
		return v.NumberDisplayFormatConfiguration
	}).(AnalysisNumberDisplayFormatConfigurationPtrOutput)
}

func (o AnalysisNumericFormatConfigurationOutput) PercentageDisplayFormatConfiguration() AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisNumericFormatConfiguration) *AnalysisPercentageDisplayFormatConfiguration {
		return v.PercentageDisplayFormatConfiguration
	}).(AnalysisPercentageDisplayFormatConfigurationPtrOutput)
}

type AnalysisNumericFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericFormatConfiguration)(nil)).Elem()
}

func (o AnalysisNumericFormatConfigurationPtrOutput) ToAnalysisNumericFormatConfigurationPtrOutput() AnalysisNumericFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisNumericFormatConfigurationPtrOutput) ToAnalysisNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumericFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisNumericFormatConfigurationPtrOutput) Elem() AnalysisNumericFormatConfigurationOutput {
	return o.ApplyT(func(v *AnalysisNumericFormatConfiguration) AnalysisNumericFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericFormatConfiguration
		return ret
	}).(AnalysisNumericFormatConfigurationOutput)
}

func (o AnalysisNumericFormatConfigurationPtrOutput) CurrencyDisplayFormatConfiguration() AnalysisCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericFormatConfiguration) *AnalysisCurrencyDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.CurrencyDisplayFormatConfiguration
	}).(AnalysisCurrencyDisplayFormatConfigurationPtrOutput)
}

func (o AnalysisNumericFormatConfigurationPtrOutput) NumberDisplayFormatConfiguration() AnalysisNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericFormatConfiguration) *AnalysisNumberDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumberDisplayFormatConfiguration
	}).(AnalysisNumberDisplayFormatConfigurationPtrOutput)
}

func (o AnalysisNumericFormatConfigurationPtrOutput) PercentageDisplayFormatConfiguration() AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericFormatConfiguration) *AnalysisPercentageDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.PercentageDisplayFormatConfiguration
	}).(AnalysisPercentageDisplayFormatConfigurationPtrOutput)
}

type AnalysisNumericRangeFilter struct {
	AggregationFunction *AnalysisAggregationFunction           `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifier               `pulumi:"column"`
	FilterId            string                                 `pulumi:"filterId"`
	IncludeMaximum      *bool                                  `pulumi:"includeMaximum"`
	IncludeMinimum      *bool                                  `pulumi:"includeMinimum"`
	NullOption          AnalysisFilterNullOption               `pulumi:"nullOption"`
	RangeMaximum        *AnalysisNumericRangeFilterValue       `pulumi:"rangeMaximum"`
	RangeMinimum        *AnalysisNumericRangeFilterValue       `pulumi:"rangeMinimum"`
	SelectAllOptions    *AnalysisNumericFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// AnalysisNumericRangeFilterInput is an input type that accepts AnalysisNumericRangeFilterArgs and AnalysisNumericRangeFilterOutput values.
// You can construct a concrete instance of `AnalysisNumericRangeFilterInput` via:
//
//	AnalysisNumericRangeFilterArgs{...}
type AnalysisNumericRangeFilterInput interface {
	pulumi.Input

	ToAnalysisNumericRangeFilterOutput() AnalysisNumericRangeFilterOutput
	ToAnalysisNumericRangeFilterOutputWithContext(context.Context) AnalysisNumericRangeFilterOutput
}

type AnalysisNumericRangeFilterArgs struct {
	AggregationFunction AnalysisAggregationFunctionPtrInput           `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifierInput                 `pulumi:"column"`
	FilterId            pulumi.StringInput                            `pulumi:"filterId"`
	IncludeMaximum      pulumi.BoolPtrInput                           `pulumi:"includeMaximum"`
	IncludeMinimum      pulumi.BoolPtrInput                           `pulumi:"includeMinimum"`
	NullOption          AnalysisFilterNullOptionInput                 `pulumi:"nullOption"`
	RangeMaximum        AnalysisNumericRangeFilterValuePtrInput       `pulumi:"rangeMaximum"`
	RangeMinimum        AnalysisNumericRangeFilterValuePtrInput       `pulumi:"rangeMinimum"`
	SelectAllOptions    AnalysisNumericFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (AnalysisNumericRangeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericRangeFilter)(nil)).Elem()
}

func (i AnalysisNumericRangeFilterArgs) ToAnalysisNumericRangeFilterOutput() AnalysisNumericRangeFilterOutput {
	return i.ToAnalysisNumericRangeFilterOutputWithContext(context.Background())
}

func (i AnalysisNumericRangeFilterArgs) ToAnalysisNumericRangeFilterOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericRangeFilterOutput)
}

func (i AnalysisNumericRangeFilterArgs) ToAnalysisNumericRangeFilterPtrOutput() AnalysisNumericRangeFilterPtrOutput {
	return i.ToAnalysisNumericRangeFilterPtrOutputWithContext(context.Background())
}

func (i AnalysisNumericRangeFilterArgs) ToAnalysisNumericRangeFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericRangeFilterOutput).ToAnalysisNumericRangeFilterPtrOutputWithContext(ctx)
}

// AnalysisNumericRangeFilterPtrInput is an input type that accepts AnalysisNumericRangeFilterArgs, AnalysisNumericRangeFilterPtr and AnalysisNumericRangeFilterPtrOutput values.
// You can construct a concrete instance of `AnalysisNumericRangeFilterPtrInput` via:
//
//	        AnalysisNumericRangeFilterArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumericRangeFilterPtrInput interface {
	pulumi.Input

	ToAnalysisNumericRangeFilterPtrOutput() AnalysisNumericRangeFilterPtrOutput
	ToAnalysisNumericRangeFilterPtrOutputWithContext(context.Context) AnalysisNumericRangeFilterPtrOutput
}

type analysisNumericRangeFilterPtrType AnalysisNumericRangeFilterArgs

func AnalysisNumericRangeFilterPtr(v *AnalysisNumericRangeFilterArgs) AnalysisNumericRangeFilterPtrInput {
	return (*analysisNumericRangeFilterPtrType)(v)
}

func (*analysisNumericRangeFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericRangeFilter)(nil)).Elem()
}

func (i *analysisNumericRangeFilterPtrType) ToAnalysisNumericRangeFilterPtrOutput() AnalysisNumericRangeFilterPtrOutput {
	return i.ToAnalysisNumericRangeFilterPtrOutputWithContext(context.Background())
}

func (i *analysisNumericRangeFilterPtrType) ToAnalysisNumericRangeFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericRangeFilterPtrOutput)
}

type AnalysisNumericRangeFilterOutput struct{ *pulumi.OutputState }

func (AnalysisNumericRangeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericRangeFilter)(nil)).Elem()
}

func (o AnalysisNumericRangeFilterOutput) ToAnalysisNumericRangeFilterOutput() AnalysisNumericRangeFilterOutput {
	return o
}

func (o AnalysisNumericRangeFilterOutput) ToAnalysisNumericRangeFilterOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterOutput {
	return o
}

func (o AnalysisNumericRangeFilterOutput) ToAnalysisNumericRangeFilterPtrOutput() AnalysisNumericRangeFilterPtrOutput {
	return o.ToAnalysisNumericRangeFilterPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericRangeFilterOutput) ToAnalysisNumericRangeFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericRangeFilter) *AnalysisNumericRangeFilter {
		return &v
	}).(AnalysisNumericRangeFilterPtrOutput)
}

func (o AnalysisNumericRangeFilterOutput) AggregationFunction() AnalysisAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilter) *AnalysisAggregationFunction { return v.AggregationFunction }).(AnalysisAggregationFunctionPtrOutput)
}

func (o AnalysisNumericRangeFilterOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilter) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisNumericRangeFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o AnalysisNumericRangeFilterOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilter) *bool { return v.IncludeMaximum }).(pulumi.BoolPtrOutput)
}

func (o AnalysisNumericRangeFilterOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilter) *bool { return v.IncludeMinimum }).(pulumi.BoolPtrOutput)
}

func (o AnalysisNumericRangeFilterOutput) NullOption() AnalysisFilterNullOptionOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilter) AnalysisFilterNullOption { return v.NullOption }).(AnalysisFilterNullOptionOutput)
}

func (o AnalysisNumericRangeFilterOutput) RangeMaximum() AnalysisNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilter) *AnalysisNumericRangeFilterValue { return v.RangeMaximum }).(AnalysisNumericRangeFilterValuePtrOutput)
}

func (o AnalysisNumericRangeFilterOutput) RangeMinimum() AnalysisNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilter) *AnalysisNumericRangeFilterValue { return v.RangeMinimum }).(AnalysisNumericRangeFilterValuePtrOutput)
}

func (o AnalysisNumericRangeFilterOutput) SelectAllOptions() AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilter) *AnalysisNumericFilterSelectAllOptions { return v.SelectAllOptions }).(AnalysisNumericFilterSelectAllOptionsPtrOutput)
}

type AnalysisNumericRangeFilterPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericRangeFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericRangeFilter)(nil)).Elem()
}

func (o AnalysisNumericRangeFilterPtrOutput) ToAnalysisNumericRangeFilterPtrOutput() AnalysisNumericRangeFilterPtrOutput {
	return o
}

func (o AnalysisNumericRangeFilterPtrOutput) ToAnalysisNumericRangeFilterPtrOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterPtrOutput {
	return o
}

func (o AnalysisNumericRangeFilterPtrOutput) Elem() AnalysisNumericRangeFilterOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilter) AnalysisNumericRangeFilter {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericRangeFilter
		return ret
	}).(AnalysisNumericRangeFilterOutput)
}

func (o AnalysisNumericRangeFilterPtrOutput) AggregationFunction() AnalysisAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilter) *AnalysisAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(AnalysisAggregationFunctionPtrOutput)
}

func (o AnalysisNumericRangeFilterPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilter) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisNumericRangeFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisNumericRangeFilterPtrOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMaximum
	}).(pulumi.BoolPtrOutput)
}

func (o AnalysisNumericRangeFilterPtrOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMinimum
	}).(pulumi.BoolPtrOutput)
}

func (o AnalysisNumericRangeFilterPtrOutput) NullOption() AnalysisFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilter) *AnalysisFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(AnalysisFilterNullOptionPtrOutput)
}

func (o AnalysisNumericRangeFilterPtrOutput) RangeMaximum() AnalysisNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilter) *AnalysisNumericRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMaximum
	}).(AnalysisNumericRangeFilterValuePtrOutput)
}

func (o AnalysisNumericRangeFilterPtrOutput) RangeMinimum() AnalysisNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilter) *AnalysisNumericRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMinimum
	}).(AnalysisNumericRangeFilterValuePtrOutput)
}

func (o AnalysisNumericRangeFilterPtrOutput) SelectAllOptions() AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilter) *AnalysisNumericFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(AnalysisNumericFilterSelectAllOptionsPtrOutput)
}

type AnalysisNumericRangeFilterValue struct {
	Parameter   *string  `pulumi:"parameter"`
	StaticValue *float64 `pulumi:"staticValue"`
}

// AnalysisNumericRangeFilterValueInput is an input type that accepts AnalysisNumericRangeFilterValueArgs and AnalysisNumericRangeFilterValueOutput values.
// You can construct a concrete instance of `AnalysisNumericRangeFilterValueInput` via:
//
//	AnalysisNumericRangeFilterValueArgs{...}
type AnalysisNumericRangeFilterValueInput interface {
	pulumi.Input

	ToAnalysisNumericRangeFilterValueOutput() AnalysisNumericRangeFilterValueOutput
	ToAnalysisNumericRangeFilterValueOutputWithContext(context.Context) AnalysisNumericRangeFilterValueOutput
}

type AnalysisNumericRangeFilterValueArgs struct {
	Parameter   pulumi.StringPtrInput  `pulumi:"parameter"`
	StaticValue pulumi.Float64PtrInput `pulumi:"staticValue"`
}

func (AnalysisNumericRangeFilterValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericRangeFilterValue)(nil)).Elem()
}

func (i AnalysisNumericRangeFilterValueArgs) ToAnalysisNumericRangeFilterValueOutput() AnalysisNumericRangeFilterValueOutput {
	return i.ToAnalysisNumericRangeFilterValueOutputWithContext(context.Background())
}

func (i AnalysisNumericRangeFilterValueArgs) ToAnalysisNumericRangeFilterValueOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericRangeFilterValueOutput)
}

func (i AnalysisNumericRangeFilterValueArgs) ToAnalysisNumericRangeFilterValuePtrOutput() AnalysisNumericRangeFilterValuePtrOutput {
	return i.ToAnalysisNumericRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i AnalysisNumericRangeFilterValueArgs) ToAnalysisNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericRangeFilterValueOutput).ToAnalysisNumericRangeFilterValuePtrOutputWithContext(ctx)
}

// AnalysisNumericRangeFilterValuePtrInput is an input type that accepts AnalysisNumericRangeFilterValueArgs, AnalysisNumericRangeFilterValuePtr and AnalysisNumericRangeFilterValuePtrOutput values.
// You can construct a concrete instance of `AnalysisNumericRangeFilterValuePtrInput` via:
//
//	        AnalysisNumericRangeFilterValueArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumericRangeFilterValuePtrInput interface {
	pulumi.Input

	ToAnalysisNumericRangeFilterValuePtrOutput() AnalysisNumericRangeFilterValuePtrOutput
	ToAnalysisNumericRangeFilterValuePtrOutputWithContext(context.Context) AnalysisNumericRangeFilterValuePtrOutput
}

type analysisNumericRangeFilterValuePtrType AnalysisNumericRangeFilterValueArgs

func AnalysisNumericRangeFilterValuePtr(v *AnalysisNumericRangeFilterValueArgs) AnalysisNumericRangeFilterValuePtrInput {
	return (*analysisNumericRangeFilterValuePtrType)(v)
}

func (*analysisNumericRangeFilterValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericRangeFilterValue)(nil)).Elem()
}

func (i *analysisNumericRangeFilterValuePtrType) ToAnalysisNumericRangeFilterValuePtrOutput() AnalysisNumericRangeFilterValuePtrOutput {
	return i.ToAnalysisNumericRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i *analysisNumericRangeFilterValuePtrType) ToAnalysisNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericRangeFilterValuePtrOutput)
}

type AnalysisNumericRangeFilterValueOutput struct{ *pulumi.OutputState }

func (AnalysisNumericRangeFilterValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericRangeFilterValue)(nil)).Elem()
}

func (o AnalysisNumericRangeFilterValueOutput) ToAnalysisNumericRangeFilterValueOutput() AnalysisNumericRangeFilterValueOutput {
	return o
}

func (o AnalysisNumericRangeFilterValueOutput) ToAnalysisNumericRangeFilterValueOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterValueOutput {
	return o
}

func (o AnalysisNumericRangeFilterValueOutput) ToAnalysisNumericRangeFilterValuePtrOutput() AnalysisNumericRangeFilterValuePtrOutput {
	return o.ToAnalysisNumericRangeFilterValuePtrOutputWithContext(context.Background())
}

func (o AnalysisNumericRangeFilterValueOutput) ToAnalysisNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericRangeFilterValue) *AnalysisNumericRangeFilterValue {
		return &v
	}).(AnalysisNumericRangeFilterValuePtrOutput)
}

func (o AnalysisNumericRangeFilterValueOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilterValue) *string { return v.Parameter }).(pulumi.StringPtrOutput)
}

func (o AnalysisNumericRangeFilterValueOutput) StaticValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisNumericRangeFilterValue) *float64 { return v.StaticValue }).(pulumi.Float64PtrOutput)
}

type AnalysisNumericRangeFilterValuePtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericRangeFilterValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericRangeFilterValue)(nil)).Elem()
}

func (o AnalysisNumericRangeFilterValuePtrOutput) ToAnalysisNumericRangeFilterValuePtrOutput() AnalysisNumericRangeFilterValuePtrOutput {
	return o
}

func (o AnalysisNumericRangeFilterValuePtrOutput) ToAnalysisNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) AnalysisNumericRangeFilterValuePtrOutput {
	return o
}

func (o AnalysisNumericRangeFilterValuePtrOutput) Elem() AnalysisNumericRangeFilterValueOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilterValue) AnalysisNumericRangeFilterValue {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericRangeFilterValue
		return ret
	}).(AnalysisNumericRangeFilterValueOutput)
}

func (o AnalysisNumericRangeFilterValuePtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilterValue) *string {
		if v == nil {
			return nil
		}
		return v.Parameter
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisNumericRangeFilterValuePtrOutput) StaticValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisNumericRangeFilterValue) *float64 {
		if v == nil {
			return nil
		}
		return v.StaticValue
	}).(pulumi.Float64PtrOutput)
}

type AnalysisNumericSeparatorConfiguration struct {
	DecimalSeparator   *AnalysisNumericSeparatorSymbol   `pulumi:"decimalSeparator"`
	ThousandsSeparator *AnalysisThousandSeparatorOptions `pulumi:"thousandsSeparator"`
}

// AnalysisNumericSeparatorConfigurationInput is an input type that accepts AnalysisNumericSeparatorConfigurationArgs and AnalysisNumericSeparatorConfigurationOutput values.
// You can construct a concrete instance of `AnalysisNumericSeparatorConfigurationInput` via:
//
//	AnalysisNumericSeparatorConfigurationArgs{...}
type AnalysisNumericSeparatorConfigurationInput interface {
	pulumi.Input

	ToAnalysisNumericSeparatorConfigurationOutput() AnalysisNumericSeparatorConfigurationOutput
	ToAnalysisNumericSeparatorConfigurationOutputWithContext(context.Context) AnalysisNumericSeparatorConfigurationOutput
}

type AnalysisNumericSeparatorConfigurationArgs struct {
	DecimalSeparator   AnalysisNumericSeparatorSymbolPtrInput   `pulumi:"decimalSeparator"`
	ThousandsSeparator AnalysisThousandSeparatorOptionsPtrInput `pulumi:"thousandsSeparator"`
}

func (AnalysisNumericSeparatorConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericSeparatorConfiguration)(nil)).Elem()
}

func (i AnalysisNumericSeparatorConfigurationArgs) ToAnalysisNumericSeparatorConfigurationOutput() AnalysisNumericSeparatorConfigurationOutput {
	return i.ToAnalysisNumericSeparatorConfigurationOutputWithContext(context.Background())
}

func (i AnalysisNumericSeparatorConfigurationArgs) ToAnalysisNumericSeparatorConfigurationOutputWithContext(ctx context.Context) AnalysisNumericSeparatorConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericSeparatorConfigurationOutput)
}

func (i AnalysisNumericSeparatorConfigurationArgs) ToAnalysisNumericSeparatorConfigurationPtrOutput() AnalysisNumericSeparatorConfigurationPtrOutput {
	return i.ToAnalysisNumericSeparatorConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisNumericSeparatorConfigurationArgs) ToAnalysisNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumericSeparatorConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericSeparatorConfigurationOutput).ToAnalysisNumericSeparatorConfigurationPtrOutputWithContext(ctx)
}

// AnalysisNumericSeparatorConfigurationPtrInput is an input type that accepts AnalysisNumericSeparatorConfigurationArgs, AnalysisNumericSeparatorConfigurationPtr and AnalysisNumericSeparatorConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisNumericSeparatorConfigurationPtrInput` via:
//
//	        AnalysisNumericSeparatorConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumericSeparatorConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisNumericSeparatorConfigurationPtrOutput() AnalysisNumericSeparatorConfigurationPtrOutput
	ToAnalysisNumericSeparatorConfigurationPtrOutputWithContext(context.Context) AnalysisNumericSeparatorConfigurationPtrOutput
}

type analysisNumericSeparatorConfigurationPtrType AnalysisNumericSeparatorConfigurationArgs

func AnalysisNumericSeparatorConfigurationPtr(v *AnalysisNumericSeparatorConfigurationArgs) AnalysisNumericSeparatorConfigurationPtrInput {
	return (*analysisNumericSeparatorConfigurationPtrType)(v)
}

func (*analysisNumericSeparatorConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericSeparatorConfiguration)(nil)).Elem()
}

func (i *analysisNumericSeparatorConfigurationPtrType) ToAnalysisNumericSeparatorConfigurationPtrOutput() AnalysisNumericSeparatorConfigurationPtrOutput {
	return i.ToAnalysisNumericSeparatorConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisNumericSeparatorConfigurationPtrType) ToAnalysisNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumericSeparatorConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericSeparatorConfigurationPtrOutput)
}

type AnalysisNumericSeparatorConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisNumericSeparatorConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericSeparatorConfiguration)(nil)).Elem()
}

func (o AnalysisNumericSeparatorConfigurationOutput) ToAnalysisNumericSeparatorConfigurationOutput() AnalysisNumericSeparatorConfigurationOutput {
	return o
}

func (o AnalysisNumericSeparatorConfigurationOutput) ToAnalysisNumericSeparatorConfigurationOutputWithContext(ctx context.Context) AnalysisNumericSeparatorConfigurationOutput {
	return o
}

func (o AnalysisNumericSeparatorConfigurationOutput) ToAnalysisNumericSeparatorConfigurationPtrOutput() AnalysisNumericSeparatorConfigurationPtrOutput {
	return o.ToAnalysisNumericSeparatorConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericSeparatorConfigurationOutput) ToAnalysisNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumericSeparatorConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericSeparatorConfiguration) *AnalysisNumericSeparatorConfiguration {
		return &v
	}).(AnalysisNumericSeparatorConfigurationPtrOutput)
}

func (o AnalysisNumericSeparatorConfigurationOutput) DecimalSeparator() AnalysisNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v AnalysisNumericSeparatorConfiguration) *AnalysisNumericSeparatorSymbol {
		return v.DecimalSeparator
	}).(AnalysisNumericSeparatorSymbolPtrOutput)
}

func (o AnalysisNumericSeparatorConfigurationOutput) ThousandsSeparator() AnalysisThousandSeparatorOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisNumericSeparatorConfiguration) *AnalysisThousandSeparatorOptions {
		return v.ThousandsSeparator
	}).(AnalysisThousandSeparatorOptionsPtrOutput)
}

type AnalysisNumericSeparatorConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericSeparatorConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericSeparatorConfiguration)(nil)).Elem()
}

func (o AnalysisNumericSeparatorConfigurationPtrOutput) ToAnalysisNumericSeparatorConfigurationPtrOutput() AnalysisNumericSeparatorConfigurationPtrOutput {
	return o
}

func (o AnalysisNumericSeparatorConfigurationPtrOutput) ToAnalysisNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) AnalysisNumericSeparatorConfigurationPtrOutput {
	return o
}

func (o AnalysisNumericSeparatorConfigurationPtrOutput) Elem() AnalysisNumericSeparatorConfigurationOutput {
	return o.ApplyT(func(v *AnalysisNumericSeparatorConfiguration) AnalysisNumericSeparatorConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericSeparatorConfiguration
		return ret
	}).(AnalysisNumericSeparatorConfigurationOutput)
}

func (o AnalysisNumericSeparatorConfigurationPtrOutput) DecimalSeparator() AnalysisNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericSeparatorConfiguration) *AnalysisNumericSeparatorSymbol {
		if v == nil {
			return nil
		}
		return v.DecimalSeparator
	}).(AnalysisNumericSeparatorSymbolPtrOutput)
}

func (o AnalysisNumericSeparatorConfigurationPtrOutput) ThousandsSeparator() AnalysisThousandSeparatorOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericSeparatorConfiguration) *AnalysisThousandSeparatorOptions {
		if v == nil {
			return nil
		}
		return v.ThousandsSeparator
	}).(AnalysisThousandSeparatorOptionsPtrOutput)
}

type AnalysisNumericalAggregationFunction struct {
	PercentileAggregation      *AnalysisPercentileAggregation              `pulumi:"percentileAggregation"`
	SimpleNumericalAggregation *AnalysisSimpleNumericalAggregationFunction `pulumi:"simpleNumericalAggregation"`
}

// AnalysisNumericalAggregationFunctionInput is an input type that accepts AnalysisNumericalAggregationFunctionArgs and AnalysisNumericalAggregationFunctionOutput values.
// You can construct a concrete instance of `AnalysisNumericalAggregationFunctionInput` via:
//
//	AnalysisNumericalAggregationFunctionArgs{...}
type AnalysisNumericalAggregationFunctionInput interface {
	pulumi.Input

	ToAnalysisNumericalAggregationFunctionOutput() AnalysisNumericalAggregationFunctionOutput
	ToAnalysisNumericalAggregationFunctionOutputWithContext(context.Context) AnalysisNumericalAggregationFunctionOutput
}

type AnalysisNumericalAggregationFunctionArgs struct {
	PercentileAggregation      AnalysisPercentileAggregationPtrInput              `pulumi:"percentileAggregation"`
	SimpleNumericalAggregation AnalysisSimpleNumericalAggregationFunctionPtrInput `pulumi:"simpleNumericalAggregation"`
}

func (AnalysisNumericalAggregationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericalAggregationFunction)(nil)).Elem()
}

func (i AnalysisNumericalAggregationFunctionArgs) ToAnalysisNumericalAggregationFunctionOutput() AnalysisNumericalAggregationFunctionOutput {
	return i.ToAnalysisNumericalAggregationFunctionOutputWithContext(context.Background())
}

func (i AnalysisNumericalAggregationFunctionArgs) ToAnalysisNumericalAggregationFunctionOutputWithContext(ctx context.Context) AnalysisNumericalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericalAggregationFunctionOutput)
}

func (i AnalysisNumericalAggregationFunctionArgs) ToAnalysisNumericalAggregationFunctionPtrOutput() AnalysisNumericalAggregationFunctionPtrOutput {
	return i.ToAnalysisNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i AnalysisNumericalAggregationFunctionArgs) ToAnalysisNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericalAggregationFunctionOutput).ToAnalysisNumericalAggregationFunctionPtrOutputWithContext(ctx)
}

// AnalysisNumericalAggregationFunctionPtrInput is an input type that accepts AnalysisNumericalAggregationFunctionArgs, AnalysisNumericalAggregationFunctionPtr and AnalysisNumericalAggregationFunctionPtrOutput values.
// You can construct a concrete instance of `AnalysisNumericalAggregationFunctionPtrInput` via:
//
//	        AnalysisNumericalAggregationFunctionArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumericalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToAnalysisNumericalAggregationFunctionPtrOutput() AnalysisNumericalAggregationFunctionPtrOutput
	ToAnalysisNumericalAggregationFunctionPtrOutputWithContext(context.Context) AnalysisNumericalAggregationFunctionPtrOutput
}

type analysisNumericalAggregationFunctionPtrType AnalysisNumericalAggregationFunctionArgs

func AnalysisNumericalAggregationFunctionPtr(v *AnalysisNumericalAggregationFunctionArgs) AnalysisNumericalAggregationFunctionPtrInput {
	return (*analysisNumericalAggregationFunctionPtrType)(v)
}

func (*analysisNumericalAggregationFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericalAggregationFunction)(nil)).Elem()
}

func (i *analysisNumericalAggregationFunctionPtrType) ToAnalysisNumericalAggregationFunctionPtrOutput() AnalysisNumericalAggregationFunctionPtrOutput {
	return i.ToAnalysisNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i *analysisNumericalAggregationFunctionPtrType) ToAnalysisNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericalAggregationFunctionPtrOutput)
}

type AnalysisNumericalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (AnalysisNumericalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericalAggregationFunction)(nil)).Elem()
}

func (o AnalysisNumericalAggregationFunctionOutput) ToAnalysisNumericalAggregationFunctionOutput() AnalysisNumericalAggregationFunctionOutput {
	return o
}

func (o AnalysisNumericalAggregationFunctionOutput) ToAnalysisNumericalAggregationFunctionOutputWithContext(ctx context.Context) AnalysisNumericalAggregationFunctionOutput {
	return o
}

func (o AnalysisNumericalAggregationFunctionOutput) ToAnalysisNumericalAggregationFunctionPtrOutput() AnalysisNumericalAggregationFunctionPtrOutput {
	return o.ToAnalysisNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericalAggregationFunctionOutput) ToAnalysisNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisNumericalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericalAggregationFunction) *AnalysisNumericalAggregationFunction {
		return &v
	}).(AnalysisNumericalAggregationFunctionPtrOutput)
}

func (o AnalysisNumericalAggregationFunctionOutput) PercentileAggregation() AnalysisPercentileAggregationPtrOutput {
	return o.ApplyT(func(v AnalysisNumericalAggregationFunction) *AnalysisPercentileAggregation {
		return v.PercentileAggregation
	}).(AnalysisPercentileAggregationPtrOutput)
}

func (o AnalysisNumericalAggregationFunctionOutput) SimpleNumericalAggregation() AnalysisSimpleNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisNumericalAggregationFunction) *AnalysisSimpleNumericalAggregationFunction {
		return v.SimpleNumericalAggregation
	}).(AnalysisSimpleNumericalAggregationFunctionPtrOutput)
}

type AnalysisNumericalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericalAggregationFunction)(nil)).Elem()
}

func (o AnalysisNumericalAggregationFunctionPtrOutput) ToAnalysisNumericalAggregationFunctionPtrOutput() AnalysisNumericalAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisNumericalAggregationFunctionPtrOutput) ToAnalysisNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisNumericalAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisNumericalAggregationFunctionPtrOutput) Elem() AnalysisNumericalAggregationFunctionOutput {
	return o.ApplyT(func(v *AnalysisNumericalAggregationFunction) AnalysisNumericalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericalAggregationFunction
		return ret
	}).(AnalysisNumericalAggregationFunctionOutput)
}

func (o AnalysisNumericalAggregationFunctionPtrOutput) PercentileAggregation() AnalysisPercentileAggregationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericalAggregationFunction) *AnalysisPercentileAggregation {
		if v == nil {
			return nil
		}
		return v.PercentileAggregation
	}).(AnalysisPercentileAggregationPtrOutput)
}

func (o AnalysisNumericalAggregationFunctionPtrOutput) SimpleNumericalAggregation() AnalysisSimpleNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericalAggregationFunction) *AnalysisSimpleNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.SimpleNumericalAggregation
	}).(AnalysisSimpleNumericalAggregationFunctionPtrOutput)
}

type AnalysisNumericalDimensionField struct {
	Column              AnalysisColumnIdentifier           `pulumi:"column"`
	FieldId             string                             `pulumi:"fieldId"`
	FormatConfiguration *AnalysisNumberFormatConfiguration `pulumi:"formatConfiguration"`
	HierarchyId         *string                            `pulumi:"hierarchyId"`
}

// AnalysisNumericalDimensionFieldInput is an input type that accepts AnalysisNumericalDimensionFieldArgs and AnalysisNumericalDimensionFieldOutput values.
// You can construct a concrete instance of `AnalysisNumericalDimensionFieldInput` via:
//
//	AnalysisNumericalDimensionFieldArgs{...}
type AnalysisNumericalDimensionFieldInput interface {
	pulumi.Input

	ToAnalysisNumericalDimensionFieldOutput() AnalysisNumericalDimensionFieldOutput
	ToAnalysisNumericalDimensionFieldOutputWithContext(context.Context) AnalysisNumericalDimensionFieldOutput
}

type AnalysisNumericalDimensionFieldArgs struct {
	Column              AnalysisColumnIdentifierInput             `pulumi:"column"`
	FieldId             pulumi.StringInput                        `pulumi:"fieldId"`
	FormatConfiguration AnalysisNumberFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	HierarchyId         pulumi.StringPtrInput                     `pulumi:"hierarchyId"`
}

func (AnalysisNumericalDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericalDimensionField)(nil)).Elem()
}

func (i AnalysisNumericalDimensionFieldArgs) ToAnalysisNumericalDimensionFieldOutput() AnalysisNumericalDimensionFieldOutput {
	return i.ToAnalysisNumericalDimensionFieldOutputWithContext(context.Background())
}

func (i AnalysisNumericalDimensionFieldArgs) ToAnalysisNumericalDimensionFieldOutputWithContext(ctx context.Context) AnalysisNumericalDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericalDimensionFieldOutput)
}

func (i AnalysisNumericalDimensionFieldArgs) ToAnalysisNumericalDimensionFieldPtrOutput() AnalysisNumericalDimensionFieldPtrOutput {
	return i.ToAnalysisNumericalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i AnalysisNumericalDimensionFieldArgs) ToAnalysisNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisNumericalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericalDimensionFieldOutput).ToAnalysisNumericalDimensionFieldPtrOutputWithContext(ctx)
}

// AnalysisNumericalDimensionFieldPtrInput is an input type that accepts AnalysisNumericalDimensionFieldArgs, AnalysisNumericalDimensionFieldPtr and AnalysisNumericalDimensionFieldPtrOutput values.
// You can construct a concrete instance of `AnalysisNumericalDimensionFieldPtrInput` via:
//
//	        AnalysisNumericalDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumericalDimensionFieldPtrInput interface {
	pulumi.Input

	ToAnalysisNumericalDimensionFieldPtrOutput() AnalysisNumericalDimensionFieldPtrOutput
	ToAnalysisNumericalDimensionFieldPtrOutputWithContext(context.Context) AnalysisNumericalDimensionFieldPtrOutput
}

type analysisNumericalDimensionFieldPtrType AnalysisNumericalDimensionFieldArgs

func AnalysisNumericalDimensionFieldPtr(v *AnalysisNumericalDimensionFieldArgs) AnalysisNumericalDimensionFieldPtrInput {
	return (*analysisNumericalDimensionFieldPtrType)(v)
}

func (*analysisNumericalDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericalDimensionField)(nil)).Elem()
}

func (i *analysisNumericalDimensionFieldPtrType) ToAnalysisNumericalDimensionFieldPtrOutput() AnalysisNumericalDimensionFieldPtrOutput {
	return i.ToAnalysisNumericalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *analysisNumericalDimensionFieldPtrType) ToAnalysisNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisNumericalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericalDimensionFieldPtrOutput)
}

type AnalysisNumericalDimensionFieldOutput struct{ *pulumi.OutputState }

func (AnalysisNumericalDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericalDimensionField)(nil)).Elem()
}

func (o AnalysisNumericalDimensionFieldOutput) ToAnalysisNumericalDimensionFieldOutput() AnalysisNumericalDimensionFieldOutput {
	return o
}

func (o AnalysisNumericalDimensionFieldOutput) ToAnalysisNumericalDimensionFieldOutputWithContext(ctx context.Context) AnalysisNumericalDimensionFieldOutput {
	return o
}

func (o AnalysisNumericalDimensionFieldOutput) ToAnalysisNumericalDimensionFieldPtrOutput() AnalysisNumericalDimensionFieldPtrOutput {
	return o.ToAnalysisNumericalDimensionFieldPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericalDimensionFieldOutput) ToAnalysisNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisNumericalDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericalDimensionField) *AnalysisNumericalDimensionField {
		return &v
	}).(AnalysisNumericalDimensionFieldPtrOutput)
}

func (o AnalysisNumericalDimensionFieldOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisNumericalDimensionField) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisNumericalDimensionFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisNumericalDimensionField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisNumericalDimensionFieldOutput) FormatConfiguration() AnalysisNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisNumericalDimensionField) *AnalysisNumberFormatConfiguration {
		return v.FormatConfiguration
	}).(AnalysisNumberFormatConfigurationPtrOutput)
}

func (o AnalysisNumericalDimensionFieldOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisNumericalDimensionField) *string { return v.HierarchyId }).(pulumi.StringPtrOutput)
}

type AnalysisNumericalDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericalDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericalDimensionField)(nil)).Elem()
}

func (o AnalysisNumericalDimensionFieldPtrOutput) ToAnalysisNumericalDimensionFieldPtrOutput() AnalysisNumericalDimensionFieldPtrOutput {
	return o
}

func (o AnalysisNumericalDimensionFieldPtrOutput) ToAnalysisNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) AnalysisNumericalDimensionFieldPtrOutput {
	return o
}

func (o AnalysisNumericalDimensionFieldPtrOutput) Elem() AnalysisNumericalDimensionFieldOutput {
	return o.ApplyT(func(v *AnalysisNumericalDimensionField) AnalysisNumericalDimensionField {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericalDimensionField
		return ret
	}).(AnalysisNumericalDimensionFieldOutput)
}

func (o AnalysisNumericalDimensionFieldPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericalDimensionField) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisNumericalDimensionFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericalDimensionField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisNumericalDimensionFieldPtrOutput) FormatConfiguration() AnalysisNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericalDimensionField) *AnalysisNumberFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(AnalysisNumberFormatConfigurationPtrOutput)
}

func (o AnalysisNumericalDimensionFieldPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericalDimensionField) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type AnalysisNumericalMeasureField struct {
	AggregationFunction *AnalysisNumericalAggregationFunction `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifier              `pulumi:"column"`
	FieldId             string                                `pulumi:"fieldId"`
	FormatConfiguration *AnalysisNumberFormatConfiguration    `pulumi:"formatConfiguration"`
}

// AnalysisNumericalMeasureFieldInput is an input type that accepts AnalysisNumericalMeasureFieldArgs and AnalysisNumericalMeasureFieldOutput values.
// You can construct a concrete instance of `AnalysisNumericalMeasureFieldInput` via:
//
//	AnalysisNumericalMeasureFieldArgs{...}
type AnalysisNumericalMeasureFieldInput interface {
	pulumi.Input

	ToAnalysisNumericalMeasureFieldOutput() AnalysisNumericalMeasureFieldOutput
	ToAnalysisNumericalMeasureFieldOutputWithContext(context.Context) AnalysisNumericalMeasureFieldOutput
}

type AnalysisNumericalMeasureFieldArgs struct {
	AggregationFunction AnalysisNumericalAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Column              AnalysisColumnIdentifierInput                `pulumi:"column"`
	FieldId             pulumi.StringInput                           `pulumi:"fieldId"`
	FormatConfiguration AnalysisNumberFormatConfigurationPtrInput    `pulumi:"formatConfiguration"`
}

func (AnalysisNumericalMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericalMeasureField)(nil)).Elem()
}

func (i AnalysisNumericalMeasureFieldArgs) ToAnalysisNumericalMeasureFieldOutput() AnalysisNumericalMeasureFieldOutput {
	return i.ToAnalysisNumericalMeasureFieldOutputWithContext(context.Background())
}

func (i AnalysisNumericalMeasureFieldArgs) ToAnalysisNumericalMeasureFieldOutputWithContext(ctx context.Context) AnalysisNumericalMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericalMeasureFieldOutput)
}

func (i AnalysisNumericalMeasureFieldArgs) ToAnalysisNumericalMeasureFieldPtrOutput() AnalysisNumericalMeasureFieldPtrOutput {
	return i.ToAnalysisNumericalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i AnalysisNumericalMeasureFieldArgs) ToAnalysisNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisNumericalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericalMeasureFieldOutput).ToAnalysisNumericalMeasureFieldPtrOutputWithContext(ctx)
}

// AnalysisNumericalMeasureFieldPtrInput is an input type that accepts AnalysisNumericalMeasureFieldArgs, AnalysisNumericalMeasureFieldPtr and AnalysisNumericalMeasureFieldPtrOutput values.
// You can construct a concrete instance of `AnalysisNumericalMeasureFieldPtrInput` via:
//
//	        AnalysisNumericalMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type AnalysisNumericalMeasureFieldPtrInput interface {
	pulumi.Input

	ToAnalysisNumericalMeasureFieldPtrOutput() AnalysisNumericalMeasureFieldPtrOutput
	ToAnalysisNumericalMeasureFieldPtrOutputWithContext(context.Context) AnalysisNumericalMeasureFieldPtrOutput
}

type analysisNumericalMeasureFieldPtrType AnalysisNumericalMeasureFieldArgs

func AnalysisNumericalMeasureFieldPtr(v *AnalysisNumericalMeasureFieldArgs) AnalysisNumericalMeasureFieldPtrInput {
	return (*analysisNumericalMeasureFieldPtrType)(v)
}

func (*analysisNumericalMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericalMeasureField)(nil)).Elem()
}

func (i *analysisNumericalMeasureFieldPtrType) ToAnalysisNumericalMeasureFieldPtrOutput() AnalysisNumericalMeasureFieldPtrOutput {
	return i.ToAnalysisNumericalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *analysisNumericalMeasureFieldPtrType) ToAnalysisNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisNumericalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisNumericalMeasureFieldPtrOutput)
}

type AnalysisNumericalMeasureFieldOutput struct{ *pulumi.OutputState }

func (AnalysisNumericalMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericalMeasureField)(nil)).Elem()
}

func (o AnalysisNumericalMeasureFieldOutput) ToAnalysisNumericalMeasureFieldOutput() AnalysisNumericalMeasureFieldOutput {
	return o
}

func (o AnalysisNumericalMeasureFieldOutput) ToAnalysisNumericalMeasureFieldOutputWithContext(ctx context.Context) AnalysisNumericalMeasureFieldOutput {
	return o
}

func (o AnalysisNumericalMeasureFieldOutput) ToAnalysisNumericalMeasureFieldPtrOutput() AnalysisNumericalMeasureFieldPtrOutput {
	return o.ToAnalysisNumericalMeasureFieldPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericalMeasureFieldOutput) ToAnalysisNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisNumericalMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericalMeasureField) *AnalysisNumericalMeasureField {
		return &v
	}).(AnalysisNumericalMeasureFieldPtrOutput)
}

func (o AnalysisNumericalMeasureFieldOutput) AggregationFunction() AnalysisNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v AnalysisNumericalMeasureField) *AnalysisNumericalAggregationFunction {
		return v.AggregationFunction
	}).(AnalysisNumericalAggregationFunctionPtrOutput)
}

func (o AnalysisNumericalMeasureFieldOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisNumericalMeasureField) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisNumericalMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisNumericalMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisNumericalMeasureFieldOutput) FormatConfiguration() AnalysisNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisNumericalMeasureField) *AnalysisNumberFormatConfiguration { return v.FormatConfiguration }).(AnalysisNumberFormatConfigurationPtrOutput)
}

type AnalysisNumericalMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericalMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericalMeasureField)(nil)).Elem()
}

func (o AnalysisNumericalMeasureFieldPtrOutput) ToAnalysisNumericalMeasureFieldPtrOutput() AnalysisNumericalMeasureFieldPtrOutput {
	return o
}

func (o AnalysisNumericalMeasureFieldPtrOutput) ToAnalysisNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) AnalysisNumericalMeasureFieldPtrOutput {
	return o
}

func (o AnalysisNumericalMeasureFieldPtrOutput) Elem() AnalysisNumericalMeasureFieldOutput {
	return o.ApplyT(func(v *AnalysisNumericalMeasureField) AnalysisNumericalMeasureField {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericalMeasureField
		return ret
	}).(AnalysisNumericalMeasureFieldOutput)
}

func (o AnalysisNumericalMeasureFieldPtrOutput) AggregationFunction() AnalysisNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericalMeasureField) *AnalysisNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(AnalysisNumericalAggregationFunctionPtrOutput)
}

func (o AnalysisNumericalMeasureFieldPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericalMeasureField) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisNumericalMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericalMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisNumericalMeasureFieldPtrOutput) FormatConfiguration() AnalysisNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisNumericalMeasureField) *AnalysisNumberFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(AnalysisNumberFormatConfigurationPtrOutput)
}

type AnalysisPaginationConfiguration struct {
	PageNumber float64 `pulumi:"pageNumber"`
	PageSize   float64 `pulumi:"pageSize"`
}

// AnalysisPaginationConfigurationInput is an input type that accepts AnalysisPaginationConfigurationArgs and AnalysisPaginationConfigurationOutput values.
// You can construct a concrete instance of `AnalysisPaginationConfigurationInput` via:
//
//	AnalysisPaginationConfigurationArgs{...}
type AnalysisPaginationConfigurationInput interface {
	pulumi.Input

	ToAnalysisPaginationConfigurationOutput() AnalysisPaginationConfigurationOutput
	ToAnalysisPaginationConfigurationOutputWithContext(context.Context) AnalysisPaginationConfigurationOutput
}

type AnalysisPaginationConfigurationArgs struct {
	PageNumber pulumi.Float64Input `pulumi:"pageNumber"`
	PageSize   pulumi.Float64Input `pulumi:"pageSize"`
}

func (AnalysisPaginationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPaginationConfiguration)(nil)).Elem()
}

func (i AnalysisPaginationConfigurationArgs) ToAnalysisPaginationConfigurationOutput() AnalysisPaginationConfigurationOutput {
	return i.ToAnalysisPaginationConfigurationOutputWithContext(context.Background())
}

func (i AnalysisPaginationConfigurationArgs) ToAnalysisPaginationConfigurationOutputWithContext(ctx context.Context) AnalysisPaginationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPaginationConfigurationOutput)
}

func (i AnalysisPaginationConfigurationArgs) ToAnalysisPaginationConfigurationPtrOutput() AnalysisPaginationConfigurationPtrOutput {
	return i.ToAnalysisPaginationConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisPaginationConfigurationArgs) ToAnalysisPaginationConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPaginationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPaginationConfigurationOutput).ToAnalysisPaginationConfigurationPtrOutputWithContext(ctx)
}

// AnalysisPaginationConfigurationPtrInput is an input type that accepts AnalysisPaginationConfigurationArgs, AnalysisPaginationConfigurationPtr and AnalysisPaginationConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisPaginationConfigurationPtrInput` via:
//
//	        AnalysisPaginationConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisPaginationConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisPaginationConfigurationPtrOutput() AnalysisPaginationConfigurationPtrOutput
	ToAnalysisPaginationConfigurationPtrOutputWithContext(context.Context) AnalysisPaginationConfigurationPtrOutput
}

type analysisPaginationConfigurationPtrType AnalysisPaginationConfigurationArgs

func AnalysisPaginationConfigurationPtr(v *AnalysisPaginationConfigurationArgs) AnalysisPaginationConfigurationPtrInput {
	return (*analysisPaginationConfigurationPtrType)(v)
}

func (*analysisPaginationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPaginationConfiguration)(nil)).Elem()
}

func (i *analysisPaginationConfigurationPtrType) ToAnalysisPaginationConfigurationPtrOutput() AnalysisPaginationConfigurationPtrOutput {
	return i.ToAnalysisPaginationConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisPaginationConfigurationPtrType) ToAnalysisPaginationConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPaginationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPaginationConfigurationPtrOutput)
}

type AnalysisPaginationConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisPaginationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPaginationConfiguration)(nil)).Elem()
}

func (o AnalysisPaginationConfigurationOutput) ToAnalysisPaginationConfigurationOutput() AnalysisPaginationConfigurationOutput {
	return o
}

func (o AnalysisPaginationConfigurationOutput) ToAnalysisPaginationConfigurationOutputWithContext(ctx context.Context) AnalysisPaginationConfigurationOutput {
	return o
}

func (o AnalysisPaginationConfigurationOutput) ToAnalysisPaginationConfigurationPtrOutput() AnalysisPaginationConfigurationPtrOutput {
	return o.ToAnalysisPaginationConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisPaginationConfigurationOutput) ToAnalysisPaginationConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPaginationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPaginationConfiguration) *AnalysisPaginationConfiguration {
		return &v
	}).(AnalysisPaginationConfigurationPtrOutput)
}

func (o AnalysisPaginationConfigurationOutput) PageNumber() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisPaginationConfiguration) float64 { return v.PageNumber }).(pulumi.Float64Output)
}

func (o AnalysisPaginationConfigurationOutput) PageSize() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisPaginationConfiguration) float64 { return v.PageSize }).(pulumi.Float64Output)
}

type AnalysisPaginationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPaginationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPaginationConfiguration)(nil)).Elem()
}

func (o AnalysisPaginationConfigurationPtrOutput) ToAnalysisPaginationConfigurationPtrOutput() AnalysisPaginationConfigurationPtrOutput {
	return o
}

func (o AnalysisPaginationConfigurationPtrOutput) ToAnalysisPaginationConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPaginationConfigurationPtrOutput {
	return o
}

func (o AnalysisPaginationConfigurationPtrOutput) Elem() AnalysisPaginationConfigurationOutput {
	return o.ApplyT(func(v *AnalysisPaginationConfiguration) AnalysisPaginationConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisPaginationConfiguration
		return ret
	}).(AnalysisPaginationConfigurationOutput)
}

func (o AnalysisPaginationConfigurationPtrOutput) PageNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisPaginationConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.PageNumber
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisPaginationConfigurationPtrOutput) PageSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisPaginationConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.PageSize
	}).(pulumi.Float64PtrOutput)
}

type AnalysisPanelConfiguration struct {
	BackgroundColor      *string                   `pulumi:"backgroundColor"`
	BackgroundVisibility *AnalysisVisibility       `pulumi:"backgroundVisibility"`
	BorderColor          *string                   `pulumi:"borderColor"`
	BorderStyle          *AnalysisPanelBorderStyle `pulumi:"borderStyle"`
	// String based length that is composed of value and unit in px
	BorderThickness  *string             `pulumi:"borderThickness"`
	BorderVisibility *AnalysisVisibility `pulumi:"borderVisibility"`
	// String based length that is composed of value and unit in px
	GutterSpacing    *string                    `pulumi:"gutterSpacing"`
	GutterVisibility *AnalysisVisibility        `pulumi:"gutterVisibility"`
	Title            *AnalysisPanelTitleOptions `pulumi:"title"`
}

// AnalysisPanelConfigurationInput is an input type that accepts AnalysisPanelConfigurationArgs and AnalysisPanelConfigurationOutput values.
// You can construct a concrete instance of `AnalysisPanelConfigurationInput` via:
//
//	AnalysisPanelConfigurationArgs{...}
type AnalysisPanelConfigurationInput interface {
	pulumi.Input

	ToAnalysisPanelConfigurationOutput() AnalysisPanelConfigurationOutput
	ToAnalysisPanelConfigurationOutputWithContext(context.Context) AnalysisPanelConfigurationOutput
}

type AnalysisPanelConfigurationArgs struct {
	BackgroundColor      pulumi.StringPtrInput            `pulumi:"backgroundColor"`
	BackgroundVisibility AnalysisVisibilityPtrInput       `pulumi:"backgroundVisibility"`
	BorderColor          pulumi.StringPtrInput            `pulumi:"borderColor"`
	BorderStyle          AnalysisPanelBorderStylePtrInput `pulumi:"borderStyle"`
	// String based length that is composed of value and unit in px
	BorderThickness  pulumi.StringPtrInput      `pulumi:"borderThickness"`
	BorderVisibility AnalysisVisibilityPtrInput `pulumi:"borderVisibility"`
	// String based length that is composed of value and unit in px
	GutterSpacing    pulumi.StringPtrInput             `pulumi:"gutterSpacing"`
	GutterVisibility AnalysisVisibilityPtrInput        `pulumi:"gutterVisibility"`
	Title            AnalysisPanelTitleOptionsPtrInput `pulumi:"title"`
}

func (AnalysisPanelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPanelConfiguration)(nil)).Elem()
}

func (i AnalysisPanelConfigurationArgs) ToAnalysisPanelConfigurationOutput() AnalysisPanelConfigurationOutput {
	return i.ToAnalysisPanelConfigurationOutputWithContext(context.Background())
}

func (i AnalysisPanelConfigurationArgs) ToAnalysisPanelConfigurationOutputWithContext(ctx context.Context) AnalysisPanelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPanelConfigurationOutput)
}

func (i AnalysisPanelConfigurationArgs) ToAnalysisPanelConfigurationPtrOutput() AnalysisPanelConfigurationPtrOutput {
	return i.ToAnalysisPanelConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisPanelConfigurationArgs) ToAnalysisPanelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPanelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPanelConfigurationOutput).ToAnalysisPanelConfigurationPtrOutputWithContext(ctx)
}

// AnalysisPanelConfigurationPtrInput is an input type that accepts AnalysisPanelConfigurationArgs, AnalysisPanelConfigurationPtr and AnalysisPanelConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisPanelConfigurationPtrInput` via:
//
//	        AnalysisPanelConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisPanelConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisPanelConfigurationPtrOutput() AnalysisPanelConfigurationPtrOutput
	ToAnalysisPanelConfigurationPtrOutputWithContext(context.Context) AnalysisPanelConfigurationPtrOutput
}

type analysisPanelConfigurationPtrType AnalysisPanelConfigurationArgs

func AnalysisPanelConfigurationPtr(v *AnalysisPanelConfigurationArgs) AnalysisPanelConfigurationPtrInput {
	return (*analysisPanelConfigurationPtrType)(v)
}

func (*analysisPanelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPanelConfiguration)(nil)).Elem()
}

func (i *analysisPanelConfigurationPtrType) ToAnalysisPanelConfigurationPtrOutput() AnalysisPanelConfigurationPtrOutput {
	return i.ToAnalysisPanelConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisPanelConfigurationPtrType) ToAnalysisPanelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPanelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPanelConfigurationPtrOutput)
}

type AnalysisPanelConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisPanelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPanelConfiguration)(nil)).Elem()
}

func (o AnalysisPanelConfigurationOutput) ToAnalysisPanelConfigurationOutput() AnalysisPanelConfigurationOutput {
	return o
}

func (o AnalysisPanelConfigurationOutput) ToAnalysisPanelConfigurationOutputWithContext(ctx context.Context) AnalysisPanelConfigurationOutput {
	return o
}

func (o AnalysisPanelConfigurationOutput) ToAnalysisPanelConfigurationPtrOutput() AnalysisPanelConfigurationPtrOutput {
	return o.ToAnalysisPanelConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisPanelConfigurationOutput) ToAnalysisPanelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPanelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPanelConfiguration) *AnalysisPanelConfiguration {
		return &v
	}).(AnalysisPanelConfigurationPtrOutput)
}

func (o AnalysisPanelConfigurationOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPanelConfiguration) *string { return v.BackgroundColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisPanelConfigurationOutput) BackgroundVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPanelConfiguration) *AnalysisVisibility { return v.BackgroundVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPanelConfigurationOutput) BorderColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPanelConfiguration) *string { return v.BorderColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisPanelConfigurationOutput) BorderStyle() AnalysisPanelBorderStylePtrOutput {
	return o.ApplyT(func(v AnalysisPanelConfiguration) *AnalysisPanelBorderStyle { return v.BorderStyle }).(AnalysisPanelBorderStylePtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisPanelConfigurationOutput) BorderThickness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPanelConfiguration) *string { return v.BorderThickness }).(pulumi.StringPtrOutput)
}

func (o AnalysisPanelConfigurationOutput) BorderVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPanelConfiguration) *AnalysisVisibility { return v.BorderVisibility }).(AnalysisVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisPanelConfigurationOutput) GutterSpacing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPanelConfiguration) *string { return v.GutterSpacing }).(pulumi.StringPtrOutput)
}

func (o AnalysisPanelConfigurationOutput) GutterVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPanelConfiguration) *AnalysisVisibility { return v.GutterVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPanelConfigurationOutput) Title() AnalysisPanelTitleOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPanelConfiguration) *AnalysisPanelTitleOptions { return v.Title }).(AnalysisPanelTitleOptionsPtrOutput)
}

type AnalysisPanelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPanelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPanelConfiguration)(nil)).Elem()
}

func (o AnalysisPanelConfigurationPtrOutput) ToAnalysisPanelConfigurationPtrOutput() AnalysisPanelConfigurationPtrOutput {
	return o
}

func (o AnalysisPanelConfigurationPtrOutput) ToAnalysisPanelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPanelConfigurationPtrOutput {
	return o
}

func (o AnalysisPanelConfigurationPtrOutput) Elem() AnalysisPanelConfigurationOutput {
	return o.ApplyT(func(v *AnalysisPanelConfiguration) AnalysisPanelConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisPanelConfiguration
		return ret
	}).(AnalysisPanelConfigurationOutput)
}

func (o AnalysisPanelConfigurationPtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPanelConfigurationPtrOutput) BackgroundVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelConfiguration) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.BackgroundVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPanelConfigurationPtrOutput) BorderColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BorderColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPanelConfigurationPtrOutput) BorderStyle() AnalysisPanelBorderStylePtrOutput {
	return o.ApplyT(func(v *AnalysisPanelConfiguration) *AnalysisPanelBorderStyle {
		if v == nil {
			return nil
		}
		return v.BorderStyle
	}).(AnalysisPanelBorderStylePtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisPanelConfigurationPtrOutput) BorderThickness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BorderThickness
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPanelConfigurationPtrOutput) BorderVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelConfiguration) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.BorderVisibility
	}).(AnalysisVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisPanelConfigurationPtrOutput) GutterSpacing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.GutterSpacing
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPanelConfigurationPtrOutput) GutterVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelConfiguration) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.GutterVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPanelConfigurationPtrOutput) Title() AnalysisPanelTitleOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelConfiguration) *AnalysisPanelTitleOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisPanelTitleOptionsPtrOutput)
}

type AnalysisPanelTitleOptions struct {
	FontConfiguration       *AnalysisFontConfiguration       `pulumi:"fontConfiguration"`
	HorizontalTextAlignment *AnalysisHorizontalTextAlignment `pulumi:"horizontalTextAlignment"`
	Visibility              *AnalysisVisibility              `pulumi:"visibility"`
}

// AnalysisPanelTitleOptionsInput is an input type that accepts AnalysisPanelTitleOptionsArgs and AnalysisPanelTitleOptionsOutput values.
// You can construct a concrete instance of `AnalysisPanelTitleOptionsInput` via:
//
//	AnalysisPanelTitleOptionsArgs{...}
type AnalysisPanelTitleOptionsInput interface {
	pulumi.Input

	ToAnalysisPanelTitleOptionsOutput() AnalysisPanelTitleOptionsOutput
	ToAnalysisPanelTitleOptionsOutputWithContext(context.Context) AnalysisPanelTitleOptionsOutput
}

type AnalysisPanelTitleOptionsArgs struct {
	FontConfiguration       AnalysisFontConfigurationPtrInput       `pulumi:"fontConfiguration"`
	HorizontalTextAlignment AnalysisHorizontalTextAlignmentPtrInput `pulumi:"horizontalTextAlignment"`
	Visibility              AnalysisVisibilityPtrInput              `pulumi:"visibility"`
}

func (AnalysisPanelTitleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPanelTitleOptions)(nil)).Elem()
}

func (i AnalysisPanelTitleOptionsArgs) ToAnalysisPanelTitleOptionsOutput() AnalysisPanelTitleOptionsOutput {
	return i.ToAnalysisPanelTitleOptionsOutputWithContext(context.Background())
}

func (i AnalysisPanelTitleOptionsArgs) ToAnalysisPanelTitleOptionsOutputWithContext(ctx context.Context) AnalysisPanelTitleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPanelTitleOptionsOutput)
}

func (i AnalysisPanelTitleOptionsArgs) ToAnalysisPanelTitleOptionsPtrOutput() AnalysisPanelTitleOptionsPtrOutput {
	return i.ToAnalysisPanelTitleOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisPanelTitleOptionsArgs) ToAnalysisPanelTitleOptionsPtrOutputWithContext(ctx context.Context) AnalysisPanelTitleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPanelTitleOptionsOutput).ToAnalysisPanelTitleOptionsPtrOutputWithContext(ctx)
}

// AnalysisPanelTitleOptionsPtrInput is an input type that accepts AnalysisPanelTitleOptionsArgs, AnalysisPanelTitleOptionsPtr and AnalysisPanelTitleOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisPanelTitleOptionsPtrInput` via:
//
//	        AnalysisPanelTitleOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisPanelTitleOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisPanelTitleOptionsPtrOutput() AnalysisPanelTitleOptionsPtrOutput
	ToAnalysisPanelTitleOptionsPtrOutputWithContext(context.Context) AnalysisPanelTitleOptionsPtrOutput
}

type analysisPanelTitleOptionsPtrType AnalysisPanelTitleOptionsArgs

func AnalysisPanelTitleOptionsPtr(v *AnalysisPanelTitleOptionsArgs) AnalysisPanelTitleOptionsPtrInput {
	return (*analysisPanelTitleOptionsPtrType)(v)
}

func (*analysisPanelTitleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPanelTitleOptions)(nil)).Elem()
}

func (i *analysisPanelTitleOptionsPtrType) ToAnalysisPanelTitleOptionsPtrOutput() AnalysisPanelTitleOptionsPtrOutput {
	return i.ToAnalysisPanelTitleOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisPanelTitleOptionsPtrType) ToAnalysisPanelTitleOptionsPtrOutputWithContext(ctx context.Context) AnalysisPanelTitleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPanelTitleOptionsPtrOutput)
}

type AnalysisPanelTitleOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisPanelTitleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPanelTitleOptions)(nil)).Elem()
}

func (o AnalysisPanelTitleOptionsOutput) ToAnalysisPanelTitleOptionsOutput() AnalysisPanelTitleOptionsOutput {
	return o
}

func (o AnalysisPanelTitleOptionsOutput) ToAnalysisPanelTitleOptionsOutputWithContext(ctx context.Context) AnalysisPanelTitleOptionsOutput {
	return o
}

func (o AnalysisPanelTitleOptionsOutput) ToAnalysisPanelTitleOptionsPtrOutput() AnalysisPanelTitleOptionsPtrOutput {
	return o.ToAnalysisPanelTitleOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisPanelTitleOptionsOutput) ToAnalysisPanelTitleOptionsPtrOutputWithContext(ctx context.Context) AnalysisPanelTitleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPanelTitleOptions) *AnalysisPanelTitleOptions {
		return &v
	}).(AnalysisPanelTitleOptionsPtrOutput)
}

func (o AnalysisPanelTitleOptionsOutput) FontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPanelTitleOptions) *AnalysisFontConfiguration { return v.FontConfiguration }).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisPanelTitleOptionsOutput) HorizontalTextAlignment() AnalysisHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v AnalysisPanelTitleOptions) *AnalysisHorizontalTextAlignment { return v.HorizontalTextAlignment }).(AnalysisHorizontalTextAlignmentPtrOutput)
}

func (o AnalysisPanelTitleOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPanelTitleOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisPanelTitleOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPanelTitleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPanelTitleOptions)(nil)).Elem()
}

func (o AnalysisPanelTitleOptionsPtrOutput) ToAnalysisPanelTitleOptionsPtrOutput() AnalysisPanelTitleOptionsPtrOutput {
	return o
}

func (o AnalysisPanelTitleOptionsPtrOutput) ToAnalysisPanelTitleOptionsPtrOutputWithContext(ctx context.Context) AnalysisPanelTitleOptionsPtrOutput {
	return o
}

func (o AnalysisPanelTitleOptionsPtrOutput) Elem() AnalysisPanelTitleOptionsOutput {
	return o.ApplyT(func(v *AnalysisPanelTitleOptions) AnalysisPanelTitleOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisPanelTitleOptions
		return ret
	}).(AnalysisPanelTitleOptionsOutput)
}

func (o AnalysisPanelTitleOptionsPtrOutput) FontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelTitleOptions) *AnalysisFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisPanelTitleOptionsPtrOutput) HorizontalTextAlignment() AnalysisHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelTitleOptions) *AnalysisHorizontalTextAlignment {
		if v == nil {
			return nil
		}
		return v.HorizontalTextAlignment
	}).(AnalysisHorizontalTextAlignmentPtrOutput)
}

func (o AnalysisPanelTitleOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisPanelTitleOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisParameterControl struct {
	DateTimePicker *AnalysisParameterDateTimePickerControl `pulumi:"dateTimePicker"`
	Dropdown       *AnalysisParameterDropDownControl       `pulumi:"dropdown"`
	List           *AnalysisParameterListControl           `pulumi:"list"`
	Slider         *AnalysisParameterSliderControl         `pulumi:"slider"`
	TextArea       *AnalysisParameterTextAreaControl       `pulumi:"textArea"`
	TextField      *AnalysisParameterTextFieldControl      `pulumi:"textField"`
}

// AnalysisParameterControlInput is an input type that accepts AnalysisParameterControlArgs and AnalysisParameterControlOutput values.
// You can construct a concrete instance of `AnalysisParameterControlInput` via:
//
//	AnalysisParameterControlArgs{...}
type AnalysisParameterControlInput interface {
	pulumi.Input

	ToAnalysisParameterControlOutput() AnalysisParameterControlOutput
	ToAnalysisParameterControlOutputWithContext(context.Context) AnalysisParameterControlOutput
}

type AnalysisParameterControlArgs struct {
	DateTimePicker AnalysisParameterDateTimePickerControlPtrInput `pulumi:"dateTimePicker"`
	Dropdown       AnalysisParameterDropDownControlPtrInput       `pulumi:"dropdown"`
	List           AnalysisParameterListControlPtrInput           `pulumi:"list"`
	Slider         AnalysisParameterSliderControlPtrInput         `pulumi:"slider"`
	TextArea       AnalysisParameterTextAreaControlPtrInput       `pulumi:"textArea"`
	TextField      AnalysisParameterTextFieldControlPtrInput      `pulumi:"textField"`
}

func (AnalysisParameterControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterControl)(nil)).Elem()
}

func (i AnalysisParameterControlArgs) ToAnalysisParameterControlOutput() AnalysisParameterControlOutput {
	return i.ToAnalysisParameterControlOutputWithContext(context.Background())
}

func (i AnalysisParameterControlArgs) ToAnalysisParameterControlOutputWithContext(ctx context.Context) AnalysisParameterControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterControlOutput)
}

// AnalysisParameterControlArrayInput is an input type that accepts AnalysisParameterControlArray and AnalysisParameterControlArrayOutput values.
// You can construct a concrete instance of `AnalysisParameterControlArrayInput` via:
//
//	AnalysisParameterControlArray{ AnalysisParameterControlArgs{...} }
type AnalysisParameterControlArrayInput interface {
	pulumi.Input

	ToAnalysisParameterControlArrayOutput() AnalysisParameterControlArrayOutput
	ToAnalysisParameterControlArrayOutputWithContext(context.Context) AnalysisParameterControlArrayOutput
}

type AnalysisParameterControlArray []AnalysisParameterControlInput

func (AnalysisParameterControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisParameterControl)(nil)).Elem()
}

func (i AnalysisParameterControlArray) ToAnalysisParameterControlArrayOutput() AnalysisParameterControlArrayOutput {
	return i.ToAnalysisParameterControlArrayOutputWithContext(context.Background())
}

func (i AnalysisParameterControlArray) ToAnalysisParameterControlArrayOutputWithContext(ctx context.Context) AnalysisParameterControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterControlArrayOutput)
}

type AnalysisParameterControlOutput struct{ *pulumi.OutputState }

func (AnalysisParameterControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterControl)(nil)).Elem()
}

func (o AnalysisParameterControlOutput) ToAnalysisParameterControlOutput() AnalysisParameterControlOutput {
	return o
}

func (o AnalysisParameterControlOutput) ToAnalysisParameterControlOutputWithContext(ctx context.Context) AnalysisParameterControlOutput {
	return o
}

func (o AnalysisParameterControlOutput) DateTimePicker() AnalysisParameterDateTimePickerControlPtrOutput {
	return o.ApplyT(func(v AnalysisParameterControl) *AnalysisParameterDateTimePickerControl { return v.DateTimePicker }).(AnalysisParameterDateTimePickerControlPtrOutput)
}

func (o AnalysisParameterControlOutput) Dropdown() AnalysisParameterDropDownControlPtrOutput {
	return o.ApplyT(func(v AnalysisParameterControl) *AnalysisParameterDropDownControl { return v.Dropdown }).(AnalysisParameterDropDownControlPtrOutput)
}

func (o AnalysisParameterControlOutput) List() AnalysisParameterListControlPtrOutput {
	return o.ApplyT(func(v AnalysisParameterControl) *AnalysisParameterListControl { return v.List }).(AnalysisParameterListControlPtrOutput)
}

func (o AnalysisParameterControlOutput) Slider() AnalysisParameterSliderControlPtrOutput {
	return o.ApplyT(func(v AnalysisParameterControl) *AnalysisParameterSliderControl { return v.Slider }).(AnalysisParameterSliderControlPtrOutput)
}

func (o AnalysisParameterControlOutput) TextArea() AnalysisParameterTextAreaControlPtrOutput {
	return o.ApplyT(func(v AnalysisParameterControl) *AnalysisParameterTextAreaControl { return v.TextArea }).(AnalysisParameterTextAreaControlPtrOutput)
}

func (o AnalysisParameterControlOutput) TextField() AnalysisParameterTextFieldControlPtrOutput {
	return o.ApplyT(func(v AnalysisParameterControl) *AnalysisParameterTextFieldControl { return v.TextField }).(AnalysisParameterTextFieldControlPtrOutput)
}

type AnalysisParameterControlArrayOutput struct{ *pulumi.OutputState }

func (AnalysisParameterControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisParameterControl)(nil)).Elem()
}

func (o AnalysisParameterControlArrayOutput) ToAnalysisParameterControlArrayOutput() AnalysisParameterControlArrayOutput {
	return o
}

func (o AnalysisParameterControlArrayOutput) ToAnalysisParameterControlArrayOutputWithContext(ctx context.Context) AnalysisParameterControlArrayOutput {
	return o
}

func (o AnalysisParameterControlArrayOutput) Index(i pulumi.IntInput) AnalysisParameterControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisParameterControl {
		return vs[0].([]AnalysisParameterControl)[vs[1].(int)]
	}).(AnalysisParameterControlOutput)
}

type AnalysisParameterDateTimePickerControl struct {
	DisplayOptions      *AnalysisDateTimePickerControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId  string                                       `pulumi:"parameterControlId"`
	SourceParameterName string                                       `pulumi:"sourceParameterName"`
	Title               string                                       `pulumi:"title"`
}

// AnalysisParameterDateTimePickerControlInput is an input type that accepts AnalysisParameterDateTimePickerControlArgs and AnalysisParameterDateTimePickerControlOutput values.
// You can construct a concrete instance of `AnalysisParameterDateTimePickerControlInput` via:
//
//	AnalysisParameterDateTimePickerControlArgs{...}
type AnalysisParameterDateTimePickerControlInput interface {
	pulumi.Input

	ToAnalysisParameterDateTimePickerControlOutput() AnalysisParameterDateTimePickerControlOutput
	ToAnalysisParameterDateTimePickerControlOutputWithContext(context.Context) AnalysisParameterDateTimePickerControlOutput
}

type AnalysisParameterDateTimePickerControlArgs struct {
	DisplayOptions      AnalysisDateTimePickerControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId  pulumi.StringInput                                  `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                                  `pulumi:"sourceParameterName"`
	Title               pulumi.StringInput                                  `pulumi:"title"`
}

func (AnalysisParameterDateTimePickerControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterDateTimePickerControl)(nil)).Elem()
}

func (i AnalysisParameterDateTimePickerControlArgs) ToAnalysisParameterDateTimePickerControlOutput() AnalysisParameterDateTimePickerControlOutput {
	return i.ToAnalysisParameterDateTimePickerControlOutputWithContext(context.Background())
}

func (i AnalysisParameterDateTimePickerControlArgs) ToAnalysisParameterDateTimePickerControlOutputWithContext(ctx context.Context) AnalysisParameterDateTimePickerControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterDateTimePickerControlOutput)
}

func (i AnalysisParameterDateTimePickerControlArgs) ToAnalysisParameterDateTimePickerControlPtrOutput() AnalysisParameterDateTimePickerControlPtrOutput {
	return i.ToAnalysisParameterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i AnalysisParameterDateTimePickerControlArgs) ToAnalysisParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) AnalysisParameterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterDateTimePickerControlOutput).ToAnalysisParameterDateTimePickerControlPtrOutputWithContext(ctx)
}

// AnalysisParameterDateTimePickerControlPtrInput is an input type that accepts AnalysisParameterDateTimePickerControlArgs, AnalysisParameterDateTimePickerControlPtr and AnalysisParameterDateTimePickerControlPtrOutput values.
// You can construct a concrete instance of `AnalysisParameterDateTimePickerControlPtrInput` via:
//
//	        AnalysisParameterDateTimePickerControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisParameterDateTimePickerControlPtrInput interface {
	pulumi.Input

	ToAnalysisParameterDateTimePickerControlPtrOutput() AnalysisParameterDateTimePickerControlPtrOutput
	ToAnalysisParameterDateTimePickerControlPtrOutputWithContext(context.Context) AnalysisParameterDateTimePickerControlPtrOutput
}

type analysisParameterDateTimePickerControlPtrType AnalysisParameterDateTimePickerControlArgs

func AnalysisParameterDateTimePickerControlPtr(v *AnalysisParameterDateTimePickerControlArgs) AnalysisParameterDateTimePickerControlPtrInput {
	return (*analysisParameterDateTimePickerControlPtrType)(v)
}

func (*analysisParameterDateTimePickerControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterDateTimePickerControl)(nil)).Elem()
}

func (i *analysisParameterDateTimePickerControlPtrType) ToAnalysisParameterDateTimePickerControlPtrOutput() AnalysisParameterDateTimePickerControlPtrOutput {
	return i.ToAnalysisParameterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i *analysisParameterDateTimePickerControlPtrType) ToAnalysisParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) AnalysisParameterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterDateTimePickerControlPtrOutput)
}

type AnalysisParameterDateTimePickerControlOutput struct{ *pulumi.OutputState }

func (AnalysisParameterDateTimePickerControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterDateTimePickerControl)(nil)).Elem()
}

func (o AnalysisParameterDateTimePickerControlOutput) ToAnalysisParameterDateTimePickerControlOutput() AnalysisParameterDateTimePickerControlOutput {
	return o
}

func (o AnalysisParameterDateTimePickerControlOutput) ToAnalysisParameterDateTimePickerControlOutputWithContext(ctx context.Context) AnalysisParameterDateTimePickerControlOutput {
	return o
}

func (o AnalysisParameterDateTimePickerControlOutput) ToAnalysisParameterDateTimePickerControlPtrOutput() AnalysisParameterDateTimePickerControlPtrOutput {
	return o.ToAnalysisParameterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (o AnalysisParameterDateTimePickerControlOutput) ToAnalysisParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) AnalysisParameterDateTimePickerControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisParameterDateTimePickerControl) *AnalysisParameterDateTimePickerControl {
		return &v
	}).(AnalysisParameterDateTimePickerControlPtrOutput)
}

func (o AnalysisParameterDateTimePickerControlOutput) DisplayOptions() AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisParameterDateTimePickerControl) *AnalysisDateTimePickerControlDisplayOptions {
		return v.DisplayOptions
	}).(AnalysisDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterDateTimePickerControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterDateTimePickerControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o AnalysisParameterDateTimePickerControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterDateTimePickerControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o AnalysisParameterDateTimePickerControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterDateTimePickerControl) string { return v.Title }).(pulumi.StringOutput)
}

type AnalysisParameterDateTimePickerControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisParameterDateTimePickerControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterDateTimePickerControl)(nil)).Elem()
}

func (o AnalysisParameterDateTimePickerControlPtrOutput) ToAnalysisParameterDateTimePickerControlPtrOutput() AnalysisParameterDateTimePickerControlPtrOutput {
	return o
}

func (o AnalysisParameterDateTimePickerControlPtrOutput) ToAnalysisParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) AnalysisParameterDateTimePickerControlPtrOutput {
	return o
}

func (o AnalysisParameterDateTimePickerControlPtrOutput) Elem() AnalysisParameterDateTimePickerControlOutput {
	return o.ApplyT(func(v *AnalysisParameterDateTimePickerControl) AnalysisParameterDateTimePickerControl {
		if v != nil {
			return *v
		}
		var ret AnalysisParameterDateTimePickerControl
		return ret
	}).(AnalysisParameterDateTimePickerControlOutput)
}

func (o AnalysisParameterDateTimePickerControlPtrOutput) DisplayOptions() AnalysisDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDateTimePickerControl) *AnalysisDateTimePickerControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterDateTimePickerControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterDateTimePickerControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterDateTimePickerControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AnalysisParameterDeclaration struct {
	DateTimeParameterDeclaration *AnalysisDateTimeParameterDeclaration `pulumi:"dateTimeParameterDeclaration"`
	DecimalParameterDeclaration  *AnalysisDecimalParameterDeclaration  `pulumi:"decimalParameterDeclaration"`
	IntegerParameterDeclaration  *AnalysisIntegerParameterDeclaration  `pulumi:"integerParameterDeclaration"`
	StringParameterDeclaration   *AnalysisStringParameterDeclaration   `pulumi:"stringParameterDeclaration"`
}

// AnalysisParameterDeclarationInput is an input type that accepts AnalysisParameterDeclarationArgs and AnalysisParameterDeclarationOutput values.
// You can construct a concrete instance of `AnalysisParameterDeclarationInput` via:
//
//	AnalysisParameterDeclarationArgs{...}
type AnalysisParameterDeclarationInput interface {
	pulumi.Input

	ToAnalysisParameterDeclarationOutput() AnalysisParameterDeclarationOutput
	ToAnalysisParameterDeclarationOutputWithContext(context.Context) AnalysisParameterDeclarationOutput
}

type AnalysisParameterDeclarationArgs struct {
	DateTimeParameterDeclaration AnalysisDateTimeParameterDeclarationPtrInput `pulumi:"dateTimeParameterDeclaration"`
	DecimalParameterDeclaration  AnalysisDecimalParameterDeclarationPtrInput  `pulumi:"decimalParameterDeclaration"`
	IntegerParameterDeclaration  AnalysisIntegerParameterDeclarationPtrInput  `pulumi:"integerParameterDeclaration"`
	StringParameterDeclaration   AnalysisStringParameterDeclarationPtrInput   `pulumi:"stringParameterDeclaration"`
}

func (AnalysisParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterDeclaration)(nil)).Elem()
}

func (i AnalysisParameterDeclarationArgs) ToAnalysisParameterDeclarationOutput() AnalysisParameterDeclarationOutput {
	return i.ToAnalysisParameterDeclarationOutputWithContext(context.Background())
}

func (i AnalysisParameterDeclarationArgs) ToAnalysisParameterDeclarationOutputWithContext(ctx context.Context) AnalysisParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterDeclarationOutput)
}

// AnalysisParameterDeclarationArrayInput is an input type that accepts AnalysisParameterDeclarationArray and AnalysisParameterDeclarationArrayOutput values.
// You can construct a concrete instance of `AnalysisParameterDeclarationArrayInput` via:
//
//	AnalysisParameterDeclarationArray{ AnalysisParameterDeclarationArgs{...} }
type AnalysisParameterDeclarationArrayInput interface {
	pulumi.Input

	ToAnalysisParameterDeclarationArrayOutput() AnalysisParameterDeclarationArrayOutput
	ToAnalysisParameterDeclarationArrayOutputWithContext(context.Context) AnalysisParameterDeclarationArrayOutput
}

type AnalysisParameterDeclarationArray []AnalysisParameterDeclarationInput

func (AnalysisParameterDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisParameterDeclaration)(nil)).Elem()
}

func (i AnalysisParameterDeclarationArray) ToAnalysisParameterDeclarationArrayOutput() AnalysisParameterDeclarationArrayOutput {
	return i.ToAnalysisParameterDeclarationArrayOutputWithContext(context.Background())
}

func (i AnalysisParameterDeclarationArray) ToAnalysisParameterDeclarationArrayOutputWithContext(ctx context.Context) AnalysisParameterDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterDeclarationArrayOutput)
}

type AnalysisParameterDeclarationOutput struct{ *pulumi.OutputState }

func (AnalysisParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterDeclaration)(nil)).Elem()
}

func (o AnalysisParameterDeclarationOutput) ToAnalysisParameterDeclarationOutput() AnalysisParameterDeclarationOutput {
	return o
}

func (o AnalysisParameterDeclarationOutput) ToAnalysisParameterDeclarationOutputWithContext(ctx context.Context) AnalysisParameterDeclarationOutput {
	return o
}

func (o AnalysisParameterDeclarationOutput) DateTimeParameterDeclaration() AnalysisDateTimeParameterDeclarationPtrOutput {
	return o.ApplyT(func(v AnalysisParameterDeclaration) *AnalysisDateTimeParameterDeclaration {
		return v.DateTimeParameterDeclaration
	}).(AnalysisDateTimeParameterDeclarationPtrOutput)
}

func (o AnalysisParameterDeclarationOutput) DecimalParameterDeclaration() AnalysisDecimalParameterDeclarationPtrOutput {
	return o.ApplyT(func(v AnalysisParameterDeclaration) *AnalysisDecimalParameterDeclaration {
		return v.DecimalParameterDeclaration
	}).(AnalysisDecimalParameterDeclarationPtrOutput)
}

func (o AnalysisParameterDeclarationOutput) IntegerParameterDeclaration() AnalysisIntegerParameterDeclarationPtrOutput {
	return o.ApplyT(func(v AnalysisParameterDeclaration) *AnalysisIntegerParameterDeclaration {
		return v.IntegerParameterDeclaration
	}).(AnalysisIntegerParameterDeclarationPtrOutput)
}

func (o AnalysisParameterDeclarationOutput) StringParameterDeclaration() AnalysisStringParameterDeclarationPtrOutput {
	return o.ApplyT(func(v AnalysisParameterDeclaration) *AnalysisStringParameterDeclaration {
		return v.StringParameterDeclaration
	}).(AnalysisStringParameterDeclarationPtrOutput)
}

type AnalysisParameterDeclarationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisParameterDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisParameterDeclaration)(nil)).Elem()
}

func (o AnalysisParameterDeclarationArrayOutput) ToAnalysisParameterDeclarationArrayOutput() AnalysisParameterDeclarationArrayOutput {
	return o
}

func (o AnalysisParameterDeclarationArrayOutput) ToAnalysisParameterDeclarationArrayOutputWithContext(ctx context.Context) AnalysisParameterDeclarationArrayOutput {
	return o
}

func (o AnalysisParameterDeclarationArrayOutput) Index(i pulumi.IntInput) AnalysisParameterDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisParameterDeclaration {
		return vs[0].([]AnalysisParameterDeclaration)[vs[1].(int)]
	}).(AnalysisParameterDeclarationOutput)
}

type AnalysisParameterDropDownControl struct {
	CascadingControlConfiguration *AnalysisCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *AnalysisDropDownControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId            string                                 `pulumi:"parameterControlId"`
	SelectableValues              *AnalysisParameterSelectableValues     `pulumi:"selectableValues"`
	SourceParameterName           string                                 `pulumi:"sourceParameterName"`
	Title                         string                                 `pulumi:"title"`
	Type                          *AnalysisSheetControlListType          `pulumi:"type"`
}

// AnalysisParameterDropDownControlInput is an input type that accepts AnalysisParameterDropDownControlArgs and AnalysisParameterDropDownControlOutput values.
// You can construct a concrete instance of `AnalysisParameterDropDownControlInput` via:
//
//	AnalysisParameterDropDownControlArgs{...}
type AnalysisParameterDropDownControlInput interface {
	pulumi.Input

	ToAnalysisParameterDropDownControlOutput() AnalysisParameterDropDownControlOutput
	ToAnalysisParameterDropDownControlOutputWithContext(context.Context) AnalysisParameterDropDownControlOutput
}

type AnalysisParameterDropDownControlArgs struct {
	CascadingControlConfiguration AnalysisCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                AnalysisDropDownControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId            pulumi.StringInput                            `pulumi:"parameterControlId"`
	SelectableValues              AnalysisParameterSelectableValuesPtrInput     `pulumi:"selectableValues"`
	SourceParameterName           pulumi.StringInput                            `pulumi:"sourceParameterName"`
	Title                         pulumi.StringInput                            `pulumi:"title"`
	Type                          AnalysisSheetControlListTypePtrInput          `pulumi:"type"`
}

func (AnalysisParameterDropDownControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterDropDownControl)(nil)).Elem()
}

func (i AnalysisParameterDropDownControlArgs) ToAnalysisParameterDropDownControlOutput() AnalysisParameterDropDownControlOutput {
	return i.ToAnalysisParameterDropDownControlOutputWithContext(context.Background())
}

func (i AnalysisParameterDropDownControlArgs) ToAnalysisParameterDropDownControlOutputWithContext(ctx context.Context) AnalysisParameterDropDownControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterDropDownControlOutput)
}

func (i AnalysisParameterDropDownControlArgs) ToAnalysisParameterDropDownControlPtrOutput() AnalysisParameterDropDownControlPtrOutput {
	return i.ToAnalysisParameterDropDownControlPtrOutputWithContext(context.Background())
}

func (i AnalysisParameterDropDownControlArgs) ToAnalysisParameterDropDownControlPtrOutputWithContext(ctx context.Context) AnalysisParameterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterDropDownControlOutput).ToAnalysisParameterDropDownControlPtrOutputWithContext(ctx)
}

// AnalysisParameterDropDownControlPtrInput is an input type that accepts AnalysisParameterDropDownControlArgs, AnalysisParameterDropDownControlPtr and AnalysisParameterDropDownControlPtrOutput values.
// You can construct a concrete instance of `AnalysisParameterDropDownControlPtrInput` via:
//
//	        AnalysisParameterDropDownControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisParameterDropDownControlPtrInput interface {
	pulumi.Input

	ToAnalysisParameterDropDownControlPtrOutput() AnalysisParameterDropDownControlPtrOutput
	ToAnalysisParameterDropDownControlPtrOutputWithContext(context.Context) AnalysisParameterDropDownControlPtrOutput
}

type analysisParameterDropDownControlPtrType AnalysisParameterDropDownControlArgs

func AnalysisParameterDropDownControlPtr(v *AnalysisParameterDropDownControlArgs) AnalysisParameterDropDownControlPtrInput {
	return (*analysisParameterDropDownControlPtrType)(v)
}

func (*analysisParameterDropDownControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterDropDownControl)(nil)).Elem()
}

func (i *analysisParameterDropDownControlPtrType) ToAnalysisParameterDropDownControlPtrOutput() AnalysisParameterDropDownControlPtrOutput {
	return i.ToAnalysisParameterDropDownControlPtrOutputWithContext(context.Background())
}

func (i *analysisParameterDropDownControlPtrType) ToAnalysisParameterDropDownControlPtrOutputWithContext(ctx context.Context) AnalysisParameterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterDropDownControlPtrOutput)
}

type AnalysisParameterDropDownControlOutput struct{ *pulumi.OutputState }

func (AnalysisParameterDropDownControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterDropDownControl)(nil)).Elem()
}

func (o AnalysisParameterDropDownControlOutput) ToAnalysisParameterDropDownControlOutput() AnalysisParameterDropDownControlOutput {
	return o
}

func (o AnalysisParameterDropDownControlOutput) ToAnalysisParameterDropDownControlOutputWithContext(ctx context.Context) AnalysisParameterDropDownControlOutput {
	return o
}

func (o AnalysisParameterDropDownControlOutput) ToAnalysisParameterDropDownControlPtrOutput() AnalysisParameterDropDownControlPtrOutput {
	return o.ToAnalysisParameterDropDownControlPtrOutputWithContext(context.Background())
}

func (o AnalysisParameterDropDownControlOutput) ToAnalysisParameterDropDownControlPtrOutputWithContext(ctx context.Context) AnalysisParameterDropDownControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisParameterDropDownControl) *AnalysisParameterDropDownControl {
		return &v
	}).(AnalysisParameterDropDownControlPtrOutput)
}

func (o AnalysisParameterDropDownControlOutput) CascadingControlConfiguration() AnalysisCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisParameterDropDownControl) *AnalysisCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(AnalysisCascadingControlConfigurationPtrOutput)
}

func (o AnalysisParameterDropDownControlOutput) DisplayOptions() AnalysisDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisParameterDropDownControl) *AnalysisDropDownControlDisplayOptions {
		return v.DisplayOptions
	}).(AnalysisDropDownControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterDropDownControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterDropDownControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o AnalysisParameterDropDownControlOutput) SelectableValues() AnalysisParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v AnalysisParameterDropDownControl) *AnalysisParameterSelectableValues { return v.SelectableValues }).(AnalysisParameterSelectableValuesPtrOutput)
}

func (o AnalysisParameterDropDownControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterDropDownControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o AnalysisParameterDropDownControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterDropDownControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o AnalysisParameterDropDownControlOutput) Type() AnalysisSheetControlListTypePtrOutput {
	return o.ApplyT(func(v AnalysisParameterDropDownControl) *AnalysisSheetControlListType { return v.Type }).(AnalysisSheetControlListTypePtrOutput)
}

type AnalysisParameterDropDownControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisParameterDropDownControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterDropDownControl)(nil)).Elem()
}

func (o AnalysisParameterDropDownControlPtrOutput) ToAnalysisParameterDropDownControlPtrOutput() AnalysisParameterDropDownControlPtrOutput {
	return o
}

func (o AnalysisParameterDropDownControlPtrOutput) ToAnalysisParameterDropDownControlPtrOutputWithContext(ctx context.Context) AnalysisParameterDropDownControlPtrOutput {
	return o
}

func (o AnalysisParameterDropDownControlPtrOutput) Elem() AnalysisParameterDropDownControlOutput {
	return o.ApplyT(func(v *AnalysisParameterDropDownControl) AnalysisParameterDropDownControl {
		if v != nil {
			return *v
		}
		var ret AnalysisParameterDropDownControl
		return ret
	}).(AnalysisParameterDropDownControlOutput)
}

func (o AnalysisParameterDropDownControlPtrOutput) CascadingControlConfiguration() AnalysisCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDropDownControl) *AnalysisCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(AnalysisCascadingControlConfigurationPtrOutput)
}

func (o AnalysisParameterDropDownControlPtrOutput) DisplayOptions() AnalysisDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDropDownControl) *AnalysisDropDownControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisDropDownControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterDropDownControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterDropDownControlPtrOutput) SelectableValues() AnalysisParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDropDownControl) *AnalysisParameterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(AnalysisParameterSelectableValuesPtrOutput)
}

func (o AnalysisParameterDropDownControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterDropDownControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterDropDownControlPtrOutput) Type() AnalysisSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *AnalysisParameterDropDownControl) *AnalysisSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AnalysisSheetControlListTypePtrOutput)
}

type AnalysisParameterListControl struct {
	CascadingControlConfiguration *AnalysisCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *AnalysisListControlDisplayOptions     `pulumi:"displayOptions"`
	ParameterControlId            string                                 `pulumi:"parameterControlId"`
	SelectableValues              *AnalysisParameterSelectableValues     `pulumi:"selectableValues"`
	SourceParameterName           string                                 `pulumi:"sourceParameterName"`
	Title                         string                                 `pulumi:"title"`
	Type                          *AnalysisSheetControlListType          `pulumi:"type"`
}

// AnalysisParameterListControlInput is an input type that accepts AnalysisParameterListControlArgs and AnalysisParameterListControlOutput values.
// You can construct a concrete instance of `AnalysisParameterListControlInput` via:
//
//	AnalysisParameterListControlArgs{...}
type AnalysisParameterListControlInput interface {
	pulumi.Input

	ToAnalysisParameterListControlOutput() AnalysisParameterListControlOutput
	ToAnalysisParameterListControlOutputWithContext(context.Context) AnalysisParameterListControlOutput
}

type AnalysisParameterListControlArgs struct {
	CascadingControlConfiguration AnalysisCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                AnalysisListControlDisplayOptionsPtrInput     `pulumi:"displayOptions"`
	ParameterControlId            pulumi.StringInput                            `pulumi:"parameterControlId"`
	SelectableValues              AnalysisParameterSelectableValuesPtrInput     `pulumi:"selectableValues"`
	SourceParameterName           pulumi.StringInput                            `pulumi:"sourceParameterName"`
	Title                         pulumi.StringInput                            `pulumi:"title"`
	Type                          AnalysisSheetControlListTypePtrInput          `pulumi:"type"`
}

func (AnalysisParameterListControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterListControl)(nil)).Elem()
}

func (i AnalysisParameterListControlArgs) ToAnalysisParameterListControlOutput() AnalysisParameterListControlOutput {
	return i.ToAnalysisParameterListControlOutputWithContext(context.Background())
}

func (i AnalysisParameterListControlArgs) ToAnalysisParameterListControlOutputWithContext(ctx context.Context) AnalysisParameterListControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterListControlOutput)
}

func (i AnalysisParameterListControlArgs) ToAnalysisParameterListControlPtrOutput() AnalysisParameterListControlPtrOutput {
	return i.ToAnalysisParameterListControlPtrOutputWithContext(context.Background())
}

func (i AnalysisParameterListControlArgs) ToAnalysisParameterListControlPtrOutputWithContext(ctx context.Context) AnalysisParameterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterListControlOutput).ToAnalysisParameterListControlPtrOutputWithContext(ctx)
}

// AnalysisParameterListControlPtrInput is an input type that accepts AnalysisParameterListControlArgs, AnalysisParameterListControlPtr and AnalysisParameterListControlPtrOutput values.
// You can construct a concrete instance of `AnalysisParameterListControlPtrInput` via:
//
//	        AnalysisParameterListControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisParameterListControlPtrInput interface {
	pulumi.Input

	ToAnalysisParameterListControlPtrOutput() AnalysisParameterListControlPtrOutput
	ToAnalysisParameterListControlPtrOutputWithContext(context.Context) AnalysisParameterListControlPtrOutput
}

type analysisParameterListControlPtrType AnalysisParameterListControlArgs

func AnalysisParameterListControlPtr(v *AnalysisParameterListControlArgs) AnalysisParameterListControlPtrInput {
	return (*analysisParameterListControlPtrType)(v)
}

func (*analysisParameterListControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterListControl)(nil)).Elem()
}

func (i *analysisParameterListControlPtrType) ToAnalysisParameterListControlPtrOutput() AnalysisParameterListControlPtrOutput {
	return i.ToAnalysisParameterListControlPtrOutputWithContext(context.Background())
}

func (i *analysisParameterListControlPtrType) ToAnalysisParameterListControlPtrOutputWithContext(ctx context.Context) AnalysisParameterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterListControlPtrOutput)
}

type AnalysisParameterListControlOutput struct{ *pulumi.OutputState }

func (AnalysisParameterListControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterListControl)(nil)).Elem()
}

func (o AnalysisParameterListControlOutput) ToAnalysisParameterListControlOutput() AnalysisParameterListControlOutput {
	return o
}

func (o AnalysisParameterListControlOutput) ToAnalysisParameterListControlOutputWithContext(ctx context.Context) AnalysisParameterListControlOutput {
	return o
}

func (o AnalysisParameterListControlOutput) ToAnalysisParameterListControlPtrOutput() AnalysisParameterListControlPtrOutput {
	return o.ToAnalysisParameterListControlPtrOutputWithContext(context.Background())
}

func (o AnalysisParameterListControlOutput) ToAnalysisParameterListControlPtrOutputWithContext(ctx context.Context) AnalysisParameterListControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisParameterListControl) *AnalysisParameterListControl {
		return &v
	}).(AnalysisParameterListControlPtrOutput)
}

func (o AnalysisParameterListControlOutput) CascadingControlConfiguration() AnalysisCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisParameterListControl) *AnalysisCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(AnalysisCascadingControlConfigurationPtrOutput)
}

func (o AnalysisParameterListControlOutput) DisplayOptions() AnalysisListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisParameterListControl) *AnalysisListControlDisplayOptions { return v.DisplayOptions }).(AnalysisListControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterListControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterListControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o AnalysisParameterListControlOutput) SelectableValues() AnalysisParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v AnalysisParameterListControl) *AnalysisParameterSelectableValues { return v.SelectableValues }).(AnalysisParameterSelectableValuesPtrOutput)
}

func (o AnalysisParameterListControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterListControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o AnalysisParameterListControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterListControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o AnalysisParameterListControlOutput) Type() AnalysisSheetControlListTypePtrOutput {
	return o.ApplyT(func(v AnalysisParameterListControl) *AnalysisSheetControlListType { return v.Type }).(AnalysisSheetControlListTypePtrOutput)
}

type AnalysisParameterListControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisParameterListControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterListControl)(nil)).Elem()
}

func (o AnalysisParameterListControlPtrOutput) ToAnalysisParameterListControlPtrOutput() AnalysisParameterListControlPtrOutput {
	return o
}

func (o AnalysisParameterListControlPtrOutput) ToAnalysisParameterListControlPtrOutputWithContext(ctx context.Context) AnalysisParameterListControlPtrOutput {
	return o
}

func (o AnalysisParameterListControlPtrOutput) Elem() AnalysisParameterListControlOutput {
	return o.ApplyT(func(v *AnalysisParameterListControl) AnalysisParameterListControl {
		if v != nil {
			return *v
		}
		var ret AnalysisParameterListControl
		return ret
	}).(AnalysisParameterListControlOutput)
}

func (o AnalysisParameterListControlPtrOutput) CascadingControlConfiguration() AnalysisCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterListControl) *AnalysisCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(AnalysisCascadingControlConfigurationPtrOutput)
}

func (o AnalysisParameterListControlPtrOutput) DisplayOptions() AnalysisListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterListControl) *AnalysisListControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisListControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterListControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterListControlPtrOutput) SelectableValues() AnalysisParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterListControl) *AnalysisParameterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(AnalysisParameterSelectableValuesPtrOutput)
}

func (o AnalysisParameterListControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterListControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterListControlPtrOutput) Type() AnalysisSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *AnalysisParameterListControl) *AnalysisSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AnalysisSheetControlListTypePtrOutput)
}

type AnalysisParameterSelectableValues struct {
	LinkToDataSetColumn *AnalysisColumnIdentifier `pulumi:"linkToDataSetColumn"`
	Values              []string                  `pulumi:"values"`
}

// AnalysisParameterSelectableValuesInput is an input type that accepts AnalysisParameterSelectableValuesArgs and AnalysisParameterSelectableValuesOutput values.
// You can construct a concrete instance of `AnalysisParameterSelectableValuesInput` via:
//
//	AnalysisParameterSelectableValuesArgs{...}
type AnalysisParameterSelectableValuesInput interface {
	pulumi.Input

	ToAnalysisParameterSelectableValuesOutput() AnalysisParameterSelectableValuesOutput
	ToAnalysisParameterSelectableValuesOutputWithContext(context.Context) AnalysisParameterSelectableValuesOutput
}

type AnalysisParameterSelectableValuesArgs struct {
	LinkToDataSetColumn AnalysisColumnIdentifierPtrInput `pulumi:"linkToDataSetColumn"`
	Values              pulumi.StringArrayInput          `pulumi:"values"`
}

func (AnalysisParameterSelectableValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterSelectableValues)(nil)).Elem()
}

func (i AnalysisParameterSelectableValuesArgs) ToAnalysisParameterSelectableValuesOutput() AnalysisParameterSelectableValuesOutput {
	return i.ToAnalysisParameterSelectableValuesOutputWithContext(context.Background())
}

func (i AnalysisParameterSelectableValuesArgs) ToAnalysisParameterSelectableValuesOutputWithContext(ctx context.Context) AnalysisParameterSelectableValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterSelectableValuesOutput)
}

func (i AnalysisParameterSelectableValuesArgs) ToAnalysisParameterSelectableValuesPtrOutput() AnalysisParameterSelectableValuesPtrOutput {
	return i.ToAnalysisParameterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i AnalysisParameterSelectableValuesArgs) ToAnalysisParameterSelectableValuesPtrOutputWithContext(ctx context.Context) AnalysisParameterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterSelectableValuesOutput).ToAnalysisParameterSelectableValuesPtrOutputWithContext(ctx)
}

// AnalysisParameterSelectableValuesPtrInput is an input type that accepts AnalysisParameterSelectableValuesArgs, AnalysisParameterSelectableValuesPtr and AnalysisParameterSelectableValuesPtrOutput values.
// You can construct a concrete instance of `AnalysisParameterSelectableValuesPtrInput` via:
//
//	        AnalysisParameterSelectableValuesArgs{...}
//
//	or:
//
//	        nil
type AnalysisParameterSelectableValuesPtrInput interface {
	pulumi.Input

	ToAnalysisParameterSelectableValuesPtrOutput() AnalysisParameterSelectableValuesPtrOutput
	ToAnalysisParameterSelectableValuesPtrOutputWithContext(context.Context) AnalysisParameterSelectableValuesPtrOutput
}

type analysisParameterSelectableValuesPtrType AnalysisParameterSelectableValuesArgs

func AnalysisParameterSelectableValuesPtr(v *AnalysisParameterSelectableValuesArgs) AnalysisParameterSelectableValuesPtrInput {
	return (*analysisParameterSelectableValuesPtrType)(v)
}

func (*analysisParameterSelectableValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterSelectableValues)(nil)).Elem()
}

func (i *analysisParameterSelectableValuesPtrType) ToAnalysisParameterSelectableValuesPtrOutput() AnalysisParameterSelectableValuesPtrOutput {
	return i.ToAnalysisParameterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i *analysisParameterSelectableValuesPtrType) ToAnalysisParameterSelectableValuesPtrOutputWithContext(ctx context.Context) AnalysisParameterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterSelectableValuesPtrOutput)
}

type AnalysisParameterSelectableValuesOutput struct{ *pulumi.OutputState }

func (AnalysisParameterSelectableValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterSelectableValues)(nil)).Elem()
}

func (o AnalysisParameterSelectableValuesOutput) ToAnalysisParameterSelectableValuesOutput() AnalysisParameterSelectableValuesOutput {
	return o
}

func (o AnalysisParameterSelectableValuesOutput) ToAnalysisParameterSelectableValuesOutputWithContext(ctx context.Context) AnalysisParameterSelectableValuesOutput {
	return o
}

func (o AnalysisParameterSelectableValuesOutput) ToAnalysisParameterSelectableValuesPtrOutput() AnalysisParameterSelectableValuesPtrOutput {
	return o.ToAnalysisParameterSelectableValuesPtrOutputWithContext(context.Background())
}

func (o AnalysisParameterSelectableValuesOutput) ToAnalysisParameterSelectableValuesPtrOutputWithContext(ctx context.Context) AnalysisParameterSelectableValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisParameterSelectableValues) *AnalysisParameterSelectableValues {
		return &v
	}).(AnalysisParameterSelectableValuesPtrOutput)
}

func (o AnalysisParameterSelectableValuesOutput) LinkToDataSetColumn() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v AnalysisParameterSelectableValues) *AnalysisColumnIdentifier { return v.LinkToDataSetColumn }).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisParameterSelectableValuesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisParameterSelectableValues) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AnalysisParameterSelectableValuesPtrOutput struct{ *pulumi.OutputState }

func (AnalysisParameterSelectableValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterSelectableValues)(nil)).Elem()
}

func (o AnalysisParameterSelectableValuesPtrOutput) ToAnalysisParameterSelectableValuesPtrOutput() AnalysisParameterSelectableValuesPtrOutput {
	return o
}

func (o AnalysisParameterSelectableValuesPtrOutput) ToAnalysisParameterSelectableValuesPtrOutputWithContext(ctx context.Context) AnalysisParameterSelectableValuesPtrOutput {
	return o
}

func (o AnalysisParameterSelectableValuesPtrOutput) Elem() AnalysisParameterSelectableValuesOutput {
	return o.ApplyT(func(v *AnalysisParameterSelectableValues) AnalysisParameterSelectableValues {
		if v != nil {
			return *v
		}
		var ret AnalysisParameterSelectableValues
		return ret
	}).(AnalysisParameterSelectableValuesOutput)
}

func (o AnalysisParameterSelectableValuesPtrOutput) LinkToDataSetColumn() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterSelectableValues) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.LinkToDataSetColumn
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisParameterSelectableValuesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisParameterSelectableValues) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type AnalysisParameterSliderControl struct {
	DisplayOptions      *AnalysisSliderControlDisplayOptions `pulumi:"displayOptions"`
	MaximumValue        float64                              `pulumi:"maximumValue"`
	MinimumValue        float64                              `pulumi:"minimumValue"`
	ParameterControlId  string                               `pulumi:"parameterControlId"`
	SourceParameterName string                               `pulumi:"sourceParameterName"`
	StepSize            float64                              `pulumi:"stepSize"`
	Title               string                               `pulumi:"title"`
}

// AnalysisParameterSliderControlInput is an input type that accepts AnalysisParameterSliderControlArgs and AnalysisParameterSliderControlOutput values.
// You can construct a concrete instance of `AnalysisParameterSliderControlInput` via:
//
//	AnalysisParameterSliderControlArgs{...}
type AnalysisParameterSliderControlInput interface {
	pulumi.Input

	ToAnalysisParameterSliderControlOutput() AnalysisParameterSliderControlOutput
	ToAnalysisParameterSliderControlOutputWithContext(context.Context) AnalysisParameterSliderControlOutput
}

type AnalysisParameterSliderControlArgs struct {
	DisplayOptions      AnalysisSliderControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	MaximumValue        pulumi.Float64Input                         `pulumi:"maximumValue"`
	MinimumValue        pulumi.Float64Input                         `pulumi:"minimumValue"`
	ParameterControlId  pulumi.StringInput                          `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                          `pulumi:"sourceParameterName"`
	StepSize            pulumi.Float64Input                         `pulumi:"stepSize"`
	Title               pulumi.StringInput                          `pulumi:"title"`
}

func (AnalysisParameterSliderControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterSliderControl)(nil)).Elem()
}

func (i AnalysisParameterSliderControlArgs) ToAnalysisParameterSliderControlOutput() AnalysisParameterSliderControlOutput {
	return i.ToAnalysisParameterSliderControlOutputWithContext(context.Background())
}

func (i AnalysisParameterSliderControlArgs) ToAnalysisParameterSliderControlOutputWithContext(ctx context.Context) AnalysisParameterSliderControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterSliderControlOutput)
}

func (i AnalysisParameterSliderControlArgs) ToAnalysisParameterSliderControlPtrOutput() AnalysisParameterSliderControlPtrOutput {
	return i.ToAnalysisParameterSliderControlPtrOutputWithContext(context.Background())
}

func (i AnalysisParameterSliderControlArgs) ToAnalysisParameterSliderControlPtrOutputWithContext(ctx context.Context) AnalysisParameterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterSliderControlOutput).ToAnalysisParameterSliderControlPtrOutputWithContext(ctx)
}

// AnalysisParameterSliderControlPtrInput is an input type that accepts AnalysisParameterSliderControlArgs, AnalysisParameterSliderControlPtr and AnalysisParameterSliderControlPtrOutput values.
// You can construct a concrete instance of `AnalysisParameterSliderControlPtrInput` via:
//
//	        AnalysisParameterSliderControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisParameterSliderControlPtrInput interface {
	pulumi.Input

	ToAnalysisParameterSliderControlPtrOutput() AnalysisParameterSliderControlPtrOutput
	ToAnalysisParameterSliderControlPtrOutputWithContext(context.Context) AnalysisParameterSliderControlPtrOutput
}

type analysisParameterSliderControlPtrType AnalysisParameterSliderControlArgs

func AnalysisParameterSliderControlPtr(v *AnalysisParameterSliderControlArgs) AnalysisParameterSliderControlPtrInput {
	return (*analysisParameterSliderControlPtrType)(v)
}

func (*analysisParameterSliderControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterSliderControl)(nil)).Elem()
}

func (i *analysisParameterSliderControlPtrType) ToAnalysisParameterSliderControlPtrOutput() AnalysisParameterSliderControlPtrOutput {
	return i.ToAnalysisParameterSliderControlPtrOutputWithContext(context.Background())
}

func (i *analysisParameterSliderControlPtrType) ToAnalysisParameterSliderControlPtrOutputWithContext(ctx context.Context) AnalysisParameterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterSliderControlPtrOutput)
}

type AnalysisParameterSliderControlOutput struct{ *pulumi.OutputState }

func (AnalysisParameterSliderControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterSliderControl)(nil)).Elem()
}

func (o AnalysisParameterSliderControlOutput) ToAnalysisParameterSliderControlOutput() AnalysisParameterSliderControlOutput {
	return o
}

func (o AnalysisParameterSliderControlOutput) ToAnalysisParameterSliderControlOutputWithContext(ctx context.Context) AnalysisParameterSliderControlOutput {
	return o
}

func (o AnalysisParameterSliderControlOutput) ToAnalysisParameterSliderControlPtrOutput() AnalysisParameterSliderControlPtrOutput {
	return o.ToAnalysisParameterSliderControlPtrOutputWithContext(context.Background())
}

func (o AnalysisParameterSliderControlOutput) ToAnalysisParameterSliderControlPtrOutputWithContext(ctx context.Context) AnalysisParameterSliderControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisParameterSliderControl) *AnalysisParameterSliderControl {
		return &v
	}).(AnalysisParameterSliderControlPtrOutput)
}

func (o AnalysisParameterSliderControlOutput) DisplayOptions() AnalysisSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisParameterSliderControl) *AnalysisSliderControlDisplayOptions { return v.DisplayOptions }).(AnalysisSliderControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterSliderControlOutput) MaximumValue() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisParameterSliderControl) float64 { return v.MaximumValue }).(pulumi.Float64Output)
}

func (o AnalysisParameterSliderControlOutput) MinimumValue() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisParameterSliderControl) float64 { return v.MinimumValue }).(pulumi.Float64Output)
}

func (o AnalysisParameterSliderControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterSliderControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o AnalysisParameterSliderControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterSliderControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o AnalysisParameterSliderControlOutput) StepSize() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisParameterSliderControl) float64 { return v.StepSize }).(pulumi.Float64Output)
}

func (o AnalysisParameterSliderControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterSliderControl) string { return v.Title }).(pulumi.StringOutput)
}

type AnalysisParameterSliderControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisParameterSliderControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterSliderControl)(nil)).Elem()
}

func (o AnalysisParameterSliderControlPtrOutput) ToAnalysisParameterSliderControlPtrOutput() AnalysisParameterSliderControlPtrOutput {
	return o
}

func (o AnalysisParameterSliderControlPtrOutput) ToAnalysisParameterSliderControlPtrOutputWithContext(ctx context.Context) AnalysisParameterSliderControlPtrOutput {
	return o
}

func (o AnalysisParameterSliderControlPtrOutput) Elem() AnalysisParameterSliderControlOutput {
	return o.ApplyT(func(v *AnalysisParameterSliderControl) AnalysisParameterSliderControl {
		if v != nil {
			return *v
		}
		var ret AnalysisParameterSliderControl
		return ret
	}).(AnalysisParameterSliderControlOutput)
}

func (o AnalysisParameterSliderControlPtrOutput) DisplayOptions() AnalysisSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterSliderControl) *AnalysisSliderControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisSliderControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterSliderControlPtrOutput) MaximumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisParameterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaximumValue
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisParameterSliderControlPtrOutput) MinimumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisParameterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinimumValue
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisParameterSliderControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterSliderControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterSliderControlPtrOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisParameterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.StepSize
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisParameterSliderControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AnalysisParameterTextAreaControl struct {
	Delimiter           *string                                `pulumi:"delimiter"`
	DisplayOptions      *AnalysisTextAreaControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId  string                                 `pulumi:"parameterControlId"`
	SourceParameterName string                                 `pulumi:"sourceParameterName"`
	Title               string                                 `pulumi:"title"`
}

// AnalysisParameterTextAreaControlInput is an input type that accepts AnalysisParameterTextAreaControlArgs and AnalysisParameterTextAreaControlOutput values.
// You can construct a concrete instance of `AnalysisParameterTextAreaControlInput` via:
//
//	AnalysisParameterTextAreaControlArgs{...}
type AnalysisParameterTextAreaControlInput interface {
	pulumi.Input

	ToAnalysisParameterTextAreaControlOutput() AnalysisParameterTextAreaControlOutput
	ToAnalysisParameterTextAreaControlOutputWithContext(context.Context) AnalysisParameterTextAreaControlOutput
}

type AnalysisParameterTextAreaControlArgs struct {
	Delimiter           pulumi.StringPtrInput                         `pulumi:"delimiter"`
	DisplayOptions      AnalysisTextAreaControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId  pulumi.StringInput                            `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                            `pulumi:"sourceParameterName"`
	Title               pulumi.StringInput                            `pulumi:"title"`
}

func (AnalysisParameterTextAreaControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterTextAreaControl)(nil)).Elem()
}

func (i AnalysisParameterTextAreaControlArgs) ToAnalysisParameterTextAreaControlOutput() AnalysisParameterTextAreaControlOutput {
	return i.ToAnalysisParameterTextAreaControlOutputWithContext(context.Background())
}

func (i AnalysisParameterTextAreaControlArgs) ToAnalysisParameterTextAreaControlOutputWithContext(ctx context.Context) AnalysisParameterTextAreaControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterTextAreaControlOutput)
}

func (i AnalysisParameterTextAreaControlArgs) ToAnalysisParameterTextAreaControlPtrOutput() AnalysisParameterTextAreaControlPtrOutput {
	return i.ToAnalysisParameterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i AnalysisParameterTextAreaControlArgs) ToAnalysisParameterTextAreaControlPtrOutputWithContext(ctx context.Context) AnalysisParameterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterTextAreaControlOutput).ToAnalysisParameterTextAreaControlPtrOutputWithContext(ctx)
}

// AnalysisParameterTextAreaControlPtrInput is an input type that accepts AnalysisParameterTextAreaControlArgs, AnalysisParameterTextAreaControlPtr and AnalysisParameterTextAreaControlPtrOutput values.
// You can construct a concrete instance of `AnalysisParameterTextAreaControlPtrInput` via:
//
//	        AnalysisParameterTextAreaControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisParameterTextAreaControlPtrInput interface {
	pulumi.Input

	ToAnalysisParameterTextAreaControlPtrOutput() AnalysisParameterTextAreaControlPtrOutput
	ToAnalysisParameterTextAreaControlPtrOutputWithContext(context.Context) AnalysisParameterTextAreaControlPtrOutput
}

type analysisParameterTextAreaControlPtrType AnalysisParameterTextAreaControlArgs

func AnalysisParameterTextAreaControlPtr(v *AnalysisParameterTextAreaControlArgs) AnalysisParameterTextAreaControlPtrInput {
	return (*analysisParameterTextAreaControlPtrType)(v)
}

func (*analysisParameterTextAreaControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterTextAreaControl)(nil)).Elem()
}

func (i *analysisParameterTextAreaControlPtrType) ToAnalysisParameterTextAreaControlPtrOutput() AnalysisParameterTextAreaControlPtrOutput {
	return i.ToAnalysisParameterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i *analysisParameterTextAreaControlPtrType) ToAnalysisParameterTextAreaControlPtrOutputWithContext(ctx context.Context) AnalysisParameterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterTextAreaControlPtrOutput)
}

type AnalysisParameterTextAreaControlOutput struct{ *pulumi.OutputState }

func (AnalysisParameterTextAreaControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterTextAreaControl)(nil)).Elem()
}

func (o AnalysisParameterTextAreaControlOutput) ToAnalysisParameterTextAreaControlOutput() AnalysisParameterTextAreaControlOutput {
	return o
}

func (o AnalysisParameterTextAreaControlOutput) ToAnalysisParameterTextAreaControlOutputWithContext(ctx context.Context) AnalysisParameterTextAreaControlOutput {
	return o
}

func (o AnalysisParameterTextAreaControlOutput) ToAnalysisParameterTextAreaControlPtrOutput() AnalysisParameterTextAreaControlPtrOutput {
	return o.ToAnalysisParameterTextAreaControlPtrOutputWithContext(context.Background())
}

func (o AnalysisParameterTextAreaControlOutput) ToAnalysisParameterTextAreaControlPtrOutputWithContext(ctx context.Context) AnalysisParameterTextAreaControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisParameterTextAreaControl) *AnalysisParameterTextAreaControl {
		return &v
	}).(AnalysisParameterTextAreaControlPtrOutput)
}

func (o AnalysisParameterTextAreaControlOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisParameterTextAreaControl) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterTextAreaControlOutput) DisplayOptions() AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisParameterTextAreaControl) *AnalysisTextAreaControlDisplayOptions {
		return v.DisplayOptions
	}).(AnalysisTextAreaControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterTextAreaControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterTextAreaControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o AnalysisParameterTextAreaControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterTextAreaControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o AnalysisParameterTextAreaControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterTextAreaControl) string { return v.Title }).(pulumi.StringOutput)
}

type AnalysisParameterTextAreaControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisParameterTextAreaControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterTextAreaControl)(nil)).Elem()
}

func (o AnalysisParameterTextAreaControlPtrOutput) ToAnalysisParameterTextAreaControlPtrOutput() AnalysisParameterTextAreaControlPtrOutput {
	return o
}

func (o AnalysisParameterTextAreaControlPtrOutput) ToAnalysisParameterTextAreaControlPtrOutputWithContext(ctx context.Context) AnalysisParameterTextAreaControlPtrOutput {
	return o
}

func (o AnalysisParameterTextAreaControlPtrOutput) Elem() AnalysisParameterTextAreaControlOutput {
	return o.ApplyT(func(v *AnalysisParameterTextAreaControl) AnalysisParameterTextAreaControl {
		if v != nil {
			return *v
		}
		var ret AnalysisParameterTextAreaControl
		return ret
	}).(AnalysisParameterTextAreaControlOutput)
}

func (o AnalysisParameterTextAreaControlPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterTextAreaControlPtrOutput) DisplayOptions() AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterTextAreaControl) *AnalysisTextAreaControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisTextAreaControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterTextAreaControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterTextAreaControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterTextAreaControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AnalysisParameterTextFieldControl struct {
	DisplayOptions      *AnalysisTextFieldControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId  string                                  `pulumi:"parameterControlId"`
	SourceParameterName string                                  `pulumi:"sourceParameterName"`
	Title               string                                  `pulumi:"title"`
}

// AnalysisParameterTextFieldControlInput is an input type that accepts AnalysisParameterTextFieldControlArgs and AnalysisParameterTextFieldControlOutput values.
// You can construct a concrete instance of `AnalysisParameterTextFieldControlInput` via:
//
//	AnalysisParameterTextFieldControlArgs{...}
type AnalysisParameterTextFieldControlInput interface {
	pulumi.Input

	ToAnalysisParameterTextFieldControlOutput() AnalysisParameterTextFieldControlOutput
	ToAnalysisParameterTextFieldControlOutputWithContext(context.Context) AnalysisParameterTextFieldControlOutput
}

type AnalysisParameterTextFieldControlArgs struct {
	DisplayOptions      AnalysisTextFieldControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId  pulumi.StringInput                             `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                             `pulumi:"sourceParameterName"`
	Title               pulumi.StringInput                             `pulumi:"title"`
}

func (AnalysisParameterTextFieldControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterTextFieldControl)(nil)).Elem()
}

func (i AnalysisParameterTextFieldControlArgs) ToAnalysisParameterTextFieldControlOutput() AnalysisParameterTextFieldControlOutput {
	return i.ToAnalysisParameterTextFieldControlOutputWithContext(context.Background())
}

func (i AnalysisParameterTextFieldControlArgs) ToAnalysisParameterTextFieldControlOutputWithContext(ctx context.Context) AnalysisParameterTextFieldControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterTextFieldControlOutput)
}

func (i AnalysisParameterTextFieldControlArgs) ToAnalysisParameterTextFieldControlPtrOutput() AnalysisParameterTextFieldControlPtrOutput {
	return i.ToAnalysisParameterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i AnalysisParameterTextFieldControlArgs) ToAnalysisParameterTextFieldControlPtrOutputWithContext(ctx context.Context) AnalysisParameterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterTextFieldControlOutput).ToAnalysisParameterTextFieldControlPtrOutputWithContext(ctx)
}

// AnalysisParameterTextFieldControlPtrInput is an input type that accepts AnalysisParameterTextFieldControlArgs, AnalysisParameterTextFieldControlPtr and AnalysisParameterTextFieldControlPtrOutput values.
// You can construct a concrete instance of `AnalysisParameterTextFieldControlPtrInput` via:
//
//	        AnalysisParameterTextFieldControlArgs{...}
//
//	or:
//
//	        nil
type AnalysisParameterTextFieldControlPtrInput interface {
	pulumi.Input

	ToAnalysisParameterTextFieldControlPtrOutput() AnalysisParameterTextFieldControlPtrOutput
	ToAnalysisParameterTextFieldControlPtrOutputWithContext(context.Context) AnalysisParameterTextFieldControlPtrOutput
}

type analysisParameterTextFieldControlPtrType AnalysisParameterTextFieldControlArgs

func AnalysisParameterTextFieldControlPtr(v *AnalysisParameterTextFieldControlArgs) AnalysisParameterTextFieldControlPtrInput {
	return (*analysisParameterTextFieldControlPtrType)(v)
}

func (*analysisParameterTextFieldControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterTextFieldControl)(nil)).Elem()
}

func (i *analysisParameterTextFieldControlPtrType) ToAnalysisParameterTextFieldControlPtrOutput() AnalysisParameterTextFieldControlPtrOutput {
	return i.ToAnalysisParameterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i *analysisParameterTextFieldControlPtrType) ToAnalysisParameterTextFieldControlPtrOutputWithContext(ctx context.Context) AnalysisParameterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParameterTextFieldControlPtrOutput)
}

type AnalysisParameterTextFieldControlOutput struct{ *pulumi.OutputState }

func (AnalysisParameterTextFieldControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterTextFieldControl)(nil)).Elem()
}

func (o AnalysisParameterTextFieldControlOutput) ToAnalysisParameterTextFieldControlOutput() AnalysisParameterTextFieldControlOutput {
	return o
}

func (o AnalysisParameterTextFieldControlOutput) ToAnalysisParameterTextFieldControlOutputWithContext(ctx context.Context) AnalysisParameterTextFieldControlOutput {
	return o
}

func (o AnalysisParameterTextFieldControlOutput) ToAnalysisParameterTextFieldControlPtrOutput() AnalysisParameterTextFieldControlPtrOutput {
	return o.ToAnalysisParameterTextFieldControlPtrOutputWithContext(context.Background())
}

func (o AnalysisParameterTextFieldControlOutput) ToAnalysisParameterTextFieldControlPtrOutputWithContext(ctx context.Context) AnalysisParameterTextFieldControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisParameterTextFieldControl) *AnalysisParameterTextFieldControl {
		return &v
	}).(AnalysisParameterTextFieldControlPtrOutput)
}

func (o AnalysisParameterTextFieldControlOutput) DisplayOptions() AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisParameterTextFieldControl) *AnalysisTextFieldControlDisplayOptions {
		return v.DisplayOptions
	}).(AnalysisTextFieldControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterTextFieldControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterTextFieldControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o AnalysisParameterTextFieldControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterTextFieldControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o AnalysisParameterTextFieldControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisParameterTextFieldControl) string { return v.Title }).(pulumi.StringOutput)
}

type AnalysisParameterTextFieldControlPtrOutput struct{ *pulumi.OutputState }

func (AnalysisParameterTextFieldControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterTextFieldControl)(nil)).Elem()
}

func (o AnalysisParameterTextFieldControlPtrOutput) ToAnalysisParameterTextFieldControlPtrOutput() AnalysisParameterTextFieldControlPtrOutput {
	return o
}

func (o AnalysisParameterTextFieldControlPtrOutput) ToAnalysisParameterTextFieldControlPtrOutputWithContext(ctx context.Context) AnalysisParameterTextFieldControlPtrOutput {
	return o
}

func (o AnalysisParameterTextFieldControlPtrOutput) Elem() AnalysisParameterTextFieldControlOutput {
	return o.ApplyT(func(v *AnalysisParameterTextFieldControl) AnalysisParameterTextFieldControl {
		if v != nil {
			return *v
		}
		var ret AnalysisParameterTextFieldControl
		return ret
	}).(AnalysisParameterTextFieldControlOutput)
}

func (o AnalysisParameterTextFieldControlPtrOutput) DisplayOptions() AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterTextFieldControl) *AnalysisTextFieldControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(AnalysisTextFieldControlDisplayOptionsPtrOutput)
}

func (o AnalysisParameterTextFieldControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterTextFieldControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisParameterTextFieldControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisParameterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AnalysisParameters struct {
	DateTimeParameters []AnalysisDateTimeParameter `pulumi:"dateTimeParameters"`
	DecimalParameters  []AnalysisDecimalParameter  `pulumi:"decimalParameters"`
	IntegerParameters  []AnalysisIntegerParameter  `pulumi:"integerParameters"`
	StringParameters   []AnalysisStringParameter   `pulumi:"stringParameters"`
}

// AnalysisParametersInput is an input type that accepts AnalysisParametersArgs and AnalysisParametersOutput values.
// You can construct a concrete instance of `AnalysisParametersInput` via:
//
//	AnalysisParametersArgs{...}
type AnalysisParametersInput interface {
	pulumi.Input

	ToAnalysisParametersOutput() AnalysisParametersOutput
	ToAnalysisParametersOutputWithContext(context.Context) AnalysisParametersOutput
}

type AnalysisParametersArgs struct {
	DateTimeParameters AnalysisDateTimeParameterArrayInput `pulumi:"dateTimeParameters"`
	DecimalParameters  AnalysisDecimalParameterArrayInput  `pulumi:"decimalParameters"`
	IntegerParameters  AnalysisIntegerParameterArrayInput  `pulumi:"integerParameters"`
	StringParameters   AnalysisStringParameterArrayInput   `pulumi:"stringParameters"`
}

func (AnalysisParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameters)(nil)).Elem()
}

func (i AnalysisParametersArgs) ToAnalysisParametersOutput() AnalysisParametersOutput {
	return i.ToAnalysisParametersOutputWithContext(context.Background())
}

func (i AnalysisParametersArgs) ToAnalysisParametersOutputWithContext(ctx context.Context) AnalysisParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParametersOutput)
}

func (i AnalysisParametersArgs) ToAnalysisParametersPtrOutput() AnalysisParametersPtrOutput {
	return i.ToAnalysisParametersPtrOutputWithContext(context.Background())
}

func (i AnalysisParametersArgs) ToAnalysisParametersPtrOutputWithContext(ctx context.Context) AnalysisParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParametersOutput).ToAnalysisParametersPtrOutputWithContext(ctx)
}

// AnalysisParametersPtrInput is an input type that accepts AnalysisParametersArgs, AnalysisParametersPtr and AnalysisParametersPtrOutput values.
// You can construct a concrete instance of `AnalysisParametersPtrInput` via:
//
//	        AnalysisParametersArgs{...}
//
//	or:
//
//	        nil
type AnalysisParametersPtrInput interface {
	pulumi.Input

	ToAnalysisParametersPtrOutput() AnalysisParametersPtrOutput
	ToAnalysisParametersPtrOutputWithContext(context.Context) AnalysisParametersPtrOutput
}

type analysisParametersPtrType AnalysisParametersArgs

func AnalysisParametersPtr(v *AnalysisParametersArgs) AnalysisParametersPtrInput {
	return (*analysisParametersPtrType)(v)
}

func (*analysisParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameters)(nil)).Elem()
}

func (i *analysisParametersPtrType) ToAnalysisParametersPtrOutput() AnalysisParametersPtrOutput {
	return i.ToAnalysisParametersPtrOutputWithContext(context.Background())
}

func (i *analysisParametersPtrType) ToAnalysisParametersPtrOutputWithContext(ctx context.Context) AnalysisParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisParametersPtrOutput)
}

type AnalysisParametersOutput struct{ *pulumi.OutputState }

func (AnalysisParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameters)(nil)).Elem()
}

func (o AnalysisParametersOutput) ToAnalysisParametersOutput() AnalysisParametersOutput {
	return o
}

func (o AnalysisParametersOutput) ToAnalysisParametersOutputWithContext(ctx context.Context) AnalysisParametersOutput {
	return o
}

func (o AnalysisParametersOutput) ToAnalysisParametersPtrOutput() AnalysisParametersPtrOutput {
	return o.ToAnalysisParametersPtrOutputWithContext(context.Background())
}

func (o AnalysisParametersOutput) ToAnalysisParametersPtrOutputWithContext(ctx context.Context) AnalysisParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisParameters) *AnalysisParameters {
		return &v
	}).(AnalysisParametersPtrOutput)
}

func (o AnalysisParametersOutput) DateTimeParameters() AnalysisDateTimeParameterArrayOutput {
	return o.ApplyT(func(v AnalysisParameters) []AnalysisDateTimeParameter { return v.DateTimeParameters }).(AnalysisDateTimeParameterArrayOutput)
}

func (o AnalysisParametersOutput) DecimalParameters() AnalysisDecimalParameterArrayOutput {
	return o.ApplyT(func(v AnalysisParameters) []AnalysisDecimalParameter { return v.DecimalParameters }).(AnalysisDecimalParameterArrayOutput)
}

func (o AnalysisParametersOutput) IntegerParameters() AnalysisIntegerParameterArrayOutput {
	return o.ApplyT(func(v AnalysisParameters) []AnalysisIntegerParameter { return v.IntegerParameters }).(AnalysisIntegerParameterArrayOutput)
}

func (o AnalysisParametersOutput) StringParameters() AnalysisStringParameterArrayOutput {
	return o.ApplyT(func(v AnalysisParameters) []AnalysisStringParameter { return v.StringParameters }).(AnalysisStringParameterArrayOutput)
}

type AnalysisParametersPtrOutput struct{ *pulumi.OutputState }

func (AnalysisParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameters)(nil)).Elem()
}

func (o AnalysisParametersPtrOutput) ToAnalysisParametersPtrOutput() AnalysisParametersPtrOutput {
	return o
}

func (o AnalysisParametersPtrOutput) ToAnalysisParametersPtrOutputWithContext(ctx context.Context) AnalysisParametersPtrOutput {
	return o
}

func (o AnalysisParametersPtrOutput) Elem() AnalysisParametersOutput {
	return o.ApplyT(func(v *AnalysisParameters) AnalysisParameters {
		if v != nil {
			return *v
		}
		var ret AnalysisParameters
		return ret
	}).(AnalysisParametersOutput)
}

func (o AnalysisParametersPtrOutput) DateTimeParameters() AnalysisDateTimeParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisParameters) []AnalysisDateTimeParameter {
		if v == nil {
			return nil
		}
		return v.DateTimeParameters
	}).(AnalysisDateTimeParameterArrayOutput)
}

func (o AnalysisParametersPtrOutput) DecimalParameters() AnalysisDecimalParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisParameters) []AnalysisDecimalParameter {
		if v == nil {
			return nil
		}
		return v.DecimalParameters
	}).(AnalysisDecimalParameterArrayOutput)
}

func (o AnalysisParametersPtrOutput) IntegerParameters() AnalysisIntegerParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisParameters) []AnalysisIntegerParameter {
		if v == nil {
			return nil
		}
		return v.IntegerParameters
	}).(AnalysisIntegerParameterArrayOutput)
}

func (o AnalysisParametersPtrOutput) StringParameters() AnalysisStringParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisParameters) []AnalysisStringParameter {
		if v == nil {
			return nil
		}
		return v.StringParameters
	}).(AnalysisStringParameterArrayOutput)
}

type AnalysisPercentVisibleRange struct {
	From *float64 `pulumi:"from"`
	To   *float64 `pulumi:"to"`
}

// AnalysisPercentVisibleRangeInput is an input type that accepts AnalysisPercentVisibleRangeArgs and AnalysisPercentVisibleRangeOutput values.
// You can construct a concrete instance of `AnalysisPercentVisibleRangeInput` via:
//
//	AnalysisPercentVisibleRangeArgs{...}
type AnalysisPercentVisibleRangeInput interface {
	pulumi.Input

	ToAnalysisPercentVisibleRangeOutput() AnalysisPercentVisibleRangeOutput
	ToAnalysisPercentVisibleRangeOutputWithContext(context.Context) AnalysisPercentVisibleRangeOutput
}

type AnalysisPercentVisibleRangeArgs struct {
	From pulumi.Float64PtrInput `pulumi:"from"`
	To   pulumi.Float64PtrInput `pulumi:"to"`
}

func (AnalysisPercentVisibleRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPercentVisibleRange)(nil)).Elem()
}

func (i AnalysisPercentVisibleRangeArgs) ToAnalysisPercentVisibleRangeOutput() AnalysisPercentVisibleRangeOutput {
	return i.ToAnalysisPercentVisibleRangeOutputWithContext(context.Background())
}

func (i AnalysisPercentVisibleRangeArgs) ToAnalysisPercentVisibleRangeOutputWithContext(ctx context.Context) AnalysisPercentVisibleRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPercentVisibleRangeOutput)
}

func (i AnalysisPercentVisibleRangeArgs) ToAnalysisPercentVisibleRangePtrOutput() AnalysisPercentVisibleRangePtrOutput {
	return i.ToAnalysisPercentVisibleRangePtrOutputWithContext(context.Background())
}

func (i AnalysisPercentVisibleRangeArgs) ToAnalysisPercentVisibleRangePtrOutputWithContext(ctx context.Context) AnalysisPercentVisibleRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPercentVisibleRangeOutput).ToAnalysisPercentVisibleRangePtrOutputWithContext(ctx)
}

// AnalysisPercentVisibleRangePtrInput is an input type that accepts AnalysisPercentVisibleRangeArgs, AnalysisPercentVisibleRangePtr and AnalysisPercentVisibleRangePtrOutput values.
// You can construct a concrete instance of `AnalysisPercentVisibleRangePtrInput` via:
//
//	        AnalysisPercentVisibleRangeArgs{...}
//
//	or:
//
//	        nil
type AnalysisPercentVisibleRangePtrInput interface {
	pulumi.Input

	ToAnalysisPercentVisibleRangePtrOutput() AnalysisPercentVisibleRangePtrOutput
	ToAnalysisPercentVisibleRangePtrOutputWithContext(context.Context) AnalysisPercentVisibleRangePtrOutput
}

type analysisPercentVisibleRangePtrType AnalysisPercentVisibleRangeArgs

func AnalysisPercentVisibleRangePtr(v *AnalysisPercentVisibleRangeArgs) AnalysisPercentVisibleRangePtrInput {
	return (*analysisPercentVisibleRangePtrType)(v)
}

func (*analysisPercentVisibleRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPercentVisibleRange)(nil)).Elem()
}

func (i *analysisPercentVisibleRangePtrType) ToAnalysisPercentVisibleRangePtrOutput() AnalysisPercentVisibleRangePtrOutput {
	return i.ToAnalysisPercentVisibleRangePtrOutputWithContext(context.Background())
}

func (i *analysisPercentVisibleRangePtrType) ToAnalysisPercentVisibleRangePtrOutputWithContext(ctx context.Context) AnalysisPercentVisibleRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPercentVisibleRangePtrOutput)
}

type AnalysisPercentVisibleRangeOutput struct{ *pulumi.OutputState }

func (AnalysisPercentVisibleRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPercentVisibleRange)(nil)).Elem()
}

func (o AnalysisPercentVisibleRangeOutput) ToAnalysisPercentVisibleRangeOutput() AnalysisPercentVisibleRangeOutput {
	return o
}

func (o AnalysisPercentVisibleRangeOutput) ToAnalysisPercentVisibleRangeOutputWithContext(ctx context.Context) AnalysisPercentVisibleRangeOutput {
	return o
}

func (o AnalysisPercentVisibleRangeOutput) ToAnalysisPercentVisibleRangePtrOutput() AnalysisPercentVisibleRangePtrOutput {
	return o.ToAnalysisPercentVisibleRangePtrOutputWithContext(context.Background())
}

func (o AnalysisPercentVisibleRangeOutput) ToAnalysisPercentVisibleRangePtrOutputWithContext(ctx context.Context) AnalysisPercentVisibleRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPercentVisibleRange) *AnalysisPercentVisibleRange {
		return &v
	}).(AnalysisPercentVisibleRangePtrOutput)
}

func (o AnalysisPercentVisibleRangeOutput) From() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisPercentVisibleRange) *float64 { return v.From }).(pulumi.Float64PtrOutput)
}

func (o AnalysisPercentVisibleRangeOutput) To() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisPercentVisibleRange) *float64 { return v.To }).(pulumi.Float64PtrOutput)
}

type AnalysisPercentVisibleRangePtrOutput struct{ *pulumi.OutputState }

func (AnalysisPercentVisibleRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPercentVisibleRange)(nil)).Elem()
}

func (o AnalysisPercentVisibleRangePtrOutput) ToAnalysisPercentVisibleRangePtrOutput() AnalysisPercentVisibleRangePtrOutput {
	return o
}

func (o AnalysisPercentVisibleRangePtrOutput) ToAnalysisPercentVisibleRangePtrOutputWithContext(ctx context.Context) AnalysisPercentVisibleRangePtrOutput {
	return o
}

func (o AnalysisPercentVisibleRangePtrOutput) Elem() AnalysisPercentVisibleRangeOutput {
	return o.ApplyT(func(v *AnalysisPercentVisibleRange) AnalysisPercentVisibleRange {
		if v != nil {
			return *v
		}
		var ret AnalysisPercentVisibleRange
		return ret
	}).(AnalysisPercentVisibleRangeOutput)
}

func (o AnalysisPercentVisibleRangePtrOutput) From() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisPercentVisibleRange) *float64 {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisPercentVisibleRangePtrOutput) To() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisPercentVisibleRange) *float64 {
		if v == nil {
			return nil
		}
		return v.To
	}).(pulumi.Float64PtrOutput)
}

type AnalysisPercentageDisplayFormatConfiguration struct {
	DecimalPlacesConfiguration   *AnalysisDecimalPlacesConfiguration    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   *AnalysisNegativeValueConfiguration    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration *AnalysisNullValueFormatConfiguration  `pulumi:"nullValueFormatConfiguration"`
	Prefix                       *string                                `pulumi:"prefix"`
	SeparatorConfiguration       *AnalysisNumericSeparatorConfiguration `pulumi:"separatorConfiguration"`
	Suffix                       *string                                `pulumi:"suffix"`
}

// AnalysisPercentageDisplayFormatConfigurationInput is an input type that accepts AnalysisPercentageDisplayFormatConfigurationArgs and AnalysisPercentageDisplayFormatConfigurationOutput values.
// You can construct a concrete instance of `AnalysisPercentageDisplayFormatConfigurationInput` via:
//
//	AnalysisPercentageDisplayFormatConfigurationArgs{...}
type AnalysisPercentageDisplayFormatConfigurationInput interface {
	pulumi.Input

	ToAnalysisPercentageDisplayFormatConfigurationOutput() AnalysisPercentageDisplayFormatConfigurationOutput
	ToAnalysisPercentageDisplayFormatConfigurationOutputWithContext(context.Context) AnalysisPercentageDisplayFormatConfigurationOutput
}

type AnalysisPercentageDisplayFormatConfigurationArgs struct {
	DecimalPlacesConfiguration   AnalysisDecimalPlacesConfigurationPtrInput    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   AnalysisNegativeValueConfigurationPtrInput    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration AnalysisNullValueFormatConfigurationPtrInput  `pulumi:"nullValueFormatConfiguration"`
	Prefix                       pulumi.StringPtrInput                         `pulumi:"prefix"`
	SeparatorConfiguration       AnalysisNumericSeparatorConfigurationPtrInput `pulumi:"separatorConfiguration"`
	Suffix                       pulumi.StringPtrInput                         `pulumi:"suffix"`
}

func (AnalysisPercentageDisplayFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (i AnalysisPercentageDisplayFormatConfigurationArgs) ToAnalysisPercentageDisplayFormatConfigurationOutput() AnalysisPercentageDisplayFormatConfigurationOutput {
	return i.ToAnalysisPercentageDisplayFormatConfigurationOutputWithContext(context.Background())
}

func (i AnalysisPercentageDisplayFormatConfigurationArgs) ToAnalysisPercentageDisplayFormatConfigurationOutputWithContext(ctx context.Context) AnalysisPercentageDisplayFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPercentageDisplayFormatConfigurationOutput)
}

func (i AnalysisPercentageDisplayFormatConfigurationArgs) ToAnalysisPercentageDisplayFormatConfigurationPtrOutput() AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return i.ToAnalysisPercentageDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisPercentageDisplayFormatConfigurationArgs) ToAnalysisPercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPercentageDisplayFormatConfigurationOutput).ToAnalysisPercentageDisplayFormatConfigurationPtrOutputWithContext(ctx)
}

// AnalysisPercentageDisplayFormatConfigurationPtrInput is an input type that accepts AnalysisPercentageDisplayFormatConfigurationArgs, AnalysisPercentageDisplayFormatConfigurationPtr and AnalysisPercentageDisplayFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisPercentageDisplayFormatConfigurationPtrInput` via:
//
//	        AnalysisPercentageDisplayFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisPercentageDisplayFormatConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisPercentageDisplayFormatConfigurationPtrOutput() AnalysisPercentageDisplayFormatConfigurationPtrOutput
	ToAnalysisPercentageDisplayFormatConfigurationPtrOutputWithContext(context.Context) AnalysisPercentageDisplayFormatConfigurationPtrOutput
}

type analysisPercentageDisplayFormatConfigurationPtrType AnalysisPercentageDisplayFormatConfigurationArgs

func AnalysisPercentageDisplayFormatConfigurationPtr(v *AnalysisPercentageDisplayFormatConfigurationArgs) AnalysisPercentageDisplayFormatConfigurationPtrInput {
	return (*analysisPercentageDisplayFormatConfigurationPtrType)(v)
}

func (*analysisPercentageDisplayFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (i *analysisPercentageDisplayFormatConfigurationPtrType) ToAnalysisPercentageDisplayFormatConfigurationPtrOutput() AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return i.ToAnalysisPercentageDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisPercentageDisplayFormatConfigurationPtrType) ToAnalysisPercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPercentageDisplayFormatConfigurationPtrOutput)
}

type AnalysisPercentageDisplayFormatConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisPercentageDisplayFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (o AnalysisPercentageDisplayFormatConfigurationOutput) ToAnalysisPercentageDisplayFormatConfigurationOutput() AnalysisPercentageDisplayFormatConfigurationOutput {
	return o
}

func (o AnalysisPercentageDisplayFormatConfigurationOutput) ToAnalysisPercentageDisplayFormatConfigurationOutputWithContext(ctx context.Context) AnalysisPercentageDisplayFormatConfigurationOutput {
	return o
}

func (o AnalysisPercentageDisplayFormatConfigurationOutput) ToAnalysisPercentageDisplayFormatConfigurationPtrOutput() AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return o.ToAnalysisPercentageDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisPercentageDisplayFormatConfigurationOutput) ToAnalysisPercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPercentageDisplayFormatConfiguration) *AnalysisPercentageDisplayFormatConfiguration {
		return &v
	}).(AnalysisPercentageDisplayFormatConfigurationPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationOutput) DecimalPlacesConfiguration() AnalysisDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPercentageDisplayFormatConfiguration) *AnalysisDecimalPlacesConfiguration {
		return v.DecimalPlacesConfiguration
	}).(AnalysisDecimalPlacesConfigurationPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationOutput) NegativeValueConfiguration() AnalysisNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPercentageDisplayFormatConfiguration) *AnalysisNegativeValueConfiguration {
		return v.NegativeValueConfiguration
	}).(AnalysisNegativeValueConfigurationPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationOutput) NullValueFormatConfiguration() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPercentageDisplayFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPercentageDisplayFormatConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationOutput) SeparatorConfiguration() AnalysisNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPercentageDisplayFormatConfiguration) *AnalysisNumericSeparatorConfiguration {
		return v.SeparatorConfiguration
	}).(AnalysisNumericSeparatorConfigurationPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPercentageDisplayFormatConfiguration) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type AnalysisPercentageDisplayFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPercentageDisplayFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (o AnalysisPercentageDisplayFormatConfigurationPtrOutput) ToAnalysisPercentageDisplayFormatConfigurationPtrOutput() AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisPercentageDisplayFormatConfigurationPtrOutput) ToAnalysisPercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPercentageDisplayFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisPercentageDisplayFormatConfigurationPtrOutput) Elem() AnalysisPercentageDisplayFormatConfigurationOutput {
	return o.ApplyT(func(v *AnalysisPercentageDisplayFormatConfiguration) AnalysisPercentageDisplayFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisPercentageDisplayFormatConfiguration
		return ret
	}).(AnalysisPercentageDisplayFormatConfigurationOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationPtrOutput) DecimalPlacesConfiguration() AnalysisDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPercentageDisplayFormatConfiguration) *AnalysisDecimalPlacesConfiguration {
		if v == nil {
			return nil
		}
		return v.DecimalPlacesConfiguration
	}).(AnalysisDecimalPlacesConfigurationPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationPtrOutput) NegativeValueConfiguration() AnalysisNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPercentageDisplayFormatConfiguration) *AnalysisNegativeValueConfiguration {
		if v == nil {
			return nil
		}
		return v.NegativeValueConfiguration
	}).(AnalysisNegativeValueConfigurationPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationPtrOutput) NullValueFormatConfiguration() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPercentageDisplayFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPercentageDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationPtrOutput) SeparatorConfiguration() AnalysisNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPercentageDisplayFormatConfiguration) *AnalysisNumericSeparatorConfiguration {
		if v == nil {
			return nil
		}
		return v.SeparatorConfiguration
	}).(AnalysisNumericSeparatorConfigurationPtrOutput)
}

func (o AnalysisPercentageDisplayFormatConfigurationPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPercentageDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type AnalysisPercentileAggregation struct {
	PercentileValue *float64 `pulumi:"percentileValue"`
}

// AnalysisPercentileAggregationInput is an input type that accepts AnalysisPercentileAggregationArgs and AnalysisPercentileAggregationOutput values.
// You can construct a concrete instance of `AnalysisPercentileAggregationInput` via:
//
//	AnalysisPercentileAggregationArgs{...}
type AnalysisPercentileAggregationInput interface {
	pulumi.Input

	ToAnalysisPercentileAggregationOutput() AnalysisPercentileAggregationOutput
	ToAnalysisPercentileAggregationOutputWithContext(context.Context) AnalysisPercentileAggregationOutput
}

type AnalysisPercentileAggregationArgs struct {
	PercentileValue pulumi.Float64PtrInput `pulumi:"percentileValue"`
}

func (AnalysisPercentileAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPercentileAggregation)(nil)).Elem()
}

func (i AnalysisPercentileAggregationArgs) ToAnalysisPercentileAggregationOutput() AnalysisPercentileAggregationOutput {
	return i.ToAnalysisPercentileAggregationOutputWithContext(context.Background())
}

func (i AnalysisPercentileAggregationArgs) ToAnalysisPercentileAggregationOutputWithContext(ctx context.Context) AnalysisPercentileAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPercentileAggregationOutput)
}

func (i AnalysisPercentileAggregationArgs) ToAnalysisPercentileAggregationPtrOutput() AnalysisPercentileAggregationPtrOutput {
	return i.ToAnalysisPercentileAggregationPtrOutputWithContext(context.Background())
}

func (i AnalysisPercentileAggregationArgs) ToAnalysisPercentileAggregationPtrOutputWithContext(ctx context.Context) AnalysisPercentileAggregationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPercentileAggregationOutput).ToAnalysisPercentileAggregationPtrOutputWithContext(ctx)
}

// AnalysisPercentileAggregationPtrInput is an input type that accepts AnalysisPercentileAggregationArgs, AnalysisPercentileAggregationPtr and AnalysisPercentileAggregationPtrOutput values.
// You can construct a concrete instance of `AnalysisPercentileAggregationPtrInput` via:
//
//	        AnalysisPercentileAggregationArgs{...}
//
//	or:
//
//	        nil
type AnalysisPercentileAggregationPtrInput interface {
	pulumi.Input

	ToAnalysisPercentileAggregationPtrOutput() AnalysisPercentileAggregationPtrOutput
	ToAnalysisPercentileAggregationPtrOutputWithContext(context.Context) AnalysisPercentileAggregationPtrOutput
}

type analysisPercentileAggregationPtrType AnalysisPercentileAggregationArgs

func AnalysisPercentileAggregationPtr(v *AnalysisPercentileAggregationArgs) AnalysisPercentileAggregationPtrInput {
	return (*analysisPercentileAggregationPtrType)(v)
}

func (*analysisPercentileAggregationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPercentileAggregation)(nil)).Elem()
}

func (i *analysisPercentileAggregationPtrType) ToAnalysisPercentileAggregationPtrOutput() AnalysisPercentileAggregationPtrOutput {
	return i.ToAnalysisPercentileAggregationPtrOutputWithContext(context.Background())
}

func (i *analysisPercentileAggregationPtrType) ToAnalysisPercentileAggregationPtrOutputWithContext(ctx context.Context) AnalysisPercentileAggregationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPercentileAggregationPtrOutput)
}

type AnalysisPercentileAggregationOutput struct{ *pulumi.OutputState }

func (AnalysisPercentileAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPercentileAggregation)(nil)).Elem()
}

func (o AnalysisPercentileAggregationOutput) ToAnalysisPercentileAggregationOutput() AnalysisPercentileAggregationOutput {
	return o
}

func (o AnalysisPercentileAggregationOutput) ToAnalysisPercentileAggregationOutputWithContext(ctx context.Context) AnalysisPercentileAggregationOutput {
	return o
}

func (o AnalysisPercentileAggregationOutput) ToAnalysisPercentileAggregationPtrOutput() AnalysisPercentileAggregationPtrOutput {
	return o.ToAnalysisPercentileAggregationPtrOutputWithContext(context.Background())
}

func (o AnalysisPercentileAggregationOutput) ToAnalysisPercentileAggregationPtrOutputWithContext(ctx context.Context) AnalysisPercentileAggregationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPercentileAggregation) *AnalysisPercentileAggregation {
		return &v
	}).(AnalysisPercentileAggregationPtrOutput)
}

func (o AnalysisPercentileAggregationOutput) PercentileValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisPercentileAggregation) *float64 { return v.PercentileValue }).(pulumi.Float64PtrOutput)
}

type AnalysisPercentileAggregationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPercentileAggregationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPercentileAggregation)(nil)).Elem()
}

func (o AnalysisPercentileAggregationPtrOutput) ToAnalysisPercentileAggregationPtrOutput() AnalysisPercentileAggregationPtrOutput {
	return o
}

func (o AnalysisPercentileAggregationPtrOutput) ToAnalysisPercentileAggregationPtrOutputWithContext(ctx context.Context) AnalysisPercentileAggregationPtrOutput {
	return o
}

func (o AnalysisPercentileAggregationPtrOutput) Elem() AnalysisPercentileAggregationOutput {
	return o.ApplyT(func(v *AnalysisPercentileAggregation) AnalysisPercentileAggregation {
		if v != nil {
			return *v
		}
		var ret AnalysisPercentileAggregation
		return ret
	}).(AnalysisPercentileAggregationOutput)
}

func (o AnalysisPercentileAggregationPtrOutput) PercentileValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisPercentileAggregation) *float64 {
		if v == nil {
			return nil
		}
		return v.PercentileValue
	}).(pulumi.Float64PtrOutput)
}

type AnalysisPeriodOverPeriodComputation struct {
	ComputationId string                 `pulumi:"computationId"`
	Name          *string                `pulumi:"name"`
	Time          AnalysisDimensionField `pulumi:"time"`
	Value         *AnalysisMeasureField  `pulumi:"value"`
}

// AnalysisPeriodOverPeriodComputationInput is an input type that accepts AnalysisPeriodOverPeriodComputationArgs and AnalysisPeriodOverPeriodComputationOutput values.
// You can construct a concrete instance of `AnalysisPeriodOverPeriodComputationInput` via:
//
//	AnalysisPeriodOverPeriodComputationArgs{...}
type AnalysisPeriodOverPeriodComputationInput interface {
	pulumi.Input

	ToAnalysisPeriodOverPeriodComputationOutput() AnalysisPeriodOverPeriodComputationOutput
	ToAnalysisPeriodOverPeriodComputationOutputWithContext(context.Context) AnalysisPeriodOverPeriodComputationOutput
}

type AnalysisPeriodOverPeriodComputationArgs struct {
	ComputationId pulumi.StringInput           `pulumi:"computationId"`
	Name          pulumi.StringPtrInput        `pulumi:"name"`
	Time          AnalysisDimensionFieldInput  `pulumi:"time"`
	Value         AnalysisMeasureFieldPtrInput `pulumi:"value"`
}

func (AnalysisPeriodOverPeriodComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPeriodOverPeriodComputation)(nil)).Elem()
}

func (i AnalysisPeriodOverPeriodComputationArgs) ToAnalysisPeriodOverPeriodComputationOutput() AnalysisPeriodOverPeriodComputationOutput {
	return i.ToAnalysisPeriodOverPeriodComputationOutputWithContext(context.Background())
}

func (i AnalysisPeriodOverPeriodComputationArgs) ToAnalysisPeriodOverPeriodComputationOutputWithContext(ctx context.Context) AnalysisPeriodOverPeriodComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPeriodOverPeriodComputationOutput)
}

func (i AnalysisPeriodOverPeriodComputationArgs) ToAnalysisPeriodOverPeriodComputationPtrOutput() AnalysisPeriodOverPeriodComputationPtrOutput {
	return i.ToAnalysisPeriodOverPeriodComputationPtrOutputWithContext(context.Background())
}

func (i AnalysisPeriodOverPeriodComputationArgs) ToAnalysisPeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) AnalysisPeriodOverPeriodComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPeriodOverPeriodComputationOutput).ToAnalysisPeriodOverPeriodComputationPtrOutputWithContext(ctx)
}

// AnalysisPeriodOverPeriodComputationPtrInput is an input type that accepts AnalysisPeriodOverPeriodComputationArgs, AnalysisPeriodOverPeriodComputationPtr and AnalysisPeriodOverPeriodComputationPtrOutput values.
// You can construct a concrete instance of `AnalysisPeriodOverPeriodComputationPtrInput` via:
//
//	        AnalysisPeriodOverPeriodComputationArgs{...}
//
//	or:
//
//	        nil
type AnalysisPeriodOverPeriodComputationPtrInput interface {
	pulumi.Input

	ToAnalysisPeriodOverPeriodComputationPtrOutput() AnalysisPeriodOverPeriodComputationPtrOutput
	ToAnalysisPeriodOverPeriodComputationPtrOutputWithContext(context.Context) AnalysisPeriodOverPeriodComputationPtrOutput
}

type analysisPeriodOverPeriodComputationPtrType AnalysisPeriodOverPeriodComputationArgs

func AnalysisPeriodOverPeriodComputationPtr(v *AnalysisPeriodOverPeriodComputationArgs) AnalysisPeriodOverPeriodComputationPtrInput {
	return (*analysisPeriodOverPeriodComputationPtrType)(v)
}

func (*analysisPeriodOverPeriodComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPeriodOverPeriodComputation)(nil)).Elem()
}

func (i *analysisPeriodOverPeriodComputationPtrType) ToAnalysisPeriodOverPeriodComputationPtrOutput() AnalysisPeriodOverPeriodComputationPtrOutput {
	return i.ToAnalysisPeriodOverPeriodComputationPtrOutputWithContext(context.Background())
}

func (i *analysisPeriodOverPeriodComputationPtrType) ToAnalysisPeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) AnalysisPeriodOverPeriodComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPeriodOverPeriodComputationPtrOutput)
}

type AnalysisPeriodOverPeriodComputationOutput struct{ *pulumi.OutputState }

func (AnalysisPeriodOverPeriodComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPeriodOverPeriodComputation)(nil)).Elem()
}

func (o AnalysisPeriodOverPeriodComputationOutput) ToAnalysisPeriodOverPeriodComputationOutput() AnalysisPeriodOverPeriodComputationOutput {
	return o
}

func (o AnalysisPeriodOverPeriodComputationOutput) ToAnalysisPeriodOverPeriodComputationOutputWithContext(ctx context.Context) AnalysisPeriodOverPeriodComputationOutput {
	return o
}

func (o AnalysisPeriodOverPeriodComputationOutput) ToAnalysisPeriodOverPeriodComputationPtrOutput() AnalysisPeriodOverPeriodComputationPtrOutput {
	return o.ToAnalysisPeriodOverPeriodComputationPtrOutputWithContext(context.Background())
}

func (o AnalysisPeriodOverPeriodComputationOutput) ToAnalysisPeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) AnalysisPeriodOverPeriodComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPeriodOverPeriodComputation) *AnalysisPeriodOverPeriodComputation {
		return &v
	}).(AnalysisPeriodOverPeriodComputationPtrOutput)
}

func (o AnalysisPeriodOverPeriodComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisPeriodOverPeriodComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o AnalysisPeriodOverPeriodComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPeriodOverPeriodComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisPeriodOverPeriodComputationOutput) Time() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v AnalysisPeriodOverPeriodComputation) AnalysisDimensionField { return v.Time }).(AnalysisDimensionFieldOutput)
}

func (o AnalysisPeriodOverPeriodComputationOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisPeriodOverPeriodComputation) *AnalysisMeasureField { return v.Value }).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisPeriodOverPeriodComputationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPeriodOverPeriodComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPeriodOverPeriodComputation)(nil)).Elem()
}

func (o AnalysisPeriodOverPeriodComputationPtrOutput) ToAnalysisPeriodOverPeriodComputationPtrOutput() AnalysisPeriodOverPeriodComputationPtrOutput {
	return o
}

func (o AnalysisPeriodOverPeriodComputationPtrOutput) ToAnalysisPeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) AnalysisPeriodOverPeriodComputationPtrOutput {
	return o
}

func (o AnalysisPeriodOverPeriodComputationPtrOutput) Elem() AnalysisPeriodOverPeriodComputationOutput {
	return o.ApplyT(func(v *AnalysisPeriodOverPeriodComputation) AnalysisPeriodOverPeriodComputation {
		if v != nil {
			return *v
		}
		var ret AnalysisPeriodOverPeriodComputation
		return ret
	}).(AnalysisPeriodOverPeriodComputationOutput)
}

func (o AnalysisPeriodOverPeriodComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPeriodOverPeriodComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPeriodOverPeriodComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPeriodOverPeriodComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPeriodOverPeriodComputationPtrOutput) Time() AnalysisDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisPeriodOverPeriodComputation) *AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(AnalysisDimensionFieldPtrOutput)
}

func (o AnalysisPeriodOverPeriodComputationPtrOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisPeriodOverPeriodComputation) *AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisPeriodToDateComputation struct {
	ComputationId         string                   `pulumi:"computationId"`
	Name                  *string                  `pulumi:"name"`
	PeriodTimeGranularity *AnalysisTimeGranularity `pulumi:"periodTimeGranularity"`
	Time                  AnalysisDimensionField   `pulumi:"time"`
	Value                 *AnalysisMeasureField    `pulumi:"value"`
}

// AnalysisPeriodToDateComputationInput is an input type that accepts AnalysisPeriodToDateComputationArgs and AnalysisPeriodToDateComputationOutput values.
// You can construct a concrete instance of `AnalysisPeriodToDateComputationInput` via:
//
//	AnalysisPeriodToDateComputationArgs{...}
type AnalysisPeriodToDateComputationInput interface {
	pulumi.Input

	ToAnalysisPeriodToDateComputationOutput() AnalysisPeriodToDateComputationOutput
	ToAnalysisPeriodToDateComputationOutputWithContext(context.Context) AnalysisPeriodToDateComputationOutput
}

type AnalysisPeriodToDateComputationArgs struct {
	ComputationId         pulumi.StringInput              `pulumi:"computationId"`
	Name                  pulumi.StringPtrInput           `pulumi:"name"`
	PeriodTimeGranularity AnalysisTimeGranularityPtrInput `pulumi:"periodTimeGranularity"`
	Time                  AnalysisDimensionFieldInput     `pulumi:"time"`
	Value                 AnalysisMeasureFieldPtrInput    `pulumi:"value"`
}

func (AnalysisPeriodToDateComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPeriodToDateComputation)(nil)).Elem()
}

func (i AnalysisPeriodToDateComputationArgs) ToAnalysisPeriodToDateComputationOutput() AnalysisPeriodToDateComputationOutput {
	return i.ToAnalysisPeriodToDateComputationOutputWithContext(context.Background())
}

func (i AnalysisPeriodToDateComputationArgs) ToAnalysisPeriodToDateComputationOutputWithContext(ctx context.Context) AnalysisPeriodToDateComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPeriodToDateComputationOutput)
}

func (i AnalysisPeriodToDateComputationArgs) ToAnalysisPeriodToDateComputationPtrOutput() AnalysisPeriodToDateComputationPtrOutput {
	return i.ToAnalysisPeriodToDateComputationPtrOutputWithContext(context.Background())
}

func (i AnalysisPeriodToDateComputationArgs) ToAnalysisPeriodToDateComputationPtrOutputWithContext(ctx context.Context) AnalysisPeriodToDateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPeriodToDateComputationOutput).ToAnalysisPeriodToDateComputationPtrOutputWithContext(ctx)
}

// AnalysisPeriodToDateComputationPtrInput is an input type that accepts AnalysisPeriodToDateComputationArgs, AnalysisPeriodToDateComputationPtr and AnalysisPeriodToDateComputationPtrOutput values.
// You can construct a concrete instance of `AnalysisPeriodToDateComputationPtrInput` via:
//
//	        AnalysisPeriodToDateComputationArgs{...}
//
//	or:
//
//	        nil
type AnalysisPeriodToDateComputationPtrInput interface {
	pulumi.Input

	ToAnalysisPeriodToDateComputationPtrOutput() AnalysisPeriodToDateComputationPtrOutput
	ToAnalysisPeriodToDateComputationPtrOutputWithContext(context.Context) AnalysisPeriodToDateComputationPtrOutput
}

type analysisPeriodToDateComputationPtrType AnalysisPeriodToDateComputationArgs

func AnalysisPeriodToDateComputationPtr(v *AnalysisPeriodToDateComputationArgs) AnalysisPeriodToDateComputationPtrInput {
	return (*analysisPeriodToDateComputationPtrType)(v)
}

func (*analysisPeriodToDateComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPeriodToDateComputation)(nil)).Elem()
}

func (i *analysisPeriodToDateComputationPtrType) ToAnalysisPeriodToDateComputationPtrOutput() AnalysisPeriodToDateComputationPtrOutput {
	return i.ToAnalysisPeriodToDateComputationPtrOutputWithContext(context.Background())
}

func (i *analysisPeriodToDateComputationPtrType) ToAnalysisPeriodToDateComputationPtrOutputWithContext(ctx context.Context) AnalysisPeriodToDateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPeriodToDateComputationPtrOutput)
}

type AnalysisPeriodToDateComputationOutput struct{ *pulumi.OutputState }

func (AnalysisPeriodToDateComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPeriodToDateComputation)(nil)).Elem()
}

func (o AnalysisPeriodToDateComputationOutput) ToAnalysisPeriodToDateComputationOutput() AnalysisPeriodToDateComputationOutput {
	return o
}

func (o AnalysisPeriodToDateComputationOutput) ToAnalysisPeriodToDateComputationOutputWithContext(ctx context.Context) AnalysisPeriodToDateComputationOutput {
	return o
}

func (o AnalysisPeriodToDateComputationOutput) ToAnalysisPeriodToDateComputationPtrOutput() AnalysisPeriodToDateComputationPtrOutput {
	return o.ToAnalysisPeriodToDateComputationPtrOutputWithContext(context.Background())
}

func (o AnalysisPeriodToDateComputationOutput) ToAnalysisPeriodToDateComputationPtrOutputWithContext(ctx context.Context) AnalysisPeriodToDateComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPeriodToDateComputation) *AnalysisPeriodToDateComputation {
		return &v
	}).(AnalysisPeriodToDateComputationPtrOutput)
}

func (o AnalysisPeriodToDateComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisPeriodToDateComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o AnalysisPeriodToDateComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPeriodToDateComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisPeriodToDateComputationOutput) PeriodTimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v AnalysisPeriodToDateComputation) *AnalysisTimeGranularity { return v.PeriodTimeGranularity }).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisPeriodToDateComputationOutput) Time() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v AnalysisPeriodToDateComputation) AnalysisDimensionField { return v.Time }).(AnalysisDimensionFieldOutput)
}

func (o AnalysisPeriodToDateComputationOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisPeriodToDateComputation) *AnalysisMeasureField { return v.Value }).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisPeriodToDateComputationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPeriodToDateComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPeriodToDateComputation)(nil)).Elem()
}

func (o AnalysisPeriodToDateComputationPtrOutput) ToAnalysisPeriodToDateComputationPtrOutput() AnalysisPeriodToDateComputationPtrOutput {
	return o
}

func (o AnalysisPeriodToDateComputationPtrOutput) ToAnalysisPeriodToDateComputationPtrOutputWithContext(ctx context.Context) AnalysisPeriodToDateComputationPtrOutput {
	return o
}

func (o AnalysisPeriodToDateComputationPtrOutput) Elem() AnalysisPeriodToDateComputationOutput {
	return o.ApplyT(func(v *AnalysisPeriodToDateComputation) AnalysisPeriodToDateComputation {
		if v != nil {
			return *v
		}
		var ret AnalysisPeriodToDateComputation
		return ret
	}).(AnalysisPeriodToDateComputationOutput)
}

func (o AnalysisPeriodToDateComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPeriodToDateComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPeriodToDateComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPeriodToDateComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPeriodToDateComputationPtrOutput) PeriodTimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v *AnalysisPeriodToDateComputation) *AnalysisTimeGranularity {
		if v == nil {
			return nil
		}
		return v.PeriodTimeGranularity
	}).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisPeriodToDateComputationPtrOutput) Time() AnalysisDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisPeriodToDateComputation) *AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(AnalysisDimensionFieldPtrOutput)
}

func (o AnalysisPeriodToDateComputationPtrOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisPeriodToDateComputation) *AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisPieChartAggregatedFieldWells struct {
	Category       []AnalysisDimensionField `pulumi:"category"`
	SmallMultiples []AnalysisDimensionField `pulumi:"smallMultiples"`
	Values         []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisPieChartAggregatedFieldWellsInput is an input type that accepts AnalysisPieChartAggregatedFieldWellsArgs and AnalysisPieChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisPieChartAggregatedFieldWellsInput` via:
//
//	AnalysisPieChartAggregatedFieldWellsArgs{...}
type AnalysisPieChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisPieChartAggregatedFieldWellsOutput() AnalysisPieChartAggregatedFieldWellsOutput
	ToAnalysisPieChartAggregatedFieldWellsOutputWithContext(context.Context) AnalysisPieChartAggregatedFieldWellsOutput
}

type AnalysisPieChartAggregatedFieldWellsArgs struct {
	Category       AnalysisDimensionFieldArrayInput `pulumi:"category"`
	SmallMultiples AnalysisDimensionFieldArrayInput `pulumi:"smallMultiples"`
	Values         AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisPieChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPieChartAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisPieChartAggregatedFieldWellsArgs) ToAnalysisPieChartAggregatedFieldWellsOutput() AnalysisPieChartAggregatedFieldWellsOutput {
	return i.ToAnalysisPieChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisPieChartAggregatedFieldWellsArgs) ToAnalysisPieChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisPieChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartAggregatedFieldWellsOutput)
}

func (i AnalysisPieChartAggregatedFieldWellsArgs) ToAnalysisPieChartAggregatedFieldWellsPtrOutput() AnalysisPieChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisPieChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisPieChartAggregatedFieldWellsArgs) ToAnalysisPieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPieChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartAggregatedFieldWellsOutput).ToAnalysisPieChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisPieChartAggregatedFieldWellsPtrInput is an input type that accepts AnalysisPieChartAggregatedFieldWellsArgs, AnalysisPieChartAggregatedFieldWellsPtr and AnalysisPieChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisPieChartAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisPieChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisPieChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisPieChartAggregatedFieldWellsPtrOutput() AnalysisPieChartAggregatedFieldWellsPtrOutput
	ToAnalysisPieChartAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisPieChartAggregatedFieldWellsPtrOutput
}

type analysisPieChartAggregatedFieldWellsPtrType AnalysisPieChartAggregatedFieldWellsArgs

func AnalysisPieChartAggregatedFieldWellsPtr(v *AnalysisPieChartAggregatedFieldWellsArgs) AnalysisPieChartAggregatedFieldWellsPtrInput {
	return (*analysisPieChartAggregatedFieldWellsPtrType)(v)
}

func (*analysisPieChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPieChartAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisPieChartAggregatedFieldWellsPtrType) ToAnalysisPieChartAggregatedFieldWellsPtrOutput() AnalysisPieChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisPieChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisPieChartAggregatedFieldWellsPtrType) ToAnalysisPieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPieChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartAggregatedFieldWellsPtrOutput)
}

type AnalysisPieChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisPieChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPieChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisPieChartAggregatedFieldWellsOutput) ToAnalysisPieChartAggregatedFieldWellsOutput() AnalysisPieChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisPieChartAggregatedFieldWellsOutput) ToAnalysisPieChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisPieChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisPieChartAggregatedFieldWellsOutput) ToAnalysisPieChartAggregatedFieldWellsPtrOutput() AnalysisPieChartAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisPieChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisPieChartAggregatedFieldWellsOutput) ToAnalysisPieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPieChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPieChartAggregatedFieldWells) *AnalysisPieChartAggregatedFieldWells {
		return &v
	}).(AnalysisPieChartAggregatedFieldWellsPtrOutput)
}

func (o AnalysisPieChartAggregatedFieldWellsOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisPieChartAggregatedFieldWells) []AnalysisDimensionField { return v.Category }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisPieChartAggregatedFieldWellsOutput) SmallMultiples() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisPieChartAggregatedFieldWells) []AnalysisDimensionField { return v.SmallMultiples }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisPieChartAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisPieChartAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisPieChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPieChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPieChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisPieChartAggregatedFieldWellsPtrOutput) ToAnalysisPieChartAggregatedFieldWellsPtrOutput() AnalysisPieChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisPieChartAggregatedFieldWellsPtrOutput) ToAnalysisPieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPieChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisPieChartAggregatedFieldWellsPtrOutput) Elem() AnalysisPieChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisPieChartAggregatedFieldWells) AnalysisPieChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisPieChartAggregatedFieldWells
		return ret
	}).(AnalysisPieChartAggregatedFieldWellsOutput)
}

func (o AnalysisPieChartAggregatedFieldWellsPtrOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisPieChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisPieChartAggregatedFieldWellsPtrOutput) SmallMultiples() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisPieChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.SmallMultiples
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisPieChartAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisPieChartAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisPieChartConfiguration struct {
	CategoryLabelOptions         *AnalysisChartAxisLabelOptions        `pulumi:"categoryLabelOptions"`
	ContributionAnalysisDefaults []AnalysisContributionAnalysisDefault `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   *AnalysisDataLabelOptions             `pulumi:"dataLabels"`
	DonutOptions                 *AnalysisDonutOptions                 `pulumi:"donutOptions"`
	FieldWells                   *AnalysisPieChartFieldWells           `pulumi:"fieldWells"`
	Legend                       *AnalysisLegendOptions                `pulumi:"legend"`
	SmallMultiplesOptions        *AnalysisSmallMultiplesOptions        `pulumi:"smallMultiplesOptions"`
	SortConfiguration            *AnalysisPieChartSortConfiguration    `pulumi:"sortConfiguration"`
	Tooltip                      *AnalysisTooltipOptions               `pulumi:"tooltip"`
	ValueLabelOptions            *AnalysisChartAxisLabelOptions        `pulumi:"valueLabelOptions"`
	VisualPalette                *AnalysisVisualPalette                `pulumi:"visualPalette"`
}

// AnalysisPieChartConfigurationInput is an input type that accepts AnalysisPieChartConfigurationArgs and AnalysisPieChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisPieChartConfigurationInput` via:
//
//	AnalysisPieChartConfigurationArgs{...}
type AnalysisPieChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisPieChartConfigurationOutput() AnalysisPieChartConfigurationOutput
	ToAnalysisPieChartConfigurationOutputWithContext(context.Context) AnalysisPieChartConfigurationOutput
}

type AnalysisPieChartConfigurationArgs struct {
	CategoryLabelOptions         AnalysisChartAxisLabelOptionsPtrInput         `pulumi:"categoryLabelOptions"`
	ContributionAnalysisDefaults AnalysisContributionAnalysisDefaultArrayInput `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   AnalysisDataLabelOptionsPtrInput              `pulumi:"dataLabels"`
	DonutOptions                 AnalysisDonutOptionsPtrInput                  `pulumi:"donutOptions"`
	FieldWells                   AnalysisPieChartFieldWellsPtrInput            `pulumi:"fieldWells"`
	Legend                       AnalysisLegendOptionsPtrInput                 `pulumi:"legend"`
	SmallMultiplesOptions        AnalysisSmallMultiplesOptionsPtrInput         `pulumi:"smallMultiplesOptions"`
	SortConfiguration            AnalysisPieChartSortConfigurationPtrInput     `pulumi:"sortConfiguration"`
	Tooltip                      AnalysisTooltipOptionsPtrInput                `pulumi:"tooltip"`
	ValueLabelOptions            AnalysisChartAxisLabelOptionsPtrInput         `pulumi:"valueLabelOptions"`
	VisualPalette                AnalysisVisualPalettePtrInput                 `pulumi:"visualPalette"`
}

func (AnalysisPieChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPieChartConfiguration)(nil)).Elem()
}

func (i AnalysisPieChartConfigurationArgs) ToAnalysisPieChartConfigurationOutput() AnalysisPieChartConfigurationOutput {
	return i.ToAnalysisPieChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisPieChartConfigurationArgs) ToAnalysisPieChartConfigurationOutputWithContext(ctx context.Context) AnalysisPieChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartConfigurationOutput)
}

func (i AnalysisPieChartConfigurationArgs) ToAnalysisPieChartConfigurationPtrOutput() AnalysisPieChartConfigurationPtrOutput {
	return i.ToAnalysisPieChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisPieChartConfigurationArgs) ToAnalysisPieChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPieChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartConfigurationOutput).ToAnalysisPieChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisPieChartConfigurationPtrInput is an input type that accepts AnalysisPieChartConfigurationArgs, AnalysisPieChartConfigurationPtr and AnalysisPieChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisPieChartConfigurationPtrInput` via:
//
//	        AnalysisPieChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisPieChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisPieChartConfigurationPtrOutput() AnalysisPieChartConfigurationPtrOutput
	ToAnalysisPieChartConfigurationPtrOutputWithContext(context.Context) AnalysisPieChartConfigurationPtrOutput
}

type analysisPieChartConfigurationPtrType AnalysisPieChartConfigurationArgs

func AnalysisPieChartConfigurationPtr(v *AnalysisPieChartConfigurationArgs) AnalysisPieChartConfigurationPtrInput {
	return (*analysisPieChartConfigurationPtrType)(v)
}

func (*analysisPieChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPieChartConfiguration)(nil)).Elem()
}

func (i *analysisPieChartConfigurationPtrType) ToAnalysisPieChartConfigurationPtrOutput() AnalysisPieChartConfigurationPtrOutput {
	return i.ToAnalysisPieChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisPieChartConfigurationPtrType) ToAnalysisPieChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPieChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartConfigurationPtrOutput)
}

type AnalysisPieChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisPieChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPieChartConfiguration)(nil)).Elem()
}

func (o AnalysisPieChartConfigurationOutput) ToAnalysisPieChartConfigurationOutput() AnalysisPieChartConfigurationOutput {
	return o
}

func (o AnalysisPieChartConfigurationOutput) ToAnalysisPieChartConfigurationOutputWithContext(ctx context.Context) AnalysisPieChartConfigurationOutput {
	return o
}

func (o AnalysisPieChartConfigurationOutput) ToAnalysisPieChartConfigurationPtrOutput() AnalysisPieChartConfigurationPtrOutput {
	return o.ToAnalysisPieChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisPieChartConfigurationOutput) ToAnalysisPieChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPieChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPieChartConfiguration) *AnalysisPieChartConfiguration {
		return &v
	}).(AnalysisPieChartConfigurationPtrOutput)
}

func (o AnalysisPieChartConfigurationOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) *AnalysisChartAxisLabelOptions { return v.CategoryLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationOutput) ContributionAnalysisDefaults() AnalysisContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) []AnalysisContributionAnalysisDefault {
		return v.ContributionAnalysisDefaults
	}).(AnalysisContributionAnalysisDefaultArrayOutput)
}

func (o AnalysisPieChartConfigurationOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) *AnalysisDataLabelOptions { return v.DataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationOutput) DonutOptions() AnalysisDonutOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) *AnalysisDonutOptions { return v.DonutOptions }).(AnalysisDonutOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationOutput) FieldWells() AnalysisPieChartFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) *AnalysisPieChartFieldWells { return v.FieldWells }).(AnalysisPieChartFieldWellsPtrOutput)
}

func (o AnalysisPieChartConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationOutput) SmallMultiplesOptions() AnalysisSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) *AnalysisSmallMultiplesOptions { return v.SmallMultiplesOptions }).(AnalysisSmallMultiplesOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationOutput) SortConfiguration() AnalysisPieChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) *AnalysisPieChartSortConfiguration { return v.SortConfiguration }).(AnalysisPieChartSortConfigurationPtrOutput)
}

func (o AnalysisPieChartConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationOutput) ValueLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) *AnalysisChartAxisLabelOptions { return v.ValueLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisPieChartConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

type AnalysisPieChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPieChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPieChartConfiguration)(nil)).Elem()
}

func (o AnalysisPieChartConfigurationPtrOutput) ToAnalysisPieChartConfigurationPtrOutput() AnalysisPieChartConfigurationPtrOutput {
	return o
}

func (o AnalysisPieChartConfigurationPtrOutput) ToAnalysisPieChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPieChartConfigurationPtrOutput {
	return o
}

func (o AnalysisPieChartConfigurationPtrOutput) Elem() AnalysisPieChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) AnalysisPieChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisPieChartConfiguration
		return ret
	}).(AnalysisPieChartConfigurationOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) ContributionAnalysisDefaults() AnalysisContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) []AnalysisContributionAnalysisDefault {
		if v == nil {
			return nil
		}
		return v.ContributionAnalysisDefaults
	}).(AnalysisContributionAnalysisDefaultArrayOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) DonutOptions() AnalysisDonutOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) *AnalysisDonutOptions {
		if v == nil {
			return nil
		}
		return v.DonutOptions
	}).(AnalysisDonutOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) FieldWells() AnalysisPieChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) *AnalysisPieChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisPieChartFieldWellsPtrOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) SmallMultiplesOptions() AnalysisSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) *AnalysisSmallMultiplesOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesOptions
	}).(AnalysisSmallMultiplesOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) SortConfiguration() AnalysisPieChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) *AnalysisPieChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisPieChartSortConfigurationPtrOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) ValueLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ValueLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisPieChartConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

type AnalysisPieChartFieldWells struct {
	PieChartAggregatedFieldWells *AnalysisPieChartAggregatedFieldWells `pulumi:"pieChartAggregatedFieldWells"`
}

// AnalysisPieChartFieldWellsInput is an input type that accepts AnalysisPieChartFieldWellsArgs and AnalysisPieChartFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisPieChartFieldWellsInput` via:
//
//	AnalysisPieChartFieldWellsArgs{...}
type AnalysisPieChartFieldWellsInput interface {
	pulumi.Input

	ToAnalysisPieChartFieldWellsOutput() AnalysisPieChartFieldWellsOutput
	ToAnalysisPieChartFieldWellsOutputWithContext(context.Context) AnalysisPieChartFieldWellsOutput
}

type AnalysisPieChartFieldWellsArgs struct {
	PieChartAggregatedFieldWells AnalysisPieChartAggregatedFieldWellsPtrInput `pulumi:"pieChartAggregatedFieldWells"`
}

func (AnalysisPieChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPieChartFieldWells)(nil)).Elem()
}

func (i AnalysisPieChartFieldWellsArgs) ToAnalysisPieChartFieldWellsOutput() AnalysisPieChartFieldWellsOutput {
	return i.ToAnalysisPieChartFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisPieChartFieldWellsArgs) ToAnalysisPieChartFieldWellsOutputWithContext(ctx context.Context) AnalysisPieChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartFieldWellsOutput)
}

func (i AnalysisPieChartFieldWellsArgs) ToAnalysisPieChartFieldWellsPtrOutput() AnalysisPieChartFieldWellsPtrOutput {
	return i.ToAnalysisPieChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisPieChartFieldWellsArgs) ToAnalysisPieChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPieChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartFieldWellsOutput).ToAnalysisPieChartFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisPieChartFieldWellsPtrInput is an input type that accepts AnalysisPieChartFieldWellsArgs, AnalysisPieChartFieldWellsPtr and AnalysisPieChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisPieChartFieldWellsPtrInput` via:
//
//	        AnalysisPieChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisPieChartFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisPieChartFieldWellsPtrOutput() AnalysisPieChartFieldWellsPtrOutput
	ToAnalysisPieChartFieldWellsPtrOutputWithContext(context.Context) AnalysisPieChartFieldWellsPtrOutput
}

type analysisPieChartFieldWellsPtrType AnalysisPieChartFieldWellsArgs

func AnalysisPieChartFieldWellsPtr(v *AnalysisPieChartFieldWellsArgs) AnalysisPieChartFieldWellsPtrInput {
	return (*analysisPieChartFieldWellsPtrType)(v)
}

func (*analysisPieChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPieChartFieldWells)(nil)).Elem()
}

func (i *analysisPieChartFieldWellsPtrType) ToAnalysisPieChartFieldWellsPtrOutput() AnalysisPieChartFieldWellsPtrOutput {
	return i.ToAnalysisPieChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisPieChartFieldWellsPtrType) ToAnalysisPieChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPieChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartFieldWellsPtrOutput)
}

type AnalysisPieChartFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisPieChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPieChartFieldWells)(nil)).Elem()
}

func (o AnalysisPieChartFieldWellsOutput) ToAnalysisPieChartFieldWellsOutput() AnalysisPieChartFieldWellsOutput {
	return o
}

func (o AnalysisPieChartFieldWellsOutput) ToAnalysisPieChartFieldWellsOutputWithContext(ctx context.Context) AnalysisPieChartFieldWellsOutput {
	return o
}

func (o AnalysisPieChartFieldWellsOutput) ToAnalysisPieChartFieldWellsPtrOutput() AnalysisPieChartFieldWellsPtrOutput {
	return o.ToAnalysisPieChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisPieChartFieldWellsOutput) ToAnalysisPieChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPieChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPieChartFieldWells) *AnalysisPieChartFieldWells {
		return &v
	}).(AnalysisPieChartFieldWellsPtrOutput)
}

func (o AnalysisPieChartFieldWellsOutput) PieChartAggregatedFieldWells() AnalysisPieChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartFieldWells) *AnalysisPieChartAggregatedFieldWells {
		return v.PieChartAggregatedFieldWells
	}).(AnalysisPieChartAggregatedFieldWellsPtrOutput)
}

type AnalysisPieChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPieChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPieChartFieldWells)(nil)).Elem()
}

func (o AnalysisPieChartFieldWellsPtrOutput) ToAnalysisPieChartFieldWellsPtrOutput() AnalysisPieChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisPieChartFieldWellsPtrOutput) ToAnalysisPieChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPieChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisPieChartFieldWellsPtrOutput) Elem() AnalysisPieChartFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisPieChartFieldWells) AnalysisPieChartFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisPieChartFieldWells
		return ret
	}).(AnalysisPieChartFieldWellsOutput)
}

func (o AnalysisPieChartFieldWellsPtrOutput) PieChartAggregatedFieldWells() AnalysisPieChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartFieldWells) *AnalysisPieChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.PieChartAggregatedFieldWells
	}).(AnalysisPieChartAggregatedFieldWellsPtrOutput)
}

type AnalysisPieChartSortConfiguration struct {
	CategoryItemsLimit               *AnalysisItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort                     []AnalysisFieldSortOptions       `pulumi:"categorySort"`
	SmallMultiplesLimitConfiguration *AnalysisItemsLimitConfiguration `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               []AnalysisFieldSortOptions       `pulumi:"smallMultiplesSort"`
}

// AnalysisPieChartSortConfigurationInput is an input type that accepts AnalysisPieChartSortConfigurationArgs and AnalysisPieChartSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisPieChartSortConfigurationInput` via:
//
//	AnalysisPieChartSortConfigurationArgs{...}
type AnalysisPieChartSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisPieChartSortConfigurationOutput() AnalysisPieChartSortConfigurationOutput
	ToAnalysisPieChartSortConfigurationOutputWithContext(context.Context) AnalysisPieChartSortConfigurationOutput
}

type AnalysisPieChartSortConfigurationArgs struct {
	CategoryItemsLimit               AnalysisItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort                     AnalysisFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	SmallMultiplesLimitConfiguration AnalysisItemsLimitConfigurationPtrInput `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               AnalysisFieldSortOptionsArrayInput      `pulumi:"smallMultiplesSort"`
}

func (AnalysisPieChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPieChartSortConfiguration)(nil)).Elem()
}

func (i AnalysisPieChartSortConfigurationArgs) ToAnalysisPieChartSortConfigurationOutput() AnalysisPieChartSortConfigurationOutput {
	return i.ToAnalysisPieChartSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisPieChartSortConfigurationArgs) ToAnalysisPieChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisPieChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartSortConfigurationOutput)
}

func (i AnalysisPieChartSortConfigurationArgs) ToAnalysisPieChartSortConfigurationPtrOutput() AnalysisPieChartSortConfigurationPtrOutput {
	return i.ToAnalysisPieChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisPieChartSortConfigurationArgs) ToAnalysisPieChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPieChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartSortConfigurationOutput).ToAnalysisPieChartSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisPieChartSortConfigurationPtrInput is an input type that accepts AnalysisPieChartSortConfigurationArgs, AnalysisPieChartSortConfigurationPtr and AnalysisPieChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisPieChartSortConfigurationPtrInput` via:
//
//	        AnalysisPieChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisPieChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisPieChartSortConfigurationPtrOutput() AnalysisPieChartSortConfigurationPtrOutput
	ToAnalysisPieChartSortConfigurationPtrOutputWithContext(context.Context) AnalysisPieChartSortConfigurationPtrOutput
}

type analysisPieChartSortConfigurationPtrType AnalysisPieChartSortConfigurationArgs

func AnalysisPieChartSortConfigurationPtr(v *AnalysisPieChartSortConfigurationArgs) AnalysisPieChartSortConfigurationPtrInput {
	return (*analysisPieChartSortConfigurationPtrType)(v)
}

func (*analysisPieChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPieChartSortConfiguration)(nil)).Elem()
}

func (i *analysisPieChartSortConfigurationPtrType) ToAnalysisPieChartSortConfigurationPtrOutput() AnalysisPieChartSortConfigurationPtrOutput {
	return i.ToAnalysisPieChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisPieChartSortConfigurationPtrType) ToAnalysisPieChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPieChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartSortConfigurationPtrOutput)
}

type AnalysisPieChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisPieChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPieChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisPieChartSortConfigurationOutput) ToAnalysisPieChartSortConfigurationOutput() AnalysisPieChartSortConfigurationOutput {
	return o
}

func (o AnalysisPieChartSortConfigurationOutput) ToAnalysisPieChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisPieChartSortConfigurationOutput {
	return o
}

func (o AnalysisPieChartSortConfigurationOutput) ToAnalysisPieChartSortConfigurationPtrOutput() AnalysisPieChartSortConfigurationPtrOutput {
	return o.ToAnalysisPieChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisPieChartSortConfigurationOutput) ToAnalysisPieChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPieChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPieChartSortConfiguration) *AnalysisPieChartSortConfiguration {
		return &v
	}).(AnalysisPieChartSortConfigurationPtrOutput)
}

func (o AnalysisPieChartSortConfigurationOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisPieChartSortConfigurationOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisPieChartSortConfiguration) []AnalysisFieldSortOptions { return v.CategorySort }).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisPieChartSortConfigurationOutput) SmallMultiplesLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.SmallMultiplesLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisPieChartSortConfigurationOutput) SmallMultiplesSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisPieChartSortConfiguration) []AnalysisFieldSortOptions { return v.SmallMultiplesSort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisPieChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPieChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPieChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisPieChartSortConfigurationPtrOutput) ToAnalysisPieChartSortConfigurationPtrOutput() AnalysisPieChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisPieChartSortConfigurationPtrOutput) ToAnalysisPieChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPieChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisPieChartSortConfigurationPtrOutput) Elem() AnalysisPieChartSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisPieChartSortConfiguration) AnalysisPieChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisPieChartSortConfiguration
		return ret
	}).(AnalysisPieChartSortConfigurationOutput)
}

func (o AnalysisPieChartSortConfigurationPtrOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisPieChartSortConfigurationPtrOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisPieChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisPieChartSortConfigurationPtrOutput) SmallMultiplesLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisPieChartSortConfigurationPtrOutput) SmallMultiplesSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisPieChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisPieChartVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisPieChartConfiguration      `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisPieChartVisualInput is an input type that accepts AnalysisPieChartVisualArgs and AnalysisPieChartVisualOutput values.
// You can construct a concrete instance of `AnalysisPieChartVisualInput` via:
//
//	AnalysisPieChartVisualArgs{...}
type AnalysisPieChartVisualInput interface {
	pulumi.Input

	ToAnalysisPieChartVisualOutput() AnalysisPieChartVisualOutput
	ToAnalysisPieChartVisualOutputWithContext(context.Context) AnalysisPieChartVisualOutput
}

type AnalysisPieChartVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisPieChartConfigurationPtrInput      `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisPieChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPieChartVisual)(nil)).Elem()
}

func (i AnalysisPieChartVisualArgs) ToAnalysisPieChartVisualOutput() AnalysisPieChartVisualOutput {
	return i.ToAnalysisPieChartVisualOutputWithContext(context.Background())
}

func (i AnalysisPieChartVisualArgs) ToAnalysisPieChartVisualOutputWithContext(ctx context.Context) AnalysisPieChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartVisualOutput)
}

func (i AnalysisPieChartVisualArgs) ToAnalysisPieChartVisualPtrOutput() AnalysisPieChartVisualPtrOutput {
	return i.ToAnalysisPieChartVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisPieChartVisualArgs) ToAnalysisPieChartVisualPtrOutputWithContext(ctx context.Context) AnalysisPieChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartVisualOutput).ToAnalysisPieChartVisualPtrOutputWithContext(ctx)
}

// AnalysisPieChartVisualPtrInput is an input type that accepts AnalysisPieChartVisualArgs, AnalysisPieChartVisualPtr and AnalysisPieChartVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisPieChartVisualPtrInput` via:
//
//	        AnalysisPieChartVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisPieChartVisualPtrInput interface {
	pulumi.Input

	ToAnalysisPieChartVisualPtrOutput() AnalysisPieChartVisualPtrOutput
	ToAnalysisPieChartVisualPtrOutputWithContext(context.Context) AnalysisPieChartVisualPtrOutput
}

type analysisPieChartVisualPtrType AnalysisPieChartVisualArgs

func AnalysisPieChartVisualPtr(v *AnalysisPieChartVisualArgs) AnalysisPieChartVisualPtrInput {
	return (*analysisPieChartVisualPtrType)(v)
}

func (*analysisPieChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPieChartVisual)(nil)).Elem()
}

func (i *analysisPieChartVisualPtrType) ToAnalysisPieChartVisualPtrOutput() AnalysisPieChartVisualPtrOutput {
	return i.ToAnalysisPieChartVisualPtrOutputWithContext(context.Background())
}

func (i *analysisPieChartVisualPtrType) ToAnalysisPieChartVisualPtrOutputWithContext(ctx context.Context) AnalysisPieChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPieChartVisualPtrOutput)
}

type AnalysisPieChartVisualOutput struct{ *pulumi.OutputState }

func (AnalysisPieChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPieChartVisual)(nil)).Elem()
}

func (o AnalysisPieChartVisualOutput) ToAnalysisPieChartVisualOutput() AnalysisPieChartVisualOutput {
	return o
}

func (o AnalysisPieChartVisualOutput) ToAnalysisPieChartVisualOutputWithContext(ctx context.Context) AnalysisPieChartVisualOutput {
	return o
}

func (o AnalysisPieChartVisualOutput) ToAnalysisPieChartVisualPtrOutput() AnalysisPieChartVisualPtrOutput {
	return o.ToAnalysisPieChartVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisPieChartVisualOutput) ToAnalysisPieChartVisualPtrOutputWithContext(ctx context.Context) AnalysisPieChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPieChartVisual) *AnalysisPieChartVisual {
		return &v
	}).(AnalysisPieChartVisualPtrOutput)
}

func (o AnalysisPieChartVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisPieChartVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisPieChartVisualOutput) ChartConfiguration() AnalysisPieChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartVisual) *AnalysisPieChartConfiguration { return v.ChartConfiguration }).(AnalysisPieChartConfigurationPtrOutput)
}

func (o AnalysisPieChartVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisPieChartVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisPieChartVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisPieChartVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPieChartVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisPieChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisPieChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisPieChartVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPieChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPieChartVisual)(nil)).Elem()
}

func (o AnalysisPieChartVisualPtrOutput) ToAnalysisPieChartVisualPtrOutput() AnalysisPieChartVisualPtrOutput {
	return o
}

func (o AnalysisPieChartVisualPtrOutput) ToAnalysisPieChartVisualPtrOutputWithContext(ctx context.Context) AnalysisPieChartVisualPtrOutput {
	return o
}

func (o AnalysisPieChartVisualPtrOutput) Elem() AnalysisPieChartVisualOutput {
	return o.ApplyT(func(v *AnalysisPieChartVisual) AnalysisPieChartVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisPieChartVisual
		return ret
	}).(AnalysisPieChartVisualOutput)
}

func (o AnalysisPieChartVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisPieChartVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisPieChartVisualPtrOutput) ChartConfiguration() AnalysisPieChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartVisual) *AnalysisPieChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisPieChartConfigurationPtrOutput)
}

func (o AnalysisPieChartVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisPieChartVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisPieChartVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisPieChartVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisPieChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPieChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisPivotFieldSortOptions struct {
	FieldId string                   `pulumi:"fieldId"`
	SortBy  AnalysisPivotTableSortBy `pulumi:"sortBy"`
}

// AnalysisPivotFieldSortOptionsInput is an input type that accepts AnalysisPivotFieldSortOptionsArgs and AnalysisPivotFieldSortOptionsOutput values.
// You can construct a concrete instance of `AnalysisPivotFieldSortOptionsInput` via:
//
//	AnalysisPivotFieldSortOptionsArgs{...}
type AnalysisPivotFieldSortOptionsInput interface {
	pulumi.Input

	ToAnalysisPivotFieldSortOptionsOutput() AnalysisPivotFieldSortOptionsOutput
	ToAnalysisPivotFieldSortOptionsOutputWithContext(context.Context) AnalysisPivotFieldSortOptionsOutput
}

type AnalysisPivotFieldSortOptionsArgs struct {
	FieldId pulumi.StringInput            `pulumi:"fieldId"`
	SortBy  AnalysisPivotTableSortByInput `pulumi:"sortBy"`
}

func (AnalysisPivotFieldSortOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotFieldSortOptions)(nil)).Elem()
}

func (i AnalysisPivotFieldSortOptionsArgs) ToAnalysisPivotFieldSortOptionsOutput() AnalysisPivotFieldSortOptionsOutput {
	return i.ToAnalysisPivotFieldSortOptionsOutputWithContext(context.Background())
}

func (i AnalysisPivotFieldSortOptionsArgs) ToAnalysisPivotFieldSortOptionsOutputWithContext(ctx context.Context) AnalysisPivotFieldSortOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotFieldSortOptionsOutput)
}

// AnalysisPivotFieldSortOptionsArrayInput is an input type that accepts AnalysisPivotFieldSortOptionsArray and AnalysisPivotFieldSortOptionsArrayOutput values.
// You can construct a concrete instance of `AnalysisPivotFieldSortOptionsArrayInput` via:
//
//	AnalysisPivotFieldSortOptionsArray{ AnalysisPivotFieldSortOptionsArgs{...} }
type AnalysisPivotFieldSortOptionsArrayInput interface {
	pulumi.Input

	ToAnalysisPivotFieldSortOptionsArrayOutput() AnalysisPivotFieldSortOptionsArrayOutput
	ToAnalysisPivotFieldSortOptionsArrayOutputWithContext(context.Context) AnalysisPivotFieldSortOptionsArrayOutput
}

type AnalysisPivotFieldSortOptionsArray []AnalysisPivotFieldSortOptionsInput

func (AnalysisPivotFieldSortOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisPivotFieldSortOptions)(nil)).Elem()
}

func (i AnalysisPivotFieldSortOptionsArray) ToAnalysisPivotFieldSortOptionsArrayOutput() AnalysisPivotFieldSortOptionsArrayOutput {
	return i.ToAnalysisPivotFieldSortOptionsArrayOutputWithContext(context.Background())
}

func (i AnalysisPivotFieldSortOptionsArray) ToAnalysisPivotFieldSortOptionsArrayOutputWithContext(ctx context.Context) AnalysisPivotFieldSortOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotFieldSortOptionsArrayOutput)
}

type AnalysisPivotFieldSortOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisPivotFieldSortOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotFieldSortOptions)(nil)).Elem()
}

func (o AnalysisPivotFieldSortOptionsOutput) ToAnalysisPivotFieldSortOptionsOutput() AnalysisPivotFieldSortOptionsOutput {
	return o
}

func (o AnalysisPivotFieldSortOptionsOutput) ToAnalysisPivotFieldSortOptionsOutputWithContext(ctx context.Context) AnalysisPivotFieldSortOptionsOutput {
	return o
}

func (o AnalysisPivotFieldSortOptionsOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisPivotFieldSortOptions) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisPivotFieldSortOptionsOutput) SortBy() AnalysisPivotTableSortByOutput {
	return o.ApplyT(func(v AnalysisPivotFieldSortOptions) AnalysisPivotTableSortBy { return v.SortBy }).(AnalysisPivotTableSortByOutput)
}

type AnalysisPivotFieldSortOptionsArrayOutput struct{ *pulumi.OutputState }

func (AnalysisPivotFieldSortOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisPivotFieldSortOptions)(nil)).Elem()
}

func (o AnalysisPivotFieldSortOptionsArrayOutput) ToAnalysisPivotFieldSortOptionsArrayOutput() AnalysisPivotFieldSortOptionsArrayOutput {
	return o
}

func (o AnalysisPivotFieldSortOptionsArrayOutput) ToAnalysisPivotFieldSortOptionsArrayOutputWithContext(ctx context.Context) AnalysisPivotFieldSortOptionsArrayOutput {
	return o
}

func (o AnalysisPivotFieldSortOptionsArrayOutput) Index(i pulumi.IntInput) AnalysisPivotFieldSortOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisPivotFieldSortOptions {
		return vs[0].([]AnalysisPivotFieldSortOptions)[vs[1].(int)]
	}).(AnalysisPivotFieldSortOptionsOutput)
}

type AnalysisPivotTableAggregatedFieldWells struct {
	Columns []AnalysisDimensionField `pulumi:"columns"`
	Rows    []AnalysisDimensionField `pulumi:"rows"`
	Values  []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisPivotTableAggregatedFieldWellsInput is an input type that accepts AnalysisPivotTableAggregatedFieldWellsArgs and AnalysisPivotTableAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisPivotTableAggregatedFieldWellsInput` via:
//
//	AnalysisPivotTableAggregatedFieldWellsArgs{...}
type AnalysisPivotTableAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisPivotTableAggregatedFieldWellsOutput() AnalysisPivotTableAggregatedFieldWellsOutput
	ToAnalysisPivotTableAggregatedFieldWellsOutputWithContext(context.Context) AnalysisPivotTableAggregatedFieldWellsOutput
}

type AnalysisPivotTableAggregatedFieldWellsArgs struct {
	Columns AnalysisDimensionFieldArrayInput `pulumi:"columns"`
	Rows    AnalysisDimensionFieldArrayInput `pulumi:"rows"`
	Values  AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisPivotTableAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisPivotTableAggregatedFieldWellsArgs) ToAnalysisPivotTableAggregatedFieldWellsOutput() AnalysisPivotTableAggregatedFieldWellsOutput {
	return i.ToAnalysisPivotTableAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisPivotTableAggregatedFieldWellsArgs) ToAnalysisPivotTableAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisPivotTableAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableAggregatedFieldWellsOutput)
}

func (i AnalysisPivotTableAggregatedFieldWellsArgs) ToAnalysisPivotTableAggregatedFieldWellsPtrOutput() AnalysisPivotTableAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisPivotTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableAggregatedFieldWellsArgs) ToAnalysisPivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableAggregatedFieldWellsOutput).ToAnalysisPivotTableAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisPivotTableAggregatedFieldWellsPtrInput is an input type that accepts AnalysisPivotTableAggregatedFieldWellsArgs, AnalysisPivotTableAggregatedFieldWellsPtr and AnalysisPivotTableAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisPivotTableAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableAggregatedFieldWellsPtrOutput() AnalysisPivotTableAggregatedFieldWellsPtrOutput
	ToAnalysisPivotTableAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisPivotTableAggregatedFieldWellsPtrOutput
}

type analysisPivotTableAggregatedFieldWellsPtrType AnalysisPivotTableAggregatedFieldWellsArgs

func AnalysisPivotTableAggregatedFieldWellsPtr(v *AnalysisPivotTableAggregatedFieldWellsArgs) AnalysisPivotTableAggregatedFieldWellsPtrInput {
	return (*analysisPivotTableAggregatedFieldWellsPtrType)(v)
}

func (*analysisPivotTableAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisPivotTableAggregatedFieldWellsPtrType) ToAnalysisPivotTableAggregatedFieldWellsPtrOutput() AnalysisPivotTableAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisPivotTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableAggregatedFieldWellsPtrType) ToAnalysisPivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableAggregatedFieldWellsPtrOutput)
}

type AnalysisPivotTableAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisPivotTableAggregatedFieldWellsOutput) ToAnalysisPivotTableAggregatedFieldWellsOutput() AnalysisPivotTableAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisPivotTableAggregatedFieldWellsOutput) ToAnalysisPivotTableAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisPivotTableAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisPivotTableAggregatedFieldWellsOutput) ToAnalysisPivotTableAggregatedFieldWellsPtrOutput() AnalysisPivotTableAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisPivotTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableAggregatedFieldWellsOutput) ToAnalysisPivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableAggregatedFieldWells) *AnalysisPivotTableAggregatedFieldWells {
		return &v
	}).(AnalysisPivotTableAggregatedFieldWellsPtrOutput)
}

func (o AnalysisPivotTableAggregatedFieldWellsOutput) Columns() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisPivotTableAggregatedFieldWells) []AnalysisDimensionField { return v.Columns }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisPivotTableAggregatedFieldWellsOutput) Rows() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisPivotTableAggregatedFieldWells) []AnalysisDimensionField { return v.Rows }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisPivotTableAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisPivotTableAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisPivotTableAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisPivotTableAggregatedFieldWellsPtrOutput) ToAnalysisPivotTableAggregatedFieldWellsPtrOutput() AnalysisPivotTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisPivotTableAggregatedFieldWellsPtrOutput) ToAnalysisPivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisPivotTableAggregatedFieldWellsPtrOutput) Elem() AnalysisPivotTableAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisPivotTableAggregatedFieldWells) AnalysisPivotTableAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableAggregatedFieldWells
		return ret
	}).(AnalysisPivotTableAggregatedFieldWellsOutput)
}

func (o AnalysisPivotTableAggregatedFieldWellsPtrOutput) Columns() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisPivotTableAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisPivotTableAggregatedFieldWellsPtrOutput) Rows() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisPivotTableAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisPivotTableAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisPivotTableAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisPivotTableCellConditionalFormatting struct {
	FieldId    string                                        `pulumi:"fieldId"`
	Scope      *AnalysisPivotTableConditionalFormattingScope `pulumi:"scope"`
	TextFormat *AnalysisTextConditionalFormat                `pulumi:"textFormat"`
}

// AnalysisPivotTableCellConditionalFormattingInput is an input type that accepts AnalysisPivotTableCellConditionalFormattingArgs and AnalysisPivotTableCellConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisPivotTableCellConditionalFormattingInput` via:
//
//	AnalysisPivotTableCellConditionalFormattingArgs{...}
type AnalysisPivotTableCellConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisPivotTableCellConditionalFormattingOutput() AnalysisPivotTableCellConditionalFormattingOutput
	ToAnalysisPivotTableCellConditionalFormattingOutputWithContext(context.Context) AnalysisPivotTableCellConditionalFormattingOutput
}

type AnalysisPivotTableCellConditionalFormattingArgs struct {
	FieldId    pulumi.StringInput                                   `pulumi:"fieldId"`
	Scope      AnalysisPivotTableConditionalFormattingScopePtrInput `pulumi:"scope"`
	TextFormat AnalysisTextConditionalFormatPtrInput                `pulumi:"textFormat"`
}

func (AnalysisPivotTableCellConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableCellConditionalFormatting)(nil)).Elem()
}

func (i AnalysisPivotTableCellConditionalFormattingArgs) ToAnalysisPivotTableCellConditionalFormattingOutput() AnalysisPivotTableCellConditionalFormattingOutput {
	return i.ToAnalysisPivotTableCellConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisPivotTableCellConditionalFormattingArgs) ToAnalysisPivotTableCellConditionalFormattingOutputWithContext(ctx context.Context) AnalysisPivotTableCellConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableCellConditionalFormattingOutput)
}

func (i AnalysisPivotTableCellConditionalFormattingArgs) ToAnalysisPivotTableCellConditionalFormattingPtrOutput() AnalysisPivotTableCellConditionalFormattingPtrOutput {
	return i.ToAnalysisPivotTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableCellConditionalFormattingArgs) ToAnalysisPivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisPivotTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableCellConditionalFormattingOutput).ToAnalysisPivotTableCellConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisPivotTableCellConditionalFormattingPtrInput is an input type that accepts AnalysisPivotTableCellConditionalFormattingArgs, AnalysisPivotTableCellConditionalFormattingPtr and AnalysisPivotTableCellConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableCellConditionalFormattingPtrInput` via:
//
//	        AnalysisPivotTableCellConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableCellConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableCellConditionalFormattingPtrOutput() AnalysisPivotTableCellConditionalFormattingPtrOutput
	ToAnalysisPivotTableCellConditionalFormattingPtrOutputWithContext(context.Context) AnalysisPivotTableCellConditionalFormattingPtrOutput
}

type analysisPivotTableCellConditionalFormattingPtrType AnalysisPivotTableCellConditionalFormattingArgs

func AnalysisPivotTableCellConditionalFormattingPtr(v *AnalysisPivotTableCellConditionalFormattingArgs) AnalysisPivotTableCellConditionalFormattingPtrInput {
	return (*analysisPivotTableCellConditionalFormattingPtrType)(v)
}

func (*analysisPivotTableCellConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableCellConditionalFormatting)(nil)).Elem()
}

func (i *analysisPivotTableCellConditionalFormattingPtrType) ToAnalysisPivotTableCellConditionalFormattingPtrOutput() AnalysisPivotTableCellConditionalFormattingPtrOutput {
	return i.ToAnalysisPivotTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableCellConditionalFormattingPtrType) ToAnalysisPivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisPivotTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableCellConditionalFormattingPtrOutput)
}

type AnalysisPivotTableCellConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableCellConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableCellConditionalFormatting)(nil)).Elem()
}

func (o AnalysisPivotTableCellConditionalFormattingOutput) ToAnalysisPivotTableCellConditionalFormattingOutput() AnalysisPivotTableCellConditionalFormattingOutput {
	return o
}

func (o AnalysisPivotTableCellConditionalFormattingOutput) ToAnalysisPivotTableCellConditionalFormattingOutputWithContext(ctx context.Context) AnalysisPivotTableCellConditionalFormattingOutput {
	return o
}

func (o AnalysisPivotTableCellConditionalFormattingOutput) ToAnalysisPivotTableCellConditionalFormattingPtrOutput() AnalysisPivotTableCellConditionalFormattingPtrOutput {
	return o.ToAnalysisPivotTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableCellConditionalFormattingOutput) ToAnalysisPivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisPivotTableCellConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableCellConditionalFormatting) *AnalysisPivotTableCellConditionalFormatting {
		return &v
	}).(AnalysisPivotTableCellConditionalFormattingPtrOutput)
}

func (o AnalysisPivotTableCellConditionalFormattingOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisPivotTableCellConditionalFormatting) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisPivotTableCellConditionalFormattingOutput) Scope() AnalysisPivotTableConditionalFormattingScopePtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableCellConditionalFormatting) *AnalysisPivotTableConditionalFormattingScope {
		return v.Scope
	}).(AnalysisPivotTableConditionalFormattingScopePtrOutput)
}

func (o AnalysisPivotTableCellConditionalFormattingOutput) TextFormat() AnalysisTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableCellConditionalFormatting) *AnalysisTextConditionalFormat {
		return v.TextFormat
	}).(AnalysisTextConditionalFormatPtrOutput)
}

type AnalysisPivotTableCellConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableCellConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableCellConditionalFormatting)(nil)).Elem()
}

func (o AnalysisPivotTableCellConditionalFormattingPtrOutput) ToAnalysisPivotTableCellConditionalFormattingPtrOutput() AnalysisPivotTableCellConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisPivotTableCellConditionalFormattingPtrOutput) ToAnalysisPivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisPivotTableCellConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisPivotTableCellConditionalFormattingPtrOutput) Elem() AnalysisPivotTableCellConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisPivotTableCellConditionalFormatting) AnalysisPivotTableCellConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableCellConditionalFormatting
		return ret
	}).(AnalysisPivotTableCellConditionalFormattingOutput)
}

func (o AnalysisPivotTableCellConditionalFormattingPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableCellConditionalFormatting) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPivotTableCellConditionalFormattingPtrOutput) Scope() AnalysisPivotTableConditionalFormattingScopePtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableCellConditionalFormatting) *AnalysisPivotTableConditionalFormattingScope {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(AnalysisPivotTableConditionalFormattingScopePtrOutput)
}

func (o AnalysisPivotTableCellConditionalFormattingPtrOutput) TextFormat() AnalysisTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableCellConditionalFormatting) *AnalysisTextConditionalFormat {
		if v == nil {
			return nil
		}
		return v.TextFormat
	}).(AnalysisTextConditionalFormatPtrOutput)
}

type AnalysisPivotTableConditionalFormatting struct {
	ConditionalFormattingOptions []AnalysisPivotTableConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// AnalysisPivotTableConditionalFormattingInput is an input type that accepts AnalysisPivotTableConditionalFormattingArgs and AnalysisPivotTableConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisPivotTableConditionalFormattingInput` via:
//
//	AnalysisPivotTableConditionalFormattingArgs{...}
type AnalysisPivotTableConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisPivotTableConditionalFormattingOutput() AnalysisPivotTableConditionalFormattingOutput
	ToAnalysisPivotTableConditionalFormattingOutputWithContext(context.Context) AnalysisPivotTableConditionalFormattingOutput
}

type AnalysisPivotTableConditionalFormattingArgs struct {
	ConditionalFormattingOptions AnalysisPivotTableConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (AnalysisPivotTableConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableConditionalFormatting)(nil)).Elem()
}

func (i AnalysisPivotTableConditionalFormattingArgs) ToAnalysisPivotTableConditionalFormattingOutput() AnalysisPivotTableConditionalFormattingOutput {
	return i.ToAnalysisPivotTableConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisPivotTableConditionalFormattingArgs) ToAnalysisPivotTableConditionalFormattingOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConditionalFormattingOutput)
}

func (i AnalysisPivotTableConditionalFormattingArgs) ToAnalysisPivotTableConditionalFormattingPtrOutput() AnalysisPivotTableConditionalFormattingPtrOutput {
	return i.ToAnalysisPivotTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableConditionalFormattingArgs) ToAnalysisPivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConditionalFormattingOutput).ToAnalysisPivotTableConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisPivotTableConditionalFormattingPtrInput is an input type that accepts AnalysisPivotTableConditionalFormattingArgs, AnalysisPivotTableConditionalFormattingPtr and AnalysisPivotTableConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableConditionalFormattingPtrInput` via:
//
//	        AnalysisPivotTableConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableConditionalFormattingPtrOutput() AnalysisPivotTableConditionalFormattingPtrOutput
	ToAnalysisPivotTableConditionalFormattingPtrOutputWithContext(context.Context) AnalysisPivotTableConditionalFormattingPtrOutput
}

type analysisPivotTableConditionalFormattingPtrType AnalysisPivotTableConditionalFormattingArgs

func AnalysisPivotTableConditionalFormattingPtr(v *AnalysisPivotTableConditionalFormattingArgs) AnalysisPivotTableConditionalFormattingPtrInput {
	return (*analysisPivotTableConditionalFormattingPtrType)(v)
}

func (*analysisPivotTableConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableConditionalFormatting)(nil)).Elem()
}

func (i *analysisPivotTableConditionalFormattingPtrType) ToAnalysisPivotTableConditionalFormattingPtrOutput() AnalysisPivotTableConditionalFormattingPtrOutput {
	return i.ToAnalysisPivotTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableConditionalFormattingPtrType) ToAnalysisPivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConditionalFormattingPtrOutput)
}

type AnalysisPivotTableConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableConditionalFormatting)(nil)).Elem()
}

func (o AnalysisPivotTableConditionalFormattingOutput) ToAnalysisPivotTableConditionalFormattingOutput() AnalysisPivotTableConditionalFormattingOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingOutput) ToAnalysisPivotTableConditionalFormattingOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingOutput) ToAnalysisPivotTableConditionalFormattingPtrOutput() AnalysisPivotTableConditionalFormattingPtrOutput {
	return o.ToAnalysisPivotTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableConditionalFormattingOutput) ToAnalysisPivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableConditionalFormatting) *AnalysisPivotTableConditionalFormatting {
		return &v
	}).(AnalysisPivotTableConditionalFormattingPtrOutput)
}

func (o AnalysisPivotTableConditionalFormattingOutput) ConditionalFormattingOptions() AnalysisPivotTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v AnalysisPivotTableConditionalFormatting) []AnalysisPivotTableConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(AnalysisPivotTableConditionalFormattingOptionArrayOutput)
}

type AnalysisPivotTableConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableConditionalFormatting)(nil)).Elem()
}

func (o AnalysisPivotTableConditionalFormattingPtrOutput) ToAnalysisPivotTableConditionalFormattingPtrOutput() AnalysisPivotTableConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingPtrOutput) ToAnalysisPivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingPtrOutput) Elem() AnalysisPivotTableConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConditionalFormatting) AnalysisPivotTableConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableConditionalFormatting
		return ret
	}).(AnalysisPivotTableConditionalFormattingOutput)
}

func (o AnalysisPivotTableConditionalFormattingPtrOutput) ConditionalFormattingOptions() AnalysisPivotTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConditionalFormatting) []AnalysisPivotTableConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(AnalysisPivotTableConditionalFormattingOptionArrayOutput)
}

type AnalysisPivotTableConditionalFormattingOption struct {
	Cell *AnalysisPivotTableCellConditionalFormatting `pulumi:"cell"`
}

// AnalysisPivotTableConditionalFormattingOptionInput is an input type that accepts AnalysisPivotTableConditionalFormattingOptionArgs and AnalysisPivotTableConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `AnalysisPivotTableConditionalFormattingOptionInput` via:
//
//	AnalysisPivotTableConditionalFormattingOptionArgs{...}
type AnalysisPivotTableConditionalFormattingOptionInput interface {
	pulumi.Input

	ToAnalysisPivotTableConditionalFormattingOptionOutput() AnalysisPivotTableConditionalFormattingOptionOutput
	ToAnalysisPivotTableConditionalFormattingOptionOutputWithContext(context.Context) AnalysisPivotTableConditionalFormattingOptionOutput
}

type AnalysisPivotTableConditionalFormattingOptionArgs struct {
	Cell AnalysisPivotTableCellConditionalFormattingPtrInput `pulumi:"cell"`
}

func (AnalysisPivotTableConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableConditionalFormattingOption)(nil)).Elem()
}

func (i AnalysisPivotTableConditionalFormattingOptionArgs) ToAnalysisPivotTableConditionalFormattingOptionOutput() AnalysisPivotTableConditionalFormattingOptionOutput {
	return i.ToAnalysisPivotTableConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i AnalysisPivotTableConditionalFormattingOptionArgs) ToAnalysisPivotTableConditionalFormattingOptionOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConditionalFormattingOptionOutput)
}

// AnalysisPivotTableConditionalFormattingOptionArrayInput is an input type that accepts AnalysisPivotTableConditionalFormattingOptionArray and AnalysisPivotTableConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `AnalysisPivotTableConditionalFormattingOptionArrayInput` via:
//
//	AnalysisPivotTableConditionalFormattingOptionArray{ AnalysisPivotTableConditionalFormattingOptionArgs{...} }
type AnalysisPivotTableConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToAnalysisPivotTableConditionalFormattingOptionArrayOutput() AnalysisPivotTableConditionalFormattingOptionArrayOutput
	ToAnalysisPivotTableConditionalFormattingOptionArrayOutputWithContext(context.Context) AnalysisPivotTableConditionalFormattingOptionArrayOutput
}

type AnalysisPivotTableConditionalFormattingOptionArray []AnalysisPivotTableConditionalFormattingOptionInput

func (AnalysisPivotTableConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisPivotTableConditionalFormattingOption)(nil)).Elem()
}

func (i AnalysisPivotTableConditionalFormattingOptionArray) ToAnalysisPivotTableConditionalFormattingOptionArrayOutput() AnalysisPivotTableConditionalFormattingOptionArrayOutput {
	return i.ToAnalysisPivotTableConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i AnalysisPivotTableConditionalFormattingOptionArray) ToAnalysisPivotTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConditionalFormattingOptionArrayOutput)
}

type AnalysisPivotTableConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableConditionalFormattingOption)(nil)).Elem()
}

func (o AnalysisPivotTableConditionalFormattingOptionOutput) ToAnalysisPivotTableConditionalFormattingOptionOutput() AnalysisPivotTableConditionalFormattingOptionOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingOptionOutput) ToAnalysisPivotTableConditionalFormattingOptionOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingOptionOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingOptionOutput) Cell() AnalysisPivotTableCellConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableConditionalFormattingOption) *AnalysisPivotTableCellConditionalFormatting {
		return v.Cell
	}).(AnalysisPivotTableCellConditionalFormattingPtrOutput)
}

type AnalysisPivotTableConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisPivotTableConditionalFormattingOption)(nil)).Elem()
}

func (o AnalysisPivotTableConditionalFormattingOptionArrayOutput) ToAnalysisPivotTableConditionalFormattingOptionArrayOutput() AnalysisPivotTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingOptionArrayOutput) ToAnalysisPivotTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) AnalysisPivotTableConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisPivotTableConditionalFormattingOption {
		return vs[0].([]AnalysisPivotTableConditionalFormattingOption)[vs[1].(int)]
	}).(AnalysisPivotTableConditionalFormattingOptionOutput)
}

type AnalysisPivotTableConditionalFormattingScope struct {
	Role *AnalysisPivotTableConditionalFormattingScopeRole `pulumi:"role"`
}

// AnalysisPivotTableConditionalFormattingScopeInput is an input type that accepts AnalysisPivotTableConditionalFormattingScopeArgs and AnalysisPivotTableConditionalFormattingScopeOutput values.
// You can construct a concrete instance of `AnalysisPivotTableConditionalFormattingScopeInput` via:
//
//	AnalysisPivotTableConditionalFormattingScopeArgs{...}
type AnalysisPivotTableConditionalFormattingScopeInput interface {
	pulumi.Input

	ToAnalysisPivotTableConditionalFormattingScopeOutput() AnalysisPivotTableConditionalFormattingScopeOutput
	ToAnalysisPivotTableConditionalFormattingScopeOutputWithContext(context.Context) AnalysisPivotTableConditionalFormattingScopeOutput
}

type AnalysisPivotTableConditionalFormattingScopeArgs struct {
	Role AnalysisPivotTableConditionalFormattingScopeRolePtrInput `pulumi:"role"`
}

func (AnalysisPivotTableConditionalFormattingScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableConditionalFormattingScope)(nil)).Elem()
}

func (i AnalysisPivotTableConditionalFormattingScopeArgs) ToAnalysisPivotTableConditionalFormattingScopeOutput() AnalysisPivotTableConditionalFormattingScopeOutput {
	return i.ToAnalysisPivotTableConditionalFormattingScopeOutputWithContext(context.Background())
}

func (i AnalysisPivotTableConditionalFormattingScopeArgs) ToAnalysisPivotTableConditionalFormattingScopeOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConditionalFormattingScopeOutput)
}

func (i AnalysisPivotTableConditionalFormattingScopeArgs) ToAnalysisPivotTableConditionalFormattingScopePtrOutput() AnalysisPivotTableConditionalFormattingScopePtrOutput {
	return i.ToAnalysisPivotTableConditionalFormattingScopePtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableConditionalFormattingScopeArgs) ToAnalysisPivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConditionalFormattingScopeOutput).ToAnalysisPivotTableConditionalFormattingScopePtrOutputWithContext(ctx)
}

// AnalysisPivotTableConditionalFormattingScopePtrInput is an input type that accepts AnalysisPivotTableConditionalFormattingScopeArgs, AnalysisPivotTableConditionalFormattingScopePtr and AnalysisPivotTableConditionalFormattingScopePtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableConditionalFormattingScopePtrInput` via:
//
//	        AnalysisPivotTableConditionalFormattingScopeArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableConditionalFormattingScopePtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableConditionalFormattingScopePtrOutput() AnalysisPivotTableConditionalFormattingScopePtrOutput
	ToAnalysisPivotTableConditionalFormattingScopePtrOutputWithContext(context.Context) AnalysisPivotTableConditionalFormattingScopePtrOutput
}

type analysisPivotTableConditionalFormattingScopePtrType AnalysisPivotTableConditionalFormattingScopeArgs

func AnalysisPivotTableConditionalFormattingScopePtr(v *AnalysisPivotTableConditionalFormattingScopeArgs) AnalysisPivotTableConditionalFormattingScopePtrInput {
	return (*analysisPivotTableConditionalFormattingScopePtrType)(v)
}

func (*analysisPivotTableConditionalFormattingScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableConditionalFormattingScope)(nil)).Elem()
}

func (i *analysisPivotTableConditionalFormattingScopePtrType) ToAnalysisPivotTableConditionalFormattingScopePtrOutput() AnalysisPivotTableConditionalFormattingScopePtrOutput {
	return i.ToAnalysisPivotTableConditionalFormattingScopePtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableConditionalFormattingScopePtrType) ToAnalysisPivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConditionalFormattingScopePtrOutput)
}

type AnalysisPivotTableConditionalFormattingScopeOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableConditionalFormattingScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableConditionalFormattingScope)(nil)).Elem()
}

func (o AnalysisPivotTableConditionalFormattingScopeOutput) ToAnalysisPivotTableConditionalFormattingScopeOutput() AnalysisPivotTableConditionalFormattingScopeOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingScopeOutput) ToAnalysisPivotTableConditionalFormattingScopeOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopeOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingScopeOutput) ToAnalysisPivotTableConditionalFormattingScopePtrOutput() AnalysisPivotTableConditionalFormattingScopePtrOutput {
	return o.ToAnalysisPivotTableConditionalFormattingScopePtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableConditionalFormattingScopeOutput) ToAnalysisPivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableConditionalFormattingScope) *AnalysisPivotTableConditionalFormattingScope {
		return &v
	}).(AnalysisPivotTableConditionalFormattingScopePtrOutput)
}

func (o AnalysisPivotTableConditionalFormattingScopeOutput) Role() AnalysisPivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableConditionalFormattingScope) *AnalysisPivotTableConditionalFormattingScopeRole {
		return v.Role
	}).(AnalysisPivotTableConditionalFormattingScopeRolePtrOutput)
}

type AnalysisPivotTableConditionalFormattingScopePtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableConditionalFormattingScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableConditionalFormattingScope)(nil)).Elem()
}

func (o AnalysisPivotTableConditionalFormattingScopePtrOutput) ToAnalysisPivotTableConditionalFormattingScopePtrOutput() AnalysisPivotTableConditionalFormattingScopePtrOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingScopePtrOutput) ToAnalysisPivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopePtrOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingScopePtrOutput) Elem() AnalysisPivotTableConditionalFormattingScopeOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConditionalFormattingScope) AnalysisPivotTableConditionalFormattingScope {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableConditionalFormattingScope
		return ret
	}).(AnalysisPivotTableConditionalFormattingScopeOutput)
}

func (o AnalysisPivotTableConditionalFormattingScopePtrOutput) Role() AnalysisPivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConditionalFormattingScope) *AnalysisPivotTableConditionalFormattingScopeRole {
		if v == nil {
			return nil
		}
		return v.Role
	}).(AnalysisPivotTableConditionalFormattingScopeRolePtrOutput)
}

type AnalysisPivotTableConfiguration struct {
	FieldOptions           *AnalysisPivotTableFieldOptions           `pulumi:"fieldOptions"`
	FieldWells             *AnalysisPivotTableFieldWells             `pulumi:"fieldWells"`
	PaginatedReportOptions *AnalysisPivotTablePaginatedReportOptions `pulumi:"paginatedReportOptions"`
	SortConfiguration      *AnalysisPivotTableSortConfiguration      `pulumi:"sortConfiguration"`
	TableOptions           *AnalysisPivotTableOptions                `pulumi:"tableOptions"`
	TotalOptions           *AnalysisPivotTableTotalOptions           `pulumi:"totalOptions"`
}

// AnalysisPivotTableConfigurationInput is an input type that accepts AnalysisPivotTableConfigurationArgs and AnalysisPivotTableConfigurationOutput values.
// You can construct a concrete instance of `AnalysisPivotTableConfigurationInput` via:
//
//	AnalysisPivotTableConfigurationArgs{...}
type AnalysisPivotTableConfigurationInput interface {
	pulumi.Input

	ToAnalysisPivotTableConfigurationOutput() AnalysisPivotTableConfigurationOutput
	ToAnalysisPivotTableConfigurationOutputWithContext(context.Context) AnalysisPivotTableConfigurationOutput
}

type AnalysisPivotTableConfigurationArgs struct {
	FieldOptions           AnalysisPivotTableFieldOptionsPtrInput           `pulumi:"fieldOptions"`
	FieldWells             AnalysisPivotTableFieldWellsPtrInput             `pulumi:"fieldWells"`
	PaginatedReportOptions AnalysisPivotTablePaginatedReportOptionsPtrInput `pulumi:"paginatedReportOptions"`
	SortConfiguration      AnalysisPivotTableSortConfigurationPtrInput      `pulumi:"sortConfiguration"`
	TableOptions           AnalysisPivotTableOptionsPtrInput                `pulumi:"tableOptions"`
	TotalOptions           AnalysisPivotTableTotalOptionsPtrInput           `pulumi:"totalOptions"`
}

func (AnalysisPivotTableConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableConfiguration)(nil)).Elem()
}

func (i AnalysisPivotTableConfigurationArgs) ToAnalysisPivotTableConfigurationOutput() AnalysisPivotTableConfigurationOutput {
	return i.ToAnalysisPivotTableConfigurationOutputWithContext(context.Background())
}

func (i AnalysisPivotTableConfigurationArgs) ToAnalysisPivotTableConfigurationOutputWithContext(ctx context.Context) AnalysisPivotTableConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConfigurationOutput)
}

func (i AnalysisPivotTableConfigurationArgs) ToAnalysisPivotTableConfigurationPtrOutput() AnalysisPivotTableConfigurationPtrOutput {
	return i.ToAnalysisPivotTableConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableConfigurationArgs) ToAnalysisPivotTableConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPivotTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConfigurationOutput).ToAnalysisPivotTableConfigurationPtrOutputWithContext(ctx)
}

// AnalysisPivotTableConfigurationPtrInput is an input type that accepts AnalysisPivotTableConfigurationArgs, AnalysisPivotTableConfigurationPtr and AnalysisPivotTableConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableConfigurationPtrInput` via:
//
//	        AnalysisPivotTableConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableConfigurationPtrOutput() AnalysisPivotTableConfigurationPtrOutput
	ToAnalysisPivotTableConfigurationPtrOutputWithContext(context.Context) AnalysisPivotTableConfigurationPtrOutput
}

type analysisPivotTableConfigurationPtrType AnalysisPivotTableConfigurationArgs

func AnalysisPivotTableConfigurationPtr(v *AnalysisPivotTableConfigurationArgs) AnalysisPivotTableConfigurationPtrInput {
	return (*analysisPivotTableConfigurationPtrType)(v)
}

func (*analysisPivotTableConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableConfiguration)(nil)).Elem()
}

func (i *analysisPivotTableConfigurationPtrType) ToAnalysisPivotTableConfigurationPtrOutput() AnalysisPivotTableConfigurationPtrOutput {
	return i.ToAnalysisPivotTableConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableConfigurationPtrType) ToAnalysisPivotTableConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPivotTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableConfigurationPtrOutput)
}

type AnalysisPivotTableConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableConfiguration)(nil)).Elem()
}

func (o AnalysisPivotTableConfigurationOutput) ToAnalysisPivotTableConfigurationOutput() AnalysisPivotTableConfigurationOutput {
	return o
}

func (o AnalysisPivotTableConfigurationOutput) ToAnalysisPivotTableConfigurationOutputWithContext(ctx context.Context) AnalysisPivotTableConfigurationOutput {
	return o
}

func (o AnalysisPivotTableConfigurationOutput) ToAnalysisPivotTableConfigurationPtrOutput() AnalysisPivotTableConfigurationPtrOutput {
	return o.ToAnalysisPivotTableConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableConfigurationOutput) ToAnalysisPivotTableConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPivotTableConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableConfiguration) *AnalysisPivotTableConfiguration {
		return &v
	}).(AnalysisPivotTableConfigurationPtrOutput)
}

func (o AnalysisPivotTableConfigurationOutput) FieldOptions() AnalysisPivotTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableConfiguration) *AnalysisPivotTableFieldOptions { return v.FieldOptions }).(AnalysisPivotTableFieldOptionsPtrOutput)
}

func (o AnalysisPivotTableConfigurationOutput) FieldWells() AnalysisPivotTableFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableConfiguration) *AnalysisPivotTableFieldWells { return v.FieldWells }).(AnalysisPivotTableFieldWellsPtrOutput)
}

func (o AnalysisPivotTableConfigurationOutput) PaginatedReportOptions() AnalysisPivotTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableConfiguration) *AnalysisPivotTablePaginatedReportOptions {
		return v.PaginatedReportOptions
	}).(AnalysisPivotTablePaginatedReportOptionsPtrOutput)
}

func (o AnalysisPivotTableConfigurationOutput) SortConfiguration() AnalysisPivotTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableConfiguration) *AnalysisPivotTableSortConfiguration {
		return v.SortConfiguration
	}).(AnalysisPivotTableSortConfigurationPtrOutput)
}

func (o AnalysisPivotTableConfigurationOutput) TableOptions() AnalysisPivotTableOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableConfiguration) *AnalysisPivotTableOptions { return v.TableOptions }).(AnalysisPivotTableOptionsPtrOutput)
}

func (o AnalysisPivotTableConfigurationOutput) TotalOptions() AnalysisPivotTableTotalOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableConfiguration) *AnalysisPivotTableTotalOptions { return v.TotalOptions }).(AnalysisPivotTableTotalOptionsPtrOutput)
}

type AnalysisPivotTableConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableConfiguration)(nil)).Elem()
}

func (o AnalysisPivotTableConfigurationPtrOutput) ToAnalysisPivotTableConfigurationPtrOutput() AnalysisPivotTableConfigurationPtrOutput {
	return o
}

func (o AnalysisPivotTableConfigurationPtrOutput) ToAnalysisPivotTableConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPivotTableConfigurationPtrOutput {
	return o
}

func (o AnalysisPivotTableConfigurationPtrOutput) Elem() AnalysisPivotTableConfigurationOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConfiguration) AnalysisPivotTableConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableConfiguration
		return ret
	}).(AnalysisPivotTableConfigurationOutput)
}

func (o AnalysisPivotTableConfigurationPtrOutput) FieldOptions() AnalysisPivotTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConfiguration) *AnalysisPivotTableFieldOptions {
		if v == nil {
			return nil
		}
		return v.FieldOptions
	}).(AnalysisPivotTableFieldOptionsPtrOutput)
}

func (o AnalysisPivotTableConfigurationPtrOutput) FieldWells() AnalysisPivotTableFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConfiguration) *AnalysisPivotTableFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisPivotTableFieldWellsPtrOutput)
}

func (o AnalysisPivotTableConfigurationPtrOutput) PaginatedReportOptions() AnalysisPivotTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConfiguration) *AnalysisPivotTablePaginatedReportOptions {
		if v == nil {
			return nil
		}
		return v.PaginatedReportOptions
	}).(AnalysisPivotTablePaginatedReportOptionsPtrOutput)
}

func (o AnalysisPivotTableConfigurationPtrOutput) SortConfiguration() AnalysisPivotTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConfiguration) *AnalysisPivotTableSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisPivotTableSortConfigurationPtrOutput)
}

func (o AnalysisPivotTableConfigurationPtrOutput) TableOptions() AnalysisPivotTableOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConfiguration) *AnalysisPivotTableOptions {
		if v == nil {
			return nil
		}
		return v.TableOptions
	}).(AnalysisPivotTableOptionsPtrOutput)
}

func (o AnalysisPivotTableConfigurationPtrOutput) TotalOptions() AnalysisPivotTableTotalOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConfiguration) *AnalysisPivotTableTotalOptions {
		if v == nil {
			return nil
		}
		return v.TotalOptions
	}).(AnalysisPivotTableTotalOptionsPtrOutput)
}

type AnalysisPivotTableDataPathOption struct {
	DataPathList []AnalysisDataPathValue `pulumi:"dataPathList"`
	// String based length that is composed of value and unit in px
	Width *string `pulumi:"width"`
}

// AnalysisPivotTableDataPathOptionInput is an input type that accepts AnalysisPivotTableDataPathOptionArgs and AnalysisPivotTableDataPathOptionOutput values.
// You can construct a concrete instance of `AnalysisPivotTableDataPathOptionInput` via:
//
//	AnalysisPivotTableDataPathOptionArgs{...}
type AnalysisPivotTableDataPathOptionInput interface {
	pulumi.Input

	ToAnalysisPivotTableDataPathOptionOutput() AnalysisPivotTableDataPathOptionOutput
	ToAnalysisPivotTableDataPathOptionOutputWithContext(context.Context) AnalysisPivotTableDataPathOptionOutput
}

type AnalysisPivotTableDataPathOptionArgs struct {
	DataPathList AnalysisDataPathValueArrayInput `pulumi:"dataPathList"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringPtrInput `pulumi:"width"`
}

func (AnalysisPivotTableDataPathOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableDataPathOption)(nil)).Elem()
}

func (i AnalysisPivotTableDataPathOptionArgs) ToAnalysisPivotTableDataPathOptionOutput() AnalysisPivotTableDataPathOptionOutput {
	return i.ToAnalysisPivotTableDataPathOptionOutputWithContext(context.Background())
}

func (i AnalysisPivotTableDataPathOptionArgs) ToAnalysisPivotTableDataPathOptionOutputWithContext(ctx context.Context) AnalysisPivotTableDataPathOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableDataPathOptionOutput)
}

// AnalysisPivotTableDataPathOptionArrayInput is an input type that accepts AnalysisPivotTableDataPathOptionArray and AnalysisPivotTableDataPathOptionArrayOutput values.
// You can construct a concrete instance of `AnalysisPivotTableDataPathOptionArrayInput` via:
//
//	AnalysisPivotTableDataPathOptionArray{ AnalysisPivotTableDataPathOptionArgs{...} }
type AnalysisPivotTableDataPathOptionArrayInput interface {
	pulumi.Input

	ToAnalysisPivotTableDataPathOptionArrayOutput() AnalysisPivotTableDataPathOptionArrayOutput
	ToAnalysisPivotTableDataPathOptionArrayOutputWithContext(context.Context) AnalysisPivotTableDataPathOptionArrayOutput
}

type AnalysisPivotTableDataPathOptionArray []AnalysisPivotTableDataPathOptionInput

func (AnalysisPivotTableDataPathOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisPivotTableDataPathOption)(nil)).Elem()
}

func (i AnalysisPivotTableDataPathOptionArray) ToAnalysisPivotTableDataPathOptionArrayOutput() AnalysisPivotTableDataPathOptionArrayOutput {
	return i.ToAnalysisPivotTableDataPathOptionArrayOutputWithContext(context.Background())
}

func (i AnalysisPivotTableDataPathOptionArray) ToAnalysisPivotTableDataPathOptionArrayOutputWithContext(ctx context.Context) AnalysisPivotTableDataPathOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableDataPathOptionArrayOutput)
}

type AnalysisPivotTableDataPathOptionOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableDataPathOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableDataPathOption)(nil)).Elem()
}

func (o AnalysisPivotTableDataPathOptionOutput) ToAnalysisPivotTableDataPathOptionOutput() AnalysisPivotTableDataPathOptionOutput {
	return o
}

func (o AnalysisPivotTableDataPathOptionOutput) ToAnalysisPivotTableDataPathOptionOutputWithContext(ctx context.Context) AnalysisPivotTableDataPathOptionOutput {
	return o
}

func (o AnalysisPivotTableDataPathOptionOutput) DataPathList() AnalysisDataPathValueArrayOutput {
	return o.ApplyT(func(v AnalysisPivotTableDataPathOption) []AnalysisDataPathValue { return v.DataPathList }).(AnalysisDataPathValueArrayOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisPivotTableDataPathOptionOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableDataPathOption) *string { return v.Width }).(pulumi.StringPtrOutput)
}

type AnalysisPivotTableDataPathOptionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableDataPathOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisPivotTableDataPathOption)(nil)).Elem()
}

func (o AnalysisPivotTableDataPathOptionArrayOutput) ToAnalysisPivotTableDataPathOptionArrayOutput() AnalysisPivotTableDataPathOptionArrayOutput {
	return o
}

func (o AnalysisPivotTableDataPathOptionArrayOutput) ToAnalysisPivotTableDataPathOptionArrayOutputWithContext(ctx context.Context) AnalysisPivotTableDataPathOptionArrayOutput {
	return o
}

func (o AnalysisPivotTableDataPathOptionArrayOutput) Index(i pulumi.IntInput) AnalysisPivotTableDataPathOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisPivotTableDataPathOption {
		return vs[0].([]AnalysisPivotTableDataPathOption)[vs[1].(int)]
	}).(AnalysisPivotTableDataPathOptionOutput)
}

type AnalysisPivotTableFieldOption struct {
	CustomLabel *string             `pulumi:"customLabel"`
	FieldId     string              `pulumi:"fieldId"`
	Visibility  *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisPivotTableFieldOptionInput is an input type that accepts AnalysisPivotTableFieldOptionArgs and AnalysisPivotTableFieldOptionOutput values.
// You can construct a concrete instance of `AnalysisPivotTableFieldOptionInput` via:
//
//	AnalysisPivotTableFieldOptionArgs{...}
type AnalysisPivotTableFieldOptionInput interface {
	pulumi.Input

	ToAnalysisPivotTableFieldOptionOutput() AnalysisPivotTableFieldOptionOutput
	ToAnalysisPivotTableFieldOptionOutputWithContext(context.Context) AnalysisPivotTableFieldOptionOutput
}

type AnalysisPivotTableFieldOptionArgs struct {
	CustomLabel pulumi.StringPtrInput      `pulumi:"customLabel"`
	FieldId     pulumi.StringInput         `pulumi:"fieldId"`
	Visibility  AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisPivotTableFieldOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableFieldOption)(nil)).Elem()
}

func (i AnalysisPivotTableFieldOptionArgs) ToAnalysisPivotTableFieldOptionOutput() AnalysisPivotTableFieldOptionOutput {
	return i.ToAnalysisPivotTableFieldOptionOutputWithContext(context.Background())
}

func (i AnalysisPivotTableFieldOptionArgs) ToAnalysisPivotTableFieldOptionOutputWithContext(ctx context.Context) AnalysisPivotTableFieldOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableFieldOptionOutput)
}

// AnalysisPivotTableFieldOptionArrayInput is an input type that accepts AnalysisPivotTableFieldOptionArray and AnalysisPivotTableFieldOptionArrayOutput values.
// You can construct a concrete instance of `AnalysisPivotTableFieldOptionArrayInput` via:
//
//	AnalysisPivotTableFieldOptionArray{ AnalysisPivotTableFieldOptionArgs{...} }
type AnalysisPivotTableFieldOptionArrayInput interface {
	pulumi.Input

	ToAnalysisPivotTableFieldOptionArrayOutput() AnalysisPivotTableFieldOptionArrayOutput
	ToAnalysisPivotTableFieldOptionArrayOutputWithContext(context.Context) AnalysisPivotTableFieldOptionArrayOutput
}

type AnalysisPivotTableFieldOptionArray []AnalysisPivotTableFieldOptionInput

func (AnalysisPivotTableFieldOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisPivotTableFieldOption)(nil)).Elem()
}

func (i AnalysisPivotTableFieldOptionArray) ToAnalysisPivotTableFieldOptionArrayOutput() AnalysisPivotTableFieldOptionArrayOutput {
	return i.ToAnalysisPivotTableFieldOptionArrayOutputWithContext(context.Background())
}

func (i AnalysisPivotTableFieldOptionArray) ToAnalysisPivotTableFieldOptionArrayOutputWithContext(ctx context.Context) AnalysisPivotTableFieldOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableFieldOptionArrayOutput)
}

type AnalysisPivotTableFieldOptionOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableFieldOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableFieldOption)(nil)).Elem()
}

func (o AnalysisPivotTableFieldOptionOutput) ToAnalysisPivotTableFieldOptionOutput() AnalysisPivotTableFieldOptionOutput {
	return o
}

func (o AnalysisPivotTableFieldOptionOutput) ToAnalysisPivotTableFieldOptionOutputWithContext(ctx context.Context) AnalysisPivotTableFieldOptionOutput {
	return o
}

func (o AnalysisPivotTableFieldOptionOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableFieldOption) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o AnalysisPivotTableFieldOptionOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisPivotTableFieldOption) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisPivotTableFieldOptionOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableFieldOption) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisPivotTableFieldOptionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableFieldOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisPivotTableFieldOption)(nil)).Elem()
}

func (o AnalysisPivotTableFieldOptionArrayOutput) ToAnalysisPivotTableFieldOptionArrayOutput() AnalysisPivotTableFieldOptionArrayOutput {
	return o
}

func (o AnalysisPivotTableFieldOptionArrayOutput) ToAnalysisPivotTableFieldOptionArrayOutputWithContext(ctx context.Context) AnalysisPivotTableFieldOptionArrayOutput {
	return o
}

func (o AnalysisPivotTableFieldOptionArrayOutput) Index(i pulumi.IntInput) AnalysisPivotTableFieldOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisPivotTableFieldOption {
		return vs[0].([]AnalysisPivotTableFieldOption)[vs[1].(int)]
	}).(AnalysisPivotTableFieldOptionOutput)
}

type AnalysisPivotTableFieldOptions struct {
	DataPathOptions      []AnalysisPivotTableDataPathOption `pulumi:"dataPathOptions"`
	SelectedFieldOptions []AnalysisPivotTableFieldOption    `pulumi:"selectedFieldOptions"`
}

// AnalysisPivotTableFieldOptionsInput is an input type that accepts AnalysisPivotTableFieldOptionsArgs and AnalysisPivotTableFieldOptionsOutput values.
// You can construct a concrete instance of `AnalysisPivotTableFieldOptionsInput` via:
//
//	AnalysisPivotTableFieldOptionsArgs{...}
type AnalysisPivotTableFieldOptionsInput interface {
	pulumi.Input

	ToAnalysisPivotTableFieldOptionsOutput() AnalysisPivotTableFieldOptionsOutput
	ToAnalysisPivotTableFieldOptionsOutputWithContext(context.Context) AnalysisPivotTableFieldOptionsOutput
}

type AnalysisPivotTableFieldOptionsArgs struct {
	DataPathOptions      AnalysisPivotTableDataPathOptionArrayInput `pulumi:"dataPathOptions"`
	SelectedFieldOptions AnalysisPivotTableFieldOptionArrayInput    `pulumi:"selectedFieldOptions"`
}

func (AnalysisPivotTableFieldOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableFieldOptions)(nil)).Elem()
}

func (i AnalysisPivotTableFieldOptionsArgs) ToAnalysisPivotTableFieldOptionsOutput() AnalysisPivotTableFieldOptionsOutput {
	return i.ToAnalysisPivotTableFieldOptionsOutputWithContext(context.Background())
}

func (i AnalysisPivotTableFieldOptionsArgs) ToAnalysisPivotTableFieldOptionsOutputWithContext(ctx context.Context) AnalysisPivotTableFieldOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableFieldOptionsOutput)
}

func (i AnalysisPivotTableFieldOptionsArgs) ToAnalysisPivotTableFieldOptionsPtrOutput() AnalysisPivotTableFieldOptionsPtrOutput {
	return i.ToAnalysisPivotTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableFieldOptionsArgs) ToAnalysisPivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableFieldOptionsOutput).ToAnalysisPivotTableFieldOptionsPtrOutputWithContext(ctx)
}

// AnalysisPivotTableFieldOptionsPtrInput is an input type that accepts AnalysisPivotTableFieldOptionsArgs, AnalysisPivotTableFieldOptionsPtr and AnalysisPivotTableFieldOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableFieldOptionsPtrInput` via:
//
//	        AnalysisPivotTableFieldOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableFieldOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableFieldOptionsPtrOutput() AnalysisPivotTableFieldOptionsPtrOutput
	ToAnalysisPivotTableFieldOptionsPtrOutputWithContext(context.Context) AnalysisPivotTableFieldOptionsPtrOutput
}

type analysisPivotTableFieldOptionsPtrType AnalysisPivotTableFieldOptionsArgs

func AnalysisPivotTableFieldOptionsPtr(v *AnalysisPivotTableFieldOptionsArgs) AnalysisPivotTableFieldOptionsPtrInput {
	return (*analysisPivotTableFieldOptionsPtrType)(v)
}

func (*analysisPivotTableFieldOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableFieldOptions)(nil)).Elem()
}

func (i *analysisPivotTableFieldOptionsPtrType) ToAnalysisPivotTableFieldOptionsPtrOutput() AnalysisPivotTableFieldOptionsPtrOutput {
	return i.ToAnalysisPivotTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableFieldOptionsPtrType) ToAnalysisPivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableFieldOptionsPtrOutput)
}

type AnalysisPivotTableFieldOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableFieldOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableFieldOptions)(nil)).Elem()
}

func (o AnalysisPivotTableFieldOptionsOutput) ToAnalysisPivotTableFieldOptionsOutput() AnalysisPivotTableFieldOptionsOutput {
	return o
}

func (o AnalysisPivotTableFieldOptionsOutput) ToAnalysisPivotTableFieldOptionsOutputWithContext(ctx context.Context) AnalysisPivotTableFieldOptionsOutput {
	return o
}

func (o AnalysisPivotTableFieldOptionsOutput) ToAnalysisPivotTableFieldOptionsPtrOutput() AnalysisPivotTableFieldOptionsPtrOutput {
	return o.ToAnalysisPivotTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableFieldOptionsOutput) ToAnalysisPivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableFieldOptions) *AnalysisPivotTableFieldOptions {
		return &v
	}).(AnalysisPivotTableFieldOptionsPtrOutput)
}

func (o AnalysisPivotTableFieldOptionsOutput) DataPathOptions() AnalysisPivotTableDataPathOptionArrayOutput {
	return o.ApplyT(func(v AnalysisPivotTableFieldOptions) []AnalysisPivotTableDataPathOption { return v.DataPathOptions }).(AnalysisPivotTableDataPathOptionArrayOutput)
}

func (o AnalysisPivotTableFieldOptionsOutput) SelectedFieldOptions() AnalysisPivotTableFieldOptionArrayOutput {
	return o.ApplyT(func(v AnalysisPivotTableFieldOptions) []AnalysisPivotTableFieldOption { return v.SelectedFieldOptions }).(AnalysisPivotTableFieldOptionArrayOutput)
}

type AnalysisPivotTableFieldOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableFieldOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableFieldOptions)(nil)).Elem()
}

func (o AnalysisPivotTableFieldOptionsPtrOutput) ToAnalysisPivotTableFieldOptionsPtrOutput() AnalysisPivotTableFieldOptionsPtrOutput {
	return o
}

func (o AnalysisPivotTableFieldOptionsPtrOutput) ToAnalysisPivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldOptionsPtrOutput {
	return o
}

func (o AnalysisPivotTableFieldOptionsPtrOutput) Elem() AnalysisPivotTableFieldOptionsOutput {
	return o.ApplyT(func(v *AnalysisPivotTableFieldOptions) AnalysisPivotTableFieldOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableFieldOptions
		return ret
	}).(AnalysisPivotTableFieldOptionsOutput)
}

func (o AnalysisPivotTableFieldOptionsPtrOutput) DataPathOptions() AnalysisPivotTableDataPathOptionArrayOutput {
	return o.ApplyT(func(v *AnalysisPivotTableFieldOptions) []AnalysisPivotTableDataPathOption {
		if v == nil {
			return nil
		}
		return v.DataPathOptions
	}).(AnalysisPivotTableDataPathOptionArrayOutput)
}

func (o AnalysisPivotTableFieldOptionsPtrOutput) SelectedFieldOptions() AnalysisPivotTableFieldOptionArrayOutput {
	return o.ApplyT(func(v *AnalysisPivotTableFieldOptions) []AnalysisPivotTableFieldOption {
		if v == nil {
			return nil
		}
		return v.SelectedFieldOptions
	}).(AnalysisPivotTableFieldOptionArrayOutput)
}

type AnalysisPivotTableFieldSubtotalOptions struct {
	FieldId *string `pulumi:"fieldId"`
}

// AnalysisPivotTableFieldSubtotalOptionsInput is an input type that accepts AnalysisPivotTableFieldSubtotalOptionsArgs and AnalysisPivotTableFieldSubtotalOptionsOutput values.
// You can construct a concrete instance of `AnalysisPivotTableFieldSubtotalOptionsInput` via:
//
//	AnalysisPivotTableFieldSubtotalOptionsArgs{...}
type AnalysisPivotTableFieldSubtotalOptionsInput interface {
	pulumi.Input

	ToAnalysisPivotTableFieldSubtotalOptionsOutput() AnalysisPivotTableFieldSubtotalOptionsOutput
	ToAnalysisPivotTableFieldSubtotalOptionsOutputWithContext(context.Context) AnalysisPivotTableFieldSubtotalOptionsOutput
}

type AnalysisPivotTableFieldSubtotalOptionsArgs struct {
	FieldId pulumi.StringPtrInput `pulumi:"fieldId"`
}

func (AnalysisPivotTableFieldSubtotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (i AnalysisPivotTableFieldSubtotalOptionsArgs) ToAnalysisPivotTableFieldSubtotalOptionsOutput() AnalysisPivotTableFieldSubtotalOptionsOutput {
	return i.ToAnalysisPivotTableFieldSubtotalOptionsOutputWithContext(context.Background())
}

func (i AnalysisPivotTableFieldSubtotalOptionsArgs) ToAnalysisPivotTableFieldSubtotalOptionsOutputWithContext(ctx context.Context) AnalysisPivotTableFieldSubtotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableFieldSubtotalOptionsOutput)
}

// AnalysisPivotTableFieldSubtotalOptionsArrayInput is an input type that accepts AnalysisPivotTableFieldSubtotalOptionsArray and AnalysisPivotTableFieldSubtotalOptionsArrayOutput values.
// You can construct a concrete instance of `AnalysisPivotTableFieldSubtotalOptionsArrayInput` via:
//
//	AnalysisPivotTableFieldSubtotalOptionsArray{ AnalysisPivotTableFieldSubtotalOptionsArgs{...} }
type AnalysisPivotTableFieldSubtotalOptionsArrayInput interface {
	pulumi.Input

	ToAnalysisPivotTableFieldSubtotalOptionsArrayOutput() AnalysisPivotTableFieldSubtotalOptionsArrayOutput
	ToAnalysisPivotTableFieldSubtotalOptionsArrayOutputWithContext(context.Context) AnalysisPivotTableFieldSubtotalOptionsArrayOutput
}

type AnalysisPivotTableFieldSubtotalOptionsArray []AnalysisPivotTableFieldSubtotalOptionsInput

func (AnalysisPivotTableFieldSubtotalOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisPivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (i AnalysisPivotTableFieldSubtotalOptionsArray) ToAnalysisPivotTableFieldSubtotalOptionsArrayOutput() AnalysisPivotTableFieldSubtotalOptionsArrayOutput {
	return i.ToAnalysisPivotTableFieldSubtotalOptionsArrayOutputWithContext(context.Background())
}

func (i AnalysisPivotTableFieldSubtotalOptionsArray) ToAnalysisPivotTableFieldSubtotalOptionsArrayOutputWithContext(ctx context.Context) AnalysisPivotTableFieldSubtotalOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableFieldSubtotalOptionsArrayOutput)
}

type AnalysisPivotTableFieldSubtotalOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableFieldSubtotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (o AnalysisPivotTableFieldSubtotalOptionsOutput) ToAnalysisPivotTableFieldSubtotalOptionsOutput() AnalysisPivotTableFieldSubtotalOptionsOutput {
	return o
}

func (o AnalysisPivotTableFieldSubtotalOptionsOutput) ToAnalysisPivotTableFieldSubtotalOptionsOutputWithContext(ctx context.Context) AnalysisPivotTableFieldSubtotalOptionsOutput {
	return o
}

func (o AnalysisPivotTableFieldSubtotalOptionsOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableFieldSubtotalOptions) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

type AnalysisPivotTableFieldSubtotalOptionsArrayOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableFieldSubtotalOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisPivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (o AnalysisPivotTableFieldSubtotalOptionsArrayOutput) ToAnalysisPivotTableFieldSubtotalOptionsArrayOutput() AnalysisPivotTableFieldSubtotalOptionsArrayOutput {
	return o
}

func (o AnalysisPivotTableFieldSubtotalOptionsArrayOutput) ToAnalysisPivotTableFieldSubtotalOptionsArrayOutputWithContext(ctx context.Context) AnalysisPivotTableFieldSubtotalOptionsArrayOutput {
	return o
}

func (o AnalysisPivotTableFieldSubtotalOptionsArrayOutput) Index(i pulumi.IntInput) AnalysisPivotTableFieldSubtotalOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisPivotTableFieldSubtotalOptions {
		return vs[0].([]AnalysisPivotTableFieldSubtotalOptions)[vs[1].(int)]
	}).(AnalysisPivotTableFieldSubtotalOptionsOutput)
}

type AnalysisPivotTableFieldWells struct {
	PivotTableAggregatedFieldWells *AnalysisPivotTableAggregatedFieldWells `pulumi:"pivotTableAggregatedFieldWells"`
}

// AnalysisPivotTableFieldWellsInput is an input type that accepts AnalysisPivotTableFieldWellsArgs and AnalysisPivotTableFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisPivotTableFieldWellsInput` via:
//
//	AnalysisPivotTableFieldWellsArgs{...}
type AnalysisPivotTableFieldWellsInput interface {
	pulumi.Input

	ToAnalysisPivotTableFieldWellsOutput() AnalysisPivotTableFieldWellsOutput
	ToAnalysisPivotTableFieldWellsOutputWithContext(context.Context) AnalysisPivotTableFieldWellsOutput
}

type AnalysisPivotTableFieldWellsArgs struct {
	PivotTableAggregatedFieldWells AnalysisPivotTableAggregatedFieldWellsPtrInput `pulumi:"pivotTableAggregatedFieldWells"`
}

func (AnalysisPivotTableFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableFieldWells)(nil)).Elem()
}

func (i AnalysisPivotTableFieldWellsArgs) ToAnalysisPivotTableFieldWellsOutput() AnalysisPivotTableFieldWellsOutput {
	return i.ToAnalysisPivotTableFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisPivotTableFieldWellsArgs) ToAnalysisPivotTableFieldWellsOutputWithContext(ctx context.Context) AnalysisPivotTableFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableFieldWellsOutput)
}

func (i AnalysisPivotTableFieldWellsArgs) ToAnalysisPivotTableFieldWellsPtrOutput() AnalysisPivotTableFieldWellsPtrOutput {
	return i.ToAnalysisPivotTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableFieldWellsArgs) ToAnalysisPivotTableFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableFieldWellsOutput).ToAnalysisPivotTableFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisPivotTableFieldWellsPtrInput is an input type that accepts AnalysisPivotTableFieldWellsArgs, AnalysisPivotTableFieldWellsPtr and AnalysisPivotTableFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableFieldWellsPtrInput` via:
//
//	        AnalysisPivotTableFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableFieldWellsPtrOutput() AnalysisPivotTableFieldWellsPtrOutput
	ToAnalysisPivotTableFieldWellsPtrOutputWithContext(context.Context) AnalysisPivotTableFieldWellsPtrOutput
}

type analysisPivotTableFieldWellsPtrType AnalysisPivotTableFieldWellsArgs

func AnalysisPivotTableFieldWellsPtr(v *AnalysisPivotTableFieldWellsArgs) AnalysisPivotTableFieldWellsPtrInput {
	return (*analysisPivotTableFieldWellsPtrType)(v)
}

func (*analysisPivotTableFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableFieldWells)(nil)).Elem()
}

func (i *analysisPivotTableFieldWellsPtrType) ToAnalysisPivotTableFieldWellsPtrOutput() AnalysisPivotTableFieldWellsPtrOutput {
	return i.ToAnalysisPivotTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableFieldWellsPtrType) ToAnalysisPivotTableFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableFieldWellsPtrOutput)
}

type AnalysisPivotTableFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableFieldWells)(nil)).Elem()
}

func (o AnalysisPivotTableFieldWellsOutput) ToAnalysisPivotTableFieldWellsOutput() AnalysisPivotTableFieldWellsOutput {
	return o
}

func (o AnalysisPivotTableFieldWellsOutput) ToAnalysisPivotTableFieldWellsOutputWithContext(ctx context.Context) AnalysisPivotTableFieldWellsOutput {
	return o
}

func (o AnalysisPivotTableFieldWellsOutput) ToAnalysisPivotTableFieldWellsPtrOutput() AnalysisPivotTableFieldWellsPtrOutput {
	return o.ToAnalysisPivotTableFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableFieldWellsOutput) ToAnalysisPivotTableFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableFieldWells) *AnalysisPivotTableFieldWells {
		return &v
	}).(AnalysisPivotTableFieldWellsPtrOutput)
}

func (o AnalysisPivotTableFieldWellsOutput) PivotTableAggregatedFieldWells() AnalysisPivotTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableFieldWells) *AnalysisPivotTableAggregatedFieldWells {
		return v.PivotTableAggregatedFieldWells
	}).(AnalysisPivotTableAggregatedFieldWellsPtrOutput)
}

type AnalysisPivotTableFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableFieldWells)(nil)).Elem()
}

func (o AnalysisPivotTableFieldWellsPtrOutput) ToAnalysisPivotTableFieldWellsPtrOutput() AnalysisPivotTableFieldWellsPtrOutput {
	return o
}

func (o AnalysisPivotTableFieldWellsPtrOutput) ToAnalysisPivotTableFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldWellsPtrOutput {
	return o
}

func (o AnalysisPivotTableFieldWellsPtrOutput) Elem() AnalysisPivotTableFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisPivotTableFieldWells) AnalysisPivotTableFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableFieldWells
		return ret
	}).(AnalysisPivotTableFieldWellsOutput)
}

func (o AnalysisPivotTableFieldWellsPtrOutput) PivotTableAggregatedFieldWells() AnalysisPivotTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableFieldWells) *AnalysisPivotTableAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.PivotTableAggregatedFieldWells
	}).(AnalysisPivotTableAggregatedFieldWellsPtrOutput)
}

type AnalysisPivotTableOptions struct {
	CellStyle                *AnalysisTableCellStyle            `pulumi:"cellStyle"`
	ColumnHeaderStyle        *AnalysisTableCellStyle            `pulumi:"columnHeaderStyle"`
	ColumnNamesVisibility    *AnalysisVisibility                `pulumi:"columnNamesVisibility"`
	MetricPlacement          *AnalysisPivotTableMetricPlacement `pulumi:"metricPlacement"`
	RowAlternateColorOptions *AnalysisRowAlternateColorOptions  `pulumi:"rowAlternateColorOptions"`
	RowFieldNamesStyle       *AnalysisTableCellStyle            `pulumi:"rowFieldNamesStyle"`
	RowHeaderStyle           *AnalysisTableCellStyle            `pulumi:"rowHeaderStyle"`
	SingleMetricVisibility   *AnalysisVisibility                `pulumi:"singleMetricVisibility"`
	ToggleButtonsVisibility  *AnalysisVisibility                `pulumi:"toggleButtonsVisibility"`
}

// AnalysisPivotTableOptionsInput is an input type that accepts AnalysisPivotTableOptionsArgs and AnalysisPivotTableOptionsOutput values.
// You can construct a concrete instance of `AnalysisPivotTableOptionsInput` via:
//
//	AnalysisPivotTableOptionsArgs{...}
type AnalysisPivotTableOptionsInput interface {
	pulumi.Input

	ToAnalysisPivotTableOptionsOutput() AnalysisPivotTableOptionsOutput
	ToAnalysisPivotTableOptionsOutputWithContext(context.Context) AnalysisPivotTableOptionsOutput
}

type AnalysisPivotTableOptionsArgs struct {
	CellStyle                AnalysisTableCellStylePtrInput            `pulumi:"cellStyle"`
	ColumnHeaderStyle        AnalysisTableCellStylePtrInput            `pulumi:"columnHeaderStyle"`
	ColumnNamesVisibility    AnalysisVisibilityPtrInput                `pulumi:"columnNamesVisibility"`
	MetricPlacement          AnalysisPivotTableMetricPlacementPtrInput `pulumi:"metricPlacement"`
	RowAlternateColorOptions AnalysisRowAlternateColorOptionsPtrInput  `pulumi:"rowAlternateColorOptions"`
	RowFieldNamesStyle       AnalysisTableCellStylePtrInput            `pulumi:"rowFieldNamesStyle"`
	RowHeaderStyle           AnalysisTableCellStylePtrInput            `pulumi:"rowHeaderStyle"`
	SingleMetricVisibility   AnalysisVisibilityPtrInput                `pulumi:"singleMetricVisibility"`
	ToggleButtonsVisibility  AnalysisVisibilityPtrInput                `pulumi:"toggleButtonsVisibility"`
}

func (AnalysisPivotTableOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableOptions)(nil)).Elem()
}

func (i AnalysisPivotTableOptionsArgs) ToAnalysisPivotTableOptionsOutput() AnalysisPivotTableOptionsOutput {
	return i.ToAnalysisPivotTableOptionsOutputWithContext(context.Background())
}

func (i AnalysisPivotTableOptionsArgs) ToAnalysisPivotTableOptionsOutputWithContext(ctx context.Context) AnalysisPivotTableOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableOptionsOutput)
}

func (i AnalysisPivotTableOptionsArgs) ToAnalysisPivotTableOptionsPtrOutput() AnalysisPivotTableOptionsPtrOutput {
	return i.ToAnalysisPivotTableOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableOptionsArgs) ToAnalysisPivotTableOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableOptionsOutput).ToAnalysisPivotTableOptionsPtrOutputWithContext(ctx)
}

// AnalysisPivotTableOptionsPtrInput is an input type that accepts AnalysisPivotTableOptionsArgs, AnalysisPivotTableOptionsPtr and AnalysisPivotTableOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableOptionsPtrInput` via:
//
//	        AnalysisPivotTableOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableOptionsPtrOutput() AnalysisPivotTableOptionsPtrOutput
	ToAnalysisPivotTableOptionsPtrOutputWithContext(context.Context) AnalysisPivotTableOptionsPtrOutput
}

type analysisPivotTableOptionsPtrType AnalysisPivotTableOptionsArgs

func AnalysisPivotTableOptionsPtr(v *AnalysisPivotTableOptionsArgs) AnalysisPivotTableOptionsPtrInput {
	return (*analysisPivotTableOptionsPtrType)(v)
}

func (*analysisPivotTableOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableOptions)(nil)).Elem()
}

func (i *analysisPivotTableOptionsPtrType) ToAnalysisPivotTableOptionsPtrOutput() AnalysisPivotTableOptionsPtrOutput {
	return i.ToAnalysisPivotTableOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableOptionsPtrType) ToAnalysisPivotTableOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableOptionsPtrOutput)
}

type AnalysisPivotTableOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableOptions)(nil)).Elem()
}

func (o AnalysisPivotTableOptionsOutput) ToAnalysisPivotTableOptionsOutput() AnalysisPivotTableOptionsOutput {
	return o
}

func (o AnalysisPivotTableOptionsOutput) ToAnalysisPivotTableOptionsOutputWithContext(ctx context.Context) AnalysisPivotTableOptionsOutput {
	return o
}

func (o AnalysisPivotTableOptionsOutput) ToAnalysisPivotTableOptionsPtrOutput() AnalysisPivotTableOptionsPtrOutput {
	return o.ToAnalysisPivotTableOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableOptionsOutput) ToAnalysisPivotTableOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableOptions) *AnalysisPivotTableOptions {
		return &v
	}).(AnalysisPivotTableOptionsPtrOutput)
}

func (o AnalysisPivotTableOptionsOutput) CellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableOptions) *AnalysisTableCellStyle { return v.CellStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTableOptionsOutput) ColumnHeaderStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableOptions) *AnalysisTableCellStyle { return v.ColumnHeaderStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTableOptionsOutput) ColumnNamesVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableOptions) *AnalysisVisibility { return v.ColumnNamesVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPivotTableOptionsOutput) MetricPlacement() AnalysisPivotTableMetricPlacementPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableOptions) *AnalysisPivotTableMetricPlacement { return v.MetricPlacement }).(AnalysisPivotTableMetricPlacementPtrOutput)
}

func (o AnalysisPivotTableOptionsOutput) RowAlternateColorOptions() AnalysisRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableOptions) *AnalysisRowAlternateColorOptions { return v.RowAlternateColorOptions }).(AnalysisRowAlternateColorOptionsPtrOutput)
}

func (o AnalysisPivotTableOptionsOutput) RowFieldNamesStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableOptions) *AnalysisTableCellStyle { return v.RowFieldNamesStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTableOptionsOutput) RowHeaderStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableOptions) *AnalysisTableCellStyle { return v.RowHeaderStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTableOptionsOutput) SingleMetricVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableOptions) *AnalysisVisibility { return v.SingleMetricVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPivotTableOptionsOutput) ToggleButtonsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableOptions) *AnalysisVisibility { return v.ToggleButtonsVisibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisPivotTableOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableOptions)(nil)).Elem()
}

func (o AnalysisPivotTableOptionsPtrOutput) ToAnalysisPivotTableOptionsPtrOutput() AnalysisPivotTableOptionsPtrOutput {
	return o
}

func (o AnalysisPivotTableOptionsPtrOutput) ToAnalysisPivotTableOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableOptionsPtrOutput {
	return o
}

func (o AnalysisPivotTableOptionsPtrOutput) Elem() AnalysisPivotTableOptionsOutput {
	return o.ApplyT(func(v *AnalysisPivotTableOptions) AnalysisPivotTableOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableOptions
		return ret
	}).(AnalysisPivotTableOptionsOutput)
}

func (o AnalysisPivotTableOptionsPtrOutput) CellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.CellStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTableOptionsPtrOutput) ColumnHeaderStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.ColumnHeaderStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTableOptionsPtrOutput) ColumnNamesVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.ColumnNamesVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPivotTableOptionsPtrOutput) MetricPlacement() AnalysisPivotTableMetricPlacementPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableOptions) *AnalysisPivotTableMetricPlacement {
		if v == nil {
			return nil
		}
		return v.MetricPlacement
	}).(AnalysisPivotTableMetricPlacementPtrOutput)
}

func (o AnalysisPivotTableOptionsPtrOutput) RowAlternateColorOptions() AnalysisRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableOptions) *AnalysisRowAlternateColorOptions {
		if v == nil {
			return nil
		}
		return v.RowAlternateColorOptions
	}).(AnalysisRowAlternateColorOptionsPtrOutput)
}

func (o AnalysisPivotTableOptionsPtrOutput) RowFieldNamesStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.RowFieldNamesStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTableOptionsPtrOutput) RowHeaderStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.RowHeaderStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTableOptionsPtrOutput) SingleMetricVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.SingleMetricVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPivotTableOptionsPtrOutput) ToggleButtonsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.ToggleButtonsVisibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisPivotTablePaginatedReportOptions struct {
	OverflowColumnHeaderVisibility *AnalysisVisibility `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     *AnalysisVisibility `pulumi:"verticalOverflowVisibility"`
}

// AnalysisPivotTablePaginatedReportOptionsInput is an input type that accepts AnalysisPivotTablePaginatedReportOptionsArgs and AnalysisPivotTablePaginatedReportOptionsOutput values.
// You can construct a concrete instance of `AnalysisPivotTablePaginatedReportOptionsInput` via:
//
//	AnalysisPivotTablePaginatedReportOptionsArgs{...}
type AnalysisPivotTablePaginatedReportOptionsInput interface {
	pulumi.Input

	ToAnalysisPivotTablePaginatedReportOptionsOutput() AnalysisPivotTablePaginatedReportOptionsOutput
	ToAnalysisPivotTablePaginatedReportOptionsOutputWithContext(context.Context) AnalysisPivotTablePaginatedReportOptionsOutput
}

type AnalysisPivotTablePaginatedReportOptionsArgs struct {
	OverflowColumnHeaderVisibility AnalysisVisibilityPtrInput `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     AnalysisVisibilityPtrInput `pulumi:"verticalOverflowVisibility"`
}

func (AnalysisPivotTablePaginatedReportOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTablePaginatedReportOptions)(nil)).Elem()
}

func (i AnalysisPivotTablePaginatedReportOptionsArgs) ToAnalysisPivotTablePaginatedReportOptionsOutput() AnalysisPivotTablePaginatedReportOptionsOutput {
	return i.ToAnalysisPivotTablePaginatedReportOptionsOutputWithContext(context.Background())
}

func (i AnalysisPivotTablePaginatedReportOptionsArgs) ToAnalysisPivotTablePaginatedReportOptionsOutputWithContext(ctx context.Context) AnalysisPivotTablePaginatedReportOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTablePaginatedReportOptionsOutput)
}

func (i AnalysisPivotTablePaginatedReportOptionsArgs) ToAnalysisPivotTablePaginatedReportOptionsPtrOutput() AnalysisPivotTablePaginatedReportOptionsPtrOutput {
	return i.ToAnalysisPivotTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTablePaginatedReportOptionsArgs) ToAnalysisPivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTablePaginatedReportOptionsOutput).ToAnalysisPivotTablePaginatedReportOptionsPtrOutputWithContext(ctx)
}

// AnalysisPivotTablePaginatedReportOptionsPtrInput is an input type that accepts AnalysisPivotTablePaginatedReportOptionsArgs, AnalysisPivotTablePaginatedReportOptionsPtr and AnalysisPivotTablePaginatedReportOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTablePaginatedReportOptionsPtrInput` via:
//
//	        AnalysisPivotTablePaginatedReportOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTablePaginatedReportOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTablePaginatedReportOptionsPtrOutput() AnalysisPivotTablePaginatedReportOptionsPtrOutput
	ToAnalysisPivotTablePaginatedReportOptionsPtrOutputWithContext(context.Context) AnalysisPivotTablePaginatedReportOptionsPtrOutput
}

type analysisPivotTablePaginatedReportOptionsPtrType AnalysisPivotTablePaginatedReportOptionsArgs

func AnalysisPivotTablePaginatedReportOptionsPtr(v *AnalysisPivotTablePaginatedReportOptionsArgs) AnalysisPivotTablePaginatedReportOptionsPtrInput {
	return (*analysisPivotTablePaginatedReportOptionsPtrType)(v)
}

func (*analysisPivotTablePaginatedReportOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTablePaginatedReportOptions)(nil)).Elem()
}

func (i *analysisPivotTablePaginatedReportOptionsPtrType) ToAnalysisPivotTablePaginatedReportOptionsPtrOutput() AnalysisPivotTablePaginatedReportOptionsPtrOutput {
	return i.ToAnalysisPivotTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTablePaginatedReportOptionsPtrType) ToAnalysisPivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTablePaginatedReportOptionsPtrOutput)
}

type AnalysisPivotTablePaginatedReportOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTablePaginatedReportOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTablePaginatedReportOptions)(nil)).Elem()
}

func (o AnalysisPivotTablePaginatedReportOptionsOutput) ToAnalysisPivotTablePaginatedReportOptionsOutput() AnalysisPivotTablePaginatedReportOptionsOutput {
	return o
}

func (o AnalysisPivotTablePaginatedReportOptionsOutput) ToAnalysisPivotTablePaginatedReportOptionsOutputWithContext(ctx context.Context) AnalysisPivotTablePaginatedReportOptionsOutput {
	return o
}

func (o AnalysisPivotTablePaginatedReportOptionsOutput) ToAnalysisPivotTablePaginatedReportOptionsPtrOutput() AnalysisPivotTablePaginatedReportOptionsPtrOutput {
	return o.ToAnalysisPivotTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTablePaginatedReportOptionsOutput) ToAnalysisPivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTablePaginatedReportOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTablePaginatedReportOptions) *AnalysisPivotTablePaginatedReportOptions {
		return &v
	}).(AnalysisPivotTablePaginatedReportOptionsPtrOutput)
}

func (o AnalysisPivotTablePaginatedReportOptionsOutput) OverflowColumnHeaderVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTablePaginatedReportOptions) *AnalysisVisibility {
		return v.OverflowColumnHeaderVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPivotTablePaginatedReportOptionsOutput) VerticalOverflowVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTablePaginatedReportOptions) *AnalysisVisibility {
		return v.VerticalOverflowVisibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisPivotTablePaginatedReportOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTablePaginatedReportOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTablePaginatedReportOptions)(nil)).Elem()
}

func (o AnalysisPivotTablePaginatedReportOptionsPtrOutput) ToAnalysisPivotTablePaginatedReportOptionsPtrOutput() AnalysisPivotTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o AnalysisPivotTablePaginatedReportOptionsPtrOutput) ToAnalysisPivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o AnalysisPivotTablePaginatedReportOptionsPtrOutput) Elem() AnalysisPivotTablePaginatedReportOptionsOutput {
	return o.ApplyT(func(v *AnalysisPivotTablePaginatedReportOptions) AnalysisPivotTablePaginatedReportOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTablePaginatedReportOptions
		return ret
	}).(AnalysisPivotTablePaginatedReportOptionsOutput)
}

func (o AnalysisPivotTablePaginatedReportOptionsPtrOutput) OverflowColumnHeaderVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTablePaginatedReportOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.OverflowColumnHeaderVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPivotTablePaginatedReportOptionsPtrOutput) VerticalOverflowVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTablePaginatedReportOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.VerticalOverflowVisibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisPivotTableSortBy struct {
	Column   *AnalysisColumnSort   `pulumi:"column"`
	DataPath *AnalysisDataPathSort `pulumi:"dataPath"`
	Field    *AnalysisFieldSort    `pulumi:"field"`
}

// AnalysisPivotTableSortByInput is an input type that accepts AnalysisPivotTableSortByArgs and AnalysisPivotTableSortByOutput values.
// You can construct a concrete instance of `AnalysisPivotTableSortByInput` via:
//
//	AnalysisPivotTableSortByArgs{...}
type AnalysisPivotTableSortByInput interface {
	pulumi.Input

	ToAnalysisPivotTableSortByOutput() AnalysisPivotTableSortByOutput
	ToAnalysisPivotTableSortByOutputWithContext(context.Context) AnalysisPivotTableSortByOutput
}

type AnalysisPivotTableSortByArgs struct {
	Column   AnalysisColumnSortPtrInput   `pulumi:"column"`
	DataPath AnalysisDataPathSortPtrInput `pulumi:"dataPath"`
	Field    AnalysisFieldSortPtrInput    `pulumi:"field"`
}

func (AnalysisPivotTableSortByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableSortBy)(nil)).Elem()
}

func (i AnalysisPivotTableSortByArgs) ToAnalysisPivotTableSortByOutput() AnalysisPivotTableSortByOutput {
	return i.ToAnalysisPivotTableSortByOutputWithContext(context.Background())
}

func (i AnalysisPivotTableSortByArgs) ToAnalysisPivotTableSortByOutputWithContext(ctx context.Context) AnalysisPivotTableSortByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableSortByOutput)
}

type AnalysisPivotTableSortByOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableSortByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableSortBy)(nil)).Elem()
}

func (o AnalysisPivotTableSortByOutput) ToAnalysisPivotTableSortByOutput() AnalysisPivotTableSortByOutput {
	return o
}

func (o AnalysisPivotTableSortByOutput) ToAnalysisPivotTableSortByOutputWithContext(ctx context.Context) AnalysisPivotTableSortByOutput {
	return o
}

func (o AnalysisPivotTableSortByOutput) Column() AnalysisColumnSortPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableSortBy) *AnalysisColumnSort { return v.Column }).(AnalysisColumnSortPtrOutput)
}

func (o AnalysisPivotTableSortByOutput) DataPath() AnalysisDataPathSortPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableSortBy) *AnalysisDataPathSort { return v.DataPath }).(AnalysisDataPathSortPtrOutput)
}

func (o AnalysisPivotTableSortByOutput) Field() AnalysisFieldSortPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableSortBy) *AnalysisFieldSort { return v.Field }).(AnalysisFieldSortPtrOutput)
}

type AnalysisPivotTableSortConfiguration struct {
	FieldSortOptions []AnalysisPivotFieldSortOptions `pulumi:"fieldSortOptions"`
}

// AnalysisPivotTableSortConfigurationInput is an input type that accepts AnalysisPivotTableSortConfigurationArgs and AnalysisPivotTableSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisPivotTableSortConfigurationInput` via:
//
//	AnalysisPivotTableSortConfigurationArgs{...}
type AnalysisPivotTableSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisPivotTableSortConfigurationOutput() AnalysisPivotTableSortConfigurationOutput
	ToAnalysisPivotTableSortConfigurationOutputWithContext(context.Context) AnalysisPivotTableSortConfigurationOutput
}

type AnalysisPivotTableSortConfigurationArgs struct {
	FieldSortOptions AnalysisPivotFieldSortOptionsArrayInput `pulumi:"fieldSortOptions"`
}

func (AnalysisPivotTableSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableSortConfiguration)(nil)).Elem()
}

func (i AnalysisPivotTableSortConfigurationArgs) ToAnalysisPivotTableSortConfigurationOutput() AnalysisPivotTableSortConfigurationOutput {
	return i.ToAnalysisPivotTableSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisPivotTableSortConfigurationArgs) ToAnalysisPivotTableSortConfigurationOutputWithContext(ctx context.Context) AnalysisPivotTableSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableSortConfigurationOutput)
}

func (i AnalysisPivotTableSortConfigurationArgs) ToAnalysisPivotTableSortConfigurationPtrOutput() AnalysisPivotTableSortConfigurationPtrOutput {
	return i.ToAnalysisPivotTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableSortConfigurationArgs) ToAnalysisPivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPivotTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableSortConfigurationOutput).ToAnalysisPivotTableSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisPivotTableSortConfigurationPtrInput is an input type that accepts AnalysisPivotTableSortConfigurationArgs, AnalysisPivotTableSortConfigurationPtr and AnalysisPivotTableSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableSortConfigurationPtrInput` via:
//
//	        AnalysisPivotTableSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableSortConfigurationPtrOutput() AnalysisPivotTableSortConfigurationPtrOutput
	ToAnalysisPivotTableSortConfigurationPtrOutputWithContext(context.Context) AnalysisPivotTableSortConfigurationPtrOutput
}

type analysisPivotTableSortConfigurationPtrType AnalysisPivotTableSortConfigurationArgs

func AnalysisPivotTableSortConfigurationPtr(v *AnalysisPivotTableSortConfigurationArgs) AnalysisPivotTableSortConfigurationPtrInput {
	return (*analysisPivotTableSortConfigurationPtrType)(v)
}

func (*analysisPivotTableSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableSortConfiguration)(nil)).Elem()
}

func (i *analysisPivotTableSortConfigurationPtrType) ToAnalysisPivotTableSortConfigurationPtrOutput() AnalysisPivotTableSortConfigurationPtrOutput {
	return i.ToAnalysisPivotTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableSortConfigurationPtrType) ToAnalysisPivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPivotTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableSortConfigurationPtrOutput)
}

type AnalysisPivotTableSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableSortConfiguration)(nil)).Elem()
}

func (o AnalysisPivotTableSortConfigurationOutput) ToAnalysisPivotTableSortConfigurationOutput() AnalysisPivotTableSortConfigurationOutput {
	return o
}

func (o AnalysisPivotTableSortConfigurationOutput) ToAnalysisPivotTableSortConfigurationOutputWithContext(ctx context.Context) AnalysisPivotTableSortConfigurationOutput {
	return o
}

func (o AnalysisPivotTableSortConfigurationOutput) ToAnalysisPivotTableSortConfigurationPtrOutput() AnalysisPivotTableSortConfigurationPtrOutput {
	return o.ToAnalysisPivotTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableSortConfigurationOutput) ToAnalysisPivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPivotTableSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableSortConfiguration) *AnalysisPivotTableSortConfiguration {
		return &v
	}).(AnalysisPivotTableSortConfigurationPtrOutput)
}

func (o AnalysisPivotTableSortConfigurationOutput) FieldSortOptions() AnalysisPivotFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisPivotTableSortConfiguration) []AnalysisPivotFieldSortOptions { return v.FieldSortOptions }).(AnalysisPivotFieldSortOptionsArrayOutput)
}

type AnalysisPivotTableSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableSortConfiguration)(nil)).Elem()
}

func (o AnalysisPivotTableSortConfigurationPtrOutput) ToAnalysisPivotTableSortConfigurationPtrOutput() AnalysisPivotTableSortConfigurationPtrOutput {
	return o
}

func (o AnalysisPivotTableSortConfigurationPtrOutput) ToAnalysisPivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisPivotTableSortConfigurationPtrOutput {
	return o
}

func (o AnalysisPivotTableSortConfigurationPtrOutput) Elem() AnalysisPivotTableSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisPivotTableSortConfiguration) AnalysisPivotTableSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableSortConfiguration
		return ret
	}).(AnalysisPivotTableSortConfigurationOutput)
}

func (o AnalysisPivotTableSortConfigurationPtrOutput) FieldSortOptions() AnalysisPivotFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisPivotTableSortConfiguration) []AnalysisPivotFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.FieldSortOptions
	}).(AnalysisPivotFieldSortOptionsArrayOutput)
}

type AnalysisPivotTableTotalOptions struct {
	ColumnSubtotalOptions *AnalysisSubtotalOptions   `pulumi:"columnSubtotalOptions"`
	ColumnTotalOptions    *AnalysisPivotTotalOptions `pulumi:"columnTotalOptions"`
	RowSubtotalOptions    *AnalysisSubtotalOptions   `pulumi:"rowSubtotalOptions"`
	RowTotalOptions       *AnalysisPivotTotalOptions `pulumi:"rowTotalOptions"`
}

// AnalysisPivotTableTotalOptionsInput is an input type that accepts AnalysisPivotTableTotalOptionsArgs and AnalysisPivotTableTotalOptionsOutput values.
// You can construct a concrete instance of `AnalysisPivotTableTotalOptionsInput` via:
//
//	AnalysisPivotTableTotalOptionsArgs{...}
type AnalysisPivotTableTotalOptionsInput interface {
	pulumi.Input

	ToAnalysisPivotTableTotalOptionsOutput() AnalysisPivotTableTotalOptionsOutput
	ToAnalysisPivotTableTotalOptionsOutputWithContext(context.Context) AnalysisPivotTableTotalOptionsOutput
}

type AnalysisPivotTableTotalOptionsArgs struct {
	ColumnSubtotalOptions AnalysisSubtotalOptionsPtrInput   `pulumi:"columnSubtotalOptions"`
	ColumnTotalOptions    AnalysisPivotTotalOptionsPtrInput `pulumi:"columnTotalOptions"`
	RowSubtotalOptions    AnalysisSubtotalOptionsPtrInput   `pulumi:"rowSubtotalOptions"`
	RowTotalOptions       AnalysisPivotTotalOptionsPtrInput `pulumi:"rowTotalOptions"`
}

func (AnalysisPivotTableTotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableTotalOptions)(nil)).Elem()
}

func (i AnalysisPivotTableTotalOptionsArgs) ToAnalysisPivotTableTotalOptionsOutput() AnalysisPivotTableTotalOptionsOutput {
	return i.ToAnalysisPivotTableTotalOptionsOutputWithContext(context.Background())
}

func (i AnalysisPivotTableTotalOptionsArgs) ToAnalysisPivotTableTotalOptionsOutputWithContext(ctx context.Context) AnalysisPivotTableTotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableTotalOptionsOutput)
}

func (i AnalysisPivotTableTotalOptionsArgs) ToAnalysisPivotTableTotalOptionsPtrOutput() AnalysisPivotTableTotalOptionsPtrOutput {
	return i.ToAnalysisPivotTableTotalOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableTotalOptionsArgs) ToAnalysisPivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableTotalOptionsOutput).ToAnalysisPivotTableTotalOptionsPtrOutputWithContext(ctx)
}

// AnalysisPivotTableTotalOptionsPtrInput is an input type that accepts AnalysisPivotTableTotalOptionsArgs, AnalysisPivotTableTotalOptionsPtr and AnalysisPivotTableTotalOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableTotalOptionsPtrInput` via:
//
//	        AnalysisPivotTableTotalOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableTotalOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableTotalOptionsPtrOutput() AnalysisPivotTableTotalOptionsPtrOutput
	ToAnalysisPivotTableTotalOptionsPtrOutputWithContext(context.Context) AnalysisPivotTableTotalOptionsPtrOutput
}

type analysisPivotTableTotalOptionsPtrType AnalysisPivotTableTotalOptionsArgs

func AnalysisPivotTableTotalOptionsPtr(v *AnalysisPivotTableTotalOptionsArgs) AnalysisPivotTableTotalOptionsPtrInput {
	return (*analysisPivotTableTotalOptionsPtrType)(v)
}

func (*analysisPivotTableTotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableTotalOptions)(nil)).Elem()
}

func (i *analysisPivotTableTotalOptionsPtrType) ToAnalysisPivotTableTotalOptionsPtrOutput() AnalysisPivotTableTotalOptionsPtrOutput {
	return i.ToAnalysisPivotTableTotalOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableTotalOptionsPtrType) ToAnalysisPivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableTotalOptionsPtrOutput)
}

type AnalysisPivotTableTotalOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableTotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableTotalOptions)(nil)).Elem()
}

func (o AnalysisPivotTableTotalOptionsOutput) ToAnalysisPivotTableTotalOptionsOutput() AnalysisPivotTableTotalOptionsOutput {
	return o
}

func (o AnalysisPivotTableTotalOptionsOutput) ToAnalysisPivotTableTotalOptionsOutputWithContext(ctx context.Context) AnalysisPivotTableTotalOptionsOutput {
	return o
}

func (o AnalysisPivotTableTotalOptionsOutput) ToAnalysisPivotTableTotalOptionsPtrOutput() AnalysisPivotTableTotalOptionsPtrOutput {
	return o.ToAnalysisPivotTableTotalOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableTotalOptionsOutput) ToAnalysisPivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableTotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableTotalOptions) *AnalysisPivotTableTotalOptions {
		return &v
	}).(AnalysisPivotTableTotalOptionsPtrOutput)
}

func (o AnalysisPivotTableTotalOptionsOutput) ColumnSubtotalOptions() AnalysisSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableTotalOptions) *AnalysisSubtotalOptions { return v.ColumnSubtotalOptions }).(AnalysisSubtotalOptionsPtrOutput)
}

func (o AnalysisPivotTableTotalOptionsOutput) ColumnTotalOptions() AnalysisPivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableTotalOptions) *AnalysisPivotTotalOptions { return v.ColumnTotalOptions }).(AnalysisPivotTotalOptionsPtrOutput)
}

func (o AnalysisPivotTableTotalOptionsOutput) RowSubtotalOptions() AnalysisSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableTotalOptions) *AnalysisSubtotalOptions { return v.RowSubtotalOptions }).(AnalysisSubtotalOptionsPtrOutput)
}

func (o AnalysisPivotTableTotalOptionsOutput) RowTotalOptions() AnalysisPivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableTotalOptions) *AnalysisPivotTotalOptions { return v.RowTotalOptions }).(AnalysisPivotTotalOptionsPtrOutput)
}

type AnalysisPivotTableTotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableTotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableTotalOptions)(nil)).Elem()
}

func (o AnalysisPivotTableTotalOptionsPtrOutput) ToAnalysisPivotTableTotalOptionsPtrOutput() AnalysisPivotTableTotalOptionsPtrOutput {
	return o
}

func (o AnalysisPivotTableTotalOptionsPtrOutput) ToAnalysisPivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTableTotalOptionsPtrOutput {
	return o
}

func (o AnalysisPivotTableTotalOptionsPtrOutput) Elem() AnalysisPivotTableTotalOptionsOutput {
	return o.ApplyT(func(v *AnalysisPivotTableTotalOptions) AnalysisPivotTableTotalOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableTotalOptions
		return ret
	}).(AnalysisPivotTableTotalOptionsOutput)
}

func (o AnalysisPivotTableTotalOptionsPtrOutput) ColumnSubtotalOptions() AnalysisSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableTotalOptions) *AnalysisSubtotalOptions {
		if v == nil {
			return nil
		}
		return v.ColumnSubtotalOptions
	}).(AnalysisSubtotalOptionsPtrOutput)
}

func (o AnalysisPivotTableTotalOptionsPtrOutput) ColumnTotalOptions() AnalysisPivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableTotalOptions) *AnalysisPivotTotalOptions {
		if v == nil {
			return nil
		}
		return v.ColumnTotalOptions
	}).(AnalysisPivotTotalOptionsPtrOutput)
}

func (o AnalysisPivotTableTotalOptionsPtrOutput) RowSubtotalOptions() AnalysisSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableTotalOptions) *AnalysisSubtotalOptions {
		if v == nil {
			return nil
		}
		return v.RowSubtotalOptions
	}).(AnalysisSubtotalOptionsPtrOutput)
}

func (o AnalysisPivotTableTotalOptionsPtrOutput) RowTotalOptions() AnalysisPivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableTotalOptions) *AnalysisPivotTotalOptions {
		if v == nil {
			return nil
		}
		return v.RowTotalOptions
	}).(AnalysisPivotTotalOptionsPtrOutput)
}

type AnalysisPivotTableVisual struct {
	Actions               []AnalysisVisualCustomAction             `pulumi:"actions"`
	ChartConfiguration    *AnalysisPivotTableConfiguration         `pulumi:"chartConfiguration"`
	ConditionalFormatting *AnalysisPivotTableConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *AnalysisVisualSubtitleLabelOptions      `pulumi:"subtitle"`
	Title                 *AnalysisVisualTitleLabelOptions         `pulumi:"title"`
	VisualId              string                                   `pulumi:"visualId"`
}

// AnalysisPivotTableVisualInput is an input type that accepts AnalysisPivotTableVisualArgs and AnalysisPivotTableVisualOutput values.
// You can construct a concrete instance of `AnalysisPivotTableVisualInput` via:
//
//	AnalysisPivotTableVisualArgs{...}
type AnalysisPivotTableVisualInput interface {
	pulumi.Input

	ToAnalysisPivotTableVisualOutput() AnalysisPivotTableVisualOutput
	ToAnalysisPivotTableVisualOutputWithContext(context.Context) AnalysisPivotTableVisualOutput
}

type AnalysisPivotTableVisualArgs struct {
	Actions               AnalysisVisualCustomActionArrayInput            `pulumi:"actions"`
	ChartConfiguration    AnalysisPivotTableConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ConditionalFormatting AnalysisPivotTableConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              AnalysisVisualSubtitleLabelOptionsPtrInput      `pulumi:"subtitle"`
	Title                 AnalysisVisualTitleLabelOptionsPtrInput         `pulumi:"title"`
	VisualId              pulumi.StringInput                              `pulumi:"visualId"`
}

func (AnalysisPivotTableVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableVisual)(nil)).Elem()
}

func (i AnalysisPivotTableVisualArgs) ToAnalysisPivotTableVisualOutput() AnalysisPivotTableVisualOutput {
	return i.ToAnalysisPivotTableVisualOutputWithContext(context.Background())
}

func (i AnalysisPivotTableVisualArgs) ToAnalysisPivotTableVisualOutputWithContext(ctx context.Context) AnalysisPivotTableVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableVisualOutput)
}

func (i AnalysisPivotTableVisualArgs) ToAnalysisPivotTableVisualPtrOutput() AnalysisPivotTableVisualPtrOutput {
	return i.ToAnalysisPivotTableVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTableVisualArgs) ToAnalysisPivotTableVisualPtrOutputWithContext(ctx context.Context) AnalysisPivotTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableVisualOutput).ToAnalysisPivotTableVisualPtrOutputWithContext(ctx)
}

// AnalysisPivotTableVisualPtrInput is an input type that accepts AnalysisPivotTableVisualArgs, AnalysisPivotTableVisualPtr and AnalysisPivotTableVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTableVisualPtrInput` via:
//
//	        AnalysisPivotTableVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTableVisualPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableVisualPtrOutput() AnalysisPivotTableVisualPtrOutput
	ToAnalysisPivotTableVisualPtrOutputWithContext(context.Context) AnalysisPivotTableVisualPtrOutput
}

type analysisPivotTableVisualPtrType AnalysisPivotTableVisualArgs

func AnalysisPivotTableVisualPtr(v *AnalysisPivotTableVisualArgs) AnalysisPivotTableVisualPtrInput {
	return (*analysisPivotTableVisualPtrType)(v)
}

func (*analysisPivotTableVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableVisual)(nil)).Elem()
}

func (i *analysisPivotTableVisualPtrType) ToAnalysisPivotTableVisualPtrOutput() AnalysisPivotTableVisualPtrOutput {
	return i.ToAnalysisPivotTableVisualPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTableVisualPtrType) ToAnalysisPivotTableVisualPtrOutputWithContext(ctx context.Context) AnalysisPivotTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTableVisualPtrOutput)
}

type AnalysisPivotTableVisualOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableVisual)(nil)).Elem()
}

func (o AnalysisPivotTableVisualOutput) ToAnalysisPivotTableVisualOutput() AnalysisPivotTableVisualOutput {
	return o
}

func (o AnalysisPivotTableVisualOutput) ToAnalysisPivotTableVisualOutputWithContext(ctx context.Context) AnalysisPivotTableVisualOutput {
	return o
}

func (o AnalysisPivotTableVisualOutput) ToAnalysisPivotTableVisualPtrOutput() AnalysisPivotTableVisualPtrOutput {
	return o.ToAnalysisPivotTableVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableVisualOutput) ToAnalysisPivotTableVisualPtrOutputWithContext(ctx context.Context) AnalysisPivotTableVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableVisual) *AnalysisPivotTableVisual {
		return &v
	}).(AnalysisPivotTableVisualPtrOutput)
}

func (o AnalysisPivotTableVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisPivotTableVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisPivotTableVisualOutput) ChartConfiguration() AnalysisPivotTableConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableVisual) *AnalysisPivotTableConfiguration { return v.ChartConfiguration }).(AnalysisPivotTableConfigurationPtrOutput)
}

func (o AnalysisPivotTableVisualOutput) ConditionalFormatting() AnalysisPivotTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableVisual) *AnalysisPivotTableConditionalFormatting {
		return v.ConditionalFormatting
	}).(AnalysisPivotTableConditionalFormattingPtrOutput)
}

func (o AnalysisPivotTableVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisPivotTableVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTableVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisPivotTableVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisPivotTableVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisPivotTableVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableVisual)(nil)).Elem()
}

func (o AnalysisPivotTableVisualPtrOutput) ToAnalysisPivotTableVisualPtrOutput() AnalysisPivotTableVisualPtrOutput {
	return o
}

func (o AnalysisPivotTableVisualPtrOutput) ToAnalysisPivotTableVisualPtrOutputWithContext(ctx context.Context) AnalysisPivotTableVisualPtrOutput {
	return o
}

func (o AnalysisPivotTableVisualPtrOutput) Elem() AnalysisPivotTableVisualOutput {
	return o.ApplyT(func(v *AnalysisPivotTableVisual) AnalysisPivotTableVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableVisual
		return ret
	}).(AnalysisPivotTableVisualOutput)
}

func (o AnalysisPivotTableVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisPivotTableVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisPivotTableVisualPtrOutput) ChartConfiguration() AnalysisPivotTableConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableVisual) *AnalysisPivotTableConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisPivotTableConfigurationPtrOutput)
}

func (o AnalysisPivotTableVisualPtrOutput) ConditionalFormatting() AnalysisPivotTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableVisual) *AnalysisPivotTableConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(AnalysisPivotTableConditionalFormattingPtrOutput)
}

func (o AnalysisPivotTableVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisPivotTableVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisPivotTableVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTableVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisPivotTotalOptions struct {
	CustomLabel           *string                          `pulumi:"customLabel"`
	MetricHeaderCellStyle *AnalysisTableCellStyle          `pulumi:"metricHeaderCellStyle"`
	Placement             *AnalysisTableTotalsPlacement    `pulumi:"placement"`
	ScrollStatus          *AnalysisTableTotalsScrollStatus `pulumi:"scrollStatus"`
	TotalCellStyle        *AnalysisTableCellStyle          `pulumi:"totalCellStyle"`
	TotalsVisibility      *AnalysisVisibility              `pulumi:"totalsVisibility"`
	ValueCellStyle        *AnalysisTableCellStyle          `pulumi:"valueCellStyle"`
}

// AnalysisPivotTotalOptionsInput is an input type that accepts AnalysisPivotTotalOptionsArgs and AnalysisPivotTotalOptionsOutput values.
// You can construct a concrete instance of `AnalysisPivotTotalOptionsInput` via:
//
//	AnalysisPivotTotalOptionsArgs{...}
type AnalysisPivotTotalOptionsInput interface {
	pulumi.Input

	ToAnalysisPivotTotalOptionsOutput() AnalysisPivotTotalOptionsOutput
	ToAnalysisPivotTotalOptionsOutputWithContext(context.Context) AnalysisPivotTotalOptionsOutput
}

type AnalysisPivotTotalOptionsArgs struct {
	CustomLabel           pulumi.StringPtrInput                   `pulumi:"customLabel"`
	MetricHeaderCellStyle AnalysisTableCellStylePtrInput          `pulumi:"metricHeaderCellStyle"`
	Placement             AnalysisTableTotalsPlacementPtrInput    `pulumi:"placement"`
	ScrollStatus          AnalysisTableTotalsScrollStatusPtrInput `pulumi:"scrollStatus"`
	TotalCellStyle        AnalysisTableCellStylePtrInput          `pulumi:"totalCellStyle"`
	TotalsVisibility      AnalysisVisibilityPtrInput              `pulumi:"totalsVisibility"`
	ValueCellStyle        AnalysisTableCellStylePtrInput          `pulumi:"valueCellStyle"`
}

func (AnalysisPivotTotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTotalOptions)(nil)).Elem()
}

func (i AnalysisPivotTotalOptionsArgs) ToAnalysisPivotTotalOptionsOutput() AnalysisPivotTotalOptionsOutput {
	return i.ToAnalysisPivotTotalOptionsOutputWithContext(context.Background())
}

func (i AnalysisPivotTotalOptionsArgs) ToAnalysisPivotTotalOptionsOutputWithContext(ctx context.Context) AnalysisPivotTotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTotalOptionsOutput)
}

func (i AnalysisPivotTotalOptionsArgs) ToAnalysisPivotTotalOptionsPtrOutput() AnalysisPivotTotalOptionsPtrOutput {
	return i.ToAnalysisPivotTotalOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisPivotTotalOptionsArgs) ToAnalysisPivotTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTotalOptionsOutput).ToAnalysisPivotTotalOptionsPtrOutputWithContext(ctx)
}

// AnalysisPivotTotalOptionsPtrInput is an input type that accepts AnalysisPivotTotalOptionsArgs, AnalysisPivotTotalOptionsPtr and AnalysisPivotTotalOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisPivotTotalOptionsPtrInput` via:
//
//	        AnalysisPivotTotalOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisPivotTotalOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTotalOptionsPtrOutput() AnalysisPivotTotalOptionsPtrOutput
	ToAnalysisPivotTotalOptionsPtrOutputWithContext(context.Context) AnalysisPivotTotalOptionsPtrOutput
}

type analysisPivotTotalOptionsPtrType AnalysisPivotTotalOptionsArgs

func AnalysisPivotTotalOptionsPtr(v *AnalysisPivotTotalOptionsArgs) AnalysisPivotTotalOptionsPtrInput {
	return (*analysisPivotTotalOptionsPtrType)(v)
}

func (*analysisPivotTotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTotalOptions)(nil)).Elem()
}

func (i *analysisPivotTotalOptionsPtrType) ToAnalysisPivotTotalOptionsPtrOutput() AnalysisPivotTotalOptionsPtrOutput {
	return i.ToAnalysisPivotTotalOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisPivotTotalOptionsPtrType) ToAnalysisPivotTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPivotTotalOptionsPtrOutput)
}

type AnalysisPivotTotalOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTotalOptions)(nil)).Elem()
}

func (o AnalysisPivotTotalOptionsOutput) ToAnalysisPivotTotalOptionsOutput() AnalysisPivotTotalOptionsOutput {
	return o
}

func (o AnalysisPivotTotalOptionsOutput) ToAnalysisPivotTotalOptionsOutputWithContext(ctx context.Context) AnalysisPivotTotalOptionsOutput {
	return o
}

func (o AnalysisPivotTotalOptionsOutput) ToAnalysisPivotTotalOptionsPtrOutput() AnalysisPivotTotalOptionsPtrOutput {
	return o.ToAnalysisPivotTotalOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTotalOptionsOutput) ToAnalysisPivotTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTotalOptions) *AnalysisPivotTotalOptions {
		return &v
	}).(AnalysisPivotTotalOptionsPtrOutput)
}

func (o AnalysisPivotTotalOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTotalOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o AnalysisPivotTotalOptionsOutput) MetricHeaderCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisPivotTotalOptions) *AnalysisTableCellStyle { return v.MetricHeaderCellStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTotalOptionsOutput) Placement() AnalysisTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTotalOptions) *AnalysisTableTotalsPlacement { return v.Placement }).(AnalysisTableTotalsPlacementPtrOutput)
}

func (o AnalysisPivotTotalOptionsOutput) ScrollStatus() AnalysisTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTotalOptions) *AnalysisTableTotalsScrollStatus { return v.ScrollStatus }).(AnalysisTableTotalsScrollStatusPtrOutput)
}

func (o AnalysisPivotTotalOptionsOutput) TotalCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisPivotTotalOptions) *AnalysisTableCellStyle { return v.TotalCellStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTotalOptionsOutput) TotalsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisPivotTotalOptions) *AnalysisVisibility { return v.TotalsVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPivotTotalOptionsOutput) ValueCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisPivotTotalOptions) *AnalysisTableCellStyle { return v.ValueCellStyle }).(AnalysisTableCellStylePtrOutput)
}

type AnalysisPivotTotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTotalOptions)(nil)).Elem()
}

func (o AnalysisPivotTotalOptionsPtrOutput) ToAnalysisPivotTotalOptionsPtrOutput() AnalysisPivotTotalOptionsPtrOutput {
	return o
}

func (o AnalysisPivotTotalOptionsPtrOutput) ToAnalysisPivotTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisPivotTotalOptionsPtrOutput {
	return o
}

func (o AnalysisPivotTotalOptionsPtrOutput) Elem() AnalysisPivotTotalOptionsOutput {
	return o.ApplyT(func(v *AnalysisPivotTotalOptions) AnalysisPivotTotalOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTotalOptions
		return ret
	}).(AnalysisPivotTotalOptionsOutput)
}

func (o AnalysisPivotTotalOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTotalOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisPivotTotalOptionsPtrOutput) MetricHeaderCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTotalOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.MetricHeaderCellStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTotalOptionsPtrOutput) Placement() AnalysisTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTotalOptions) *AnalysisTableTotalsPlacement {
		if v == nil {
			return nil
		}
		return v.Placement
	}).(AnalysisTableTotalsPlacementPtrOutput)
}

func (o AnalysisPivotTotalOptionsPtrOutput) ScrollStatus() AnalysisTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTotalOptions) *AnalysisTableTotalsScrollStatus {
		if v == nil {
			return nil
		}
		return v.ScrollStatus
	}).(AnalysisTableTotalsScrollStatusPtrOutput)
}

func (o AnalysisPivotTotalOptionsPtrOutput) TotalCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTotalOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.TotalCellStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisPivotTotalOptionsPtrOutput) TotalsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTotalOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.TotalsVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisPivotTotalOptionsPtrOutput) ValueCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisPivotTotalOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.ValueCellStyle
	}).(AnalysisTableCellStylePtrOutput)
}

type AnalysisPredefinedHierarchy struct {
	Columns          []AnalysisColumnIdentifier `pulumi:"columns"`
	DrillDownFilters []AnalysisDrillDownFilter  `pulumi:"drillDownFilters"`
	HierarchyId      string                     `pulumi:"hierarchyId"`
}

// AnalysisPredefinedHierarchyInput is an input type that accepts AnalysisPredefinedHierarchyArgs and AnalysisPredefinedHierarchyOutput values.
// You can construct a concrete instance of `AnalysisPredefinedHierarchyInput` via:
//
//	AnalysisPredefinedHierarchyArgs{...}
type AnalysisPredefinedHierarchyInput interface {
	pulumi.Input

	ToAnalysisPredefinedHierarchyOutput() AnalysisPredefinedHierarchyOutput
	ToAnalysisPredefinedHierarchyOutputWithContext(context.Context) AnalysisPredefinedHierarchyOutput
}

type AnalysisPredefinedHierarchyArgs struct {
	Columns          AnalysisColumnIdentifierArrayInput `pulumi:"columns"`
	DrillDownFilters AnalysisDrillDownFilterArrayInput  `pulumi:"drillDownFilters"`
	HierarchyId      pulumi.StringInput                 `pulumi:"hierarchyId"`
}

func (AnalysisPredefinedHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPredefinedHierarchy)(nil)).Elem()
}

func (i AnalysisPredefinedHierarchyArgs) ToAnalysisPredefinedHierarchyOutput() AnalysisPredefinedHierarchyOutput {
	return i.ToAnalysisPredefinedHierarchyOutputWithContext(context.Background())
}

func (i AnalysisPredefinedHierarchyArgs) ToAnalysisPredefinedHierarchyOutputWithContext(ctx context.Context) AnalysisPredefinedHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPredefinedHierarchyOutput)
}

func (i AnalysisPredefinedHierarchyArgs) ToAnalysisPredefinedHierarchyPtrOutput() AnalysisPredefinedHierarchyPtrOutput {
	return i.ToAnalysisPredefinedHierarchyPtrOutputWithContext(context.Background())
}

func (i AnalysisPredefinedHierarchyArgs) ToAnalysisPredefinedHierarchyPtrOutputWithContext(ctx context.Context) AnalysisPredefinedHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPredefinedHierarchyOutput).ToAnalysisPredefinedHierarchyPtrOutputWithContext(ctx)
}

// AnalysisPredefinedHierarchyPtrInput is an input type that accepts AnalysisPredefinedHierarchyArgs, AnalysisPredefinedHierarchyPtr and AnalysisPredefinedHierarchyPtrOutput values.
// You can construct a concrete instance of `AnalysisPredefinedHierarchyPtrInput` via:
//
//	        AnalysisPredefinedHierarchyArgs{...}
//
//	or:
//
//	        nil
type AnalysisPredefinedHierarchyPtrInput interface {
	pulumi.Input

	ToAnalysisPredefinedHierarchyPtrOutput() AnalysisPredefinedHierarchyPtrOutput
	ToAnalysisPredefinedHierarchyPtrOutputWithContext(context.Context) AnalysisPredefinedHierarchyPtrOutput
}

type analysisPredefinedHierarchyPtrType AnalysisPredefinedHierarchyArgs

func AnalysisPredefinedHierarchyPtr(v *AnalysisPredefinedHierarchyArgs) AnalysisPredefinedHierarchyPtrInput {
	return (*analysisPredefinedHierarchyPtrType)(v)
}

func (*analysisPredefinedHierarchyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPredefinedHierarchy)(nil)).Elem()
}

func (i *analysisPredefinedHierarchyPtrType) ToAnalysisPredefinedHierarchyPtrOutput() AnalysisPredefinedHierarchyPtrOutput {
	return i.ToAnalysisPredefinedHierarchyPtrOutputWithContext(context.Background())
}

func (i *analysisPredefinedHierarchyPtrType) ToAnalysisPredefinedHierarchyPtrOutputWithContext(ctx context.Context) AnalysisPredefinedHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisPredefinedHierarchyPtrOutput)
}

type AnalysisPredefinedHierarchyOutput struct{ *pulumi.OutputState }

func (AnalysisPredefinedHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPredefinedHierarchy)(nil)).Elem()
}

func (o AnalysisPredefinedHierarchyOutput) ToAnalysisPredefinedHierarchyOutput() AnalysisPredefinedHierarchyOutput {
	return o
}

func (o AnalysisPredefinedHierarchyOutput) ToAnalysisPredefinedHierarchyOutputWithContext(ctx context.Context) AnalysisPredefinedHierarchyOutput {
	return o
}

func (o AnalysisPredefinedHierarchyOutput) ToAnalysisPredefinedHierarchyPtrOutput() AnalysisPredefinedHierarchyPtrOutput {
	return o.ToAnalysisPredefinedHierarchyPtrOutputWithContext(context.Background())
}

func (o AnalysisPredefinedHierarchyOutput) ToAnalysisPredefinedHierarchyPtrOutputWithContext(ctx context.Context) AnalysisPredefinedHierarchyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPredefinedHierarchy) *AnalysisPredefinedHierarchy {
		return &v
	}).(AnalysisPredefinedHierarchyPtrOutput)
}

func (o AnalysisPredefinedHierarchyOutput) Columns() AnalysisColumnIdentifierArrayOutput {
	return o.ApplyT(func(v AnalysisPredefinedHierarchy) []AnalysisColumnIdentifier { return v.Columns }).(AnalysisColumnIdentifierArrayOutput)
}

func (o AnalysisPredefinedHierarchyOutput) DrillDownFilters() AnalysisDrillDownFilterArrayOutput {
	return o.ApplyT(func(v AnalysisPredefinedHierarchy) []AnalysisDrillDownFilter { return v.DrillDownFilters }).(AnalysisDrillDownFilterArrayOutput)
}

func (o AnalysisPredefinedHierarchyOutput) HierarchyId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisPredefinedHierarchy) string { return v.HierarchyId }).(pulumi.StringOutput)
}

type AnalysisPredefinedHierarchyPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPredefinedHierarchyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPredefinedHierarchy)(nil)).Elem()
}

func (o AnalysisPredefinedHierarchyPtrOutput) ToAnalysisPredefinedHierarchyPtrOutput() AnalysisPredefinedHierarchyPtrOutput {
	return o
}

func (o AnalysisPredefinedHierarchyPtrOutput) ToAnalysisPredefinedHierarchyPtrOutputWithContext(ctx context.Context) AnalysisPredefinedHierarchyPtrOutput {
	return o
}

func (o AnalysisPredefinedHierarchyPtrOutput) Elem() AnalysisPredefinedHierarchyOutput {
	return o.ApplyT(func(v *AnalysisPredefinedHierarchy) AnalysisPredefinedHierarchy {
		if v != nil {
			return *v
		}
		var ret AnalysisPredefinedHierarchy
		return ret
	}).(AnalysisPredefinedHierarchyOutput)
}

func (o AnalysisPredefinedHierarchyPtrOutput) Columns() AnalysisColumnIdentifierArrayOutput {
	return o.ApplyT(func(v *AnalysisPredefinedHierarchy) []AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(AnalysisColumnIdentifierArrayOutput)
}

func (o AnalysisPredefinedHierarchyPtrOutput) DrillDownFilters() AnalysisDrillDownFilterArrayOutput {
	return o.ApplyT(func(v *AnalysisPredefinedHierarchy) []AnalysisDrillDownFilter {
		if v == nil {
			return nil
		}
		return v.DrillDownFilters
	}).(AnalysisDrillDownFilterArrayOutput)
}

func (o AnalysisPredefinedHierarchyPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisPredefinedHierarchy) *string {
		if v == nil {
			return nil
		}
		return &v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type AnalysisProgressBarOptions struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisProgressBarOptionsInput is an input type that accepts AnalysisProgressBarOptionsArgs and AnalysisProgressBarOptionsOutput values.
// You can construct a concrete instance of `AnalysisProgressBarOptionsInput` via:
//
//	AnalysisProgressBarOptionsArgs{...}
type AnalysisProgressBarOptionsInput interface {
	pulumi.Input

	ToAnalysisProgressBarOptionsOutput() AnalysisProgressBarOptionsOutput
	ToAnalysisProgressBarOptionsOutputWithContext(context.Context) AnalysisProgressBarOptionsOutput
}

type AnalysisProgressBarOptionsArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisProgressBarOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisProgressBarOptions)(nil)).Elem()
}

func (i AnalysisProgressBarOptionsArgs) ToAnalysisProgressBarOptionsOutput() AnalysisProgressBarOptionsOutput {
	return i.ToAnalysisProgressBarOptionsOutputWithContext(context.Background())
}

func (i AnalysisProgressBarOptionsArgs) ToAnalysisProgressBarOptionsOutputWithContext(ctx context.Context) AnalysisProgressBarOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisProgressBarOptionsOutput)
}

func (i AnalysisProgressBarOptionsArgs) ToAnalysisProgressBarOptionsPtrOutput() AnalysisProgressBarOptionsPtrOutput {
	return i.ToAnalysisProgressBarOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisProgressBarOptionsArgs) ToAnalysisProgressBarOptionsPtrOutputWithContext(ctx context.Context) AnalysisProgressBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisProgressBarOptionsOutput).ToAnalysisProgressBarOptionsPtrOutputWithContext(ctx)
}

// AnalysisProgressBarOptionsPtrInput is an input type that accepts AnalysisProgressBarOptionsArgs, AnalysisProgressBarOptionsPtr and AnalysisProgressBarOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisProgressBarOptionsPtrInput` via:
//
//	        AnalysisProgressBarOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisProgressBarOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisProgressBarOptionsPtrOutput() AnalysisProgressBarOptionsPtrOutput
	ToAnalysisProgressBarOptionsPtrOutputWithContext(context.Context) AnalysisProgressBarOptionsPtrOutput
}

type analysisProgressBarOptionsPtrType AnalysisProgressBarOptionsArgs

func AnalysisProgressBarOptionsPtr(v *AnalysisProgressBarOptionsArgs) AnalysisProgressBarOptionsPtrInput {
	return (*analysisProgressBarOptionsPtrType)(v)
}

func (*analysisProgressBarOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisProgressBarOptions)(nil)).Elem()
}

func (i *analysisProgressBarOptionsPtrType) ToAnalysisProgressBarOptionsPtrOutput() AnalysisProgressBarOptionsPtrOutput {
	return i.ToAnalysisProgressBarOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisProgressBarOptionsPtrType) ToAnalysisProgressBarOptionsPtrOutputWithContext(ctx context.Context) AnalysisProgressBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisProgressBarOptionsPtrOutput)
}

type AnalysisProgressBarOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisProgressBarOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisProgressBarOptions)(nil)).Elem()
}

func (o AnalysisProgressBarOptionsOutput) ToAnalysisProgressBarOptionsOutput() AnalysisProgressBarOptionsOutput {
	return o
}

func (o AnalysisProgressBarOptionsOutput) ToAnalysisProgressBarOptionsOutputWithContext(ctx context.Context) AnalysisProgressBarOptionsOutput {
	return o
}

func (o AnalysisProgressBarOptionsOutput) ToAnalysisProgressBarOptionsPtrOutput() AnalysisProgressBarOptionsPtrOutput {
	return o.ToAnalysisProgressBarOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisProgressBarOptionsOutput) ToAnalysisProgressBarOptionsPtrOutputWithContext(ctx context.Context) AnalysisProgressBarOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisProgressBarOptions) *AnalysisProgressBarOptions {
		return &v
	}).(AnalysisProgressBarOptionsPtrOutput)
}

func (o AnalysisProgressBarOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisProgressBarOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisProgressBarOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisProgressBarOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisProgressBarOptions)(nil)).Elem()
}

func (o AnalysisProgressBarOptionsPtrOutput) ToAnalysisProgressBarOptionsPtrOutput() AnalysisProgressBarOptionsPtrOutput {
	return o
}

func (o AnalysisProgressBarOptionsPtrOutput) ToAnalysisProgressBarOptionsPtrOutputWithContext(ctx context.Context) AnalysisProgressBarOptionsPtrOutput {
	return o
}

func (o AnalysisProgressBarOptionsPtrOutput) Elem() AnalysisProgressBarOptionsOutput {
	return o.ApplyT(func(v *AnalysisProgressBarOptions) AnalysisProgressBarOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisProgressBarOptions
		return ret
	}).(AnalysisProgressBarOptionsOutput)
}

func (o AnalysisProgressBarOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisProgressBarOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisRadarChartAggregatedFieldWells struct {
	Category []AnalysisDimensionField `pulumi:"category"`
	Color    []AnalysisDimensionField `pulumi:"color"`
	Values   []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisRadarChartAggregatedFieldWellsInput is an input type that accepts AnalysisRadarChartAggregatedFieldWellsArgs and AnalysisRadarChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisRadarChartAggregatedFieldWellsInput` via:
//
//	AnalysisRadarChartAggregatedFieldWellsArgs{...}
type AnalysisRadarChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisRadarChartAggregatedFieldWellsOutput() AnalysisRadarChartAggregatedFieldWellsOutput
	ToAnalysisRadarChartAggregatedFieldWellsOutputWithContext(context.Context) AnalysisRadarChartAggregatedFieldWellsOutput
}

type AnalysisRadarChartAggregatedFieldWellsArgs struct {
	Category AnalysisDimensionFieldArrayInput `pulumi:"category"`
	Color    AnalysisDimensionFieldArrayInput `pulumi:"color"`
	Values   AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisRadarChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisRadarChartAggregatedFieldWellsArgs) ToAnalysisRadarChartAggregatedFieldWellsOutput() AnalysisRadarChartAggregatedFieldWellsOutput {
	return i.ToAnalysisRadarChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisRadarChartAggregatedFieldWellsArgs) ToAnalysisRadarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisRadarChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartAggregatedFieldWellsOutput)
}

func (i AnalysisRadarChartAggregatedFieldWellsArgs) ToAnalysisRadarChartAggregatedFieldWellsPtrOutput() AnalysisRadarChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisRadarChartAggregatedFieldWellsArgs) ToAnalysisRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartAggregatedFieldWellsOutput).ToAnalysisRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisRadarChartAggregatedFieldWellsPtrInput is an input type that accepts AnalysisRadarChartAggregatedFieldWellsArgs, AnalysisRadarChartAggregatedFieldWellsPtr and AnalysisRadarChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisRadarChartAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisRadarChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisRadarChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisRadarChartAggregatedFieldWellsPtrOutput() AnalysisRadarChartAggregatedFieldWellsPtrOutput
	ToAnalysisRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisRadarChartAggregatedFieldWellsPtrOutput
}

type analysisRadarChartAggregatedFieldWellsPtrType AnalysisRadarChartAggregatedFieldWellsArgs

func AnalysisRadarChartAggregatedFieldWellsPtr(v *AnalysisRadarChartAggregatedFieldWellsArgs) AnalysisRadarChartAggregatedFieldWellsPtrInput {
	return (*analysisRadarChartAggregatedFieldWellsPtrType)(v)
}

func (*analysisRadarChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisRadarChartAggregatedFieldWellsPtrType) ToAnalysisRadarChartAggregatedFieldWellsPtrOutput() AnalysisRadarChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisRadarChartAggregatedFieldWellsPtrType) ToAnalysisRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartAggregatedFieldWellsPtrOutput)
}

type AnalysisRadarChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisRadarChartAggregatedFieldWellsOutput) ToAnalysisRadarChartAggregatedFieldWellsOutput() AnalysisRadarChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisRadarChartAggregatedFieldWellsOutput) ToAnalysisRadarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisRadarChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisRadarChartAggregatedFieldWellsOutput) ToAnalysisRadarChartAggregatedFieldWellsPtrOutput() AnalysisRadarChartAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartAggregatedFieldWellsOutput) ToAnalysisRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRadarChartAggregatedFieldWells) *AnalysisRadarChartAggregatedFieldWells {
		return &v
	}).(AnalysisRadarChartAggregatedFieldWellsPtrOutput)
}

func (o AnalysisRadarChartAggregatedFieldWellsOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisRadarChartAggregatedFieldWells) []AnalysisDimensionField { return v.Category }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisRadarChartAggregatedFieldWellsOutput) Color() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisRadarChartAggregatedFieldWells) []AnalysisDimensionField { return v.Color }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisRadarChartAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisRadarChartAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisRadarChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisRadarChartAggregatedFieldWellsPtrOutput) ToAnalysisRadarChartAggregatedFieldWellsPtrOutput() AnalysisRadarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisRadarChartAggregatedFieldWellsPtrOutput) ToAnalysisRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisRadarChartAggregatedFieldWellsPtrOutput) Elem() AnalysisRadarChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisRadarChartAggregatedFieldWells) AnalysisRadarChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisRadarChartAggregatedFieldWells
		return ret
	}).(AnalysisRadarChartAggregatedFieldWellsOutput)
}

func (o AnalysisRadarChartAggregatedFieldWellsPtrOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisRadarChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisRadarChartAggregatedFieldWellsPtrOutput) Color() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisRadarChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Color
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisRadarChartAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisRadarChartAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisRadarChartAreaStyleSettings struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisRadarChartAreaStyleSettingsInput is an input type that accepts AnalysisRadarChartAreaStyleSettingsArgs and AnalysisRadarChartAreaStyleSettingsOutput values.
// You can construct a concrete instance of `AnalysisRadarChartAreaStyleSettingsInput` via:
//
//	AnalysisRadarChartAreaStyleSettingsArgs{...}
type AnalysisRadarChartAreaStyleSettingsInput interface {
	pulumi.Input

	ToAnalysisRadarChartAreaStyleSettingsOutput() AnalysisRadarChartAreaStyleSettingsOutput
	ToAnalysisRadarChartAreaStyleSettingsOutputWithContext(context.Context) AnalysisRadarChartAreaStyleSettingsOutput
}

type AnalysisRadarChartAreaStyleSettingsArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisRadarChartAreaStyleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartAreaStyleSettings)(nil)).Elem()
}

func (i AnalysisRadarChartAreaStyleSettingsArgs) ToAnalysisRadarChartAreaStyleSettingsOutput() AnalysisRadarChartAreaStyleSettingsOutput {
	return i.ToAnalysisRadarChartAreaStyleSettingsOutputWithContext(context.Background())
}

func (i AnalysisRadarChartAreaStyleSettingsArgs) ToAnalysisRadarChartAreaStyleSettingsOutputWithContext(ctx context.Context) AnalysisRadarChartAreaStyleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartAreaStyleSettingsOutput)
}

func (i AnalysisRadarChartAreaStyleSettingsArgs) ToAnalysisRadarChartAreaStyleSettingsPtrOutput() AnalysisRadarChartAreaStyleSettingsPtrOutput {
	return i.ToAnalysisRadarChartAreaStyleSettingsPtrOutputWithContext(context.Background())
}

func (i AnalysisRadarChartAreaStyleSettingsArgs) ToAnalysisRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartAreaStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartAreaStyleSettingsOutput).ToAnalysisRadarChartAreaStyleSettingsPtrOutputWithContext(ctx)
}

// AnalysisRadarChartAreaStyleSettingsPtrInput is an input type that accepts AnalysisRadarChartAreaStyleSettingsArgs, AnalysisRadarChartAreaStyleSettingsPtr and AnalysisRadarChartAreaStyleSettingsPtrOutput values.
// You can construct a concrete instance of `AnalysisRadarChartAreaStyleSettingsPtrInput` via:
//
//	        AnalysisRadarChartAreaStyleSettingsArgs{...}
//
//	or:
//
//	        nil
type AnalysisRadarChartAreaStyleSettingsPtrInput interface {
	pulumi.Input

	ToAnalysisRadarChartAreaStyleSettingsPtrOutput() AnalysisRadarChartAreaStyleSettingsPtrOutput
	ToAnalysisRadarChartAreaStyleSettingsPtrOutputWithContext(context.Context) AnalysisRadarChartAreaStyleSettingsPtrOutput
}

type analysisRadarChartAreaStyleSettingsPtrType AnalysisRadarChartAreaStyleSettingsArgs

func AnalysisRadarChartAreaStyleSettingsPtr(v *AnalysisRadarChartAreaStyleSettingsArgs) AnalysisRadarChartAreaStyleSettingsPtrInput {
	return (*analysisRadarChartAreaStyleSettingsPtrType)(v)
}

func (*analysisRadarChartAreaStyleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartAreaStyleSettings)(nil)).Elem()
}

func (i *analysisRadarChartAreaStyleSettingsPtrType) ToAnalysisRadarChartAreaStyleSettingsPtrOutput() AnalysisRadarChartAreaStyleSettingsPtrOutput {
	return i.ToAnalysisRadarChartAreaStyleSettingsPtrOutputWithContext(context.Background())
}

func (i *analysisRadarChartAreaStyleSettingsPtrType) ToAnalysisRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartAreaStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartAreaStyleSettingsPtrOutput)
}

type AnalysisRadarChartAreaStyleSettingsOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartAreaStyleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartAreaStyleSettings)(nil)).Elem()
}

func (o AnalysisRadarChartAreaStyleSettingsOutput) ToAnalysisRadarChartAreaStyleSettingsOutput() AnalysisRadarChartAreaStyleSettingsOutput {
	return o
}

func (o AnalysisRadarChartAreaStyleSettingsOutput) ToAnalysisRadarChartAreaStyleSettingsOutputWithContext(ctx context.Context) AnalysisRadarChartAreaStyleSettingsOutput {
	return o
}

func (o AnalysisRadarChartAreaStyleSettingsOutput) ToAnalysisRadarChartAreaStyleSettingsPtrOutput() AnalysisRadarChartAreaStyleSettingsPtrOutput {
	return o.ToAnalysisRadarChartAreaStyleSettingsPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartAreaStyleSettingsOutput) ToAnalysisRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartAreaStyleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRadarChartAreaStyleSettings) *AnalysisRadarChartAreaStyleSettings {
		return &v
	}).(AnalysisRadarChartAreaStyleSettingsPtrOutput)
}

func (o AnalysisRadarChartAreaStyleSettingsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartAreaStyleSettings) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisRadarChartAreaStyleSettingsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartAreaStyleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartAreaStyleSettings)(nil)).Elem()
}

func (o AnalysisRadarChartAreaStyleSettingsPtrOutput) ToAnalysisRadarChartAreaStyleSettingsPtrOutput() AnalysisRadarChartAreaStyleSettingsPtrOutput {
	return o
}

func (o AnalysisRadarChartAreaStyleSettingsPtrOutput) ToAnalysisRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartAreaStyleSettingsPtrOutput {
	return o
}

func (o AnalysisRadarChartAreaStyleSettingsPtrOutput) Elem() AnalysisRadarChartAreaStyleSettingsOutput {
	return o.ApplyT(func(v *AnalysisRadarChartAreaStyleSettings) AnalysisRadarChartAreaStyleSettings {
		if v != nil {
			return *v
		}
		var ret AnalysisRadarChartAreaStyleSettings
		return ret
	}).(AnalysisRadarChartAreaStyleSettingsOutput)
}

func (o AnalysisRadarChartAreaStyleSettingsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartAreaStyleSettings) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisRadarChartConfiguration struct {
	AlternateBandColorsVisibility *AnalysisVisibility                  `pulumi:"alternateBandColorsVisibility"`
	AlternateBandEvenColor        *string                              `pulumi:"alternateBandEvenColor"`
	AlternateBandOddColor         *string                              `pulumi:"alternateBandOddColor"`
	BaseSeriesSettings            *AnalysisRadarChartSeriesSettings    `pulumi:"baseSeriesSettings"`
	CategoryAxis                  *AnalysisAxisDisplayOptions          `pulumi:"categoryAxis"`
	CategoryLabelOptions          *AnalysisChartAxisLabelOptions       `pulumi:"categoryLabelOptions"`
	ColorAxis                     *AnalysisAxisDisplayOptions          `pulumi:"colorAxis"`
	ColorLabelOptions             *AnalysisChartAxisLabelOptions       `pulumi:"colorLabelOptions"`
	FieldWells                    *AnalysisRadarChartFieldWells        `pulumi:"fieldWells"`
	Legend                        *AnalysisLegendOptions               `pulumi:"legend"`
	Shape                         *AnalysisRadarChartShape             `pulumi:"shape"`
	SortConfiguration             *AnalysisRadarChartSortConfiguration `pulumi:"sortConfiguration"`
	StartAngle                    *float64                             `pulumi:"startAngle"`
	VisualPalette                 *AnalysisVisualPalette               `pulumi:"visualPalette"`
}

// AnalysisRadarChartConfigurationInput is an input type that accepts AnalysisRadarChartConfigurationArgs and AnalysisRadarChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisRadarChartConfigurationInput` via:
//
//	AnalysisRadarChartConfigurationArgs{...}
type AnalysisRadarChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisRadarChartConfigurationOutput() AnalysisRadarChartConfigurationOutput
	ToAnalysisRadarChartConfigurationOutputWithContext(context.Context) AnalysisRadarChartConfigurationOutput
}

type AnalysisRadarChartConfigurationArgs struct {
	AlternateBandColorsVisibility AnalysisVisibilityPtrInput                  `pulumi:"alternateBandColorsVisibility"`
	AlternateBandEvenColor        pulumi.StringPtrInput                       `pulumi:"alternateBandEvenColor"`
	AlternateBandOddColor         pulumi.StringPtrInput                       `pulumi:"alternateBandOddColor"`
	BaseSeriesSettings            AnalysisRadarChartSeriesSettingsPtrInput    `pulumi:"baseSeriesSettings"`
	CategoryAxis                  AnalysisAxisDisplayOptionsPtrInput          `pulumi:"categoryAxis"`
	CategoryLabelOptions          AnalysisChartAxisLabelOptionsPtrInput       `pulumi:"categoryLabelOptions"`
	ColorAxis                     AnalysisAxisDisplayOptionsPtrInput          `pulumi:"colorAxis"`
	ColorLabelOptions             AnalysisChartAxisLabelOptionsPtrInput       `pulumi:"colorLabelOptions"`
	FieldWells                    AnalysisRadarChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                        AnalysisLegendOptionsPtrInput               `pulumi:"legend"`
	Shape                         AnalysisRadarChartShapePtrInput             `pulumi:"shape"`
	SortConfiguration             AnalysisRadarChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	StartAngle                    pulumi.Float64PtrInput                      `pulumi:"startAngle"`
	VisualPalette                 AnalysisVisualPalettePtrInput               `pulumi:"visualPalette"`
}

func (AnalysisRadarChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartConfiguration)(nil)).Elem()
}

func (i AnalysisRadarChartConfigurationArgs) ToAnalysisRadarChartConfigurationOutput() AnalysisRadarChartConfigurationOutput {
	return i.ToAnalysisRadarChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisRadarChartConfigurationArgs) ToAnalysisRadarChartConfigurationOutputWithContext(ctx context.Context) AnalysisRadarChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartConfigurationOutput)
}

func (i AnalysisRadarChartConfigurationArgs) ToAnalysisRadarChartConfigurationPtrOutput() AnalysisRadarChartConfigurationPtrOutput {
	return i.ToAnalysisRadarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisRadarChartConfigurationArgs) ToAnalysisRadarChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRadarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartConfigurationOutput).ToAnalysisRadarChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisRadarChartConfigurationPtrInput is an input type that accepts AnalysisRadarChartConfigurationArgs, AnalysisRadarChartConfigurationPtr and AnalysisRadarChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisRadarChartConfigurationPtrInput` via:
//
//	        AnalysisRadarChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisRadarChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisRadarChartConfigurationPtrOutput() AnalysisRadarChartConfigurationPtrOutput
	ToAnalysisRadarChartConfigurationPtrOutputWithContext(context.Context) AnalysisRadarChartConfigurationPtrOutput
}

type analysisRadarChartConfigurationPtrType AnalysisRadarChartConfigurationArgs

func AnalysisRadarChartConfigurationPtr(v *AnalysisRadarChartConfigurationArgs) AnalysisRadarChartConfigurationPtrInput {
	return (*analysisRadarChartConfigurationPtrType)(v)
}

func (*analysisRadarChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartConfiguration)(nil)).Elem()
}

func (i *analysisRadarChartConfigurationPtrType) ToAnalysisRadarChartConfigurationPtrOutput() AnalysisRadarChartConfigurationPtrOutput {
	return i.ToAnalysisRadarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisRadarChartConfigurationPtrType) ToAnalysisRadarChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRadarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartConfigurationPtrOutput)
}

type AnalysisRadarChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartConfiguration)(nil)).Elem()
}

func (o AnalysisRadarChartConfigurationOutput) ToAnalysisRadarChartConfigurationOutput() AnalysisRadarChartConfigurationOutput {
	return o
}

func (o AnalysisRadarChartConfigurationOutput) ToAnalysisRadarChartConfigurationOutputWithContext(ctx context.Context) AnalysisRadarChartConfigurationOutput {
	return o
}

func (o AnalysisRadarChartConfigurationOutput) ToAnalysisRadarChartConfigurationPtrOutput() AnalysisRadarChartConfigurationPtrOutput {
	return o.ToAnalysisRadarChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartConfigurationOutput) ToAnalysisRadarChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRadarChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRadarChartConfiguration) *AnalysisRadarChartConfiguration {
		return &v
	}).(AnalysisRadarChartConfigurationPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) AlternateBandColorsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisVisibility { return v.AlternateBandColorsVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) AlternateBandEvenColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *string { return v.AlternateBandEvenColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) AlternateBandOddColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *string { return v.AlternateBandOddColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) BaseSeriesSettings() AnalysisRadarChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisRadarChartSeriesSettings { return v.BaseSeriesSettings }).(AnalysisRadarChartSeriesSettingsPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) CategoryAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisAxisDisplayOptions { return v.CategoryAxis }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisChartAxisLabelOptions { return v.CategoryLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) ColorAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisAxisDisplayOptions { return v.ColorAxis }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) ColorLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisChartAxisLabelOptions { return v.ColorLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) FieldWells() AnalysisRadarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisRadarChartFieldWells { return v.FieldWells }).(AnalysisRadarChartFieldWellsPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) Shape() AnalysisRadarChartShapePtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisRadarChartShape { return v.Shape }).(AnalysisRadarChartShapePtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) SortConfiguration() AnalysisRadarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisRadarChartSortConfiguration {
		return v.SortConfiguration
	}).(AnalysisRadarChartSortConfigurationPtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) StartAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *float64 { return v.StartAngle }).(pulumi.Float64PtrOutput)
}

func (o AnalysisRadarChartConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

type AnalysisRadarChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartConfiguration)(nil)).Elem()
}

func (o AnalysisRadarChartConfigurationPtrOutput) ToAnalysisRadarChartConfigurationPtrOutput() AnalysisRadarChartConfigurationPtrOutput {
	return o
}

func (o AnalysisRadarChartConfigurationPtrOutput) ToAnalysisRadarChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRadarChartConfigurationPtrOutput {
	return o
}

func (o AnalysisRadarChartConfigurationPtrOutput) Elem() AnalysisRadarChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) AnalysisRadarChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisRadarChartConfiguration
		return ret
	}).(AnalysisRadarChartConfigurationOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) AlternateBandColorsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.AlternateBandColorsVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) AlternateBandEvenColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AlternateBandEvenColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) AlternateBandOddColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AlternateBandOddColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) BaseSeriesSettings() AnalysisRadarChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisRadarChartSeriesSettings {
		if v == nil {
			return nil
		}
		return v.BaseSeriesSettings
	}).(AnalysisRadarChartSeriesSettingsPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) CategoryAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) ColorAxis() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.ColorAxis
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) ColorLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) FieldWells() AnalysisRadarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisRadarChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisRadarChartFieldWellsPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) Shape() AnalysisRadarChartShapePtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisRadarChartShape {
		if v == nil {
			return nil
		}
		return v.Shape
	}).(AnalysisRadarChartShapePtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) SortConfiguration() AnalysisRadarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisRadarChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisRadarChartSortConfigurationPtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) StartAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.StartAngle
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisRadarChartConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

type AnalysisRadarChartFieldWells struct {
	RadarChartAggregatedFieldWells *AnalysisRadarChartAggregatedFieldWells `pulumi:"radarChartAggregatedFieldWells"`
}

// AnalysisRadarChartFieldWellsInput is an input type that accepts AnalysisRadarChartFieldWellsArgs and AnalysisRadarChartFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisRadarChartFieldWellsInput` via:
//
//	AnalysisRadarChartFieldWellsArgs{...}
type AnalysisRadarChartFieldWellsInput interface {
	pulumi.Input

	ToAnalysisRadarChartFieldWellsOutput() AnalysisRadarChartFieldWellsOutput
	ToAnalysisRadarChartFieldWellsOutputWithContext(context.Context) AnalysisRadarChartFieldWellsOutput
}

type AnalysisRadarChartFieldWellsArgs struct {
	RadarChartAggregatedFieldWells AnalysisRadarChartAggregatedFieldWellsPtrInput `pulumi:"radarChartAggregatedFieldWells"`
}

func (AnalysisRadarChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartFieldWells)(nil)).Elem()
}

func (i AnalysisRadarChartFieldWellsArgs) ToAnalysisRadarChartFieldWellsOutput() AnalysisRadarChartFieldWellsOutput {
	return i.ToAnalysisRadarChartFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisRadarChartFieldWellsArgs) ToAnalysisRadarChartFieldWellsOutputWithContext(ctx context.Context) AnalysisRadarChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartFieldWellsOutput)
}

func (i AnalysisRadarChartFieldWellsArgs) ToAnalysisRadarChartFieldWellsPtrOutput() AnalysisRadarChartFieldWellsPtrOutput {
	return i.ToAnalysisRadarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisRadarChartFieldWellsArgs) ToAnalysisRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartFieldWellsOutput).ToAnalysisRadarChartFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisRadarChartFieldWellsPtrInput is an input type that accepts AnalysisRadarChartFieldWellsArgs, AnalysisRadarChartFieldWellsPtr and AnalysisRadarChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisRadarChartFieldWellsPtrInput` via:
//
//	        AnalysisRadarChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisRadarChartFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisRadarChartFieldWellsPtrOutput() AnalysisRadarChartFieldWellsPtrOutput
	ToAnalysisRadarChartFieldWellsPtrOutputWithContext(context.Context) AnalysisRadarChartFieldWellsPtrOutput
}

type analysisRadarChartFieldWellsPtrType AnalysisRadarChartFieldWellsArgs

func AnalysisRadarChartFieldWellsPtr(v *AnalysisRadarChartFieldWellsArgs) AnalysisRadarChartFieldWellsPtrInput {
	return (*analysisRadarChartFieldWellsPtrType)(v)
}

func (*analysisRadarChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartFieldWells)(nil)).Elem()
}

func (i *analysisRadarChartFieldWellsPtrType) ToAnalysisRadarChartFieldWellsPtrOutput() AnalysisRadarChartFieldWellsPtrOutput {
	return i.ToAnalysisRadarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisRadarChartFieldWellsPtrType) ToAnalysisRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartFieldWellsPtrOutput)
}

type AnalysisRadarChartFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartFieldWells)(nil)).Elem()
}

func (o AnalysisRadarChartFieldWellsOutput) ToAnalysisRadarChartFieldWellsOutput() AnalysisRadarChartFieldWellsOutput {
	return o
}

func (o AnalysisRadarChartFieldWellsOutput) ToAnalysisRadarChartFieldWellsOutputWithContext(ctx context.Context) AnalysisRadarChartFieldWellsOutput {
	return o
}

func (o AnalysisRadarChartFieldWellsOutput) ToAnalysisRadarChartFieldWellsPtrOutput() AnalysisRadarChartFieldWellsPtrOutput {
	return o.ToAnalysisRadarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartFieldWellsOutput) ToAnalysisRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRadarChartFieldWells) *AnalysisRadarChartFieldWells {
		return &v
	}).(AnalysisRadarChartFieldWellsPtrOutput)
}

func (o AnalysisRadarChartFieldWellsOutput) RadarChartAggregatedFieldWells() AnalysisRadarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartFieldWells) *AnalysisRadarChartAggregatedFieldWells {
		return v.RadarChartAggregatedFieldWells
	}).(AnalysisRadarChartAggregatedFieldWellsPtrOutput)
}

type AnalysisRadarChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartFieldWells)(nil)).Elem()
}

func (o AnalysisRadarChartFieldWellsPtrOutput) ToAnalysisRadarChartFieldWellsPtrOutput() AnalysisRadarChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisRadarChartFieldWellsPtrOutput) ToAnalysisRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisRadarChartFieldWellsPtrOutput) Elem() AnalysisRadarChartFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisRadarChartFieldWells) AnalysisRadarChartFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisRadarChartFieldWells
		return ret
	}).(AnalysisRadarChartFieldWellsOutput)
}

func (o AnalysisRadarChartFieldWellsPtrOutput) RadarChartAggregatedFieldWells() AnalysisRadarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartFieldWells) *AnalysisRadarChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.RadarChartAggregatedFieldWells
	}).(AnalysisRadarChartAggregatedFieldWellsPtrOutput)
}

type AnalysisRadarChartSeriesSettings struct {
	AreaStyleSettings *AnalysisRadarChartAreaStyleSettings `pulumi:"areaStyleSettings"`
}

// AnalysisRadarChartSeriesSettingsInput is an input type that accepts AnalysisRadarChartSeriesSettingsArgs and AnalysisRadarChartSeriesSettingsOutput values.
// You can construct a concrete instance of `AnalysisRadarChartSeriesSettingsInput` via:
//
//	AnalysisRadarChartSeriesSettingsArgs{...}
type AnalysisRadarChartSeriesSettingsInput interface {
	pulumi.Input

	ToAnalysisRadarChartSeriesSettingsOutput() AnalysisRadarChartSeriesSettingsOutput
	ToAnalysisRadarChartSeriesSettingsOutputWithContext(context.Context) AnalysisRadarChartSeriesSettingsOutput
}

type AnalysisRadarChartSeriesSettingsArgs struct {
	AreaStyleSettings AnalysisRadarChartAreaStyleSettingsPtrInput `pulumi:"areaStyleSettings"`
}

func (AnalysisRadarChartSeriesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartSeriesSettings)(nil)).Elem()
}

func (i AnalysisRadarChartSeriesSettingsArgs) ToAnalysisRadarChartSeriesSettingsOutput() AnalysisRadarChartSeriesSettingsOutput {
	return i.ToAnalysisRadarChartSeriesSettingsOutputWithContext(context.Background())
}

func (i AnalysisRadarChartSeriesSettingsArgs) ToAnalysisRadarChartSeriesSettingsOutputWithContext(ctx context.Context) AnalysisRadarChartSeriesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartSeriesSettingsOutput)
}

func (i AnalysisRadarChartSeriesSettingsArgs) ToAnalysisRadarChartSeriesSettingsPtrOutput() AnalysisRadarChartSeriesSettingsPtrOutput {
	return i.ToAnalysisRadarChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i AnalysisRadarChartSeriesSettingsArgs) ToAnalysisRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartSeriesSettingsOutput).ToAnalysisRadarChartSeriesSettingsPtrOutputWithContext(ctx)
}

// AnalysisRadarChartSeriesSettingsPtrInput is an input type that accepts AnalysisRadarChartSeriesSettingsArgs, AnalysisRadarChartSeriesSettingsPtr and AnalysisRadarChartSeriesSettingsPtrOutput values.
// You can construct a concrete instance of `AnalysisRadarChartSeriesSettingsPtrInput` via:
//
//	        AnalysisRadarChartSeriesSettingsArgs{...}
//
//	or:
//
//	        nil
type AnalysisRadarChartSeriesSettingsPtrInput interface {
	pulumi.Input

	ToAnalysisRadarChartSeriesSettingsPtrOutput() AnalysisRadarChartSeriesSettingsPtrOutput
	ToAnalysisRadarChartSeriesSettingsPtrOutputWithContext(context.Context) AnalysisRadarChartSeriesSettingsPtrOutput
}

type analysisRadarChartSeriesSettingsPtrType AnalysisRadarChartSeriesSettingsArgs

func AnalysisRadarChartSeriesSettingsPtr(v *AnalysisRadarChartSeriesSettingsArgs) AnalysisRadarChartSeriesSettingsPtrInput {
	return (*analysisRadarChartSeriesSettingsPtrType)(v)
}

func (*analysisRadarChartSeriesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartSeriesSettings)(nil)).Elem()
}

func (i *analysisRadarChartSeriesSettingsPtrType) ToAnalysisRadarChartSeriesSettingsPtrOutput() AnalysisRadarChartSeriesSettingsPtrOutput {
	return i.ToAnalysisRadarChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i *analysisRadarChartSeriesSettingsPtrType) ToAnalysisRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartSeriesSettingsPtrOutput)
}

type AnalysisRadarChartSeriesSettingsOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartSeriesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartSeriesSettings)(nil)).Elem()
}

func (o AnalysisRadarChartSeriesSettingsOutput) ToAnalysisRadarChartSeriesSettingsOutput() AnalysisRadarChartSeriesSettingsOutput {
	return o
}

func (o AnalysisRadarChartSeriesSettingsOutput) ToAnalysisRadarChartSeriesSettingsOutputWithContext(ctx context.Context) AnalysisRadarChartSeriesSettingsOutput {
	return o
}

func (o AnalysisRadarChartSeriesSettingsOutput) ToAnalysisRadarChartSeriesSettingsPtrOutput() AnalysisRadarChartSeriesSettingsPtrOutput {
	return o.ToAnalysisRadarChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartSeriesSettingsOutput) ToAnalysisRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartSeriesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRadarChartSeriesSettings) *AnalysisRadarChartSeriesSettings {
		return &v
	}).(AnalysisRadarChartSeriesSettingsPtrOutput)
}

func (o AnalysisRadarChartSeriesSettingsOutput) AreaStyleSettings() AnalysisRadarChartAreaStyleSettingsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartSeriesSettings) *AnalysisRadarChartAreaStyleSettings {
		return v.AreaStyleSettings
	}).(AnalysisRadarChartAreaStyleSettingsPtrOutput)
}

type AnalysisRadarChartSeriesSettingsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartSeriesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartSeriesSettings)(nil)).Elem()
}

func (o AnalysisRadarChartSeriesSettingsPtrOutput) ToAnalysisRadarChartSeriesSettingsPtrOutput() AnalysisRadarChartSeriesSettingsPtrOutput {
	return o
}

func (o AnalysisRadarChartSeriesSettingsPtrOutput) ToAnalysisRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) AnalysisRadarChartSeriesSettingsPtrOutput {
	return o
}

func (o AnalysisRadarChartSeriesSettingsPtrOutput) Elem() AnalysisRadarChartSeriesSettingsOutput {
	return o.ApplyT(func(v *AnalysisRadarChartSeriesSettings) AnalysisRadarChartSeriesSettings {
		if v != nil {
			return *v
		}
		var ret AnalysisRadarChartSeriesSettings
		return ret
	}).(AnalysisRadarChartSeriesSettingsOutput)
}

func (o AnalysisRadarChartSeriesSettingsPtrOutput) AreaStyleSettings() AnalysisRadarChartAreaStyleSettingsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartSeriesSettings) *AnalysisRadarChartAreaStyleSettings {
		if v == nil {
			return nil
		}
		return v.AreaStyleSettings
	}).(AnalysisRadarChartAreaStyleSettingsPtrOutput)
}

type AnalysisRadarChartSortConfiguration struct {
	CategoryItemsLimit *AnalysisItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []AnalysisFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimit    *AnalysisItemsLimitConfiguration `pulumi:"colorItemsLimit"`
	ColorSort          []AnalysisFieldSortOptions       `pulumi:"colorSort"`
}

// AnalysisRadarChartSortConfigurationInput is an input type that accepts AnalysisRadarChartSortConfigurationArgs and AnalysisRadarChartSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisRadarChartSortConfigurationInput` via:
//
//	AnalysisRadarChartSortConfigurationArgs{...}
type AnalysisRadarChartSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisRadarChartSortConfigurationOutput() AnalysisRadarChartSortConfigurationOutput
	ToAnalysisRadarChartSortConfigurationOutputWithContext(context.Context) AnalysisRadarChartSortConfigurationOutput
}

type AnalysisRadarChartSortConfigurationArgs struct {
	CategoryItemsLimit AnalysisItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       AnalysisFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimit    AnalysisItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimit"`
	ColorSort          AnalysisFieldSortOptionsArrayInput      `pulumi:"colorSort"`
}

func (AnalysisRadarChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartSortConfiguration)(nil)).Elem()
}

func (i AnalysisRadarChartSortConfigurationArgs) ToAnalysisRadarChartSortConfigurationOutput() AnalysisRadarChartSortConfigurationOutput {
	return i.ToAnalysisRadarChartSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisRadarChartSortConfigurationArgs) ToAnalysisRadarChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisRadarChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartSortConfigurationOutput)
}

func (i AnalysisRadarChartSortConfigurationArgs) ToAnalysisRadarChartSortConfigurationPtrOutput() AnalysisRadarChartSortConfigurationPtrOutput {
	return i.ToAnalysisRadarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisRadarChartSortConfigurationArgs) ToAnalysisRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRadarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartSortConfigurationOutput).ToAnalysisRadarChartSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisRadarChartSortConfigurationPtrInput is an input type that accepts AnalysisRadarChartSortConfigurationArgs, AnalysisRadarChartSortConfigurationPtr and AnalysisRadarChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisRadarChartSortConfigurationPtrInput` via:
//
//	        AnalysisRadarChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisRadarChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisRadarChartSortConfigurationPtrOutput() AnalysisRadarChartSortConfigurationPtrOutput
	ToAnalysisRadarChartSortConfigurationPtrOutputWithContext(context.Context) AnalysisRadarChartSortConfigurationPtrOutput
}

type analysisRadarChartSortConfigurationPtrType AnalysisRadarChartSortConfigurationArgs

func AnalysisRadarChartSortConfigurationPtr(v *AnalysisRadarChartSortConfigurationArgs) AnalysisRadarChartSortConfigurationPtrInput {
	return (*analysisRadarChartSortConfigurationPtrType)(v)
}

func (*analysisRadarChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartSortConfiguration)(nil)).Elem()
}

func (i *analysisRadarChartSortConfigurationPtrType) ToAnalysisRadarChartSortConfigurationPtrOutput() AnalysisRadarChartSortConfigurationPtrOutput {
	return i.ToAnalysisRadarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisRadarChartSortConfigurationPtrType) ToAnalysisRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRadarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartSortConfigurationPtrOutput)
}

type AnalysisRadarChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisRadarChartSortConfigurationOutput) ToAnalysisRadarChartSortConfigurationOutput() AnalysisRadarChartSortConfigurationOutput {
	return o
}

func (o AnalysisRadarChartSortConfigurationOutput) ToAnalysisRadarChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisRadarChartSortConfigurationOutput {
	return o
}

func (o AnalysisRadarChartSortConfigurationOutput) ToAnalysisRadarChartSortConfigurationPtrOutput() AnalysisRadarChartSortConfigurationPtrOutput {
	return o.ToAnalysisRadarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartSortConfigurationOutput) ToAnalysisRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRadarChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRadarChartSortConfiguration) *AnalysisRadarChartSortConfiguration {
		return &v
	}).(AnalysisRadarChartSortConfigurationPtrOutput)
}

func (o AnalysisRadarChartSortConfigurationOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisRadarChartSortConfigurationOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisRadarChartSortConfiguration) []AnalysisFieldSortOptions { return v.CategorySort }).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisRadarChartSortConfigurationOutput) ColorItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartSortConfiguration) *AnalysisItemsLimitConfiguration { return v.ColorItemsLimit }).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisRadarChartSortConfigurationOutput) ColorSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisRadarChartSortConfiguration) []AnalysisFieldSortOptions { return v.ColorSort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisRadarChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisRadarChartSortConfigurationPtrOutput) ToAnalysisRadarChartSortConfigurationPtrOutput() AnalysisRadarChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisRadarChartSortConfigurationPtrOutput) ToAnalysisRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRadarChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisRadarChartSortConfigurationPtrOutput) Elem() AnalysisRadarChartSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisRadarChartSortConfiguration) AnalysisRadarChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisRadarChartSortConfiguration
		return ret
	}).(AnalysisRadarChartSortConfigurationOutput)
}

func (o AnalysisRadarChartSortConfigurationPtrOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisRadarChartSortConfigurationPtrOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisRadarChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

func (o AnalysisRadarChartSortConfigurationPtrOutput) ColorItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisRadarChartSortConfigurationPtrOutput) ColorSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisRadarChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.ColorSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisRadarChartVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisRadarChartConfiguration    `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisRadarChartVisualInput is an input type that accepts AnalysisRadarChartVisualArgs and AnalysisRadarChartVisualOutput values.
// You can construct a concrete instance of `AnalysisRadarChartVisualInput` via:
//
//	AnalysisRadarChartVisualArgs{...}
type AnalysisRadarChartVisualInput interface {
	pulumi.Input

	ToAnalysisRadarChartVisualOutput() AnalysisRadarChartVisualOutput
	ToAnalysisRadarChartVisualOutputWithContext(context.Context) AnalysisRadarChartVisualOutput
}

type AnalysisRadarChartVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisRadarChartConfigurationPtrInput    `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisRadarChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartVisual)(nil)).Elem()
}

func (i AnalysisRadarChartVisualArgs) ToAnalysisRadarChartVisualOutput() AnalysisRadarChartVisualOutput {
	return i.ToAnalysisRadarChartVisualOutputWithContext(context.Background())
}

func (i AnalysisRadarChartVisualArgs) ToAnalysisRadarChartVisualOutputWithContext(ctx context.Context) AnalysisRadarChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartVisualOutput)
}

func (i AnalysisRadarChartVisualArgs) ToAnalysisRadarChartVisualPtrOutput() AnalysisRadarChartVisualPtrOutput {
	return i.ToAnalysisRadarChartVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisRadarChartVisualArgs) ToAnalysisRadarChartVisualPtrOutputWithContext(ctx context.Context) AnalysisRadarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartVisualOutput).ToAnalysisRadarChartVisualPtrOutputWithContext(ctx)
}

// AnalysisRadarChartVisualPtrInput is an input type that accepts AnalysisRadarChartVisualArgs, AnalysisRadarChartVisualPtr and AnalysisRadarChartVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisRadarChartVisualPtrInput` via:
//
//	        AnalysisRadarChartVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisRadarChartVisualPtrInput interface {
	pulumi.Input

	ToAnalysisRadarChartVisualPtrOutput() AnalysisRadarChartVisualPtrOutput
	ToAnalysisRadarChartVisualPtrOutputWithContext(context.Context) AnalysisRadarChartVisualPtrOutput
}

type analysisRadarChartVisualPtrType AnalysisRadarChartVisualArgs

func AnalysisRadarChartVisualPtr(v *AnalysisRadarChartVisualArgs) AnalysisRadarChartVisualPtrInput {
	return (*analysisRadarChartVisualPtrType)(v)
}

func (*analysisRadarChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartVisual)(nil)).Elem()
}

func (i *analysisRadarChartVisualPtrType) ToAnalysisRadarChartVisualPtrOutput() AnalysisRadarChartVisualPtrOutput {
	return i.ToAnalysisRadarChartVisualPtrOutputWithContext(context.Background())
}

func (i *analysisRadarChartVisualPtrType) ToAnalysisRadarChartVisualPtrOutputWithContext(ctx context.Context) AnalysisRadarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRadarChartVisualPtrOutput)
}

type AnalysisRadarChartVisualOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartVisual)(nil)).Elem()
}

func (o AnalysisRadarChartVisualOutput) ToAnalysisRadarChartVisualOutput() AnalysisRadarChartVisualOutput {
	return o
}

func (o AnalysisRadarChartVisualOutput) ToAnalysisRadarChartVisualOutputWithContext(ctx context.Context) AnalysisRadarChartVisualOutput {
	return o
}

func (o AnalysisRadarChartVisualOutput) ToAnalysisRadarChartVisualPtrOutput() AnalysisRadarChartVisualPtrOutput {
	return o.ToAnalysisRadarChartVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartVisualOutput) ToAnalysisRadarChartVisualPtrOutputWithContext(ctx context.Context) AnalysisRadarChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRadarChartVisual) *AnalysisRadarChartVisual {
		return &v
	}).(AnalysisRadarChartVisualPtrOutput)
}

func (o AnalysisRadarChartVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisRadarChartVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisRadarChartVisualOutput) ChartConfiguration() AnalysisRadarChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartVisual) *AnalysisRadarChartConfiguration { return v.ChartConfiguration }).(AnalysisRadarChartConfigurationPtrOutput)
}

func (o AnalysisRadarChartVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisRadarChartVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisRadarChartVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisRadarChartVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisRadarChartVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisRadarChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisRadarChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisRadarChartVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartVisual)(nil)).Elem()
}

func (o AnalysisRadarChartVisualPtrOutput) ToAnalysisRadarChartVisualPtrOutput() AnalysisRadarChartVisualPtrOutput {
	return o
}

func (o AnalysisRadarChartVisualPtrOutput) ToAnalysisRadarChartVisualPtrOutputWithContext(ctx context.Context) AnalysisRadarChartVisualPtrOutput {
	return o
}

func (o AnalysisRadarChartVisualPtrOutput) Elem() AnalysisRadarChartVisualOutput {
	return o.ApplyT(func(v *AnalysisRadarChartVisual) AnalysisRadarChartVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisRadarChartVisual
		return ret
	}).(AnalysisRadarChartVisualOutput)
}

func (o AnalysisRadarChartVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisRadarChartVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisRadarChartVisualPtrOutput) ChartConfiguration() AnalysisRadarChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartVisual) *AnalysisRadarChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisRadarChartConfigurationPtrOutput)
}

func (o AnalysisRadarChartVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisRadarChartVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisRadarChartVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisRadarChartVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisRadarChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisRadarChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisRangeEndsLabelType struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisRangeEndsLabelTypeInput is an input type that accepts AnalysisRangeEndsLabelTypeArgs and AnalysisRangeEndsLabelTypeOutput values.
// You can construct a concrete instance of `AnalysisRangeEndsLabelTypeInput` via:
//
//	AnalysisRangeEndsLabelTypeArgs{...}
type AnalysisRangeEndsLabelTypeInput interface {
	pulumi.Input

	ToAnalysisRangeEndsLabelTypeOutput() AnalysisRangeEndsLabelTypeOutput
	ToAnalysisRangeEndsLabelTypeOutputWithContext(context.Context) AnalysisRangeEndsLabelTypeOutput
}

type AnalysisRangeEndsLabelTypeArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisRangeEndsLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRangeEndsLabelType)(nil)).Elem()
}

func (i AnalysisRangeEndsLabelTypeArgs) ToAnalysisRangeEndsLabelTypeOutput() AnalysisRangeEndsLabelTypeOutput {
	return i.ToAnalysisRangeEndsLabelTypeOutputWithContext(context.Background())
}

func (i AnalysisRangeEndsLabelTypeArgs) ToAnalysisRangeEndsLabelTypeOutputWithContext(ctx context.Context) AnalysisRangeEndsLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRangeEndsLabelTypeOutput)
}

func (i AnalysisRangeEndsLabelTypeArgs) ToAnalysisRangeEndsLabelTypePtrOutput() AnalysisRangeEndsLabelTypePtrOutput {
	return i.ToAnalysisRangeEndsLabelTypePtrOutputWithContext(context.Background())
}

func (i AnalysisRangeEndsLabelTypeArgs) ToAnalysisRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) AnalysisRangeEndsLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRangeEndsLabelTypeOutput).ToAnalysisRangeEndsLabelTypePtrOutputWithContext(ctx)
}

// AnalysisRangeEndsLabelTypePtrInput is an input type that accepts AnalysisRangeEndsLabelTypeArgs, AnalysisRangeEndsLabelTypePtr and AnalysisRangeEndsLabelTypePtrOutput values.
// You can construct a concrete instance of `AnalysisRangeEndsLabelTypePtrInput` via:
//
//	        AnalysisRangeEndsLabelTypeArgs{...}
//
//	or:
//
//	        nil
type AnalysisRangeEndsLabelTypePtrInput interface {
	pulumi.Input

	ToAnalysisRangeEndsLabelTypePtrOutput() AnalysisRangeEndsLabelTypePtrOutput
	ToAnalysisRangeEndsLabelTypePtrOutputWithContext(context.Context) AnalysisRangeEndsLabelTypePtrOutput
}

type analysisRangeEndsLabelTypePtrType AnalysisRangeEndsLabelTypeArgs

func AnalysisRangeEndsLabelTypePtr(v *AnalysisRangeEndsLabelTypeArgs) AnalysisRangeEndsLabelTypePtrInput {
	return (*analysisRangeEndsLabelTypePtrType)(v)
}

func (*analysisRangeEndsLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRangeEndsLabelType)(nil)).Elem()
}

func (i *analysisRangeEndsLabelTypePtrType) ToAnalysisRangeEndsLabelTypePtrOutput() AnalysisRangeEndsLabelTypePtrOutput {
	return i.ToAnalysisRangeEndsLabelTypePtrOutputWithContext(context.Background())
}

func (i *analysisRangeEndsLabelTypePtrType) ToAnalysisRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) AnalysisRangeEndsLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRangeEndsLabelTypePtrOutput)
}

type AnalysisRangeEndsLabelTypeOutput struct{ *pulumi.OutputState }

func (AnalysisRangeEndsLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRangeEndsLabelType)(nil)).Elem()
}

func (o AnalysisRangeEndsLabelTypeOutput) ToAnalysisRangeEndsLabelTypeOutput() AnalysisRangeEndsLabelTypeOutput {
	return o
}

func (o AnalysisRangeEndsLabelTypeOutput) ToAnalysisRangeEndsLabelTypeOutputWithContext(ctx context.Context) AnalysisRangeEndsLabelTypeOutput {
	return o
}

func (o AnalysisRangeEndsLabelTypeOutput) ToAnalysisRangeEndsLabelTypePtrOutput() AnalysisRangeEndsLabelTypePtrOutput {
	return o.ToAnalysisRangeEndsLabelTypePtrOutputWithContext(context.Background())
}

func (o AnalysisRangeEndsLabelTypeOutput) ToAnalysisRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) AnalysisRangeEndsLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRangeEndsLabelType) *AnalysisRangeEndsLabelType {
		return &v
	}).(AnalysisRangeEndsLabelTypePtrOutput)
}

func (o AnalysisRangeEndsLabelTypeOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisRangeEndsLabelType) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisRangeEndsLabelTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisRangeEndsLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRangeEndsLabelType)(nil)).Elem()
}

func (o AnalysisRangeEndsLabelTypePtrOutput) ToAnalysisRangeEndsLabelTypePtrOutput() AnalysisRangeEndsLabelTypePtrOutput {
	return o
}

func (o AnalysisRangeEndsLabelTypePtrOutput) ToAnalysisRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) AnalysisRangeEndsLabelTypePtrOutput {
	return o
}

func (o AnalysisRangeEndsLabelTypePtrOutput) Elem() AnalysisRangeEndsLabelTypeOutput {
	return o.ApplyT(func(v *AnalysisRangeEndsLabelType) AnalysisRangeEndsLabelType {
		if v != nil {
			return *v
		}
		var ret AnalysisRangeEndsLabelType
		return ret
	}).(AnalysisRangeEndsLabelTypeOutput)
}

func (o AnalysisRangeEndsLabelTypePtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisRangeEndsLabelType) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisReferenceLine struct {
	DataConfiguration  AnalysisReferenceLineDataConfiguration   `pulumi:"dataConfiguration"`
	LabelConfiguration *AnalysisReferenceLineLabelConfiguration `pulumi:"labelConfiguration"`
	Status             *AnalysisWidgetStatus                    `pulumi:"status"`
	StyleConfiguration *AnalysisReferenceLineStyleConfiguration `pulumi:"styleConfiguration"`
}

// AnalysisReferenceLineInput is an input type that accepts AnalysisReferenceLineArgs and AnalysisReferenceLineOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineInput` via:
//
//	AnalysisReferenceLineArgs{...}
type AnalysisReferenceLineInput interface {
	pulumi.Input

	ToAnalysisReferenceLineOutput() AnalysisReferenceLineOutput
	ToAnalysisReferenceLineOutputWithContext(context.Context) AnalysisReferenceLineOutput
}

type AnalysisReferenceLineArgs struct {
	DataConfiguration  AnalysisReferenceLineDataConfigurationInput     `pulumi:"dataConfiguration"`
	LabelConfiguration AnalysisReferenceLineLabelConfigurationPtrInput `pulumi:"labelConfiguration"`
	Status             AnalysisWidgetStatusPtrInput                    `pulumi:"status"`
	StyleConfiguration AnalysisReferenceLineStyleConfigurationPtrInput `pulumi:"styleConfiguration"`
}

func (AnalysisReferenceLineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLine)(nil)).Elem()
}

func (i AnalysisReferenceLineArgs) ToAnalysisReferenceLineOutput() AnalysisReferenceLineOutput {
	return i.ToAnalysisReferenceLineOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineArgs) ToAnalysisReferenceLineOutputWithContext(ctx context.Context) AnalysisReferenceLineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineOutput)
}

// AnalysisReferenceLineArrayInput is an input type that accepts AnalysisReferenceLineArray and AnalysisReferenceLineArrayOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineArrayInput` via:
//
//	AnalysisReferenceLineArray{ AnalysisReferenceLineArgs{...} }
type AnalysisReferenceLineArrayInput interface {
	pulumi.Input

	ToAnalysisReferenceLineArrayOutput() AnalysisReferenceLineArrayOutput
	ToAnalysisReferenceLineArrayOutputWithContext(context.Context) AnalysisReferenceLineArrayOutput
}

type AnalysisReferenceLineArray []AnalysisReferenceLineInput

func (AnalysisReferenceLineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisReferenceLine)(nil)).Elem()
}

func (i AnalysisReferenceLineArray) ToAnalysisReferenceLineArrayOutput() AnalysisReferenceLineArrayOutput {
	return i.ToAnalysisReferenceLineArrayOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineArray) ToAnalysisReferenceLineArrayOutputWithContext(ctx context.Context) AnalysisReferenceLineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineArrayOutput)
}

type AnalysisReferenceLineOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLine)(nil)).Elem()
}

func (o AnalysisReferenceLineOutput) ToAnalysisReferenceLineOutput() AnalysisReferenceLineOutput {
	return o
}

func (o AnalysisReferenceLineOutput) ToAnalysisReferenceLineOutputWithContext(ctx context.Context) AnalysisReferenceLineOutput {
	return o
}

func (o AnalysisReferenceLineOutput) DataConfiguration() AnalysisReferenceLineDataConfigurationOutput {
	return o.ApplyT(func(v AnalysisReferenceLine) AnalysisReferenceLineDataConfiguration { return v.DataConfiguration }).(AnalysisReferenceLineDataConfigurationOutput)
}

func (o AnalysisReferenceLineOutput) LabelConfiguration() AnalysisReferenceLineLabelConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLine) *AnalysisReferenceLineLabelConfiguration { return v.LabelConfiguration }).(AnalysisReferenceLineLabelConfigurationPtrOutput)
}

func (o AnalysisReferenceLineOutput) Status() AnalysisWidgetStatusPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLine) *AnalysisWidgetStatus { return v.Status }).(AnalysisWidgetStatusPtrOutput)
}

func (o AnalysisReferenceLineOutput) StyleConfiguration() AnalysisReferenceLineStyleConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLine) *AnalysisReferenceLineStyleConfiguration { return v.StyleConfiguration }).(AnalysisReferenceLineStyleConfigurationPtrOutput)
}

type AnalysisReferenceLineArrayOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisReferenceLine)(nil)).Elem()
}

func (o AnalysisReferenceLineArrayOutput) ToAnalysisReferenceLineArrayOutput() AnalysisReferenceLineArrayOutput {
	return o
}

func (o AnalysisReferenceLineArrayOutput) ToAnalysisReferenceLineArrayOutputWithContext(ctx context.Context) AnalysisReferenceLineArrayOutput {
	return o
}

func (o AnalysisReferenceLineArrayOutput) Index(i pulumi.IntInput) AnalysisReferenceLineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisReferenceLine {
		return vs[0].([]AnalysisReferenceLine)[vs[1].(int)]
	}).(AnalysisReferenceLineOutput)
}

type AnalysisReferenceLineCustomLabelConfiguration struct {
	CustomLabel string `pulumi:"customLabel"`
}

// AnalysisReferenceLineCustomLabelConfigurationInput is an input type that accepts AnalysisReferenceLineCustomLabelConfigurationArgs and AnalysisReferenceLineCustomLabelConfigurationOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineCustomLabelConfigurationInput` via:
//
//	AnalysisReferenceLineCustomLabelConfigurationArgs{...}
type AnalysisReferenceLineCustomLabelConfigurationInput interface {
	pulumi.Input

	ToAnalysisReferenceLineCustomLabelConfigurationOutput() AnalysisReferenceLineCustomLabelConfigurationOutput
	ToAnalysisReferenceLineCustomLabelConfigurationOutputWithContext(context.Context) AnalysisReferenceLineCustomLabelConfigurationOutput
}

type AnalysisReferenceLineCustomLabelConfigurationArgs struct {
	CustomLabel pulumi.StringInput `pulumi:"customLabel"`
}

func (AnalysisReferenceLineCustomLabelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (i AnalysisReferenceLineCustomLabelConfigurationArgs) ToAnalysisReferenceLineCustomLabelConfigurationOutput() AnalysisReferenceLineCustomLabelConfigurationOutput {
	return i.ToAnalysisReferenceLineCustomLabelConfigurationOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineCustomLabelConfigurationArgs) ToAnalysisReferenceLineCustomLabelConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineCustomLabelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineCustomLabelConfigurationOutput)
}

func (i AnalysisReferenceLineCustomLabelConfigurationArgs) ToAnalysisReferenceLineCustomLabelConfigurationPtrOutput() AnalysisReferenceLineCustomLabelConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineCustomLabelConfigurationArgs) ToAnalysisReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineCustomLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineCustomLabelConfigurationOutput).ToAnalysisReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx)
}

// AnalysisReferenceLineCustomLabelConfigurationPtrInput is an input type that accepts AnalysisReferenceLineCustomLabelConfigurationArgs, AnalysisReferenceLineCustomLabelConfigurationPtr and AnalysisReferenceLineCustomLabelConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineCustomLabelConfigurationPtrInput` via:
//
//	        AnalysisReferenceLineCustomLabelConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisReferenceLineCustomLabelConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLineCustomLabelConfigurationPtrOutput() AnalysisReferenceLineCustomLabelConfigurationPtrOutput
	ToAnalysisReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Context) AnalysisReferenceLineCustomLabelConfigurationPtrOutput
}

type analysisReferenceLineCustomLabelConfigurationPtrType AnalysisReferenceLineCustomLabelConfigurationArgs

func AnalysisReferenceLineCustomLabelConfigurationPtr(v *AnalysisReferenceLineCustomLabelConfigurationArgs) AnalysisReferenceLineCustomLabelConfigurationPtrInput {
	return (*analysisReferenceLineCustomLabelConfigurationPtrType)(v)
}

func (*analysisReferenceLineCustomLabelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (i *analysisReferenceLineCustomLabelConfigurationPtrType) ToAnalysisReferenceLineCustomLabelConfigurationPtrOutput() AnalysisReferenceLineCustomLabelConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisReferenceLineCustomLabelConfigurationPtrType) ToAnalysisReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineCustomLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineCustomLabelConfigurationPtrOutput)
}

type AnalysisReferenceLineCustomLabelConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineCustomLabelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineCustomLabelConfigurationOutput) ToAnalysisReferenceLineCustomLabelConfigurationOutput() AnalysisReferenceLineCustomLabelConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineCustomLabelConfigurationOutput) ToAnalysisReferenceLineCustomLabelConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineCustomLabelConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineCustomLabelConfigurationOutput) ToAnalysisReferenceLineCustomLabelConfigurationPtrOutput() AnalysisReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ToAnalysisReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineCustomLabelConfigurationOutput) ToAnalysisReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLineCustomLabelConfiguration) *AnalysisReferenceLineCustomLabelConfiguration {
		return &v
	}).(AnalysisReferenceLineCustomLabelConfigurationPtrOutput)
}

func (o AnalysisReferenceLineCustomLabelConfigurationOutput) CustomLabel() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisReferenceLineCustomLabelConfiguration) string { return v.CustomLabel }).(pulumi.StringOutput)
}

type AnalysisReferenceLineCustomLabelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineCustomLabelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineCustomLabelConfigurationPtrOutput) ToAnalysisReferenceLineCustomLabelConfigurationPtrOutput() AnalysisReferenceLineCustomLabelConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineCustomLabelConfigurationPtrOutput) ToAnalysisReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineCustomLabelConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineCustomLabelConfigurationPtrOutput) Elem() AnalysisReferenceLineCustomLabelConfigurationOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineCustomLabelConfiguration) AnalysisReferenceLineCustomLabelConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLineCustomLabelConfiguration
		return ret
	}).(AnalysisReferenceLineCustomLabelConfigurationOutput)
}

func (o AnalysisReferenceLineCustomLabelConfigurationPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineCustomLabelConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

type AnalysisReferenceLineDataConfiguration struct {
	AxisBinding          *AnalysisAxisBinding                           `pulumi:"axisBinding"`
	DynamicConfiguration *AnalysisReferenceLineDynamicDataConfiguration `pulumi:"dynamicConfiguration"`
	StaticConfiguration  *AnalysisReferenceLineStaticDataConfiguration  `pulumi:"staticConfiguration"`
}

// AnalysisReferenceLineDataConfigurationInput is an input type that accepts AnalysisReferenceLineDataConfigurationArgs and AnalysisReferenceLineDataConfigurationOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineDataConfigurationInput` via:
//
//	AnalysisReferenceLineDataConfigurationArgs{...}
type AnalysisReferenceLineDataConfigurationInput interface {
	pulumi.Input

	ToAnalysisReferenceLineDataConfigurationOutput() AnalysisReferenceLineDataConfigurationOutput
	ToAnalysisReferenceLineDataConfigurationOutputWithContext(context.Context) AnalysisReferenceLineDataConfigurationOutput
}

type AnalysisReferenceLineDataConfigurationArgs struct {
	AxisBinding          AnalysisAxisBindingPtrInput                           `pulumi:"axisBinding"`
	DynamicConfiguration AnalysisReferenceLineDynamicDataConfigurationPtrInput `pulumi:"dynamicConfiguration"`
	StaticConfiguration  AnalysisReferenceLineStaticDataConfigurationPtrInput  `pulumi:"staticConfiguration"`
}

func (AnalysisReferenceLineDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineDataConfiguration)(nil)).Elem()
}

func (i AnalysisReferenceLineDataConfigurationArgs) ToAnalysisReferenceLineDataConfigurationOutput() AnalysisReferenceLineDataConfigurationOutput {
	return i.ToAnalysisReferenceLineDataConfigurationOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineDataConfigurationArgs) ToAnalysisReferenceLineDataConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineDataConfigurationOutput)
}

type AnalysisReferenceLineDataConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineDataConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineDataConfigurationOutput) ToAnalysisReferenceLineDataConfigurationOutput() AnalysisReferenceLineDataConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineDataConfigurationOutput) ToAnalysisReferenceLineDataConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineDataConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineDataConfigurationOutput) AxisBinding() AnalysisAxisBindingPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineDataConfiguration) *AnalysisAxisBinding { return v.AxisBinding }).(AnalysisAxisBindingPtrOutput)
}

func (o AnalysisReferenceLineDataConfigurationOutput) DynamicConfiguration() AnalysisReferenceLineDynamicDataConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineDataConfiguration) *AnalysisReferenceLineDynamicDataConfiguration {
		return v.DynamicConfiguration
	}).(AnalysisReferenceLineDynamicDataConfigurationPtrOutput)
}

func (o AnalysisReferenceLineDataConfigurationOutput) StaticConfiguration() AnalysisReferenceLineStaticDataConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineDataConfiguration) *AnalysisReferenceLineStaticDataConfiguration {
		return v.StaticConfiguration
	}).(AnalysisReferenceLineStaticDataConfigurationPtrOutput)
}

type AnalysisReferenceLineDynamicDataConfiguration struct {
	Calculation                AnalysisNumericalAggregationFunction `pulumi:"calculation"`
	Column                     AnalysisColumnIdentifier             `pulumi:"column"`
	MeasureAggregationFunction AnalysisAggregationFunction          `pulumi:"measureAggregationFunction"`
}

// AnalysisReferenceLineDynamicDataConfigurationInput is an input type that accepts AnalysisReferenceLineDynamicDataConfigurationArgs and AnalysisReferenceLineDynamicDataConfigurationOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineDynamicDataConfigurationInput` via:
//
//	AnalysisReferenceLineDynamicDataConfigurationArgs{...}
type AnalysisReferenceLineDynamicDataConfigurationInput interface {
	pulumi.Input

	ToAnalysisReferenceLineDynamicDataConfigurationOutput() AnalysisReferenceLineDynamicDataConfigurationOutput
	ToAnalysisReferenceLineDynamicDataConfigurationOutputWithContext(context.Context) AnalysisReferenceLineDynamicDataConfigurationOutput
}

type AnalysisReferenceLineDynamicDataConfigurationArgs struct {
	Calculation                AnalysisNumericalAggregationFunctionInput `pulumi:"calculation"`
	Column                     AnalysisColumnIdentifierInput             `pulumi:"column"`
	MeasureAggregationFunction AnalysisAggregationFunctionInput          `pulumi:"measureAggregationFunction"`
}

func (AnalysisReferenceLineDynamicDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (i AnalysisReferenceLineDynamicDataConfigurationArgs) ToAnalysisReferenceLineDynamicDataConfigurationOutput() AnalysisReferenceLineDynamicDataConfigurationOutput {
	return i.ToAnalysisReferenceLineDynamicDataConfigurationOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineDynamicDataConfigurationArgs) ToAnalysisReferenceLineDynamicDataConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineDynamicDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineDynamicDataConfigurationOutput)
}

func (i AnalysisReferenceLineDynamicDataConfigurationArgs) ToAnalysisReferenceLineDynamicDataConfigurationPtrOutput() AnalysisReferenceLineDynamicDataConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineDynamicDataConfigurationArgs) ToAnalysisReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineDynamicDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineDynamicDataConfigurationOutput).ToAnalysisReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx)
}

// AnalysisReferenceLineDynamicDataConfigurationPtrInput is an input type that accepts AnalysisReferenceLineDynamicDataConfigurationArgs, AnalysisReferenceLineDynamicDataConfigurationPtr and AnalysisReferenceLineDynamicDataConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineDynamicDataConfigurationPtrInput` via:
//
//	        AnalysisReferenceLineDynamicDataConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisReferenceLineDynamicDataConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLineDynamicDataConfigurationPtrOutput() AnalysisReferenceLineDynamicDataConfigurationPtrOutput
	ToAnalysisReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Context) AnalysisReferenceLineDynamicDataConfigurationPtrOutput
}

type analysisReferenceLineDynamicDataConfigurationPtrType AnalysisReferenceLineDynamicDataConfigurationArgs

func AnalysisReferenceLineDynamicDataConfigurationPtr(v *AnalysisReferenceLineDynamicDataConfigurationArgs) AnalysisReferenceLineDynamicDataConfigurationPtrInput {
	return (*analysisReferenceLineDynamicDataConfigurationPtrType)(v)
}

func (*analysisReferenceLineDynamicDataConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (i *analysisReferenceLineDynamicDataConfigurationPtrType) ToAnalysisReferenceLineDynamicDataConfigurationPtrOutput() AnalysisReferenceLineDynamicDataConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisReferenceLineDynamicDataConfigurationPtrType) ToAnalysisReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineDynamicDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineDynamicDataConfigurationPtrOutput)
}

type AnalysisReferenceLineDynamicDataConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineDynamicDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineDynamicDataConfigurationOutput) ToAnalysisReferenceLineDynamicDataConfigurationOutput() AnalysisReferenceLineDynamicDataConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineDynamicDataConfigurationOutput) ToAnalysisReferenceLineDynamicDataConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineDynamicDataConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineDynamicDataConfigurationOutput) ToAnalysisReferenceLineDynamicDataConfigurationPtrOutput() AnalysisReferenceLineDynamicDataConfigurationPtrOutput {
	return o.ToAnalysisReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineDynamicDataConfigurationOutput) ToAnalysisReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineDynamicDataConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLineDynamicDataConfiguration) *AnalysisReferenceLineDynamicDataConfiguration {
		return &v
	}).(AnalysisReferenceLineDynamicDataConfigurationPtrOutput)
}

func (o AnalysisReferenceLineDynamicDataConfigurationOutput) Calculation() AnalysisNumericalAggregationFunctionOutput {
	return o.ApplyT(func(v AnalysisReferenceLineDynamicDataConfiguration) AnalysisNumericalAggregationFunction {
		return v.Calculation
	}).(AnalysisNumericalAggregationFunctionOutput)
}

func (o AnalysisReferenceLineDynamicDataConfigurationOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisReferenceLineDynamicDataConfiguration) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisReferenceLineDynamicDataConfigurationOutput) MeasureAggregationFunction() AnalysisAggregationFunctionOutput {
	return o.ApplyT(func(v AnalysisReferenceLineDynamicDataConfiguration) AnalysisAggregationFunction {
		return v.MeasureAggregationFunction
	}).(AnalysisAggregationFunctionOutput)
}

type AnalysisReferenceLineDynamicDataConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineDynamicDataConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineDynamicDataConfigurationPtrOutput) ToAnalysisReferenceLineDynamicDataConfigurationPtrOutput() AnalysisReferenceLineDynamicDataConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineDynamicDataConfigurationPtrOutput) ToAnalysisReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineDynamicDataConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineDynamicDataConfigurationPtrOutput) Elem() AnalysisReferenceLineDynamicDataConfigurationOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineDynamicDataConfiguration) AnalysisReferenceLineDynamicDataConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLineDynamicDataConfiguration
		return ret
	}).(AnalysisReferenceLineDynamicDataConfigurationOutput)
}

func (o AnalysisReferenceLineDynamicDataConfigurationPtrOutput) Calculation() AnalysisNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineDynamicDataConfiguration) *AnalysisNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return &v.Calculation
	}).(AnalysisNumericalAggregationFunctionPtrOutput)
}

func (o AnalysisReferenceLineDynamicDataConfigurationPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineDynamicDataConfiguration) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisReferenceLineDynamicDataConfigurationPtrOutput) MeasureAggregationFunction() AnalysisAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineDynamicDataConfiguration) *AnalysisAggregationFunction {
		if v == nil {
			return nil
		}
		return &v.MeasureAggregationFunction
	}).(AnalysisAggregationFunctionPtrOutput)
}

type AnalysisReferenceLineLabelConfiguration struct {
	CustomLabelConfiguration *AnalysisReferenceLineCustomLabelConfiguration `pulumi:"customLabelConfiguration"`
	FontColor                *string                                        `pulumi:"fontColor"`
	FontConfiguration        *AnalysisFontConfiguration                     `pulumi:"fontConfiguration"`
	HorizontalPosition       *AnalysisReferenceLineLabelHorizontalPosition  `pulumi:"horizontalPosition"`
	ValueLabelConfiguration  *AnalysisReferenceLineValueLabelConfiguration  `pulumi:"valueLabelConfiguration"`
	VerticalPosition         *AnalysisReferenceLineLabelVerticalPosition    `pulumi:"verticalPosition"`
}

// AnalysisReferenceLineLabelConfigurationInput is an input type that accepts AnalysisReferenceLineLabelConfigurationArgs and AnalysisReferenceLineLabelConfigurationOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineLabelConfigurationInput` via:
//
//	AnalysisReferenceLineLabelConfigurationArgs{...}
type AnalysisReferenceLineLabelConfigurationInput interface {
	pulumi.Input

	ToAnalysisReferenceLineLabelConfigurationOutput() AnalysisReferenceLineLabelConfigurationOutput
	ToAnalysisReferenceLineLabelConfigurationOutputWithContext(context.Context) AnalysisReferenceLineLabelConfigurationOutput
}

type AnalysisReferenceLineLabelConfigurationArgs struct {
	CustomLabelConfiguration AnalysisReferenceLineCustomLabelConfigurationPtrInput `pulumi:"customLabelConfiguration"`
	FontColor                pulumi.StringPtrInput                                 `pulumi:"fontColor"`
	FontConfiguration        AnalysisFontConfigurationPtrInput                     `pulumi:"fontConfiguration"`
	HorizontalPosition       AnalysisReferenceLineLabelHorizontalPositionPtrInput  `pulumi:"horizontalPosition"`
	ValueLabelConfiguration  AnalysisReferenceLineValueLabelConfigurationPtrInput  `pulumi:"valueLabelConfiguration"`
	VerticalPosition         AnalysisReferenceLineLabelVerticalPositionPtrInput    `pulumi:"verticalPosition"`
}

func (AnalysisReferenceLineLabelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineLabelConfiguration)(nil)).Elem()
}

func (i AnalysisReferenceLineLabelConfigurationArgs) ToAnalysisReferenceLineLabelConfigurationOutput() AnalysisReferenceLineLabelConfigurationOutput {
	return i.ToAnalysisReferenceLineLabelConfigurationOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineLabelConfigurationArgs) ToAnalysisReferenceLineLabelConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineLabelConfigurationOutput)
}

func (i AnalysisReferenceLineLabelConfigurationArgs) ToAnalysisReferenceLineLabelConfigurationPtrOutput() AnalysisReferenceLineLabelConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineLabelConfigurationArgs) ToAnalysisReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineLabelConfigurationOutput).ToAnalysisReferenceLineLabelConfigurationPtrOutputWithContext(ctx)
}

// AnalysisReferenceLineLabelConfigurationPtrInput is an input type that accepts AnalysisReferenceLineLabelConfigurationArgs, AnalysisReferenceLineLabelConfigurationPtr and AnalysisReferenceLineLabelConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineLabelConfigurationPtrInput` via:
//
//	        AnalysisReferenceLineLabelConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisReferenceLineLabelConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLineLabelConfigurationPtrOutput() AnalysisReferenceLineLabelConfigurationPtrOutput
	ToAnalysisReferenceLineLabelConfigurationPtrOutputWithContext(context.Context) AnalysisReferenceLineLabelConfigurationPtrOutput
}

type analysisReferenceLineLabelConfigurationPtrType AnalysisReferenceLineLabelConfigurationArgs

func AnalysisReferenceLineLabelConfigurationPtr(v *AnalysisReferenceLineLabelConfigurationArgs) AnalysisReferenceLineLabelConfigurationPtrInput {
	return (*analysisReferenceLineLabelConfigurationPtrType)(v)
}

func (*analysisReferenceLineLabelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineLabelConfiguration)(nil)).Elem()
}

func (i *analysisReferenceLineLabelConfigurationPtrType) ToAnalysisReferenceLineLabelConfigurationPtrOutput() AnalysisReferenceLineLabelConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisReferenceLineLabelConfigurationPtrType) ToAnalysisReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineLabelConfigurationPtrOutput)
}

type AnalysisReferenceLineLabelConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineLabelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineLabelConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineLabelConfigurationOutput) ToAnalysisReferenceLineLabelConfigurationOutput() AnalysisReferenceLineLabelConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineLabelConfigurationOutput) ToAnalysisReferenceLineLabelConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineLabelConfigurationOutput) ToAnalysisReferenceLineLabelConfigurationPtrOutput() AnalysisReferenceLineLabelConfigurationPtrOutput {
	return o.ToAnalysisReferenceLineLabelConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineLabelConfigurationOutput) ToAnalysisReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLineLabelConfiguration) *AnalysisReferenceLineLabelConfiguration {
		return &v
	}).(AnalysisReferenceLineLabelConfigurationPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationOutput) CustomLabelConfiguration() AnalysisReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineLabelConfiguration) *AnalysisReferenceLineCustomLabelConfiguration {
		return v.CustomLabelConfiguration
	}).(AnalysisReferenceLineCustomLabelConfigurationPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineLabelConfiguration) *string { return v.FontColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationOutput) FontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineLabelConfiguration) *AnalysisFontConfiguration { return v.FontConfiguration }).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationOutput) HorizontalPosition() AnalysisReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineLabelConfiguration) *AnalysisReferenceLineLabelHorizontalPosition {
		return v.HorizontalPosition
	}).(AnalysisReferenceLineLabelHorizontalPositionPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationOutput) ValueLabelConfiguration() AnalysisReferenceLineValueLabelConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineLabelConfiguration) *AnalysisReferenceLineValueLabelConfiguration {
		return v.ValueLabelConfiguration
	}).(AnalysisReferenceLineValueLabelConfigurationPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationOutput) VerticalPosition() AnalysisReferenceLineLabelVerticalPositionPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineLabelConfiguration) *AnalysisReferenceLineLabelVerticalPosition {
		return v.VerticalPosition
	}).(AnalysisReferenceLineLabelVerticalPositionPtrOutput)
}

type AnalysisReferenceLineLabelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineLabelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineLabelConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineLabelConfigurationPtrOutput) ToAnalysisReferenceLineLabelConfigurationPtrOutput() AnalysisReferenceLineLabelConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineLabelConfigurationPtrOutput) ToAnalysisReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineLabelConfigurationPtrOutput) Elem() AnalysisReferenceLineLabelConfigurationOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineLabelConfiguration) AnalysisReferenceLineLabelConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLineLabelConfiguration
		return ret
	}).(AnalysisReferenceLineLabelConfigurationOutput)
}

func (o AnalysisReferenceLineLabelConfigurationPtrOutput) CustomLabelConfiguration() AnalysisReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineLabelConfiguration) *AnalysisReferenceLineCustomLabelConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomLabelConfiguration
	}).(AnalysisReferenceLineCustomLabelConfigurationPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationPtrOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineLabelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FontColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationPtrOutput) FontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineLabelConfiguration) *AnalysisFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationPtrOutput) HorizontalPosition() AnalysisReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineLabelConfiguration) *AnalysisReferenceLineLabelHorizontalPosition {
		if v == nil {
			return nil
		}
		return v.HorizontalPosition
	}).(AnalysisReferenceLineLabelHorizontalPositionPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationPtrOutput) ValueLabelConfiguration() AnalysisReferenceLineValueLabelConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineLabelConfiguration) *AnalysisReferenceLineValueLabelConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueLabelConfiguration
	}).(AnalysisReferenceLineValueLabelConfigurationPtrOutput)
}

func (o AnalysisReferenceLineLabelConfigurationPtrOutput) VerticalPosition() AnalysisReferenceLineLabelVerticalPositionPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineLabelConfiguration) *AnalysisReferenceLineLabelVerticalPosition {
		if v == nil {
			return nil
		}
		return v.VerticalPosition
	}).(AnalysisReferenceLineLabelVerticalPositionPtrOutput)
}

type AnalysisReferenceLineStaticDataConfiguration struct {
	Value float64 `pulumi:"value"`
}

// AnalysisReferenceLineStaticDataConfigurationInput is an input type that accepts AnalysisReferenceLineStaticDataConfigurationArgs and AnalysisReferenceLineStaticDataConfigurationOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineStaticDataConfigurationInput` via:
//
//	AnalysisReferenceLineStaticDataConfigurationArgs{...}
type AnalysisReferenceLineStaticDataConfigurationInput interface {
	pulumi.Input

	ToAnalysisReferenceLineStaticDataConfigurationOutput() AnalysisReferenceLineStaticDataConfigurationOutput
	ToAnalysisReferenceLineStaticDataConfigurationOutputWithContext(context.Context) AnalysisReferenceLineStaticDataConfigurationOutput
}

type AnalysisReferenceLineStaticDataConfigurationArgs struct {
	Value pulumi.Float64Input `pulumi:"value"`
}

func (AnalysisReferenceLineStaticDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (i AnalysisReferenceLineStaticDataConfigurationArgs) ToAnalysisReferenceLineStaticDataConfigurationOutput() AnalysisReferenceLineStaticDataConfigurationOutput {
	return i.ToAnalysisReferenceLineStaticDataConfigurationOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineStaticDataConfigurationArgs) ToAnalysisReferenceLineStaticDataConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineStaticDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineStaticDataConfigurationOutput)
}

func (i AnalysisReferenceLineStaticDataConfigurationArgs) ToAnalysisReferenceLineStaticDataConfigurationPtrOutput() AnalysisReferenceLineStaticDataConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineStaticDataConfigurationArgs) ToAnalysisReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineStaticDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineStaticDataConfigurationOutput).ToAnalysisReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx)
}

// AnalysisReferenceLineStaticDataConfigurationPtrInput is an input type that accepts AnalysisReferenceLineStaticDataConfigurationArgs, AnalysisReferenceLineStaticDataConfigurationPtr and AnalysisReferenceLineStaticDataConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineStaticDataConfigurationPtrInput` via:
//
//	        AnalysisReferenceLineStaticDataConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisReferenceLineStaticDataConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLineStaticDataConfigurationPtrOutput() AnalysisReferenceLineStaticDataConfigurationPtrOutput
	ToAnalysisReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Context) AnalysisReferenceLineStaticDataConfigurationPtrOutput
}

type analysisReferenceLineStaticDataConfigurationPtrType AnalysisReferenceLineStaticDataConfigurationArgs

func AnalysisReferenceLineStaticDataConfigurationPtr(v *AnalysisReferenceLineStaticDataConfigurationArgs) AnalysisReferenceLineStaticDataConfigurationPtrInput {
	return (*analysisReferenceLineStaticDataConfigurationPtrType)(v)
}

func (*analysisReferenceLineStaticDataConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (i *analysisReferenceLineStaticDataConfigurationPtrType) ToAnalysisReferenceLineStaticDataConfigurationPtrOutput() AnalysisReferenceLineStaticDataConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisReferenceLineStaticDataConfigurationPtrType) ToAnalysisReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineStaticDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineStaticDataConfigurationPtrOutput)
}

type AnalysisReferenceLineStaticDataConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineStaticDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineStaticDataConfigurationOutput) ToAnalysisReferenceLineStaticDataConfigurationOutput() AnalysisReferenceLineStaticDataConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineStaticDataConfigurationOutput) ToAnalysisReferenceLineStaticDataConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineStaticDataConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineStaticDataConfigurationOutput) ToAnalysisReferenceLineStaticDataConfigurationPtrOutput() AnalysisReferenceLineStaticDataConfigurationPtrOutput {
	return o.ToAnalysisReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineStaticDataConfigurationOutput) ToAnalysisReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineStaticDataConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLineStaticDataConfiguration) *AnalysisReferenceLineStaticDataConfiguration {
		return &v
	}).(AnalysisReferenceLineStaticDataConfigurationPtrOutput)
}

func (o AnalysisReferenceLineStaticDataConfigurationOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisReferenceLineStaticDataConfiguration) float64 { return v.Value }).(pulumi.Float64Output)
}

type AnalysisReferenceLineStaticDataConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineStaticDataConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineStaticDataConfigurationPtrOutput) ToAnalysisReferenceLineStaticDataConfigurationPtrOutput() AnalysisReferenceLineStaticDataConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineStaticDataConfigurationPtrOutput) ToAnalysisReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineStaticDataConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineStaticDataConfigurationPtrOutput) Elem() AnalysisReferenceLineStaticDataConfigurationOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineStaticDataConfiguration) AnalysisReferenceLineStaticDataConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLineStaticDataConfiguration
		return ret
	}).(AnalysisReferenceLineStaticDataConfigurationOutput)
}

func (o AnalysisReferenceLineStaticDataConfigurationPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineStaticDataConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type AnalysisReferenceLineStyleConfiguration struct {
	Color   *string                           `pulumi:"color"`
	Pattern *AnalysisReferenceLinePatternType `pulumi:"pattern"`
}

// AnalysisReferenceLineStyleConfigurationInput is an input type that accepts AnalysisReferenceLineStyleConfigurationArgs and AnalysisReferenceLineStyleConfigurationOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineStyleConfigurationInput` via:
//
//	AnalysisReferenceLineStyleConfigurationArgs{...}
type AnalysisReferenceLineStyleConfigurationInput interface {
	pulumi.Input

	ToAnalysisReferenceLineStyleConfigurationOutput() AnalysisReferenceLineStyleConfigurationOutput
	ToAnalysisReferenceLineStyleConfigurationOutputWithContext(context.Context) AnalysisReferenceLineStyleConfigurationOutput
}

type AnalysisReferenceLineStyleConfigurationArgs struct {
	Color   pulumi.StringPtrInput                    `pulumi:"color"`
	Pattern AnalysisReferenceLinePatternTypePtrInput `pulumi:"pattern"`
}

func (AnalysisReferenceLineStyleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineStyleConfiguration)(nil)).Elem()
}

func (i AnalysisReferenceLineStyleConfigurationArgs) ToAnalysisReferenceLineStyleConfigurationOutput() AnalysisReferenceLineStyleConfigurationOutput {
	return i.ToAnalysisReferenceLineStyleConfigurationOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineStyleConfigurationArgs) ToAnalysisReferenceLineStyleConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineStyleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineStyleConfigurationOutput)
}

func (i AnalysisReferenceLineStyleConfigurationArgs) ToAnalysisReferenceLineStyleConfigurationPtrOutput() AnalysisReferenceLineStyleConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineStyleConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineStyleConfigurationArgs) ToAnalysisReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineStyleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineStyleConfigurationOutput).ToAnalysisReferenceLineStyleConfigurationPtrOutputWithContext(ctx)
}

// AnalysisReferenceLineStyleConfigurationPtrInput is an input type that accepts AnalysisReferenceLineStyleConfigurationArgs, AnalysisReferenceLineStyleConfigurationPtr and AnalysisReferenceLineStyleConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineStyleConfigurationPtrInput` via:
//
//	        AnalysisReferenceLineStyleConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisReferenceLineStyleConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLineStyleConfigurationPtrOutput() AnalysisReferenceLineStyleConfigurationPtrOutput
	ToAnalysisReferenceLineStyleConfigurationPtrOutputWithContext(context.Context) AnalysisReferenceLineStyleConfigurationPtrOutput
}

type analysisReferenceLineStyleConfigurationPtrType AnalysisReferenceLineStyleConfigurationArgs

func AnalysisReferenceLineStyleConfigurationPtr(v *AnalysisReferenceLineStyleConfigurationArgs) AnalysisReferenceLineStyleConfigurationPtrInput {
	return (*analysisReferenceLineStyleConfigurationPtrType)(v)
}

func (*analysisReferenceLineStyleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineStyleConfiguration)(nil)).Elem()
}

func (i *analysisReferenceLineStyleConfigurationPtrType) ToAnalysisReferenceLineStyleConfigurationPtrOutput() AnalysisReferenceLineStyleConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineStyleConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisReferenceLineStyleConfigurationPtrType) ToAnalysisReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineStyleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineStyleConfigurationPtrOutput)
}

type AnalysisReferenceLineStyleConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineStyleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineStyleConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineStyleConfigurationOutput) ToAnalysisReferenceLineStyleConfigurationOutput() AnalysisReferenceLineStyleConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineStyleConfigurationOutput) ToAnalysisReferenceLineStyleConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineStyleConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineStyleConfigurationOutput) ToAnalysisReferenceLineStyleConfigurationPtrOutput() AnalysisReferenceLineStyleConfigurationPtrOutput {
	return o.ToAnalysisReferenceLineStyleConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineStyleConfigurationOutput) ToAnalysisReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineStyleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLineStyleConfiguration) *AnalysisReferenceLineStyleConfiguration {
		return &v
	}).(AnalysisReferenceLineStyleConfigurationPtrOutput)
}

func (o AnalysisReferenceLineStyleConfigurationOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineStyleConfiguration) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o AnalysisReferenceLineStyleConfigurationOutput) Pattern() AnalysisReferenceLinePatternTypePtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineStyleConfiguration) *AnalysisReferenceLinePatternType { return v.Pattern }).(AnalysisReferenceLinePatternTypePtrOutput)
}

type AnalysisReferenceLineStyleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineStyleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineStyleConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineStyleConfigurationPtrOutput) ToAnalysisReferenceLineStyleConfigurationPtrOutput() AnalysisReferenceLineStyleConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineStyleConfigurationPtrOutput) ToAnalysisReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineStyleConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineStyleConfigurationPtrOutput) Elem() AnalysisReferenceLineStyleConfigurationOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineStyleConfiguration) AnalysisReferenceLineStyleConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLineStyleConfiguration
		return ret
	}).(AnalysisReferenceLineStyleConfigurationOutput)
}

func (o AnalysisReferenceLineStyleConfigurationPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineStyleConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisReferenceLineStyleConfigurationPtrOutput) Pattern() AnalysisReferenceLinePatternTypePtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineStyleConfiguration) *AnalysisReferenceLinePatternType {
		if v == nil {
			return nil
		}
		return v.Pattern
	}).(AnalysisReferenceLinePatternTypePtrOutput)
}

type AnalysisReferenceLineValueLabelConfiguration struct {
	FormatConfiguration *AnalysisNumericFormatConfiguration              `pulumi:"formatConfiguration"`
	RelativePosition    *AnalysisReferenceLineValueLabelRelativePosition `pulumi:"relativePosition"`
}

// AnalysisReferenceLineValueLabelConfigurationInput is an input type that accepts AnalysisReferenceLineValueLabelConfigurationArgs and AnalysisReferenceLineValueLabelConfigurationOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineValueLabelConfigurationInput` via:
//
//	AnalysisReferenceLineValueLabelConfigurationArgs{...}
type AnalysisReferenceLineValueLabelConfigurationInput interface {
	pulumi.Input

	ToAnalysisReferenceLineValueLabelConfigurationOutput() AnalysisReferenceLineValueLabelConfigurationOutput
	ToAnalysisReferenceLineValueLabelConfigurationOutputWithContext(context.Context) AnalysisReferenceLineValueLabelConfigurationOutput
}

type AnalysisReferenceLineValueLabelConfigurationArgs struct {
	FormatConfiguration AnalysisNumericFormatConfigurationPtrInput              `pulumi:"formatConfiguration"`
	RelativePosition    AnalysisReferenceLineValueLabelRelativePositionPtrInput `pulumi:"relativePosition"`
}

func (AnalysisReferenceLineValueLabelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (i AnalysisReferenceLineValueLabelConfigurationArgs) ToAnalysisReferenceLineValueLabelConfigurationOutput() AnalysisReferenceLineValueLabelConfigurationOutput {
	return i.ToAnalysisReferenceLineValueLabelConfigurationOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineValueLabelConfigurationArgs) ToAnalysisReferenceLineValueLabelConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineValueLabelConfigurationOutput)
}

func (i AnalysisReferenceLineValueLabelConfigurationArgs) ToAnalysisReferenceLineValueLabelConfigurationPtrOutput() AnalysisReferenceLineValueLabelConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisReferenceLineValueLabelConfigurationArgs) ToAnalysisReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineValueLabelConfigurationOutput).ToAnalysisReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx)
}

// AnalysisReferenceLineValueLabelConfigurationPtrInput is an input type that accepts AnalysisReferenceLineValueLabelConfigurationArgs, AnalysisReferenceLineValueLabelConfigurationPtr and AnalysisReferenceLineValueLabelConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisReferenceLineValueLabelConfigurationPtrInput` via:
//
//	        AnalysisReferenceLineValueLabelConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisReferenceLineValueLabelConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLineValueLabelConfigurationPtrOutput() AnalysisReferenceLineValueLabelConfigurationPtrOutput
	ToAnalysisReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Context) AnalysisReferenceLineValueLabelConfigurationPtrOutput
}

type analysisReferenceLineValueLabelConfigurationPtrType AnalysisReferenceLineValueLabelConfigurationArgs

func AnalysisReferenceLineValueLabelConfigurationPtr(v *AnalysisReferenceLineValueLabelConfigurationArgs) AnalysisReferenceLineValueLabelConfigurationPtrInput {
	return (*analysisReferenceLineValueLabelConfigurationPtrType)(v)
}

func (*analysisReferenceLineValueLabelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (i *analysisReferenceLineValueLabelConfigurationPtrType) ToAnalysisReferenceLineValueLabelConfigurationPtrOutput() AnalysisReferenceLineValueLabelConfigurationPtrOutput {
	return i.ToAnalysisReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisReferenceLineValueLabelConfigurationPtrType) ToAnalysisReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisReferenceLineValueLabelConfigurationPtrOutput)
}

type AnalysisReferenceLineValueLabelConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineValueLabelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineValueLabelConfigurationOutput) ToAnalysisReferenceLineValueLabelConfigurationOutput() AnalysisReferenceLineValueLabelConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineValueLabelConfigurationOutput) ToAnalysisReferenceLineValueLabelConfigurationOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelConfigurationOutput {
	return o
}

func (o AnalysisReferenceLineValueLabelConfigurationOutput) ToAnalysisReferenceLineValueLabelConfigurationPtrOutput() AnalysisReferenceLineValueLabelConfigurationPtrOutput {
	return o.ToAnalysisReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineValueLabelConfigurationOutput) ToAnalysisReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLineValueLabelConfiguration) *AnalysisReferenceLineValueLabelConfiguration {
		return &v
	}).(AnalysisReferenceLineValueLabelConfigurationPtrOutput)
}

func (o AnalysisReferenceLineValueLabelConfigurationOutput) FormatConfiguration() AnalysisNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineValueLabelConfiguration) *AnalysisNumericFormatConfiguration {
		return v.FormatConfiguration
	}).(AnalysisNumericFormatConfigurationPtrOutput)
}

func (o AnalysisReferenceLineValueLabelConfigurationOutput) RelativePosition() AnalysisReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ApplyT(func(v AnalysisReferenceLineValueLabelConfiguration) *AnalysisReferenceLineValueLabelRelativePosition {
		return v.RelativePosition
	}).(AnalysisReferenceLineValueLabelRelativePositionPtrOutput)
}

type AnalysisReferenceLineValueLabelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineValueLabelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (o AnalysisReferenceLineValueLabelConfigurationPtrOutput) ToAnalysisReferenceLineValueLabelConfigurationPtrOutput() AnalysisReferenceLineValueLabelConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineValueLabelConfigurationPtrOutput) ToAnalysisReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelConfigurationPtrOutput {
	return o
}

func (o AnalysisReferenceLineValueLabelConfigurationPtrOutput) Elem() AnalysisReferenceLineValueLabelConfigurationOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineValueLabelConfiguration) AnalysisReferenceLineValueLabelConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLineValueLabelConfiguration
		return ret
	}).(AnalysisReferenceLineValueLabelConfigurationOutput)
}

func (o AnalysisReferenceLineValueLabelConfigurationPtrOutput) FormatConfiguration() AnalysisNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineValueLabelConfiguration) *AnalysisNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(AnalysisNumericFormatConfigurationPtrOutput)
}

func (o AnalysisReferenceLineValueLabelConfigurationPtrOutput) RelativePosition() AnalysisReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineValueLabelConfiguration) *AnalysisReferenceLineValueLabelRelativePosition {
		if v == nil {
			return nil
		}
		return v.RelativePosition
	}).(AnalysisReferenceLineValueLabelRelativePositionPtrOutput)
}

type AnalysisRelativeDateTimeControlDisplayOptions struct {
	DateTimeFormat *string               `pulumi:"dateTimeFormat"`
	TitleOptions   *AnalysisLabelOptions `pulumi:"titleOptions"`
}

// AnalysisRelativeDateTimeControlDisplayOptionsInput is an input type that accepts AnalysisRelativeDateTimeControlDisplayOptionsArgs and AnalysisRelativeDateTimeControlDisplayOptionsOutput values.
// You can construct a concrete instance of `AnalysisRelativeDateTimeControlDisplayOptionsInput` via:
//
//	AnalysisRelativeDateTimeControlDisplayOptionsArgs{...}
type AnalysisRelativeDateTimeControlDisplayOptionsInput interface {
	pulumi.Input

	ToAnalysisRelativeDateTimeControlDisplayOptionsOutput() AnalysisRelativeDateTimeControlDisplayOptionsOutput
	ToAnalysisRelativeDateTimeControlDisplayOptionsOutputWithContext(context.Context) AnalysisRelativeDateTimeControlDisplayOptionsOutput
}

type AnalysisRelativeDateTimeControlDisplayOptionsArgs struct {
	DateTimeFormat pulumi.StringPtrInput        `pulumi:"dateTimeFormat"`
	TitleOptions   AnalysisLabelOptionsPtrInput `pulumi:"titleOptions"`
}

func (AnalysisRelativeDateTimeControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (i AnalysisRelativeDateTimeControlDisplayOptionsArgs) ToAnalysisRelativeDateTimeControlDisplayOptionsOutput() AnalysisRelativeDateTimeControlDisplayOptionsOutput {
	return i.ToAnalysisRelativeDateTimeControlDisplayOptionsOutputWithContext(context.Background())
}

func (i AnalysisRelativeDateTimeControlDisplayOptionsArgs) ToAnalysisRelativeDateTimeControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisRelativeDateTimeControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRelativeDateTimeControlDisplayOptionsOutput)
}

func (i AnalysisRelativeDateTimeControlDisplayOptionsArgs) ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutput() AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput {
	return i.ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisRelativeDateTimeControlDisplayOptionsArgs) ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRelativeDateTimeControlDisplayOptionsOutput).ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx)
}

// AnalysisRelativeDateTimeControlDisplayOptionsPtrInput is an input type that accepts AnalysisRelativeDateTimeControlDisplayOptionsArgs, AnalysisRelativeDateTimeControlDisplayOptionsPtr and AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisRelativeDateTimeControlDisplayOptionsPtrInput` via:
//
//	        AnalysisRelativeDateTimeControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisRelativeDateTimeControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutput() AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput
	ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Context) AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput
}

type analysisRelativeDateTimeControlDisplayOptionsPtrType AnalysisRelativeDateTimeControlDisplayOptionsArgs

func AnalysisRelativeDateTimeControlDisplayOptionsPtr(v *AnalysisRelativeDateTimeControlDisplayOptionsArgs) AnalysisRelativeDateTimeControlDisplayOptionsPtrInput {
	return (*analysisRelativeDateTimeControlDisplayOptionsPtrType)(v)
}

func (*analysisRelativeDateTimeControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (i *analysisRelativeDateTimeControlDisplayOptionsPtrType) ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutput() AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput {
	return i.ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisRelativeDateTimeControlDisplayOptionsPtrType) ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput)
}

type AnalysisRelativeDateTimeControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisRelativeDateTimeControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsOutput) ToAnalysisRelativeDateTimeControlDisplayOptionsOutput() AnalysisRelativeDateTimeControlDisplayOptionsOutput {
	return o
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsOutput) ToAnalysisRelativeDateTimeControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisRelativeDateTimeControlDisplayOptionsOutput {
	return o
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsOutput) ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutput() AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsOutput) ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRelativeDateTimeControlDisplayOptions) *AnalysisRelativeDateTimeControlDisplayOptions {
		return &v
	}).(AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput)
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisRelativeDateTimeControlDisplayOptions) *string { return v.DateTimeFormat }).(pulumi.StringPtrOutput)
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisRelativeDateTimeControlDisplayOptions) *AnalysisLabelOptions { return v.TitleOptions }).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput) ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutput() AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput) ToAnalysisRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput) Elem() AnalysisRelativeDateTimeControlDisplayOptionsOutput {
	return o.ApplyT(func(v *AnalysisRelativeDateTimeControlDisplayOptions) AnalysisRelativeDateTimeControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisRelativeDateTimeControlDisplayOptions
		return ret
	}).(AnalysisRelativeDateTimeControlDisplayOptionsOutput)
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDateTimeControlDisplayOptions) *string {
		if v == nil {
			return nil
		}
		return v.DateTimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDateTimeControlDisplayOptions) *AnalysisLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisRelativeDatesFilter struct {
	AnchorDateConfiguration    AnalysisAnchorDateConfiguration     `pulumi:"anchorDateConfiguration"`
	Column                     AnalysisColumnIdentifier            `pulumi:"column"`
	ExcludePeriodConfiguration *AnalysisExcludePeriodConfiguration `pulumi:"excludePeriodConfiguration"`
	FilterId                   string                              `pulumi:"filterId"`
	MinimumGranularity         *AnalysisTimeGranularity            `pulumi:"minimumGranularity"`
	NullOption                 AnalysisFilterNullOption            `pulumi:"nullOption"`
	ParameterName              *string                             `pulumi:"parameterName"`
	RelativeDateType           AnalysisRelativeDateType            `pulumi:"relativeDateType"`
	RelativeDateValue          *float64                            `pulumi:"relativeDateValue"`
	TimeGranularity            AnalysisTimeGranularity             `pulumi:"timeGranularity"`
}

// AnalysisRelativeDatesFilterInput is an input type that accepts AnalysisRelativeDatesFilterArgs and AnalysisRelativeDatesFilterOutput values.
// You can construct a concrete instance of `AnalysisRelativeDatesFilterInput` via:
//
//	AnalysisRelativeDatesFilterArgs{...}
type AnalysisRelativeDatesFilterInput interface {
	pulumi.Input

	ToAnalysisRelativeDatesFilterOutput() AnalysisRelativeDatesFilterOutput
	ToAnalysisRelativeDatesFilterOutputWithContext(context.Context) AnalysisRelativeDatesFilterOutput
}

type AnalysisRelativeDatesFilterArgs struct {
	AnchorDateConfiguration    AnalysisAnchorDateConfigurationInput       `pulumi:"anchorDateConfiguration"`
	Column                     AnalysisColumnIdentifierInput              `pulumi:"column"`
	ExcludePeriodConfiguration AnalysisExcludePeriodConfigurationPtrInput `pulumi:"excludePeriodConfiguration"`
	FilterId                   pulumi.StringInput                         `pulumi:"filterId"`
	MinimumGranularity         AnalysisTimeGranularityPtrInput            `pulumi:"minimumGranularity"`
	NullOption                 AnalysisFilterNullOptionInput              `pulumi:"nullOption"`
	ParameterName              pulumi.StringPtrInput                      `pulumi:"parameterName"`
	RelativeDateType           AnalysisRelativeDateTypeInput              `pulumi:"relativeDateType"`
	RelativeDateValue          pulumi.Float64PtrInput                     `pulumi:"relativeDateValue"`
	TimeGranularity            AnalysisTimeGranularityInput               `pulumi:"timeGranularity"`
}

func (AnalysisRelativeDatesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRelativeDatesFilter)(nil)).Elem()
}

func (i AnalysisRelativeDatesFilterArgs) ToAnalysisRelativeDatesFilterOutput() AnalysisRelativeDatesFilterOutput {
	return i.ToAnalysisRelativeDatesFilterOutputWithContext(context.Background())
}

func (i AnalysisRelativeDatesFilterArgs) ToAnalysisRelativeDatesFilterOutputWithContext(ctx context.Context) AnalysisRelativeDatesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRelativeDatesFilterOutput)
}

func (i AnalysisRelativeDatesFilterArgs) ToAnalysisRelativeDatesFilterPtrOutput() AnalysisRelativeDatesFilterPtrOutput {
	return i.ToAnalysisRelativeDatesFilterPtrOutputWithContext(context.Background())
}

func (i AnalysisRelativeDatesFilterArgs) ToAnalysisRelativeDatesFilterPtrOutputWithContext(ctx context.Context) AnalysisRelativeDatesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRelativeDatesFilterOutput).ToAnalysisRelativeDatesFilterPtrOutputWithContext(ctx)
}

// AnalysisRelativeDatesFilterPtrInput is an input type that accepts AnalysisRelativeDatesFilterArgs, AnalysisRelativeDatesFilterPtr and AnalysisRelativeDatesFilterPtrOutput values.
// You can construct a concrete instance of `AnalysisRelativeDatesFilterPtrInput` via:
//
//	        AnalysisRelativeDatesFilterArgs{...}
//
//	or:
//
//	        nil
type AnalysisRelativeDatesFilterPtrInput interface {
	pulumi.Input

	ToAnalysisRelativeDatesFilterPtrOutput() AnalysisRelativeDatesFilterPtrOutput
	ToAnalysisRelativeDatesFilterPtrOutputWithContext(context.Context) AnalysisRelativeDatesFilterPtrOutput
}

type analysisRelativeDatesFilterPtrType AnalysisRelativeDatesFilterArgs

func AnalysisRelativeDatesFilterPtr(v *AnalysisRelativeDatesFilterArgs) AnalysisRelativeDatesFilterPtrInput {
	return (*analysisRelativeDatesFilterPtrType)(v)
}

func (*analysisRelativeDatesFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRelativeDatesFilter)(nil)).Elem()
}

func (i *analysisRelativeDatesFilterPtrType) ToAnalysisRelativeDatesFilterPtrOutput() AnalysisRelativeDatesFilterPtrOutput {
	return i.ToAnalysisRelativeDatesFilterPtrOutputWithContext(context.Background())
}

func (i *analysisRelativeDatesFilterPtrType) ToAnalysisRelativeDatesFilterPtrOutputWithContext(ctx context.Context) AnalysisRelativeDatesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRelativeDatesFilterPtrOutput)
}

type AnalysisRelativeDatesFilterOutput struct{ *pulumi.OutputState }

func (AnalysisRelativeDatesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRelativeDatesFilter)(nil)).Elem()
}

func (o AnalysisRelativeDatesFilterOutput) ToAnalysisRelativeDatesFilterOutput() AnalysisRelativeDatesFilterOutput {
	return o
}

func (o AnalysisRelativeDatesFilterOutput) ToAnalysisRelativeDatesFilterOutputWithContext(ctx context.Context) AnalysisRelativeDatesFilterOutput {
	return o
}

func (o AnalysisRelativeDatesFilterOutput) ToAnalysisRelativeDatesFilterPtrOutput() AnalysisRelativeDatesFilterPtrOutput {
	return o.ToAnalysisRelativeDatesFilterPtrOutputWithContext(context.Background())
}

func (o AnalysisRelativeDatesFilterOutput) ToAnalysisRelativeDatesFilterPtrOutputWithContext(ctx context.Context) AnalysisRelativeDatesFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRelativeDatesFilter) *AnalysisRelativeDatesFilter {
		return &v
	}).(AnalysisRelativeDatesFilterPtrOutput)
}

func (o AnalysisRelativeDatesFilterOutput) AnchorDateConfiguration() AnalysisAnchorDateConfigurationOutput {
	return o.ApplyT(func(v AnalysisRelativeDatesFilter) AnalysisAnchorDateConfiguration { return v.AnchorDateConfiguration }).(AnalysisAnchorDateConfigurationOutput)
}

func (o AnalysisRelativeDatesFilterOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisRelativeDatesFilter) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisRelativeDatesFilterOutput) ExcludePeriodConfiguration() AnalysisExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisRelativeDatesFilter) *AnalysisExcludePeriodConfiguration {
		return v.ExcludePeriodConfiguration
	}).(AnalysisExcludePeriodConfigurationPtrOutput)
}

func (o AnalysisRelativeDatesFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisRelativeDatesFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o AnalysisRelativeDatesFilterOutput) MinimumGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v AnalysisRelativeDatesFilter) *AnalysisTimeGranularity { return v.MinimumGranularity }).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisRelativeDatesFilterOutput) NullOption() AnalysisFilterNullOptionOutput {
	return o.ApplyT(func(v AnalysisRelativeDatesFilter) AnalysisFilterNullOption { return v.NullOption }).(AnalysisFilterNullOptionOutput)
}

func (o AnalysisRelativeDatesFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisRelativeDatesFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o AnalysisRelativeDatesFilterOutput) RelativeDateType() AnalysisRelativeDateTypeOutput {
	return o.ApplyT(func(v AnalysisRelativeDatesFilter) AnalysisRelativeDateType { return v.RelativeDateType }).(AnalysisRelativeDateTypeOutput)
}

func (o AnalysisRelativeDatesFilterOutput) RelativeDateValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisRelativeDatesFilter) *float64 { return v.RelativeDateValue }).(pulumi.Float64PtrOutput)
}

func (o AnalysisRelativeDatesFilterOutput) TimeGranularity() AnalysisTimeGranularityOutput {
	return o.ApplyT(func(v AnalysisRelativeDatesFilter) AnalysisTimeGranularity { return v.TimeGranularity }).(AnalysisTimeGranularityOutput)
}

type AnalysisRelativeDatesFilterPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRelativeDatesFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRelativeDatesFilter)(nil)).Elem()
}

func (o AnalysisRelativeDatesFilterPtrOutput) ToAnalysisRelativeDatesFilterPtrOutput() AnalysisRelativeDatesFilterPtrOutput {
	return o
}

func (o AnalysisRelativeDatesFilterPtrOutput) ToAnalysisRelativeDatesFilterPtrOutputWithContext(ctx context.Context) AnalysisRelativeDatesFilterPtrOutput {
	return o
}

func (o AnalysisRelativeDatesFilterPtrOutput) Elem() AnalysisRelativeDatesFilterOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) AnalysisRelativeDatesFilter {
		if v != nil {
			return *v
		}
		var ret AnalysisRelativeDatesFilter
		return ret
	}).(AnalysisRelativeDatesFilterOutput)
}

func (o AnalysisRelativeDatesFilterPtrOutput) AnchorDateConfiguration() AnalysisAnchorDateConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) *AnalysisAnchorDateConfiguration {
		if v == nil {
			return nil
		}
		return &v.AnchorDateConfiguration
	}).(AnalysisAnchorDateConfigurationPtrOutput)
}

func (o AnalysisRelativeDatesFilterPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisRelativeDatesFilterPtrOutput) ExcludePeriodConfiguration() AnalysisExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) *AnalysisExcludePeriodConfiguration {
		if v == nil {
			return nil
		}
		return v.ExcludePeriodConfiguration
	}).(AnalysisExcludePeriodConfigurationPtrOutput)
}

func (o AnalysisRelativeDatesFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisRelativeDatesFilterPtrOutput) MinimumGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) *AnalysisTimeGranularity {
		if v == nil {
			return nil
		}
		return v.MinimumGranularity
	}).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisRelativeDatesFilterPtrOutput) NullOption() AnalysisFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) *AnalysisFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(AnalysisFilterNullOptionPtrOutput)
}

func (o AnalysisRelativeDatesFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisRelativeDatesFilterPtrOutput) RelativeDateType() AnalysisRelativeDateTypePtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) *AnalysisRelativeDateType {
		if v == nil {
			return nil
		}
		return &v.RelativeDateType
	}).(AnalysisRelativeDateTypePtrOutput)
}

func (o AnalysisRelativeDatesFilterPtrOutput) RelativeDateValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.RelativeDateValue
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisRelativeDatesFilterPtrOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v *AnalysisRelativeDatesFilter) *AnalysisTimeGranularity {
		if v == nil {
			return nil
		}
		return &v.TimeGranularity
	}).(AnalysisTimeGranularityPtrOutput)
}

type AnalysisResourcePermission struct {
	Actions   []string `pulumi:"actions"`
	Principal string   `pulumi:"principal"`
	Resource  *string  `pulumi:"resource"`
}

// AnalysisResourcePermissionInput is an input type that accepts AnalysisResourcePermissionArgs and AnalysisResourcePermissionOutput values.
// You can construct a concrete instance of `AnalysisResourcePermissionInput` via:
//
//	AnalysisResourcePermissionArgs{...}
type AnalysisResourcePermissionInput interface {
	pulumi.Input

	ToAnalysisResourcePermissionOutput() AnalysisResourcePermissionOutput
	ToAnalysisResourcePermissionOutputWithContext(context.Context) AnalysisResourcePermissionOutput
}

type AnalysisResourcePermissionArgs struct {
	Actions   pulumi.StringArrayInput `pulumi:"actions"`
	Principal pulumi.StringInput      `pulumi:"principal"`
	Resource  pulumi.StringPtrInput   `pulumi:"resource"`
}

func (AnalysisResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResourcePermission)(nil)).Elem()
}

func (i AnalysisResourcePermissionArgs) ToAnalysisResourcePermissionOutput() AnalysisResourcePermissionOutput {
	return i.ToAnalysisResourcePermissionOutputWithContext(context.Background())
}

func (i AnalysisResourcePermissionArgs) ToAnalysisResourcePermissionOutputWithContext(ctx context.Context) AnalysisResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisResourcePermissionOutput)
}

// AnalysisResourcePermissionArrayInput is an input type that accepts AnalysisResourcePermissionArray and AnalysisResourcePermissionArrayOutput values.
// You can construct a concrete instance of `AnalysisResourcePermissionArrayInput` via:
//
//	AnalysisResourcePermissionArray{ AnalysisResourcePermissionArgs{...} }
type AnalysisResourcePermissionArrayInput interface {
	pulumi.Input

	ToAnalysisResourcePermissionArrayOutput() AnalysisResourcePermissionArrayOutput
	ToAnalysisResourcePermissionArrayOutputWithContext(context.Context) AnalysisResourcePermissionArrayOutput
}

type AnalysisResourcePermissionArray []AnalysisResourcePermissionInput

func (AnalysisResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisResourcePermission)(nil)).Elem()
}

func (i AnalysisResourcePermissionArray) ToAnalysisResourcePermissionArrayOutput() AnalysisResourcePermissionArrayOutput {
	return i.ToAnalysisResourcePermissionArrayOutputWithContext(context.Background())
}

func (i AnalysisResourcePermissionArray) ToAnalysisResourcePermissionArrayOutputWithContext(ctx context.Context) AnalysisResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisResourcePermissionArrayOutput)
}

type AnalysisResourcePermissionOutput struct{ *pulumi.OutputState }

func (AnalysisResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResourcePermission)(nil)).Elem()
}

func (o AnalysisResourcePermissionOutput) ToAnalysisResourcePermissionOutput() AnalysisResourcePermissionOutput {
	return o
}

func (o AnalysisResourcePermissionOutput) ToAnalysisResourcePermissionOutputWithContext(ctx context.Context) AnalysisResourcePermissionOutput {
	return o
}

func (o AnalysisResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o AnalysisResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

func (o AnalysisResourcePermissionOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisResourcePermission) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type AnalysisResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisResourcePermission)(nil)).Elem()
}

func (o AnalysisResourcePermissionArrayOutput) ToAnalysisResourcePermissionArrayOutput() AnalysisResourcePermissionArrayOutput {
	return o
}

func (o AnalysisResourcePermissionArrayOutput) ToAnalysisResourcePermissionArrayOutputWithContext(ctx context.Context) AnalysisResourcePermissionArrayOutput {
	return o
}

func (o AnalysisResourcePermissionArrayOutput) Index(i pulumi.IntInput) AnalysisResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisResourcePermission {
		return vs[0].([]AnalysisResourcePermission)[vs[1].(int)]
	}).(AnalysisResourcePermissionOutput)
}

type AnalysisRollingDateConfiguration struct {
	DataSetIdentifier *string `pulumi:"dataSetIdentifier"`
	Expression        string  `pulumi:"expression"`
}

// AnalysisRollingDateConfigurationInput is an input type that accepts AnalysisRollingDateConfigurationArgs and AnalysisRollingDateConfigurationOutput values.
// You can construct a concrete instance of `AnalysisRollingDateConfigurationInput` via:
//
//	AnalysisRollingDateConfigurationArgs{...}
type AnalysisRollingDateConfigurationInput interface {
	pulumi.Input

	ToAnalysisRollingDateConfigurationOutput() AnalysisRollingDateConfigurationOutput
	ToAnalysisRollingDateConfigurationOutputWithContext(context.Context) AnalysisRollingDateConfigurationOutput
}

type AnalysisRollingDateConfigurationArgs struct {
	DataSetIdentifier pulumi.StringPtrInput `pulumi:"dataSetIdentifier"`
	Expression        pulumi.StringInput    `pulumi:"expression"`
}

func (AnalysisRollingDateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRollingDateConfiguration)(nil)).Elem()
}

func (i AnalysisRollingDateConfigurationArgs) ToAnalysisRollingDateConfigurationOutput() AnalysisRollingDateConfigurationOutput {
	return i.ToAnalysisRollingDateConfigurationOutputWithContext(context.Background())
}

func (i AnalysisRollingDateConfigurationArgs) ToAnalysisRollingDateConfigurationOutputWithContext(ctx context.Context) AnalysisRollingDateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRollingDateConfigurationOutput)
}

func (i AnalysisRollingDateConfigurationArgs) ToAnalysisRollingDateConfigurationPtrOutput() AnalysisRollingDateConfigurationPtrOutput {
	return i.ToAnalysisRollingDateConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisRollingDateConfigurationArgs) ToAnalysisRollingDateConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRollingDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRollingDateConfigurationOutput).ToAnalysisRollingDateConfigurationPtrOutputWithContext(ctx)
}

// AnalysisRollingDateConfigurationPtrInput is an input type that accepts AnalysisRollingDateConfigurationArgs, AnalysisRollingDateConfigurationPtr and AnalysisRollingDateConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisRollingDateConfigurationPtrInput` via:
//
//	        AnalysisRollingDateConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisRollingDateConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisRollingDateConfigurationPtrOutput() AnalysisRollingDateConfigurationPtrOutput
	ToAnalysisRollingDateConfigurationPtrOutputWithContext(context.Context) AnalysisRollingDateConfigurationPtrOutput
}

type analysisRollingDateConfigurationPtrType AnalysisRollingDateConfigurationArgs

func AnalysisRollingDateConfigurationPtr(v *AnalysisRollingDateConfigurationArgs) AnalysisRollingDateConfigurationPtrInput {
	return (*analysisRollingDateConfigurationPtrType)(v)
}

func (*analysisRollingDateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRollingDateConfiguration)(nil)).Elem()
}

func (i *analysisRollingDateConfigurationPtrType) ToAnalysisRollingDateConfigurationPtrOutput() AnalysisRollingDateConfigurationPtrOutput {
	return i.ToAnalysisRollingDateConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisRollingDateConfigurationPtrType) ToAnalysisRollingDateConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRollingDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRollingDateConfigurationPtrOutput)
}

type AnalysisRollingDateConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisRollingDateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRollingDateConfiguration)(nil)).Elem()
}

func (o AnalysisRollingDateConfigurationOutput) ToAnalysisRollingDateConfigurationOutput() AnalysisRollingDateConfigurationOutput {
	return o
}

func (o AnalysisRollingDateConfigurationOutput) ToAnalysisRollingDateConfigurationOutputWithContext(ctx context.Context) AnalysisRollingDateConfigurationOutput {
	return o
}

func (o AnalysisRollingDateConfigurationOutput) ToAnalysisRollingDateConfigurationPtrOutput() AnalysisRollingDateConfigurationPtrOutput {
	return o.ToAnalysisRollingDateConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisRollingDateConfigurationOutput) ToAnalysisRollingDateConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRollingDateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRollingDateConfiguration) *AnalysisRollingDateConfiguration {
		return &v
	}).(AnalysisRollingDateConfigurationPtrOutput)
}

func (o AnalysisRollingDateConfigurationOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisRollingDateConfiguration) *string { return v.DataSetIdentifier }).(pulumi.StringPtrOutput)
}

func (o AnalysisRollingDateConfigurationOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisRollingDateConfiguration) string { return v.Expression }).(pulumi.StringOutput)
}

type AnalysisRollingDateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRollingDateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRollingDateConfiguration)(nil)).Elem()
}

func (o AnalysisRollingDateConfigurationPtrOutput) ToAnalysisRollingDateConfigurationPtrOutput() AnalysisRollingDateConfigurationPtrOutput {
	return o
}

func (o AnalysisRollingDateConfigurationPtrOutput) ToAnalysisRollingDateConfigurationPtrOutputWithContext(ctx context.Context) AnalysisRollingDateConfigurationPtrOutput {
	return o
}

func (o AnalysisRollingDateConfigurationPtrOutput) Elem() AnalysisRollingDateConfigurationOutput {
	return o.ApplyT(func(v *AnalysisRollingDateConfiguration) AnalysisRollingDateConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisRollingDateConfiguration
		return ret
	}).(AnalysisRollingDateConfigurationOutput)
}

func (o AnalysisRollingDateConfigurationPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisRollingDateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisRollingDateConfigurationPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisRollingDateConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

type AnalysisRowAlternateColorOptions struct {
	RowAlternateColors []string              `pulumi:"rowAlternateColors"`
	Status             *AnalysisWidgetStatus `pulumi:"status"`
}

// AnalysisRowAlternateColorOptionsInput is an input type that accepts AnalysisRowAlternateColorOptionsArgs and AnalysisRowAlternateColorOptionsOutput values.
// You can construct a concrete instance of `AnalysisRowAlternateColorOptionsInput` via:
//
//	AnalysisRowAlternateColorOptionsArgs{...}
type AnalysisRowAlternateColorOptionsInput interface {
	pulumi.Input

	ToAnalysisRowAlternateColorOptionsOutput() AnalysisRowAlternateColorOptionsOutput
	ToAnalysisRowAlternateColorOptionsOutputWithContext(context.Context) AnalysisRowAlternateColorOptionsOutput
}

type AnalysisRowAlternateColorOptionsArgs struct {
	RowAlternateColors pulumi.StringArrayInput      `pulumi:"rowAlternateColors"`
	Status             AnalysisWidgetStatusPtrInput `pulumi:"status"`
}

func (AnalysisRowAlternateColorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRowAlternateColorOptions)(nil)).Elem()
}

func (i AnalysisRowAlternateColorOptionsArgs) ToAnalysisRowAlternateColorOptionsOutput() AnalysisRowAlternateColorOptionsOutput {
	return i.ToAnalysisRowAlternateColorOptionsOutputWithContext(context.Background())
}

func (i AnalysisRowAlternateColorOptionsArgs) ToAnalysisRowAlternateColorOptionsOutputWithContext(ctx context.Context) AnalysisRowAlternateColorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRowAlternateColorOptionsOutput)
}

func (i AnalysisRowAlternateColorOptionsArgs) ToAnalysisRowAlternateColorOptionsPtrOutput() AnalysisRowAlternateColorOptionsPtrOutput {
	return i.ToAnalysisRowAlternateColorOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisRowAlternateColorOptionsArgs) ToAnalysisRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) AnalysisRowAlternateColorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRowAlternateColorOptionsOutput).ToAnalysisRowAlternateColorOptionsPtrOutputWithContext(ctx)
}

// AnalysisRowAlternateColorOptionsPtrInput is an input type that accepts AnalysisRowAlternateColorOptionsArgs, AnalysisRowAlternateColorOptionsPtr and AnalysisRowAlternateColorOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisRowAlternateColorOptionsPtrInput` via:
//
//	        AnalysisRowAlternateColorOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisRowAlternateColorOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisRowAlternateColorOptionsPtrOutput() AnalysisRowAlternateColorOptionsPtrOutput
	ToAnalysisRowAlternateColorOptionsPtrOutputWithContext(context.Context) AnalysisRowAlternateColorOptionsPtrOutput
}

type analysisRowAlternateColorOptionsPtrType AnalysisRowAlternateColorOptionsArgs

func AnalysisRowAlternateColorOptionsPtr(v *AnalysisRowAlternateColorOptionsArgs) AnalysisRowAlternateColorOptionsPtrInput {
	return (*analysisRowAlternateColorOptionsPtrType)(v)
}

func (*analysisRowAlternateColorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRowAlternateColorOptions)(nil)).Elem()
}

func (i *analysisRowAlternateColorOptionsPtrType) ToAnalysisRowAlternateColorOptionsPtrOutput() AnalysisRowAlternateColorOptionsPtrOutput {
	return i.ToAnalysisRowAlternateColorOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisRowAlternateColorOptionsPtrType) ToAnalysisRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) AnalysisRowAlternateColorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisRowAlternateColorOptionsPtrOutput)
}

type AnalysisRowAlternateColorOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisRowAlternateColorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRowAlternateColorOptions)(nil)).Elem()
}

func (o AnalysisRowAlternateColorOptionsOutput) ToAnalysisRowAlternateColorOptionsOutput() AnalysisRowAlternateColorOptionsOutput {
	return o
}

func (o AnalysisRowAlternateColorOptionsOutput) ToAnalysisRowAlternateColorOptionsOutputWithContext(ctx context.Context) AnalysisRowAlternateColorOptionsOutput {
	return o
}

func (o AnalysisRowAlternateColorOptionsOutput) ToAnalysisRowAlternateColorOptionsPtrOutput() AnalysisRowAlternateColorOptionsPtrOutput {
	return o.ToAnalysisRowAlternateColorOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisRowAlternateColorOptionsOutput) ToAnalysisRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) AnalysisRowAlternateColorOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRowAlternateColorOptions) *AnalysisRowAlternateColorOptions {
		return &v
	}).(AnalysisRowAlternateColorOptionsPtrOutput)
}

func (o AnalysisRowAlternateColorOptionsOutput) RowAlternateColors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisRowAlternateColorOptions) []string { return v.RowAlternateColors }).(pulumi.StringArrayOutput)
}

func (o AnalysisRowAlternateColorOptionsOutput) Status() AnalysisWidgetStatusPtrOutput {
	return o.ApplyT(func(v AnalysisRowAlternateColorOptions) *AnalysisWidgetStatus { return v.Status }).(AnalysisWidgetStatusPtrOutput)
}

type AnalysisRowAlternateColorOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisRowAlternateColorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRowAlternateColorOptions)(nil)).Elem()
}

func (o AnalysisRowAlternateColorOptionsPtrOutput) ToAnalysisRowAlternateColorOptionsPtrOutput() AnalysisRowAlternateColorOptionsPtrOutput {
	return o
}

func (o AnalysisRowAlternateColorOptionsPtrOutput) ToAnalysisRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) AnalysisRowAlternateColorOptionsPtrOutput {
	return o
}

func (o AnalysisRowAlternateColorOptionsPtrOutput) Elem() AnalysisRowAlternateColorOptionsOutput {
	return o.ApplyT(func(v *AnalysisRowAlternateColorOptions) AnalysisRowAlternateColorOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisRowAlternateColorOptions
		return ret
	}).(AnalysisRowAlternateColorOptionsOutput)
}

func (o AnalysisRowAlternateColorOptionsPtrOutput) RowAlternateColors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisRowAlternateColorOptions) []string {
		if v == nil {
			return nil
		}
		return v.RowAlternateColors
	}).(pulumi.StringArrayOutput)
}

func (o AnalysisRowAlternateColorOptionsPtrOutput) Status() AnalysisWidgetStatusPtrOutput {
	return o.ApplyT(func(v *AnalysisRowAlternateColorOptions) *AnalysisWidgetStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(AnalysisWidgetStatusPtrOutput)
}

type AnalysisSameSheetTargetVisualConfiguration struct {
	TargetVisualOptions *AnalysisTargetVisualOptions `pulumi:"targetVisualOptions"`
	TargetVisuals       []string                     `pulumi:"targetVisuals"`
}

// AnalysisSameSheetTargetVisualConfigurationInput is an input type that accepts AnalysisSameSheetTargetVisualConfigurationArgs and AnalysisSameSheetTargetVisualConfigurationOutput values.
// You can construct a concrete instance of `AnalysisSameSheetTargetVisualConfigurationInput` via:
//
//	AnalysisSameSheetTargetVisualConfigurationArgs{...}
type AnalysisSameSheetTargetVisualConfigurationInput interface {
	pulumi.Input

	ToAnalysisSameSheetTargetVisualConfigurationOutput() AnalysisSameSheetTargetVisualConfigurationOutput
	ToAnalysisSameSheetTargetVisualConfigurationOutputWithContext(context.Context) AnalysisSameSheetTargetVisualConfigurationOutput
}

type AnalysisSameSheetTargetVisualConfigurationArgs struct {
	TargetVisualOptions AnalysisTargetVisualOptionsPtrInput `pulumi:"targetVisualOptions"`
	TargetVisuals       pulumi.StringArrayInput             `pulumi:"targetVisuals"`
}

func (AnalysisSameSheetTargetVisualConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (i AnalysisSameSheetTargetVisualConfigurationArgs) ToAnalysisSameSheetTargetVisualConfigurationOutput() AnalysisSameSheetTargetVisualConfigurationOutput {
	return i.ToAnalysisSameSheetTargetVisualConfigurationOutputWithContext(context.Background())
}

func (i AnalysisSameSheetTargetVisualConfigurationArgs) ToAnalysisSameSheetTargetVisualConfigurationOutputWithContext(ctx context.Context) AnalysisSameSheetTargetVisualConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSameSheetTargetVisualConfigurationOutput)
}

func (i AnalysisSameSheetTargetVisualConfigurationArgs) ToAnalysisSameSheetTargetVisualConfigurationPtrOutput() AnalysisSameSheetTargetVisualConfigurationPtrOutput {
	return i.ToAnalysisSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisSameSheetTargetVisualConfigurationArgs) ToAnalysisSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSameSheetTargetVisualConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSameSheetTargetVisualConfigurationOutput).ToAnalysisSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx)
}

// AnalysisSameSheetTargetVisualConfigurationPtrInput is an input type that accepts AnalysisSameSheetTargetVisualConfigurationArgs, AnalysisSameSheetTargetVisualConfigurationPtr and AnalysisSameSheetTargetVisualConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisSameSheetTargetVisualConfigurationPtrInput` via:
//
//	        AnalysisSameSheetTargetVisualConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisSameSheetTargetVisualConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisSameSheetTargetVisualConfigurationPtrOutput() AnalysisSameSheetTargetVisualConfigurationPtrOutput
	ToAnalysisSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Context) AnalysisSameSheetTargetVisualConfigurationPtrOutput
}

type analysisSameSheetTargetVisualConfigurationPtrType AnalysisSameSheetTargetVisualConfigurationArgs

func AnalysisSameSheetTargetVisualConfigurationPtr(v *AnalysisSameSheetTargetVisualConfigurationArgs) AnalysisSameSheetTargetVisualConfigurationPtrInput {
	return (*analysisSameSheetTargetVisualConfigurationPtrType)(v)
}

func (*analysisSameSheetTargetVisualConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (i *analysisSameSheetTargetVisualConfigurationPtrType) ToAnalysisSameSheetTargetVisualConfigurationPtrOutput() AnalysisSameSheetTargetVisualConfigurationPtrOutput {
	return i.ToAnalysisSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisSameSheetTargetVisualConfigurationPtrType) ToAnalysisSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSameSheetTargetVisualConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSameSheetTargetVisualConfigurationPtrOutput)
}

type AnalysisSameSheetTargetVisualConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisSameSheetTargetVisualConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (o AnalysisSameSheetTargetVisualConfigurationOutput) ToAnalysisSameSheetTargetVisualConfigurationOutput() AnalysisSameSheetTargetVisualConfigurationOutput {
	return o
}

func (o AnalysisSameSheetTargetVisualConfigurationOutput) ToAnalysisSameSheetTargetVisualConfigurationOutputWithContext(ctx context.Context) AnalysisSameSheetTargetVisualConfigurationOutput {
	return o
}

func (o AnalysisSameSheetTargetVisualConfigurationOutput) ToAnalysisSameSheetTargetVisualConfigurationPtrOutput() AnalysisSameSheetTargetVisualConfigurationPtrOutput {
	return o.ToAnalysisSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisSameSheetTargetVisualConfigurationOutput) ToAnalysisSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSameSheetTargetVisualConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSameSheetTargetVisualConfiguration) *AnalysisSameSheetTargetVisualConfiguration {
		return &v
	}).(AnalysisSameSheetTargetVisualConfigurationPtrOutput)
}

func (o AnalysisSameSheetTargetVisualConfigurationOutput) TargetVisualOptions() AnalysisTargetVisualOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisSameSheetTargetVisualConfiguration) *AnalysisTargetVisualOptions {
		return v.TargetVisualOptions
	}).(AnalysisTargetVisualOptionsPtrOutput)
}

func (o AnalysisSameSheetTargetVisualConfigurationOutput) TargetVisuals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisSameSheetTargetVisualConfiguration) []string { return v.TargetVisuals }).(pulumi.StringArrayOutput)
}

type AnalysisSameSheetTargetVisualConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSameSheetTargetVisualConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (o AnalysisSameSheetTargetVisualConfigurationPtrOutput) ToAnalysisSameSheetTargetVisualConfigurationPtrOutput() AnalysisSameSheetTargetVisualConfigurationPtrOutput {
	return o
}

func (o AnalysisSameSheetTargetVisualConfigurationPtrOutput) ToAnalysisSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSameSheetTargetVisualConfigurationPtrOutput {
	return o
}

func (o AnalysisSameSheetTargetVisualConfigurationPtrOutput) Elem() AnalysisSameSheetTargetVisualConfigurationOutput {
	return o.ApplyT(func(v *AnalysisSameSheetTargetVisualConfiguration) AnalysisSameSheetTargetVisualConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisSameSheetTargetVisualConfiguration
		return ret
	}).(AnalysisSameSheetTargetVisualConfigurationOutput)
}

func (o AnalysisSameSheetTargetVisualConfigurationPtrOutput) TargetVisualOptions() AnalysisTargetVisualOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisSameSheetTargetVisualConfiguration) *AnalysisTargetVisualOptions {
		if v == nil {
			return nil
		}
		return v.TargetVisualOptions
	}).(AnalysisTargetVisualOptionsPtrOutput)
}

func (o AnalysisSameSheetTargetVisualConfigurationPtrOutput) TargetVisuals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisSameSheetTargetVisualConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.TargetVisuals
	}).(pulumi.StringArrayOutput)
}

type AnalysisSankeyDiagramAggregatedFieldWells struct {
	Destination []AnalysisDimensionField `pulumi:"destination"`
	Source      []AnalysisDimensionField `pulumi:"source"`
	Weight      []AnalysisMeasureField   `pulumi:"weight"`
}

// AnalysisSankeyDiagramAggregatedFieldWellsInput is an input type that accepts AnalysisSankeyDiagramAggregatedFieldWellsArgs and AnalysisSankeyDiagramAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisSankeyDiagramAggregatedFieldWellsInput` via:
//
//	AnalysisSankeyDiagramAggregatedFieldWellsArgs{...}
type AnalysisSankeyDiagramAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisSankeyDiagramAggregatedFieldWellsOutput() AnalysisSankeyDiagramAggregatedFieldWellsOutput
	ToAnalysisSankeyDiagramAggregatedFieldWellsOutputWithContext(context.Context) AnalysisSankeyDiagramAggregatedFieldWellsOutput
}

type AnalysisSankeyDiagramAggregatedFieldWellsArgs struct {
	Destination AnalysisDimensionFieldArrayInput `pulumi:"destination"`
	Source      AnalysisDimensionFieldArrayInput `pulumi:"source"`
	Weight      AnalysisMeasureFieldArrayInput   `pulumi:"weight"`
}

func (AnalysisSankeyDiagramAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisSankeyDiagramAggregatedFieldWellsArgs) ToAnalysisSankeyDiagramAggregatedFieldWellsOutput() AnalysisSankeyDiagramAggregatedFieldWellsOutput {
	return i.ToAnalysisSankeyDiagramAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisSankeyDiagramAggregatedFieldWellsArgs) ToAnalysisSankeyDiagramAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisSankeyDiagramAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramAggregatedFieldWellsOutput)
}

func (i AnalysisSankeyDiagramAggregatedFieldWellsArgs) ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutput() AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisSankeyDiagramAggregatedFieldWellsArgs) ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramAggregatedFieldWellsOutput).ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisSankeyDiagramAggregatedFieldWellsPtrInput is an input type that accepts AnalysisSankeyDiagramAggregatedFieldWellsArgs, AnalysisSankeyDiagramAggregatedFieldWellsPtr and AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisSankeyDiagramAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisSankeyDiagramAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisSankeyDiagramAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutput() AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput
	ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput
}

type analysisSankeyDiagramAggregatedFieldWellsPtrType AnalysisSankeyDiagramAggregatedFieldWellsArgs

func AnalysisSankeyDiagramAggregatedFieldWellsPtr(v *AnalysisSankeyDiagramAggregatedFieldWellsArgs) AnalysisSankeyDiagramAggregatedFieldWellsPtrInput {
	return (*analysisSankeyDiagramAggregatedFieldWellsPtrType)(v)
}

func (*analysisSankeyDiagramAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisSankeyDiagramAggregatedFieldWellsPtrType) ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutput() AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisSankeyDiagramAggregatedFieldWellsPtrType) ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput)
}

type AnalysisSankeyDiagramAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisSankeyDiagramAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsOutput) ToAnalysisSankeyDiagramAggregatedFieldWellsOutput() AnalysisSankeyDiagramAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsOutput) ToAnalysisSankeyDiagramAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisSankeyDiagramAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsOutput) ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutput() AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsOutput) ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSankeyDiagramAggregatedFieldWells) *AnalysisSankeyDiagramAggregatedFieldWells {
		return &v
	}).(AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput)
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsOutput) Destination() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramAggregatedFieldWells) []AnalysisDimensionField { return v.Destination }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsOutput) Source() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramAggregatedFieldWells) []AnalysisDimensionField { return v.Source }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsOutput) Weight() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramAggregatedFieldWells) []AnalysisMeasureField { return v.Weight }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput) ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutput() AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput) ToAnalysisSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput) Elem() AnalysisSankeyDiagramAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramAggregatedFieldWells) AnalysisSankeyDiagramAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisSankeyDiagramAggregatedFieldWells
		return ret
	}).(AnalysisSankeyDiagramAggregatedFieldWellsOutput)
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput) Destination() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput) Source() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Source
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput) Weight() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisSankeyDiagramChartConfiguration struct {
	DataLabels        *AnalysisDataLabelOptions               `pulumi:"dataLabels"`
	FieldWells        *AnalysisSankeyDiagramFieldWells        `pulumi:"fieldWells"`
	SortConfiguration *AnalysisSankeyDiagramSortConfiguration `pulumi:"sortConfiguration"`
}

// AnalysisSankeyDiagramChartConfigurationInput is an input type that accepts AnalysisSankeyDiagramChartConfigurationArgs and AnalysisSankeyDiagramChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisSankeyDiagramChartConfigurationInput` via:
//
//	AnalysisSankeyDiagramChartConfigurationArgs{...}
type AnalysisSankeyDiagramChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisSankeyDiagramChartConfigurationOutput() AnalysisSankeyDiagramChartConfigurationOutput
	ToAnalysisSankeyDiagramChartConfigurationOutputWithContext(context.Context) AnalysisSankeyDiagramChartConfigurationOutput
}

type AnalysisSankeyDiagramChartConfigurationArgs struct {
	DataLabels        AnalysisDataLabelOptionsPtrInput               `pulumi:"dataLabels"`
	FieldWells        AnalysisSankeyDiagramFieldWellsPtrInput        `pulumi:"fieldWells"`
	SortConfiguration AnalysisSankeyDiagramSortConfigurationPtrInput `pulumi:"sortConfiguration"`
}

func (AnalysisSankeyDiagramChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (i AnalysisSankeyDiagramChartConfigurationArgs) ToAnalysisSankeyDiagramChartConfigurationOutput() AnalysisSankeyDiagramChartConfigurationOutput {
	return i.ToAnalysisSankeyDiagramChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisSankeyDiagramChartConfigurationArgs) ToAnalysisSankeyDiagramChartConfigurationOutputWithContext(ctx context.Context) AnalysisSankeyDiagramChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramChartConfigurationOutput)
}

func (i AnalysisSankeyDiagramChartConfigurationArgs) ToAnalysisSankeyDiagramChartConfigurationPtrOutput() AnalysisSankeyDiagramChartConfigurationPtrOutput {
	return i.ToAnalysisSankeyDiagramChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisSankeyDiagramChartConfigurationArgs) ToAnalysisSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramChartConfigurationOutput).ToAnalysisSankeyDiagramChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisSankeyDiagramChartConfigurationPtrInput is an input type that accepts AnalysisSankeyDiagramChartConfigurationArgs, AnalysisSankeyDiagramChartConfigurationPtr and AnalysisSankeyDiagramChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisSankeyDiagramChartConfigurationPtrInput` via:
//
//	        AnalysisSankeyDiagramChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisSankeyDiagramChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisSankeyDiagramChartConfigurationPtrOutput() AnalysisSankeyDiagramChartConfigurationPtrOutput
	ToAnalysisSankeyDiagramChartConfigurationPtrOutputWithContext(context.Context) AnalysisSankeyDiagramChartConfigurationPtrOutput
}

type analysisSankeyDiagramChartConfigurationPtrType AnalysisSankeyDiagramChartConfigurationArgs

func AnalysisSankeyDiagramChartConfigurationPtr(v *AnalysisSankeyDiagramChartConfigurationArgs) AnalysisSankeyDiagramChartConfigurationPtrInput {
	return (*analysisSankeyDiagramChartConfigurationPtrType)(v)
}

func (*analysisSankeyDiagramChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (i *analysisSankeyDiagramChartConfigurationPtrType) ToAnalysisSankeyDiagramChartConfigurationPtrOutput() AnalysisSankeyDiagramChartConfigurationPtrOutput {
	return i.ToAnalysisSankeyDiagramChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisSankeyDiagramChartConfigurationPtrType) ToAnalysisSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramChartConfigurationPtrOutput)
}

type AnalysisSankeyDiagramChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisSankeyDiagramChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (o AnalysisSankeyDiagramChartConfigurationOutput) ToAnalysisSankeyDiagramChartConfigurationOutput() AnalysisSankeyDiagramChartConfigurationOutput {
	return o
}

func (o AnalysisSankeyDiagramChartConfigurationOutput) ToAnalysisSankeyDiagramChartConfigurationOutputWithContext(ctx context.Context) AnalysisSankeyDiagramChartConfigurationOutput {
	return o
}

func (o AnalysisSankeyDiagramChartConfigurationOutput) ToAnalysisSankeyDiagramChartConfigurationPtrOutput() AnalysisSankeyDiagramChartConfigurationPtrOutput {
	return o.ToAnalysisSankeyDiagramChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisSankeyDiagramChartConfigurationOutput) ToAnalysisSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSankeyDiagramChartConfiguration) *AnalysisSankeyDiagramChartConfiguration {
		return &v
	}).(AnalysisSankeyDiagramChartConfigurationPtrOutput)
}

func (o AnalysisSankeyDiagramChartConfigurationOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramChartConfiguration) *AnalysisDataLabelOptions { return v.DataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisSankeyDiagramChartConfigurationOutput) FieldWells() AnalysisSankeyDiagramFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramChartConfiguration) *AnalysisSankeyDiagramFieldWells { return v.FieldWells }).(AnalysisSankeyDiagramFieldWellsPtrOutput)
}

func (o AnalysisSankeyDiagramChartConfigurationOutput) SortConfiguration() AnalysisSankeyDiagramSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramChartConfiguration) *AnalysisSankeyDiagramSortConfiguration {
		return v.SortConfiguration
	}).(AnalysisSankeyDiagramSortConfigurationPtrOutput)
}

type AnalysisSankeyDiagramChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSankeyDiagramChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (o AnalysisSankeyDiagramChartConfigurationPtrOutput) ToAnalysisSankeyDiagramChartConfigurationPtrOutput() AnalysisSankeyDiagramChartConfigurationPtrOutput {
	return o
}

func (o AnalysisSankeyDiagramChartConfigurationPtrOutput) ToAnalysisSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramChartConfigurationPtrOutput {
	return o
}

func (o AnalysisSankeyDiagramChartConfigurationPtrOutput) Elem() AnalysisSankeyDiagramChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramChartConfiguration) AnalysisSankeyDiagramChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisSankeyDiagramChartConfiguration
		return ret
	}).(AnalysisSankeyDiagramChartConfigurationOutput)
}

func (o AnalysisSankeyDiagramChartConfigurationPtrOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramChartConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisSankeyDiagramChartConfigurationPtrOutput) FieldWells() AnalysisSankeyDiagramFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramChartConfiguration) *AnalysisSankeyDiagramFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisSankeyDiagramFieldWellsPtrOutput)
}

func (o AnalysisSankeyDiagramChartConfigurationPtrOutput) SortConfiguration() AnalysisSankeyDiagramSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramChartConfiguration) *AnalysisSankeyDiagramSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisSankeyDiagramSortConfigurationPtrOutput)
}

type AnalysisSankeyDiagramFieldWells struct {
	SankeyDiagramAggregatedFieldWells *AnalysisSankeyDiagramAggregatedFieldWells `pulumi:"sankeyDiagramAggregatedFieldWells"`
}

// AnalysisSankeyDiagramFieldWellsInput is an input type that accepts AnalysisSankeyDiagramFieldWellsArgs and AnalysisSankeyDiagramFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisSankeyDiagramFieldWellsInput` via:
//
//	AnalysisSankeyDiagramFieldWellsArgs{...}
type AnalysisSankeyDiagramFieldWellsInput interface {
	pulumi.Input

	ToAnalysisSankeyDiagramFieldWellsOutput() AnalysisSankeyDiagramFieldWellsOutput
	ToAnalysisSankeyDiagramFieldWellsOutputWithContext(context.Context) AnalysisSankeyDiagramFieldWellsOutput
}

type AnalysisSankeyDiagramFieldWellsArgs struct {
	SankeyDiagramAggregatedFieldWells AnalysisSankeyDiagramAggregatedFieldWellsPtrInput `pulumi:"sankeyDiagramAggregatedFieldWells"`
}

func (AnalysisSankeyDiagramFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSankeyDiagramFieldWells)(nil)).Elem()
}

func (i AnalysisSankeyDiagramFieldWellsArgs) ToAnalysisSankeyDiagramFieldWellsOutput() AnalysisSankeyDiagramFieldWellsOutput {
	return i.ToAnalysisSankeyDiagramFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisSankeyDiagramFieldWellsArgs) ToAnalysisSankeyDiagramFieldWellsOutputWithContext(ctx context.Context) AnalysisSankeyDiagramFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramFieldWellsOutput)
}

func (i AnalysisSankeyDiagramFieldWellsArgs) ToAnalysisSankeyDiagramFieldWellsPtrOutput() AnalysisSankeyDiagramFieldWellsPtrOutput {
	return i.ToAnalysisSankeyDiagramFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisSankeyDiagramFieldWellsArgs) ToAnalysisSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramFieldWellsOutput).ToAnalysisSankeyDiagramFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisSankeyDiagramFieldWellsPtrInput is an input type that accepts AnalysisSankeyDiagramFieldWellsArgs, AnalysisSankeyDiagramFieldWellsPtr and AnalysisSankeyDiagramFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisSankeyDiagramFieldWellsPtrInput` via:
//
//	        AnalysisSankeyDiagramFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisSankeyDiagramFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisSankeyDiagramFieldWellsPtrOutput() AnalysisSankeyDiagramFieldWellsPtrOutput
	ToAnalysisSankeyDiagramFieldWellsPtrOutputWithContext(context.Context) AnalysisSankeyDiagramFieldWellsPtrOutput
}

type analysisSankeyDiagramFieldWellsPtrType AnalysisSankeyDiagramFieldWellsArgs

func AnalysisSankeyDiagramFieldWellsPtr(v *AnalysisSankeyDiagramFieldWellsArgs) AnalysisSankeyDiagramFieldWellsPtrInput {
	return (*analysisSankeyDiagramFieldWellsPtrType)(v)
}

func (*analysisSankeyDiagramFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSankeyDiagramFieldWells)(nil)).Elem()
}

func (i *analysisSankeyDiagramFieldWellsPtrType) ToAnalysisSankeyDiagramFieldWellsPtrOutput() AnalysisSankeyDiagramFieldWellsPtrOutput {
	return i.ToAnalysisSankeyDiagramFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisSankeyDiagramFieldWellsPtrType) ToAnalysisSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramFieldWellsPtrOutput)
}

type AnalysisSankeyDiagramFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisSankeyDiagramFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSankeyDiagramFieldWells)(nil)).Elem()
}

func (o AnalysisSankeyDiagramFieldWellsOutput) ToAnalysisSankeyDiagramFieldWellsOutput() AnalysisSankeyDiagramFieldWellsOutput {
	return o
}

func (o AnalysisSankeyDiagramFieldWellsOutput) ToAnalysisSankeyDiagramFieldWellsOutputWithContext(ctx context.Context) AnalysisSankeyDiagramFieldWellsOutput {
	return o
}

func (o AnalysisSankeyDiagramFieldWellsOutput) ToAnalysisSankeyDiagramFieldWellsPtrOutput() AnalysisSankeyDiagramFieldWellsPtrOutput {
	return o.ToAnalysisSankeyDiagramFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisSankeyDiagramFieldWellsOutput) ToAnalysisSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSankeyDiagramFieldWells) *AnalysisSankeyDiagramFieldWells {
		return &v
	}).(AnalysisSankeyDiagramFieldWellsPtrOutput)
}

func (o AnalysisSankeyDiagramFieldWellsOutput) SankeyDiagramAggregatedFieldWells() AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramFieldWells) *AnalysisSankeyDiagramAggregatedFieldWells {
		return v.SankeyDiagramAggregatedFieldWells
	}).(AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput)
}

type AnalysisSankeyDiagramFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSankeyDiagramFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSankeyDiagramFieldWells)(nil)).Elem()
}

func (o AnalysisSankeyDiagramFieldWellsPtrOutput) ToAnalysisSankeyDiagramFieldWellsPtrOutput() AnalysisSankeyDiagramFieldWellsPtrOutput {
	return o
}

func (o AnalysisSankeyDiagramFieldWellsPtrOutput) ToAnalysisSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramFieldWellsPtrOutput {
	return o
}

func (o AnalysisSankeyDiagramFieldWellsPtrOutput) Elem() AnalysisSankeyDiagramFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramFieldWells) AnalysisSankeyDiagramFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisSankeyDiagramFieldWells
		return ret
	}).(AnalysisSankeyDiagramFieldWellsOutput)
}

func (o AnalysisSankeyDiagramFieldWellsPtrOutput) SankeyDiagramAggregatedFieldWells() AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramFieldWells) *AnalysisSankeyDiagramAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.SankeyDiagramAggregatedFieldWells
	}).(AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput)
}

type AnalysisSankeyDiagramSortConfiguration struct {
	DestinationItemsLimit *AnalysisItemsLimitConfiguration `pulumi:"destinationItemsLimit"`
	SourceItemsLimit      *AnalysisItemsLimitConfiguration `pulumi:"sourceItemsLimit"`
	WeightSort            []AnalysisFieldSortOptions       `pulumi:"weightSort"`
}

// AnalysisSankeyDiagramSortConfigurationInput is an input type that accepts AnalysisSankeyDiagramSortConfigurationArgs and AnalysisSankeyDiagramSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisSankeyDiagramSortConfigurationInput` via:
//
//	AnalysisSankeyDiagramSortConfigurationArgs{...}
type AnalysisSankeyDiagramSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisSankeyDiagramSortConfigurationOutput() AnalysisSankeyDiagramSortConfigurationOutput
	ToAnalysisSankeyDiagramSortConfigurationOutputWithContext(context.Context) AnalysisSankeyDiagramSortConfigurationOutput
}

type AnalysisSankeyDiagramSortConfigurationArgs struct {
	DestinationItemsLimit AnalysisItemsLimitConfigurationPtrInput `pulumi:"destinationItemsLimit"`
	SourceItemsLimit      AnalysisItemsLimitConfigurationPtrInput `pulumi:"sourceItemsLimit"`
	WeightSort            AnalysisFieldSortOptionsArrayInput      `pulumi:"weightSort"`
}

func (AnalysisSankeyDiagramSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (i AnalysisSankeyDiagramSortConfigurationArgs) ToAnalysisSankeyDiagramSortConfigurationOutput() AnalysisSankeyDiagramSortConfigurationOutput {
	return i.ToAnalysisSankeyDiagramSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisSankeyDiagramSortConfigurationArgs) ToAnalysisSankeyDiagramSortConfigurationOutputWithContext(ctx context.Context) AnalysisSankeyDiagramSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramSortConfigurationOutput)
}

func (i AnalysisSankeyDiagramSortConfigurationArgs) ToAnalysisSankeyDiagramSortConfigurationPtrOutput() AnalysisSankeyDiagramSortConfigurationPtrOutput {
	return i.ToAnalysisSankeyDiagramSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisSankeyDiagramSortConfigurationArgs) ToAnalysisSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramSortConfigurationOutput).ToAnalysisSankeyDiagramSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisSankeyDiagramSortConfigurationPtrInput is an input type that accepts AnalysisSankeyDiagramSortConfigurationArgs, AnalysisSankeyDiagramSortConfigurationPtr and AnalysisSankeyDiagramSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisSankeyDiagramSortConfigurationPtrInput` via:
//
//	        AnalysisSankeyDiagramSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisSankeyDiagramSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisSankeyDiagramSortConfigurationPtrOutput() AnalysisSankeyDiagramSortConfigurationPtrOutput
	ToAnalysisSankeyDiagramSortConfigurationPtrOutputWithContext(context.Context) AnalysisSankeyDiagramSortConfigurationPtrOutput
}

type analysisSankeyDiagramSortConfigurationPtrType AnalysisSankeyDiagramSortConfigurationArgs

func AnalysisSankeyDiagramSortConfigurationPtr(v *AnalysisSankeyDiagramSortConfigurationArgs) AnalysisSankeyDiagramSortConfigurationPtrInput {
	return (*analysisSankeyDiagramSortConfigurationPtrType)(v)
}

func (*analysisSankeyDiagramSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (i *analysisSankeyDiagramSortConfigurationPtrType) ToAnalysisSankeyDiagramSortConfigurationPtrOutput() AnalysisSankeyDiagramSortConfigurationPtrOutput {
	return i.ToAnalysisSankeyDiagramSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisSankeyDiagramSortConfigurationPtrType) ToAnalysisSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramSortConfigurationPtrOutput)
}

type AnalysisSankeyDiagramSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisSankeyDiagramSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (o AnalysisSankeyDiagramSortConfigurationOutput) ToAnalysisSankeyDiagramSortConfigurationOutput() AnalysisSankeyDiagramSortConfigurationOutput {
	return o
}

func (o AnalysisSankeyDiagramSortConfigurationOutput) ToAnalysisSankeyDiagramSortConfigurationOutputWithContext(ctx context.Context) AnalysisSankeyDiagramSortConfigurationOutput {
	return o
}

func (o AnalysisSankeyDiagramSortConfigurationOutput) ToAnalysisSankeyDiagramSortConfigurationPtrOutput() AnalysisSankeyDiagramSortConfigurationPtrOutput {
	return o.ToAnalysisSankeyDiagramSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisSankeyDiagramSortConfigurationOutput) ToAnalysisSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSankeyDiagramSortConfiguration) *AnalysisSankeyDiagramSortConfiguration {
		return &v
	}).(AnalysisSankeyDiagramSortConfigurationPtrOutput)
}

func (o AnalysisSankeyDiagramSortConfigurationOutput) DestinationItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.DestinationItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisSankeyDiagramSortConfigurationOutput) SourceItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.SourceItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisSankeyDiagramSortConfigurationOutput) WeightSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramSortConfiguration) []AnalysisFieldSortOptions { return v.WeightSort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisSankeyDiagramSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSankeyDiagramSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (o AnalysisSankeyDiagramSortConfigurationPtrOutput) ToAnalysisSankeyDiagramSortConfigurationPtrOutput() AnalysisSankeyDiagramSortConfigurationPtrOutput {
	return o
}

func (o AnalysisSankeyDiagramSortConfigurationPtrOutput) ToAnalysisSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramSortConfigurationPtrOutput {
	return o
}

func (o AnalysisSankeyDiagramSortConfigurationPtrOutput) Elem() AnalysisSankeyDiagramSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramSortConfiguration) AnalysisSankeyDiagramSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisSankeyDiagramSortConfiguration
		return ret
	}).(AnalysisSankeyDiagramSortConfigurationOutput)
}

func (o AnalysisSankeyDiagramSortConfigurationPtrOutput) DestinationItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisSankeyDiagramSortConfigurationPtrOutput) SourceItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SourceItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisSankeyDiagramSortConfigurationPtrOutput) WeightSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.WeightSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisSankeyDiagramVisual struct {
	Actions            []AnalysisVisualCustomAction             `pulumi:"actions"`
	ChartConfiguration *AnalysisSankeyDiagramChartConfiguration `pulumi:"chartConfiguration"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions      `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions         `pulumi:"title"`
	VisualId           string                                   `pulumi:"visualId"`
}

// AnalysisSankeyDiagramVisualInput is an input type that accepts AnalysisSankeyDiagramVisualArgs and AnalysisSankeyDiagramVisualOutput values.
// You can construct a concrete instance of `AnalysisSankeyDiagramVisualInput` via:
//
//	AnalysisSankeyDiagramVisualArgs{...}
type AnalysisSankeyDiagramVisualInput interface {
	pulumi.Input

	ToAnalysisSankeyDiagramVisualOutput() AnalysisSankeyDiagramVisualOutput
	ToAnalysisSankeyDiagramVisualOutputWithContext(context.Context) AnalysisSankeyDiagramVisualOutput
}

type AnalysisSankeyDiagramVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput            `pulumi:"actions"`
	ChartConfiguration AnalysisSankeyDiagramChartConfigurationPtrInput `pulumi:"chartConfiguration"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput      `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput         `pulumi:"title"`
	VisualId           pulumi.StringInput                              `pulumi:"visualId"`
}

func (AnalysisSankeyDiagramVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSankeyDiagramVisual)(nil)).Elem()
}

func (i AnalysisSankeyDiagramVisualArgs) ToAnalysisSankeyDiagramVisualOutput() AnalysisSankeyDiagramVisualOutput {
	return i.ToAnalysisSankeyDiagramVisualOutputWithContext(context.Background())
}

func (i AnalysisSankeyDiagramVisualArgs) ToAnalysisSankeyDiagramVisualOutputWithContext(ctx context.Context) AnalysisSankeyDiagramVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramVisualOutput)
}

func (i AnalysisSankeyDiagramVisualArgs) ToAnalysisSankeyDiagramVisualPtrOutput() AnalysisSankeyDiagramVisualPtrOutput {
	return i.ToAnalysisSankeyDiagramVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisSankeyDiagramVisualArgs) ToAnalysisSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramVisualOutput).ToAnalysisSankeyDiagramVisualPtrOutputWithContext(ctx)
}

// AnalysisSankeyDiagramVisualPtrInput is an input type that accepts AnalysisSankeyDiagramVisualArgs, AnalysisSankeyDiagramVisualPtr and AnalysisSankeyDiagramVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisSankeyDiagramVisualPtrInput` via:
//
//	        AnalysisSankeyDiagramVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisSankeyDiagramVisualPtrInput interface {
	pulumi.Input

	ToAnalysisSankeyDiagramVisualPtrOutput() AnalysisSankeyDiagramVisualPtrOutput
	ToAnalysisSankeyDiagramVisualPtrOutputWithContext(context.Context) AnalysisSankeyDiagramVisualPtrOutput
}

type analysisSankeyDiagramVisualPtrType AnalysisSankeyDiagramVisualArgs

func AnalysisSankeyDiagramVisualPtr(v *AnalysisSankeyDiagramVisualArgs) AnalysisSankeyDiagramVisualPtrInput {
	return (*analysisSankeyDiagramVisualPtrType)(v)
}

func (*analysisSankeyDiagramVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSankeyDiagramVisual)(nil)).Elem()
}

func (i *analysisSankeyDiagramVisualPtrType) ToAnalysisSankeyDiagramVisualPtrOutput() AnalysisSankeyDiagramVisualPtrOutput {
	return i.ToAnalysisSankeyDiagramVisualPtrOutputWithContext(context.Background())
}

func (i *analysisSankeyDiagramVisualPtrType) ToAnalysisSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSankeyDiagramVisualPtrOutput)
}

type AnalysisSankeyDiagramVisualOutput struct{ *pulumi.OutputState }

func (AnalysisSankeyDiagramVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSankeyDiagramVisual)(nil)).Elem()
}

func (o AnalysisSankeyDiagramVisualOutput) ToAnalysisSankeyDiagramVisualOutput() AnalysisSankeyDiagramVisualOutput {
	return o
}

func (o AnalysisSankeyDiagramVisualOutput) ToAnalysisSankeyDiagramVisualOutputWithContext(ctx context.Context) AnalysisSankeyDiagramVisualOutput {
	return o
}

func (o AnalysisSankeyDiagramVisualOutput) ToAnalysisSankeyDiagramVisualPtrOutput() AnalysisSankeyDiagramVisualPtrOutput {
	return o.ToAnalysisSankeyDiagramVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisSankeyDiagramVisualOutput) ToAnalysisSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSankeyDiagramVisual) *AnalysisSankeyDiagramVisual {
		return &v
	}).(AnalysisSankeyDiagramVisualPtrOutput)
}

func (o AnalysisSankeyDiagramVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisSankeyDiagramVisualOutput) ChartConfiguration() AnalysisSankeyDiagramChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramVisual) *AnalysisSankeyDiagramChartConfiguration {
		return v.ChartConfiguration
	}).(AnalysisSankeyDiagramChartConfigurationPtrOutput)
}

func (o AnalysisSankeyDiagramVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisSankeyDiagramVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisSankeyDiagramVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisSankeyDiagramVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisSankeyDiagramVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSankeyDiagramVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSankeyDiagramVisual)(nil)).Elem()
}

func (o AnalysisSankeyDiagramVisualPtrOutput) ToAnalysisSankeyDiagramVisualPtrOutput() AnalysisSankeyDiagramVisualPtrOutput {
	return o
}

func (o AnalysisSankeyDiagramVisualPtrOutput) ToAnalysisSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) AnalysisSankeyDiagramVisualPtrOutput {
	return o
}

func (o AnalysisSankeyDiagramVisualPtrOutput) Elem() AnalysisSankeyDiagramVisualOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramVisual) AnalysisSankeyDiagramVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisSankeyDiagramVisual
		return ret
	}).(AnalysisSankeyDiagramVisualOutput)
}

func (o AnalysisSankeyDiagramVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisSankeyDiagramVisualPtrOutput) ChartConfiguration() AnalysisSankeyDiagramChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramVisual) *AnalysisSankeyDiagramChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisSankeyDiagramChartConfigurationPtrOutput)
}

func (o AnalysisSankeyDiagramVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisSankeyDiagramVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisSankeyDiagramVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisSankeyDiagramVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisScatterPlotCategoricallyAggregatedFieldWells struct {
	Category []AnalysisDimensionField `pulumi:"category"`
	Size     []AnalysisMeasureField   `pulumi:"size"`
	XAxis    []AnalysisMeasureField   `pulumi:"xAxis"`
	YAxis    []AnalysisMeasureField   `pulumi:"yAxis"`
}

// AnalysisScatterPlotCategoricallyAggregatedFieldWellsInput is an input type that accepts AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs and AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisScatterPlotCategoricallyAggregatedFieldWellsInput` via:
//
//	AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs{...}
type AnalysisScatterPlotCategoricallyAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput() AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput
	ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(context.Context) AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput
}

type AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs struct {
	Category AnalysisDimensionFieldArrayInput `pulumi:"category"`
	Size     AnalysisMeasureFieldArrayInput   `pulumi:"size"`
	XAxis    AnalysisMeasureFieldArrayInput   `pulumi:"xAxis"`
	YAxis    AnalysisMeasureFieldArrayInput   `pulumi:"yAxis"`
}

func (AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput() AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return i.ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput)
}

func (i AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput).ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrInput is an input type that accepts AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs, AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtr and AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput
	ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput
}

type analysisScatterPlotCategoricallyAggregatedFieldWellsPtrType AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs

func AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtr(v *AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs) AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrInput {
	return (*analysisScatterPlotCategoricallyAggregatedFieldWellsPtrType)(v)
}

func (*analysisScatterPlotCategoricallyAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisScatterPlotCategoricallyAggregatedFieldWellsPtrType) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisScatterPlotCategoricallyAggregatedFieldWellsPtrType) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

type AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput() AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisScatterPlotCategoricallyAggregatedFieldWells) *AnalysisScatterPlotCategoricallyAggregatedFieldWells {
		return &v
	}).(AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisScatterPlotCategoricallyAggregatedFieldWells) []AnalysisDimensionField {
		return v.Category
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput) Size() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisScatterPlotCategoricallyAggregatedFieldWells) []AnalysisMeasureField { return v.Size }).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput) XAxis() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisScatterPlotCategoricallyAggregatedFieldWells) []AnalysisMeasureField { return v.XAxis }).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput) YAxis() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisScatterPlotCategoricallyAggregatedFieldWells) []AnalysisMeasureField { return v.YAxis }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) ToAnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) Elem() AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotCategoricallyAggregatedFieldWells) AnalysisScatterPlotCategoricallyAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisScatterPlotCategoricallyAggregatedFieldWells
		return ret
	}).(AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput)
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) Category() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotCategoricallyAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) Size() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotCategoricallyAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Size
	}).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) XAxis() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotCategoricallyAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.XAxis
	}).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) YAxis() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotCategoricallyAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.YAxis
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisScatterPlotConfiguration struct {
	DataLabels          *AnalysisDataLabelOptions      `pulumi:"dataLabels"`
	FieldWells          *AnalysisScatterPlotFieldWells `pulumi:"fieldWells"`
	Legend              *AnalysisLegendOptions         `pulumi:"legend"`
	Tooltip             *AnalysisTooltipOptions        `pulumi:"tooltip"`
	VisualPalette       *AnalysisVisualPalette         `pulumi:"visualPalette"`
	XAxisDisplayOptions *AnalysisAxisDisplayOptions    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   *AnalysisChartAxisLabelOptions `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions *AnalysisAxisDisplayOptions    `pulumi:"yAxisDisplayOptions"`
	YAxisLabelOptions   *AnalysisChartAxisLabelOptions `pulumi:"yAxisLabelOptions"`
}

// AnalysisScatterPlotConfigurationInput is an input type that accepts AnalysisScatterPlotConfigurationArgs and AnalysisScatterPlotConfigurationOutput values.
// You can construct a concrete instance of `AnalysisScatterPlotConfigurationInput` via:
//
//	AnalysisScatterPlotConfigurationArgs{...}
type AnalysisScatterPlotConfigurationInput interface {
	pulumi.Input

	ToAnalysisScatterPlotConfigurationOutput() AnalysisScatterPlotConfigurationOutput
	ToAnalysisScatterPlotConfigurationOutputWithContext(context.Context) AnalysisScatterPlotConfigurationOutput
}

type AnalysisScatterPlotConfigurationArgs struct {
	DataLabels          AnalysisDataLabelOptionsPtrInput      `pulumi:"dataLabels"`
	FieldWells          AnalysisScatterPlotFieldWellsPtrInput `pulumi:"fieldWells"`
	Legend              AnalysisLegendOptionsPtrInput         `pulumi:"legend"`
	Tooltip             AnalysisTooltipOptionsPtrInput        `pulumi:"tooltip"`
	VisualPalette       AnalysisVisualPalettePtrInput         `pulumi:"visualPalette"`
	XAxisDisplayOptions AnalysisAxisDisplayOptionsPtrInput    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   AnalysisChartAxisLabelOptionsPtrInput `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions AnalysisAxisDisplayOptionsPtrInput    `pulumi:"yAxisDisplayOptions"`
	YAxisLabelOptions   AnalysisChartAxisLabelOptionsPtrInput `pulumi:"yAxisLabelOptions"`
}

func (AnalysisScatterPlotConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScatterPlotConfiguration)(nil)).Elem()
}

func (i AnalysisScatterPlotConfigurationArgs) ToAnalysisScatterPlotConfigurationOutput() AnalysisScatterPlotConfigurationOutput {
	return i.ToAnalysisScatterPlotConfigurationOutputWithContext(context.Background())
}

func (i AnalysisScatterPlotConfigurationArgs) ToAnalysisScatterPlotConfigurationOutputWithContext(ctx context.Context) AnalysisScatterPlotConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotConfigurationOutput)
}

func (i AnalysisScatterPlotConfigurationArgs) ToAnalysisScatterPlotConfigurationPtrOutput() AnalysisScatterPlotConfigurationPtrOutput {
	return i.ToAnalysisScatterPlotConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisScatterPlotConfigurationArgs) ToAnalysisScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotConfigurationOutput).ToAnalysisScatterPlotConfigurationPtrOutputWithContext(ctx)
}

// AnalysisScatterPlotConfigurationPtrInput is an input type that accepts AnalysisScatterPlotConfigurationArgs, AnalysisScatterPlotConfigurationPtr and AnalysisScatterPlotConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisScatterPlotConfigurationPtrInput` via:
//
//	        AnalysisScatterPlotConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisScatterPlotConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisScatterPlotConfigurationPtrOutput() AnalysisScatterPlotConfigurationPtrOutput
	ToAnalysisScatterPlotConfigurationPtrOutputWithContext(context.Context) AnalysisScatterPlotConfigurationPtrOutput
}

type analysisScatterPlotConfigurationPtrType AnalysisScatterPlotConfigurationArgs

func AnalysisScatterPlotConfigurationPtr(v *AnalysisScatterPlotConfigurationArgs) AnalysisScatterPlotConfigurationPtrInput {
	return (*analysisScatterPlotConfigurationPtrType)(v)
}

func (*analysisScatterPlotConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScatterPlotConfiguration)(nil)).Elem()
}

func (i *analysisScatterPlotConfigurationPtrType) ToAnalysisScatterPlotConfigurationPtrOutput() AnalysisScatterPlotConfigurationPtrOutput {
	return i.ToAnalysisScatterPlotConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisScatterPlotConfigurationPtrType) ToAnalysisScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotConfigurationPtrOutput)
}

type AnalysisScatterPlotConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisScatterPlotConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScatterPlotConfiguration)(nil)).Elem()
}

func (o AnalysisScatterPlotConfigurationOutput) ToAnalysisScatterPlotConfigurationOutput() AnalysisScatterPlotConfigurationOutput {
	return o
}

func (o AnalysisScatterPlotConfigurationOutput) ToAnalysisScatterPlotConfigurationOutputWithContext(ctx context.Context) AnalysisScatterPlotConfigurationOutput {
	return o
}

func (o AnalysisScatterPlotConfigurationOutput) ToAnalysisScatterPlotConfigurationPtrOutput() AnalysisScatterPlotConfigurationPtrOutput {
	return o.ToAnalysisScatterPlotConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisScatterPlotConfigurationOutput) ToAnalysisScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisScatterPlotConfiguration) *AnalysisScatterPlotConfiguration {
		return &v
	}).(AnalysisScatterPlotConfigurationPtrOutput)
}

func (o AnalysisScatterPlotConfigurationOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotConfiguration) *AnalysisDataLabelOptions { return v.DataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationOutput) FieldWells() AnalysisScatterPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotConfiguration) *AnalysisScatterPlotFieldWells { return v.FieldWells }).(AnalysisScatterPlotFieldWellsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisScatterPlotConfigurationOutput) XAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotConfiguration) *AnalysisAxisDisplayOptions { return v.XAxisDisplayOptions }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationOutput) XAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotConfiguration) *AnalysisChartAxisLabelOptions { return v.XAxisLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationOutput) YAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotConfiguration) *AnalysisAxisDisplayOptions { return v.YAxisDisplayOptions }).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationOutput) YAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotConfiguration) *AnalysisChartAxisLabelOptions { return v.YAxisLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

type AnalysisScatterPlotConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisScatterPlotConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScatterPlotConfiguration)(nil)).Elem()
}

func (o AnalysisScatterPlotConfigurationPtrOutput) ToAnalysisScatterPlotConfigurationPtrOutput() AnalysisScatterPlotConfigurationPtrOutput {
	return o
}

func (o AnalysisScatterPlotConfigurationPtrOutput) ToAnalysisScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotConfigurationPtrOutput {
	return o
}

func (o AnalysisScatterPlotConfigurationPtrOutput) Elem() AnalysisScatterPlotConfigurationOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotConfiguration) AnalysisScatterPlotConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisScatterPlotConfiguration
		return ret
	}).(AnalysisScatterPlotConfigurationOutput)
}

func (o AnalysisScatterPlotConfigurationPtrOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationPtrOutput) FieldWells() AnalysisScatterPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotConfiguration) *AnalysisScatterPlotFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisScatterPlotFieldWellsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisScatterPlotConfigurationPtrOutput) XAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.XAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationPtrOutput) XAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.XAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationPtrOutput) YAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.YAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisScatterPlotConfigurationPtrOutput) YAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.YAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

type AnalysisScatterPlotFieldWells struct {
	ScatterPlotCategoricallyAggregatedFieldWells *AnalysisScatterPlotCategoricallyAggregatedFieldWells `pulumi:"scatterPlotCategoricallyAggregatedFieldWells"`
	ScatterPlotUnaggregatedFieldWells            *AnalysisScatterPlotUnaggregatedFieldWells            `pulumi:"scatterPlotUnaggregatedFieldWells"`
}

// AnalysisScatterPlotFieldWellsInput is an input type that accepts AnalysisScatterPlotFieldWellsArgs and AnalysisScatterPlotFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisScatterPlotFieldWellsInput` via:
//
//	AnalysisScatterPlotFieldWellsArgs{...}
type AnalysisScatterPlotFieldWellsInput interface {
	pulumi.Input

	ToAnalysisScatterPlotFieldWellsOutput() AnalysisScatterPlotFieldWellsOutput
	ToAnalysisScatterPlotFieldWellsOutputWithContext(context.Context) AnalysisScatterPlotFieldWellsOutput
}

type AnalysisScatterPlotFieldWellsArgs struct {
	ScatterPlotCategoricallyAggregatedFieldWells AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrInput `pulumi:"scatterPlotCategoricallyAggregatedFieldWells"`
	ScatterPlotUnaggregatedFieldWells            AnalysisScatterPlotUnaggregatedFieldWellsPtrInput            `pulumi:"scatterPlotUnaggregatedFieldWells"`
}

func (AnalysisScatterPlotFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScatterPlotFieldWells)(nil)).Elem()
}

func (i AnalysisScatterPlotFieldWellsArgs) ToAnalysisScatterPlotFieldWellsOutput() AnalysisScatterPlotFieldWellsOutput {
	return i.ToAnalysisScatterPlotFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisScatterPlotFieldWellsArgs) ToAnalysisScatterPlotFieldWellsOutputWithContext(ctx context.Context) AnalysisScatterPlotFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotFieldWellsOutput)
}

func (i AnalysisScatterPlotFieldWellsArgs) ToAnalysisScatterPlotFieldWellsPtrOutput() AnalysisScatterPlotFieldWellsPtrOutput {
	return i.ToAnalysisScatterPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisScatterPlotFieldWellsArgs) ToAnalysisScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotFieldWellsOutput).ToAnalysisScatterPlotFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisScatterPlotFieldWellsPtrInput is an input type that accepts AnalysisScatterPlotFieldWellsArgs, AnalysisScatterPlotFieldWellsPtr and AnalysisScatterPlotFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisScatterPlotFieldWellsPtrInput` via:
//
//	        AnalysisScatterPlotFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisScatterPlotFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisScatterPlotFieldWellsPtrOutput() AnalysisScatterPlotFieldWellsPtrOutput
	ToAnalysisScatterPlotFieldWellsPtrOutputWithContext(context.Context) AnalysisScatterPlotFieldWellsPtrOutput
}

type analysisScatterPlotFieldWellsPtrType AnalysisScatterPlotFieldWellsArgs

func AnalysisScatterPlotFieldWellsPtr(v *AnalysisScatterPlotFieldWellsArgs) AnalysisScatterPlotFieldWellsPtrInput {
	return (*analysisScatterPlotFieldWellsPtrType)(v)
}

func (*analysisScatterPlotFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScatterPlotFieldWells)(nil)).Elem()
}

func (i *analysisScatterPlotFieldWellsPtrType) ToAnalysisScatterPlotFieldWellsPtrOutput() AnalysisScatterPlotFieldWellsPtrOutput {
	return i.ToAnalysisScatterPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisScatterPlotFieldWellsPtrType) ToAnalysisScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotFieldWellsPtrOutput)
}

type AnalysisScatterPlotFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisScatterPlotFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScatterPlotFieldWells)(nil)).Elem()
}

func (o AnalysisScatterPlotFieldWellsOutput) ToAnalysisScatterPlotFieldWellsOutput() AnalysisScatterPlotFieldWellsOutput {
	return o
}

func (o AnalysisScatterPlotFieldWellsOutput) ToAnalysisScatterPlotFieldWellsOutputWithContext(ctx context.Context) AnalysisScatterPlotFieldWellsOutput {
	return o
}

func (o AnalysisScatterPlotFieldWellsOutput) ToAnalysisScatterPlotFieldWellsPtrOutput() AnalysisScatterPlotFieldWellsPtrOutput {
	return o.ToAnalysisScatterPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisScatterPlotFieldWellsOutput) ToAnalysisScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisScatterPlotFieldWells) *AnalysisScatterPlotFieldWells {
		return &v
	}).(AnalysisScatterPlotFieldWellsPtrOutput)
}

func (o AnalysisScatterPlotFieldWellsOutput) ScatterPlotCategoricallyAggregatedFieldWells() AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotFieldWells) *AnalysisScatterPlotCategoricallyAggregatedFieldWells {
		return v.ScatterPlotCategoricallyAggregatedFieldWells
	}).(AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

func (o AnalysisScatterPlotFieldWellsOutput) ScatterPlotUnaggregatedFieldWells() AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotFieldWells) *AnalysisScatterPlotUnaggregatedFieldWells {
		return v.ScatterPlotUnaggregatedFieldWells
	}).(AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput)
}

type AnalysisScatterPlotFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisScatterPlotFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScatterPlotFieldWells)(nil)).Elem()
}

func (o AnalysisScatterPlotFieldWellsPtrOutput) ToAnalysisScatterPlotFieldWellsPtrOutput() AnalysisScatterPlotFieldWellsPtrOutput {
	return o
}

func (o AnalysisScatterPlotFieldWellsPtrOutput) ToAnalysisScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotFieldWellsPtrOutput {
	return o
}

func (o AnalysisScatterPlotFieldWellsPtrOutput) Elem() AnalysisScatterPlotFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotFieldWells) AnalysisScatterPlotFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisScatterPlotFieldWells
		return ret
	}).(AnalysisScatterPlotFieldWellsOutput)
}

func (o AnalysisScatterPlotFieldWellsPtrOutput) ScatterPlotCategoricallyAggregatedFieldWells() AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotFieldWells) *AnalysisScatterPlotCategoricallyAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.ScatterPlotCategoricallyAggregatedFieldWells
	}).(AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

func (o AnalysisScatterPlotFieldWellsPtrOutput) ScatterPlotUnaggregatedFieldWells() AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotFieldWells) *AnalysisScatterPlotUnaggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.ScatterPlotUnaggregatedFieldWells
	}).(AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput)
}

type AnalysisScatterPlotUnaggregatedFieldWells struct {
	Size  []AnalysisMeasureField   `pulumi:"size"`
	XAxis []AnalysisDimensionField `pulumi:"xAxis"`
	YAxis []AnalysisDimensionField `pulumi:"yAxis"`
}

// AnalysisScatterPlotUnaggregatedFieldWellsInput is an input type that accepts AnalysisScatterPlotUnaggregatedFieldWellsArgs and AnalysisScatterPlotUnaggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisScatterPlotUnaggregatedFieldWellsInput` via:
//
//	AnalysisScatterPlotUnaggregatedFieldWellsArgs{...}
type AnalysisScatterPlotUnaggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisScatterPlotUnaggregatedFieldWellsOutput() AnalysisScatterPlotUnaggregatedFieldWellsOutput
	ToAnalysisScatterPlotUnaggregatedFieldWellsOutputWithContext(context.Context) AnalysisScatterPlotUnaggregatedFieldWellsOutput
}

type AnalysisScatterPlotUnaggregatedFieldWellsArgs struct {
	Size  AnalysisMeasureFieldArrayInput   `pulumi:"size"`
	XAxis AnalysisDimensionFieldArrayInput `pulumi:"xAxis"`
	YAxis AnalysisDimensionFieldArrayInput `pulumi:"yAxis"`
}

func (AnalysisScatterPlotUnaggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisScatterPlotUnaggregatedFieldWellsArgs) ToAnalysisScatterPlotUnaggregatedFieldWellsOutput() AnalysisScatterPlotUnaggregatedFieldWellsOutput {
	return i.ToAnalysisScatterPlotUnaggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisScatterPlotUnaggregatedFieldWellsArgs) ToAnalysisScatterPlotUnaggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisScatterPlotUnaggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotUnaggregatedFieldWellsOutput)
}

func (i AnalysisScatterPlotUnaggregatedFieldWellsArgs) ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutput() AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput {
	return i.ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisScatterPlotUnaggregatedFieldWellsArgs) ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotUnaggregatedFieldWellsOutput).ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisScatterPlotUnaggregatedFieldWellsPtrInput is an input type that accepts AnalysisScatterPlotUnaggregatedFieldWellsArgs, AnalysisScatterPlotUnaggregatedFieldWellsPtr and AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisScatterPlotUnaggregatedFieldWellsPtrInput` via:
//
//	        AnalysisScatterPlotUnaggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisScatterPlotUnaggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutput() AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput
	ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput
}

type analysisScatterPlotUnaggregatedFieldWellsPtrType AnalysisScatterPlotUnaggregatedFieldWellsArgs

func AnalysisScatterPlotUnaggregatedFieldWellsPtr(v *AnalysisScatterPlotUnaggregatedFieldWellsArgs) AnalysisScatterPlotUnaggregatedFieldWellsPtrInput {
	return (*analysisScatterPlotUnaggregatedFieldWellsPtrType)(v)
}

func (*analysisScatterPlotUnaggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (i *analysisScatterPlotUnaggregatedFieldWellsPtrType) ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutput() AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput {
	return i.ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisScatterPlotUnaggregatedFieldWellsPtrType) ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput)
}

type AnalysisScatterPlotUnaggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisScatterPlotUnaggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsOutput) ToAnalysisScatterPlotUnaggregatedFieldWellsOutput() AnalysisScatterPlotUnaggregatedFieldWellsOutput {
	return o
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsOutput) ToAnalysisScatterPlotUnaggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisScatterPlotUnaggregatedFieldWellsOutput {
	return o
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsOutput) ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutput() AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsOutput) ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisScatterPlotUnaggregatedFieldWells) *AnalysisScatterPlotUnaggregatedFieldWells {
		return &v
	}).(AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput)
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsOutput) Size() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisScatterPlotUnaggregatedFieldWells) []AnalysisMeasureField { return v.Size }).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsOutput) XAxis() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisScatterPlotUnaggregatedFieldWells) []AnalysisDimensionField { return v.XAxis }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsOutput) YAxis() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisScatterPlotUnaggregatedFieldWells) []AnalysisDimensionField { return v.YAxis }).(AnalysisDimensionFieldArrayOutput)
}

type AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput) ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutput() AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput) ToAnalysisScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput) Elem() AnalysisScatterPlotUnaggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotUnaggregatedFieldWells) AnalysisScatterPlotUnaggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisScatterPlotUnaggregatedFieldWells
		return ret
	}).(AnalysisScatterPlotUnaggregatedFieldWellsOutput)
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput) Size() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotUnaggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Size
	}).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput) XAxis() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotUnaggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.XAxis
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput) YAxis() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotUnaggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.YAxis
	}).(AnalysisDimensionFieldArrayOutput)
}

type AnalysisScatterPlotVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisScatterPlotConfiguration   `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisScatterPlotVisualInput is an input type that accepts AnalysisScatterPlotVisualArgs and AnalysisScatterPlotVisualOutput values.
// You can construct a concrete instance of `AnalysisScatterPlotVisualInput` via:
//
//	AnalysisScatterPlotVisualArgs{...}
type AnalysisScatterPlotVisualInput interface {
	pulumi.Input

	ToAnalysisScatterPlotVisualOutput() AnalysisScatterPlotVisualOutput
	ToAnalysisScatterPlotVisualOutputWithContext(context.Context) AnalysisScatterPlotVisualOutput
}

type AnalysisScatterPlotVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisScatterPlotConfigurationPtrInput   `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisScatterPlotVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScatterPlotVisual)(nil)).Elem()
}

func (i AnalysisScatterPlotVisualArgs) ToAnalysisScatterPlotVisualOutput() AnalysisScatterPlotVisualOutput {
	return i.ToAnalysisScatterPlotVisualOutputWithContext(context.Background())
}

func (i AnalysisScatterPlotVisualArgs) ToAnalysisScatterPlotVisualOutputWithContext(ctx context.Context) AnalysisScatterPlotVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotVisualOutput)
}

func (i AnalysisScatterPlotVisualArgs) ToAnalysisScatterPlotVisualPtrOutput() AnalysisScatterPlotVisualPtrOutput {
	return i.ToAnalysisScatterPlotVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisScatterPlotVisualArgs) ToAnalysisScatterPlotVisualPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotVisualOutput).ToAnalysisScatterPlotVisualPtrOutputWithContext(ctx)
}

// AnalysisScatterPlotVisualPtrInput is an input type that accepts AnalysisScatterPlotVisualArgs, AnalysisScatterPlotVisualPtr and AnalysisScatterPlotVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisScatterPlotVisualPtrInput` via:
//
//	        AnalysisScatterPlotVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisScatterPlotVisualPtrInput interface {
	pulumi.Input

	ToAnalysisScatterPlotVisualPtrOutput() AnalysisScatterPlotVisualPtrOutput
	ToAnalysisScatterPlotVisualPtrOutputWithContext(context.Context) AnalysisScatterPlotVisualPtrOutput
}

type analysisScatterPlotVisualPtrType AnalysisScatterPlotVisualArgs

func AnalysisScatterPlotVisualPtr(v *AnalysisScatterPlotVisualArgs) AnalysisScatterPlotVisualPtrInput {
	return (*analysisScatterPlotVisualPtrType)(v)
}

func (*analysisScatterPlotVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScatterPlotVisual)(nil)).Elem()
}

func (i *analysisScatterPlotVisualPtrType) ToAnalysisScatterPlotVisualPtrOutput() AnalysisScatterPlotVisualPtrOutput {
	return i.ToAnalysisScatterPlotVisualPtrOutputWithContext(context.Background())
}

func (i *analysisScatterPlotVisualPtrType) ToAnalysisScatterPlotVisualPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScatterPlotVisualPtrOutput)
}

type AnalysisScatterPlotVisualOutput struct{ *pulumi.OutputState }

func (AnalysisScatterPlotVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScatterPlotVisual)(nil)).Elem()
}

func (o AnalysisScatterPlotVisualOutput) ToAnalysisScatterPlotVisualOutput() AnalysisScatterPlotVisualOutput {
	return o
}

func (o AnalysisScatterPlotVisualOutput) ToAnalysisScatterPlotVisualOutputWithContext(ctx context.Context) AnalysisScatterPlotVisualOutput {
	return o
}

func (o AnalysisScatterPlotVisualOutput) ToAnalysisScatterPlotVisualPtrOutput() AnalysisScatterPlotVisualPtrOutput {
	return o.ToAnalysisScatterPlotVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisScatterPlotVisualOutput) ToAnalysisScatterPlotVisualPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisScatterPlotVisual) *AnalysisScatterPlotVisual {
		return &v
	}).(AnalysisScatterPlotVisualPtrOutput)
}

func (o AnalysisScatterPlotVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisScatterPlotVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisScatterPlotVisualOutput) ChartConfiguration() AnalysisScatterPlotConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotVisual) *AnalysisScatterPlotConfiguration { return v.ChartConfiguration }).(AnalysisScatterPlotConfigurationPtrOutput)
}

func (o AnalysisScatterPlotVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisScatterPlotVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisScatterPlotVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisScatterPlotVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisScatterPlotVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisScatterPlotVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisScatterPlotVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisScatterPlotVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisScatterPlotVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScatterPlotVisual)(nil)).Elem()
}

func (o AnalysisScatterPlotVisualPtrOutput) ToAnalysisScatterPlotVisualPtrOutput() AnalysisScatterPlotVisualPtrOutput {
	return o
}

func (o AnalysisScatterPlotVisualPtrOutput) ToAnalysisScatterPlotVisualPtrOutputWithContext(ctx context.Context) AnalysisScatterPlotVisualPtrOutput {
	return o
}

func (o AnalysisScatterPlotVisualPtrOutput) Elem() AnalysisScatterPlotVisualOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotVisual) AnalysisScatterPlotVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisScatterPlotVisual
		return ret
	}).(AnalysisScatterPlotVisualOutput)
}

func (o AnalysisScatterPlotVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisScatterPlotVisualPtrOutput) ChartConfiguration() AnalysisScatterPlotConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotVisual) *AnalysisScatterPlotConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisScatterPlotConfigurationPtrOutput)
}

func (o AnalysisScatterPlotVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisScatterPlotVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisScatterPlotVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisScatterPlotVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisScatterPlotVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisScrollBarOptions struct {
	Visibility   *AnalysisVisibility          `pulumi:"visibility"`
	VisibleRange *AnalysisVisibleRangeOptions `pulumi:"visibleRange"`
}

// AnalysisScrollBarOptionsInput is an input type that accepts AnalysisScrollBarOptionsArgs and AnalysisScrollBarOptionsOutput values.
// You can construct a concrete instance of `AnalysisScrollBarOptionsInput` via:
//
//	AnalysisScrollBarOptionsArgs{...}
type AnalysisScrollBarOptionsInput interface {
	pulumi.Input

	ToAnalysisScrollBarOptionsOutput() AnalysisScrollBarOptionsOutput
	ToAnalysisScrollBarOptionsOutputWithContext(context.Context) AnalysisScrollBarOptionsOutput
}

type AnalysisScrollBarOptionsArgs struct {
	Visibility   AnalysisVisibilityPtrInput          `pulumi:"visibility"`
	VisibleRange AnalysisVisibleRangeOptionsPtrInput `pulumi:"visibleRange"`
}

func (AnalysisScrollBarOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScrollBarOptions)(nil)).Elem()
}

func (i AnalysisScrollBarOptionsArgs) ToAnalysisScrollBarOptionsOutput() AnalysisScrollBarOptionsOutput {
	return i.ToAnalysisScrollBarOptionsOutputWithContext(context.Background())
}

func (i AnalysisScrollBarOptionsArgs) ToAnalysisScrollBarOptionsOutputWithContext(ctx context.Context) AnalysisScrollBarOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScrollBarOptionsOutput)
}

func (i AnalysisScrollBarOptionsArgs) ToAnalysisScrollBarOptionsPtrOutput() AnalysisScrollBarOptionsPtrOutput {
	return i.ToAnalysisScrollBarOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisScrollBarOptionsArgs) ToAnalysisScrollBarOptionsPtrOutputWithContext(ctx context.Context) AnalysisScrollBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScrollBarOptionsOutput).ToAnalysisScrollBarOptionsPtrOutputWithContext(ctx)
}

// AnalysisScrollBarOptionsPtrInput is an input type that accepts AnalysisScrollBarOptionsArgs, AnalysisScrollBarOptionsPtr and AnalysisScrollBarOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisScrollBarOptionsPtrInput` via:
//
//	        AnalysisScrollBarOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisScrollBarOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisScrollBarOptionsPtrOutput() AnalysisScrollBarOptionsPtrOutput
	ToAnalysisScrollBarOptionsPtrOutputWithContext(context.Context) AnalysisScrollBarOptionsPtrOutput
}

type analysisScrollBarOptionsPtrType AnalysisScrollBarOptionsArgs

func AnalysisScrollBarOptionsPtr(v *AnalysisScrollBarOptionsArgs) AnalysisScrollBarOptionsPtrInput {
	return (*analysisScrollBarOptionsPtrType)(v)
}

func (*analysisScrollBarOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScrollBarOptions)(nil)).Elem()
}

func (i *analysisScrollBarOptionsPtrType) ToAnalysisScrollBarOptionsPtrOutput() AnalysisScrollBarOptionsPtrOutput {
	return i.ToAnalysisScrollBarOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisScrollBarOptionsPtrType) ToAnalysisScrollBarOptionsPtrOutputWithContext(ctx context.Context) AnalysisScrollBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisScrollBarOptionsPtrOutput)
}

type AnalysisScrollBarOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisScrollBarOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisScrollBarOptions)(nil)).Elem()
}

func (o AnalysisScrollBarOptionsOutput) ToAnalysisScrollBarOptionsOutput() AnalysisScrollBarOptionsOutput {
	return o
}

func (o AnalysisScrollBarOptionsOutput) ToAnalysisScrollBarOptionsOutputWithContext(ctx context.Context) AnalysisScrollBarOptionsOutput {
	return o
}

func (o AnalysisScrollBarOptionsOutput) ToAnalysisScrollBarOptionsPtrOutput() AnalysisScrollBarOptionsPtrOutput {
	return o.ToAnalysisScrollBarOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisScrollBarOptionsOutput) ToAnalysisScrollBarOptionsPtrOutputWithContext(ctx context.Context) AnalysisScrollBarOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisScrollBarOptions) *AnalysisScrollBarOptions {
		return &v
	}).(AnalysisScrollBarOptionsPtrOutput)
}

func (o AnalysisScrollBarOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisScrollBarOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisScrollBarOptionsOutput) VisibleRange() AnalysisVisibleRangeOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisScrollBarOptions) *AnalysisVisibleRangeOptions { return v.VisibleRange }).(AnalysisVisibleRangeOptionsPtrOutput)
}

type AnalysisScrollBarOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisScrollBarOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisScrollBarOptions)(nil)).Elem()
}

func (o AnalysisScrollBarOptionsPtrOutput) ToAnalysisScrollBarOptionsPtrOutput() AnalysisScrollBarOptionsPtrOutput {
	return o
}

func (o AnalysisScrollBarOptionsPtrOutput) ToAnalysisScrollBarOptionsPtrOutputWithContext(ctx context.Context) AnalysisScrollBarOptionsPtrOutput {
	return o
}

func (o AnalysisScrollBarOptionsPtrOutput) Elem() AnalysisScrollBarOptionsOutput {
	return o.ApplyT(func(v *AnalysisScrollBarOptions) AnalysisScrollBarOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisScrollBarOptions
		return ret
	}).(AnalysisScrollBarOptionsOutput)
}

func (o AnalysisScrollBarOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisScrollBarOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisScrollBarOptionsPtrOutput) VisibleRange() AnalysisVisibleRangeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisScrollBarOptions) *AnalysisVisibleRangeOptions {
		if v == nil {
			return nil
		}
		return v.VisibleRange
	}).(AnalysisVisibleRangeOptionsPtrOutput)
}

type AnalysisSecondaryValueOptions struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisSecondaryValueOptionsInput is an input type that accepts AnalysisSecondaryValueOptionsArgs and AnalysisSecondaryValueOptionsOutput values.
// You can construct a concrete instance of `AnalysisSecondaryValueOptionsInput` via:
//
//	AnalysisSecondaryValueOptionsArgs{...}
type AnalysisSecondaryValueOptionsInput interface {
	pulumi.Input

	ToAnalysisSecondaryValueOptionsOutput() AnalysisSecondaryValueOptionsOutput
	ToAnalysisSecondaryValueOptionsOutputWithContext(context.Context) AnalysisSecondaryValueOptionsOutput
}

type AnalysisSecondaryValueOptionsArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisSecondaryValueOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSecondaryValueOptions)(nil)).Elem()
}

func (i AnalysisSecondaryValueOptionsArgs) ToAnalysisSecondaryValueOptionsOutput() AnalysisSecondaryValueOptionsOutput {
	return i.ToAnalysisSecondaryValueOptionsOutputWithContext(context.Background())
}

func (i AnalysisSecondaryValueOptionsArgs) ToAnalysisSecondaryValueOptionsOutputWithContext(ctx context.Context) AnalysisSecondaryValueOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSecondaryValueOptionsOutput)
}

func (i AnalysisSecondaryValueOptionsArgs) ToAnalysisSecondaryValueOptionsPtrOutput() AnalysisSecondaryValueOptionsPtrOutput {
	return i.ToAnalysisSecondaryValueOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisSecondaryValueOptionsArgs) ToAnalysisSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) AnalysisSecondaryValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSecondaryValueOptionsOutput).ToAnalysisSecondaryValueOptionsPtrOutputWithContext(ctx)
}

// AnalysisSecondaryValueOptionsPtrInput is an input type that accepts AnalysisSecondaryValueOptionsArgs, AnalysisSecondaryValueOptionsPtr and AnalysisSecondaryValueOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisSecondaryValueOptionsPtrInput` via:
//
//	        AnalysisSecondaryValueOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisSecondaryValueOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisSecondaryValueOptionsPtrOutput() AnalysisSecondaryValueOptionsPtrOutput
	ToAnalysisSecondaryValueOptionsPtrOutputWithContext(context.Context) AnalysisSecondaryValueOptionsPtrOutput
}

type analysisSecondaryValueOptionsPtrType AnalysisSecondaryValueOptionsArgs

func AnalysisSecondaryValueOptionsPtr(v *AnalysisSecondaryValueOptionsArgs) AnalysisSecondaryValueOptionsPtrInput {
	return (*analysisSecondaryValueOptionsPtrType)(v)
}

func (*analysisSecondaryValueOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSecondaryValueOptions)(nil)).Elem()
}

func (i *analysisSecondaryValueOptionsPtrType) ToAnalysisSecondaryValueOptionsPtrOutput() AnalysisSecondaryValueOptionsPtrOutput {
	return i.ToAnalysisSecondaryValueOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisSecondaryValueOptionsPtrType) ToAnalysisSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) AnalysisSecondaryValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSecondaryValueOptionsPtrOutput)
}

type AnalysisSecondaryValueOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisSecondaryValueOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSecondaryValueOptions)(nil)).Elem()
}

func (o AnalysisSecondaryValueOptionsOutput) ToAnalysisSecondaryValueOptionsOutput() AnalysisSecondaryValueOptionsOutput {
	return o
}

func (o AnalysisSecondaryValueOptionsOutput) ToAnalysisSecondaryValueOptionsOutputWithContext(ctx context.Context) AnalysisSecondaryValueOptionsOutput {
	return o
}

func (o AnalysisSecondaryValueOptionsOutput) ToAnalysisSecondaryValueOptionsPtrOutput() AnalysisSecondaryValueOptionsPtrOutput {
	return o.ToAnalysisSecondaryValueOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisSecondaryValueOptionsOutput) ToAnalysisSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) AnalysisSecondaryValueOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSecondaryValueOptions) *AnalysisSecondaryValueOptions {
		return &v
	}).(AnalysisSecondaryValueOptionsPtrOutput)
}

func (o AnalysisSecondaryValueOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisSecondaryValueOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisSecondaryValueOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSecondaryValueOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSecondaryValueOptions)(nil)).Elem()
}

func (o AnalysisSecondaryValueOptionsPtrOutput) ToAnalysisSecondaryValueOptionsPtrOutput() AnalysisSecondaryValueOptionsPtrOutput {
	return o
}

func (o AnalysisSecondaryValueOptionsPtrOutput) ToAnalysisSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) AnalysisSecondaryValueOptionsPtrOutput {
	return o
}

func (o AnalysisSecondaryValueOptionsPtrOutput) Elem() AnalysisSecondaryValueOptionsOutput {
	return o.ApplyT(func(v *AnalysisSecondaryValueOptions) AnalysisSecondaryValueOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisSecondaryValueOptions
		return ret
	}).(AnalysisSecondaryValueOptionsOutput)
}

func (o AnalysisSecondaryValueOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisSecondaryValueOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisSectionAfterPageBreak struct {
	Status *AnalysisSectionPageBreakStatus `pulumi:"status"`
}

// AnalysisSectionAfterPageBreakInput is an input type that accepts AnalysisSectionAfterPageBreakArgs and AnalysisSectionAfterPageBreakOutput values.
// You can construct a concrete instance of `AnalysisSectionAfterPageBreakInput` via:
//
//	AnalysisSectionAfterPageBreakArgs{...}
type AnalysisSectionAfterPageBreakInput interface {
	pulumi.Input

	ToAnalysisSectionAfterPageBreakOutput() AnalysisSectionAfterPageBreakOutput
	ToAnalysisSectionAfterPageBreakOutputWithContext(context.Context) AnalysisSectionAfterPageBreakOutput
}

type AnalysisSectionAfterPageBreakArgs struct {
	Status AnalysisSectionPageBreakStatusPtrInput `pulumi:"status"`
}

func (AnalysisSectionAfterPageBreakArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionAfterPageBreak)(nil)).Elem()
}

func (i AnalysisSectionAfterPageBreakArgs) ToAnalysisSectionAfterPageBreakOutput() AnalysisSectionAfterPageBreakOutput {
	return i.ToAnalysisSectionAfterPageBreakOutputWithContext(context.Background())
}

func (i AnalysisSectionAfterPageBreakArgs) ToAnalysisSectionAfterPageBreakOutputWithContext(ctx context.Context) AnalysisSectionAfterPageBreakOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionAfterPageBreakOutput)
}

func (i AnalysisSectionAfterPageBreakArgs) ToAnalysisSectionAfterPageBreakPtrOutput() AnalysisSectionAfterPageBreakPtrOutput {
	return i.ToAnalysisSectionAfterPageBreakPtrOutputWithContext(context.Background())
}

func (i AnalysisSectionAfterPageBreakArgs) ToAnalysisSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) AnalysisSectionAfterPageBreakPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionAfterPageBreakOutput).ToAnalysisSectionAfterPageBreakPtrOutputWithContext(ctx)
}

// AnalysisSectionAfterPageBreakPtrInput is an input type that accepts AnalysisSectionAfterPageBreakArgs, AnalysisSectionAfterPageBreakPtr and AnalysisSectionAfterPageBreakPtrOutput values.
// You can construct a concrete instance of `AnalysisSectionAfterPageBreakPtrInput` via:
//
//	        AnalysisSectionAfterPageBreakArgs{...}
//
//	or:
//
//	        nil
type AnalysisSectionAfterPageBreakPtrInput interface {
	pulumi.Input

	ToAnalysisSectionAfterPageBreakPtrOutput() AnalysisSectionAfterPageBreakPtrOutput
	ToAnalysisSectionAfterPageBreakPtrOutputWithContext(context.Context) AnalysisSectionAfterPageBreakPtrOutput
}

type analysisSectionAfterPageBreakPtrType AnalysisSectionAfterPageBreakArgs

func AnalysisSectionAfterPageBreakPtr(v *AnalysisSectionAfterPageBreakArgs) AnalysisSectionAfterPageBreakPtrInput {
	return (*analysisSectionAfterPageBreakPtrType)(v)
}

func (*analysisSectionAfterPageBreakPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionAfterPageBreak)(nil)).Elem()
}

func (i *analysisSectionAfterPageBreakPtrType) ToAnalysisSectionAfterPageBreakPtrOutput() AnalysisSectionAfterPageBreakPtrOutput {
	return i.ToAnalysisSectionAfterPageBreakPtrOutputWithContext(context.Background())
}

func (i *analysisSectionAfterPageBreakPtrType) ToAnalysisSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) AnalysisSectionAfterPageBreakPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionAfterPageBreakPtrOutput)
}

type AnalysisSectionAfterPageBreakOutput struct{ *pulumi.OutputState }

func (AnalysisSectionAfterPageBreakOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionAfterPageBreak)(nil)).Elem()
}

func (o AnalysisSectionAfterPageBreakOutput) ToAnalysisSectionAfterPageBreakOutput() AnalysisSectionAfterPageBreakOutput {
	return o
}

func (o AnalysisSectionAfterPageBreakOutput) ToAnalysisSectionAfterPageBreakOutputWithContext(ctx context.Context) AnalysisSectionAfterPageBreakOutput {
	return o
}

func (o AnalysisSectionAfterPageBreakOutput) ToAnalysisSectionAfterPageBreakPtrOutput() AnalysisSectionAfterPageBreakPtrOutput {
	return o.ToAnalysisSectionAfterPageBreakPtrOutputWithContext(context.Background())
}

func (o AnalysisSectionAfterPageBreakOutput) ToAnalysisSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) AnalysisSectionAfterPageBreakPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSectionAfterPageBreak) *AnalysisSectionAfterPageBreak {
		return &v
	}).(AnalysisSectionAfterPageBreakPtrOutput)
}

func (o AnalysisSectionAfterPageBreakOutput) Status() AnalysisSectionPageBreakStatusPtrOutput {
	return o.ApplyT(func(v AnalysisSectionAfterPageBreak) *AnalysisSectionPageBreakStatus { return v.Status }).(AnalysisSectionPageBreakStatusPtrOutput)
}

type AnalysisSectionAfterPageBreakPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSectionAfterPageBreakPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionAfterPageBreak)(nil)).Elem()
}

func (o AnalysisSectionAfterPageBreakPtrOutput) ToAnalysisSectionAfterPageBreakPtrOutput() AnalysisSectionAfterPageBreakPtrOutput {
	return o
}

func (o AnalysisSectionAfterPageBreakPtrOutput) ToAnalysisSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) AnalysisSectionAfterPageBreakPtrOutput {
	return o
}

func (o AnalysisSectionAfterPageBreakPtrOutput) Elem() AnalysisSectionAfterPageBreakOutput {
	return o.ApplyT(func(v *AnalysisSectionAfterPageBreak) AnalysisSectionAfterPageBreak {
		if v != nil {
			return *v
		}
		var ret AnalysisSectionAfterPageBreak
		return ret
	}).(AnalysisSectionAfterPageBreakOutput)
}

func (o AnalysisSectionAfterPageBreakPtrOutput) Status() AnalysisSectionPageBreakStatusPtrOutput {
	return o.ApplyT(func(v *AnalysisSectionAfterPageBreak) *AnalysisSectionPageBreakStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(AnalysisSectionPageBreakStatusPtrOutput)
}

type AnalysisSectionBasedLayoutCanvasSizeOptions struct {
	PaperCanvasSizeOptions *AnalysisSectionBasedLayoutPaperCanvasSizeOptions `pulumi:"paperCanvasSizeOptions"`
}

// AnalysisSectionBasedLayoutCanvasSizeOptionsInput is an input type that accepts AnalysisSectionBasedLayoutCanvasSizeOptionsArgs and AnalysisSectionBasedLayoutCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `AnalysisSectionBasedLayoutCanvasSizeOptionsInput` via:
//
//	AnalysisSectionBasedLayoutCanvasSizeOptionsArgs{...}
type AnalysisSectionBasedLayoutCanvasSizeOptionsInput interface {
	pulumi.Input

	ToAnalysisSectionBasedLayoutCanvasSizeOptionsOutput() AnalysisSectionBasedLayoutCanvasSizeOptionsOutput
	ToAnalysisSectionBasedLayoutCanvasSizeOptionsOutputWithContext(context.Context) AnalysisSectionBasedLayoutCanvasSizeOptionsOutput
}

type AnalysisSectionBasedLayoutCanvasSizeOptionsArgs struct {
	PaperCanvasSizeOptions AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrInput `pulumi:"paperCanvasSizeOptions"`
}

func (AnalysisSectionBasedLayoutCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i AnalysisSectionBasedLayoutCanvasSizeOptionsArgs) ToAnalysisSectionBasedLayoutCanvasSizeOptionsOutput() AnalysisSectionBasedLayoutCanvasSizeOptionsOutput {
	return i.ToAnalysisSectionBasedLayoutCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i AnalysisSectionBasedLayoutCanvasSizeOptionsArgs) ToAnalysisSectionBasedLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionBasedLayoutCanvasSizeOptionsOutput)
}

func (i AnalysisSectionBasedLayoutCanvasSizeOptionsArgs) ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput() AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisSectionBasedLayoutCanvasSizeOptionsArgs) ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionBasedLayoutCanvasSizeOptionsOutput).ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// AnalysisSectionBasedLayoutCanvasSizeOptionsPtrInput is an input type that accepts AnalysisSectionBasedLayoutCanvasSizeOptionsArgs, AnalysisSectionBasedLayoutCanvasSizeOptionsPtr and AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisSectionBasedLayoutCanvasSizeOptionsPtrInput` via:
//
//	        AnalysisSectionBasedLayoutCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisSectionBasedLayoutCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput() AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput
	ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Context) AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput
}

type analysisSectionBasedLayoutCanvasSizeOptionsPtrType AnalysisSectionBasedLayoutCanvasSizeOptionsArgs

func AnalysisSectionBasedLayoutCanvasSizeOptionsPtr(v *AnalysisSectionBasedLayoutCanvasSizeOptionsArgs) AnalysisSectionBasedLayoutCanvasSizeOptionsPtrInput {
	return (*analysisSectionBasedLayoutCanvasSizeOptionsPtrType)(v)
}

func (*analysisSectionBasedLayoutCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i *analysisSectionBasedLayoutCanvasSizeOptionsPtrType) ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput() AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisSectionBasedLayoutCanvasSizeOptionsPtrType) ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

type AnalysisSectionBasedLayoutCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisSectionBasedLayoutCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisSectionBasedLayoutCanvasSizeOptionsOutput) ToAnalysisSectionBasedLayoutCanvasSizeOptionsOutput() AnalysisSectionBasedLayoutCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisSectionBasedLayoutCanvasSizeOptionsOutput) ToAnalysisSectionBasedLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisSectionBasedLayoutCanvasSizeOptionsOutput) ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput() AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisSectionBasedLayoutCanvasSizeOptionsOutput) ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSectionBasedLayoutCanvasSizeOptions) *AnalysisSectionBasedLayoutCanvasSizeOptions {
		return &v
	}).(AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

func (o AnalysisSectionBasedLayoutCanvasSizeOptionsOutput) PaperCanvasSizeOptions() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisSectionBasedLayoutCanvasSizeOptions) *AnalysisSectionBasedLayoutPaperCanvasSizeOptions {
		return v.PaperCanvasSizeOptions
	}).(AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

type AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput) ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput() AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput) ToAnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput) Elem() AnalysisSectionBasedLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutCanvasSizeOptions) AnalysisSectionBasedLayoutCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisSectionBasedLayoutCanvasSizeOptions
		return ret
	}).(AnalysisSectionBasedLayoutCanvasSizeOptionsOutput)
}

func (o AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput) PaperCanvasSizeOptions() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutCanvasSizeOptions) *AnalysisSectionBasedLayoutPaperCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.PaperCanvasSizeOptions
	}).(AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

type AnalysisSectionBasedLayoutConfiguration struct {
	BodySections      []AnalysisBodySectionConfiguration          `pulumi:"bodySections"`
	CanvasSizeOptions AnalysisSectionBasedLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
	FooterSections    []AnalysisHeaderFooterSectionConfiguration  `pulumi:"footerSections"`
	HeaderSections    []AnalysisHeaderFooterSectionConfiguration  `pulumi:"headerSections"`
}

// AnalysisSectionBasedLayoutConfigurationInput is an input type that accepts AnalysisSectionBasedLayoutConfigurationArgs and AnalysisSectionBasedLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisSectionBasedLayoutConfigurationInput` via:
//
//	AnalysisSectionBasedLayoutConfigurationArgs{...}
type AnalysisSectionBasedLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisSectionBasedLayoutConfigurationOutput() AnalysisSectionBasedLayoutConfigurationOutput
	ToAnalysisSectionBasedLayoutConfigurationOutputWithContext(context.Context) AnalysisSectionBasedLayoutConfigurationOutput
}

type AnalysisSectionBasedLayoutConfigurationArgs struct {
	BodySections      AnalysisBodySectionConfigurationArrayInput         `pulumi:"bodySections"`
	CanvasSizeOptions AnalysisSectionBasedLayoutCanvasSizeOptionsInput   `pulumi:"canvasSizeOptions"`
	FooterSections    AnalysisHeaderFooterSectionConfigurationArrayInput `pulumi:"footerSections"`
	HeaderSections    AnalysisHeaderFooterSectionConfigurationArrayInput `pulumi:"headerSections"`
}

func (AnalysisSectionBasedLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisSectionBasedLayoutConfigurationArgs) ToAnalysisSectionBasedLayoutConfigurationOutput() AnalysisSectionBasedLayoutConfigurationOutput {
	return i.ToAnalysisSectionBasedLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisSectionBasedLayoutConfigurationArgs) ToAnalysisSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionBasedLayoutConfigurationOutput)
}

func (i AnalysisSectionBasedLayoutConfigurationArgs) ToAnalysisSectionBasedLayoutConfigurationPtrOutput() AnalysisSectionBasedLayoutConfigurationPtrOutput {
	return i.ToAnalysisSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisSectionBasedLayoutConfigurationArgs) ToAnalysisSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionBasedLayoutConfigurationOutput).ToAnalysisSectionBasedLayoutConfigurationPtrOutputWithContext(ctx)
}

// AnalysisSectionBasedLayoutConfigurationPtrInput is an input type that accepts AnalysisSectionBasedLayoutConfigurationArgs, AnalysisSectionBasedLayoutConfigurationPtr and AnalysisSectionBasedLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisSectionBasedLayoutConfigurationPtrInput` via:
//
//	        AnalysisSectionBasedLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisSectionBasedLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisSectionBasedLayoutConfigurationPtrOutput() AnalysisSectionBasedLayoutConfigurationPtrOutput
	ToAnalysisSectionBasedLayoutConfigurationPtrOutputWithContext(context.Context) AnalysisSectionBasedLayoutConfigurationPtrOutput
}

type analysisSectionBasedLayoutConfigurationPtrType AnalysisSectionBasedLayoutConfigurationArgs

func AnalysisSectionBasedLayoutConfigurationPtr(v *AnalysisSectionBasedLayoutConfigurationArgs) AnalysisSectionBasedLayoutConfigurationPtrInput {
	return (*analysisSectionBasedLayoutConfigurationPtrType)(v)
}

func (*analysisSectionBasedLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i *analysisSectionBasedLayoutConfigurationPtrType) ToAnalysisSectionBasedLayoutConfigurationPtrOutput() AnalysisSectionBasedLayoutConfigurationPtrOutput {
	return i.ToAnalysisSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisSectionBasedLayoutConfigurationPtrType) ToAnalysisSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionBasedLayoutConfigurationPtrOutput)
}

type AnalysisSectionBasedLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisSectionBasedLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisSectionBasedLayoutConfigurationOutput) ToAnalysisSectionBasedLayoutConfigurationOutput() AnalysisSectionBasedLayoutConfigurationOutput {
	return o
}

func (o AnalysisSectionBasedLayoutConfigurationOutput) ToAnalysisSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutConfigurationOutput {
	return o
}

func (o AnalysisSectionBasedLayoutConfigurationOutput) ToAnalysisSectionBasedLayoutConfigurationPtrOutput() AnalysisSectionBasedLayoutConfigurationPtrOutput {
	return o.ToAnalysisSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisSectionBasedLayoutConfigurationOutput) ToAnalysisSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSectionBasedLayoutConfiguration) *AnalysisSectionBasedLayoutConfiguration {
		return &v
	}).(AnalysisSectionBasedLayoutConfigurationPtrOutput)
}

func (o AnalysisSectionBasedLayoutConfigurationOutput) BodySections() AnalysisBodySectionConfigurationArrayOutput {
	return o.ApplyT(func(v AnalysisSectionBasedLayoutConfiguration) []AnalysisBodySectionConfiguration {
		return v.BodySections
	}).(AnalysisBodySectionConfigurationArrayOutput)
}

func (o AnalysisSectionBasedLayoutConfigurationOutput) CanvasSizeOptions() AnalysisSectionBasedLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v AnalysisSectionBasedLayoutConfiguration) AnalysisSectionBasedLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(AnalysisSectionBasedLayoutCanvasSizeOptionsOutput)
}

func (o AnalysisSectionBasedLayoutConfigurationOutput) FooterSections() AnalysisHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v AnalysisSectionBasedLayoutConfiguration) []AnalysisHeaderFooterSectionConfiguration {
		return v.FooterSections
	}).(AnalysisHeaderFooterSectionConfigurationArrayOutput)
}

func (o AnalysisSectionBasedLayoutConfigurationOutput) HeaderSections() AnalysisHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v AnalysisSectionBasedLayoutConfiguration) []AnalysisHeaderFooterSectionConfiguration {
		return v.HeaderSections
	}).(AnalysisHeaderFooterSectionConfigurationArrayOutput)
}

type AnalysisSectionBasedLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSectionBasedLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisSectionBasedLayoutConfigurationPtrOutput) ToAnalysisSectionBasedLayoutConfigurationPtrOutput() AnalysisSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisSectionBasedLayoutConfigurationPtrOutput) ToAnalysisSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisSectionBasedLayoutConfigurationPtrOutput) Elem() AnalysisSectionBasedLayoutConfigurationOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutConfiguration) AnalysisSectionBasedLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisSectionBasedLayoutConfiguration
		return ret
	}).(AnalysisSectionBasedLayoutConfigurationOutput)
}

func (o AnalysisSectionBasedLayoutConfigurationPtrOutput) BodySections() AnalysisBodySectionConfigurationArrayOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutConfiguration) []AnalysisBodySectionConfiguration {
		if v == nil {
			return nil
		}
		return v.BodySections
	}).(AnalysisBodySectionConfigurationArrayOutput)
}

func (o AnalysisSectionBasedLayoutConfigurationPtrOutput) CanvasSizeOptions() AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutConfiguration) *AnalysisSectionBasedLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

func (o AnalysisSectionBasedLayoutConfigurationPtrOutput) FooterSections() AnalysisHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutConfiguration) []AnalysisHeaderFooterSectionConfiguration {
		if v == nil {
			return nil
		}
		return v.FooterSections
	}).(AnalysisHeaderFooterSectionConfigurationArrayOutput)
}

func (o AnalysisSectionBasedLayoutConfigurationPtrOutput) HeaderSections() AnalysisHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutConfiguration) []AnalysisHeaderFooterSectionConfiguration {
		if v == nil {
			return nil
		}
		return v.HeaderSections
	}).(AnalysisHeaderFooterSectionConfigurationArrayOutput)
}

type AnalysisSectionBasedLayoutPaperCanvasSizeOptions struct {
	PaperMargin      *AnalysisSpacing          `pulumi:"paperMargin"`
	PaperOrientation *AnalysisPaperOrientation `pulumi:"paperOrientation"`
	PaperSize        *AnalysisPaperSize        `pulumi:"paperSize"`
}

// AnalysisSectionBasedLayoutPaperCanvasSizeOptionsInput is an input type that accepts AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs and AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `AnalysisSectionBasedLayoutPaperCanvasSizeOptionsInput` via:
//
//	AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs{...}
type AnalysisSectionBasedLayoutPaperCanvasSizeOptionsInput interface {
	pulumi.Input

	ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput
	ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(context.Context) AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput
}

type AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs struct {
	PaperMargin      AnalysisSpacingPtrInput          `pulumi:"paperMargin"`
	PaperOrientation AnalysisPaperOrientationPtrInput `pulumi:"paperOrientation"`
	PaperSize        AnalysisPaperSizePtrInput        `pulumi:"paperSize"`
}

func (AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (i AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return i.ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput)
}

func (i AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput).ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrInput is an input type that accepts AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs, AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtr and AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrInput` via:
//
//	        AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput
	ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Context) AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput
}

type analysisSectionBasedLayoutPaperCanvasSizeOptionsPtrType AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs

func AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtr(v *AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs) AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrInput {
	return (*analysisSectionBasedLayoutPaperCanvasSizeOptionsPtrType)(v)
}

func (*analysisSectionBasedLayoutPaperCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (i *analysisSectionBasedLayoutPaperCanvasSizeOptionsPtrType) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return i.ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisSectionBasedLayoutPaperCanvasSizeOptionsPtrType) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

type AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return o
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSectionBasedLayoutPaperCanvasSizeOptions) *AnalysisSectionBasedLayoutPaperCanvasSizeOptions {
		return &v
	}).(AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput) PaperMargin() AnalysisSpacingPtrOutput {
	return o.ApplyT(func(v AnalysisSectionBasedLayoutPaperCanvasSizeOptions) *AnalysisSpacing { return v.PaperMargin }).(AnalysisSpacingPtrOutput)
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput) PaperOrientation() AnalysisPaperOrientationPtrOutput {
	return o.ApplyT(func(v AnalysisSectionBasedLayoutPaperCanvasSizeOptions) *AnalysisPaperOrientation {
		return v.PaperOrientation
	}).(AnalysisPaperOrientationPtrOutput)
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput) PaperSize() AnalysisPaperSizePtrOutput {
	return o.ApplyT(func(v AnalysisSectionBasedLayoutPaperCanvasSizeOptions) *AnalysisPaperSize { return v.PaperSize }).(AnalysisPaperSizePtrOutput)
}

type AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) ToAnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) Elem() AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutPaperCanvasSizeOptions) AnalysisSectionBasedLayoutPaperCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisSectionBasedLayoutPaperCanvasSizeOptions
		return ret
	}).(AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput)
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) PaperMargin() AnalysisSpacingPtrOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutPaperCanvasSizeOptions) *AnalysisSpacing {
		if v == nil {
			return nil
		}
		return v.PaperMargin
	}).(AnalysisSpacingPtrOutput)
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) PaperOrientation() AnalysisPaperOrientationPtrOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutPaperCanvasSizeOptions) *AnalysisPaperOrientation {
		if v == nil {
			return nil
		}
		return v.PaperOrientation
	}).(AnalysisPaperOrientationPtrOutput)
}

func (o AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) PaperSize() AnalysisPaperSizePtrOutput {
	return o.ApplyT(func(v *AnalysisSectionBasedLayoutPaperCanvasSizeOptions) *AnalysisPaperSize {
		if v == nil {
			return nil
		}
		return v.PaperSize
	}).(AnalysisPaperSizePtrOutput)
}

type AnalysisSectionLayoutConfiguration struct {
	FreeFormLayout AnalysisFreeFormSectionLayoutConfiguration `pulumi:"freeFormLayout"`
}

// AnalysisSectionLayoutConfigurationInput is an input type that accepts AnalysisSectionLayoutConfigurationArgs and AnalysisSectionLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisSectionLayoutConfigurationInput` via:
//
//	AnalysisSectionLayoutConfigurationArgs{...}
type AnalysisSectionLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisSectionLayoutConfigurationOutput() AnalysisSectionLayoutConfigurationOutput
	ToAnalysisSectionLayoutConfigurationOutputWithContext(context.Context) AnalysisSectionLayoutConfigurationOutput
}

type AnalysisSectionLayoutConfigurationArgs struct {
	FreeFormLayout AnalysisFreeFormSectionLayoutConfigurationInput `pulumi:"freeFormLayout"`
}

func (AnalysisSectionLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisSectionLayoutConfigurationArgs) ToAnalysisSectionLayoutConfigurationOutput() AnalysisSectionLayoutConfigurationOutput {
	return i.ToAnalysisSectionLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisSectionLayoutConfigurationArgs) ToAnalysisSectionLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisSectionLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionLayoutConfigurationOutput)
}

func (i AnalysisSectionLayoutConfigurationArgs) ToAnalysisSectionLayoutConfigurationPtrOutput() AnalysisSectionLayoutConfigurationPtrOutput {
	return i.ToAnalysisSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisSectionLayoutConfigurationArgs) ToAnalysisSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionLayoutConfigurationOutput).ToAnalysisSectionLayoutConfigurationPtrOutputWithContext(ctx)
}

// AnalysisSectionLayoutConfigurationPtrInput is an input type that accepts AnalysisSectionLayoutConfigurationArgs, AnalysisSectionLayoutConfigurationPtr and AnalysisSectionLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisSectionLayoutConfigurationPtrInput` via:
//
//	        AnalysisSectionLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisSectionLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisSectionLayoutConfigurationPtrOutput() AnalysisSectionLayoutConfigurationPtrOutput
	ToAnalysisSectionLayoutConfigurationPtrOutputWithContext(context.Context) AnalysisSectionLayoutConfigurationPtrOutput
}

type analysisSectionLayoutConfigurationPtrType AnalysisSectionLayoutConfigurationArgs

func AnalysisSectionLayoutConfigurationPtr(v *AnalysisSectionLayoutConfigurationArgs) AnalysisSectionLayoutConfigurationPtrInput {
	return (*analysisSectionLayoutConfigurationPtrType)(v)
}

func (*analysisSectionLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionLayoutConfiguration)(nil)).Elem()
}

func (i *analysisSectionLayoutConfigurationPtrType) ToAnalysisSectionLayoutConfigurationPtrOutput() AnalysisSectionLayoutConfigurationPtrOutput {
	return i.ToAnalysisSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisSectionLayoutConfigurationPtrType) ToAnalysisSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionLayoutConfigurationPtrOutput)
}

type AnalysisSectionLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisSectionLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisSectionLayoutConfigurationOutput) ToAnalysisSectionLayoutConfigurationOutput() AnalysisSectionLayoutConfigurationOutput {
	return o
}

func (o AnalysisSectionLayoutConfigurationOutput) ToAnalysisSectionLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisSectionLayoutConfigurationOutput {
	return o
}

func (o AnalysisSectionLayoutConfigurationOutput) ToAnalysisSectionLayoutConfigurationPtrOutput() AnalysisSectionLayoutConfigurationPtrOutput {
	return o.ToAnalysisSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisSectionLayoutConfigurationOutput) ToAnalysisSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSectionLayoutConfiguration) *AnalysisSectionLayoutConfiguration {
		return &v
	}).(AnalysisSectionLayoutConfigurationPtrOutput)
}

func (o AnalysisSectionLayoutConfigurationOutput) FreeFormLayout() AnalysisFreeFormSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v AnalysisSectionLayoutConfiguration) AnalysisFreeFormSectionLayoutConfiguration {
		return v.FreeFormLayout
	}).(AnalysisFreeFormSectionLayoutConfigurationOutput)
}

type AnalysisSectionLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSectionLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisSectionLayoutConfigurationPtrOutput) ToAnalysisSectionLayoutConfigurationPtrOutput() AnalysisSectionLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisSectionLayoutConfigurationPtrOutput) ToAnalysisSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionLayoutConfigurationPtrOutput {
	return o
}

func (o AnalysisSectionLayoutConfigurationPtrOutput) Elem() AnalysisSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v *AnalysisSectionLayoutConfiguration) AnalysisSectionLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisSectionLayoutConfiguration
		return ret
	}).(AnalysisSectionLayoutConfigurationOutput)
}

func (o AnalysisSectionLayoutConfigurationPtrOutput) FreeFormLayout() AnalysisFreeFormSectionLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisSectionLayoutConfiguration) *AnalysisFreeFormSectionLayoutConfiguration {
		if v == nil {
			return nil
		}
		return &v.FreeFormLayout
	}).(AnalysisFreeFormSectionLayoutConfigurationPtrOutput)
}

type AnalysisSectionPageBreakConfiguration struct {
	After *AnalysisSectionAfterPageBreak `pulumi:"after"`
}

// AnalysisSectionPageBreakConfigurationInput is an input type that accepts AnalysisSectionPageBreakConfigurationArgs and AnalysisSectionPageBreakConfigurationOutput values.
// You can construct a concrete instance of `AnalysisSectionPageBreakConfigurationInput` via:
//
//	AnalysisSectionPageBreakConfigurationArgs{...}
type AnalysisSectionPageBreakConfigurationInput interface {
	pulumi.Input

	ToAnalysisSectionPageBreakConfigurationOutput() AnalysisSectionPageBreakConfigurationOutput
	ToAnalysisSectionPageBreakConfigurationOutputWithContext(context.Context) AnalysisSectionPageBreakConfigurationOutput
}

type AnalysisSectionPageBreakConfigurationArgs struct {
	After AnalysisSectionAfterPageBreakPtrInput `pulumi:"after"`
}

func (AnalysisSectionPageBreakConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionPageBreakConfiguration)(nil)).Elem()
}

func (i AnalysisSectionPageBreakConfigurationArgs) ToAnalysisSectionPageBreakConfigurationOutput() AnalysisSectionPageBreakConfigurationOutput {
	return i.ToAnalysisSectionPageBreakConfigurationOutputWithContext(context.Background())
}

func (i AnalysisSectionPageBreakConfigurationArgs) ToAnalysisSectionPageBreakConfigurationOutputWithContext(ctx context.Context) AnalysisSectionPageBreakConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionPageBreakConfigurationOutput)
}

func (i AnalysisSectionPageBreakConfigurationArgs) ToAnalysisSectionPageBreakConfigurationPtrOutput() AnalysisSectionPageBreakConfigurationPtrOutput {
	return i.ToAnalysisSectionPageBreakConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisSectionPageBreakConfigurationArgs) ToAnalysisSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionPageBreakConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionPageBreakConfigurationOutput).ToAnalysisSectionPageBreakConfigurationPtrOutputWithContext(ctx)
}

// AnalysisSectionPageBreakConfigurationPtrInput is an input type that accepts AnalysisSectionPageBreakConfigurationArgs, AnalysisSectionPageBreakConfigurationPtr and AnalysisSectionPageBreakConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisSectionPageBreakConfigurationPtrInput` via:
//
//	        AnalysisSectionPageBreakConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisSectionPageBreakConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisSectionPageBreakConfigurationPtrOutput() AnalysisSectionPageBreakConfigurationPtrOutput
	ToAnalysisSectionPageBreakConfigurationPtrOutputWithContext(context.Context) AnalysisSectionPageBreakConfigurationPtrOutput
}

type analysisSectionPageBreakConfigurationPtrType AnalysisSectionPageBreakConfigurationArgs

func AnalysisSectionPageBreakConfigurationPtr(v *AnalysisSectionPageBreakConfigurationArgs) AnalysisSectionPageBreakConfigurationPtrInput {
	return (*analysisSectionPageBreakConfigurationPtrType)(v)
}

func (*analysisSectionPageBreakConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionPageBreakConfiguration)(nil)).Elem()
}

func (i *analysisSectionPageBreakConfigurationPtrType) ToAnalysisSectionPageBreakConfigurationPtrOutput() AnalysisSectionPageBreakConfigurationPtrOutput {
	return i.ToAnalysisSectionPageBreakConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisSectionPageBreakConfigurationPtrType) ToAnalysisSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionPageBreakConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionPageBreakConfigurationPtrOutput)
}

type AnalysisSectionPageBreakConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisSectionPageBreakConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionPageBreakConfiguration)(nil)).Elem()
}

func (o AnalysisSectionPageBreakConfigurationOutput) ToAnalysisSectionPageBreakConfigurationOutput() AnalysisSectionPageBreakConfigurationOutput {
	return o
}

func (o AnalysisSectionPageBreakConfigurationOutput) ToAnalysisSectionPageBreakConfigurationOutputWithContext(ctx context.Context) AnalysisSectionPageBreakConfigurationOutput {
	return o
}

func (o AnalysisSectionPageBreakConfigurationOutput) ToAnalysisSectionPageBreakConfigurationPtrOutput() AnalysisSectionPageBreakConfigurationPtrOutput {
	return o.ToAnalysisSectionPageBreakConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisSectionPageBreakConfigurationOutput) ToAnalysisSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionPageBreakConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSectionPageBreakConfiguration) *AnalysisSectionPageBreakConfiguration {
		return &v
	}).(AnalysisSectionPageBreakConfigurationPtrOutput)
}

func (o AnalysisSectionPageBreakConfigurationOutput) After() AnalysisSectionAfterPageBreakPtrOutput {
	return o.ApplyT(func(v AnalysisSectionPageBreakConfiguration) *AnalysisSectionAfterPageBreak { return v.After }).(AnalysisSectionAfterPageBreakPtrOutput)
}

type AnalysisSectionPageBreakConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSectionPageBreakConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionPageBreakConfiguration)(nil)).Elem()
}

func (o AnalysisSectionPageBreakConfigurationPtrOutput) ToAnalysisSectionPageBreakConfigurationPtrOutput() AnalysisSectionPageBreakConfigurationPtrOutput {
	return o
}

func (o AnalysisSectionPageBreakConfigurationPtrOutput) ToAnalysisSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSectionPageBreakConfigurationPtrOutput {
	return o
}

func (o AnalysisSectionPageBreakConfigurationPtrOutput) Elem() AnalysisSectionPageBreakConfigurationOutput {
	return o.ApplyT(func(v *AnalysisSectionPageBreakConfiguration) AnalysisSectionPageBreakConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisSectionPageBreakConfiguration
		return ret
	}).(AnalysisSectionPageBreakConfigurationOutput)
}

func (o AnalysisSectionPageBreakConfigurationPtrOutput) After() AnalysisSectionAfterPageBreakPtrOutput {
	return o.ApplyT(func(v *AnalysisSectionPageBreakConfiguration) *AnalysisSectionAfterPageBreak {
		if v == nil {
			return nil
		}
		return v.After
	}).(AnalysisSectionAfterPageBreakPtrOutput)
}

type AnalysisSectionStyle struct {
	// String based length that is composed of value and unit in px
	Height  *string          `pulumi:"height"`
	Padding *AnalysisSpacing `pulumi:"padding"`
}

// AnalysisSectionStyleInput is an input type that accepts AnalysisSectionStyleArgs and AnalysisSectionStyleOutput values.
// You can construct a concrete instance of `AnalysisSectionStyleInput` via:
//
//	AnalysisSectionStyleArgs{...}
type AnalysisSectionStyleInput interface {
	pulumi.Input

	ToAnalysisSectionStyleOutput() AnalysisSectionStyleOutput
	ToAnalysisSectionStyleOutputWithContext(context.Context) AnalysisSectionStyleOutput
}

type AnalysisSectionStyleArgs struct {
	// String based length that is composed of value and unit in px
	Height  pulumi.StringPtrInput   `pulumi:"height"`
	Padding AnalysisSpacingPtrInput `pulumi:"padding"`
}

func (AnalysisSectionStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionStyle)(nil)).Elem()
}

func (i AnalysisSectionStyleArgs) ToAnalysisSectionStyleOutput() AnalysisSectionStyleOutput {
	return i.ToAnalysisSectionStyleOutputWithContext(context.Background())
}

func (i AnalysisSectionStyleArgs) ToAnalysisSectionStyleOutputWithContext(ctx context.Context) AnalysisSectionStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionStyleOutput)
}

func (i AnalysisSectionStyleArgs) ToAnalysisSectionStylePtrOutput() AnalysisSectionStylePtrOutput {
	return i.ToAnalysisSectionStylePtrOutputWithContext(context.Background())
}

func (i AnalysisSectionStyleArgs) ToAnalysisSectionStylePtrOutputWithContext(ctx context.Context) AnalysisSectionStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionStyleOutput).ToAnalysisSectionStylePtrOutputWithContext(ctx)
}

// AnalysisSectionStylePtrInput is an input type that accepts AnalysisSectionStyleArgs, AnalysisSectionStylePtr and AnalysisSectionStylePtrOutput values.
// You can construct a concrete instance of `AnalysisSectionStylePtrInput` via:
//
//	        AnalysisSectionStyleArgs{...}
//
//	or:
//
//	        nil
type AnalysisSectionStylePtrInput interface {
	pulumi.Input

	ToAnalysisSectionStylePtrOutput() AnalysisSectionStylePtrOutput
	ToAnalysisSectionStylePtrOutputWithContext(context.Context) AnalysisSectionStylePtrOutput
}

type analysisSectionStylePtrType AnalysisSectionStyleArgs

func AnalysisSectionStylePtr(v *AnalysisSectionStyleArgs) AnalysisSectionStylePtrInput {
	return (*analysisSectionStylePtrType)(v)
}

func (*analysisSectionStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionStyle)(nil)).Elem()
}

func (i *analysisSectionStylePtrType) ToAnalysisSectionStylePtrOutput() AnalysisSectionStylePtrOutput {
	return i.ToAnalysisSectionStylePtrOutputWithContext(context.Background())
}

func (i *analysisSectionStylePtrType) ToAnalysisSectionStylePtrOutputWithContext(ctx context.Context) AnalysisSectionStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSectionStylePtrOutput)
}

type AnalysisSectionStyleOutput struct{ *pulumi.OutputState }

func (AnalysisSectionStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionStyle)(nil)).Elem()
}

func (o AnalysisSectionStyleOutput) ToAnalysisSectionStyleOutput() AnalysisSectionStyleOutput {
	return o
}

func (o AnalysisSectionStyleOutput) ToAnalysisSectionStyleOutputWithContext(ctx context.Context) AnalysisSectionStyleOutput {
	return o
}

func (o AnalysisSectionStyleOutput) ToAnalysisSectionStylePtrOutput() AnalysisSectionStylePtrOutput {
	return o.ToAnalysisSectionStylePtrOutputWithContext(context.Background())
}

func (o AnalysisSectionStyleOutput) ToAnalysisSectionStylePtrOutputWithContext(ctx context.Context) AnalysisSectionStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSectionStyle) *AnalysisSectionStyle {
		return &v
	}).(AnalysisSectionStylePtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisSectionStyleOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSectionStyle) *string { return v.Height }).(pulumi.StringPtrOutput)
}

func (o AnalysisSectionStyleOutput) Padding() AnalysisSpacingPtrOutput {
	return o.ApplyT(func(v AnalysisSectionStyle) *AnalysisSpacing { return v.Padding }).(AnalysisSpacingPtrOutput)
}

type AnalysisSectionStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisSectionStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionStyle)(nil)).Elem()
}

func (o AnalysisSectionStylePtrOutput) ToAnalysisSectionStylePtrOutput() AnalysisSectionStylePtrOutput {
	return o
}

func (o AnalysisSectionStylePtrOutput) ToAnalysisSectionStylePtrOutputWithContext(ctx context.Context) AnalysisSectionStylePtrOutput {
	return o
}

func (o AnalysisSectionStylePtrOutput) Elem() AnalysisSectionStyleOutput {
	return o.ApplyT(func(v *AnalysisSectionStyle) AnalysisSectionStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisSectionStyle
		return ret
	}).(AnalysisSectionStyleOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisSectionStylePtrOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisSectionStyle) *string {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisSectionStylePtrOutput) Padding() AnalysisSpacingPtrOutput {
	return o.ApplyT(func(v *AnalysisSectionStyle) *AnalysisSpacing {
		if v == nil {
			return nil
		}
		return v.Padding
	}).(AnalysisSpacingPtrOutput)
}

type AnalysisSelectedSheetsFilterScopeConfiguration struct {
	SheetVisualScopingConfigurations []AnalysisSheetVisualScopingConfiguration `pulumi:"sheetVisualScopingConfigurations"`
}

// AnalysisSelectedSheetsFilterScopeConfigurationInput is an input type that accepts AnalysisSelectedSheetsFilterScopeConfigurationArgs and AnalysisSelectedSheetsFilterScopeConfigurationOutput values.
// You can construct a concrete instance of `AnalysisSelectedSheetsFilterScopeConfigurationInput` via:
//
//	AnalysisSelectedSheetsFilterScopeConfigurationArgs{...}
type AnalysisSelectedSheetsFilterScopeConfigurationInput interface {
	pulumi.Input

	ToAnalysisSelectedSheetsFilterScopeConfigurationOutput() AnalysisSelectedSheetsFilterScopeConfigurationOutput
	ToAnalysisSelectedSheetsFilterScopeConfigurationOutputWithContext(context.Context) AnalysisSelectedSheetsFilterScopeConfigurationOutput
}

type AnalysisSelectedSheetsFilterScopeConfigurationArgs struct {
	SheetVisualScopingConfigurations AnalysisSheetVisualScopingConfigurationArrayInput `pulumi:"sheetVisualScopingConfigurations"`
}

func (AnalysisSelectedSheetsFilterScopeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (i AnalysisSelectedSheetsFilterScopeConfigurationArgs) ToAnalysisSelectedSheetsFilterScopeConfigurationOutput() AnalysisSelectedSheetsFilterScopeConfigurationOutput {
	return i.ToAnalysisSelectedSheetsFilterScopeConfigurationOutputWithContext(context.Background())
}

func (i AnalysisSelectedSheetsFilterScopeConfigurationArgs) ToAnalysisSelectedSheetsFilterScopeConfigurationOutputWithContext(ctx context.Context) AnalysisSelectedSheetsFilterScopeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSelectedSheetsFilterScopeConfigurationOutput)
}

func (i AnalysisSelectedSheetsFilterScopeConfigurationArgs) ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutput() AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput {
	return i.ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisSelectedSheetsFilterScopeConfigurationArgs) ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSelectedSheetsFilterScopeConfigurationOutput).ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx)
}

// AnalysisSelectedSheetsFilterScopeConfigurationPtrInput is an input type that accepts AnalysisSelectedSheetsFilterScopeConfigurationArgs, AnalysisSelectedSheetsFilterScopeConfigurationPtr and AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisSelectedSheetsFilterScopeConfigurationPtrInput` via:
//
//	        AnalysisSelectedSheetsFilterScopeConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisSelectedSheetsFilterScopeConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutput() AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput
	ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Context) AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput
}

type analysisSelectedSheetsFilterScopeConfigurationPtrType AnalysisSelectedSheetsFilterScopeConfigurationArgs

func AnalysisSelectedSheetsFilterScopeConfigurationPtr(v *AnalysisSelectedSheetsFilterScopeConfigurationArgs) AnalysisSelectedSheetsFilterScopeConfigurationPtrInput {
	return (*analysisSelectedSheetsFilterScopeConfigurationPtrType)(v)
}

func (*analysisSelectedSheetsFilterScopeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (i *analysisSelectedSheetsFilterScopeConfigurationPtrType) ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutput() AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput {
	return i.ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisSelectedSheetsFilterScopeConfigurationPtrType) ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput)
}

type AnalysisSelectedSheetsFilterScopeConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisSelectedSheetsFilterScopeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (o AnalysisSelectedSheetsFilterScopeConfigurationOutput) ToAnalysisSelectedSheetsFilterScopeConfigurationOutput() AnalysisSelectedSheetsFilterScopeConfigurationOutput {
	return o
}

func (o AnalysisSelectedSheetsFilterScopeConfigurationOutput) ToAnalysisSelectedSheetsFilterScopeConfigurationOutputWithContext(ctx context.Context) AnalysisSelectedSheetsFilterScopeConfigurationOutput {
	return o
}

func (o AnalysisSelectedSheetsFilterScopeConfigurationOutput) ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutput() AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o.ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisSelectedSheetsFilterScopeConfigurationOutput) ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSelectedSheetsFilterScopeConfiguration) *AnalysisSelectedSheetsFilterScopeConfiguration {
		return &v
	}).(AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput)
}

func (o AnalysisSelectedSheetsFilterScopeConfigurationOutput) SheetVisualScopingConfigurations() AnalysisSheetVisualScopingConfigurationArrayOutput {
	return o.ApplyT(func(v AnalysisSelectedSheetsFilterScopeConfiguration) []AnalysisSheetVisualScopingConfiguration {
		return v.SheetVisualScopingConfigurations
	}).(AnalysisSheetVisualScopingConfigurationArrayOutput)
}

type AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (o AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput) ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutput() AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o
}

func (o AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput) ToAnalysisSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o
}

func (o AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput) Elem() AnalysisSelectedSheetsFilterScopeConfigurationOutput {
	return o.ApplyT(func(v *AnalysisSelectedSheetsFilterScopeConfiguration) AnalysisSelectedSheetsFilterScopeConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisSelectedSheetsFilterScopeConfiguration
		return ret
	}).(AnalysisSelectedSheetsFilterScopeConfigurationOutput)
}

func (o AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput) SheetVisualScopingConfigurations() AnalysisSheetVisualScopingConfigurationArrayOutput {
	return o.ApplyT(func(v *AnalysisSelectedSheetsFilterScopeConfiguration) []AnalysisSheetVisualScopingConfiguration {
		if v == nil {
			return nil
		}
		return v.SheetVisualScopingConfigurations
	}).(AnalysisSheetVisualScopingConfigurationArrayOutput)
}

type AnalysisSeriesItem struct {
	DataFieldSeriesItem *AnalysisDataFieldSeriesItem `pulumi:"dataFieldSeriesItem"`
	FieldSeriesItem     *AnalysisFieldSeriesItem     `pulumi:"fieldSeriesItem"`
}

// AnalysisSeriesItemInput is an input type that accepts AnalysisSeriesItemArgs and AnalysisSeriesItemOutput values.
// You can construct a concrete instance of `AnalysisSeriesItemInput` via:
//
//	AnalysisSeriesItemArgs{...}
type AnalysisSeriesItemInput interface {
	pulumi.Input

	ToAnalysisSeriesItemOutput() AnalysisSeriesItemOutput
	ToAnalysisSeriesItemOutputWithContext(context.Context) AnalysisSeriesItemOutput
}

type AnalysisSeriesItemArgs struct {
	DataFieldSeriesItem AnalysisDataFieldSeriesItemPtrInput `pulumi:"dataFieldSeriesItem"`
	FieldSeriesItem     AnalysisFieldSeriesItemPtrInput     `pulumi:"fieldSeriesItem"`
}

func (AnalysisSeriesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSeriesItem)(nil)).Elem()
}

func (i AnalysisSeriesItemArgs) ToAnalysisSeriesItemOutput() AnalysisSeriesItemOutput {
	return i.ToAnalysisSeriesItemOutputWithContext(context.Background())
}

func (i AnalysisSeriesItemArgs) ToAnalysisSeriesItemOutputWithContext(ctx context.Context) AnalysisSeriesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSeriesItemOutput)
}

// AnalysisSeriesItemArrayInput is an input type that accepts AnalysisSeriesItemArray and AnalysisSeriesItemArrayOutput values.
// You can construct a concrete instance of `AnalysisSeriesItemArrayInput` via:
//
//	AnalysisSeriesItemArray{ AnalysisSeriesItemArgs{...} }
type AnalysisSeriesItemArrayInput interface {
	pulumi.Input

	ToAnalysisSeriesItemArrayOutput() AnalysisSeriesItemArrayOutput
	ToAnalysisSeriesItemArrayOutputWithContext(context.Context) AnalysisSeriesItemArrayOutput
}

type AnalysisSeriesItemArray []AnalysisSeriesItemInput

func (AnalysisSeriesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSeriesItem)(nil)).Elem()
}

func (i AnalysisSeriesItemArray) ToAnalysisSeriesItemArrayOutput() AnalysisSeriesItemArrayOutput {
	return i.ToAnalysisSeriesItemArrayOutputWithContext(context.Background())
}

func (i AnalysisSeriesItemArray) ToAnalysisSeriesItemArrayOutputWithContext(ctx context.Context) AnalysisSeriesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSeriesItemArrayOutput)
}

type AnalysisSeriesItemOutput struct{ *pulumi.OutputState }

func (AnalysisSeriesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSeriesItem)(nil)).Elem()
}

func (o AnalysisSeriesItemOutput) ToAnalysisSeriesItemOutput() AnalysisSeriesItemOutput {
	return o
}

func (o AnalysisSeriesItemOutput) ToAnalysisSeriesItemOutputWithContext(ctx context.Context) AnalysisSeriesItemOutput {
	return o
}

func (o AnalysisSeriesItemOutput) DataFieldSeriesItem() AnalysisDataFieldSeriesItemPtrOutput {
	return o.ApplyT(func(v AnalysisSeriesItem) *AnalysisDataFieldSeriesItem { return v.DataFieldSeriesItem }).(AnalysisDataFieldSeriesItemPtrOutput)
}

func (o AnalysisSeriesItemOutput) FieldSeriesItem() AnalysisFieldSeriesItemPtrOutput {
	return o.ApplyT(func(v AnalysisSeriesItem) *AnalysisFieldSeriesItem { return v.FieldSeriesItem }).(AnalysisFieldSeriesItemPtrOutput)
}

type AnalysisSeriesItemArrayOutput struct{ *pulumi.OutputState }

func (AnalysisSeriesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSeriesItem)(nil)).Elem()
}

func (o AnalysisSeriesItemArrayOutput) ToAnalysisSeriesItemArrayOutput() AnalysisSeriesItemArrayOutput {
	return o
}

func (o AnalysisSeriesItemArrayOutput) ToAnalysisSeriesItemArrayOutputWithContext(ctx context.Context) AnalysisSeriesItemArrayOutput {
	return o
}

func (o AnalysisSeriesItemArrayOutput) Index(i pulumi.IntInput) AnalysisSeriesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisSeriesItem {
		return vs[0].([]AnalysisSeriesItem)[vs[1].(int)]
	}).(AnalysisSeriesItemOutput)
}

type AnalysisSetParameterValueConfiguration struct {
	DestinationParameterName string                                         `pulumi:"destinationParameterName"`
	Value                    AnalysisDestinationParameterValueConfiguration `pulumi:"value"`
}

// AnalysisSetParameterValueConfigurationInput is an input type that accepts AnalysisSetParameterValueConfigurationArgs and AnalysisSetParameterValueConfigurationOutput values.
// You can construct a concrete instance of `AnalysisSetParameterValueConfigurationInput` via:
//
//	AnalysisSetParameterValueConfigurationArgs{...}
type AnalysisSetParameterValueConfigurationInput interface {
	pulumi.Input

	ToAnalysisSetParameterValueConfigurationOutput() AnalysisSetParameterValueConfigurationOutput
	ToAnalysisSetParameterValueConfigurationOutputWithContext(context.Context) AnalysisSetParameterValueConfigurationOutput
}

type AnalysisSetParameterValueConfigurationArgs struct {
	DestinationParameterName pulumi.StringInput                                  `pulumi:"destinationParameterName"`
	Value                    AnalysisDestinationParameterValueConfigurationInput `pulumi:"value"`
}

func (AnalysisSetParameterValueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSetParameterValueConfiguration)(nil)).Elem()
}

func (i AnalysisSetParameterValueConfigurationArgs) ToAnalysisSetParameterValueConfigurationOutput() AnalysisSetParameterValueConfigurationOutput {
	return i.ToAnalysisSetParameterValueConfigurationOutputWithContext(context.Background())
}

func (i AnalysisSetParameterValueConfigurationArgs) ToAnalysisSetParameterValueConfigurationOutputWithContext(ctx context.Context) AnalysisSetParameterValueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSetParameterValueConfigurationOutput)
}

// AnalysisSetParameterValueConfigurationArrayInput is an input type that accepts AnalysisSetParameterValueConfigurationArray and AnalysisSetParameterValueConfigurationArrayOutput values.
// You can construct a concrete instance of `AnalysisSetParameterValueConfigurationArrayInput` via:
//
//	AnalysisSetParameterValueConfigurationArray{ AnalysisSetParameterValueConfigurationArgs{...} }
type AnalysisSetParameterValueConfigurationArrayInput interface {
	pulumi.Input

	ToAnalysisSetParameterValueConfigurationArrayOutput() AnalysisSetParameterValueConfigurationArrayOutput
	ToAnalysisSetParameterValueConfigurationArrayOutputWithContext(context.Context) AnalysisSetParameterValueConfigurationArrayOutput
}

type AnalysisSetParameterValueConfigurationArray []AnalysisSetParameterValueConfigurationInput

func (AnalysisSetParameterValueConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSetParameterValueConfiguration)(nil)).Elem()
}

func (i AnalysisSetParameterValueConfigurationArray) ToAnalysisSetParameterValueConfigurationArrayOutput() AnalysisSetParameterValueConfigurationArrayOutput {
	return i.ToAnalysisSetParameterValueConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalysisSetParameterValueConfigurationArray) ToAnalysisSetParameterValueConfigurationArrayOutputWithContext(ctx context.Context) AnalysisSetParameterValueConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSetParameterValueConfigurationArrayOutput)
}

type AnalysisSetParameterValueConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisSetParameterValueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSetParameterValueConfiguration)(nil)).Elem()
}

func (o AnalysisSetParameterValueConfigurationOutput) ToAnalysisSetParameterValueConfigurationOutput() AnalysisSetParameterValueConfigurationOutput {
	return o
}

func (o AnalysisSetParameterValueConfigurationOutput) ToAnalysisSetParameterValueConfigurationOutputWithContext(ctx context.Context) AnalysisSetParameterValueConfigurationOutput {
	return o
}

func (o AnalysisSetParameterValueConfigurationOutput) DestinationParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisSetParameterValueConfiguration) string { return v.DestinationParameterName }).(pulumi.StringOutput)
}

func (o AnalysisSetParameterValueConfigurationOutput) Value() AnalysisDestinationParameterValueConfigurationOutput {
	return o.ApplyT(func(v AnalysisSetParameterValueConfiguration) AnalysisDestinationParameterValueConfiguration {
		return v.Value
	}).(AnalysisDestinationParameterValueConfigurationOutput)
}

type AnalysisSetParameterValueConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisSetParameterValueConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSetParameterValueConfiguration)(nil)).Elem()
}

func (o AnalysisSetParameterValueConfigurationArrayOutput) ToAnalysisSetParameterValueConfigurationArrayOutput() AnalysisSetParameterValueConfigurationArrayOutput {
	return o
}

func (o AnalysisSetParameterValueConfigurationArrayOutput) ToAnalysisSetParameterValueConfigurationArrayOutputWithContext(ctx context.Context) AnalysisSetParameterValueConfigurationArrayOutput {
	return o
}

func (o AnalysisSetParameterValueConfigurationArrayOutput) Index(i pulumi.IntInput) AnalysisSetParameterValueConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisSetParameterValueConfiguration {
		return vs[0].([]AnalysisSetParameterValueConfiguration)[vs[1].(int)]
	}).(AnalysisSetParameterValueConfigurationOutput)
}

type AnalysisShapeConditionalFormat struct {
	BackgroundColor AnalysisConditionalFormattingColor `pulumi:"backgroundColor"`
}

// AnalysisShapeConditionalFormatInput is an input type that accepts AnalysisShapeConditionalFormatArgs and AnalysisShapeConditionalFormatOutput values.
// You can construct a concrete instance of `AnalysisShapeConditionalFormatInput` via:
//
//	AnalysisShapeConditionalFormatArgs{...}
type AnalysisShapeConditionalFormatInput interface {
	pulumi.Input

	ToAnalysisShapeConditionalFormatOutput() AnalysisShapeConditionalFormatOutput
	ToAnalysisShapeConditionalFormatOutputWithContext(context.Context) AnalysisShapeConditionalFormatOutput
}

type AnalysisShapeConditionalFormatArgs struct {
	BackgroundColor AnalysisConditionalFormattingColorInput `pulumi:"backgroundColor"`
}

func (AnalysisShapeConditionalFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisShapeConditionalFormat)(nil)).Elem()
}

func (i AnalysisShapeConditionalFormatArgs) ToAnalysisShapeConditionalFormatOutput() AnalysisShapeConditionalFormatOutput {
	return i.ToAnalysisShapeConditionalFormatOutputWithContext(context.Background())
}

func (i AnalysisShapeConditionalFormatArgs) ToAnalysisShapeConditionalFormatOutputWithContext(ctx context.Context) AnalysisShapeConditionalFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisShapeConditionalFormatOutput)
}

func (i AnalysisShapeConditionalFormatArgs) ToAnalysisShapeConditionalFormatPtrOutput() AnalysisShapeConditionalFormatPtrOutput {
	return i.ToAnalysisShapeConditionalFormatPtrOutputWithContext(context.Background())
}

func (i AnalysisShapeConditionalFormatArgs) ToAnalysisShapeConditionalFormatPtrOutputWithContext(ctx context.Context) AnalysisShapeConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisShapeConditionalFormatOutput).ToAnalysisShapeConditionalFormatPtrOutputWithContext(ctx)
}

// AnalysisShapeConditionalFormatPtrInput is an input type that accepts AnalysisShapeConditionalFormatArgs, AnalysisShapeConditionalFormatPtr and AnalysisShapeConditionalFormatPtrOutput values.
// You can construct a concrete instance of `AnalysisShapeConditionalFormatPtrInput` via:
//
//	        AnalysisShapeConditionalFormatArgs{...}
//
//	or:
//
//	        nil
type AnalysisShapeConditionalFormatPtrInput interface {
	pulumi.Input

	ToAnalysisShapeConditionalFormatPtrOutput() AnalysisShapeConditionalFormatPtrOutput
	ToAnalysisShapeConditionalFormatPtrOutputWithContext(context.Context) AnalysisShapeConditionalFormatPtrOutput
}

type analysisShapeConditionalFormatPtrType AnalysisShapeConditionalFormatArgs

func AnalysisShapeConditionalFormatPtr(v *AnalysisShapeConditionalFormatArgs) AnalysisShapeConditionalFormatPtrInput {
	return (*analysisShapeConditionalFormatPtrType)(v)
}

func (*analysisShapeConditionalFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisShapeConditionalFormat)(nil)).Elem()
}

func (i *analysisShapeConditionalFormatPtrType) ToAnalysisShapeConditionalFormatPtrOutput() AnalysisShapeConditionalFormatPtrOutput {
	return i.ToAnalysisShapeConditionalFormatPtrOutputWithContext(context.Background())
}

func (i *analysisShapeConditionalFormatPtrType) ToAnalysisShapeConditionalFormatPtrOutputWithContext(ctx context.Context) AnalysisShapeConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisShapeConditionalFormatPtrOutput)
}

type AnalysisShapeConditionalFormatOutput struct{ *pulumi.OutputState }

func (AnalysisShapeConditionalFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisShapeConditionalFormat)(nil)).Elem()
}

func (o AnalysisShapeConditionalFormatOutput) ToAnalysisShapeConditionalFormatOutput() AnalysisShapeConditionalFormatOutput {
	return o
}

func (o AnalysisShapeConditionalFormatOutput) ToAnalysisShapeConditionalFormatOutputWithContext(ctx context.Context) AnalysisShapeConditionalFormatOutput {
	return o
}

func (o AnalysisShapeConditionalFormatOutput) ToAnalysisShapeConditionalFormatPtrOutput() AnalysisShapeConditionalFormatPtrOutput {
	return o.ToAnalysisShapeConditionalFormatPtrOutputWithContext(context.Background())
}

func (o AnalysisShapeConditionalFormatOutput) ToAnalysisShapeConditionalFormatPtrOutputWithContext(ctx context.Context) AnalysisShapeConditionalFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisShapeConditionalFormat) *AnalysisShapeConditionalFormat {
		return &v
	}).(AnalysisShapeConditionalFormatPtrOutput)
}

func (o AnalysisShapeConditionalFormatOutput) BackgroundColor() AnalysisConditionalFormattingColorOutput {
	return o.ApplyT(func(v AnalysisShapeConditionalFormat) AnalysisConditionalFormattingColor { return v.BackgroundColor }).(AnalysisConditionalFormattingColorOutput)
}

type AnalysisShapeConditionalFormatPtrOutput struct{ *pulumi.OutputState }

func (AnalysisShapeConditionalFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisShapeConditionalFormat)(nil)).Elem()
}

func (o AnalysisShapeConditionalFormatPtrOutput) ToAnalysisShapeConditionalFormatPtrOutput() AnalysisShapeConditionalFormatPtrOutput {
	return o
}

func (o AnalysisShapeConditionalFormatPtrOutput) ToAnalysisShapeConditionalFormatPtrOutputWithContext(ctx context.Context) AnalysisShapeConditionalFormatPtrOutput {
	return o
}

func (o AnalysisShapeConditionalFormatPtrOutput) Elem() AnalysisShapeConditionalFormatOutput {
	return o.ApplyT(func(v *AnalysisShapeConditionalFormat) AnalysisShapeConditionalFormat {
		if v != nil {
			return *v
		}
		var ret AnalysisShapeConditionalFormat
		return ret
	}).(AnalysisShapeConditionalFormatOutput)
}

func (o AnalysisShapeConditionalFormatPtrOutput) BackgroundColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *AnalysisShapeConditionalFormat) *AnalysisConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return &v.BackgroundColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisSheet struct {
	Name    *string `pulumi:"name"`
	SheetId *string `pulumi:"sheetId"`
}

type AnalysisSheetOutput struct{ *pulumi.OutputState }

func (AnalysisSheetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheet)(nil)).Elem()
}

func (o AnalysisSheetOutput) ToAnalysisSheetOutput() AnalysisSheetOutput {
	return o
}

func (o AnalysisSheetOutput) ToAnalysisSheetOutputWithContext(ctx context.Context) AnalysisSheetOutput {
	return o
}

func (o AnalysisSheetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSheet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisSheetOutput) SheetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSheet) *string { return v.SheetId }).(pulumi.StringPtrOutput)
}

type AnalysisSheetArrayOutput struct{ *pulumi.OutputState }

func (AnalysisSheetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheet)(nil)).Elem()
}

func (o AnalysisSheetArrayOutput) ToAnalysisSheetArrayOutput() AnalysisSheetArrayOutput {
	return o
}

func (o AnalysisSheetArrayOutput) ToAnalysisSheetArrayOutputWithContext(ctx context.Context) AnalysisSheetArrayOutput {
	return o
}

func (o AnalysisSheetArrayOutput) Index(i pulumi.IntInput) AnalysisSheetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisSheet {
		return vs[0].([]AnalysisSheet)[vs[1].(int)]
	}).(AnalysisSheetOutput)
}

type AnalysisSheetControlLayout struct {
	Configuration AnalysisSheetControlLayoutConfiguration `pulumi:"configuration"`
}

// AnalysisSheetControlLayoutInput is an input type that accepts AnalysisSheetControlLayoutArgs and AnalysisSheetControlLayoutOutput values.
// You can construct a concrete instance of `AnalysisSheetControlLayoutInput` via:
//
//	AnalysisSheetControlLayoutArgs{...}
type AnalysisSheetControlLayoutInput interface {
	pulumi.Input

	ToAnalysisSheetControlLayoutOutput() AnalysisSheetControlLayoutOutput
	ToAnalysisSheetControlLayoutOutputWithContext(context.Context) AnalysisSheetControlLayoutOutput
}

type AnalysisSheetControlLayoutArgs struct {
	Configuration AnalysisSheetControlLayoutConfigurationInput `pulumi:"configuration"`
}

func (AnalysisSheetControlLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetControlLayout)(nil)).Elem()
}

func (i AnalysisSheetControlLayoutArgs) ToAnalysisSheetControlLayoutOutput() AnalysisSheetControlLayoutOutput {
	return i.ToAnalysisSheetControlLayoutOutputWithContext(context.Background())
}

func (i AnalysisSheetControlLayoutArgs) ToAnalysisSheetControlLayoutOutputWithContext(ctx context.Context) AnalysisSheetControlLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetControlLayoutOutput)
}

// AnalysisSheetControlLayoutArrayInput is an input type that accepts AnalysisSheetControlLayoutArray and AnalysisSheetControlLayoutArrayOutput values.
// You can construct a concrete instance of `AnalysisSheetControlLayoutArrayInput` via:
//
//	AnalysisSheetControlLayoutArray{ AnalysisSheetControlLayoutArgs{...} }
type AnalysisSheetControlLayoutArrayInput interface {
	pulumi.Input

	ToAnalysisSheetControlLayoutArrayOutput() AnalysisSheetControlLayoutArrayOutput
	ToAnalysisSheetControlLayoutArrayOutputWithContext(context.Context) AnalysisSheetControlLayoutArrayOutput
}

type AnalysisSheetControlLayoutArray []AnalysisSheetControlLayoutInput

func (AnalysisSheetControlLayoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheetControlLayout)(nil)).Elem()
}

func (i AnalysisSheetControlLayoutArray) ToAnalysisSheetControlLayoutArrayOutput() AnalysisSheetControlLayoutArrayOutput {
	return i.ToAnalysisSheetControlLayoutArrayOutputWithContext(context.Background())
}

func (i AnalysisSheetControlLayoutArray) ToAnalysisSheetControlLayoutArrayOutputWithContext(ctx context.Context) AnalysisSheetControlLayoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetControlLayoutArrayOutput)
}

type AnalysisSheetControlLayoutOutput struct{ *pulumi.OutputState }

func (AnalysisSheetControlLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetControlLayout)(nil)).Elem()
}

func (o AnalysisSheetControlLayoutOutput) ToAnalysisSheetControlLayoutOutput() AnalysisSheetControlLayoutOutput {
	return o
}

func (o AnalysisSheetControlLayoutOutput) ToAnalysisSheetControlLayoutOutputWithContext(ctx context.Context) AnalysisSheetControlLayoutOutput {
	return o
}

func (o AnalysisSheetControlLayoutOutput) Configuration() AnalysisSheetControlLayoutConfigurationOutput {
	return o.ApplyT(func(v AnalysisSheetControlLayout) AnalysisSheetControlLayoutConfiguration { return v.Configuration }).(AnalysisSheetControlLayoutConfigurationOutput)
}

type AnalysisSheetControlLayoutArrayOutput struct{ *pulumi.OutputState }

func (AnalysisSheetControlLayoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheetControlLayout)(nil)).Elem()
}

func (o AnalysisSheetControlLayoutArrayOutput) ToAnalysisSheetControlLayoutArrayOutput() AnalysisSheetControlLayoutArrayOutput {
	return o
}

func (o AnalysisSheetControlLayoutArrayOutput) ToAnalysisSheetControlLayoutArrayOutputWithContext(ctx context.Context) AnalysisSheetControlLayoutArrayOutput {
	return o
}

func (o AnalysisSheetControlLayoutArrayOutput) Index(i pulumi.IntInput) AnalysisSheetControlLayoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisSheetControlLayout {
		return vs[0].([]AnalysisSheetControlLayout)[vs[1].(int)]
	}).(AnalysisSheetControlLayoutOutput)
}

type AnalysisSheetControlLayoutConfiguration struct {
	GridLayout *AnalysisGridLayoutConfiguration `pulumi:"gridLayout"`
}

// AnalysisSheetControlLayoutConfigurationInput is an input type that accepts AnalysisSheetControlLayoutConfigurationArgs and AnalysisSheetControlLayoutConfigurationOutput values.
// You can construct a concrete instance of `AnalysisSheetControlLayoutConfigurationInput` via:
//
//	AnalysisSheetControlLayoutConfigurationArgs{...}
type AnalysisSheetControlLayoutConfigurationInput interface {
	pulumi.Input

	ToAnalysisSheetControlLayoutConfigurationOutput() AnalysisSheetControlLayoutConfigurationOutput
	ToAnalysisSheetControlLayoutConfigurationOutputWithContext(context.Context) AnalysisSheetControlLayoutConfigurationOutput
}

type AnalysisSheetControlLayoutConfigurationArgs struct {
	GridLayout AnalysisGridLayoutConfigurationPtrInput `pulumi:"gridLayout"`
}

func (AnalysisSheetControlLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetControlLayoutConfiguration)(nil)).Elem()
}

func (i AnalysisSheetControlLayoutConfigurationArgs) ToAnalysisSheetControlLayoutConfigurationOutput() AnalysisSheetControlLayoutConfigurationOutput {
	return i.ToAnalysisSheetControlLayoutConfigurationOutputWithContext(context.Background())
}

func (i AnalysisSheetControlLayoutConfigurationArgs) ToAnalysisSheetControlLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisSheetControlLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetControlLayoutConfigurationOutput)
}

type AnalysisSheetControlLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisSheetControlLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetControlLayoutConfiguration)(nil)).Elem()
}

func (o AnalysisSheetControlLayoutConfigurationOutput) ToAnalysisSheetControlLayoutConfigurationOutput() AnalysisSheetControlLayoutConfigurationOutput {
	return o
}

func (o AnalysisSheetControlLayoutConfigurationOutput) ToAnalysisSheetControlLayoutConfigurationOutputWithContext(ctx context.Context) AnalysisSheetControlLayoutConfigurationOutput {
	return o
}

func (o AnalysisSheetControlLayoutConfigurationOutput) GridLayout() AnalysisGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisSheetControlLayoutConfiguration) *AnalysisGridLayoutConfiguration { return v.GridLayout }).(AnalysisGridLayoutConfigurationPtrOutput)
}

type AnalysisSheetDefinition struct {
	ContentType         *AnalysisSheetContentType    `pulumi:"contentType"`
	Description         *string                      `pulumi:"description"`
	FilterControls      []AnalysisFilterControl      `pulumi:"filterControls"`
	Layouts             []AnalysisLayout             `pulumi:"layouts"`
	Name                *string                      `pulumi:"name"`
	ParameterControls   []AnalysisParameterControl   `pulumi:"parameterControls"`
	SheetControlLayouts []AnalysisSheetControlLayout `pulumi:"sheetControlLayouts"`
	SheetId             string                       `pulumi:"sheetId"`
	TextBoxes           []AnalysisSheetTextBox       `pulumi:"textBoxes"`
	Title               *string                      `pulumi:"title"`
	Visuals             []AnalysisVisual             `pulumi:"visuals"`
}

// AnalysisSheetDefinitionInput is an input type that accepts AnalysisSheetDefinitionArgs and AnalysisSheetDefinitionOutput values.
// You can construct a concrete instance of `AnalysisSheetDefinitionInput` via:
//
//	AnalysisSheetDefinitionArgs{...}
type AnalysisSheetDefinitionInput interface {
	pulumi.Input

	ToAnalysisSheetDefinitionOutput() AnalysisSheetDefinitionOutput
	ToAnalysisSheetDefinitionOutputWithContext(context.Context) AnalysisSheetDefinitionOutput
}

type AnalysisSheetDefinitionArgs struct {
	ContentType         AnalysisSheetContentTypePtrInput     `pulumi:"contentType"`
	Description         pulumi.StringPtrInput                `pulumi:"description"`
	FilterControls      AnalysisFilterControlArrayInput      `pulumi:"filterControls"`
	Layouts             AnalysisLayoutArrayInput             `pulumi:"layouts"`
	Name                pulumi.StringPtrInput                `pulumi:"name"`
	ParameterControls   AnalysisParameterControlArrayInput   `pulumi:"parameterControls"`
	SheetControlLayouts AnalysisSheetControlLayoutArrayInput `pulumi:"sheetControlLayouts"`
	SheetId             pulumi.StringInput                   `pulumi:"sheetId"`
	TextBoxes           AnalysisSheetTextBoxArrayInput       `pulumi:"textBoxes"`
	Title               pulumi.StringPtrInput                `pulumi:"title"`
	Visuals             AnalysisVisualArrayInput             `pulumi:"visuals"`
}

func (AnalysisSheetDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetDefinition)(nil)).Elem()
}

func (i AnalysisSheetDefinitionArgs) ToAnalysisSheetDefinitionOutput() AnalysisSheetDefinitionOutput {
	return i.ToAnalysisSheetDefinitionOutputWithContext(context.Background())
}

func (i AnalysisSheetDefinitionArgs) ToAnalysisSheetDefinitionOutputWithContext(ctx context.Context) AnalysisSheetDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetDefinitionOutput)
}

// AnalysisSheetDefinitionArrayInput is an input type that accepts AnalysisSheetDefinitionArray and AnalysisSheetDefinitionArrayOutput values.
// You can construct a concrete instance of `AnalysisSheetDefinitionArrayInput` via:
//
//	AnalysisSheetDefinitionArray{ AnalysisSheetDefinitionArgs{...} }
type AnalysisSheetDefinitionArrayInput interface {
	pulumi.Input

	ToAnalysisSheetDefinitionArrayOutput() AnalysisSheetDefinitionArrayOutput
	ToAnalysisSheetDefinitionArrayOutputWithContext(context.Context) AnalysisSheetDefinitionArrayOutput
}

type AnalysisSheetDefinitionArray []AnalysisSheetDefinitionInput

func (AnalysisSheetDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheetDefinition)(nil)).Elem()
}

func (i AnalysisSheetDefinitionArray) ToAnalysisSheetDefinitionArrayOutput() AnalysisSheetDefinitionArrayOutput {
	return i.ToAnalysisSheetDefinitionArrayOutputWithContext(context.Background())
}

func (i AnalysisSheetDefinitionArray) ToAnalysisSheetDefinitionArrayOutputWithContext(ctx context.Context) AnalysisSheetDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetDefinitionArrayOutput)
}

type AnalysisSheetDefinitionOutput struct{ *pulumi.OutputState }

func (AnalysisSheetDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetDefinition)(nil)).Elem()
}

func (o AnalysisSheetDefinitionOutput) ToAnalysisSheetDefinitionOutput() AnalysisSheetDefinitionOutput {
	return o
}

func (o AnalysisSheetDefinitionOutput) ToAnalysisSheetDefinitionOutputWithContext(ctx context.Context) AnalysisSheetDefinitionOutput {
	return o
}

func (o AnalysisSheetDefinitionOutput) ContentType() AnalysisSheetContentTypePtrOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) *AnalysisSheetContentType { return v.ContentType }).(AnalysisSheetContentTypePtrOutput)
}

func (o AnalysisSheetDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AnalysisSheetDefinitionOutput) FilterControls() AnalysisFilterControlArrayOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) []AnalysisFilterControl { return v.FilterControls }).(AnalysisFilterControlArrayOutput)
}

func (o AnalysisSheetDefinitionOutput) Layouts() AnalysisLayoutArrayOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) []AnalysisLayout { return v.Layouts }).(AnalysisLayoutArrayOutput)
}

func (o AnalysisSheetDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisSheetDefinitionOutput) ParameterControls() AnalysisParameterControlArrayOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) []AnalysisParameterControl { return v.ParameterControls }).(AnalysisParameterControlArrayOutput)
}

func (o AnalysisSheetDefinitionOutput) SheetControlLayouts() AnalysisSheetControlLayoutArrayOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) []AnalysisSheetControlLayout { return v.SheetControlLayouts }).(AnalysisSheetControlLayoutArrayOutput)
}

func (o AnalysisSheetDefinitionOutput) SheetId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) string { return v.SheetId }).(pulumi.StringOutput)
}

func (o AnalysisSheetDefinitionOutput) TextBoxes() AnalysisSheetTextBoxArrayOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) []AnalysisSheetTextBox { return v.TextBoxes }).(AnalysisSheetTextBoxArrayOutput)
}

func (o AnalysisSheetDefinitionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o AnalysisSheetDefinitionOutput) Visuals() AnalysisVisualArrayOutput {
	return o.ApplyT(func(v AnalysisSheetDefinition) []AnalysisVisual { return v.Visuals }).(AnalysisVisualArrayOutput)
}

type AnalysisSheetDefinitionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisSheetDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheetDefinition)(nil)).Elem()
}

func (o AnalysisSheetDefinitionArrayOutput) ToAnalysisSheetDefinitionArrayOutput() AnalysisSheetDefinitionArrayOutput {
	return o
}

func (o AnalysisSheetDefinitionArrayOutput) ToAnalysisSheetDefinitionArrayOutputWithContext(ctx context.Context) AnalysisSheetDefinitionArrayOutput {
	return o
}

func (o AnalysisSheetDefinitionArrayOutput) Index(i pulumi.IntInput) AnalysisSheetDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisSheetDefinition {
		return vs[0].([]AnalysisSheetDefinition)[vs[1].(int)]
	}).(AnalysisSheetDefinitionOutput)
}

type AnalysisSheetElementConfigurationOverrides struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisSheetElementConfigurationOverridesInput is an input type that accepts AnalysisSheetElementConfigurationOverridesArgs and AnalysisSheetElementConfigurationOverridesOutput values.
// You can construct a concrete instance of `AnalysisSheetElementConfigurationOverridesInput` via:
//
//	AnalysisSheetElementConfigurationOverridesArgs{...}
type AnalysisSheetElementConfigurationOverridesInput interface {
	pulumi.Input

	ToAnalysisSheetElementConfigurationOverridesOutput() AnalysisSheetElementConfigurationOverridesOutput
	ToAnalysisSheetElementConfigurationOverridesOutputWithContext(context.Context) AnalysisSheetElementConfigurationOverridesOutput
}

type AnalysisSheetElementConfigurationOverridesArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisSheetElementConfigurationOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetElementConfigurationOverrides)(nil)).Elem()
}

func (i AnalysisSheetElementConfigurationOverridesArgs) ToAnalysisSheetElementConfigurationOverridesOutput() AnalysisSheetElementConfigurationOverridesOutput {
	return i.ToAnalysisSheetElementConfigurationOverridesOutputWithContext(context.Background())
}

func (i AnalysisSheetElementConfigurationOverridesArgs) ToAnalysisSheetElementConfigurationOverridesOutputWithContext(ctx context.Context) AnalysisSheetElementConfigurationOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetElementConfigurationOverridesOutput)
}

type AnalysisSheetElementConfigurationOverridesOutput struct{ *pulumi.OutputState }

func (AnalysisSheetElementConfigurationOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetElementConfigurationOverrides)(nil)).Elem()
}

func (o AnalysisSheetElementConfigurationOverridesOutput) ToAnalysisSheetElementConfigurationOverridesOutput() AnalysisSheetElementConfigurationOverridesOutput {
	return o
}

func (o AnalysisSheetElementConfigurationOverridesOutput) ToAnalysisSheetElementConfigurationOverridesOutputWithContext(ctx context.Context) AnalysisSheetElementConfigurationOverridesOutput {
	return o
}

func (o AnalysisSheetElementConfigurationOverridesOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisSheetElementConfigurationOverrides) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisSheetElementRenderingRule struct {
	ConfigurationOverrides AnalysisSheetElementConfigurationOverrides `pulumi:"configurationOverrides"`
	Expression             string                                     `pulumi:"expression"`
}

// AnalysisSheetElementRenderingRuleInput is an input type that accepts AnalysisSheetElementRenderingRuleArgs and AnalysisSheetElementRenderingRuleOutput values.
// You can construct a concrete instance of `AnalysisSheetElementRenderingRuleInput` via:
//
//	AnalysisSheetElementRenderingRuleArgs{...}
type AnalysisSheetElementRenderingRuleInput interface {
	pulumi.Input

	ToAnalysisSheetElementRenderingRuleOutput() AnalysisSheetElementRenderingRuleOutput
	ToAnalysisSheetElementRenderingRuleOutputWithContext(context.Context) AnalysisSheetElementRenderingRuleOutput
}

type AnalysisSheetElementRenderingRuleArgs struct {
	ConfigurationOverrides AnalysisSheetElementConfigurationOverridesInput `pulumi:"configurationOverrides"`
	Expression             pulumi.StringInput                              `pulumi:"expression"`
}

func (AnalysisSheetElementRenderingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetElementRenderingRule)(nil)).Elem()
}

func (i AnalysisSheetElementRenderingRuleArgs) ToAnalysisSheetElementRenderingRuleOutput() AnalysisSheetElementRenderingRuleOutput {
	return i.ToAnalysisSheetElementRenderingRuleOutputWithContext(context.Background())
}

func (i AnalysisSheetElementRenderingRuleArgs) ToAnalysisSheetElementRenderingRuleOutputWithContext(ctx context.Context) AnalysisSheetElementRenderingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetElementRenderingRuleOutput)
}

// AnalysisSheetElementRenderingRuleArrayInput is an input type that accepts AnalysisSheetElementRenderingRuleArray and AnalysisSheetElementRenderingRuleArrayOutput values.
// You can construct a concrete instance of `AnalysisSheetElementRenderingRuleArrayInput` via:
//
//	AnalysisSheetElementRenderingRuleArray{ AnalysisSheetElementRenderingRuleArgs{...} }
type AnalysisSheetElementRenderingRuleArrayInput interface {
	pulumi.Input

	ToAnalysisSheetElementRenderingRuleArrayOutput() AnalysisSheetElementRenderingRuleArrayOutput
	ToAnalysisSheetElementRenderingRuleArrayOutputWithContext(context.Context) AnalysisSheetElementRenderingRuleArrayOutput
}

type AnalysisSheetElementRenderingRuleArray []AnalysisSheetElementRenderingRuleInput

func (AnalysisSheetElementRenderingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheetElementRenderingRule)(nil)).Elem()
}

func (i AnalysisSheetElementRenderingRuleArray) ToAnalysisSheetElementRenderingRuleArrayOutput() AnalysisSheetElementRenderingRuleArrayOutput {
	return i.ToAnalysisSheetElementRenderingRuleArrayOutputWithContext(context.Background())
}

func (i AnalysisSheetElementRenderingRuleArray) ToAnalysisSheetElementRenderingRuleArrayOutputWithContext(ctx context.Context) AnalysisSheetElementRenderingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetElementRenderingRuleArrayOutput)
}

type AnalysisSheetElementRenderingRuleOutput struct{ *pulumi.OutputState }

func (AnalysisSheetElementRenderingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetElementRenderingRule)(nil)).Elem()
}

func (o AnalysisSheetElementRenderingRuleOutput) ToAnalysisSheetElementRenderingRuleOutput() AnalysisSheetElementRenderingRuleOutput {
	return o
}

func (o AnalysisSheetElementRenderingRuleOutput) ToAnalysisSheetElementRenderingRuleOutputWithContext(ctx context.Context) AnalysisSheetElementRenderingRuleOutput {
	return o
}

func (o AnalysisSheetElementRenderingRuleOutput) ConfigurationOverrides() AnalysisSheetElementConfigurationOverridesOutput {
	return o.ApplyT(func(v AnalysisSheetElementRenderingRule) AnalysisSheetElementConfigurationOverrides {
		return v.ConfigurationOverrides
	}).(AnalysisSheetElementConfigurationOverridesOutput)
}

func (o AnalysisSheetElementRenderingRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisSheetElementRenderingRule) string { return v.Expression }).(pulumi.StringOutput)
}

type AnalysisSheetElementRenderingRuleArrayOutput struct{ *pulumi.OutputState }

func (AnalysisSheetElementRenderingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheetElementRenderingRule)(nil)).Elem()
}

func (o AnalysisSheetElementRenderingRuleArrayOutput) ToAnalysisSheetElementRenderingRuleArrayOutput() AnalysisSheetElementRenderingRuleArrayOutput {
	return o
}

func (o AnalysisSheetElementRenderingRuleArrayOutput) ToAnalysisSheetElementRenderingRuleArrayOutputWithContext(ctx context.Context) AnalysisSheetElementRenderingRuleArrayOutput {
	return o
}

func (o AnalysisSheetElementRenderingRuleArrayOutput) Index(i pulumi.IntInput) AnalysisSheetElementRenderingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisSheetElementRenderingRule {
		return vs[0].([]AnalysisSheetElementRenderingRule)[vs[1].(int)]
	}).(AnalysisSheetElementRenderingRuleOutput)
}

type AnalysisSheetTextBox struct {
	Content        *string `pulumi:"content"`
	SheetTextBoxId string  `pulumi:"sheetTextBoxId"`
}

// AnalysisSheetTextBoxInput is an input type that accepts AnalysisSheetTextBoxArgs and AnalysisSheetTextBoxOutput values.
// You can construct a concrete instance of `AnalysisSheetTextBoxInput` via:
//
//	AnalysisSheetTextBoxArgs{...}
type AnalysisSheetTextBoxInput interface {
	pulumi.Input

	ToAnalysisSheetTextBoxOutput() AnalysisSheetTextBoxOutput
	ToAnalysisSheetTextBoxOutputWithContext(context.Context) AnalysisSheetTextBoxOutput
}

type AnalysisSheetTextBoxArgs struct {
	Content        pulumi.StringPtrInput `pulumi:"content"`
	SheetTextBoxId pulumi.StringInput    `pulumi:"sheetTextBoxId"`
}

func (AnalysisSheetTextBoxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetTextBox)(nil)).Elem()
}

func (i AnalysisSheetTextBoxArgs) ToAnalysisSheetTextBoxOutput() AnalysisSheetTextBoxOutput {
	return i.ToAnalysisSheetTextBoxOutputWithContext(context.Background())
}

func (i AnalysisSheetTextBoxArgs) ToAnalysisSheetTextBoxOutputWithContext(ctx context.Context) AnalysisSheetTextBoxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetTextBoxOutput)
}

// AnalysisSheetTextBoxArrayInput is an input type that accepts AnalysisSheetTextBoxArray and AnalysisSheetTextBoxArrayOutput values.
// You can construct a concrete instance of `AnalysisSheetTextBoxArrayInput` via:
//
//	AnalysisSheetTextBoxArray{ AnalysisSheetTextBoxArgs{...} }
type AnalysisSheetTextBoxArrayInput interface {
	pulumi.Input

	ToAnalysisSheetTextBoxArrayOutput() AnalysisSheetTextBoxArrayOutput
	ToAnalysisSheetTextBoxArrayOutputWithContext(context.Context) AnalysisSheetTextBoxArrayOutput
}

type AnalysisSheetTextBoxArray []AnalysisSheetTextBoxInput

func (AnalysisSheetTextBoxArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheetTextBox)(nil)).Elem()
}

func (i AnalysisSheetTextBoxArray) ToAnalysisSheetTextBoxArrayOutput() AnalysisSheetTextBoxArrayOutput {
	return i.ToAnalysisSheetTextBoxArrayOutputWithContext(context.Background())
}

func (i AnalysisSheetTextBoxArray) ToAnalysisSheetTextBoxArrayOutputWithContext(ctx context.Context) AnalysisSheetTextBoxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetTextBoxArrayOutput)
}

type AnalysisSheetTextBoxOutput struct{ *pulumi.OutputState }

func (AnalysisSheetTextBoxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetTextBox)(nil)).Elem()
}

func (o AnalysisSheetTextBoxOutput) ToAnalysisSheetTextBoxOutput() AnalysisSheetTextBoxOutput {
	return o
}

func (o AnalysisSheetTextBoxOutput) ToAnalysisSheetTextBoxOutputWithContext(ctx context.Context) AnalysisSheetTextBoxOutput {
	return o
}

func (o AnalysisSheetTextBoxOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSheetTextBox) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o AnalysisSheetTextBoxOutput) SheetTextBoxId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisSheetTextBox) string { return v.SheetTextBoxId }).(pulumi.StringOutput)
}

type AnalysisSheetTextBoxArrayOutput struct{ *pulumi.OutputState }

func (AnalysisSheetTextBoxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheetTextBox)(nil)).Elem()
}

func (o AnalysisSheetTextBoxArrayOutput) ToAnalysisSheetTextBoxArrayOutput() AnalysisSheetTextBoxArrayOutput {
	return o
}

func (o AnalysisSheetTextBoxArrayOutput) ToAnalysisSheetTextBoxArrayOutputWithContext(ctx context.Context) AnalysisSheetTextBoxArrayOutput {
	return o
}

func (o AnalysisSheetTextBoxArrayOutput) Index(i pulumi.IntInput) AnalysisSheetTextBoxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisSheetTextBox {
		return vs[0].([]AnalysisSheetTextBox)[vs[1].(int)]
	}).(AnalysisSheetTextBoxOutput)
}

type AnalysisSheetVisualScopingConfiguration struct {
	Scope     AnalysisFilterVisualScope `pulumi:"scope"`
	SheetId   string                    `pulumi:"sheetId"`
	VisualIds []string                  `pulumi:"visualIds"`
}

// AnalysisSheetVisualScopingConfigurationInput is an input type that accepts AnalysisSheetVisualScopingConfigurationArgs and AnalysisSheetVisualScopingConfigurationOutput values.
// You can construct a concrete instance of `AnalysisSheetVisualScopingConfigurationInput` via:
//
//	AnalysisSheetVisualScopingConfigurationArgs{...}
type AnalysisSheetVisualScopingConfigurationInput interface {
	pulumi.Input

	ToAnalysisSheetVisualScopingConfigurationOutput() AnalysisSheetVisualScopingConfigurationOutput
	ToAnalysisSheetVisualScopingConfigurationOutputWithContext(context.Context) AnalysisSheetVisualScopingConfigurationOutput
}

type AnalysisSheetVisualScopingConfigurationArgs struct {
	Scope     AnalysisFilterVisualScopeInput `pulumi:"scope"`
	SheetId   pulumi.StringInput             `pulumi:"sheetId"`
	VisualIds pulumi.StringArrayInput        `pulumi:"visualIds"`
}

func (AnalysisSheetVisualScopingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetVisualScopingConfiguration)(nil)).Elem()
}

func (i AnalysisSheetVisualScopingConfigurationArgs) ToAnalysisSheetVisualScopingConfigurationOutput() AnalysisSheetVisualScopingConfigurationOutput {
	return i.ToAnalysisSheetVisualScopingConfigurationOutputWithContext(context.Background())
}

func (i AnalysisSheetVisualScopingConfigurationArgs) ToAnalysisSheetVisualScopingConfigurationOutputWithContext(ctx context.Context) AnalysisSheetVisualScopingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetVisualScopingConfigurationOutput)
}

// AnalysisSheetVisualScopingConfigurationArrayInput is an input type that accepts AnalysisSheetVisualScopingConfigurationArray and AnalysisSheetVisualScopingConfigurationArrayOutput values.
// You can construct a concrete instance of `AnalysisSheetVisualScopingConfigurationArrayInput` via:
//
//	AnalysisSheetVisualScopingConfigurationArray{ AnalysisSheetVisualScopingConfigurationArgs{...} }
type AnalysisSheetVisualScopingConfigurationArrayInput interface {
	pulumi.Input

	ToAnalysisSheetVisualScopingConfigurationArrayOutput() AnalysisSheetVisualScopingConfigurationArrayOutput
	ToAnalysisSheetVisualScopingConfigurationArrayOutputWithContext(context.Context) AnalysisSheetVisualScopingConfigurationArrayOutput
}

type AnalysisSheetVisualScopingConfigurationArray []AnalysisSheetVisualScopingConfigurationInput

func (AnalysisSheetVisualScopingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheetVisualScopingConfiguration)(nil)).Elem()
}

func (i AnalysisSheetVisualScopingConfigurationArray) ToAnalysisSheetVisualScopingConfigurationArrayOutput() AnalysisSheetVisualScopingConfigurationArrayOutput {
	return i.ToAnalysisSheetVisualScopingConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalysisSheetVisualScopingConfigurationArray) ToAnalysisSheetVisualScopingConfigurationArrayOutputWithContext(ctx context.Context) AnalysisSheetVisualScopingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSheetVisualScopingConfigurationArrayOutput)
}

type AnalysisSheetVisualScopingConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisSheetVisualScopingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetVisualScopingConfiguration)(nil)).Elem()
}

func (o AnalysisSheetVisualScopingConfigurationOutput) ToAnalysisSheetVisualScopingConfigurationOutput() AnalysisSheetVisualScopingConfigurationOutput {
	return o
}

func (o AnalysisSheetVisualScopingConfigurationOutput) ToAnalysisSheetVisualScopingConfigurationOutputWithContext(ctx context.Context) AnalysisSheetVisualScopingConfigurationOutput {
	return o
}

func (o AnalysisSheetVisualScopingConfigurationOutput) Scope() AnalysisFilterVisualScopeOutput {
	return o.ApplyT(func(v AnalysisSheetVisualScopingConfiguration) AnalysisFilterVisualScope { return v.Scope }).(AnalysisFilterVisualScopeOutput)
}

func (o AnalysisSheetVisualScopingConfigurationOutput) SheetId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisSheetVisualScopingConfiguration) string { return v.SheetId }).(pulumi.StringOutput)
}

func (o AnalysisSheetVisualScopingConfigurationOutput) VisualIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisSheetVisualScopingConfiguration) []string { return v.VisualIds }).(pulumi.StringArrayOutput)
}

type AnalysisSheetVisualScopingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisSheetVisualScopingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisSheetVisualScopingConfiguration)(nil)).Elem()
}

func (o AnalysisSheetVisualScopingConfigurationArrayOutput) ToAnalysisSheetVisualScopingConfigurationArrayOutput() AnalysisSheetVisualScopingConfigurationArrayOutput {
	return o
}

func (o AnalysisSheetVisualScopingConfigurationArrayOutput) ToAnalysisSheetVisualScopingConfigurationArrayOutputWithContext(ctx context.Context) AnalysisSheetVisualScopingConfigurationArrayOutput {
	return o
}

func (o AnalysisSheetVisualScopingConfigurationArrayOutput) Index(i pulumi.IntInput) AnalysisSheetVisualScopingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisSheetVisualScopingConfiguration {
		return vs[0].([]AnalysisSheetVisualScopingConfiguration)[vs[1].(int)]
	}).(AnalysisSheetVisualScopingConfigurationOutput)
}

type AnalysisShortFormatText struct {
	PlainText *string `pulumi:"plainText"`
	RichText  *string `pulumi:"richText"`
}

// AnalysisShortFormatTextInput is an input type that accepts AnalysisShortFormatTextArgs and AnalysisShortFormatTextOutput values.
// You can construct a concrete instance of `AnalysisShortFormatTextInput` via:
//
//	AnalysisShortFormatTextArgs{...}
type AnalysisShortFormatTextInput interface {
	pulumi.Input

	ToAnalysisShortFormatTextOutput() AnalysisShortFormatTextOutput
	ToAnalysisShortFormatTextOutputWithContext(context.Context) AnalysisShortFormatTextOutput
}

type AnalysisShortFormatTextArgs struct {
	PlainText pulumi.StringPtrInput `pulumi:"plainText"`
	RichText  pulumi.StringPtrInput `pulumi:"richText"`
}

func (AnalysisShortFormatTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisShortFormatText)(nil)).Elem()
}

func (i AnalysisShortFormatTextArgs) ToAnalysisShortFormatTextOutput() AnalysisShortFormatTextOutput {
	return i.ToAnalysisShortFormatTextOutputWithContext(context.Background())
}

func (i AnalysisShortFormatTextArgs) ToAnalysisShortFormatTextOutputWithContext(ctx context.Context) AnalysisShortFormatTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisShortFormatTextOutput)
}

func (i AnalysisShortFormatTextArgs) ToAnalysisShortFormatTextPtrOutput() AnalysisShortFormatTextPtrOutput {
	return i.ToAnalysisShortFormatTextPtrOutputWithContext(context.Background())
}

func (i AnalysisShortFormatTextArgs) ToAnalysisShortFormatTextPtrOutputWithContext(ctx context.Context) AnalysisShortFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisShortFormatTextOutput).ToAnalysisShortFormatTextPtrOutputWithContext(ctx)
}

// AnalysisShortFormatTextPtrInput is an input type that accepts AnalysisShortFormatTextArgs, AnalysisShortFormatTextPtr and AnalysisShortFormatTextPtrOutput values.
// You can construct a concrete instance of `AnalysisShortFormatTextPtrInput` via:
//
//	        AnalysisShortFormatTextArgs{...}
//
//	or:
//
//	        nil
type AnalysisShortFormatTextPtrInput interface {
	pulumi.Input

	ToAnalysisShortFormatTextPtrOutput() AnalysisShortFormatTextPtrOutput
	ToAnalysisShortFormatTextPtrOutputWithContext(context.Context) AnalysisShortFormatTextPtrOutput
}

type analysisShortFormatTextPtrType AnalysisShortFormatTextArgs

func AnalysisShortFormatTextPtr(v *AnalysisShortFormatTextArgs) AnalysisShortFormatTextPtrInput {
	return (*analysisShortFormatTextPtrType)(v)
}

func (*analysisShortFormatTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisShortFormatText)(nil)).Elem()
}

func (i *analysisShortFormatTextPtrType) ToAnalysisShortFormatTextPtrOutput() AnalysisShortFormatTextPtrOutput {
	return i.ToAnalysisShortFormatTextPtrOutputWithContext(context.Background())
}

func (i *analysisShortFormatTextPtrType) ToAnalysisShortFormatTextPtrOutputWithContext(ctx context.Context) AnalysisShortFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisShortFormatTextPtrOutput)
}

type AnalysisShortFormatTextOutput struct{ *pulumi.OutputState }

func (AnalysisShortFormatTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisShortFormatText)(nil)).Elem()
}

func (o AnalysisShortFormatTextOutput) ToAnalysisShortFormatTextOutput() AnalysisShortFormatTextOutput {
	return o
}

func (o AnalysisShortFormatTextOutput) ToAnalysisShortFormatTextOutputWithContext(ctx context.Context) AnalysisShortFormatTextOutput {
	return o
}

func (o AnalysisShortFormatTextOutput) ToAnalysisShortFormatTextPtrOutput() AnalysisShortFormatTextPtrOutput {
	return o.ToAnalysisShortFormatTextPtrOutputWithContext(context.Background())
}

func (o AnalysisShortFormatTextOutput) ToAnalysisShortFormatTextPtrOutputWithContext(ctx context.Context) AnalysisShortFormatTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisShortFormatText) *AnalysisShortFormatText {
		return &v
	}).(AnalysisShortFormatTextPtrOutput)
}

func (o AnalysisShortFormatTextOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisShortFormatText) *string { return v.PlainText }).(pulumi.StringPtrOutput)
}

func (o AnalysisShortFormatTextOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisShortFormatText) *string { return v.RichText }).(pulumi.StringPtrOutput)
}

type AnalysisShortFormatTextPtrOutput struct{ *pulumi.OutputState }

func (AnalysisShortFormatTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisShortFormatText)(nil)).Elem()
}

func (o AnalysisShortFormatTextPtrOutput) ToAnalysisShortFormatTextPtrOutput() AnalysisShortFormatTextPtrOutput {
	return o
}

func (o AnalysisShortFormatTextPtrOutput) ToAnalysisShortFormatTextPtrOutputWithContext(ctx context.Context) AnalysisShortFormatTextPtrOutput {
	return o
}

func (o AnalysisShortFormatTextPtrOutput) Elem() AnalysisShortFormatTextOutput {
	return o.ApplyT(func(v *AnalysisShortFormatText) AnalysisShortFormatText {
		if v != nil {
			return *v
		}
		var ret AnalysisShortFormatText
		return ret
	}).(AnalysisShortFormatTextOutput)
}

func (o AnalysisShortFormatTextPtrOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisShortFormatText) *string {
		if v == nil {
			return nil
		}
		return v.PlainText
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisShortFormatTextPtrOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisShortFormatText) *string {
		if v == nil {
			return nil
		}
		return v.RichText
	}).(pulumi.StringPtrOutput)
}

type AnalysisSimpleClusterMarker struct {
	Color *string `pulumi:"color"`
}

// AnalysisSimpleClusterMarkerInput is an input type that accepts AnalysisSimpleClusterMarkerArgs and AnalysisSimpleClusterMarkerOutput values.
// You can construct a concrete instance of `AnalysisSimpleClusterMarkerInput` via:
//
//	AnalysisSimpleClusterMarkerArgs{...}
type AnalysisSimpleClusterMarkerInput interface {
	pulumi.Input

	ToAnalysisSimpleClusterMarkerOutput() AnalysisSimpleClusterMarkerOutput
	ToAnalysisSimpleClusterMarkerOutputWithContext(context.Context) AnalysisSimpleClusterMarkerOutput
}

type AnalysisSimpleClusterMarkerArgs struct {
	Color pulumi.StringPtrInput `pulumi:"color"`
}

func (AnalysisSimpleClusterMarkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSimpleClusterMarker)(nil)).Elem()
}

func (i AnalysisSimpleClusterMarkerArgs) ToAnalysisSimpleClusterMarkerOutput() AnalysisSimpleClusterMarkerOutput {
	return i.ToAnalysisSimpleClusterMarkerOutputWithContext(context.Background())
}

func (i AnalysisSimpleClusterMarkerArgs) ToAnalysisSimpleClusterMarkerOutputWithContext(ctx context.Context) AnalysisSimpleClusterMarkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSimpleClusterMarkerOutput)
}

func (i AnalysisSimpleClusterMarkerArgs) ToAnalysisSimpleClusterMarkerPtrOutput() AnalysisSimpleClusterMarkerPtrOutput {
	return i.ToAnalysisSimpleClusterMarkerPtrOutputWithContext(context.Background())
}

func (i AnalysisSimpleClusterMarkerArgs) ToAnalysisSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) AnalysisSimpleClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSimpleClusterMarkerOutput).ToAnalysisSimpleClusterMarkerPtrOutputWithContext(ctx)
}

// AnalysisSimpleClusterMarkerPtrInput is an input type that accepts AnalysisSimpleClusterMarkerArgs, AnalysisSimpleClusterMarkerPtr and AnalysisSimpleClusterMarkerPtrOutput values.
// You can construct a concrete instance of `AnalysisSimpleClusterMarkerPtrInput` via:
//
//	        AnalysisSimpleClusterMarkerArgs{...}
//
//	or:
//
//	        nil
type AnalysisSimpleClusterMarkerPtrInput interface {
	pulumi.Input

	ToAnalysisSimpleClusterMarkerPtrOutput() AnalysisSimpleClusterMarkerPtrOutput
	ToAnalysisSimpleClusterMarkerPtrOutputWithContext(context.Context) AnalysisSimpleClusterMarkerPtrOutput
}

type analysisSimpleClusterMarkerPtrType AnalysisSimpleClusterMarkerArgs

func AnalysisSimpleClusterMarkerPtr(v *AnalysisSimpleClusterMarkerArgs) AnalysisSimpleClusterMarkerPtrInput {
	return (*analysisSimpleClusterMarkerPtrType)(v)
}

func (*analysisSimpleClusterMarkerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSimpleClusterMarker)(nil)).Elem()
}

func (i *analysisSimpleClusterMarkerPtrType) ToAnalysisSimpleClusterMarkerPtrOutput() AnalysisSimpleClusterMarkerPtrOutput {
	return i.ToAnalysisSimpleClusterMarkerPtrOutputWithContext(context.Background())
}

func (i *analysisSimpleClusterMarkerPtrType) ToAnalysisSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) AnalysisSimpleClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSimpleClusterMarkerPtrOutput)
}

type AnalysisSimpleClusterMarkerOutput struct{ *pulumi.OutputState }

func (AnalysisSimpleClusterMarkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSimpleClusterMarker)(nil)).Elem()
}

func (o AnalysisSimpleClusterMarkerOutput) ToAnalysisSimpleClusterMarkerOutput() AnalysisSimpleClusterMarkerOutput {
	return o
}

func (o AnalysisSimpleClusterMarkerOutput) ToAnalysisSimpleClusterMarkerOutputWithContext(ctx context.Context) AnalysisSimpleClusterMarkerOutput {
	return o
}

func (o AnalysisSimpleClusterMarkerOutput) ToAnalysisSimpleClusterMarkerPtrOutput() AnalysisSimpleClusterMarkerPtrOutput {
	return o.ToAnalysisSimpleClusterMarkerPtrOutputWithContext(context.Background())
}

func (o AnalysisSimpleClusterMarkerOutput) ToAnalysisSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) AnalysisSimpleClusterMarkerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSimpleClusterMarker) *AnalysisSimpleClusterMarker {
		return &v
	}).(AnalysisSimpleClusterMarkerPtrOutput)
}

func (o AnalysisSimpleClusterMarkerOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSimpleClusterMarker) *string { return v.Color }).(pulumi.StringPtrOutput)
}

type AnalysisSimpleClusterMarkerPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSimpleClusterMarkerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSimpleClusterMarker)(nil)).Elem()
}

func (o AnalysisSimpleClusterMarkerPtrOutput) ToAnalysisSimpleClusterMarkerPtrOutput() AnalysisSimpleClusterMarkerPtrOutput {
	return o
}

func (o AnalysisSimpleClusterMarkerPtrOutput) ToAnalysisSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) AnalysisSimpleClusterMarkerPtrOutput {
	return o
}

func (o AnalysisSimpleClusterMarkerPtrOutput) Elem() AnalysisSimpleClusterMarkerOutput {
	return o.ApplyT(func(v *AnalysisSimpleClusterMarker) AnalysisSimpleClusterMarker {
		if v != nil {
			return *v
		}
		var ret AnalysisSimpleClusterMarker
		return ret
	}).(AnalysisSimpleClusterMarkerOutput)
}

func (o AnalysisSimpleClusterMarkerPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisSimpleClusterMarker) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

type AnalysisSliderControlDisplayOptions struct {
	TitleOptions *AnalysisLabelOptions `pulumi:"titleOptions"`
}

// AnalysisSliderControlDisplayOptionsInput is an input type that accepts AnalysisSliderControlDisplayOptionsArgs and AnalysisSliderControlDisplayOptionsOutput values.
// You can construct a concrete instance of `AnalysisSliderControlDisplayOptionsInput` via:
//
//	AnalysisSliderControlDisplayOptionsArgs{...}
type AnalysisSliderControlDisplayOptionsInput interface {
	pulumi.Input

	ToAnalysisSliderControlDisplayOptionsOutput() AnalysisSliderControlDisplayOptionsOutput
	ToAnalysisSliderControlDisplayOptionsOutputWithContext(context.Context) AnalysisSliderControlDisplayOptionsOutput
}

type AnalysisSliderControlDisplayOptionsArgs struct {
	TitleOptions AnalysisLabelOptionsPtrInput `pulumi:"titleOptions"`
}

func (AnalysisSliderControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSliderControlDisplayOptions)(nil)).Elem()
}

func (i AnalysisSliderControlDisplayOptionsArgs) ToAnalysisSliderControlDisplayOptionsOutput() AnalysisSliderControlDisplayOptionsOutput {
	return i.ToAnalysisSliderControlDisplayOptionsOutputWithContext(context.Background())
}

func (i AnalysisSliderControlDisplayOptionsArgs) ToAnalysisSliderControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisSliderControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSliderControlDisplayOptionsOutput)
}

func (i AnalysisSliderControlDisplayOptionsArgs) ToAnalysisSliderControlDisplayOptionsPtrOutput() AnalysisSliderControlDisplayOptionsPtrOutput {
	return i.ToAnalysisSliderControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisSliderControlDisplayOptionsArgs) ToAnalysisSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisSliderControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSliderControlDisplayOptionsOutput).ToAnalysisSliderControlDisplayOptionsPtrOutputWithContext(ctx)
}

// AnalysisSliderControlDisplayOptionsPtrInput is an input type that accepts AnalysisSliderControlDisplayOptionsArgs, AnalysisSliderControlDisplayOptionsPtr and AnalysisSliderControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisSliderControlDisplayOptionsPtrInput` via:
//
//	        AnalysisSliderControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisSliderControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisSliderControlDisplayOptionsPtrOutput() AnalysisSliderControlDisplayOptionsPtrOutput
	ToAnalysisSliderControlDisplayOptionsPtrOutputWithContext(context.Context) AnalysisSliderControlDisplayOptionsPtrOutput
}

type analysisSliderControlDisplayOptionsPtrType AnalysisSliderControlDisplayOptionsArgs

func AnalysisSliderControlDisplayOptionsPtr(v *AnalysisSliderControlDisplayOptionsArgs) AnalysisSliderControlDisplayOptionsPtrInput {
	return (*analysisSliderControlDisplayOptionsPtrType)(v)
}

func (*analysisSliderControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSliderControlDisplayOptions)(nil)).Elem()
}

func (i *analysisSliderControlDisplayOptionsPtrType) ToAnalysisSliderControlDisplayOptionsPtrOutput() AnalysisSliderControlDisplayOptionsPtrOutput {
	return i.ToAnalysisSliderControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisSliderControlDisplayOptionsPtrType) ToAnalysisSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisSliderControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSliderControlDisplayOptionsPtrOutput)
}

type AnalysisSliderControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisSliderControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSliderControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisSliderControlDisplayOptionsOutput) ToAnalysisSliderControlDisplayOptionsOutput() AnalysisSliderControlDisplayOptionsOutput {
	return o
}

func (o AnalysisSliderControlDisplayOptionsOutput) ToAnalysisSliderControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisSliderControlDisplayOptionsOutput {
	return o
}

func (o AnalysisSliderControlDisplayOptionsOutput) ToAnalysisSliderControlDisplayOptionsPtrOutput() AnalysisSliderControlDisplayOptionsPtrOutput {
	return o.ToAnalysisSliderControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisSliderControlDisplayOptionsOutput) ToAnalysisSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisSliderControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSliderControlDisplayOptions) *AnalysisSliderControlDisplayOptions {
		return &v
	}).(AnalysisSliderControlDisplayOptionsPtrOutput)
}

func (o AnalysisSliderControlDisplayOptionsOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisSliderControlDisplayOptions) *AnalysisLabelOptions { return v.TitleOptions }).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisSliderControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSliderControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSliderControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisSliderControlDisplayOptionsPtrOutput) ToAnalysisSliderControlDisplayOptionsPtrOutput() AnalysisSliderControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisSliderControlDisplayOptionsPtrOutput) ToAnalysisSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisSliderControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisSliderControlDisplayOptionsPtrOutput) Elem() AnalysisSliderControlDisplayOptionsOutput {
	return o.ApplyT(func(v *AnalysisSliderControlDisplayOptions) AnalysisSliderControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisSliderControlDisplayOptions
		return ret
	}).(AnalysisSliderControlDisplayOptionsOutput)
}

func (o AnalysisSliderControlDisplayOptionsPtrOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisSliderControlDisplayOptions) *AnalysisLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisSmallMultiplesOptions struct {
	MaxVisibleColumns  *float64                    `pulumi:"maxVisibleColumns"`
	MaxVisibleRows     *float64                    `pulumi:"maxVisibleRows"`
	PanelConfiguration *AnalysisPanelConfiguration `pulumi:"panelConfiguration"`
}

// AnalysisSmallMultiplesOptionsInput is an input type that accepts AnalysisSmallMultiplesOptionsArgs and AnalysisSmallMultiplesOptionsOutput values.
// You can construct a concrete instance of `AnalysisSmallMultiplesOptionsInput` via:
//
//	AnalysisSmallMultiplesOptionsArgs{...}
type AnalysisSmallMultiplesOptionsInput interface {
	pulumi.Input

	ToAnalysisSmallMultiplesOptionsOutput() AnalysisSmallMultiplesOptionsOutput
	ToAnalysisSmallMultiplesOptionsOutputWithContext(context.Context) AnalysisSmallMultiplesOptionsOutput
}

type AnalysisSmallMultiplesOptionsArgs struct {
	MaxVisibleColumns  pulumi.Float64PtrInput             `pulumi:"maxVisibleColumns"`
	MaxVisibleRows     pulumi.Float64PtrInput             `pulumi:"maxVisibleRows"`
	PanelConfiguration AnalysisPanelConfigurationPtrInput `pulumi:"panelConfiguration"`
}

func (AnalysisSmallMultiplesOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSmallMultiplesOptions)(nil)).Elem()
}

func (i AnalysisSmallMultiplesOptionsArgs) ToAnalysisSmallMultiplesOptionsOutput() AnalysisSmallMultiplesOptionsOutput {
	return i.ToAnalysisSmallMultiplesOptionsOutputWithContext(context.Background())
}

func (i AnalysisSmallMultiplesOptionsArgs) ToAnalysisSmallMultiplesOptionsOutputWithContext(ctx context.Context) AnalysisSmallMultiplesOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSmallMultiplesOptionsOutput)
}

func (i AnalysisSmallMultiplesOptionsArgs) ToAnalysisSmallMultiplesOptionsPtrOutput() AnalysisSmallMultiplesOptionsPtrOutput {
	return i.ToAnalysisSmallMultiplesOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisSmallMultiplesOptionsArgs) ToAnalysisSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSmallMultiplesOptionsOutput).ToAnalysisSmallMultiplesOptionsPtrOutputWithContext(ctx)
}

// AnalysisSmallMultiplesOptionsPtrInput is an input type that accepts AnalysisSmallMultiplesOptionsArgs, AnalysisSmallMultiplesOptionsPtr and AnalysisSmallMultiplesOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisSmallMultiplesOptionsPtrInput` via:
//
//	        AnalysisSmallMultiplesOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisSmallMultiplesOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisSmallMultiplesOptionsPtrOutput() AnalysisSmallMultiplesOptionsPtrOutput
	ToAnalysisSmallMultiplesOptionsPtrOutputWithContext(context.Context) AnalysisSmallMultiplesOptionsPtrOutput
}

type analysisSmallMultiplesOptionsPtrType AnalysisSmallMultiplesOptionsArgs

func AnalysisSmallMultiplesOptionsPtr(v *AnalysisSmallMultiplesOptionsArgs) AnalysisSmallMultiplesOptionsPtrInput {
	return (*analysisSmallMultiplesOptionsPtrType)(v)
}

func (*analysisSmallMultiplesOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSmallMultiplesOptions)(nil)).Elem()
}

func (i *analysisSmallMultiplesOptionsPtrType) ToAnalysisSmallMultiplesOptionsPtrOutput() AnalysisSmallMultiplesOptionsPtrOutput {
	return i.ToAnalysisSmallMultiplesOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisSmallMultiplesOptionsPtrType) ToAnalysisSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSmallMultiplesOptionsPtrOutput)
}

type AnalysisSmallMultiplesOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisSmallMultiplesOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSmallMultiplesOptions)(nil)).Elem()
}

func (o AnalysisSmallMultiplesOptionsOutput) ToAnalysisSmallMultiplesOptionsOutput() AnalysisSmallMultiplesOptionsOutput {
	return o
}

func (o AnalysisSmallMultiplesOptionsOutput) ToAnalysisSmallMultiplesOptionsOutputWithContext(ctx context.Context) AnalysisSmallMultiplesOptionsOutput {
	return o
}

func (o AnalysisSmallMultiplesOptionsOutput) ToAnalysisSmallMultiplesOptionsPtrOutput() AnalysisSmallMultiplesOptionsPtrOutput {
	return o.ToAnalysisSmallMultiplesOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisSmallMultiplesOptionsOutput) ToAnalysisSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSmallMultiplesOptions) *AnalysisSmallMultiplesOptions {
		return &v
	}).(AnalysisSmallMultiplesOptionsPtrOutput)
}

func (o AnalysisSmallMultiplesOptionsOutput) MaxVisibleColumns() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisSmallMultiplesOptions) *float64 { return v.MaxVisibleColumns }).(pulumi.Float64PtrOutput)
}

func (o AnalysisSmallMultiplesOptionsOutput) MaxVisibleRows() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisSmallMultiplesOptions) *float64 { return v.MaxVisibleRows }).(pulumi.Float64PtrOutput)
}

func (o AnalysisSmallMultiplesOptionsOutput) PanelConfiguration() AnalysisPanelConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisSmallMultiplesOptions) *AnalysisPanelConfiguration { return v.PanelConfiguration }).(AnalysisPanelConfigurationPtrOutput)
}

type AnalysisSmallMultiplesOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSmallMultiplesOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSmallMultiplesOptions)(nil)).Elem()
}

func (o AnalysisSmallMultiplesOptionsPtrOutput) ToAnalysisSmallMultiplesOptionsPtrOutput() AnalysisSmallMultiplesOptionsPtrOutput {
	return o
}

func (o AnalysisSmallMultiplesOptionsPtrOutput) ToAnalysisSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesOptionsPtrOutput {
	return o
}

func (o AnalysisSmallMultiplesOptionsPtrOutput) Elem() AnalysisSmallMultiplesOptionsOutput {
	return o.ApplyT(func(v *AnalysisSmallMultiplesOptions) AnalysisSmallMultiplesOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisSmallMultiplesOptions
		return ret
	}).(AnalysisSmallMultiplesOptionsOutput)
}

func (o AnalysisSmallMultiplesOptionsPtrOutput) MaxVisibleColumns() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisSmallMultiplesOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxVisibleColumns
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisSmallMultiplesOptionsPtrOutput) MaxVisibleRows() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisSmallMultiplesOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxVisibleRows
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisSmallMultiplesOptionsPtrOutput) PanelConfiguration() AnalysisPanelConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisSmallMultiplesOptions) *AnalysisPanelConfiguration {
		if v == nil {
			return nil
		}
		return v.PanelConfiguration
	}).(AnalysisPanelConfigurationPtrOutput)
}

type AnalysisSourceEntity struct {
	SourceTemplate *AnalysisSourceTemplate `pulumi:"sourceTemplate"`
}

// AnalysisSourceEntityInput is an input type that accepts AnalysisSourceEntityArgs and AnalysisSourceEntityOutput values.
// You can construct a concrete instance of `AnalysisSourceEntityInput` via:
//
//	AnalysisSourceEntityArgs{...}
type AnalysisSourceEntityInput interface {
	pulumi.Input

	ToAnalysisSourceEntityOutput() AnalysisSourceEntityOutput
	ToAnalysisSourceEntityOutputWithContext(context.Context) AnalysisSourceEntityOutput
}

type AnalysisSourceEntityArgs struct {
	SourceTemplate AnalysisSourceTemplatePtrInput `pulumi:"sourceTemplate"`
}

func (AnalysisSourceEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSourceEntity)(nil)).Elem()
}

func (i AnalysisSourceEntityArgs) ToAnalysisSourceEntityOutput() AnalysisSourceEntityOutput {
	return i.ToAnalysisSourceEntityOutputWithContext(context.Background())
}

func (i AnalysisSourceEntityArgs) ToAnalysisSourceEntityOutputWithContext(ctx context.Context) AnalysisSourceEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSourceEntityOutput)
}

func (i AnalysisSourceEntityArgs) ToAnalysisSourceEntityPtrOutput() AnalysisSourceEntityPtrOutput {
	return i.ToAnalysisSourceEntityPtrOutputWithContext(context.Background())
}

func (i AnalysisSourceEntityArgs) ToAnalysisSourceEntityPtrOutputWithContext(ctx context.Context) AnalysisSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSourceEntityOutput).ToAnalysisSourceEntityPtrOutputWithContext(ctx)
}

// AnalysisSourceEntityPtrInput is an input type that accepts AnalysisSourceEntityArgs, AnalysisSourceEntityPtr and AnalysisSourceEntityPtrOutput values.
// You can construct a concrete instance of `AnalysisSourceEntityPtrInput` via:
//
//	        AnalysisSourceEntityArgs{...}
//
//	or:
//
//	        nil
type AnalysisSourceEntityPtrInput interface {
	pulumi.Input

	ToAnalysisSourceEntityPtrOutput() AnalysisSourceEntityPtrOutput
	ToAnalysisSourceEntityPtrOutputWithContext(context.Context) AnalysisSourceEntityPtrOutput
}

type analysisSourceEntityPtrType AnalysisSourceEntityArgs

func AnalysisSourceEntityPtr(v *AnalysisSourceEntityArgs) AnalysisSourceEntityPtrInput {
	return (*analysisSourceEntityPtrType)(v)
}

func (*analysisSourceEntityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSourceEntity)(nil)).Elem()
}

func (i *analysisSourceEntityPtrType) ToAnalysisSourceEntityPtrOutput() AnalysisSourceEntityPtrOutput {
	return i.ToAnalysisSourceEntityPtrOutputWithContext(context.Background())
}

func (i *analysisSourceEntityPtrType) ToAnalysisSourceEntityPtrOutputWithContext(ctx context.Context) AnalysisSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSourceEntityPtrOutput)
}

type AnalysisSourceEntityOutput struct{ *pulumi.OutputState }

func (AnalysisSourceEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSourceEntity)(nil)).Elem()
}

func (o AnalysisSourceEntityOutput) ToAnalysisSourceEntityOutput() AnalysisSourceEntityOutput {
	return o
}

func (o AnalysisSourceEntityOutput) ToAnalysisSourceEntityOutputWithContext(ctx context.Context) AnalysisSourceEntityOutput {
	return o
}

func (o AnalysisSourceEntityOutput) ToAnalysisSourceEntityPtrOutput() AnalysisSourceEntityPtrOutput {
	return o.ToAnalysisSourceEntityPtrOutputWithContext(context.Background())
}

func (o AnalysisSourceEntityOutput) ToAnalysisSourceEntityPtrOutputWithContext(ctx context.Context) AnalysisSourceEntityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSourceEntity) *AnalysisSourceEntity {
		return &v
	}).(AnalysisSourceEntityPtrOutput)
}

func (o AnalysisSourceEntityOutput) SourceTemplate() AnalysisSourceTemplatePtrOutput {
	return o.ApplyT(func(v AnalysisSourceEntity) *AnalysisSourceTemplate { return v.SourceTemplate }).(AnalysisSourceTemplatePtrOutput)
}

type AnalysisSourceEntityPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSourceEntityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSourceEntity)(nil)).Elem()
}

func (o AnalysisSourceEntityPtrOutput) ToAnalysisSourceEntityPtrOutput() AnalysisSourceEntityPtrOutput {
	return o
}

func (o AnalysisSourceEntityPtrOutput) ToAnalysisSourceEntityPtrOutputWithContext(ctx context.Context) AnalysisSourceEntityPtrOutput {
	return o
}

func (o AnalysisSourceEntityPtrOutput) Elem() AnalysisSourceEntityOutput {
	return o.ApplyT(func(v *AnalysisSourceEntity) AnalysisSourceEntity {
		if v != nil {
			return *v
		}
		var ret AnalysisSourceEntity
		return ret
	}).(AnalysisSourceEntityOutput)
}

func (o AnalysisSourceEntityPtrOutput) SourceTemplate() AnalysisSourceTemplatePtrOutput {
	return o.ApplyT(func(v *AnalysisSourceEntity) *AnalysisSourceTemplate {
		if v == nil {
			return nil
		}
		return v.SourceTemplate
	}).(AnalysisSourceTemplatePtrOutput)
}

type AnalysisSourceTemplate struct {
	Arn               string                     `pulumi:"arn"`
	DataSetReferences []AnalysisDataSetReference `pulumi:"dataSetReferences"`
}

// AnalysisSourceTemplateInput is an input type that accepts AnalysisSourceTemplateArgs and AnalysisSourceTemplateOutput values.
// You can construct a concrete instance of `AnalysisSourceTemplateInput` via:
//
//	AnalysisSourceTemplateArgs{...}
type AnalysisSourceTemplateInput interface {
	pulumi.Input

	ToAnalysisSourceTemplateOutput() AnalysisSourceTemplateOutput
	ToAnalysisSourceTemplateOutputWithContext(context.Context) AnalysisSourceTemplateOutput
}

type AnalysisSourceTemplateArgs struct {
	Arn               pulumi.StringInput                 `pulumi:"arn"`
	DataSetReferences AnalysisDataSetReferenceArrayInput `pulumi:"dataSetReferences"`
}

func (AnalysisSourceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSourceTemplate)(nil)).Elem()
}

func (i AnalysisSourceTemplateArgs) ToAnalysisSourceTemplateOutput() AnalysisSourceTemplateOutput {
	return i.ToAnalysisSourceTemplateOutputWithContext(context.Background())
}

func (i AnalysisSourceTemplateArgs) ToAnalysisSourceTemplateOutputWithContext(ctx context.Context) AnalysisSourceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSourceTemplateOutput)
}

func (i AnalysisSourceTemplateArgs) ToAnalysisSourceTemplatePtrOutput() AnalysisSourceTemplatePtrOutput {
	return i.ToAnalysisSourceTemplatePtrOutputWithContext(context.Background())
}

func (i AnalysisSourceTemplateArgs) ToAnalysisSourceTemplatePtrOutputWithContext(ctx context.Context) AnalysisSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSourceTemplateOutput).ToAnalysisSourceTemplatePtrOutputWithContext(ctx)
}

// AnalysisSourceTemplatePtrInput is an input type that accepts AnalysisSourceTemplateArgs, AnalysisSourceTemplatePtr and AnalysisSourceTemplatePtrOutput values.
// You can construct a concrete instance of `AnalysisSourceTemplatePtrInput` via:
//
//	        AnalysisSourceTemplateArgs{...}
//
//	or:
//
//	        nil
type AnalysisSourceTemplatePtrInput interface {
	pulumi.Input

	ToAnalysisSourceTemplatePtrOutput() AnalysisSourceTemplatePtrOutput
	ToAnalysisSourceTemplatePtrOutputWithContext(context.Context) AnalysisSourceTemplatePtrOutput
}

type analysisSourceTemplatePtrType AnalysisSourceTemplateArgs

func AnalysisSourceTemplatePtr(v *AnalysisSourceTemplateArgs) AnalysisSourceTemplatePtrInput {
	return (*analysisSourceTemplatePtrType)(v)
}

func (*analysisSourceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSourceTemplate)(nil)).Elem()
}

func (i *analysisSourceTemplatePtrType) ToAnalysisSourceTemplatePtrOutput() AnalysisSourceTemplatePtrOutput {
	return i.ToAnalysisSourceTemplatePtrOutputWithContext(context.Background())
}

func (i *analysisSourceTemplatePtrType) ToAnalysisSourceTemplatePtrOutputWithContext(ctx context.Context) AnalysisSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSourceTemplatePtrOutput)
}

type AnalysisSourceTemplateOutput struct{ *pulumi.OutputState }

func (AnalysisSourceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSourceTemplate)(nil)).Elem()
}

func (o AnalysisSourceTemplateOutput) ToAnalysisSourceTemplateOutput() AnalysisSourceTemplateOutput {
	return o
}

func (o AnalysisSourceTemplateOutput) ToAnalysisSourceTemplateOutputWithContext(ctx context.Context) AnalysisSourceTemplateOutput {
	return o
}

func (o AnalysisSourceTemplateOutput) ToAnalysisSourceTemplatePtrOutput() AnalysisSourceTemplatePtrOutput {
	return o.ToAnalysisSourceTemplatePtrOutputWithContext(context.Background())
}

func (o AnalysisSourceTemplateOutput) ToAnalysisSourceTemplatePtrOutputWithContext(ctx context.Context) AnalysisSourceTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSourceTemplate) *AnalysisSourceTemplate {
		return &v
	}).(AnalysisSourceTemplatePtrOutput)
}

func (o AnalysisSourceTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisSourceTemplate) string { return v.Arn }).(pulumi.StringOutput)
}

func (o AnalysisSourceTemplateOutput) DataSetReferences() AnalysisDataSetReferenceArrayOutput {
	return o.ApplyT(func(v AnalysisSourceTemplate) []AnalysisDataSetReference { return v.DataSetReferences }).(AnalysisDataSetReferenceArrayOutput)
}

type AnalysisSourceTemplatePtrOutput struct{ *pulumi.OutputState }

func (AnalysisSourceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSourceTemplate)(nil)).Elem()
}

func (o AnalysisSourceTemplatePtrOutput) ToAnalysisSourceTemplatePtrOutput() AnalysisSourceTemplatePtrOutput {
	return o
}

func (o AnalysisSourceTemplatePtrOutput) ToAnalysisSourceTemplatePtrOutputWithContext(ctx context.Context) AnalysisSourceTemplatePtrOutput {
	return o
}

func (o AnalysisSourceTemplatePtrOutput) Elem() AnalysisSourceTemplateOutput {
	return o.ApplyT(func(v *AnalysisSourceTemplate) AnalysisSourceTemplate {
		if v != nil {
			return *v
		}
		var ret AnalysisSourceTemplate
		return ret
	}).(AnalysisSourceTemplateOutput)
}

func (o AnalysisSourceTemplatePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisSourceTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisSourceTemplatePtrOutput) DataSetReferences() AnalysisDataSetReferenceArrayOutput {
	return o.ApplyT(func(v *AnalysisSourceTemplate) []AnalysisDataSetReference {
		if v == nil {
			return nil
		}
		return v.DataSetReferences
	}).(AnalysisDataSetReferenceArrayOutput)
}

type AnalysisSpacing struct {
	// String based length that is composed of value and unit
	Bottom *string `pulumi:"bottom"`
	// String based length that is composed of value and unit
	Left *string `pulumi:"left"`
	// String based length that is composed of value and unit
	Right *string `pulumi:"right"`
	// String based length that is composed of value and unit
	Top *string `pulumi:"top"`
}

// AnalysisSpacingInput is an input type that accepts AnalysisSpacingArgs and AnalysisSpacingOutput values.
// You can construct a concrete instance of `AnalysisSpacingInput` via:
//
//	AnalysisSpacingArgs{...}
type AnalysisSpacingInput interface {
	pulumi.Input

	ToAnalysisSpacingOutput() AnalysisSpacingOutput
	ToAnalysisSpacingOutputWithContext(context.Context) AnalysisSpacingOutput
}

type AnalysisSpacingArgs struct {
	// String based length that is composed of value and unit
	Bottom pulumi.StringPtrInput `pulumi:"bottom"`
	// String based length that is composed of value and unit
	Left pulumi.StringPtrInput `pulumi:"left"`
	// String based length that is composed of value and unit
	Right pulumi.StringPtrInput `pulumi:"right"`
	// String based length that is composed of value and unit
	Top pulumi.StringPtrInput `pulumi:"top"`
}

func (AnalysisSpacingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSpacing)(nil)).Elem()
}

func (i AnalysisSpacingArgs) ToAnalysisSpacingOutput() AnalysisSpacingOutput {
	return i.ToAnalysisSpacingOutputWithContext(context.Background())
}

func (i AnalysisSpacingArgs) ToAnalysisSpacingOutputWithContext(ctx context.Context) AnalysisSpacingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSpacingOutput)
}

func (i AnalysisSpacingArgs) ToAnalysisSpacingPtrOutput() AnalysisSpacingPtrOutput {
	return i.ToAnalysisSpacingPtrOutputWithContext(context.Background())
}

func (i AnalysisSpacingArgs) ToAnalysisSpacingPtrOutputWithContext(ctx context.Context) AnalysisSpacingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSpacingOutput).ToAnalysisSpacingPtrOutputWithContext(ctx)
}

// AnalysisSpacingPtrInput is an input type that accepts AnalysisSpacingArgs, AnalysisSpacingPtr and AnalysisSpacingPtrOutput values.
// You can construct a concrete instance of `AnalysisSpacingPtrInput` via:
//
//	        AnalysisSpacingArgs{...}
//
//	or:
//
//	        nil
type AnalysisSpacingPtrInput interface {
	pulumi.Input

	ToAnalysisSpacingPtrOutput() AnalysisSpacingPtrOutput
	ToAnalysisSpacingPtrOutputWithContext(context.Context) AnalysisSpacingPtrOutput
}

type analysisSpacingPtrType AnalysisSpacingArgs

func AnalysisSpacingPtr(v *AnalysisSpacingArgs) AnalysisSpacingPtrInput {
	return (*analysisSpacingPtrType)(v)
}

func (*analysisSpacingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSpacing)(nil)).Elem()
}

func (i *analysisSpacingPtrType) ToAnalysisSpacingPtrOutput() AnalysisSpacingPtrOutput {
	return i.ToAnalysisSpacingPtrOutputWithContext(context.Background())
}

func (i *analysisSpacingPtrType) ToAnalysisSpacingPtrOutputWithContext(ctx context.Context) AnalysisSpacingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSpacingPtrOutput)
}

type AnalysisSpacingOutput struct{ *pulumi.OutputState }

func (AnalysisSpacingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSpacing)(nil)).Elem()
}

func (o AnalysisSpacingOutput) ToAnalysisSpacingOutput() AnalysisSpacingOutput {
	return o
}

func (o AnalysisSpacingOutput) ToAnalysisSpacingOutputWithContext(ctx context.Context) AnalysisSpacingOutput {
	return o
}

func (o AnalysisSpacingOutput) ToAnalysisSpacingPtrOutput() AnalysisSpacingPtrOutput {
	return o.ToAnalysisSpacingPtrOutputWithContext(context.Background())
}

func (o AnalysisSpacingOutput) ToAnalysisSpacingPtrOutputWithContext(ctx context.Context) AnalysisSpacingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSpacing) *AnalysisSpacing {
		return &v
	}).(AnalysisSpacingPtrOutput)
}

// String based length that is composed of value and unit
func (o AnalysisSpacingOutput) Bottom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSpacing) *string { return v.Bottom }).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o AnalysisSpacingOutput) Left() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSpacing) *string { return v.Left }).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o AnalysisSpacingOutput) Right() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSpacing) *string { return v.Right }).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o AnalysisSpacingOutput) Top() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSpacing) *string { return v.Top }).(pulumi.StringPtrOutput)
}

type AnalysisSpacingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSpacingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSpacing)(nil)).Elem()
}

func (o AnalysisSpacingPtrOutput) ToAnalysisSpacingPtrOutput() AnalysisSpacingPtrOutput {
	return o
}

func (o AnalysisSpacingPtrOutput) ToAnalysisSpacingPtrOutputWithContext(ctx context.Context) AnalysisSpacingPtrOutput {
	return o
}

func (o AnalysisSpacingPtrOutput) Elem() AnalysisSpacingOutput {
	return o.ApplyT(func(v *AnalysisSpacing) AnalysisSpacing {
		if v != nil {
			return *v
		}
		var ret AnalysisSpacing
		return ret
	}).(AnalysisSpacingOutput)
}

// String based length that is composed of value and unit
func (o AnalysisSpacingPtrOutput) Bottom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Bottom
	}).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o AnalysisSpacingPtrOutput) Left() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Left
	}).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o AnalysisSpacingPtrOutput) Right() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Right
	}).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o AnalysisSpacingPtrOutput) Top() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Top
	}).(pulumi.StringPtrOutput)
}

type AnalysisStringDefaultValues struct {
	DynamicValue *AnalysisDynamicDefaultValue `pulumi:"dynamicValue"`
	StaticValues []string                     `pulumi:"staticValues"`
}

// AnalysisStringDefaultValuesInput is an input type that accepts AnalysisStringDefaultValuesArgs and AnalysisStringDefaultValuesOutput values.
// You can construct a concrete instance of `AnalysisStringDefaultValuesInput` via:
//
//	AnalysisStringDefaultValuesArgs{...}
type AnalysisStringDefaultValuesInput interface {
	pulumi.Input

	ToAnalysisStringDefaultValuesOutput() AnalysisStringDefaultValuesOutput
	ToAnalysisStringDefaultValuesOutputWithContext(context.Context) AnalysisStringDefaultValuesOutput
}

type AnalysisStringDefaultValuesArgs struct {
	DynamicValue AnalysisDynamicDefaultValuePtrInput `pulumi:"dynamicValue"`
	StaticValues pulumi.StringArrayInput             `pulumi:"staticValues"`
}

func (AnalysisStringDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringDefaultValues)(nil)).Elem()
}

func (i AnalysisStringDefaultValuesArgs) ToAnalysisStringDefaultValuesOutput() AnalysisStringDefaultValuesOutput {
	return i.ToAnalysisStringDefaultValuesOutputWithContext(context.Background())
}

func (i AnalysisStringDefaultValuesArgs) ToAnalysisStringDefaultValuesOutputWithContext(ctx context.Context) AnalysisStringDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringDefaultValuesOutput)
}

func (i AnalysisStringDefaultValuesArgs) ToAnalysisStringDefaultValuesPtrOutput() AnalysisStringDefaultValuesPtrOutput {
	return i.ToAnalysisStringDefaultValuesPtrOutputWithContext(context.Background())
}

func (i AnalysisStringDefaultValuesArgs) ToAnalysisStringDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisStringDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringDefaultValuesOutput).ToAnalysisStringDefaultValuesPtrOutputWithContext(ctx)
}

// AnalysisStringDefaultValuesPtrInput is an input type that accepts AnalysisStringDefaultValuesArgs, AnalysisStringDefaultValuesPtr and AnalysisStringDefaultValuesPtrOutput values.
// You can construct a concrete instance of `AnalysisStringDefaultValuesPtrInput` via:
//
//	        AnalysisStringDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type AnalysisStringDefaultValuesPtrInput interface {
	pulumi.Input

	ToAnalysisStringDefaultValuesPtrOutput() AnalysisStringDefaultValuesPtrOutput
	ToAnalysisStringDefaultValuesPtrOutputWithContext(context.Context) AnalysisStringDefaultValuesPtrOutput
}

type analysisStringDefaultValuesPtrType AnalysisStringDefaultValuesArgs

func AnalysisStringDefaultValuesPtr(v *AnalysisStringDefaultValuesArgs) AnalysisStringDefaultValuesPtrInput {
	return (*analysisStringDefaultValuesPtrType)(v)
}

func (*analysisStringDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisStringDefaultValues)(nil)).Elem()
}

func (i *analysisStringDefaultValuesPtrType) ToAnalysisStringDefaultValuesPtrOutput() AnalysisStringDefaultValuesPtrOutput {
	return i.ToAnalysisStringDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *analysisStringDefaultValuesPtrType) ToAnalysisStringDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisStringDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringDefaultValuesPtrOutput)
}

type AnalysisStringDefaultValuesOutput struct{ *pulumi.OutputState }

func (AnalysisStringDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringDefaultValues)(nil)).Elem()
}

func (o AnalysisStringDefaultValuesOutput) ToAnalysisStringDefaultValuesOutput() AnalysisStringDefaultValuesOutput {
	return o
}

func (o AnalysisStringDefaultValuesOutput) ToAnalysisStringDefaultValuesOutputWithContext(ctx context.Context) AnalysisStringDefaultValuesOutput {
	return o
}

func (o AnalysisStringDefaultValuesOutput) ToAnalysisStringDefaultValuesPtrOutput() AnalysisStringDefaultValuesPtrOutput {
	return o.ToAnalysisStringDefaultValuesPtrOutputWithContext(context.Background())
}

func (o AnalysisStringDefaultValuesOutput) ToAnalysisStringDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisStringDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisStringDefaultValues) *AnalysisStringDefaultValues {
		return &v
	}).(AnalysisStringDefaultValuesPtrOutput)
}

func (o AnalysisStringDefaultValuesOutput) DynamicValue() AnalysisDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v AnalysisStringDefaultValues) *AnalysisDynamicDefaultValue { return v.DynamicValue }).(AnalysisDynamicDefaultValuePtrOutput)
}

func (o AnalysisStringDefaultValuesOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisStringDefaultValues) []string { return v.StaticValues }).(pulumi.StringArrayOutput)
}

type AnalysisStringDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (AnalysisStringDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisStringDefaultValues)(nil)).Elem()
}

func (o AnalysisStringDefaultValuesPtrOutput) ToAnalysisStringDefaultValuesPtrOutput() AnalysisStringDefaultValuesPtrOutput {
	return o
}

func (o AnalysisStringDefaultValuesPtrOutput) ToAnalysisStringDefaultValuesPtrOutputWithContext(ctx context.Context) AnalysisStringDefaultValuesPtrOutput {
	return o
}

func (o AnalysisStringDefaultValuesPtrOutput) Elem() AnalysisStringDefaultValuesOutput {
	return o.ApplyT(func(v *AnalysisStringDefaultValues) AnalysisStringDefaultValues {
		if v != nil {
			return *v
		}
		var ret AnalysisStringDefaultValues
		return ret
	}).(AnalysisStringDefaultValuesOutput)
}

func (o AnalysisStringDefaultValuesPtrOutput) DynamicValue() AnalysisDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *AnalysisStringDefaultValues) *AnalysisDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(AnalysisDynamicDefaultValuePtrOutput)
}

func (o AnalysisStringDefaultValuesPtrOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisStringDefaultValues) []string {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.StringArrayOutput)
}

type AnalysisStringFormatConfiguration struct {
	NullValueFormatConfiguration *AnalysisNullValueFormatConfiguration `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   *AnalysisNumericFormatConfiguration   `pulumi:"numericFormatConfiguration"`
}

// AnalysisStringFormatConfigurationInput is an input type that accepts AnalysisStringFormatConfigurationArgs and AnalysisStringFormatConfigurationOutput values.
// You can construct a concrete instance of `AnalysisStringFormatConfigurationInput` via:
//
//	AnalysisStringFormatConfigurationArgs{...}
type AnalysisStringFormatConfigurationInput interface {
	pulumi.Input

	ToAnalysisStringFormatConfigurationOutput() AnalysisStringFormatConfigurationOutput
	ToAnalysisStringFormatConfigurationOutputWithContext(context.Context) AnalysisStringFormatConfigurationOutput
}

type AnalysisStringFormatConfigurationArgs struct {
	NullValueFormatConfiguration AnalysisNullValueFormatConfigurationPtrInput `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   AnalysisNumericFormatConfigurationPtrInput   `pulumi:"numericFormatConfiguration"`
}

func (AnalysisStringFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringFormatConfiguration)(nil)).Elem()
}

func (i AnalysisStringFormatConfigurationArgs) ToAnalysisStringFormatConfigurationOutput() AnalysisStringFormatConfigurationOutput {
	return i.ToAnalysisStringFormatConfigurationOutputWithContext(context.Background())
}

func (i AnalysisStringFormatConfigurationArgs) ToAnalysisStringFormatConfigurationOutputWithContext(ctx context.Context) AnalysisStringFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringFormatConfigurationOutput)
}

func (i AnalysisStringFormatConfigurationArgs) ToAnalysisStringFormatConfigurationPtrOutput() AnalysisStringFormatConfigurationPtrOutput {
	return i.ToAnalysisStringFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisStringFormatConfigurationArgs) ToAnalysisStringFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisStringFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringFormatConfigurationOutput).ToAnalysisStringFormatConfigurationPtrOutputWithContext(ctx)
}

// AnalysisStringFormatConfigurationPtrInput is an input type that accepts AnalysisStringFormatConfigurationArgs, AnalysisStringFormatConfigurationPtr and AnalysisStringFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisStringFormatConfigurationPtrInput` via:
//
//	        AnalysisStringFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisStringFormatConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisStringFormatConfigurationPtrOutput() AnalysisStringFormatConfigurationPtrOutput
	ToAnalysisStringFormatConfigurationPtrOutputWithContext(context.Context) AnalysisStringFormatConfigurationPtrOutput
}

type analysisStringFormatConfigurationPtrType AnalysisStringFormatConfigurationArgs

func AnalysisStringFormatConfigurationPtr(v *AnalysisStringFormatConfigurationArgs) AnalysisStringFormatConfigurationPtrInput {
	return (*analysisStringFormatConfigurationPtrType)(v)
}

func (*analysisStringFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisStringFormatConfiguration)(nil)).Elem()
}

func (i *analysisStringFormatConfigurationPtrType) ToAnalysisStringFormatConfigurationPtrOutput() AnalysisStringFormatConfigurationPtrOutput {
	return i.ToAnalysisStringFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisStringFormatConfigurationPtrType) ToAnalysisStringFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisStringFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringFormatConfigurationPtrOutput)
}

type AnalysisStringFormatConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisStringFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringFormatConfiguration)(nil)).Elem()
}

func (o AnalysisStringFormatConfigurationOutput) ToAnalysisStringFormatConfigurationOutput() AnalysisStringFormatConfigurationOutput {
	return o
}

func (o AnalysisStringFormatConfigurationOutput) ToAnalysisStringFormatConfigurationOutputWithContext(ctx context.Context) AnalysisStringFormatConfigurationOutput {
	return o
}

func (o AnalysisStringFormatConfigurationOutput) ToAnalysisStringFormatConfigurationPtrOutput() AnalysisStringFormatConfigurationPtrOutput {
	return o.ToAnalysisStringFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisStringFormatConfigurationOutput) ToAnalysisStringFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisStringFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisStringFormatConfiguration) *AnalysisStringFormatConfiguration {
		return &v
	}).(AnalysisStringFormatConfigurationPtrOutput)
}

func (o AnalysisStringFormatConfigurationOutput) NullValueFormatConfiguration() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisStringFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisStringFormatConfigurationOutput) NumericFormatConfiguration() AnalysisNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisStringFormatConfiguration) *AnalysisNumericFormatConfiguration {
		return v.NumericFormatConfiguration
	}).(AnalysisNumericFormatConfigurationPtrOutput)
}

type AnalysisStringFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisStringFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisStringFormatConfiguration)(nil)).Elem()
}

func (o AnalysisStringFormatConfigurationPtrOutput) ToAnalysisStringFormatConfigurationPtrOutput() AnalysisStringFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisStringFormatConfigurationPtrOutput) ToAnalysisStringFormatConfigurationPtrOutputWithContext(ctx context.Context) AnalysisStringFormatConfigurationPtrOutput {
	return o
}

func (o AnalysisStringFormatConfigurationPtrOutput) Elem() AnalysisStringFormatConfigurationOutput {
	return o.ApplyT(func(v *AnalysisStringFormatConfiguration) AnalysisStringFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisStringFormatConfiguration
		return ret
	}).(AnalysisStringFormatConfigurationOutput)
}

func (o AnalysisStringFormatConfigurationPtrOutput) NullValueFormatConfiguration() AnalysisNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisStringFormatConfiguration) *AnalysisNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(AnalysisNullValueFormatConfigurationPtrOutput)
}

func (o AnalysisStringFormatConfigurationPtrOutput) NumericFormatConfiguration() AnalysisNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisStringFormatConfiguration) *AnalysisNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumericFormatConfiguration
	}).(AnalysisNumericFormatConfigurationPtrOutput)
}

type AnalysisStringParameter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// AnalysisStringParameterInput is an input type that accepts AnalysisStringParameterArgs and AnalysisStringParameterOutput values.
// You can construct a concrete instance of `AnalysisStringParameterInput` via:
//
//	AnalysisStringParameterArgs{...}
type AnalysisStringParameterInput interface {
	pulumi.Input

	ToAnalysisStringParameterOutput() AnalysisStringParameterOutput
	ToAnalysisStringParameterOutputWithContext(context.Context) AnalysisStringParameterOutput
}

type AnalysisStringParameterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AnalysisStringParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringParameter)(nil)).Elem()
}

func (i AnalysisStringParameterArgs) ToAnalysisStringParameterOutput() AnalysisStringParameterOutput {
	return i.ToAnalysisStringParameterOutputWithContext(context.Background())
}

func (i AnalysisStringParameterArgs) ToAnalysisStringParameterOutputWithContext(ctx context.Context) AnalysisStringParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringParameterOutput)
}

// AnalysisStringParameterArrayInput is an input type that accepts AnalysisStringParameterArray and AnalysisStringParameterArrayOutput values.
// You can construct a concrete instance of `AnalysisStringParameterArrayInput` via:
//
//	AnalysisStringParameterArray{ AnalysisStringParameterArgs{...} }
type AnalysisStringParameterArrayInput interface {
	pulumi.Input

	ToAnalysisStringParameterArrayOutput() AnalysisStringParameterArrayOutput
	ToAnalysisStringParameterArrayOutputWithContext(context.Context) AnalysisStringParameterArrayOutput
}

type AnalysisStringParameterArray []AnalysisStringParameterInput

func (AnalysisStringParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisStringParameter)(nil)).Elem()
}

func (i AnalysisStringParameterArray) ToAnalysisStringParameterArrayOutput() AnalysisStringParameterArrayOutput {
	return i.ToAnalysisStringParameterArrayOutputWithContext(context.Background())
}

func (i AnalysisStringParameterArray) ToAnalysisStringParameterArrayOutputWithContext(ctx context.Context) AnalysisStringParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringParameterArrayOutput)
}

type AnalysisStringParameterOutput struct{ *pulumi.OutputState }

func (AnalysisStringParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringParameter)(nil)).Elem()
}

func (o AnalysisStringParameterOutput) ToAnalysisStringParameterOutput() AnalysisStringParameterOutput {
	return o
}

func (o AnalysisStringParameterOutput) ToAnalysisStringParameterOutputWithContext(ctx context.Context) AnalysisStringParameterOutput {
	return o
}

func (o AnalysisStringParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisStringParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalysisStringParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisStringParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AnalysisStringParameterArrayOutput struct{ *pulumi.OutputState }

func (AnalysisStringParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisStringParameter)(nil)).Elem()
}

func (o AnalysisStringParameterArrayOutput) ToAnalysisStringParameterArrayOutput() AnalysisStringParameterArrayOutput {
	return o
}

func (o AnalysisStringParameterArrayOutput) ToAnalysisStringParameterArrayOutputWithContext(ctx context.Context) AnalysisStringParameterArrayOutput {
	return o
}

func (o AnalysisStringParameterArrayOutput) Index(i pulumi.IntInput) AnalysisStringParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisStringParameter {
		return vs[0].([]AnalysisStringParameter)[vs[1].(int)]
	}).(AnalysisStringParameterOutput)
}

type AnalysisStringParameterDeclaration struct {
	DefaultValues           *AnalysisStringDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []AnalysisMappedDataSetParameter           `pulumi:"mappedDataSetParameters"`
	Name                    string                                     `pulumi:"name"`
	ParameterValueType      AnalysisParameterValueType                 `pulumi:"parameterValueType"`
	ValueWhenUnset          *AnalysisStringValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// AnalysisStringParameterDeclarationInput is an input type that accepts AnalysisStringParameterDeclarationArgs and AnalysisStringParameterDeclarationOutput values.
// You can construct a concrete instance of `AnalysisStringParameterDeclarationInput` via:
//
//	AnalysisStringParameterDeclarationArgs{...}
type AnalysisStringParameterDeclarationInput interface {
	pulumi.Input

	ToAnalysisStringParameterDeclarationOutput() AnalysisStringParameterDeclarationOutput
	ToAnalysisStringParameterDeclarationOutputWithContext(context.Context) AnalysisStringParameterDeclarationOutput
}

type AnalysisStringParameterDeclarationArgs struct {
	DefaultValues           AnalysisStringDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters AnalysisMappedDataSetParameterArrayInput          `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                `pulumi:"name"`
	ParameterValueType      AnalysisParameterValueTypeInput                   `pulumi:"parameterValueType"`
	ValueWhenUnset          AnalysisStringValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (AnalysisStringParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringParameterDeclaration)(nil)).Elem()
}

func (i AnalysisStringParameterDeclarationArgs) ToAnalysisStringParameterDeclarationOutput() AnalysisStringParameterDeclarationOutput {
	return i.ToAnalysisStringParameterDeclarationOutputWithContext(context.Background())
}

func (i AnalysisStringParameterDeclarationArgs) ToAnalysisStringParameterDeclarationOutputWithContext(ctx context.Context) AnalysisStringParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringParameterDeclarationOutput)
}

func (i AnalysisStringParameterDeclarationArgs) ToAnalysisStringParameterDeclarationPtrOutput() AnalysisStringParameterDeclarationPtrOutput {
	return i.ToAnalysisStringParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i AnalysisStringParameterDeclarationArgs) ToAnalysisStringParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisStringParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringParameterDeclarationOutput).ToAnalysisStringParameterDeclarationPtrOutputWithContext(ctx)
}

// AnalysisStringParameterDeclarationPtrInput is an input type that accepts AnalysisStringParameterDeclarationArgs, AnalysisStringParameterDeclarationPtr and AnalysisStringParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `AnalysisStringParameterDeclarationPtrInput` via:
//
//	        AnalysisStringParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type AnalysisStringParameterDeclarationPtrInput interface {
	pulumi.Input

	ToAnalysisStringParameterDeclarationPtrOutput() AnalysisStringParameterDeclarationPtrOutput
	ToAnalysisStringParameterDeclarationPtrOutputWithContext(context.Context) AnalysisStringParameterDeclarationPtrOutput
}

type analysisStringParameterDeclarationPtrType AnalysisStringParameterDeclarationArgs

func AnalysisStringParameterDeclarationPtr(v *AnalysisStringParameterDeclarationArgs) AnalysisStringParameterDeclarationPtrInput {
	return (*analysisStringParameterDeclarationPtrType)(v)
}

func (*analysisStringParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisStringParameterDeclaration)(nil)).Elem()
}

func (i *analysisStringParameterDeclarationPtrType) ToAnalysisStringParameterDeclarationPtrOutput() AnalysisStringParameterDeclarationPtrOutput {
	return i.ToAnalysisStringParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *analysisStringParameterDeclarationPtrType) ToAnalysisStringParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisStringParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringParameterDeclarationPtrOutput)
}

type AnalysisStringParameterDeclarationOutput struct{ *pulumi.OutputState }

func (AnalysisStringParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringParameterDeclaration)(nil)).Elem()
}

func (o AnalysisStringParameterDeclarationOutput) ToAnalysisStringParameterDeclarationOutput() AnalysisStringParameterDeclarationOutput {
	return o
}

func (o AnalysisStringParameterDeclarationOutput) ToAnalysisStringParameterDeclarationOutputWithContext(ctx context.Context) AnalysisStringParameterDeclarationOutput {
	return o
}

func (o AnalysisStringParameterDeclarationOutput) ToAnalysisStringParameterDeclarationPtrOutput() AnalysisStringParameterDeclarationPtrOutput {
	return o.ToAnalysisStringParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o AnalysisStringParameterDeclarationOutput) ToAnalysisStringParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisStringParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisStringParameterDeclaration) *AnalysisStringParameterDeclaration {
		return &v
	}).(AnalysisStringParameterDeclarationPtrOutput)
}

func (o AnalysisStringParameterDeclarationOutput) DefaultValues() AnalysisStringDefaultValuesPtrOutput {
	return o.ApplyT(func(v AnalysisStringParameterDeclaration) *AnalysisStringDefaultValues { return v.DefaultValues }).(AnalysisStringDefaultValuesPtrOutput)
}

func (o AnalysisStringParameterDeclarationOutput) MappedDataSetParameters() AnalysisMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v AnalysisStringParameterDeclaration) []AnalysisMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(AnalysisMappedDataSetParameterArrayOutput)
}

func (o AnalysisStringParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisStringParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalysisStringParameterDeclarationOutput) ParameterValueType() AnalysisParameterValueTypeOutput {
	return o.ApplyT(func(v AnalysisStringParameterDeclaration) AnalysisParameterValueType { return v.ParameterValueType }).(AnalysisParameterValueTypeOutput)
}

func (o AnalysisStringParameterDeclarationOutput) ValueWhenUnset() AnalysisStringValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisStringParameterDeclaration) *AnalysisStringValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(AnalysisStringValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisStringParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisStringParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisStringParameterDeclaration)(nil)).Elem()
}

func (o AnalysisStringParameterDeclarationPtrOutput) ToAnalysisStringParameterDeclarationPtrOutput() AnalysisStringParameterDeclarationPtrOutput {
	return o
}

func (o AnalysisStringParameterDeclarationPtrOutput) ToAnalysisStringParameterDeclarationPtrOutputWithContext(ctx context.Context) AnalysisStringParameterDeclarationPtrOutput {
	return o
}

func (o AnalysisStringParameterDeclarationPtrOutput) Elem() AnalysisStringParameterDeclarationOutput {
	return o.ApplyT(func(v *AnalysisStringParameterDeclaration) AnalysisStringParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret AnalysisStringParameterDeclaration
		return ret
	}).(AnalysisStringParameterDeclarationOutput)
}

func (o AnalysisStringParameterDeclarationPtrOutput) DefaultValues() AnalysisStringDefaultValuesPtrOutput {
	return o.ApplyT(func(v *AnalysisStringParameterDeclaration) *AnalysisStringDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(AnalysisStringDefaultValuesPtrOutput)
}

func (o AnalysisStringParameterDeclarationPtrOutput) MappedDataSetParameters() AnalysisMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *AnalysisStringParameterDeclaration) []AnalysisMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(AnalysisMappedDataSetParameterArrayOutput)
}

func (o AnalysisStringParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisStringParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisStringParameterDeclarationPtrOutput) ParameterValueType() AnalysisParameterValueTypePtrOutput {
	return o.ApplyT(func(v *AnalysisStringParameterDeclaration) *AnalysisParameterValueType {
		if v == nil {
			return nil
		}
		return &v.ParameterValueType
	}).(AnalysisParameterValueTypePtrOutput)
}

func (o AnalysisStringParameterDeclarationPtrOutput) ValueWhenUnset() AnalysisStringValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisStringParameterDeclaration) *AnalysisStringValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(AnalysisStringValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisStringValueWhenUnsetConfiguration struct {
	CustomValue          *string                       `pulumi:"customValue"`
	ValueWhenUnsetOption *AnalysisValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// AnalysisStringValueWhenUnsetConfigurationInput is an input type that accepts AnalysisStringValueWhenUnsetConfigurationArgs and AnalysisStringValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `AnalysisStringValueWhenUnsetConfigurationInput` via:
//
//	AnalysisStringValueWhenUnsetConfigurationArgs{...}
type AnalysisStringValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToAnalysisStringValueWhenUnsetConfigurationOutput() AnalysisStringValueWhenUnsetConfigurationOutput
	ToAnalysisStringValueWhenUnsetConfigurationOutputWithContext(context.Context) AnalysisStringValueWhenUnsetConfigurationOutput
}

type AnalysisStringValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.StringPtrInput                `pulumi:"customValue"`
	ValueWhenUnsetOption AnalysisValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (AnalysisStringValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i AnalysisStringValueWhenUnsetConfigurationArgs) ToAnalysisStringValueWhenUnsetConfigurationOutput() AnalysisStringValueWhenUnsetConfigurationOutput {
	return i.ToAnalysisStringValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i AnalysisStringValueWhenUnsetConfigurationArgs) ToAnalysisStringValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) AnalysisStringValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringValueWhenUnsetConfigurationOutput)
}

func (i AnalysisStringValueWhenUnsetConfigurationArgs) ToAnalysisStringValueWhenUnsetConfigurationPtrOutput() AnalysisStringValueWhenUnsetConfigurationPtrOutput {
	return i.ToAnalysisStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisStringValueWhenUnsetConfigurationArgs) ToAnalysisStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisStringValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringValueWhenUnsetConfigurationOutput).ToAnalysisStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// AnalysisStringValueWhenUnsetConfigurationPtrInput is an input type that accepts AnalysisStringValueWhenUnsetConfigurationArgs, AnalysisStringValueWhenUnsetConfigurationPtr and AnalysisStringValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisStringValueWhenUnsetConfigurationPtrInput` via:
//
//	        AnalysisStringValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisStringValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisStringValueWhenUnsetConfigurationPtrOutput() AnalysisStringValueWhenUnsetConfigurationPtrOutput
	ToAnalysisStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) AnalysisStringValueWhenUnsetConfigurationPtrOutput
}

type analysisStringValueWhenUnsetConfigurationPtrType AnalysisStringValueWhenUnsetConfigurationArgs

func AnalysisStringValueWhenUnsetConfigurationPtr(v *AnalysisStringValueWhenUnsetConfigurationArgs) AnalysisStringValueWhenUnsetConfigurationPtrInput {
	return (*analysisStringValueWhenUnsetConfigurationPtrType)(v)
}

func (*analysisStringValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *analysisStringValueWhenUnsetConfigurationPtrType) ToAnalysisStringValueWhenUnsetConfigurationPtrOutput() AnalysisStringValueWhenUnsetConfigurationPtrOutput {
	return i.ToAnalysisStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisStringValueWhenUnsetConfigurationPtrType) ToAnalysisStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisStringValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisStringValueWhenUnsetConfigurationPtrOutput)
}

type AnalysisStringValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisStringValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o AnalysisStringValueWhenUnsetConfigurationOutput) ToAnalysisStringValueWhenUnsetConfigurationOutput() AnalysisStringValueWhenUnsetConfigurationOutput {
	return o
}

func (o AnalysisStringValueWhenUnsetConfigurationOutput) ToAnalysisStringValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) AnalysisStringValueWhenUnsetConfigurationOutput {
	return o
}

func (o AnalysisStringValueWhenUnsetConfigurationOutput) ToAnalysisStringValueWhenUnsetConfigurationPtrOutput() AnalysisStringValueWhenUnsetConfigurationPtrOutput {
	return o.ToAnalysisStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisStringValueWhenUnsetConfigurationOutput) ToAnalysisStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisStringValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisStringValueWhenUnsetConfiguration) *AnalysisStringValueWhenUnsetConfiguration {
		return &v
	}).(AnalysisStringValueWhenUnsetConfigurationPtrOutput)
}

func (o AnalysisStringValueWhenUnsetConfigurationOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisStringValueWhenUnsetConfiguration) *string { return v.CustomValue }).(pulumi.StringPtrOutput)
}

func (o AnalysisStringValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() AnalysisValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v AnalysisStringValueWhenUnsetConfiguration) *AnalysisValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(AnalysisValueWhenUnsetOptionPtrOutput)
}

type AnalysisStringValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisStringValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o AnalysisStringValueWhenUnsetConfigurationPtrOutput) ToAnalysisStringValueWhenUnsetConfigurationPtrOutput() AnalysisStringValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o AnalysisStringValueWhenUnsetConfigurationPtrOutput) ToAnalysisStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisStringValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o AnalysisStringValueWhenUnsetConfigurationPtrOutput) Elem() AnalysisStringValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *AnalysisStringValueWhenUnsetConfiguration) AnalysisStringValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisStringValueWhenUnsetConfiguration
		return ret
	}).(AnalysisStringValueWhenUnsetConfigurationOutput)
}

func (o AnalysisStringValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisStringValueWhenUnsetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisStringValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() AnalysisValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisStringValueWhenUnsetConfiguration) *AnalysisValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(AnalysisValueWhenUnsetOptionPtrOutput)
}

type AnalysisSubtotalOptions struct {
	CustomLabel           *string                                  `pulumi:"customLabel"`
	FieldLevel            *AnalysisPivotTableSubtotalLevel         `pulumi:"fieldLevel"`
	FieldLevelOptions     []AnalysisPivotTableFieldSubtotalOptions `pulumi:"fieldLevelOptions"`
	MetricHeaderCellStyle *AnalysisTableCellStyle                  `pulumi:"metricHeaderCellStyle"`
	TotalCellStyle        *AnalysisTableCellStyle                  `pulumi:"totalCellStyle"`
	TotalsVisibility      *AnalysisVisibility                      `pulumi:"totalsVisibility"`
	ValueCellStyle        *AnalysisTableCellStyle                  `pulumi:"valueCellStyle"`
}

// AnalysisSubtotalOptionsInput is an input type that accepts AnalysisSubtotalOptionsArgs and AnalysisSubtotalOptionsOutput values.
// You can construct a concrete instance of `AnalysisSubtotalOptionsInput` via:
//
//	AnalysisSubtotalOptionsArgs{...}
type AnalysisSubtotalOptionsInput interface {
	pulumi.Input

	ToAnalysisSubtotalOptionsOutput() AnalysisSubtotalOptionsOutput
	ToAnalysisSubtotalOptionsOutputWithContext(context.Context) AnalysisSubtotalOptionsOutput
}

type AnalysisSubtotalOptionsArgs struct {
	CustomLabel           pulumi.StringPtrInput                            `pulumi:"customLabel"`
	FieldLevel            AnalysisPivotTableSubtotalLevelPtrInput          `pulumi:"fieldLevel"`
	FieldLevelOptions     AnalysisPivotTableFieldSubtotalOptionsArrayInput `pulumi:"fieldLevelOptions"`
	MetricHeaderCellStyle AnalysisTableCellStylePtrInput                   `pulumi:"metricHeaderCellStyle"`
	TotalCellStyle        AnalysisTableCellStylePtrInput                   `pulumi:"totalCellStyle"`
	TotalsVisibility      AnalysisVisibilityPtrInput                       `pulumi:"totalsVisibility"`
	ValueCellStyle        AnalysisTableCellStylePtrInput                   `pulumi:"valueCellStyle"`
}

func (AnalysisSubtotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSubtotalOptions)(nil)).Elem()
}

func (i AnalysisSubtotalOptionsArgs) ToAnalysisSubtotalOptionsOutput() AnalysisSubtotalOptionsOutput {
	return i.ToAnalysisSubtotalOptionsOutputWithContext(context.Background())
}

func (i AnalysisSubtotalOptionsArgs) ToAnalysisSubtotalOptionsOutputWithContext(ctx context.Context) AnalysisSubtotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSubtotalOptionsOutput)
}

func (i AnalysisSubtotalOptionsArgs) ToAnalysisSubtotalOptionsPtrOutput() AnalysisSubtotalOptionsPtrOutput {
	return i.ToAnalysisSubtotalOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisSubtotalOptionsArgs) ToAnalysisSubtotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisSubtotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSubtotalOptionsOutput).ToAnalysisSubtotalOptionsPtrOutputWithContext(ctx)
}

// AnalysisSubtotalOptionsPtrInput is an input type that accepts AnalysisSubtotalOptionsArgs, AnalysisSubtotalOptionsPtr and AnalysisSubtotalOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisSubtotalOptionsPtrInput` via:
//
//	        AnalysisSubtotalOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisSubtotalOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisSubtotalOptionsPtrOutput() AnalysisSubtotalOptionsPtrOutput
	ToAnalysisSubtotalOptionsPtrOutputWithContext(context.Context) AnalysisSubtotalOptionsPtrOutput
}

type analysisSubtotalOptionsPtrType AnalysisSubtotalOptionsArgs

func AnalysisSubtotalOptionsPtr(v *AnalysisSubtotalOptionsArgs) AnalysisSubtotalOptionsPtrInput {
	return (*analysisSubtotalOptionsPtrType)(v)
}

func (*analysisSubtotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSubtotalOptions)(nil)).Elem()
}

func (i *analysisSubtotalOptionsPtrType) ToAnalysisSubtotalOptionsPtrOutput() AnalysisSubtotalOptionsPtrOutput {
	return i.ToAnalysisSubtotalOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisSubtotalOptionsPtrType) ToAnalysisSubtotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisSubtotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisSubtotalOptionsPtrOutput)
}

type AnalysisSubtotalOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisSubtotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSubtotalOptions)(nil)).Elem()
}

func (o AnalysisSubtotalOptionsOutput) ToAnalysisSubtotalOptionsOutput() AnalysisSubtotalOptionsOutput {
	return o
}

func (o AnalysisSubtotalOptionsOutput) ToAnalysisSubtotalOptionsOutputWithContext(ctx context.Context) AnalysisSubtotalOptionsOutput {
	return o
}

func (o AnalysisSubtotalOptionsOutput) ToAnalysisSubtotalOptionsPtrOutput() AnalysisSubtotalOptionsPtrOutput {
	return o.ToAnalysisSubtotalOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisSubtotalOptionsOutput) ToAnalysisSubtotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisSubtotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSubtotalOptions) *AnalysisSubtotalOptions {
		return &v
	}).(AnalysisSubtotalOptionsPtrOutput)
}

func (o AnalysisSubtotalOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisSubtotalOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o AnalysisSubtotalOptionsOutput) FieldLevel() AnalysisPivotTableSubtotalLevelPtrOutput {
	return o.ApplyT(func(v AnalysisSubtotalOptions) *AnalysisPivotTableSubtotalLevel { return v.FieldLevel }).(AnalysisPivotTableSubtotalLevelPtrOutput)
}

func (o AnalysisSubtotalOptionsOutput) FieldLevelOptions() AnalysisPivotTableFieldSubtotalOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisSubtotalOptions) []AnalysisPivotTableFieldSubtotalOptions { return v.FieldLevelOptions }).(AnalysisPivotTableFieldSubtotalOptionsArrayOutput)
}

func (o AnalysisSubtotalOptionsOutput) MetricHeaderCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisSubtotalOptions) *AnalysisTableCellStyle { return v.MetricHeaderCellStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisSubtotalOptionsOutput) TotalCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisSubtotalOptions) *AnalysisTableCellStyle { return v.TotalCellStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisSubtotalOptionsOutput) TotalsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisSubtotalOptions) *AnalysisVisibility { return v.TotalsVisibility }).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisSubtotalOptionsOutput) ValueCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisSubtotalOptions) *AnalysisTableCellStyle { return v.ValueCellStyle }).(AnalysisTableCellStylePtrOutput)
}

type AnalysisSubtotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSubtotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSubtotalOptions)(nil)).Elem()
}

func (o AnalysisSubtotalOptionsPtrOutput) ToAnalysisSubtotalOptionsPtrOutput() AnalysisSubtotalOptionsPtrOutput {
	return o
}

func (o AnalysisSubtotalOptionsPtrOutput) ToAnalysisSubtotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisSubtotalOptionsPtrOutput {
	return o
}

func (o AnalysisSubtotalOptionsPtrOutput) Elem() AnalysisSubtotalOptionsOutput {
	return o.ApplyT(func(v *AnalysisSubtotalOptions) AnalysisSubtotalOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisSubtotalOptions
		return ret
	}).(AnalysisSubtotalOptionsOutput)
}

func (o AnalysisSubtotalOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisSubtotalOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisSubtotalOptionsPtrOutput) FieldLevel() AnalysisPivotTableSubtotalLevelPtrOutput {
	return o.ApplyT(func(v *AnalysisSubtotalOptions) *AnalysisPivotTableSubtotalLevel {
		if v == nil {
			return nil
		}
		return v.FieldLevel
	}).(AnalysisPivotTableSubtotalLevelPtrOutput)
}

func (o AnalysisSubtotalOptionsPtrOutput) FieldLevelOptions() AnalysisPivotTableFieldSubtotalOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisSubtotalOptions) []AnalysisPivotTableFieldSubtotalOptions {
		if v == nil {
			return nil
		}
		return v.FieldLevelOptions
	}).(AnalysisPivotTableFieldSubtotalOptionsArrayOutput)
}

func (o AnalysisSubtotalOptionsPtrOutput) MetricHeaderCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisSubtotalOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.MetricHeaderCellStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisSubtotalOptionsPtrOutput) TotalCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisSubtotalOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.TotalCellStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisSubtotalOptionsPtrOutput) TotalsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisSubtotalOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.TotalsVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisSubtotalOptionsPtrOutput) ValueCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisSubtotalOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.ValueCellStyle
	}).(AnalysisTableCellStylePtrOutput)
}

type AnalysisTableAggregatedFieldWells struct {
	GroupBy []AnalysisDimensionField `pulumi:"groupBy"`
	Values  []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisTableAggregatedFieldWellsInput is an input type that accepts AnalysisTableAggregatedFieldWellsArgs and AnalysisTableAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisTableAggregatedFieldWellsInput` via:
//
//	AnalysisTableAggregatedFieldWellsArgs{...}
type AnalysisTableAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisTableAggregatedFieldWellsOutput() AnalysisTableAggregatedFieldWellsOutput
	ToAnalysisTableAggregatedFieldWellsOutputWithContext(context.Context) AnalysisTableAggregatedFieldWellsOutput
}

type AnalysisTableAggregatedFieldWellsArgs struct {
	GroupBy AnalysisDimensionFieldArrayInput `pulumi:"groupBy"`
	Values  AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisTableAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisTableAggregatedFieldWellsArgs) ToAnalysisTableAggregatedFieldWellsOutput() AnalysisTableAggregatedFieldWellsOutput {
	return i.ToAnalysisTableAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisTableAggregatedFieldWellsArgs) ToAnalysisTableAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisTableAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableAggregatedFieldWellsOutput)
}

func (i AnalysisTableAggregatedFieldWellsArgs) ToAnalysisTableAggregatedFieldWellsPtrOutput() AnalysisTableAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisTableAggregatedFieldWellsArgs) ToAnalysisTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableAggregatedFieldWellsOutput).ToAnalysisTableAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisTableAggregatedFieldWellsPtrInput is an input type that accepts AnalysisTableAggregatedFieldWellsArgs, AnalysisTableAggregatedFieldWellsPtr and AnalysisTableAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisTableAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisTableAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisTableAggregatedFieldWellsPtrOutput() AnalysisTableAggregatedFieldWellsPtrOutput
	ToAnalysisTableAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisTableAggregatedFieldWellsPtrOutput
}

type analysisTableAggregatedFieldWellsPtrType AnalysisTableAggregatedFieldWellsArgs

func AnalysisTableAggregatedFieldWellsPtr(v *AnalysisTableAggregatedFieldWellsArgs) AnalysisTableAggregatedFieldWellsPtrInput {
	return (*analysisTableAggregatedFieldWellsPtrType)(v)
}

func (*analysisTableAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisTableAggregatedFieldWellsPtrType) ToAnalysisTableAggregatedFieldWellsPtrOutput() AnalysisTableAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisTableAggregatedFieldWellsPtrType) ToAnalysisTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableAggregatedFieldWellsPtrOutput)
}

type AnalysisTableAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisTableAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisTableAggregatedFieldWellsOutput) ToAnalysisTableAggregatedFieldWellsOutput() AnalysisTableAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisTableAggregatedFieldWellsOutput) ToAnalysisTableAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisTableAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisTableAggregatedFieldWellsOutput) ToAnalysisTableAggregatedFieldWellsPtrOutput() AnalysisTableAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisTableAggregatedFieldWellsOutput) ToAnalysisTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableAggregatedFieldWells) *AnalysisTableAggregatedFieldWells {
		return &v
	}).(AnalysisTableAggregatedFieldWellsPtrOutput)
}

func (o AnalysisTableAggregatedFieldWellsOutput) GroupBy() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisTableAggregatedFieldWells) []AnalysisDimensionField { return v.GroupBy }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisTableAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisTableAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisTableAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisTableAggregatedFieldWellsPtrOutput) ToAnalysisTableAggregatedFieldWellsPtrOutput() AnalysisTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisTableAggregatedFieldWellsPtrOutput) ToAnalysisTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisTableAggregatedFieldWellsPtrOutput) Elem() AnalysisTableAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisTableAggregatedFieldWells) AnalysisTableAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisTableAggregatedFieldWells
		return ret
	}).(AnalysisTableAggregatedFieldWellsOutput)
}

func (o AnalysisTableAggregatedFieldWellsPtrOutput) GroupBy() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisTableAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisTableAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisTableAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisTableBorderOptions struct {
	Color     *string                   `pulumi:"color"`
	Style     *AnalysisTableBorderStyle `pulumi:"style"`
	Thickness *float64                  `pulumi:"thickness"`
}

// AnalysisTableBorderOptionsInput is an input type that accepts AnalysisTableBorderOptionsArgs and AnalysisTableBorderOptionsOutput values.
// You can construct a concrete instance of `AnalysisTableBorderOptionsInput` via:
//
//	AnalysisTableBorderOptionsArgs{...}
type AnalysisTableBorderOptionsInput interface {
	pulumi.Input

	ToAnalysisTableBorderOptionsOutput() AnalysisTableBorderOptionsOutput
	ToAnalysisTableBorderOptionsOutputWithContext(context.Context) AnalysisTableBorderOptionsOutput
}

type AnalysisTableBorderOptionsArgs struct {
	Color     pulumi.StringPtrInput            `pulumi:"color"`
	Style     AnalysisTableBorderStylePtrInput `pulumi:"style"`
	Thickness pulumi.Float64PtrInput           `pulumi:"thickness"`
}

func (AnalysisTableBorderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableBorderOptions)(nil)).Elem()
}

func (i AnalysisTableBorderOptionsArgs) ToAnalysisTableBorderOptionsOutput() AnalysisTableBorderOptionsOutput {
	return i.ToAnalysisTableBorderOptionsOutputWithContext(context.Background())
}

func (i AnalysisTableBorderOptionsArgs) ToAnalysisTableBorderOptionsOutputWithContext(ctx context.Context) AnalysisTableBorderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableBorderOptionsOutput)
}

func (i AnalysisTableBorderOptionsArgs) ToAnalysisTableBorderOptionsPtrOutput() AnalysisTableBorderOptionsPtrOutput {
	return i.ToAnalysisTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTableBorderOptionsArgs) ToAnalysisTableBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableBorderOptionsOutput).ToAnalysisTableBorderOptionsPtrOutputWithContext(ctx)
}

// AnalysisTableBorderOptionsPtrInput is an input type that accepts AnalysisTableBorderOptionsArgs, AnalysisTableBorderOptionsPtr and AnalysisTableBorderOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTableBorderOptionsPtrInput` via:
//
//	        AnalysisTableBorderOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableBorderOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTableBorderOptionsPtrOutput() AnalysisTableBorderOptionsPtrOutput
	ToAnalysisTableBorderOptionsPtrOutputWithContext(context.Context) AnalysisTableBorderOptionsPtrOutput
}

type analysisTableBorderOptionsPtrType AnalysisTableBorderOptionsArgs

func AnalysisTableBorderOptionsPtr(v *AnalysisTableBorderOptionsArgs) AnalysisTableBorderOptionsPtrInput {
	return (*analysisTableBorderOptionsPtrType)(v)
}

func (*analysisTableBorderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableBorderOptions)(nil)).Elem()
}

func (i *analysisTableBorderOptionsPtrType) ToAnalysisTableBorderOptionsPtrOutput() AnalysisTableBorderOptionsPtrOutput {
	return i.ToAnalysisTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTableBorderOptionsPtrType) ToAnalysisTableBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableBorderOptionsPtrOutput)
}

type AnalysisTableBorderOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTableBorderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableBorderOptions)(nil)).Elem()
}

func (o AnalysisTableBorderOptionsOutput) ToAnalysisTableBorderOptionsOutput() AnalysisTableBorderOptionsOutput {
	return o
}

func (o AnalysisTableBorderOptionsOutput) ToAnalysisTableBorderOptionsOutputWithContext(ctx context.Context) AnalysisTableBorderOptionsOutput {
	return o
}

func (o AnalysisTableBorderOptionsOutput) ToAnalysisTableBorderOptionsPtrOutput() AnalysisTableBorderOptionsPtrOutput {
	return o.ToAnalysisTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTableBorderOptionsOutput) ToAnalysisTableBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableBorderOptions) *AnalysisTableBorderOptions {
		return &v
	}).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableBorderOptionsOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTableBorderOptions) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o AnalysisTableBorderOptionsOutput) Style() AnalysisTableBorderStylePtrOutput {
	return o.ApplyT(func(v AnalysisTableBorderOptions) *AnalysisTableBorderStyle { return v.Style }).(AnalysisTableBorderStylePtrOutput)
}

func (o AnalysisTableBorderOptionsOutput) Thickness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTableBorderOptions) *float64 { return v.Thickness }).(pulumi.Float64PtrOutput)
}

type AnalysisTableBorderOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableBorderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableBorderOptions)(nil)).Elem()
}

func (o AnalysisTableBorderOptionsPtrOutput) ToAnalysisTableBorderOptionsPtrOutput() AnalysisTableBorderOptionsPtrOutput {
	return o
}

func (o AnalysisTableBorderOptionsPtrOutput) ToAnalysisTableBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableBorderOptionsPtrOutput {
	return o
}

func (o AnalysisTableBorderOptionsPtrOutput) Elem() AnalysisTableBorderOptionsOutput {
	return o.ApplyT(func(v *AnalysisTableBorderOptions) AnalysisTableBorderOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTableBorderOptions
		return ret
	}).(AnalysisTableBorderOptionsOutput)
}

func (o AnalysisTableBorderOptionsPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTableBorderOptions) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTableBorderOptionsPtrOutput) Style() AnalysisTableBorderStylePtrOutput {
	return o.ApplyT(func(v *AnalysisTableBorderOptions) *AnalysisTableBorderStyle {
		if v == nil {
			return nil
		}
		return v.Style
	}).(AnalysisTableBorderStylePtrOutput)
}

func (o AnalysisTableBorderOptionsPtrOutput) Thickness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTableBorderOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Thickness
	}).(pulumi.Float64PtrOutput)
}

type AnalysisTableCellConditionalFormatting struct {
	FieldId    string                         `pulumi:"fieldId"`
	TextFormat *AnalysisTextConditionalFormat `pulumi:"textFormat"`
}

// AnalysisTableCellConditionalFormattingInput is an input type that accepts AnalysisTableCellConditionalFormattingArgs and AnalysisTableCellConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisTableCellConditionalFormattingInput` via:
//
//	AnalysisTableCellConditionalFormattingArgs{...}
type AnalysisTableCellConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisTableCellConditionalFormattingOutput() AnalysisTableCellConditionalFormattingOutput
	ToAnalysisTableCellConditionalFormattingOutputWithContext(context.Context) AnalysisTableCellConditionalFormattingOutput
}

type AnalysisTableCellConditionalFormattingArgs struct {
	FieldId    pulumi.StringInput                    `pulumi:"fieldId"`
	TextFormat AnalysisTextConditionalFormatPtrInput `pulumi:"textFormat"`
}

func (AnalysisTableCellConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableCellConditionalFormatting)(nil)).Elem()
}

func (i AnalysisTableCellConditionalFormattingArgs) ToAnalysisTableCellConditionalFormattingOutput() AnalysisTableCellConditionalFormattingOutput {
	return i.ToAnalysisTableCellConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisTableCellConditionalFormattingArgs) ToAnalysisTableCellConditionalFormattingOutputWithContext(ctx context.Context) AnalysisTableCellConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableCellConditionalFormattingOutput)
}

func (i AnalysisTableCellConditionalFormattingArgs) ToAnalysisTableCellConditionalFormattingPtrOutput() AnalysisTableCellConditionalFormattingPtrOutput {
	return i.ToAnalysisTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisTableCellConditionalFormattingArgs) ToAnalysisTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableCellConditionalFormattingOutput).ToAnalysisTableCellConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisTableCellConditionalFormattingPtrInput is an input type that accepts AnalysisTableCellConditionalFormattingArgs, AnalysisTableCellConditionalFormattingPtr and AnalysisTableCellConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisTableCellConditionalFormattingPtrInput` via:
//
//	        AnalysisTableCellConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableCellConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisTableCellConditionalFormattingPtrOutput() AnalysisTableCellConditionalFormattingPtrOutput
	ToAnalysisTableCellConditionalFormattingPtrOutputWithContext(context.Context) AnalysisTableCellConditionalFormattingPtrOutput
}

type analysisTableCellConditionalFormattingPtrType AnalysisTableCellConditionalFormattingArgs

func AnalysisTableCellConditionalFormattingPtr(v *AnalysisTableCellConditionalFormattingArgs) AnalysisTableCellConditionalFormattingPtrInput {
	return (*analysisTableCellConditionalFormattingPtrType)(v)
}

func (*analysisTableCellConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableCellConditionalFormatting)(nil)).Elem()
}

func (i *analysisTableCellConditionalFormattingPtrType) ToAnalysisTableCellConditionalFormattingPtrOutput() AnalysisTableCellConditionalFormattingPtrOutput {
	return i.ToAnalysisTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisTableCellConditionalFormattingPtrType) ToAnalysisTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableCellConditionalFormattingPtrOutput)
}

type AnalysisTableCellConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisTableCellConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableCellConditionalFormatting)(nil)).Elem()
}

func (o AnalysisTableCellConditionalFormattingOutput) ToAnalysisTableCellConditionalFormattingOutput() AnalysisTableCellConditionalFormattingOutput {
	return o
}

func (o AnalysisTableCellConditionalFormattingOutput) ToAnalysisTableCellConditionalFormattingOutputWithContext(ctx context.Context) AnalysisTableCellConditionalFormattingOutput {
	return o
}

func (o AnalysisTableCellConditionalFormattingOutput) ToAnalysisTableCellConditionalFormattingPtrOutput() AnalysisTableCellConditionalFormattingPtrOutput {
	return o.ToAnalysisTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisTableCellConditionalFormattingOutput) ToAnalysisTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableCellConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableCellConditionalFormatting) *AnalysisTableCellConditionalFormatting {
		return &v
	}).(AnalysisTableCellConditionalFormattingPtrOutput)
}

func (o AnalysisTableCellConditionalFormattingOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTableCellConditionalFormatting) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisTableCellConditionalFormattingOutput) TextFormat() AnalysisTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v AnalysisTableCellConditionalFormatting) *AnalysisTextConditionalFormat { return v.TextFormat }).(AnalysisTextConditionalFormatPtrOutput)
}

type AnalysisTableCellConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableCellConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableCellConditionalFormatting)(nil)).Elem()
}

func (o AnalysisTableCellConditionalFormattingPtrOutput) ToAnalysisTableCellConditionalFormattingPtrOutput() AnalysisTableCellConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisTableCellConditionalFormattingPtrOutput) ToAnalysisTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableCellConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisTableCellConditionalFormattingPtrOutput) Elem() AnalysisTableCellConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisTableCellConditionalFormatting) AnalysisTableCellConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisTableCellConditionalFormatting
		return ret
	}).(AnalysisTableCellConditionalFormattingOutput)
}

func (o AnalysisTableCellConditionalFormattingPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellConditionalFormatting) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTableCellConditionalFormattingPtrOutput) TextFormat() AnalysisTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellConditionalFormatting) *AnalysisTextConditionalFormat {
		if v == nil {
			return nil
		}
		return v.TextFormat
	}).(AnalysisTextConditionalFormatPtrOutput)
}

type AnalysisTableCellImageSizingConfiguration struct {
	TableCellImageScalingConfiguration *AnalysisTableCellImageScalingConfiguration `pulumi:"tableCellImageScalingConfiguration"`
}

// AnalysisTableCellImageSizingConfigurationInput is an input type that accepts AnalysisTableCellImageSizingConfigurationArgs and AnalysisTableCellImageSizingConfigurationOutput values.
// You can construct a concrete instance of `AnalysisTableCellImageSizingConfigurationInput` via:
//
//	AnalysisTableCellImageSizingConfigurationArgs{...}
type AnalysisTableCellImageSizingConfigurationInput interface {
	pulumi.Input

	ToAnalysisTableCellImageSizingConfigurationOutput() AnalysisTableCellImageSizingConfigurationOutput
	ToAnalysisTableCellImageSizingConfigurationOutputWithContext(context.Context) AnalysisTableCellImageSizingConfigurationOutput
}

type AnalysisTableCellImageSizingConfigurationArgs struct {
	TableCellImageScalingConfiguration AnalysisTableCellImageScalingConfigurationPtrInput `pulumi:"tableCellImageScalingConfiguration"`
}

func (AnalysisTableCellImageSizingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableCellImageSizingConfiguration)(nil)).Elem()
}

func (i AnalysisTableCellImageSizingConfigurationArgs) ToAnalysisTableCellImageSizingConfigurationOutput() AnalysisTableCellImageSizingConfigurationOutput {
	return i.ToAnalysisTableCellImageSizingConfigurationOutputWithContext(context.Background())
}

func (i AnalysisTableCellImageSizingConfigurationArgs) ToAnalysisTableCellImageSizingConfigurationOutputWithContext(ctx context.Context) AnalysisTableCellImageSizingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableCellImageSizingConfigurationOutput)
}

func (i AnalysisTableCellImageSizingConfigurationArgs) ToAnalysisTableCellImageSizingConfigurationPtrOutput() AnalysisTableCellImageSizingConfigurationPtrOutput {
	return i.ToAnalysisTableCellImageSizingConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisTableCellImageSizingConfigurationArgs) ToAnalysisTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableCellImageSizingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableCellImageSizingConfigurationOutput).ToAnalysisTableCellImageSizingConfigurationPtrOutputWithContext(ctx)
}

// AnalysisTableCellImageSizingConfigurationPtrInput is an input type that accepts AnalysisTableCellImageSizingConfigurationArgs, AnalysisTableCellImageSizingConfigurationPtr and AnalysisTableCellImageSizingConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisTableCellImageSizingConfigurationPtrInput` via:
//
//	        AnalysisTableCellImageSizingConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableCellImageSizingConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisTableCellImageSizingConfigurationPtrOutput() AnalysisTableCellImageSizingConfigurationPtrOutput
	ToAnalysisTableCellImageSizingConfigurationPtrOutputWithContext(context.Context) AnalysisTableCellImageSizingConfigurationPtrOutput
}

type analysisTableCellImageSizingConfigurationPtrType AnalysisTableCellImageSizingConfigurationArgs

func AnalysisTableCellImageSizingConfigurationPtr(v *AnalysisTableCellImageSizingConfigurationArgs) AnalysisTableCellImageSizingConfigurationPtrInput {
	return (*analysisTableCellImageSizingConfigurationPtrType)(v)
}

func (*analysisTableCellImageSizingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableCellImageSizingConfiguration)(nil)).Elem()
}

func (i *analysisTableCellImageSizingConfigurationPtrType) ToAnalysisTableCellImageSizingConfigurationPtrOutput() AnalysisTableCellImageSizingConfigurationPtrOutput {
	return i.ToAnalysisTableCellImageSizingConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisTableCellImageSizingConfigurationPtrType) ToAnalysisTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableCellImageSizingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableCellImageSizingConfigurationPtrOutput)
}

type AnalysisTableCellImageSizingConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisTableCellImageSizingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableCellImageSizingConfiguration)(nil)).Elem()
}

func (o AnalysisTableCellImageSizingConfigurationOutput) ToAnalysisTableCellImageSizingConfigurationOutput() AnalysisTableCellImageSizingConfigurationOutput {
	return o
}

func (o AnalysisTableCellImageSizingConfigurationOutput) ToAnalysisTableCellImageSizingConfigurationOutputWithContext(ctx context.Context) AnalysisTableCellImageSizingConfigurationOutput {
	return o
}

func (o AnalysisTableCellImageSizingConfigurationOutput) ToAnalysisTableCellImageSizingConfigurationPtrOutput() AnalysisTableCellImageSizingConfigurationPtrOutput {
	return o.ToAnalysisTableCellImageSizingConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisTableCellImageSizingConfigurationOutput) ToAnalysisTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableCellImageSizingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableCellImageSizingConfiguration) *AnalysisTableCellImageSizingConfiguration {
		return &v
	}).(AnalysisTableCellImageSizingConfigurationPtrOutput)
}

func (o AnalysisTableCellImageSizingConfigurationOutput) TableCellImageScalingConfiguration() AnalysisTableCellImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTableCellImageSizingConfiguration) *AnalysisTableCellImageScalingConfiguration {
		return v.TableCellImageScalingConfiguration
	}).(AnalysisTableCellImageScalingConfigurationPtrOutput)
}

type AnalysisTableCellImageSizingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableCellImageSizingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableCellImageSizingConfiguration)(nil)).Elem()
}

func (o AnalysisTableCellImageSizingConfigurationPtrOutput) ToAnalysisTableCellImageSizingConfigurationPtrOutput() AnalysisTableCellImageSizingConfigurationPtrOutput {
	return o
}

func (o AnalysisTableCellImageSizingConfigurationPtrOutput) ToAnalysisTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableCellImageSizingConfigurationPtrOutput {
	return o
}

func (o AnalysisTableCellImageSizingConfigurationPtrOutput) Elem() AnalysisTableCellImageSizingConfigurationOutput {
	return o.ApplyT(func(v *AnalysisTableCellImageSizingConfiguration) AnalysisTableCellImageSizingConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisTableCellImageSizingConfiguration
		return ret
	}).(AnalysisTableCellImageSizingConfigurationOutput)
}

func (o AnalysisTableCellImageSizingConfigurationPtrOutput) TableCellImageScalingConfiguration() AnalysisTableCellImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellImageSizingConfiguration) *AnalysisTableCellImageScalingConfiguration {
		if v == nil {
			return nil
		}
		return v.TableCellImageScalingConfiguration
	}).(AnalysisTableCellImageScalingConfigurationPtrOutput)
}

type AnalysisTableCellStyle struct {
	BackgroundColor         *string                           `pulumi:"backgroundColor"`
	Border                  *AnalysisGlobalTableBorderOptions `pulumi:"border"`
	FontConfiguration       *AnalysisFontConfiguration        `pulumi:"fontConfiguration"`
	Height                  *float64                          `pulumi:"height"`
	HorizontalTextAlignment *AnalysisHorizontalTextAlignment  `pulumi:"horizontalTextAlignment"`
	TextWrap                *AnalysisTextWrap                 `pulumi:"textWrap"`
	VerticalTextAlignment   *AnalysisVerticalTextAlignment    `pulumi:"verticalTextAlignment"`
	Visibility              *AnalysisVisibility               `pulumi:"visibility"`
}

// AnalysisTableCellStyleInput is an input type that accepts AnalysisTableCellStyleArgs and AnalysisTableCellStyleOutput values.
// You can construct a concrete instance of `AnalysisTableCellStyleInput` via:
//
//	AnalysisTableCellStyleArgs{...}
type AnalysisTableCellStyleInput interface {
	pulumi.Input

	ToAnalysisTableCellStyleOutput() AnalysisTableCellStyleOutput
	ToAnalysisTableCellStyleOutputWithContext(context.Context) AnalysisTableCellStyleOutput
}

type AnalysisTableCellStyleArgs struct {
	BackgroundColor         pulumi.StringPtrInput                    `pulumi:"backgroundColor"`
	Border                  AnalysisGlobalTableBorderOptionsPtrInput `pulumi:"border"`
	FontConfiguration       AnalysisFontConfigurationPtrInput        `pulumi:"fontConfiguration"`
	Height                  pulumi.Float64PtrInput                   `pulumi:"height"`
	HorizontalTextAlignment AnalysisHorizontalTextAlignmentPtrInput  `pulumi:"horizontalTextAlignment"`
	TextWrap                AnalysisTextWrapPtrInput                 `pulumi:"textWrap"`
	VerticalTextAlignment   AnalysisVerticalTextAlignmentPtrInput    `pulumi:"verticalTextAlignment"`
	Visibility              AnalysisVisibilityPtrInput               `pulumi:"visibility"`
}

func (AnalysisTableCellStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableCellStyle)(nil)).Elem()
}

func (i AnalysisTableCellStyleArgs) ToAnalysisTableCellStyleOutput() AnalysisTableCellStyleOutput {
	return i.ToAnalysisTableCellStyleOutputWithContext(context.Background())
}

func (i AnalysisTableCellStyleArgs) ToAnalysisTableCellStyleOutputWithContext(ctx context.Context) AnalysisTableCellStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableCellStyleOutput)
}

func (i AnalysisTableCellStyleArgs) ToAnalysisTableCellStylePtrOutput() AnalysisTableCellStylePtrOutput {
	return i.ToAnalysisTableCellStylePtrOutputWithContext(context.Background())
}

func (i AnalysisTableCellStyleArgs) ToAnalysisTableCellStylePtrOutputWithContext(ctx context.Context) AnalysisTableCellStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableCellStyleOutput).ToAnalysisTableCellStylePtrOutputWithContext(ctx)
}

// AnalysisTableCellStylePtrInput is an input type that accepts AnalysisTableCellStyleArgs, AnalysisTableCellStylePtr and AnalysisTableCellStylePtrOutput values.
// You can construct a concrete instance of `AnalysisTableCellStylePtrInput` via:
//
//	        AnalysisTableCellStyleArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableCellStylePtrInput interface {
	pulumi.Input

	ToAnalysisTableCellStylePtrOutput() AnalysisTableCellStylePtrOutput
	ToAnalysisTableCellStylePtrOutputWithContext(context.Context) AnalysisTableCellStylePtrOutput
}

type analysisTableCellStylePtrType AnalysisTableCellStyleArgs

func AnalysisTableCellStylePtr(v *AnalysisTableCellStyleArgs) AnalysisTableCellStylePtrInput {
	return (*analysisTableCellStylePtrType)(v)
}

func (*analysisTableCellStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableCellStyle)(nil)).Elem()
}

func (i *analysisTableCellStylePtrType) ToAnalysisTableCellStylePtrOutput() AnalysisTableCellStylePtrOutput {
	return i.ToAnalysisTableCellStylePtrOutputWithContext(context.Background())
}

func (i *analysisTableCellStylePtrType) ToAnalysisTableCellStylePtrOutputWithContext(ctx context.Context) AnalysisTableCellStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableCellStylePtrOutput)
}

type AnalysisTableCellStyleOutput struct{ *pulumi.OutputState }

func (AnalysisTableCellStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableCellStyle)(nil)).Elem()
}

func (o AnalysisTableCellStyleOutput) ToAnalysisTableCellStyleOutput() AnalysisTableCellStyleOutput {
	return o
}

func (o AnalysisTableCellStyleOutput) ToAnalysisTableCellStyleOutputWithContext(ctx context.Context) AnalysisTableCellStyleOutput {
	return o
}

func (o AnalysisTableCellStyleOutput) ToAnalysisTableCellStylePtrOutput() AnalysisTableCellStylePtrOutput {
	return o.ToAnalysisTableCellStylePtrOutputWithContext(context.Background())
}

func (o AnalysisTableCellStyleOutput) ToAnalysisTableCellStylePtrOutputWithContext(ctx context.Context) AnalysisTableCellStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableCellStyle) *AnalysisTableCellStyle {
		return &v
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisTableCellStyleOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTableCellStyle) *string { return v.BackgroundColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisTableCellStyleOutput) Border() AnalysisGlobalTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableCellStyle) *AnalysisGlobalTableBorderOptions { return v.Border }).(AnalysisGlobalTableBorderOptionsPtrOutput)
}

func (o AnalysisTableCellStyleOutput) FontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTableCellStyle) *AnalysisFontConfiguration { return v.FontConfiguration }).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisTableCellStyleOutput) Height() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTableCellStyle) *float64 { return v.Height }).(pulumi.Float64PtrOutput)
}

func (o AnalysisTableCellStyleOutput) HorizontalTextAlignment() AnalysisHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v AnalysisTableCellStyle) *AnalysisHorizontalTextAlignment { return v.HorizontalTextAlignment }).(AnalysisHorizontalTextAlignmentPtrOutput)
}

func (o AnalysisTableCellStyleOutput) TextWrap() AnalysisTextWrapPtrOutput {
	return o.ApplyT(func(v AnalysisTableCellStyle) *AnalysisTextWrap { return v.TextWrap }).(AnalysisTextWrapPtrOutput)
}

func (o AnalysisTableCellStyleOutput) VerticalTextAlignment() AnalysisVerticalTextAlignmentPtrOutput {
	return o.ApplyT(func(v AnalysisTableCellStyle) *AnalysisVerticalTextAlignment { return v.VerticalTextAlignment }).(AnalysisVerticalTextAlignmentPtrOutput)
}

func (o AnalysisTableCellStyleOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisTableCellStyle) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisTableCellStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableCellStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableCellStyle)(nil)).Elem()
}

func (o AnalysisTableCellStylePtrOutput) ToAnalysisTableCellStylePtrOutput() AnalysisTableCellStylePtrOutput {
	return o
}

func (o AnalysisTableCellStylePtrOutput) ToAnalysisTableCellStylePtrOutputWithContext(ctx context.Context) AnalysisTableCellStylePtrOutput {
	return o
}

func (o AnalysisTableCellStylePtrOutput) Elem() AnalysisTableCellStyleOutput {
	return o.ApplyT(func(v *AnalysisTableCellStyle) AnalysisTableCellStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisTableCellStyle
		return ret
	}).(AnalysisTableCellStyleOutput)
}

func (o AnalysisTableCellStylePtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellStyle) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTableCellStylePtrOutput) Border() AnalysisGlobalTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellStyle) *AnalysisGlobalTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Border
	}).(AnalysisGlobalTableBorderOptionsPtrOutput)
}

func (o AnalysisTableCellStylePtrOutput) FontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellStyle) *AnalysisFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisTableCellStylePtrOutput) Height() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellStyle) *float64 {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisTableCellStylePtrOutput) HorizontalTextAlignment() AnalysisHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellStyle) *AnalysisHorizontalTextAlignment {
		if v == nil {
			return nil
		}
		return v.HorizontalTextAlignment
	}).(AnalysisHorizontalTextAlignmentPtrOutput)
}

func (o AnalysisTableCellStylePtrOutput) TextWrap() AnalysisTextWrapPtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellStyle) *AnalysisTextWrap {
		if v == nil {
			return nil
		}
		return v.TextWrap
	}).(AnalysisTextWrapPtrOutput)
}

func (o AnalysisTableCellStylePtrOutput) VerticalTextAlignment() AnalysisVerticalTextAlignmentPtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellStyle) *AnalysisVerticalTextAlignment {
		if v == nil {
			return nil
		}
		return v.VerticalTextAlignment
	}).(AnalysisVerticalTextAlignmentPtrOutput)
}

func (o AnalysisTableCellStylePtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisTableCellStyle) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisTableConditionalFormatting struct {
	ConditionalFormattingOptions []AnalysisTableConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// AnalysisTableConditionalFormattingInput is an input type that accepts AnalysisTableConditionalFormattingArgs and AnalysisTableConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisTableConditionalFormattingInput` via:
//
//	AnalysisTableConditionalFormattingArgs{...}
type AnalysisTableConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisTableConditionalFormattingOutput() AnalysisTableConditionalFormattingOutput
	ToAnalysisTableConditionalFormattingOutputWithContext(context.Context) AnalysisTableConditionalFormattingOutput
}

type AnalysisTableConditionalFormattingArgs struct {
	ConditionalFormattingOptions AnalysisTableConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (AnalysisTableConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableConditionalFormatting)(nil)).Elem()
}

func (i AnalysisTableConditionalFormattingArgs) ToAnalysisTableConditionalFormattingOutput() AnalysisTableConditionalFormattingOutput {
	return i.ToAnalysisTableConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisTableConditionalFormattingArgs) ToAnalysisTableConditionalFormattingOutputWithContext(ctx context.Context) AnalysisTableConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableConditionalFormattingOutput)
}

func (i AnalysisTableConditionalFormattingArgs) ToAnalysisTableConditionalFormattingPtrOutput() AnalysisTableConditionalFormattingPtrOutput {
	return i.ToAnalysisTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisTableConditionalFormattingArgs) ToAnalysisTableConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableConditionalFormattingOutput).ToAnalysisTableConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisTableConditionalFormattingPtrInput is an input type that accepts AnalysisTableConditionalFormattingArgs, AnalysisTableConditionalFormattingPtr and AnalysisTableConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisTableConditionalFormattingPtrInput` via:
//
//	        AnalysisTableConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisTableConditionalFormattingPtrOutput() AnalysisTableConditionalFormattingPtrOutput
	ToAnalysisTableConditionalFormattingPtrOutputWithContext(context.Context) AnalysisTableConditionalFormattingPtrOutput
}

type analysisTableConditionalFormattingPtrType AnalysisTableConditionalFormattingArgs

func AnalysisTableConditionalFormattingPtr(v *AnalysisTableConditionalFormattingArgs) AnalysisTableConditionalFormattingPtrInput {
	return (*analysisTableConditionalFormattingPtrType)(v)
}

func (*analysisTableConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableConditionalFormatting)(nil)).Elem()
}

func (i *analysisTableConditionalFormattingPtrType) ToAnalysisTableConditionalFormattingPtrOutput() AnalysisTableConditionalFormattingPtrOutput {
	return i.ToAnalysisTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisTableConditionalFormattingPtrType) ToAnalysisTableConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableConditionalFormattingPtrOutput)
}

type AnalysisTableConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisTableConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableConditionalFormatting)(nil)).Elem()
}

func (o AnalysisTableConditionalFormattingOutput) ToAnalysisTableConditionalFormattingOutput() AnalysisTableConditionalFormattingOutput {
	return o
}

func (o AnalysisTableConditionalFormattingOutput) ToAnalysisTableConditionalFormattingOutputWithContext(ctx context.Context) AnalysisTableConditionalFormattingOutput {
	return o
}

func (o AnalysisTableConditionalFormattingOutput) ToAnalysisTableConditionalFormattingPtrOutput() AnalysisTableConditionalFormattingPtrOutput {
	return o.ToAnalysisTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisTableConditionalFormattingOutput) ToAnalysisTableConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableConditionalFormatting) *AnalysisTableConditionalFormatting {
		return &v
	}).(AnalysisTableConditionalFormattingPtrOutput)
}

func (o AnalysisTableConditionalFormattingOutput) ConditionalFormattingOptions() AnalysisTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v AnalysisTableConditionalFormatting) []AnalysisTableConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(AnalysisTableConditionalFormattingOptionArrayOutput)
}

type AnalysisTableConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableConditionalFormatting)(nil)).Elem()
}

func (o AnalysisTableConditionalFormattingPtrOutput) ToAnalysisTableConditionalFormattingPtrOutput() AnalysisTableConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisTableConditionalFormattingPtrOutput) ToAnalysisTableConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisTableConditionalFormattingPtrOutput) Elem() AnalysisTableConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisTableConditionalFormatting) AnalysisTableConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisTableConditionalFormatting
		return ret
	}).(AnalysisTableConditionalFormattingOutput)
}

func (o AnalysisTableConditionalFormattingPtrOutput) ConditionalFormattingOptions() AnalysisTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *AnalysisTableConditionalFormatting) []AnalysisTableConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(AnalysisTableConditionalFormattingOptionArrayOutput)
}

type AnalysisTableConditionalFormattingOption struct {
	Cell *AnalysisTableCellConditionalFormatting `pulumi:"cell"`
	Row  *AnalysisTableRowConditionalFormatting  `pulumi:"row"`
}

// AnalysisTableConditionalFormattingOptionInput is an input type that accepts AnalysisTableConditionalFormattingOptionArgs and AnalysisTableConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `AnalysisTableConditionalFormattingOptionInput` via:
//
//	AnalysisTableConditionalFormattingOptionArgs{...}
type AnalysisTableConditionalFormattingOptionInput interface {
	pulumi.Input

	ToAnalysisTableConditionalFormattingOptionOutput() AnalysisTableConditionalFormattingOptionOutput
	ToAnalysisTableConditionalFormattingOptionOutputWithContext(context.Context) AnalysisTableConditionalFormattingOptionOutput
}

type AnalysisTableConditionalFormattingOptionArgs struct {
	Cell AnalysisTableCellConditionalFormattingPtrInput `pulumi:"cell"`
	Row  AnalysisTableRowConditionalFormattingPtrInput  `pulumi:"row"`
}

func (AnalysisTableConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableConditionalFormattingOption)(nil)).Elem()
}

func (i AnalysisTableConditionalFormattingOptionArgs) ToAnalysisTableConditionalFormattingOptionOutput() AnalysisTableConditionalFormattingOptionOutput {
	return i.ToAnalysisTableConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i AnalysisTableConditionalFormattingOptionArgs) ToAnalysisTableConditionalFormattingOptionOutputWithContext(ctx context.Context) AnalysisTableConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableConditionalFormattingOptionOutput)
}

// AnalysisTableConditionalFormattingOptionArrayInput is an input type that accepts AnalysisTableConditionalFormattingOptionArray and AnalysisTableConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `AnalysisTableConditionalFormattingOptionArrayInput` via:
//
//	AnalysisTableConditionalFormattingOptionArray{ AnalysisTableConditionalFormattingOptionArgs{...} }
type AnalysisTableConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToAnalysisTableConditionalFormattingOptionArrayOutput() AnalysisTableConditionalFormattingOptionArrayOutput
	ToAnalysisTableConditionalFormattingOptionArrayOutputWithContext(context.Context) AnalysisTableConditionalFormattingOptionArrayOutput
}

type AnalysisTableConditionalFormattingOptionArray []AnalysisTableConditionalFormattingOptionInput

func (AnalysisTableConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisTableConditionalFormattingOption)(nil)).Elem()
}

func (i AnalysisTableConditionalFormattingOptionArray) ToAnalysisTableConditionalFormattingOptionArrayOutput() AnalysisTableConditionalFormattingOptionArrayOutput {
	return i.ToAnalysisTableConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i AnalysisTableConditionalFormattingOptionArray) ToAnalysisTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) AnalysisTableConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableConditionalFormattingOptionArrayOutput)
}

type AnalysisTableConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (AnalysisTableConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableConditionalFormattingOption)(nil)).Elem()
}

func (o AnalysisTableConditionalFormattingOptionOutput) ToAnalysisTableConditionalFormattingOptionOutput() AnalysisTableConditionalFormattingOptionOutput {
	return o
}

func (o AnalysisTableConditionalFormattingOptionOutput) ToAnalysisTableConditionalFormattingOptionOutputWithContext(ctx context.Context) AnalysisTableConditionalFormattingOptionOutput {
	return o
}

func (o AnalysisTableConditionalFormattingOptionOutput) Cell() AnalysisTableCellConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisTableConditionalFormattingOption) *AnalysisTableCellConditionalFormatting {
		return v.Cell
	}).(AnalysisTableCellConditionalFormattingPtrOutput)
}

func (o AnalysisTableConditionalFormattingOptionOutput) Row() AnalysisTableRowConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisTableConditionalFormattingOption) *AnalysisTableRowConditionalFormatting { return v.Row }).(AnalysisTableRowConditionalFormattingPtrOutput)
}

type AnalysisTableConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisTableConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisTableConditionalFormattingOption)(nil)).Elem()
}

func (o AnalysisTableConditionalFormattingOptionArrayOutput) ToAnalysisTableConditionalFormattingOptionArrayOutput() AnalysisTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o AnalysisTableConditionalFormattingOptionArrayOutput) ToAnalysisTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) AnalysisTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o AnalysisTableConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) AnalysisTableConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisTableConditionalFormattingOption {
		return vs[0].([]AnalysisTableConditionalFormattingOption)[vs[1].(int)]
	}).(AnalysisTableConditionalFormattingOptionOutput)
}

type AnalysisTableConfiguration struct {
	FieldOptions              *AnalysisTableFieldOptions           `pulumi:"fieldOptions"`
	FieldWells                *AnalysisTableFieldWells             `pulumi:"fieldWells"`
	PaginatedReportOptions    *AnalysisTablePaginatedReportOptions `pulumi:"paginatedReportOptions"`
	SortConfiguration         *AnalysisTableSortConfiguration      `pulumi:"sortConfiguration"`
	TableInlineVisualizations []AnalysisTableInlineVisualization   `pulumi:"tableInlineVisualizations"`
	TableOptions              *AnalysisTableOptions                `pulumi:"tableOptions"`
	TotalOptions              *AnalysisTotalOptions                `pulumi:"totalOptions"`
}

// AnalysisTableConfigurationInput is an input type that accepts AnalysisTableConfigurationArgs and AnalysisTableConfigurationOutput values.
// You can construct a concrete instance of `AnalysisTableConfigurationInput` via:
//
//	AnalysisTableConfigurationArgs{...}
type AnalysisTableConfigurationInput interface {
	pulumi.Input

	ToAnalysisTableConfigurationOutput() AnalysisTableConfigurationOutput
	ToAnalysisTableConfigurationOutputWithContext(context.Context) AnalysisTableConfigurationOutput
}

type AnalysisTableConfigurationArgs struct {
	FieldOptions              AnalysisTableFieldOptionsPtrInput           `pulumi:"fieldOptions"`
	FieldWells                AnalysisTableFieldWellsPtrInput             `pulumi:"fieldWells"`
	PaginatedReportOptions    AnalysisTablePaginatedReportOptionsPtrInput `pulumi:"paginatedReportOptions"`
	SortConfiguration         AnalysisTableSortConfigurationPtrInput      `pulumi:"sortConfiguration"`
	TableInlineVisualizations AnalysisTableInlineVisualizationArrayInput  `pulumi:"tableInlineVisualizations"`
	TableOptions              AnalysisTableOptionsPtrInput                `pulumi:"tableOptions"`
	TotalOptions              AnalysisTotalOptionsPtrInput                `pulumi:"totalOptions"`
}

func (AnalysisTableConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableConfiguration)(nil)).Elem()
}

func (i AnalysisTableConfigurationArgs) ToAnalysisTableConfigurationOutput() AnalysisTableConfigurationOutput {
	return i.ToAnalysisTableConfigurationOutputWithContext(context.Background())
}

func (i AnalysisTableConfigurationArgs) ToAnalysisTableConfigurationOutputWithContext(ctx context.Context) AnalysisTableConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableConfigurationOutput)
}

func (i AnalysisTableConfigurationArgs) ToAnalysisTableConfigurationPtrOutput() AnalysisTableConfigurationPtrOutput {
	return i.ToAnalysisTableConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisTableConfigurationArgs) ToAnalysisTableConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableConfigurationOutput).ToAnalysisTableConfigurationPtrOutputWithContext(ctx)
}

// AnalysisTableConfigurationPtrInput is an input type that accepts AnalysisTableConfigurationArgs, AnalysisTableConfigurationPtr and AnalysisTableConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisTableConfigurationPtrInput` via:
//
//	        AnalysisTableConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisTableConfigurationPtrOutput() AnalysisTableConfigurationPtrOutput
	ToAnalysisTableConfigurationPtrOutputWithContext(context.Context) AnalysisTableConfigurationPtrOutput
}

type analysisTableConfigurationPtrType AnalysisTableConfigurationArgs

func AnalysisTableConfigurationPtr(v *AnalysisTableConfigurationArgs) AnalysisTableConfigurationPtrInput {
	return (*analysisTableConfigurationPtrType)(v)
}

func (*analysisTableConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableConfiguration)(nil)).Elem()
}

func (i *analysisTableConfigurationPtrType) ToAnalysisTableConfigurationPtrOutput() AnalysisTableConfigurationPtrOutput {
	return i.ToAnalysisTableConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisTableConfigurationPtrType) ToAnalysisTableConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableConfigurationPtrOutput)
}

type AnalysisTableConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisTableConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableConfiguration)(nil)).Elem()
}

func (o AnalysisTableConfigurationOutput) ToAnalysisTableConfigurationOutput() AnalysisTableConfigurationOutput {
	return o
}

func (o AnalysisTableConfigurationOutput) ToAnalysisTableConfigurationOutputWithContext(ctx context.Context) AnalysisTableConfigurationOutput {
	return o
}

func (o AnalysisTableConfigurationOutput) ToAnalysisTableConfigurationPtrOutput() AnalysisTableConfigurationPtrOutput {
	return o.ToAnalysisTableConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisTableConfigurationOutput) ToAnalysisTableConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableConfiguration) *AnalysisTableConfiguration {
		return &v
	}).(AnalysisTableConfigurationPtrOutput)
}

func (o AnalysisTableConfigurationOutput) FieldOptions() AnalysisTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableConfiguration) *AnalysisTableFieldOptions { return v.FieldOptions }).(AnalysisTableFieldOptionsPtrOutput)
}

func (o AnalysisTableConfigurationOutput) FieldWells() AnalysisTableFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisTableConfiguration) *AnalysisTableFieldWells { return v.FieldWells }).(AnalysisTableFieldWellsPtrOutput)
}

func (o AnalysisTableConfigurationOutput) PaginatedReportOptions() AnalysisTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableConfiguration) *AnalysisTablePaginatedReportOptions {
		return v.PaginatedReportOptions
	}).(AnalysisTablePaginatedReportOptionsPtrOutput)
}

func (o AnalysisTableConfigurationOutput) SortConfiguration() AnalysisTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTableConfiguration) *AnalysisTableSortConfiguration { return v.SortConfiguration }).(AnalysisTableSortConfigurationPtrOutput)
}

func (o AnalysisTableConfigurationOutput) TableInlineVisualizations() AnalysisTableInlineVisualizationArrayOutput {
	return o.ApplyT(func(v AnalysisTableConfiguration) []AnalysisTableInlineVisualization {
		return v.TableInlineVisualizations
	}).(AnalysisTableInlineVisualizationArrayOutput)
}

func (o AnalysisTableConfigurationOutput) TableOptions() AnalysisTableOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableConfiguration) *AnalysisTableOptions { return v.TableOptions }).(AnalysisTableOptionsPtrOutput)
}

func (o AnalysisTableConfigurationOutput) TotalOptions() AnalysisTotalOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableConfiguration) *AnalysisTotalOptions { return v.TotalOptions }).(AnalysisTotalOptionsPtrOutput)
}

type AnalysisTableConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableConfiguration)(nil)).Elem()
}

func (o AnalysisTableConfigurationPtrOutput) ToAnalysisTableConfigurationPtrOutput() AnalysisTableConfigurationPtrOutput {
	return o
}

func (o AnalysisTableConfigurationPtrOutput) ToAnalysisTableConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableConfigurationPtrOutput {
	return o
}

func (o AnalysisTableConfigurationPtrOutput) Elem() AnalysisTableConfigurationOutput {
	return o.ApplyT(func(v *AnalysisTableConfiguration) AnalysisTableConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisTableConfiguration
		return ret
	}).(AnalysisTableConfigurationOutput)
}

func (o AnalysisTableConfigurationPtrOutput) FieldOptions() AnalysisTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableConfiguration) *AnalysisTableFieldOptions {
		if v == nil {
			return nil
		}
		return v.FieldOptions
	}).(AnalysisTableFieldOptionsPtrOutput)
}

func (o AnalysisTableConfigurationPtrOutput) FieldWells() AnalysisTableFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableConfiguration) *AnalysisTableFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisTableFieldWellsPtrOutput)
}

func (o AnalysisTableConfigurationPtrOutput) PaginatedReportOptions() AnalysisTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableConfiguration) *AnalysisTablePaginatedReportOptions {
		if v == nil {
			return nil
		}
		return v.PaginatedReportOptions
	}).(AnalysisTablePaginatedReportOptionsPtrOutput)
}

func (o AnalysisTableConfigurationPtrOutput) SortConfiguration() AnalysisTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableConfiguration) *AnalysisTableSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisTableSortConfigurationPtrOutput)
}

func (o AnalysisTableConfigurationPtrOutput) TableInlineVisualizations() AnalysisTableInlineVisualizationArrayOutput {
	return o.ApplyT(func(v *AnalysisTableConfiguration) []AnalysisTableInlineVisualization {
		if v == nil {
			return nil
		}
		return v.TableInlineVisualizations
	}).(AnalysisTableInlineVisualizationArrayOutput)
}

func (o AnalysisTableConfigurationPtrOutput) TableOptions() AnalysisTableOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableConfiguration) *AnalysisTableOptions {
		if v == nil {
			return nil
		}
		return v.TableOptions
	}).(AnalysisTableOptionsPtrOutput)
}

func (o AnalysisTableConfigurationPtrOutput) TotalOptions() AnalysisTotalOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableConfiguration) *AnalysisTotalOptions {
		if v == nil {
			return nil
		}
		return v.TotalOptions
	}).(AnalysisTotalOptionsPtrOutput)
}

type AnalysisTableFieldCustomIconContent struct {
	Icon *AnalysisTableFieldIconSetType `pulumi:"icon"`
}

// AnalysisTableFieldCustomIconContentInput is an input type that accepts AnalysisTableFieldCustomIconContentArgs and AnalysisTableFieldCustomIconContentOutput values.
// You can construct a concrete instance of `AnalysisTableFieldCustomIconContentInput` via:
//
//	AnalysisTableFieldCustomIconContentArgs{...}
type AnalysisTableFieldCustomIconContentInput interface {
	pulumi.Input

	ToAnalysisTableFieldCustomIconContentOutput() AnalysisTableFieldCustomIconContentOutput
	ToAnalysisTableFieldCustomIconContentOutputWithContext(context.Context) AnalysisTableFieldCustomIconContentOutput
}

type AnalysisTableFieldCustomIconContentArgs struct {
	Icon AnalysisTableFieldIconSetTypePtrInput `pulumi:"icon"`
}

func (AnalysisTableFieldCustomIconContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldCustomIconContent)(nil)).Elem()
}

func (i AnalysisTableFieldCustomIconContentArgs) ToAnalysisTableFieldCustomIconContentOutput() AnalysisTableFieldCustomIconContentOutput {
	return i.ToAnalysisTableFieldCustomIconContentOutputWithContext(context.Background())
}

func (i AnalysisTableFieldCustomIconContentArgs) ToAnalysisTableFieldCustomIconContentOutputWithContext(ctx context.Context) AnalysisTableFieldCustomIconContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldCustomIconContentOutput)
}

func (i AnalysisTableFieldCustomIconContentArgs) ToAnalysisTableFieldCustomIconContentPtrOutput() AnalysisTableFieldCustomIconContentPtrOutput {
	return i.ToAnalysisTableFieldCustomIconContentPtrOutputWithContext(context.Background())
}

func (i AnalysisTableFieldCustomIconContentArgs) ToAnalysisTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) AnalysisTableFieldCustomIconContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldCustomIconContentOutput).ToAnalysisTableFieldCustomIconContentPtrOutputWithContext(ctx)
}

// AnalysisTableFieldCustomIconContentPtrInput is an input type that accepts AnalysisTableFieldCustomIconContentArgs, AnalysisTableFieldCustomIconContentPtr and AnalysisTableFieldCustomIconContentPtrOutput values.
// You can construct a concrete instance of `AnalysisTableFieldCustomIconContentPtrInput` via:
//
//	        AnalysisTableFieldCustomIconContentArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableFieldCustomIconContentPtrInput interface {
	pulumi.Input

	ToAnalysisTableFieldCustomIconContentPtrOutput() AnalysisTableFieldCustomIconContentPtrOutput
	ToAnalysisTableFieldCustomIconContentPtrOutputWithContext(context.Context) AnalysisTableFieldCustomIconContentPtrOutput
}

type analysisTableFieldCustomIconContentPtrType AnalysisTableFieldCustomIconContentArgs

func AnalysisTableFieldCustomIconContentPtr(v *AnalysisTableFieldCustomIconContentArgs) AnalysisTableFieldCustomIconContentPtrInput {
	return (*analysisTableFieldCustomIconContentPtrType)(v)
}

func (*analysisTableFieldCustomIconContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldCustomIconContent)(nil)).Elem()
}

func (i *analysisTableFieldCustomIconContentPtrType) ToAnalysisTableFieldCustomIconContentPtrOutput() AnalysisTableFieldCustomIconContentPtrOutput {
	return i.ToAnalysisTableFieldCustomIconContentPtrOutputWithContext(context.Background())
}

func (i *analysisTableFieldCustomIconContentPtrType) ToAnalysisTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) AnalysisTableFieldCustomIconContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldCustomIconContentPtrOutput)
}

type AnalysisTableFieldCustomIconContentOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldCustomIconContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldCustomIconContent)(nil)).Elem()
}

func (o AnalysisTableFieldCustomIconContentOutput) ToAnalysisTableFieldCustomIconContentOutput() AnalysisTableFieldCustomIconContentOutput {
	return o
}

func (o AnalysisTableFieldCustomIconContentOutput) ToAnalysisTableFieldCustomIconContentOutputWithContext(ctx context.Context) AnalysisTableFieldCustomIconContentOutput {
	return o
}

func (o AnalysisTableFieldCustomIconContentOutput) ToAnalysisTableFieldCustomIconContentPtrOutput() AnalysisTableFieldCustomIconContentPtrOutput {
	return o.ToAnalysisTableFieldCustomIconContentPtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldCustomIconContentOutput) ToAnalysisTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) AnalysisTableFieldCustomIconContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableFieldCustomIconContent) *AnalysisTableFieldCustomIconContent {
		return &v
	}).(AnalysisTableFieldCustomIconContentPtrOutput)
}

func (o AnalysisTableFieldCustomIconContentOutput) Icon() AnalysisTableFieldIconSetTypePtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldCustomIconContent) *AnalysisTableFieldIconSetType { return v.Icon }).(AnalysisTableFieldIconSetTypePtrOutput)
}

type AnalysisTableFieldCustomIconContentPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldCustomIconContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldCustomIconContent)(nil)).Elem()
}

func (o AnalysisTableFieldCustomIconContentPtrOutput) ToAnalysisTableFieldCustomIconContentPtrOutput() AnalysisTableFieldCustomIconContentPtrOutput {
	return o
}

func (o AnalysisTableFieldCustomIconContentPtrOutput) ToAnalysisTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) AnalysisTableFieldCustomIconContentPtrOutput {
	return o
}

func (o AnalysisTableFieldCustomIconContentPtrOutput) Elem() AnalysisTableFieldCustomIconContentOutput {
	return o.ApplyT(func(v *AnalysisTableFieldCustomIconContent) AnalysisTableFieldCustomIconContent {
		if v != nil {
			return *v
		}
		var ret AnalysisTableFieldCustomIconContent
		return ret
	}).(AnalysisTableFieldCustomIconContentOutput)
}

func (o AnalysisTableFieldCustomIconContentPtrOutput) Icon() AnalysisTableFieldIconSetTypePtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldCustomIconContent) *AnalysisTableFieldIconSetType {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(AnalysisTableFieldIconSetTypePtrOutput)
}

type AnalysisTableFieldCustomTextContent struct {
	FontConfiguration AnalysisFontConfiguration `pulumi:"fontConfiguration"`
	Value             *string                   `pulumi:"value"`
}

// AnalysisTableFieldCustomTextContentInput is an input type that accepts AnalysisTableFieldCustomTextContentArgs and AnalysisTableFieldCustomTextContentOutput values.
// You can construct a concrete instance of `AnalysisTableFieldCustomTextContentInput` via:
//
//	AnalysisTableFieldCustomTextContentArgs{...}
type AnalysisTableFieldCustomTextContentInput interface {
	pulumi.Input

	ToAnalysisTableFieldCustomTextContentOutput() AnalysisTableFieldCustomTextContentOutput
	ToAnalysisTableFieldCustomTextContentOutputWithContext(context.Context) AnalysisTableFieldCustomTextContentOutput
}

type AnalysisTableFieldCustomTextContentArgs struct {
	FontConfiguration AnalysisFontConfigurationInput `pulumi:"fontConfiguration"`
	Value             pulumi.StringPtrInput          `pulumi:"value"`
}

func (AnalysisTableFieldCustomTextContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldCustomTextContent)(nil)).Elem()
}

func (i AnalysisTableFieldCustomTextContentArgs) ToAnalysisTableFieldCustomTextContentOutput() AnalysisTableFieldCustomTextContentOutput {
	return i.ToAnalysisTableFieldCustomTextContentOutputWithContext(context.Background())
}

func (i AnalysisTableFieldCustomTextContentArgs) ToAnalysisTableFieldCustomTextContentOutputWithContext(ctx context.Context) AnalysisTableFieldCustomTextContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldCustomTextContentOutput)
}

func (i AnalysisTableFieldCustomTextContentArgs) ToAnalysisTableFieldCustomTextContentPtrOutput() AnalysisTableFieldCustomTextContentPtrOutput {
	return i.ToAnalysisTableFieldCustomTextContentPtrOutputWithContext(context.Background())
}

func (i AnalysisTableFieldCustomTextContentArgs) ToAnalysisTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) AnalysisTableFieldCustomTextContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldCustomTextContentOutput).ToAnalysisTableFieldCustomTextContentPtrOutputWithContext(ctx)
}

// AnalysisTableFieldCustomTextContentPtrInput is an input type that accepts AnalysisTableFieldCustomTextContentArgs, AnalysisTableFieldCustomTextContentPtr and AnalysisTableFieldCustomTextContentPtrOutput values.
// You can construct a concrete instance of `AnalysisTableFieldCustomTextContentPtrInput` via:
//
//	        AnalysisTableFieldCustomTextContentArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableFieldCustomTextContentPtrInput interface {
	pulumi.Input

	ToAnalysisTableFieldCustomTextContentPtrOutput() AnalysisTableFieldCustomTextContentPtrOutput
	ToAnalysisTableFieldCustomTextContentPtrOutputWithContext(context.Context) AnalysisTableFieldCustomTextContentPtrOutput
}

type analysisTableFieldCustomTextContentPtrType AnalysisTableFieldCustomTextContentArgs

func AnalysisTableFieldCustomTextContentPtr(v *AnalysisTableFieldCustomTextContentArgs) AnalysisTableFieldCustomTextContentPtrInput {
	return (*analysisTableFieldCustomTextContentPtrType)(v)
}

func (*analysisTableFieldCustomTextContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldCustomTextContent)(nil)).Elem()
}

func (i *analysisTableFieldCustomTextContentPtrType) ToAnalysisTableFieldCustomTextContentPtrOutput() AnalysisTableFieldCustomTextContentPtrOutput {
	return i.ToAnalysisTableFieldCustomTextContentPtrOutputWithContext(context.Background())
}

func (i *analysisTableFieldCustomTextContentPtrType) ToAnalysisTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) AnalysisTableFieldCustomTextContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldCustomTextContentPtrOutput)
}

type AnalysisTableFieldCustomTextContentOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldCustomTextContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldCustomTextContent)(nil)).Elem()
}

func (o AnalysisTableFieldCustomTextContentOutput) ToAnalysisTableFieldCustomTextContentOutput() AnalysisTableFieldCustomTextContentOutput {
	return o
}

func (o AnalysisTableFieldCustomTextContentOutput) ToAnalysisTableFieldCustomTextContentOutputWithContext(ctx context.Context) AnalysisTableFieldCustomTextContentOutput {
	return o
}

func (o AnalysisTableFieldCustomTextContentOutput) ToAnalysisTableFieldCustomTextContentPtrOutput() AnalysisTableFieldCustomTextContentPtrOutput {
	return o.ToAnalysisTableFieldCustomTextContentPtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldCustomTextContentOutput) ToAnalysisTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) AnalysisTableFieldCustomTextContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableFieldCustomTextContent) *AnalysisTableFieldCustomTextContent {
		return &v
	}).(AnalysisTableFieldCustomTextContentPtrOutput)
}

func (o AnalysisTableFieldCustomTextContentOutput) FontConfiguration() AnalysisFontConfigurationOutput {
	return o.ApplyT(func(v AnalysisTableFieldCustomTextContent) AnalysisFontConfiguration { return v.FontConfiguration }).(AnalysisFontConfigurationOutput)
}

func (o AnalysisTableFieldCustomTextContentOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldCustomTextContent) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AnalysisTableFieldCustomTextContentPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldCustomTextContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldCustomTextContent)(nil)).Elem()
}

func (o AnalysisTableFieldCustomTextContentPtrOutput) ToAnalysisTableFieldCustomTextContentPtrOutput() AnalysisTableFieldCustomTextContentPtrOutput {
	return o
}

func (o AnalysisTableFieldCustomTextContentPtrOutput) ToAnalysisTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) AnalysisTableFieldCustomTextContentPtrOutput {
	return o
}

func (o AnalysisTableFieldCustomTextContentPtrOutput) Elem() AnalysisTableFieldCustomTextContentOutput {
	return o.ApplyT(func(v *AnalysisTableFieldCustomTextContent) AnalysisTableFieldCustomTextContent {
		if v != nil {
			return *v
		}
		var ret AnalysisTableFieldCustomTextContent
		return ret
	}).(AnalysisTableFieldCustomTextContentOutput)
}

func (o AnalysisTableFieldCustomTextContentPtrOutput) FontConfiguration() AnalysisFontConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldCustomTextContent) *AnalysisFontConfiguration {
		if v == nil {
			return nil
		}
		return &v.FontConfiguration
	}).(AnalysisFontConfigurationPtrOutput)
}

func (o AnalysisTableFieldCustomTextContentPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldCustomTextContent) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type AnalysisTableFieldImageConfiguration struct {
	SizingOptions *AnalysisTableCellImageSizingConfiguration `pulumi:"sizingOptions"`
}

// AnalysisTableFieldImageConfigurationInput is an input type that accepts AnalysisTableFieldImageConfigurationArgs and AnalysisTableFieldImageConfigurationOutput values.
// You can construct a concrete instance of `AnalysisTableFieldImageConfigurationInput` via:
//
//	AnalysisTableFieldImageConfigurationArgs{...}
type AnalysisTableFieldImageConfigurationInput interface {
	pulumi.Input

	ToAnalysisTableFieldImageConfigurationOutput() AnalysisTableFieldImageConfigurationOutput
	ToAnalysisTableFieldImageConfigurationOutputWithContext(context.Context) AnalysisTableFieldImageConfigurationOutput
}

type AnalysisTableFieldImageConfigurationArgs struct {
	SizingOptions AnalysisTableCellImageSizingConfigurationPtrInput `pulumi:"sizingOptions"`
}

func (AnalysisTableFieldImageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldImageConfiguration)(nil)).Elem()
}

func (i AnalysisTableFieldImageConfigurationArgs) ToAnalysisTableFieldImageConfigurationOutput() AnalysisTableFieldImageConfigurationOutput {
	return i.ToAnalysisTableFieldImageConfigurationOutputWithContext(context.Background())
}

func (i AnalysisTableFieldImageConfigurationArgs) ToAnalysisTableFieldImageConfigurationOutputWithContext(ctx context.Context) AnalysisTableFieldImageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldImageConfigurationOutput)
}

func (i AnalysisTableFieldImageConfigurationArgs) ToAnalysisTableFieldImageConfigurationPtrOutput() AnalysisTableFieldImageConfigurationPtrOutput {
	return i.ToAnalysisTableFieldImageConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisTableFieldImageConfigurationArgs) ToAnalysisTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldImageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldImageConfigurationOutput).ToAnalysisTableFieldImageConfigurationPtrOutputWithContext(ctx)
}

// AnalysisTableFieldImageConfigurationPtrInput is an input type that accepts AnalysisTableFieldImageConfigurationArgs, AnalysisTableFieldImageConfigurationPtr and AnalysisTableFieldImageConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisTableFieldImageConfigurationPtrInput` via:
//
//	        AnalysisTableFieldImageConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableFieldImageConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisTableFieldImageConfigurationPtrOutput() AnalysisTableFieldImageConfigurationPtrOutput
	ToAnalysisTableFieldImageConfigurationPtrOutputWithContext(context.Context) AnalysisTableFieldImageConfigurationPtrOutput
}

type analysisTableFieldImageConfigurationPtrType AnalysisTableFieldImageConfigurationArgs

func AnalysisTableFieldImageConfigurationPtr(v *AnalysisTableFieldImageConfigurationArgs) AnalysisTableFieldImageConfigurationPtrInput {
	return (*analysisTableFieldImageConfigurationPtrType)(v)
}

func (*analysisTableFieldImageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldImageConfiguration)(nil)).Elem()
}

func (i *analysisTableFieldImageConfigurationPtrType) ToAnalysisTableFieldImageConfigurationPtrOutput() AnalysisTableFieldImageConfigurationPtrOutput {
	return i.ToAnalysisTableFieldImageConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisTableFieldImageConfigurationPtrType) ToAnalysisTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldImageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldImageConfigurationPtrOutput)
}

type AnalysisTableFieldImageConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldImageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldImageConfiguration)(nil)).Elem()
}

func (o AnalysisTableFieldImageConfigurationOutput) ToAnalysisTableFieldImageConfigurationOutput() AnalysisTableFieldImageConfigurationOutput {
	return o
}

func (o AnalysisTableFieldImageConfigurationOutput) ToAnalysisTableFieldImageConfigurationOutputWithContext(ctx context.Context) AnalysisTableFieldImageConfigurationOutput {
	return o
}

func (o AnalysisTableFieldImageConfigurationOutput) ToAnalysisTableFieldImageConfigurationPtrOutput() AnalysisTableFieldImageConfigurationPtrOutput {
	return o.ToAnalysisTableFieldImageConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldImageConfigurationOutput) ToAnalysisTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldImageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableFieldImageConfiguration) *AnalysisTableFieldImageConfiguration {
		return &v
	}).(AnalysisTableFieldImageConfigurationPtrOutput)
}

func (o AnalysisTableFieldImageConfigurationOutput) SizingOptions() AnalysisTableCellImageSizingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldImageConfiguration) *AnalysisTableCellImageSizingConfiguration {
		return v.SizingOptions
	}).(AnalysisTableCellImageSizingConfigurationPtrOutput)
}

type AnalysisTableFieldImageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldImageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldImageConfiguration)(nil)).Elem()
}

func (o AnalysisTableFieldImageConfigurationPtrOutput) ToAnalysisTableFieldImageConfigurationPtrOutput() AnalysisTableFieldImageConfigurationPtrOutput {
	return o
}

func (o AnalysisTableFieldImageConfigurationPtrOutput) ToAnalysisTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldImageConfigurationPtrOutput {
	return o
}

func (o AnalysisTableFieldImageConfigurationPtrOutput) Elem() AnalysisTableFieldImageConfigurationOutput {
	return o.ApplyT(func(v *AnalysisTableFieldImageConfiguration) AnalysisTableFieldImageConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisTableFieldImageConfiguration
		return ret
	}).(AnalysisTableFieldImageConfigurationOutput)
}

func (o AnalysisTableFieldImageConfigurationPtrOutput) SizingOptions() AnalysisTableCellImageSizingConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldImageConfiguration) *AnalysisTableCellImageSizingConfiguration {
		if v == nil {
			return nil
		}
		return v.SizingOptions
	}).(AnalysisTableCellImageSizingConfigurationPtrOutput)
}

type AnalysisTableFieldLinkConfiguration struct {
	Content AnalysisTableFieldLinkContentConfiguration `pulumi:"content"`
	Target  AnalysisURLTargetConfiguration             `pulumi:"target"`
}

// AnalysisTableFieldLinkConfigurationInput is an input type that accepts AnalysisTableFieldLinkConfigurationArgs and AnalysisTableFieldLinkConfigurationOutput values.
// You can construct a concrete instance of `AnalysisTableFieldLinkConfigurationInput` via:
//
//	AnalysisTableFieldLinkConfigurationArgs{...}
type AnalysisTableFieldLinkConfigurationInput interface {
	pulumi.Input

	ToAnalysisTableFieldLinkConfigurationOutput() AnalysisTableFieldLinkConfigurationOutput
	ToAnalysisTableFieldLinkConfigurationOutputWithContext(context.Context) AnalysisTableFieldLinkConfigurationOutput
}

type AnalysisTableFieldLinkConfigurationArgs struct {
	Content AnalysisTableFieldLinkContentConfigurationInput `pulumi:"content"`
	Target  AnalysisURLTargetConfigurationInput             `pulumi:"target"`
}

func (AnalysisTableFieldLinkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldLinkConfiguration)(nil)).Elem()
}

func (i AnalysisTableFieldLinkConfigurationArgs) ToAnalysisTableFieldLinkConfigurationOutput() AnalysisTableFieldLinkConfigurationOutput {
	return i.ToAnalysisTableFieldLinkConfigurationOutputWithContext(context.Background())
}

func (i AnalysisTableFieldLinkConfigurationArgs) ToAnalysisTableFieldLinkConfigurationOutputWithContext(ctx context.Context) AnalysisTableFieldLinkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldLinkConfigurationOutput)
}

func (i AnalysisTableFieldLinkConfigurationArgs) ToAnalysisTableFieldLinkConfigurationPtrOutput() AnalysisTableFieldLinkConfigurationPtrOutput {
	return i.ToAnalysisTableFieldLinkConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisTableFieldLinkConfigurationArgs) ToAnalysisTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldLinkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldLinkConfigurationOutput).ToAnalysisTableFieldLinkConfigurationPtrOutputWithContext(ctx)
}

// AnalysisTableFieldLinkConfigurationPtrInput is an input type that accepts AnalysisTableFieldLinkConfigurationArgs, AnalysisTableFieldLinkConfigurationPtr and AnalysisTableFieldLinkConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisTableFieldLinkConfigurationPtrInput` via:
//
//	        AnalysisTableFieldLinkConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableFieldLinkConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisTableFieldLinkConfigurationPtrOutput() AnalysisTableFieldLinkConfigurationPtrOutput
	ToAnalysisTableFieldLinkConfigurationPtrOutputWithContext(context.Context) AnalysisTableFieldLinkConfigurationPtrOutput
}

type analysisTableFieldLinkConfigurationPtrType AnalysisTableFieldLinkConfigurationArgs

func AnalysisTableFieldLinkConfigurationPtr(v *AnalysisTableFieldLinkConfigurationArgs) AnalysisTableFieldLinkConfigurationPtrInput {
	return (*analysisTableFieldLinkConfigurationPtrType)(v)
}

func (*analysisTableFieldLinkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldLinkConfiguration)(nil)).Elem()
}

func (i *analysisTableFieldLinkConfigurationPtrType) ToAnalysisTableFieldLinkConfigurationPtrOutput() AnalysisTableFieldLinkConfigurationPtrOutput {
	return i.ToAnalysisTableFieldLinkConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisTableFieldLinkConfigurationPtrType) ToAnalysisTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldLinkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldLinkConfigurationPtrOutput)
}

type AnalysisTableFieldLinkConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldLinkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldLinkConfiguration)(nil)).Elem()
}

func (o AnalysisTableFieldLinkConfigurationOutput) ToAnalysisTableFieldLinkConfigurationOutput() AnalysisTableFieldLinkConfigurationOutput {
	return o
}

func (o AnalysisTableFieldLinkConfigurationOutput) ToAnalysisTableFieldLinkConfigurationOutputWithContext(ctx context.Context) AnalysisTableFieldLinkConfigurationOutput {
	return o
}

func (o AnalysisTableFieldLinkConfigurationOutput) ToAnalysisTableFieldLinkConfigurationPtrOutput() AnalysisTableFieldLinkConfigurationPtrOutput {
	return o.ToAnalysisTableFieldLinkConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldLinkConfigurationOutput) ToAnalysisTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldLinkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableFieldLinkConfiguration) *AnalysisTableFieldLinkConfiguration {
		return &v
	}).(AnalysisTableFieldLinkConfigurationPtrOutput)
}

func (o AnalysisTableFieldLinkConfigurationOutput) Content() AnalysisTableFieldLinkContentConfigurationOutput {
	return o.ApplyT(func(v AnalysisTableFieldLinkConfiguration) AnalysisTableFieldLinkContentConfiguration {
		return v.Content
	}).(AnalysisTableFieldLinkContentConfigurationOutput)
}

func (o AnalysisTableFieldLinkConfigurationOutput) Target() AnalysisURLTargetConfigurationOutput {
	return o.ApplyT(func(v AnalysisTableFieldLinkConfiguration) AnalysisURLTargetConfiguration { return v.Target }).(AnalysisURLTargetConfigurationOutput)
}

type AnalysisTableFieldLinkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldLinkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldLinkConfiguration)(nil)).Elem()
}

func (o AnalysisTableFieldLinkConfigurationPtrOutput) ToAnalysisTableFieldLinkConfigurationPtrOutput() AnalysisTableFieldLinkConfigurationPtrOutput {
	return o
}

func (o AnalysisTableFieldLinkConfigurationPtrOutput) ToAnalysisTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldLinkConfigurationPtrOutput {
	return o
}

func (o AnalysisTableFieldLinkConfigurationPtrOutput) Elem() AnalysisTableFieldLinkConfigurationOutput {
	return o.ApplyT(func(v *AnalysisTableFieldLinkConfiguration) AnalysisTableFieldLinkConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisTableFieldLinkConfiguration
		return ret
	}).(AnalysisTableFieldLinkConfigurationOutput)
}

func (o AnalysisTableFieldLinkConfigurationPtrOutput) Content() AnalysisTableFieldLinkContentConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldLinkConfiguration) *AnalysisTableFieldLinkContentConfiguration {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(AnalysisTableFieldLinkContentConfigurationPtrOutput)
}

func (o AnalysisTableFieldLinkConfigurationPtrOutput) Target() AnalysisURLTargetConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldLinkConfiguration) *AnalysisURLTargetConfiguration {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(AnalysisURLTargetConfigurationPtrOutput)
}

type AnalysisTableFieldLinkContentConfiguration struct {
	CustomIconContent *AnalysisTableFieldCustomIconContent `pulumi:"customIconContent"`
	CustomTextContent *AnalysisTableFieldCustomTextContent `pulumi:"customTextContent"`
}

// AnalysisTableFieldLinkContentConfigurationInput is an input type that accepts AnalysisTableFieldLinkContentConfigurationArgs and AnalysisTableFieldLinkContentConfigurationOutput values.
// You can construct a concrete instance of `AnalysisTableFieldLinkContentConfigurationInput` via:
//
//	AnalysisTableFieldLinkContentConfigurationArgs{...}
type AnalysisTableFieldLinkContentConfigurationInput interface {
	pulumi.Input

	ToAnalysisTableFieldLinkContentConfigurationOutput() AnalysisTableFieldLinkContentConfigurationOutput
	ToAnalysisTableFieldLinkContentConfigurationOutputWithContext(context.Context) AnalysisTableFieldLinkContentConfigurationOutput
}

type AnalysisTableFieldLinkContentConfigurationArgs struct {
	CustomIconContent AnalysisTableFieldCustomIconContentPtrInput `pulumi:"customIconContent"`
	CustomTextContent AnalysisTableFieldCustomTextContentPtrInput `pulumi:"customTextContent"`
}

func (AnalysisTableFieldLinkContentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (i AnalysisTableFieldLinkContentConfigurationArgs) ToAnalysisTableFieldLinkContentConfigurationOutput() AnalysisTableFieldLinkContentConfigurationOutput {
	return i.ToAnalysisTableFieldLinkContentConfigurationOutputWithContext(context.Background())
}

func (i AnalysisTableFieldLinkContentConfigurationArgs) ToAnalysisTableFieldLinkContentConfigurationOutputWithContext(ctx context.Context) AnalysisTableFieldLinkContentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldLinkContentConfigurationOutput)
}

func (i AnalysisTableFieldLinkContentConfigurationArgs) ToAnalysisTableFieldLinkContentConfigurationPtrOutput() AnalysisTableFieldLinkContentConfigurationPtrOutput {
	return i.ToAnalysisTableFieldLinkContentConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisTableFieldLinkContentConfigurationArgs) ToAnalysisTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldLinkContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldLinkContentConfigurationOutput).ToAnalysisTableFieldLinkContentConfigurationPtrOutputWithContext(ctx)
}

// AnalysisTableFieldLinkContentConfigurationPtrInput is an input type that accepts AnalysisTableFieldLinkContentConfigurationArgs, AnalysisTableFieldLinkContentConfigurationPtr and AnalysisTableFieldLinkContentConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisTableFieldLinkContentConfigurationPtrInput` via:
//
//	        AnalysisTableFieldLinkContentConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableFieldLinkContentConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisTableFieldLinkContentConfigurationPtrOutput() AnalysisTableFieldLinkContentConfigurationPtrOutput
	ToAnalysisTableFieldLinkContentConfigurationPtrOutputWithContext(context.Context) AnalysisTableFieldLinkContentConfigurationPtrOutput
}

type analysisTableFieldLinkContentConfigurationPtrType AnalysisTableFieldLinkContentConfigurationArgs

func AnalysisTableFieldLinkContentConfigurationPtr(v *AnalysisTableFieldLinkContentConfigurationArgs) AnalysisTableFieldLinkContentConfigurationPtrInput {
	return (*analysisTableFieldLinkContentConfigurationPtrType)(v)
}

func (*analysisTableFieldLinkContentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (i *analysisTableFieldLinkContentConfigurationPtrType) ToAnalysisTableFieldLinkContentConfigurationPtrOutput() AnalysisTableFieldLinkContentConfigurationPtrOutput {
	return i.ToAnalysisTableFieldLinkContentConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisTableFieldLinkContentConfigurationPtrType) ToAnalysisTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldLinkContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldLinkContentConfigurationPtrOutput)
}

type AnalysisTableFieldLinkContentConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldLinkContentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (o AnalysisTableFieldLinkContentConfigurationOutput) ToAnalysisTableFieldLinkContentConfigurationOutput() AnalysisTableFieldLinkContentConfigurationOutput {
	return o
}

func (o AnalysisTableFieldLinkContentConfigurationOutput) ToAnalysisTableFieldLinkContentConfigurationOutputWithContext(ctx context.Context) AnalysisTableFieldLinkContentConfigurationOutput {
	return o
}

func (o AnalysisTableFieldLinkContentConfigurationOutput) ToAnalysisTableFieldLinkContentConfigurationPtrOutput() AnalysisTableFieldLinkContentConfigurationPtrOutput {
	return o.ToAnalysisTableFieldLinkContentConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldLinkContentConfigurationOutput) ToAnalysisTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldLinkContentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableFieldLinkContentConfiguration) *AnalysisTableFieldLinkContentConfiguration {
		return &v
	}).(AnalysisTableFieldLinkContentConfigurationPtrOutput)
}

func (o AnalysisTableFieldLinkContentConfigurationOutput) CustomIconContent() AnalysisTableFieldCustomIconContentPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldLinkContentConfiguration) *AnalysisTableFieldCustomIconContent {
		return v.CustomIconContent
	}).(AnalysisTableFieldCustomIconContentPtrOutput)
}

func (o AnalysisTableFieldLinkContentConfigurationOutput) CustomTextContent() AnalysisTableFieldCustomTextContentPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldLinkContentConfiguration) *AnalysisTableFieldCustomTextContent {
		return v.CustomTextContent
	}).(AnalysisTableFieldCustomTextContentPtrOutput)
}

type AnalysisTableFieldLinkContentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldLinkContentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (o AnalysisTableFieldLinkContentConfigurationPtrOutput) ToAnalysisTableFieldLinkContentConfigurationPtrOutput() AnalysisTableFieldLinkContentConfigurationPtrOutput {
	return o
}

func (o AnalysisTableFieldLinkContentConfigurationPtrOutput) ToAnalysisTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldLinkContentConfigurationPtrOutput {
	return o
}

func (o AnalysisTableFieldLinkContentConfigurationPtrOutput) Elem() AnalysisTableFieldLinkContentConfigurationOutput {
	return o.ApplyT(func(v *AnalysisTableFieldLinkContentConfiguration) AnalysisTableFieldLinkContentConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisTableFieldLinkContentConfiguration
		return ret
	}).(AnalysisTableFieldLinkContentConfigurationOutput)
}

func (o AnalysisTableFieldLinkContentConfigurationPtrOutput) CustomIconContent() AnalysisTableFieldCustomIconContentPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldLinkContentConfiguration) *AnalysisTableFieldCustomIconContent {
		if v == nil {
			return nil
		}
		return v.CustomIconContent
	}).(AnalysisTableFieldCustomIconContentPtrOutput)
}

func (o AnalysisTableFieldLinkContentConfigurationPtrOutput) CustomTextContent() AnalysisTableFieldCustomTextContentPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldLinkContentConfiguration) *AnalysisTableFieldCustomTextContent {
		if v == nil {
			return nil
		}
		return v.CustomTextContent
	}).(AnalysisTableFieldCustomTextContentPtrOutput)
}

type AnalysisTableFieldOption struct {
	CustomLabel *string                             `pulumi:"customLabel"`
	FieldId     string                              `pulumi:"fieldId"`
	URLStyling  *AnalysisTableFieldURLConfiguration `pulumi:"uRLStyling"`
	Visibility  *AnalysisVisibility                 `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width *string `pulumi:"width"`
}

// AnalysisTableFieldOptionInput is an input type that accepts AnalysisTableFieldOptionArgs and AnalysisTableFieldOptionOutput values.
// You can construct a concrete instance of `AnalysisTableFieldOptionInput` via:
//
//	AnalysisTableFieldOptionArgs{...}
type AnalysisTableFieldOptionInput interface {
	pulumi.Input

	ToAnalysisTableFieldOptionOutput() AnalysisTableFieldOptionOutput
	ToAnalysisTableFieldOptionOutputWithContext(context.Context) AnalysisTableFieldOptionOutput
}

type AnalysisTableFieldOptionArgs struct {
	CustomLabel pulumi.StringPtrInput                      `pulumi:"customLabel"`
	FieldId     pulumi.StringInput                         `pulumi:"fieldId"`
	URLStyling  AnalysisTableFieldURLConfigurationPtrInput `pulumi:"uRLStyling"`
	Visibility  AnalysisVisibilityPtrInput                 `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringPtrInput `pulumi:"width"`
}

func (AnalysisTableFieldOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldOption)(nil)).Elem()
}

func (i AnalysisTableFieldOptionArgs) ToAnalysisTableFieldOptionOutput() AnalysisTableFieldOptionOutput {
	return i.ToAnalysisTableFieldOptionOutputWithContext(context.Background())
}

func (i AnalysisTableFieldOptionArgs) ToAnalysisTableFieldOptionOutputWithContext(ctx context.Context) AnalysisTableFieldOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldOptionOutput)
}

// AnalysisTableFieldOptionArrayInput is an input type that accepts AnalysisTableFieldOptionArray and AnalysisTableFieldOptionArrayOutput values.
// You can construct a concrete instance of `AnalysisTableFieldOptionArrayInput` via:
//
//	AnalysisTableFieldOptionArray{ AnalysisTableFieldOptionArgs{...} }
type AnalysisTableFieldOptionArrayInput interface {
	pulumi.Input

	ToAnalysisTableFieldOptionArrayOutput() AnalysisTableFieldOptionArrayOutput
	ToAnalysisTableFieldOptionArrayOutputWithContext(context.Context) AnalysisTableFieldOptionArrayOutput
}

type AnalysisTableFieldOptionArray []AnalysisTableFieldOptionInput

func (AnalysisTableFieldOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisTableFieldOption)(nil)).Elem()
}

func (i AnalysisTableFieldOptionArray) ToAnalysisTableFieldOptionArrayOutput() AnalysisTableFieldOptionArrayOutput {
	return i.ToAnalysisTableFieldOptionArrayOutputWithContext(context.Background())
}

func (i AnalysisTableFieldOptionArray) ToAnalysisTableFieldOptionArrayOutputWithContext(ctx context.Context) AnalysisTableFieldOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldOptionArrayOutput)
}

type AnalysisTableFieldOptionOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldOption)(nil)).Elem()
}

func (o AnalysisTableFieldOptionOutput) ToAnalysisTableFieldOptionOutput() AnalysisTableFieldOptionOutput {
	return o
}

func (o AnalysisTableFieldOptionOutput) ToAnalysisTableFieldOptionOutputWithContext(ctx context.Context) AnalysisTableFieldOptionOutput {
	return o
}

func (o AnalysisTableFieldOptionOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldOption) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o AnalysisTableFieldOptionOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTableFieldOption) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisTableFieldOptionOutput) URLStyling() AnalysisTableFieldURLConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldOption) *AnalysisTableFieldURLConfiguration { return v.URLStyling }).(AnalysisTableFieldURLConfigurationPtrOutput)
}

func (o AnalysisTableFieldOptionOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldOption) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o AnalysisTableFieldOptionOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldOption) *string { return v.Width }).(pulumi.StringPtrOutput)
}

type AnalysisTableFieldOptionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisTableFieldOption)(nil)).Elem()
}

func (o AnalysisTableFieldOptionArrayOutput) ToAnalysisTableFieldOptionArrayOutput() AnalysisTableFieldOptionArrayOutput {
	return o
}

func (o AnalysisTableFieldOptionArrayOutput) ToAnalysisTableFieldOptionArrayOutputWithContext(ctx context.Context) AnalysisTableFieldOptionArrayOutput {
	return o
}

func (o AnalysisTableFieldOptionArrayOutput) Index(i pulumi.IntInput) AnalysisTableFieldOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisTableFieldOption {
		return vs[0].([]AnalysisTableFieldOption)[vs[1].(int)]
	}).(AnalysisTableFieldOptionOutput)
}

type AnalysisTableFieldOptions struct {
	Order                []string                   `pulumi:"order"`
	SelectedFieldOptions []AnalysisTableFieldOption `pulumi:"selectedFieldOptions"`
}

// AnalysisTableFieldOptionsInput is an input type that accepts AnalysisTableFieldOptionsArgs and AnalysisTableFieldOptionsOutput values.
// You can construct a concrete instance of `AnalysisTableFieldOptionsInput` via:
//
//	AnalysisTableFieldOptionsArgs{...}
type AnalysisTableFieldOptionsInput interface {
	pulumi.Input

	ToAnalysisTableFieldOptionsOutput() AnalysisTableFieldOptionsOutput
	ToAnalysisTableFieldOptionsOutputWithContext(context.Context) AnalysisTableFieldOptionsOutput
}

type AnalysisTableFieldOptionsArgs struct {
	Order                pulumi.StringArrayInput            `pulumi:"order"`
	SelectedFieldOptions AnalysisTableFieldOptionArrayInput `pulumi:"selectedFieldOptions"`
}

func (AnalysisTableFieldOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldOptions)(nil)).Elem()
}

func (i AnalysisTableFieldOptionsArgs) ToAnalysisTableFieldOptionsOutput() AnalysisTableFieldOptionsOutput {
	return i.ToAnalysisTableFieldOptionsOutputWithContext(context.Background())
}

func (i AnalysisTableFieldOptionsArgs) ToAnalysisTableFieldOptionsOutputWithContext(ctx context.Context) AnalysisTableFieldOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldOptionsOutput)
}

func (i AnalysisTableFieldOptionsArgs) ToAnalysisTableFieldOptionsPtrOutput() AnalysisTableFieldOptionsPtrOutput {
	return i.ToAnalysisTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTableFieldOptionsArgs) ToAnalysisTableFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldOptionsOutput).ToAnalysisTableFieldOptionsPtrOutputWithContext(ctx)
}

// AnalysisTableFieldOptionsPtrInput is an input type that accepts AnalysisTableFieldOptionsArgs, AnalysisTableFieldOptionsPtr and AnalysisTableFieldOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTableFieldOptionsPtrInput` via:
//
//	        AnalysisTableFieldOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableFieldOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTableFieldOptionsPtrOutput() AnalysisTableFieldOptionsPtrOutput
	ToAnalysisTableFieldOptionsPtrOutputWithContext(context.Context) AnalysisTableFieldOptionsPtrOutput
}

type analysisTableFieldOptionsPtrType AnalysisTableFieldOptionsArgs

func AnalysisTableFieldOptionsPtr(v *AnalysisTableFieldOptionsArgs) AnalysisTableFieldOptionsPtrInput {
	return (*analysisTableFieldOptionsPtrType)(v)
}

func (*analysisTableFieldOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldOptions)(nil)).Elem()
}

func (i *analysisTableFieldOptionsPtrType) ToAnalysisTableFieldOptionsPtrOutput() AnalysisTableFieldOptionsPtrOutput {
	return i.ToAnalysisTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTableFieldOptionsPtrType) ToAnalysisTableFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldOptionsPtrOutput)
}

type AnalysisTableFieldOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldOptions)(nil)).Elem()
}

func (o AnalysisTableFieldOptionsOutput) ToAnalysisTableFieldOptionsOutput() AnalysisTableFieldOptionsOutput {
	return o
}

func (o AnalysisTableFieldOptionsOutput) ToAnalysisTableFieldOptionsOutputWithContext(ctx context.Context) AnalysisTableFieldOptionsOutput {
	return o
}

func (o AnalysisTableFieldOptionsOutput) ToAnalysisTableFieldOptionsPtrOutput() AnalysisTableFieldOptionsPtrOutput {
	return o.ToAnalysisTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldOptionsOutput) ToAnalysisTableFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableFieldOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableFieldOptions) *AnalysisTableFieldOptions {
		return &v
	}).(AnalysisTableFieldOptionsPtrOutput)
}

func (o AnalysisTableFieldOptionsOutput) Order() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalysisTableFieldOptions) []string { return v.Order }).(pulumi.StringArrayOutput)
}

func (o AnalysisTableFieldOptionsOutput) SelectedFieldOptions() AnalysisTableFieldOptionArrayOutput {
	return o.ApplyT(func(v AnalysisTableFieldOptions) []AnalysisTableFieldOption { return v.SelectedFieldOptions }).(AnalysisTableFieldOptionArrayOutput)
}

type AnalysisTableFieldOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldOptions)(nil)).Elem()
}

func (o AnalysisTableFieldOptionsPtrOutput) ToAnalysisTableFieldOptionsPtrOutput() AnalysisTableFieldOptionsPtrOutput {
	return o
}

func (o AnalysisTableFieldOptionsPtrOutput) ToAnalysisTableFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableFieldOptionsPtrOutput {
	return o
}

func (o AnalysisTableFieldOptionsPtrOutput) Elem() AnalysisTableFieldOptionsOutput {
	return o.ApplyT(func(v *AnalysisTableFieldOptions) AnalysisTableFieldOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTableFieldOptions
		return ret
	}).(AnalysisTableFieldOptionsOutput)
}

func (o AnalysisTableFieldOptionsPtrOutput) Order() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalysisTableFieldOptions) []string {
		if v == nil {
			return nil
		}
		return v.Order
	}).(pulumi.StringArrayOutput)
}

func (o AnalysisTableFieldOptionsPtrOutput) SelectedFieldOptions() AnalysisTableFieldOptionArrayOutput {
	return o.ApplyT(func(v *AnalysisTableFieldOptions) []AnalysisTableFieldOption {
		if v == nil {
			return nil
		}
		return v.SelectedFieldOptions
	}).(AnalysisTableFieldOptionArrayOutput)
}

type AnalysisTableFieldURLConfiguration struct {
	ImageConfiguration *AnalysisTableFieldImageConfiguration `pulumi:"imageConfiguration"`
	LinkConfiguration  *AnalysisTableFieldLinkConfiguration  `pulumi:"linkConfiguration"`
}

// AnalysisTableFieldURLConfigurationInput is an input type that accepts AnalysisTableFieldURLConfigurationArgs and AnalysisTableFieldURLConfigurationOutput values.
// You can construct a concrete instance of `AnalysisTableFieldURLConfigurationInput` via:
//
//	AnalysisTableFieldURLConfigurationArgs{...}
type AnalysisTableFieldURLConfigurationInput interface {
	pulumi.Input

	ToAnalysisTableFieldURLConfigurationOutput() AnalysisTableFieldURLConfigurationOutput
	ToAnalysisTableFieldURLConfigurationOutputWithContext(context.Context) AnalysisTableFieldURLConfigurationOutput
}

type AnalysisTableFieldURLConfigurationArgs struct {
	ImageConfiguration AnalysisTableFieldImageConfigurationPtrInput `pulumi:"imageConfiguration"`
	LinkConfiguration  AnalysisTableFieldLinkConfigurationPtrInput  `pulumi:"linkConfiguration"`
}

func (AnalysisTableFieldURLConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldURLConfiguration)(nil)).Elem()
}

func (i AnalysisTableFieldURLConfigurationArgs) ToAnalysisTableFieldURLConfigurationOutput() AnalysisTableFieldURLConfigurationOutput {
	return i.ToAnalysisTableFieldURLConfigurationOutputWithContext(context.Background())
}

func (i AnalysisTableFieldURLConfigurationArgs) ToAnalysisTableFieldURLConfigurationOutputWithContext(ctx context.Context) AnalysisTableFieldURLConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldURLConfigurationOutput)
}

func (i AnalysisTableFieldURLConfigurationArgs) ToAnalysisTableFieldURLConfigurationPtrOutput() AnalysisTableFieldURLConfigurationPtrOutput {
	return i.ToAnalysisTableFieldURLConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisTableFieldURLConfigurationArgs) ToAnalysisTableFieldURLConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldURLConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldURLConfigurationOutput).ToAnalysisTableFieldURLConfigurationPtrOutputWithContext(ctx)
}

// AnalysisTableFieldURLConfigurationPtrInput is an input type that accepts AnalysisTableFieldURLConfigurationArgs, AnalysisTableFieldURLConfigurationPtr and AnalysisTableFieldURLConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisTableFieldURLConfigurationPtrInput` via:
//
//	        AnalysisTableFieldURLConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableFieldURLConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisTableFieldURLConfigurationPtrOutput() AnalysisTableFieldURLConfigurationPtrOutput
	ToAnalysisTableFieldURLConfigurationPtrOutputWithContext(context.Context) AnalysisTableFieldURLConfigurationPtrOutput
}

type analysisTableFieldURLConfigurationPtrType AnalysisTableFieldURLConfigurationArgs

func AnalysisTableFieldURLConfigurationPtr(v *AnalysisTableFieldURLConfigurationArgs) AnalysisTableFieldURLConfigurationPtrInput {
	return (*analysisTableFieldURLConfigurationPtrType)(v)
}

func (*analysisTableFieldURLConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldURLConfiguration)(nil)).Elem()
}

func (i *analysisTableFieldURLConfigurationPtrType) ToAnalysisTableFieldURLConfigurationPtrOutput() AnalysisTableFieldURLConfigurationPtrOutput {
	return i.ToAnalysisTableFieldURLConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisTableFieldURLConfigurationPtrType) ToAnalysisTableFieldURLConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldURLConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldURLConfigurationPtrOutput)
}

type AnalysisTableFieldURLConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldURLConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldURLConfiguration)(nil)).Elem()
}

func (o AnalysisTableFieldURLConfigurationOutput) ToAnalysisTableFieldURLConfigurationOutput() AnalysisTableFieldURLConfigurationOutput {
	return o
}

func (o AnalysisTableFieldURLConfigurationOutput) ToAnalysisTableFieldURLConfigurationOutputWithContext(ctx context.Context) AnalysisTableFieldURLConfigurationOutput {
	return o
}

func (o AnalysisTableFieldURLConfigurationOutput) ToAnalysisTableFieldURLConfigurationPtrOutput() AnalysisTableFieldURLConfigurationPtrOutput {
	return o.ToAnalysisTableFieldURLConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldURLConfigurationOutput) ToAnalysisTableFieldURLConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldURLConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableFieldURLConfiguration) *AnalysisTableFieldURLConfiguration {
		return &v
	}).(AnalysisTableFieldURLConfigurationPtrOutput)
}

func (o AnalysisTableFieldURLConfigurationOutput) ImageConfiguration() AnalysisTableFieldImageConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldURLConfiguration) *AnalysisTableFieldImageConfiguration {
		return v.ImageConfiguration
	}).(AnalysisTableFieldImageConfigurationPtrOutput)
}

func (o AnalysisTableFieldURLConfigurationOutput) LinkConfiguration() AnalysisTableFieldLinkConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldURLConfiguration) *AnalysisTableFieldLinkConfiguration {
		return v.LinkConfiguration
	}).(AnalysisTableFieldLinkConfigurationPtrOutput)
}

type AnalysisTableFieldURLConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldURLConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldURLConfiguration)(nil)).Elem()
}

func (o AnalysisTableFieldURLConfigurationPtrOutput) ToAnalysisTableFieldURLConfigurationPtrOutput() AnalysisTableFieldURLConfigurationPtrOutput {
	return o
}

func (o AnalysisTableFieldURLConfigurationPtrOutput) ToAnalysisTableFieldURLConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableFieldURLConfigurationPtrOutput {
	return o
}

func (o AnalysisTableFieldURLConfigurationPtrOutput) Elem() AnalysisTableFieldURLConfigurationOutput {
	return o.ApplyT(func(v *AnalysisTableFieldURLConfiguration) AnalysisTableFieldURLConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisTableFieldURLConfiguration
		return ret
	}).(AnalysisTableFieldURLConfigurationOutput)
}

func (o AnalysisTableFieldURLConfigurationPtrOutput) ImageConfiguration() AnalysisTableFieldImageConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldURLConfiguration) *AnalysisTableFieldImageConfiguration {
		if v == nil {
			return nil
		}
		return v.ImageConfiguration
	}).(AnalysisTableFieldImageConfigurationPtrOutput)
}

func (o AnalysisTableFieldURLConfigurationPtrOutput) LinkConfiguration() AnalysisTableFieldLinkConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldURLConfiguration) *AnalysisTableFieldLinkConfiguration {
		if v == nil {
			return nil
		}
		return v.LinkConfiguration
	}).(AnalysisTableFieldLinkConfigurationPtrOutput)
}

type AnalysisTableFieldWells struct {
	TableAggregatedFieldWells   *AnalysisTableAggregatedFieldWells   `pulumi:"tableAggregatedFieldWells"`
	TableUnaggregatedFieldWells *AnalysisTableUnaggregatedFieldWells `pulumi:"tableUnaggregatedFieldWells"`
}

// AnalysisTableFieldWellsInput is an input type that accepts AnalysisTableFieldWellsArgs and AnalysisTableFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisTableFieldWellsInput` via:
//
//	AnalysisTableFieldWellsArgs{...}
type AnalysisTableFieldWellsInput interface {
	pulumi.Input

	ToAnalysisTableFieldWellsOutput() AnalysisTableFieldWellsOutput
	ToAnalysisTableFieldWellsOutputWithContext(context.Context) AnalysisTableFieldWellsOutput
}

type AnalysisTableFieldWellsArgs struct {
	TableAggregatedFieldWells   AnalysisTableAggregatedFieldWellsPtrInput   `pulumi:"tableAggregatedFieldWells"`
	TableUnaggregatedFieldWells AnalysisTableUnaggregatedFieldWellsPtrInput `pulumi:"tableUnaggregatedFieldWells"`
}

func (AnalysisTableFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldWells)(nil)).Elem()
}

func (i AnalysisTableFieldWellsArgs) ToAnalysisTableFieldWellsOutput() AnalysisTableFieldWellsOutput {
	return i.ToAnalysisTableFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisTableFieldWellsArgs) ToAnalysisTableFieldWellsOutputWithContext(ctx context.Context) AnalysisTableFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldWellsOutput)
}

func (i AnalysisTableFieldWellsArgs) ToAnalysisTableFieldWellsPtrOutput() AnalysisTableFieldWellsPtrOutput {
	return i.ToAnalysisTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisTableFieldWellsArgs) ToAnalysisTableFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldWellsOutput).ToAnalysisTableFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisTableFieldWellsPtrInput is an input type that accepts AnalysisTableFieldWellsArgs, AnalysisTableFieldWellsPtr and AnalysisTableFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisTableFieldWellsPtrInput` via:
//
//	        AnalysisTableFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisTableFieldWellsPtrOutput() AnalysisTableFieldWellsPtrOutput
	ToAnalysisTableFieldWellsPtrOutputWithContext(context.Context) AnalysisTableFieldWellsPtrOutput
}

type analysisTableFieldWellsPtrType AnalysisTableFieldWellsArgs

func AnalysisTableFieldWellsPtr(v *AnalysisTableFieldWellsArgs) AnalysisTableFieldWellsPtrInput {
	return (*analysisTableFieldWellsPtrType)(v)
}

func (*analysisTableFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldWells)(nil)).Elem()
}

func (i *analysisTableFieldWellsPtrType) ToAnalysisTableFieldWellsPtrOutput() AnalysisTableFieldWellsPtrOutput {
	return i.ToAnalysisTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisTableFieldWellsPtrType) ToAnalysisTableFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableFieldWellsPtrOutput)
}

type AnalysisTableFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldWells)(nil)).Elem()
}

func (o AnalysisTableFieldWellsOutput) ToAnalysisTableFieldWellsOutput() AnalysisTableFieldWellsOutput {
	return o
}

func (o AnalysisTableFieldWellsOutput) ToAnalysisTableFieldWellsOutputWithContext(ctx context.Context) AnalysisTableFieldWellsOutput {
	return o
}

func (o AnalysisTableFieldWellsOutput) ToAnalysisTableFieldWellsPtrOutput() AnalysisTableFieldWellsPtrOutput {
	return o.ToAnalysisTableFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldWellsOutput) ToAnalysisTableFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableFieldWells) *AnalysisTableFieldWells {
		return &v
	}).(AnalysisTableFieldWellsPtrOutput)
}

func (o AnalysisTableFieldWellsOutput) TableAggregatedFieldWells() AnalysisTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldWells) *AnalysisTableAggregatedFieldWells { return v.TableAggregatedFieldWells }).(AnalysisTableAggregatedFieldWellsPtrOutput)
}

func (o AnalysisTableFieldWellsOutput) TableUnaggregatedFieldWells() AnalysisTableUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisTableFieldWells) *AnalysisTableUnaggregatedFieldWells {
		return v.TableUnaggregatedFieldWells
	}).(AnalysisTableUnaggregatedFieldWellsPtrOutput)
}

type AnalysisTableFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldWells)(nil)).Elem()
}

func (o AnalysisTableFieldWellsPtrOutput) ToAnalysisTableFieldWellsPtrOutput() AnalysisTableFieldWellsPtrOutput {
	return o
}

func (o AnalysisTableFieldWellsPtrOutput) ToAnalysisTableFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableFieldWellsPtrOutput {
	return o
}

func (o AnalysisTableFieldWellsPtrOutput) Elem() AnalysisTableFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisTableFieldWells) AnalysisTableFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisTableFieldWells
		return ret
	}).(AnalysisTableFieldWellsOutput)
}

func (o AnalysisTableFieldWellsPtrOutput) TableAggregatedFieldWells() AnalysisTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldWells) *AnalysisTableAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.TableAggregatedFieldWells
	}).(AnalysisTableAggregatedFieldWellsPtrOutput)
}

func (o AnalysisTableFieldWellsPtrOutput) TableUnaggregatedFieldWells() AnalysisTableUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableFieldWells) *AnalysisTableUnaggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.TableUnaggregatedFieldWells
	}).(AnalysisTableUnaggregatedFieldWellsPtrOutput)
}

type AnalysisTableInlineVisualization struct {
	DataBars *AnalysisDataBarsOptions `pulumi:"dataBars"`
}

// AnalysisTableInlineVisualizationInput is an input type that accepts AnalysisTableInlineVisualizationArgs and AnalysisTableInlineVisualizationOutput values.
// You can construct a concrete instance of `AnalysisTableInlineVisualizationInput` via:
//
//	AnalysisTableInlineVisualizationArgs{...}
type AnalysisTableInlineVisualizationInput interface {
	pulumi.Input

	ToAnalysisTableInlineVisualizationOutput() AnalysisTableInlineVisualizationOutput
	ToAnalysisTableInlineVisualizationOutputWithContext(context.Context) AnalysisTableInlineVisualizationOutput
}

type AnalysisTableInlineVisualizationArgs struct {
	DataBars AnalysisDataBarsOptionsPtrInput `pulumi:"dataBars"`
}

func (AnalysisTableInlineVisualizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableInlineVisualization)(nil)).Elem()
}

func (i AnalysisTableInlineVisualizationArgs) ToAnalysisTableInlineVisualizationOutput() AnalysisTableInlineVisualizationOutput {
	return i.ToAnalysisTableInlineVisualizationOutputWithContext(context.Background())
}

func (i AnalysisTableInlineVisualizationArgs) ToAnalysisTableInlineVisualizationOutputWithContext(ctx context.Context) AnalysisTableInlineVisualizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableInlineVisualizationOutput)
}

// AnalysisTableInlineVisualizationArrayInput is an input type that accepts AnalysisTableInlineVisualizationArray and AnalysisTableInlineVisualizationArrayOutput values.
// You can construct a concrete instance of `AnalysisTableInlineVisualizationArrayInput` via:
//
//	AnalysisTableInlineVisualizationArray{ AnalysisTableInlineVisualizationArgs{...} }
type AnalysisTableInlineVisualizationArrayInput interface {
	pulumi.Input

	ToAnalysisTableInlineVisualizationArrayOutput() AnalysisTableInlineVisualizationArrayOutput
	ToAnalysisTableInlineVisualizationArrayOutputWithContext(context.Context) AnalysisTableInlineVisualizationArrayOutput
}

type AnalysisTableInlineVisualizationArray []AnalysisTableInlineVisualizationInput

func (AnalysisTableInlineVisualizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisTableInlineVisualization)(nil)).Elem()
}

func (i AnalysisTableInlineVisualizationArray) ToAnalysisTableInlineVisualizationArrayOutput() AnalysisTableInlineVisualizationArrayOutput {
	return i.ToAnalysisTableInlineVisualizationArrayOutputWithContext(context.Background())
}

func (i AnalysisTableInlineVisualizationArray) ToAnalysisTableInlineVisualizationArrayOutputWithContext(ctx context.Context) AnalysisTableInlineVisualizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableInlineVisualizationArrayOutput)
}

type AnalysisTableInlineVisualizationOutput struct{ *pulumi.OutputState }

func (AnalysisTableInlineVisualizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableInlineVisualization)(nil)).Elem()
}

func (o AnalysisTableInlineVisualizationOutput) ToAnalysisTableInlineVisualizationOutput() AnalysisTableInlineVisualizationOutput {
	return o
}

func (o AnalysisTableInlineVisualizationOutput) ToAnalysisTableInlineVisualizationOutputWithContext(ctx context.Context) AnalysisTableInlineVisualizationOutput {
	return o
}

func (o AnalysisTableInlineVisualizationOutput) DataBars() AnalysisDataBarsOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableInlineVisualization) *AnalysisDataBarsOptions { return v.DataBars }).(AnalysisDataBarsOptionsPtrOutput)
}

type AnalysisTableInlineVisualizationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisTableInlineVisualizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisTableInlineVisualization)(nil)).Elem()
}

func (o AnalysisTableInlineVisualizationArrayOutput) ToAnalysisTableInlineVisualizationArrayOutput() AnalysisTableInlineVisualizationArrayOutput {
	return o
}

func (o AnalysisTableInlineVisualizationArrayOutput) ToAnalysisTableInlineVisualizationArrayOutputWithContext(ctx context.Context) AnalysisTableInlineVisualizationArrayOutput {
	return o
}

func (o AnalysisTableInlineVisualizationArrayOutput) Index(i pulumi.IntInput) AnalysisTableInlineVisualizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisTableInlineVisualization {
		return vs[0].([]AnalysisTableInlineVisualization)[vs[1].(int)]
	}).(AnalysisTableInlineVisualizationOutput)
}

type AnalysisTableOptions struct {
	CellStyle                *AnalysisTableCellStyle           `pulumi:"cellStyle"`
	HeaderStyle              *AnalysisTableCellStyle           `pulumi:"headerStyle"`
	Orientation              *AnalysisTableOrientation         `pulumi:"orientation"`
	RowAlternateColorOptions *AnalysisRowAlternateColorOptions `pulumi:"rowAlternateColorOptions"`
}

// AnalysisTableOptionsInput is an input type that accepts AnalysisTableOptionsArgs and AnalysisTableOptionsOutput values.
// You can construct a concrete instance of `AnalysisTableOptionsInput` via:
//
//	AnalysisTableOptionsArgs{...}
type AnalysisTableOptionsInput interface {
	pulumi.Input

	ToAnalysisTableOptionsOutput() AnalysisTableOptionsOutput
	ToAnalysisTableOptionsOutputWithContext(context.Context) AnalysisTableOptionsOutput
}

type AnalysisTableOptionsArgs struct {
	CellStyle                AnalysisTableCellStylePtrInput           `pulumi:"cellStyle"`
	HeaderStyle              AnalysisTableCellStylePtrInput           `pulumi:"headerStyle"`
	Orientation              AnalysisTableOrientationPtrInput         `pulumi:"orientation"`
	RowAlternateColorOptions AnalysisRowAlternateColorOptionsPtrInput `pulumi:"rowAlternateColorOptions"`
}

func (AnalysisTableOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableOptions)(nil)).Elem()
}

func (i AnalysisTableOptionsArgs) ToAnalysisTableOptionsOutput() AnalysisTableOptionsOutput {
	return i.ToAnalysisTableOptionsOutputWithContext(context.Background())
}

func (i AnalysisTableOptionsArgs) ToAnalysisTableOptionsOutputWithContext(ctx context.Context) AnalysisTableOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableOptionsOutput)
}

func (i AnalysisTableOptionsArgs) ToAnalysisTableOptionsPtrOutput() AnalysisTableOptionsPtrOutput {
	return i.ToAnalysisTableOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTableOptionsArgs) ToAnalysisTableOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableOptionsOutput).ToAnalysisTableOptionsPtrOutputWithContext(ctx)
}

// AnalysisTableOptionsPtrInput is an input type that accepts AnalysisTableOptionsArgs, AnalysisTableOptionsPtr and AnalysisTableOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTableOptionsPtrInput` via:
//
//	        AnalysisTableOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTableOptionsPtrOutput() AnalysisTableOptionsPtrOutput
	ToAnalysisTableOptionsPtrOutputWithContext(context.Context) AnalysisTableOptionsPtrOutput
}

type analysisTableOptionsPtrType AnalysisTableOptionsArgs

func AnalysisTableOptionsPtr(v *AnalysisTableOptionsArgs) AnalysisTableOptionsPtrInput {
	return (*analysisTableOptionsPtrType)(v)
}

func (*analysisTableOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableOptions)(nil)).Elem()
}

func (i *analysisTableOptionsPtrType) ToAnalysisTableOptionsPtrOutput() AnalysisTableOptionsPtrOutput {
	return i.ToAnalysisTableOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTableOptionsPtrType) ToAnalysisTableOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableOptionsPtrOutput)
}

type AnalysisTableOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTableOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableOptions)(nil)).Elem()
}

func (o AnalysisTableOptionsOutput) ToAnalysisTableOptionsOutput() AnalysisTableOptionsOutput {
	return o
}

func (o AnalysisTableOptionsOutput) ToAnalysisTableOptionsOutputWithContext(ctx context.Context) AnalysisTableOptionsOutput {
	return o
}

func (o AnalysisTableOptionsOutput) ToAnalysisTableOptionsPtrOutput() AnalysisTableOptionsPtrOutput {
	return o.ToAnalysisTableOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTableOptionsOutput) ToAnalysisTableOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableOptions) *AnalysisTableOptions {
		return &v
	}).(AnalysisTableOptionsPtrOutput)
}

func (o AnalysisTableOptionsOutput) CellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisTableOptions) *AnalysisTableCellStyle { return v.CellStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisTableOptionsOutput) HeaderStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisTableOptions) *AnalysisTableCellStyle { return v.HeaderStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisTableOptionsOutput) Orientation() AnalysisTableOrientationPtrOutput {
	return o.ApplyT(func(v AnalysisTableOptions) *AnalysisTableOrientation { return v.Orientation }).(AnalysisTableOrientationPtrOutput)
}

func (o AnalysisTableOptionsOutput) RowAlternateColorOptions() AnalysisRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableOptions) *AnalysisRowAlternateColorOptions { return v.RowAlternateColorOptions }).(AnalysisRowAlternateColorOptionsPtrOutput)
}

type AnalysisTableOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableOptions)(nil)).Elem()
}

func (o AnalysisTableOptionsPtrOutput) ToAnalysisTableOptionsPtrOutput() AnalysisTableOptionsPtrOutput {
	return o
}

func (o AnalysisTableOptionsPtrOutput) ToAnalysisTableOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableOptionsPtrOutput {
	return o
}

func (o AnalysisTableOptionsPtrOutput) Elem() AnalysisTableOptionsOutput {
	return o.ApplyT(func(v *AnalysisTableOptions) AnalysisTableOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTableOptions
		return ret
	}).(AnalysisTableOptionsOutput)
}

func (o AnalysisTableOptionsPtrOutput) CellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisTableOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.CellStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisTableOptionsPtrOutput) HeaderStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisTableOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.HeaderStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisTableOptionsPtrOutput) Orientation() AnalysisTableOrientationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableOptions) *AnalysisTableOrientation {
		if v == nil {
			return nil
		}
		return v.Orientation
	}).(AnalysisTableOrientationPtrOutput)
}

func (o AnalysisTableOptionsPtrOutput) RowAlternateColorOptions() AnalysisRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableOptions) *AnalysisRowAlternateColorOptions {
		if v == nil {
			return nil
		}
		return v.RowAlternateColorOptions
	}).(AnalysisRowAlternateColorOptionsPtrOutput)
}

type AnalysisTablePaginatedReportOptions struct {
	OverflowColumnHeaderVisibility *AnalysisVisibility `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     *AnalysisVisibility `pulumi:"verticalOverflowVisibility"`
}

// AnalysisTablePaginatedReportOptionsInput is an input type that accepts AnalysisTablePaginatedReportOptionsArgs and AnalysisTablePaginatedReportOptionsOutput values.
// You can construct a concrete instance of `AnalysisTablePaginatedReportOptionsInput` via:
//
//	AnalysisTablePaginatedReportOptionsArgs{...}
type AnalysisTablePaginatedReportOptionsInput interface {
	pulumi.Input

	ToAnalysisTablePaginatedReportOptionsOutput() AnalysisTablePaginatedReportOptionsOutput
	ToAnalysisTablePaginatedReportOptionsOutputWithContext(context.Context) AnalysisTablePaginatedReportOptionsOutput
}

type AnalysisTablePaginatedReportOptionsArgs struct {
	OverflowColumnHeaderVisibility AnalysisVisibilityPtrInput `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     AnalysisVisibilityPtrInput `pulumi:"verticalOverflowVisibility"`
}

func (AnalysisTablePaginatedReportOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTablePaginatedReportOptions)(nil)).Elem()
}

func (i AnalysisTablePaginatedReportOptionsArgs) ToAnalysisTablePaginatedReportOptionsOutput() AnalysisTablePaginatedReportOptionsOutput {
	return i.ToAnalysisTablePaginatedReportOptionsOutputWithContext(context.Background())
}

func (i AnalysisTablePaginatedReportOptionsArgs) ToAnalysisTablePaginatedReportOptionsOutputWithContext(ctx context.Context) AnalysisTablePaginatedReportOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTablePaginatedReportOptionsOutput)
}

func (i AnalysisTablePaginatedReportOptionsArgs) ToAnalysisTablePaginatedReportOptionsPtrOutput() AnalysisTablePaginatedReportOptionsPtrOutput {
	return i.ToAnalysisTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTablePaginatedReportOptionsArgs) ToAnalysisTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) AnalysisTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTablePaginatedReportOptionsOutput).ToAnalysisTablePaginatedReportOptionsPtrOutputWithContext(ctx)
}

// AnalysisTablePaginatedReportOptionsPtrInput is an input type that accepts AnalysisTablePaginatedReportOptionsArgs, AnalysisTablePaginatedReportOptionsPtr and AnalysisTablePaginatedReportOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTablePaginatedReportOptionsPtrInput` via:
//
//	        AnalysisTablePaginatedReportOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTablePaginatedReportOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTablePaginatedReportOptionsPtrOutput() AnalysisTablePaginatedReportOptionsPtrOutput
	ToAnalysisTablePaginatedReportOptionsPtrOutputWithContext(context.Context) AnalysisTablePaginatedReportOptionsPtrOutput
}

type analysisTablePaginatedReportOptionsPtrType AnalysisTablePaginatedReportOptionsArgs

func AnalysisTablePaginatedReportOptionsPtr(v *AnalysisTablePaginatedReportOptionsArgs) AnalysisTablePaginatedReportOptionsPtrInput {
	return (*analysisTablePaginatedReportOptionsPtrType)(v)
}

func (*analysisTablePaginatedReportOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTablePaginatedReportOptions)(nil)).Elem()
}

func (i *analysisTablePaginatedReportOptionsPtrType) ToAnalysisTablePaginatedReportOptionsPtrOutput() AnalysisTablePaginatedReportOptionsPtrOutput {
	return i.ToAnalysisTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTablePaginatedReportOptionsPtrType) ToAnalysisTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) AnalysisTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTablePaginatedReportOptionsPtrOutput)
}

type AnalysisTablePaginatedReportOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTablePaginatedReportOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTablePaginatedReportOptions)(nil)).Elem()
}

func (o AnalysisTablePaginatedReportOptionsOutput) ToAnalysisTablePaginatedReportOptionsOutput() AnalysisTablePaginatedReportOptionsOutput {
	return o
}

func (o AnalysisTablePaginatedReportOptionsOutput) ToAnalysisTablePaginatedReportOptionsOutputWithContext(ctx context.Context) AnalysisTablePaginatedReportOptionsOutput {
	return o
}

func (o AnalysisTablePaginatedReportOptionsOutput) ToAnalysisTablePaginatedReportOptionsPtrOutput() AnalysisTablePaginatedReportOptionsPtrOutput {
	return o.ToAnalysisTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTablePaginatedReportOptionsOutput) ToAnalysisTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) AnalysisTablePaginatedReportOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTablePaginatedReportOptions) *AnalysisTablePaginatedReportOptions {
		return &v
	}).(AnalysisTablePaginatedReportOptionsPtrOutput)
}

func (o AnalysisTablePaginatedReportOptionsOutput) OverflowColumnHeaderVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisTablePaginatedReportOptions) *AnalysisVisibility {
		return v.OverflowColumnHeaderVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisTablePaginatedReportOptionsOutput) VerticalOverflowVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisTablePaginatedReportOptions) *AnalysisVisibility { return v.VerticalOverflowVisibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisTablePaginatedReportOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTablePaginatedReportOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTablePaginatedReportOptions)(nil)).Elem()
}

func (o AnalysisTablePaginatedReportOptionsPtrOutput) ToAnalysisTablePaginatedReportOptionsPtrOutput() AnalysisTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o AnalysisTablePaginatedReportOptionsPtrOutput) ToAnalysisTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) AnalysisTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o AnalysisTablePaginatedReportOptionsPtrOutput) Elem() AnalysisTablePaginatedReportOptionsOutput {
	return o.ApplyT(func(v *AnalysisTablePaginatedReportOptions) AnalysisTablePaginatedReportOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTablePaginatedReportOptions
		return ret
	}).(AnalysisTablePaginatedReportOptionsOutput)
}

func (o AnalysisTablePaginatedReportOptionsPtrOutput) OverflowColumnHeaderVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisTablePaginatedReportOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.OverflowColumnHeaderVisibility
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisTablePaginatedReportOptionsPtrOutput) VerticalOverflowVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisTablePaginatedReportOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.VerticalOverflowVisibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisTableRowConditionalFormatting struct {
	BackgroundColor *AnalysisConditionalFormattingColor `pulumi:"backgroundColor"`
	TextColor       *AnalysisConditionalFormattingColor `pulumi:"textColor"`
}

// AnalysisTableRowConditionalFormattingInput is an input type that accepts AnalysisTableRowConditionalFormattingArgs and AnalysisTableRowConditionalFormattingOutput values.
// You can construct a concrete instance of `AnalysisTableRowConditionalFormattingInput` via:
//
//	AnalysisTableRowConditionalFormattingArgs{...}
type AnalysisTableRowConditionalFormattingInput interface {
	pulumi.Input

	ToAnalysisTableRowConditionalFormattingOutput() AnalysisTableRowConditionalFormattingOutput
	ToAnalysisTableRowConditionalFormattingOutputWithContext(context.Context) AnalysisTableRowConditionalFormattingOutput
}

type AnalysisTableRowConditionalFormattingArgs struct {
	BackgroundColor AnalysisConditionalFormattingColorPtrInput `pulumi:"backgroundColor"`
	TextColor       AnalysisConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (AnalysisTableRowConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableRowConditionalFormatting)(nil)).Elem()
}

func (i AnalysisTableRowConditionalFormattingArgs) ToAnalysisTableRowConditionalFormattingOutput() AnalysisTableRowConditionalFormattingOutput {
	return i.ToAnalysisTableRowConditionalFormattingOutputWithContext(context.Background())
}

func (i AnalysisTableRowConditionalFormattingArgs) ToAnalysisTableRowConditionalFormattingOutputWithContext(ctx context.Context) AnalysisTableRowConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableRowConditionalFormattingOutput)
}

func (i AnalysisTableRowConditionalFormattingArgs) ToAnalysisTableRowConditionalFormattingPtrOutput() AnalysisTableRowConditionalFormattingPtrOutput {
	return i.ToAnalysisTableRowConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i AnalysisTableRowConditionalFormattingArgs) ToAnalysisTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableRowConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableRowConditionalFormattingOutput).ToAnalysisTableRowConditionalFormattingPtrOutputWithContext(ctx)
}

// AnalysisTableRowConditionalFormattingPtrInput is an input type that accepts AnalysisTableRowConditionalFormattingArgs, AnalysisTableRowConditionalFormattingPtr and AnalysisTableRowConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `AnalysisTableRowConditionalFormattingPtrInput` via:
//
//	        AnalysisTableRowConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableRowConditionalFormattingPtrInput interface {
	pulumi.Input

	ToAnalysisTableRowConditionalFormattingPtrOutput() AnalysisTableRowConditionalFormattingPtrOutput
	ToAnalysisTableRowConditionalFormattingPtrOutputWithContext(context.Context) AnalysisTableRowConditionalFormattingPtrOutput
}

type analysisTableRowConditionalFormattingPtrType AnalysisTableRowConditionalFormattingArgs

func AnalysisTableRowConditionalFormattingPtr(v *AnalysisTableRowConditionalFormattingArgs) AnalysisTableRowConditionalFormattingPtrInput {
	return (*analysisTableRowConditionalFormattingPtrType)(v)
}

func (*analysisTableRowConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableRowConditionalFormatting)(nil)).Elem()
}

func (i *analysisTableRowConditionalFormattingPtrType) ToAnalysisTableRowConditionalFormattingPtrOutput() AnalysisTableRowConditionalFormattingPtrOutput {
	return i.ToAnalysisTableRowConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *analysisTableRowConditionalFormattingPtrType) ToAnalysisTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableRowConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableRowConditionalFormattingPtrOutput)
}

type AnalysisTableRowConditionalFormattingOutput struct{ *pulumi.OutputState }

func (AnalysisTableRowConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableRowConditionalFormatting)(nil)).Elem()
}

func (o AnalysisTableRowConditionalFormattingOutput) ToAnalysisTableRowConditionalFormattingOutput() AnalysisTableRowConditionalFormattingOutput {
	return o
}

func (o AnalysisTableRowConditionalFormattingOutput) ToAnalysisTableRowConditionalFormattingOutputWithContext(ctx context.Context) AnalysisTableRowConditionalFormattingOutput {
	return o
}

func (o AnalysisTableRowConditionalFormattingOutput) ToAnalysisTableRowConditionalFormattingPtrOutput() AnalysisTableRowConditionalFormattingPtrOutput {
	return o.ToAnalysisTableRowConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o AnalysisTableRowConditionalFormattingOutput) ToAnalysisTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableRowConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableRowConditionalFormatting) *AnalysisTableRowConditionalFormatting {
		return &v
	}).(AnalysisTableRowConditionalFormattingPtrOutput)
}

func (o AnalysisTableRowConditionalFormattingOutput) BackgroundColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v AnalysisTableRowConditionalFormatting) *AnalysisConditionalFormattingColor {
		return v.BackgroundColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

func (o AnalysisTableRowConditionalFormattingOutput) TextColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v AnalysisTableRowConditionalFormatting) *AnalysisConditionalFormattingColor { return v.TextColor }).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisTableRowConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableRowConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableRowConditionalFormatting)(nil)).Elem()
}

func (o AnalysisTableRowConditionalFormattingPtrOutput) ToAnalysisTableRowConditionalFormattingPtrOutput() AnalysisTableRowConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisTableRowConditionalFormattingPtrOutput) ToAnalysisTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) AnalysisTableRowConditionalFormattingPtrOutput {
	return o
}

func (o AnalysisTableRowConditionalFormattingPtrOutput) Elem() AnalysisTableRowConditionalFormattingOutput {
	return o.ApplyT(func(v *AnalysisTableRowConditionalFormatting) AnalysisTableRowConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret AnalysisTableRowConditionalFormatting
		return ret
	}).(AnalysisTableRowConditionalFormattingOutput)
}

func (o AnalysisTableRowConditionalFormattingPtrOutput) BackgroundColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *AnalysisTableRowConditionalFormatting) *AnalysisConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

func (o AnalysisTableRowConditionalFormattingPtrOutput) TextColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *AnalysisTableRowConditionalFormatting) *AnalysisConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisTableSideBorderOptions struct {
	Bottom          *AnalysisTableBorderOptions `pulumi:"bottom"`
	InnerHorizontal *AnalysisTableBorderOptions `pulumi:"innerHorizontal"`
	InnerVertical   *AnalysisTableBorderOptions `pulumi:"innerVertical"`
	Left            *AnalysisTableBorderOptions `pulumi:"left"`
	Right           *AnalysisTableBorderOptions `pulumi:"right"`
	Top             *AnalysisTableBorderOptions `pulumi:"top"`
}

// AnalysisTableSideBorderOptionsInput is an input type that accepts AnalysisTableSideBorderOptionsArgs and AnalysisTableSideBorderOptionsOutput values.
// You can construct a concrete instance of `AnalysisTableSideBorderOptionsInput` via:
//
//	AnalysisTableSideBorderOptionsArgs{...}
type AnalysisTableSideBorderOptionsInput interface {
	pulumi.Input

	ToAnalysisTableSideBorderOptionsOutput() AnalysisTableSideBorderOptionsOutput
	ToAnalysisTableSideBorderOptionsOutputWithContext(context.Context) AnalysisTableSideBorderOptionsOutput
}

type AnalysisTableSideBorderOptionsArgs struct {
	Bottom          AnalysisTableBorderOptionsPtrInput `pulumi:"bottom"`
	InnerHorizontal AnalysisTableBorderOptionsPtrInput `pulumi:"innerHorizontal"`
	InnerVertical   AnalysisTableBorderOptionsPtrInput `pulumi:"innerVertical"`
	Left            AnalysisTableBorderOptionsPtrInput `pulumi:"left"`
	Right           AnalysisTableBorderOptionsPtrInput `pulumi:"right"`
	Top             AnalysisTableBorderOptionsPtrInput `pulumi:"top"`
}

func (AnalysisTableSideBorderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableSideBorderOptions)(nil)).Elem()
}

func (i AnalysisTableSideBorderOptionsArgs) ToAnalysisTableSideBorderOptionsOutput() AnalysisTableSideBorderOptionsOutput {
	return i.ToAnalysisTableSideBorderOptionsOutputWithContext(context.Background())
}

func (i AnalysisTableSideBorderOptionsArgs) ToAnalysisTableSideBorderOptionsOutputWithContext(ctx context.Context) AnalysisTableSideBorderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableSideBorderOptionsOutput)
}

func (i AnalysisTableSideBorderOptionsArgs) ToAnalysisTableSideBorderOptionsPtrOutput() AnalysisTableSideBorderOptionsPtrOutput {
	return i.ToAnalysisTableSideBorderOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTableSideBorderOptionsArgs) ToAnalysisTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableSideBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableSideBorderOptionsOutput).ToAnalysisTableSideBorderOptionsPtrOutputWithContext(ctx)
}

// AnalysisTableSideBorderOptionsPtrInput is an input type that accepts AnalysisTableSideBorderOptionsArgs, AnalysisTableSideBorderOptionsPtr and AnalysisTableSideBorderOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTableSideBorderOptionsPtrInput` via:
//
//	        AnalysisTableSideBorderOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableSideBorderOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTableSideBorderOptionsPtrOutput() AnalysisTableSideBorderOptionsPtrOutput
	ToAnalysisTableSideBorderOptionsPtrOutputWithContext(context.Context) AnalysisTableSideBorderOptionsPtrOutput
}

type analysisTableSideBorderOptionsPtrType AnalysisTableSideBorderOptionsArgs

func AnalysisTableSideBorderOptionsPtr(v *AnalysisTableSideBorderOptionsArgs) AnalysisTableSideBorderOptionsPtrInput {
	return (*analysisTableSideBorderOptionsPtrType)(v)
}

func (*analysisTableSideBorderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableSideBorderOptions)(nil)).Elem()
}

func (i *analysisTableSideBorderOptionsPtrType) ToAnalysisTableSideBorderOptionsPtrOutput() AnalysisTableSideBorderOptionsPtrOutput {
	return i.ToAnalysisTableSideBorderOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTableSideBorderOptionsPtrType) ToAnalysisTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableSideBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableSideBorderOptionsPtrOutput)
}

type AnalysisTableSideBorderOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTableSideBorderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableSideBorderOptions)(nil)).Elem()
}

func (o AnalysisTableSideBorderOptionsOutput) ToAnalysisTableSideBorderOptionsOutput() AnalysisTableSideBorderOptionsOutput {
	return o
}

func (o AnalysisTableSideBorderOptionsOutput) ToAnalysisTableSideBorderOptionsOutputWithContext(ctx context.Context) AnalysisTableSideBorderOptionsOutput {
	return o
}

func (o AnalysisTableSideBorderOptionsOutput) ToAnalysisTableSideBorderOptionsPtrOutput() AnalysisTableSideBorderOptionsPtrOutput {
	return o.ToAnalysisTableSideBorderOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTableSideBorderOptionsOutput) ToAnalysisTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableSideBorderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableSideBorderOptions) *AnalysisTableSideBorderOptions {
		return &v
	}).(AnalysisTableSideBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsOutput) Bottom() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions { return v.Bottom }).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsOutput) InnerHorizontal() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions { return v.InnerHorizontal }).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsOutput) InnerVertical() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions { return v.InnerVertical }).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsOutput) Left() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions { return v.Left }).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsOutput) Right() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions { return v.Right }).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsOutput) Top() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions { return v.Top }).(AnalysisTableBorderOptionsPtrOutput)
}

type AnalysisTableSideBorderOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableSideBorderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableSideBorderOptions)(nil)).Elem()
}

func (o AnalysisTableSideBorderOptionsPtrOutput) ToAnalysisTableSideBorderOptionsPtrOutput() AnalysisTableSideBorderOptionsPtrOutput {
	return o
}

func (o AnalysisTableSideBorderOptionsPtrOutput) ToAnalysisTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTableSideBorderOptionsPtrOutput {
	return o
}

func (o AnalysisTableSideBorderOptionsPtrOutput) Elem() AnalysisTableSideBorderOptionsOutput {
	return o.ApplyT(func(v *AnalysisTableSideBorderOptions) AnalysisTableSideBorderOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTableSideBorderOptions
		return ret
	}).(AnalysisTableSideBorderOptionsOutput)
}

func (o AnalysisTableSideBorderOptionsPtrOutput) Bottom() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Bottom
	}).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsPtrOutput) InnerHorizontal() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.InnerHorizontal
	}).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsPtrOutput) InnerVertical() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.InnerVertical
	}).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsPtrOutput) Left() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Left
	}).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsPtrOutput) Right() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Right
	}).(AnalysisTableBorderOptionsPtrOutput)
}

func (o AnalysisTableSideBorderOptionsPtrOutput) Top() AnalysisTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableSideBorderOptions) *AnalysisTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Top
	}).(AnalysisTableBorderOptionsPtrOutput)
}

type AnalysisTableSortConfiguration struct {
	PaginationConfiguration *AnalysisPaginationConfiguration `pulumi:"paginationConfiguration"`
	RowSort                 []AnalysisFieldSortOptions       `pulumi:"rowSort"`
}

// AnalysisTableSortConfigurationInput is an input type that accepts AnalysisTableSortConfigurationArgs and AnalysisTableSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisTableSortConfigurationInput` via:
//
//	AnalysisTableSortConfigurationArgs{...}
type AnalysisTableSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisTableSortConfigurationOutput() AnalysisTableSortConfigurationOutput
	ToAnalysisTableSortConfigurationOutputWithContext(context.Context) AnalysisTableSortConfigurationOutput
}

type AnalysisTableSortConfigurationArgs struct {
	PaginationConfiguration AnalysisPaginationConfigurationPtrInput `pulumi:"paginationConfiguration"`
	RowSort                 AnalysisFieldSortOptionsArrayInput      `pulumi:"rowSort"`
}

func (AnalysisTableSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableSortConfiguration)(nil)).Elem()
}

func (i AnalysisTableSortConfigurationArgs) ToAnalysisTableSortConfigurationOutput() AnalysisTableSortConfigurationOutput {
	return i.ToAnalysisTableSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisTableSortConfigurationArgs) ToAnalysisTableSortConfigurationOutputWithContext(ctx context.Context) AnalysisTableSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableSortConfigurationOutput)
}

func (i AnalysisTableSortConfigurationArgs) ToAnalysisTableSortConfigurationPtrOutput() AnalysisTableSortConfigurationPtrOutput {
	return i.ToAnalysisTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisTableSortConfigurationArgs) ToAnalysisTableSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableSortConfigurationOutput).ToAnalysisTableSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisTableSortConfigurationPtrInput is an input type that accepts AnalysisTableSortConfigurationArgs, AnalysisTableSortConfigurationPtr and AnalysisTableSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisTableSortConfigurationPtrInput` via:
//
//	        AnalysisTableSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisTableSortConfigurationPtrOutput() AnalysisTableSortConfigurationPtrOutput
	ToAnalysisTableSortConfigurationPtrOutputWithContext(context.Context) AnalysisTableSortConfigurationPtrOutput
}

type analysisTableSortConfigurationPtrType AnalysisTableSortConfigurationArgs

func AnalysisTableSortConfigurationPtr(v *AnalysisTableSortConfigurationArgs) AnalysisTableSortConfigurationPtrInput {
	return (*analysisTableSortConfigurationPtrType)(v)
}

func (*analysisTableSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableSortConfiguration)(nil)).Elem()
}

func (i *analysisTableSortConfigurationPtrType) ToAnalysisTableSortConfigurationPtrOutput() AnalysisTableSortConfigurationPtrOutput {
	return i.ToAnalysisTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisTableSortConfigurationPtrType) ToAnalysisTableSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableSortConfigurationPtrOutput)
}

type AnalysisTableSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisTableSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableSortConfiguration)(nil)).Elem()
}

func (o AnalysisTableSortConfigurationOutput) ToAnalysisTableSortConfigurationOutput() AnalysisTableSortConfigurationOutput {
	return o
}

func (o AnalysisTableSortConfigurationOutput) ToAnalysisTableSortConfigurationOutputWithContext(ctx context.Context) AnalysisTableSortConfigurationOutput {
	return o
}

func (o AnalysisTableSortConfigurationOutput) ToAnalysisTableSortConfigurationPtrOutput() AnalysisTableSortConfigurationPtrOutput {
	return o.ToAnalysisTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisTableSortConfigurationOutput) ToAnalysisTableSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableSortConfiguration) *AnalysisTableSortConfiguration {
		return &v
	}).(AnalysisTableSortConfigurationPtrOutput)
}

func (o AnalysisTableSortConfigurationOutput) PaginationConfiguration() AnalysisPaginationConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTableSortConfiguration) *AnalysisPaginationConfiguration {
		return v.PaginationConfiguration
	}).(AnalysisPaginationConfigurationPtrOutput)
}

func (o AnalysisTableSortConfigurationOutput) RowSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisTableSortConfiguration) []AnalysisFieldSortOptions { return v.RowSort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisTableSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableSortConfiguration)(nil)).Elem()
}

func (o AnalysisTableSortConfigurationPtrOutput) ToAnalysisTableSortConfigurationPtrOutput() AnalysisTableSortConfigurationPtrOutput {
	return o
}

func (o AnalysisTableSortConfigurationPtrOutput) ToAnalysisTableSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableSortConfigurationPtrOutput {
	return o
}

func (o AnalysisTableSortConfigurationPtrOutput) Elem() AnalysisTableSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisTableSortConfiguration) AnalysisTableSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisTableSortConfiguration
		return ret
	}).(AnalysisTableSortConfigurationOutput)
}

func (o AnalysisTableSortConfigurationPtrOutput) PaginationConfiguration() AnalysisPaginationConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableSortConfiguration) *AnalysisPaginationConfiguration {
		if v == nil {
			return nil
		}
		return v.PaginationConfiguration
	}).(AnalysisPaginationConfigurationPtrOutput)
}

func (o AnalysisTableSortConfigurationPtrOutput) RowSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisTableSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.RowSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisTableUnaggregatedFieldWells struct {
	Values []AnalysisUnaggregatedField `pulumi:"values"`
}

// AnalysisTableUnaggregatedFieldWellsInput is an input type that accepts AnalysisTableUnaggregatedFieldWellsArgs and AnalysisTableUnaggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisTableUnaggregatedFieldWellsInput` via:
//
//	AnalysisTableUnaggregatedFieldWellsArgs{...}
type AnalysisTableUnaggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisTableUnaggregatedFieldWellsOutput() AnalysisTableUnaggregatedFieldWellsOutput
	ToAnalysisTableUnaggregatedFieldWellsOutputWithContext(context.Context) AnalysisTableUnaggregatedFieldWellsOutput
}

type AnalysisTableUnaggregatedFieldWellsArgs struct {
	Values AnalysisUnaggregatedFieldArrayInput `pulumi:"values"`
}

func (AnalysisTableUnaggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableUnaggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisTableUnaggregatedFieldWellsArgs) ToAnalysisTableUnaggregatedFieldWellsOutput() AnalysisTableUnaggregatedFieldWellsOutput {
	return i.ToAnalysisTableUnaggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisTableUnaggregatedFieldWellsArgs) ToAnalysisTableUnaggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisTableUnaggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableUnaggregatedFieldWellsOutput)
}

func (i AnalysisTableUnaggregatedFieldWellsArgs) ToAnalysisTableUnaggregatedFieldWellsPtrOutput() AnalysisTableUnaggregatedFieldWellsPtrOutput {
	return i.ToAnalysisTableUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisTableUnaggregatedFieldWellsArgs) ToAnalysisTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableUnaggregatedFieldWellsOutput).ToAnalysisTableUnaggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisTableUnaggregatedFieldWellsPtrInput is an input type that accepts AnalysisTableUnaggregatedFieldWellsArgs, AnalysisTableUnaggregatedFieldWellsPtr and AnalysisTableUnaggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisTableUnaggregatedFieldWellsPtrInput` via:
//
//	        AnalysisTableUnaggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableUnaggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisTableUnaggregatedFieldWellsPtrOutput() AnalysisTableUnaggregatedFieldWellsPtrOutput
	ToAnalysisTableUnaggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisTableUnaggregatedFieldWellsPtrOutput
}

type analysisTableUnaggregatedFieldWellsPtrType AnalysisTableUnaggregatedFieldWellsArgs

func AnalysisTableUnaggregatedFieldWellsPtr(v *AnalysisTableUnaggregatedFieldWellsArgs) AnalysisTableUnaggregatedFieldWellsPtrInput {
	return (*analysisTableUnaggregatedFieldWellsPtrType)(v)
}

func (*analysisTableUnaggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableUnaggregatedFieldWells)(nil)).Elem()
}

func (i *analysisTableUnaggregatedFieldWellsPtrType) ToAnalysisTableUnaggregatedFieldWellsPtrOutput() AnalysisTableUnaggregatedFieldWellsPtrOutput {
	return i.ToAnalysisTableUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisTableUnaggregatedFieldWellsPtrType) ToAnalysisTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableUnaggregatedFieldWellsPtrOutput)
}

type AnalysisTableUnaggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisTableUnaggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableUnaggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisTableUnaggregatedFieldWellsOutput) ToAnalysisTableUnaggregatedFieldWellsOutput() AnalysisTableUnaggregatedFieldWellsOutput {
	return o
}

func (o AnalysisTableUnaggregatedFieldWellsOutput) ToAnalysisTableUnaggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisTableUnaggregatedFieldWellsOutput {
	return o
}

func (o AnalysisTableUnaggregatedFieldWellsOutput) ToAnalysisTableUnaggregatedFieldWellsPtrOutput() AnalysisTableUnaggregatedFieldWellsPtrOutput {
	return o.ToAnalysisTableUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisTableUnaggregatedFieldWellsOutput) ToAnalysisTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableUnaggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableUnaggregatedFieldWells) *AnalysisTableUnaggregatedFieldWells {
		return &v
	}).(AnalysisTableUnaggregatedFieldWellsPtrOutput)
}

func (o AnalysisTableUnaggregatedFieldWellsOutput) Values() AnalysisUnaggregatedFieldArrayOutput {
	return o.ApplyT(func(v AnalysisTableUnaggregatedFieldWells) []AnalysisUnaggregatedField { return v.Values }).(AnalysisUnaggregatedFieldArrayOutput)
}

type AnalysisTableUnaggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableUnaggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableUnaggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisTableUnaggregatedFieldWellsPtrOutput) ToAnalysisTableUnaggregatedFieldWellsPtrOutput() AnalysisTableUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisTableUnaggregatedFieldWellsPtrOutput) ToAnalysisTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTableUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisTableUnaggregatedFieldWellsPtrOutput) Elem() AnalysisTableUnaggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisTableUnaggregatedFieldWells) AnalysisTableUnaggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisTableUnaggregatedFieldWells
		return ret
	}).(AnalysisTableUnaggregatedFieldWellsOutput)
}

func (o AnalysisTableUnaggregatedFieldWellsPtrOutput) Values() AnalysisUnaggregatedFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisTableUnaggregatedFieldWells) []AnalysisUnaggregatedField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisUnaggregatedFieldArrayOutput)
}

type AnalysisTableVisual struct {
	Actions               []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration    *AnalysisTableConfiguration         `pulumi:"chartConfiguration"`
	ConditionalFormatting *AnalysisTableConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title                 *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId              string                              `pulumi:"visualId"`
}

// AnalysisTableVisualInput is an input type that accepts AnalysisTableVisualArgs and AnalysisTableVisualOutput values.
// You can construct a concrete instance of `AnalysisTableVisualInput` via:
//
//	AnalysisTableVisualArgs{...}
type AnalysisTableVisualInput interface {
	pulumi.Input

	ToAnalysisTableVisualOutput() AnalysisTableVisualOutput
	ToAnalysisTableVisualOutputWithContext(context.Context) AnalysisTableVisualOutput
}

type AnalysisTableVisualArgs struct {
	Actions               AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration    AnalysisTableConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ConditionalFormatting AnalysisTableConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title                 AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId              pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisTableVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableVisual)(nil)).Elem()
}

func (i AnalysisTableVisualArgs) ToAnalysisTableVisualOutput() AnalysisTableVisualOutput {
	return i.ToAnalysisTableVisualOutputWithContext(context.Background())
}

func (i AnalysisTableVisualArgs) ToAnalysisTableVisualOutputWithContext(ctx context.Context) AnalysisTableVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableVisualOutput)
}

func (i AnalysisTableVisualArgs) ToAnalysisTableVisualPtrOutput() AnalysisTableVisualPtrOutput {
	return i.ToAnalysisTableVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisTableVisualArgs) ToAnalysisTableVisualPtrOutputWithContext(ctx context.Context) AnalysisTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableVisualOutput).ToAnalysisTableVisualPtrOutputWithContext(ctx)
}

// AnalysisTableVisualPtrInput is an input type that accepts AnalysisTableVisualArgs, AnalysisTableVisualPtr and AnalysisTableVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisTableVisualPtrInput` via:
//
//	        AnalysisTableVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisTableVisualPtrInput interface {
	pulumi.Input

	ToAnalysisTableVisualPtrOutput() AnalysisTableVisualPtrOutput
	ToAnalysisTableVisualPtrOutputWithContext(context.Context) AnalysisTableVisualPtrOutput
}

type analysisTableVisualPtrType AnalysisTableVisualArgs

func AnalysisTableVisualPtr(v *AnalysisTableVisualArgs) AnalysisTableVisualPtrInput {
	return (*analysisTableVisualPtrType)(v)
}

func (*analysisTableVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableVisual)(nil)).Elem()
}

func (i *analysisTableVisualPtrType) ToAnalysisTableVisualPtrOutput() AnalysisTableVisualPtrOutput {
	return i.ToAnalysisTableVisualPtrOutputWithContext(context.Background())
}

func (i *analysisTableVisualPtrType) ToAnalysisTableVisualPtrOutputWithContext(ctx context.Context) AnalysisTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTableVisualPtrOutput)
}

type AnalysisTableVisualOutput struct{ *pulumi.OutputState }

func (AnalysisTableVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableVisual)(nil)).Elem()
}

func (o AnalysisTableVisualOutput) ToAnalysisTableVisualOutput() AnalysisTableVisualOutput {
	return o
}

func (o AnalysisTableVisualOutput) ToAnalysisTableVisualOutputWithContext(ctx context.Context) AnalysisTableVisualOutput {
	return o
}

func (o AnalysisTableVisualOutput) ToAnalysisTableVisualPtrOutput() AnalysisTableVisualPtrOutput {
	return o.ToAnalysisTableVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisTableVisualOutput) ToAnalysisTableVisualPtrOutputWithContext(ctx context.Context) AnalysisTableVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableVisual) *AnalysisTableVisual {
		return &v
	}).(AnalysisTableVisualPtrOutput)
}

func (o AnalysisTableVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisTableVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisTableVisualOutput) ChartConfiguration() AnalysisTableConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTableVisual) *AnalysisTableConfiguration { return v.ChartConfiguration }).(AnalysisTableConfigurationPtrOutput)
}

func (o AnalysisTableVisualOutput) ConditionalFormatting() AnalysisTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v AnalysisTableVisual) *AnalysisTableConditionalFormatting { return v.ConditionalFormatting }).(AnalysisTableConditionalFormattingPtrOutput)
}

func (o AnalysisTableVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisTableVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTableVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisTableVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTableVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisTableVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableVisual)(nil)).Elem()
}

func (o AnalysisTableVisualPtrOutput) ToAnalysisTableVisualPtrOutput() AnalysisTableVisualPtrOutput {
	return o
}

func (o AnalysisTableVisualPtrOutput) ToAnalysisTableVisualPtrOutputWithContext(ctx context.Context) AnalysisTableVisualPtrOutput {
	return o
}

func (o AnalysisTableVisualPtrOutput) Elem() AnalysisTableVisualOutput {
	return o.ApplyT(func(v *AnalysisTableVisual) AnalysisTableVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisTableVisual
		return ret
	}).(AnalysisTableVisualOutput)
}

func (o AnalysisTableVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisTableVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisTableVisualPtrOutput) ChartConfiguration() AnalysisTableConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTableVisual) *AnalysisTableConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisTableConfigurationPtrOutput)
}

func (o AnalysisTableVisualPtrOutput) ConditionalFormatting() AnalysisTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *AnalysisTableVisual) *AnalysisTableConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(AnalysisTableConditionalFormattingPtrOutput)
}

func (o AnalysisTableVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisTableVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTableVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisTableVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTableVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// AnalysisTagInput is an input type that accepts AnalysisTagArgs and AnalysisTagOutput values.
// You can construct a concrete instance of `AnalysisTagInput` via:
//
//	AnalysisTagArgs{...}
type AnalysisTagInput interface {
	pulumi.Input

	ToAnalysisTagOutput() AnalysisTagOutput
	ToAnalysisTagOutputWithContext(context.Context) AnalysisTagOutput
}

type AnalysisTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AnalysisTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTag)(nil)).Elem()
}

func (i AnalysisTagArgs) ToAnalysisTagOutput() AnalysisTagOutput {
	return i.ToAnalysisTagOutputWithContext(context.Background())
}

func (i AnalysisTagArgs) ToAnalysisTagOutputWithContext(ctx context.Context) AnalysisTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTagOutput)
}

// AnalysisTagArrayInput is an input type that accepts AnalysisTagArray and AnalysisTagArrayOutput values.
// You can construct a concrete instance of `AnalysisTagArrayInput` via:
//
//	AnalysisTagArray{ AnalysisTagArgs{...} }
type AnalysisTagArrayInput interface {
	pulumi.Input

	ToAnalysisTagArrayOutput() AnalysisTagArrayOutput
	ToAnalysisTagArrayOutputWithContext(context.Context) AnalysisTagArrayOutput
}

type AnalysisTagArray []AnalysisTagInput

func (AnalysisTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisTag)(nil)).Elem()
}

func (i AnalysisTagArray) ToAnalysisTagArrayOutput() AnalysisTagArrayOutput {
	return i.ToAnalysisTagArrayOutputWithContext(context.Background())
}

func (i AnalysisTagArray) ToAnalysisTagArrayOutputWithContext(ctx context.Context) AnalysisTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTagArrayOutput)
}

type AnalysisTagOutput struct{ *pulumi.OutputState }

func (AnalysisTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTag)(nil)).Elem()
}

func (o AnalysisTagOutput) ToAnalysisTagOutput() AnalysisTagOutput {
	return o
}

func (o AnalysisTagOutput) ToAnalysisTagOutputWithContext(ctx context.Context) AnalysisTagOutput {
	return o
}

func (o AnalysisTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o AnalysisTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTag) string { return v.Value }).(pulumi.StringOutput)
}

type AnalysisTagArrayOutput struct{ *pulumi.OutputState }

func (AnalysisTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisTag)(nil)).Elem()
}

func (o AnalysisTagArrayOutput) ToAnalysisTagArrayOutput() AnalysisTagArrayOutput {
	return o
}

func (o AnalysisTagArrayOutput) ToAnalysisTagArrayOutputWithContext(ctx context.Context) AnalysisTagArrayOutput {
	return o
}

func (o AnalysisTagArrayOutput) Index(i pulumi.IntInput) AnalysisTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisTag {
		return vs[0].([]AnalysisTag)[vs[1].(int)]
	}).(AnalysisTagOutput)
}

type AnalysisTextAreaControlDisplayOptions struct {
	PlaceholderOptions *AnalysisTextControlPlaceholderOptions `pulumi:"placeholderOptions"`
	TitleOptions       *AnalysisLabelOptions                  `pulumi:"titleOptions"`
}

// AnalysisTextAreaControlDisplayOptionsInput is an input type that accepts AnalysisTextAreaControlDisplayOptionsArgs and AnalysisTextAreaControlDisplayOptionsOutput values.
// You can construct a concrete instance of `AnalysisTextAreaControlDisplayOptionsInput` via:
//
//	AnalysisTextAreaControlDisplayOptionsArgs{...}
type AnalysisTextAreaControlDisplayOptionsInput interface {
	pulumi.Input

	ToAnalysisTextAreaControlDisplayOptionsOutput() AnalysisTextAreaControlDisplayOptionsOutput
	ToAnalysisTextAreaControlDisplayOptionsOutputWithContext(context.Context) AnalysisTextAreaControlDisplayOptionsOutput
}

type AnalysisTextAreaControlDisplayOptionsArgs struct {
	PlaceholderOptions AnalysisTextControlPlaceholderOptionsPtrInput `pulumi:"placeholderOptions"`
	TitleOptions       AnalysisLabelOptionsPtrInput                  `pulumi:"titleOptions"`
}

func (AnalysisTextAreaControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTextAreaControlDisplayOptions)(nil)).Elem()
}

func (i AnalysisTextAreaControlDisplayOptionsArgs) ToAnalysisTextAreaControlDisplayOptionsOutput() AnalysisTextAreaControlDisplayOptionsOutput {
	return i.ToAnalysisTextAreaControlDisplayOptionsOutputWithContext(context.Background())
}

func (i AnalysisTextAreaControlDisplayOptionsArgs) ToAnalysisTextAreaControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisTextAreaControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextAreaControlDisplayOptionsOutput)
}

func (i AnalysisTextAreaControlDisplayOptionsArgs) ToAnalysisTextAreaControlDisplayOptionsPtrOutput() AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return i.ToAnalysisTextAreaControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTextAreaControlDisplayOptionsArgs) ToAnalysisTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextAreaControlDisplayOptionsOutput).ToAnalysisTextAreaControlDisplayOptionsPtrOutputWithContext(ctx)
}

// AnalysisTextAreaControlDisplayOptionsPtrInput is an input type that accepts AnalysisTextAreaControlDisplayOptionsArgs, AnalysisTextAreaControlDisplayOptionsPtr and AnalysisTextAreaControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTextAreaControlDisplayOptionsPtrInput` via:
//
//	        AnalysisTextAreaControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTextAreaControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTextAreaControlDisplayOptionsPtrOutput() AnalysisTextAreaControlDisplayOptionsPtrOutput
	ToAnalysisTextAreaControlDisplayOptionsPtrOutputWithContext(context.Context) AnalysisTextAreaControlDisplayOptionsPtrOutput
}

type analysisTextAreaControlDisplayOptionsPtrType AnalysisTextAreaControlDisplayOptionsArgs

func AnalysisTextAreaControlDisplayOptionsPtr(v *AnalysisTextAreaControlDisplayOptionsArgs) AnalysisTextAreaControlDisplayOptionsPtrInput {
	return (*analysisTextAreaControlDisplayOptionsPtrType)(v)
}

func (*analysisTextAreaControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTextAreaControlDisplayOptions)(nil)).Elem()
}

func (i *analysisTextAreaControlDisplayOptionsPtrType) ToAnalysisTextAreaControlDisplayOptionsPtrOutput() AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return i.ToAnalysisTextAreaControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTextAreaControlDisplayOptionsPtrType) ToAnalysisTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextAreaControlDisplayOptionsPtrOutput)
}

type AnalysisTextAreaControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTextAreaControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTextAreaControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisTextAreaControlDisplayOptionsOutput) ToAnalysisTextAreaControlDisplayOptionsOutput() AnalysisTextAreaControlDisplayOptionsOutput {
	return o
}

func (o AnalysisTextAreaControlDisplayOptionsOutput) ToAnalysisTextAreaControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisTextAreaControlDisplayOptionsOutput {
	return o
}

func (o AnalysisTextAreaControlDisplayOptionsOutput) ToAnalysisTextAreaControlDisplayOptionsPtrOutput() AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return o.ToAnalysisTextAreaControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTextAreaControlDisplayOptionsOutput) ToAnalysisTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTextAreaControlDisplayOptions) *AnalysisTextAreaControlDisplayOptions {
		return &v
	}).(AnalysisTextAreaControlDisplayOptionsPtrOutput)
}

func (o AnalysisTextAreaControlDisplayOptionsOutput) PlaceholderOptions() AnalysisTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTextAreaControlDisplayOptions) *AnalysisTextControlPlaceholderOptions {
		return v.PlaceholderOptions
	}).(AnalysisTextControlPlaceholderOptionsPtrOutput)
}

func (o AnalysisTextAreaControlDisplayOptionsOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTextAreaControlDisplayOptions) *AnalysisLabelOptions { return v.TitleOptions }).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisTextAreaControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTextAreaControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTextAreaControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisTextAreaControlDisplayOptionsPtrOutput) ToAnalysisTextAreaControlDisplayOptionsPtrOutput() AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisTextAreaControlDisplayOptionsPtrOutput) ToAnalysisTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextAreaControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisTextAreaControlDisplayOptionsPtrOutput) Elem() AnalysisTextAreaControlDisplayOptionsOutput {
	return o.ApplyT(func(v *AnalysisTextAreaControlDisplayOptions) AnalysisTextAreaControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTextAreaControlDisplayOptions
		return ret
	}).(AnalysisTextAreaControlDisplayOptionsOutput)
}

func (o AnalysisTextAreaControlDisplayOptionsPtrOutput) PlaceholderOptions() AnalysisTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTextAreaControlDisplayOptions) *AnalysisTextControlPlaceholderOptions {
		if v == nil {
			return nil
		}
		return v.PlaceholderOptions
	}).(AnalysisTextControlPlaceholderOptionsPtrOutput)
}

func (o AnalysisTextAreaControlDisplayOptionsPtrOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTextAreaControlDisplayOptions) *AnalysisLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisTextConditionalFormat struct {
	BackgroundColor *AnalysisConditionalFormattingColor `pulumi:"backgroundColor"`
	Icon            *AnalysisConditionalFormattingIcon  `pulumi:"icon"`
	TextColor       *AnalysisConditionalFormattingColor `pulumi:"textColor"`
}

// AnalysisTextConditionalFormatInput is an input type that accepts AnalysisTextConditionalFormatArgs and AnalysisTextConditionalFormatOutput values.
// You can construct a concrete instance of `AnalysisTextConditionalFormatInput` via:
//
//	AnalysisTextConditionalFormatArgs{...}
type AnalysisTextConditionalFormatInput interface {
	pulumi.Input

	ToAnalysisTextConditionalFormatOutput() AnalysisTextConditionalFormatOutput
	ToAnalysisTextConditionalFormatOutputWithContext(context.Context) AnalysisTextConditionalFormatOutput
}

type AnalysisTextConditionalFormatArgs struct {
	BackgroundColor AnalysisConditionalFormattingColorPtrInput `pulumi:"backgroundColor"`
	Icon            AnalysisConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor       AnalysisConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (AnalysisTextConditionalFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTextConditionalFormat)(nil)).Elem()
}

func (i AnalysisTextConditionalFormatArgs) ToAnalysisTextConditionalFormatOutput() AnalysisTextConditionalFormatOutput {
	return i.ToAnalysisTextConditionalFormatOutputWithContext(context.Background())
}

func (i AnalysisTextConditionalFormatArgs) ToAnalysisTextConditionalFormatOutputWithContext(ctx context.Context) AnalysisTextConditionalFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextConditionalFormatOutput)
}

func (i AnalysisTextConditionalFormatArgs) ToAnalysisTextConditionalFormatPtrOutput() AnalysisTextConditionalFormatPtrOutput {
	return i.ToAnalysisTextConditionalFormatPtrOutputWithContext(context.Background())
}

func (i AnalysisTextConditionalFormatArgs) ToAnalysisTextConditionalFormatPtrOutputWithContext(ctx context.Context) AnalysisTextConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextConditionalFormatOutput).ToAnalysisTextConditionalFormatPtrOutputWithContext(ctx)
}

// AnalysisTextConditionalFormatPtrInput is an input type that accepts AnalysisTextConditionalFormatArgs, AnalysisTextConditionalFormatPtr and AnalysisTextConditionalFormatPtrOutput values.
// You can construct a concrete instance of `AnalysisTextConditionalFormatPtrInput` via:
//
//	        AnalysisTextConditionalFormatArgs{...}
//
//	or:
//
//	        nil
type AnalysisTextConditionalFormatPtrInput interface {
	pulumi.Input

	ToAnalysisTextConditionalFormatPtrOutput() AnalysisTextConditionalFormatPtrOutput
	ToAnalysisTextConditionalFormatPtrOutputWithContext(context.Context) AnalysisTextConditionalFormatPtrOutput
}

type analysisTextConditionalFormatPtrType AnalysisTextConditionalFormatArgs

func AnalysisTextConditionalFormatPtr(v *AnalysisTextConditionalFormatArgs) AnalysisTextConditionalFormatPtrInput {
	return (*analysisTextConditionalFormatPtrType)(v)
}

func (*analysisTextConditionalFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTextConditionalFormat)(nil)).Elem()
}

func (i *analysisTextConditionalFormatPtrType) ToAnalysisTextConditionalFormatPtrOutput() AnalysisTextConditionalFormatPtrOutput {
	return i.ToAnalysisTextConditionalFormatPtrOutputWithContext(context.Background())
}

func (i *analysisTextConditionalFormatPtrType) ToAnalysisTextConditionalFormatPtrOutputWithContext(ctx context.Context) AnalysisTextConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextConditionalFormatPtrOutput)
}

type AnalysisTextConditionalFormatOutput struct{ *pulumi.OutputState }

func (AnalysisTextConditionalFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTextConditionalFormat)(nil)).Elem()
}

func (o AnalysisTextConditionalFormatOutput) ToAnalysisTextConditionalFormatOutput() AnalysisTextConditionalFormatOutput {
	return o
}

func (o AnalysisTextConditionalFormatOutput) ToAnalysisTextConditionalFormatOutputWithContext(ctx context.Context) AnalysisTextConditionalFormatOutput {
	return o
}

func (o AnalysisTextConditionalFormatOutput) ToAnalysisTextConditionalFormatPtrOutput() AnalysisTextConditionalFormatPtrOutput {
	return o.ToAnalysisTextConditionalFormatPtrOutputWithContext(context.Background())
}

func (o AnalysisTextConditionalFormatOutput) ToAnalysisTextConditionalFormatPtrOutputWithContext(ctx context.Context) AnalysisTextConditionalFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTextConditionalFormat) *AnalysisTextConditionalFormat {
		return &v
	}).(AnalysisTextConditionalFormatPtrOutput)
}

func (o AnalysisTextConditionalFormatOutput) BackgroundColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v AnalysisTextConditionalFormat) *AnalysisConditionalFormattingColor { return v.BackgroundColor }).(AnalysisConditionalFormattingColorPtrOutput)
}

func (o AnalysisTextConditionalFormatOutput) Icon() AnalysisConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v AnalysisTextConditionalFormat) *AnalysisConditionalFormattingIcon { return v.Icon }).(AnalysisConditionalFormattingIconPtrOutput)
}

func (o AnalysisTextConditionalFormatOutput) TextColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v AnalysisTextConditionalFormat) *AnalysisConditionalFormattingColor { return v.TextColor }).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisTextConditionalFormatPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTextConditionalFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTextConditionalFormat)(nil)).Elem()
}

func (o AnalysisTextConditionalFormatPtrOutput) ToAnalysisTextConditionalFormatPtrOutput() AnalysisTextConditionalFormatPtrOutput {
	return o
}

func (o AnalysisTextConditionalFormatPtrOutput) ToAnalysisTextConditionalFormatPtrOutputWithContext(ctx context.Context) AnalysisTextConditionalFormatPtrOutput {
	return o
}

func (o AnalysisTextConditionalFormatPtrOutput) Elem() AnalysisTextConditionalFormatOutput {
	return o.ApplyT(func(v *AnalysisTextConditionalFormat) AnalysisTextConditionalFormat {
		if v != nil {
			return *v
		}
		var ret AnalysisTextConditionalFormat
		return ret
	}).(AnalysisTextConditionalFormatOutput)
}

func (o AnalysisTextConditionalFormatPtrOutput) BackgroundColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *AnalysisTextConditionalFormat) *AnalysisConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

func (o AnalysisTextConditionalFormatPtrOutput) Icon() AnalysisConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *AnalysisTextConditionalFormat) *AnalysisConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(AnalysisConditionalFormattingIconPtrOutput)
}

func (o AnalysisTextConditionalFormatPtrOutput) TextColor() AnalysisConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *AnalysisTextConditionalFormat) *AnalysisConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(AnalysisConditionalFormattingColorPtrOutput)
}

type AnalysisTextControlPlaceholderOptions struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisTextControlPlaceholderOptionsInput is an input type that accepts AnalysisTextControlPlaceholderOptionsArgs and AnalysisTextControlPlaceholderOptionsOutput values.
// You can construct a concrete instance of `AnalysisTextControlPlaceholderOptionsInput` via:
//
//	AnalysisTextControlPlaceholderOptionsArgs{...}
type AnalysisTextControlPlaceholderOptionsInput interface {
	pulumi.Input

	ToAnalysisTextControlPlaceholderOptionsOutput() AnalysisTextControlPlaceholderOptionsOutput
	ToAnalysisTextControlPlaceholderOptionsOutputWithContext(context.Context) AnalysisTextControlPlaceholderOptionsOutput
}

type AnalysisTextControlPlaceholderOptionsArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisTextControlPlaceholderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTextControlPlaceholderOptions)(nil)).Elem()
}

func (i AnalysisTextControlPlaceholderOptionsArgs) ToAnalysisTextControlPlaceholderOptionsOutput() AnalysisTextControlPlaceholderOptionsOutput {
	return i.ToAnalysisTextControlPlaceholderOptionsOutputWithContext(context.Background())
}

func (i AnalysisTextControlPlaceholderOptionsArgs) ToAnalysisTextControlPlaceholderOptionsOutputWithContext(ctx context.Context) AnalysisTextControlPlaceholderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextControlPlaceholderOptionsOutput)
}

func (i AnalysisTextControlPlaceholderOptionsArgs) ToAnalysisTextControlPlaceholderOptionsPtrOutput() AnalysisTextControlPlaceholderOptionsPtrOutput {
	return i.ToAnalysisTextControlPlaceholderOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTextControlPlaceholderOptionsArgs) ToAnalysisTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextControlPlaceholderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextControlPlaceholderOptionsOutput).ToAnalysisTextControlPlaceholderOptionsPtrOutputWithContext(ctx)
}

// AnalysisTextControlPlaceholderOptionsPtrInput is an input type that accepts AnalysisTextControlPlaceholderOptionsArgs, AnalysisTextControlPlaceholderOptionsPtr and AnalysisTextControlPlaceholderOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTextControlPlaceholderOptionsPtrInput` via:
//
//	        AnalysisTextControlPlaceholderOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTextControlPlaceholderOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTextControlPlaceholderOptionsPtrOutput() AnalysisTextControlPlaceholderOptionsPtrOutput
	ToAnalysisTextControlPlaceholderOptionsPtrOutputWithContext(context.Context) AnalysisTextControlPlaceholderOptionsPtrOutput
}

type analysisTextControlPlaceholderOptionsPtrType AnalysisTextControlPlaceholderOptionsArgs

func AnalysisTextControlPlaceholderOptionsPtr(v *AnalysisTextControlPlaceholderOptionsArgs) AnalysisTextControlPlaceholderOptionsPtrInput {
	return (*analysisTextControlPlaceholderOptionsPtrType)(v)
}

func (*analysisTextControlPlaceholderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTextControlPlaceholderOptions)(nil)).Elem()
}

func (i *analysisTextControlPlaceholderOptionsPtrType) ToAnalysisTextControlPlaceholderOptionsPtrOutput() AnalysisTextControlPlaceholderOptionsPtrOutput {
	return i.ToAnalysisTextControlPlaceholderOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTextControlPlaceholderOptionsPtrType) ToAnalysisTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextControlPlaceholderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextControlPlaceholderOptionsPtrOutput)
}

type AnalysisTextControlPlaceholderOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTextControlPlaceholderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTextControlPlaceholderOptions)(nil)).Elem()
}

func (o AnalysisTextControlPlaceholderOptionsOutput) ToAnalysisTextControlPlaceholderOptionsOutput() AnalysisTextControlPlaceholderOptionsOutput {
	return o
}

func (o AnalysisTextControlPlaceholderOptionsOutput) ToAnalysisTextControlPlaceholderOptionsOutputWithContext(ctx context.Context) AnalysisTextControlPlaceholderOptionsOutput {
	return o
}

func (o AnalysisTextControlPlaceholderOptionsOutput) ToAnalysisTextControlPlaceholderOptionsPtrOutput() AnalysisTextControlPlaceholderOptionsPtrOutput {
	return o.ToAnalysisTextControlPlaceholderOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTextControlPlaceholderOptionsOutput) ToAnalysisTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTextControlPlaceholderOptions) *AnalysisTextControlPlaceholderOptions {
		return &v
	}).(AnalysisTextControlPlaceholderOptionsPtrOutput)
}

func (o AnalysisTextControlPlaceholderOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisTextControlPlaceholderOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisTextControlPlaceholderOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTextControlPlaceholderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTextControlPlaceholderOptions)(nil)).Elem()
}

func (o AnalysisTextControlPlaceholderOptionsPtrOutput) ToAnalysisTextControlPlaceholderOptionsPtrOutput() AnalysisTextControlPlaceholderOptionsPtrOutput {
	return o
}

func (o AnalysisTextControlPlaceholderOptionsPtrOutput) ToAnalysisTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextControlPlaceholderOptionsPtrOutput {
	return o
}

func (o AnalysisTextControlPlaceholderOptionsPtrOutput) Elem() AnalysisTextControlPlaceholderOptionsOutput {
	return o.ApplyT(func(v *AnalysisTextControlPlaceholderOptions) AnalysisTextControlPlaceholderOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTextControlPlaceholderOptions
		return ret
	}).(AnalysisTextControlPlaceholderOptionsOutput)
}

func (o AnalysisTextControlPlaceholderOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisTextControlPlaceholderOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisTextFieldControlDisplayOptions struct {
	PlaceholderOptions *AnalysisTextControlPlaceholderOptions `pulumi:"placeholderOptions"`
	TitleOptions       *AnalysisLabelOptions                  `pulumi:"titleOptions"`
}

// AnalysisTextFieldControlDisplayOptionsInput is an input type that accepts AnalysisTextFieldControlDisplayOptionsArgs and AnalysisTextFieldControlDisplayOptionsOutput values.
// You can construct a concrete instance of `AnalysisTextFieldControlDisplayOptionsInput` via:
//
//	AnalysisTextFieldControlDisplayOptionsArgs{...}
type AnalysisTextFieldControlDisplayOptionsInput interface {
	pulumi.Input

	ToAnalysisTextFieldControlDisplayOptionsOutput() AnalysisTextFieldControlDisplayOptionsOutput
	ToAnalysisTextFieldControlDisplayOptionsOutputWithContext(context.Context) AnalysisTextFieldControlDisplayOptionsOutput
}

type AnalysisTextFieldControlDisplayOptionsArgs struct {
	PlaceholderOptions AnalysisTextControlPlaceholderOptionsPtrInput `pulumi:"placeholderOptions"`
	TitleOptions       AnalysisLabelOptionsPtrInput                  `pulumi:"titleOptions"`
}

func (AnalysisTextFieldControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTextFieldControlDisplayOptions)(nil)).Elem()
}

func (i AnalysisTextFieldControlDisplayOptionsArgs) ToAnalysisTextFieldControlDisplayOptionsOutput() AnalysisTextFieldControlDisplayOptionsOutput {
	return i.ToAnalysisTextFieldControlDisplayOptionsOutputWithContext(context.Background())
}

func (i AnalysisTextFieldControlDisplayOptionsArgs) ToAnalysisTextFieldControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisTextFieldControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextFieldControlDisplayOptionsOutput)
}

func (i AnalysisTextFieldControlDisplayOptionsArgs) ToAnalysisTextFieldControlDisplayOptionsPtrOutput() AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return i.ToAnalysisTextFieldControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTextFieldControlDisplayOptionsArgs) ToAnalysisTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextFieldControlDisplayOptionsOutput).ToAnalysisTextFieldControlDisplayOptionsPtrOutputWithContext(ctx)
}

// AnalysisTextFieldControlDisplayOptionsPtrInput is an input type that accepts AnalysisTextFieldControlDisplayOptionsArgs, AnalysisTextFieldControlDisplayOptionsPtr and AnalysisTextFieldControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTextFieldControlDisplayOptionsPtrInput` via:
//
//	        AnalysisTextFieldControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTextFieldControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTextFieldControlDisplayOptionsPtrOutput() AnalysisTextFieldControlDisplayOptionsPtrOutput
	ToAnalysisTextFieldControlDisplayOptionsPtrOutputWithContext(context.Context) AnalysisTextFieldControlDisplayOptionsPtrOutput
}

type analysisTextFieldControlDisplayOptionsPtrType AnalysisTextFieldControlDisplayOptionsArgs

func AnalysisTextFieldControlDisplayOptionsPtr(v *AnalysisTextFieldControlDisplayOptionsArgs) AnalysisTextFieldControlDisplayOptionsPtrInput {
	return (*analysisTextFieldControlDisplayOptionsPtrType)(v)
}

func (*analysisTextFieldControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTextFieldControlDisplayOptions)(nil)).Elem()
}

func (i *analysisTextFieldControlDisplayOptionsPtrType) ToAnalysisTextFieldControlDisplayOptionsPtrOutput() AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return i.ToAnalysisTextFieldControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTextFieldControlDisplayOptionsPtrType) ToAnalysisTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTextFieldControlDisplayOptionsPtrOutput)
}

type AnalysisTextFieldControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTextFieldControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTextFieldControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisTextFieldControlDisplayOptionsOutput) ToAnalysisTextFieldControlDisplayOptionsOutput() AnalysisTextFieldControlDisplayOptionsOutput {
	return o
}

func (o AnalysisTextFieldControlDisplayOptionsOutput) ToAnalysisTextFieldControlDisplayOptionsOutputWithContext(ctx context.Context) AnalysisTextFieldControlDisplayOptionsOutput {
	return o
}

func (o AnalysisTextFieldControlDisplayOptionsOutput) ToAnalysisTextFieldControlDisplayOptionsPtrOutput() AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return o.ToAnalysisTextFieldControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTextFieldControlDisplayOptionsOutput) ToAnalysisTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTextFieldControlDisplayOptions) *AnalysisTextFieldControlDisplayOptions {
		return &v
	}).(AnalysisTextFieldControlDisplayOptionsPtrOutput)
}

func (o AnalysisTextFieldControlDisplayOptionsOutput) PlaceholderOptions() AnalysisTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTextFieldControlDisplayOptions) *AnalysisTextControlPlaceholderOptions {
		return v.PlaceholderOptions
	}).(AnalysisTextControlPlaceholderOptionsPtrOutput)
}

func (o AnalysisTextFieldControlDisplayOptionsOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTextFieldControlDisplayOptions) *AnalysisLabelOptions { return v.TitleOptions }).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisTextFieldControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTextFieldControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTextFieldControlDisplayOptions)(nil)).Elem()
}

func (o AnalysisTextFieldControlDisplayOptionsPtrOutput) ToAnalysisTextFieldControlDisplayOptionsPtrOutput() AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisTextFieldControlDisplayOptionsPtrOutput) ToAnalysisTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) AnalysisTextFieldControlDisplayOptionsPtrOutput {
	return o
}

func (o AnalysisTextFieldControlDisplayOptionsPtrOutput) Elem() AnalysisTextFieldControlDisplayOptionsOutput {
	return o.ApplyT(func(v *AnalysisTextFieldControlDisplayOptions) AnalysisTextFieldControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTextFieldControlDisplayOptions
		return ret
	}).(AnalysisTextFieldControlDisplayOptionsOutput)
}

func (o AnalysisTextFieldControlDisplayOptionsPtrOutput) PlaceholderOptions() AnalysisTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTextFieldControlDisplayOptions) *AnalysisTextControlPlaceholderOptions {
		if v == nil {
			return nil
		}
		return v.PlaceholderOptions
	}).(AnalysisTextControlPlaceholderOptionsPtrOutput)
}

func (o AnalysisTextFieldControlDisplayOptionsPtrOutput) TitleOptions() AnalysisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTextFieldControlDisplayOptions) *AnalysisLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(AnalysisLabelOptionsPtrOutput)
}

type AnalysisThousandSeparatorOptions struct {
	Symbol     *AnalysisNumericSeparatorSymbol `pulumi:"symbol"`
	Visibility *AnalysisVisibility             `pulumi:"visibility"`
}

// AnalysisThousandSeparatorOptionsInput is an input type that accepts AnalysisThousandSeparatorOptionsArgs and AnalysisThousandSeparatorOptionsOutput values.
// You can construct a concrete instance of `AnalysisThousandSeparatorOptionsInput` via:
//
//	AnalysisThousandSeparatorOptionsArgs{...}
type AnalysisThousandSeparatorOptionsInput interface {
	pulumi.Input

	ToAnalysisThousandSeparatorOptionsOutput() AnalysisThousandSeparatorOptionsOutput
	ToAnalysisThousandSeparatorOptionsOutputWithContext(context.Context) AnalysisThousandSeparatorOptionsOutput
}

type AnalysisThousandSeparatorOptionsArgs struct {
	Symbol     AnalysisNumericSeparatorSymbolPtrInput `pulumi:"symbol"`
	Visibility AnalysisVisibilityPtrInput             `pulumi:"visibility"`
}

func (AnalysisThousandSeparatorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisThousandSeparatorOptions)(nil)).Elem()
}

func (i AnalysisThousandSeparatorOptionsArgs) ToAnalysisThousandSeparatorOptionsOutput() AnalysisThousandSeparatorOptionsOutput {
	return i.ToAnalysisThousandSeparatorOptionsOutputWithContext(context.Background())
}

func (i AnalysisThousandSeparatorOptionsArgs) ToAnalysisThousandSeparatorOptionsOutputWithContext(ctx context.Context) AnalysisThousandSeparatorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisThousandSeparatorOptionsOutput)
}

func (i AnalysisThousandSeparatorOptionsArgs) ToAnalysisThousandSeparatorOptionsPtrOutput() AnalysisThousandSeparatorOptionsPtrOutput {
	return i.ToAnalysisThousandSeparatorOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisThousandSeparatorOptionsArgs) ToAnalysisThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) AnalysisThousandSeparatorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisThousandSeparatorOptionsOutput).ToAnalysisThousandSeparatorOptionsPtrOutputWithContext(ctx)
}

// AnalysisThousandSeparatorOptionsPtrInput is an input type that accepts AnalysisThousandSeparatorOptionsArgs, AnalysisThousandSeparatorOptionsPtr and AnalysisThousandSeparatorOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisThousandSeparatorOptionsPtrInput` via:
//
//	        AnalysisThousandSeparatorOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisThousandSeparatorOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisThousandSeparatorOptionsPtrOutput() AnalysisThousandSeparatorOptionsPtrOutput
	ToAnalysisThousandSeparatorOptionsPtrOutputWithContext(context.Context) AnalysisThousandSeparatorOptionsPtrOutput
}

type analysisThousandSeparatorOptionsPtrType AnalysisThousandSeparatorOptionsArgs

func AnalysisThousandSeparatorOptionsPtr(v *AnalysisThousandSeparatorOptionsArgs) AnalysisThousandSeparatorOptionsPtrInput {
	return (*analysisThousandSeparatorOptionsPtrType)(v)
}

func (*analysisThousandSeparatorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisThousandSeparatorOptions)(nil)).Elem()
}

func (i *analysisThousandSeparatorOptionsPtrType) ToAnalysisThousandSeparatorOptionsPtrOutput() AnalysisThousandSeparatorOptionsPtrOutput {
	return i.ToAnalysisThousandSeparatorOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisThousandSeparatorOptionsPtrType) ToAnalysisThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) AnalysisThousandSeparatorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisThousandSeparatorOptionsPtrOutput)
}

type AnalysisThousandSeparatorOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisThousandSeparatorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisThousandSeparatorOptions)(nil)).Elem()
}

func (o AnalysisThousandSeparatorOptionsOutput) ToAnalysisThousandSeparatorOptionsOutput() AnalysisThousandSeparatorOptionsOutput {
	return o
}

func (o AnalysisThousandSeparatorOptionsOutput) ToAnalysisThousandSeparatorOptionsOutputWithContext(ctx context.Context) AnalysisThousandSeparatorOptionsOutput {
	return o
}

func (o AnalysisThousandSeparatorOptionsOutput) ToAnalysisThousandSeparatorOptionsPtrOutput() AnalysisThousandSeparatorOptionsPtrOutput {
	return o.ToAnalysisThousandSeparatorOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisThousandSeparatorOptionsOutput) ToAnalysisThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) AnalysisThousandSeparatorOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisThousandSeparatorOptions) *AnalysisThousandSeparatorOptions {
		return &v
	}).(AnalysisThousandSeparatorOptionsPtrOutput)
}

func (o AnalysisThousandSeparatorOptionsOutput) Symbol() AnalysisNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v AnalysisThousandSeparatorOptions) *AnalysisNumericSeparatorSymbol { return v.Symbol }).(AnalysisNumericSeparatorSymbolPtrOutput)
}

func (o AnalysisThousandSeparatorOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisThousandSeparatorOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisThousandSeparatorOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisThousandSeparatorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisThousandSeparatorOptions)(nil)).Elem()
}

func (o AnalysisThousandSeparatorOptionsPtrOutput) ToAnalysisThousandSeparatorOptionsPtrOutput() AnalysisThousandSeparatorOptionsPtrOutput {
	return o
}

func (o AnalysisThousandSeparatorOptionsPtrOutput) ToAnalysisThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) AnalysisThousandSeparatorOptionsPtrOutput {
	return o
}

func (o AnalysisThousandSeparatorOptionsPtrOutput) Elem() AnalysisThousandSeparatorOptionsOutput {
	return o.ApplyT(func(v *AnalysisThousandSeparatorOptions) AnalysisThousandSeparatorOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisThousandSeparatorOptions
		return ret
	}).(AnalysisThousandSeparatorOptionsOutput)
}

func (o AnalysisThousandSeparatorOptionsPtrOutput) Symbol() AnalysisNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v *AnalysisThousandSeparatorOptions) *AnalysisNumericSeparatorSymbol {
		if v == nil {
			return nil
		}
		return v.Symbol
	}).(AnalysisNumericSeparatorSymbolPtrOutput)
}

func (o AnalysisThousandSeparatorOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisThousandSeparatorOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisTimeBasedForecastProperties struct {
	LowerBoundary      *float64 `pulumi:"lowerBoundary"`
	PeriodsBackward    *float64 `pulumi:"periodsBackward"`
	PeriodsForward     *float64 `pulumi:"periodsForward"`
	PredictionInterval *float64 `pulumi:"predictionInterval"`
	Seasonality        *float64 `pulumi:"seasonality"`
	UpperBoundary      *float64 `pulumi:"upperBoundary"`
}

// AnalysisTimeBasedForecastPropertiesInput is an input type that accepts AnalysisTimeBasedForecastPropertiesArgs and AnalysisTimeBasedForecastPropertiesOutput values.
// You can construct a concrete instance of `AnalysisTimeBasedForecastPropertiesInput` via:
//
//	AnalysisTimeBasedForecastPropertiesArgs{...}
type AnalysisTimeBasedForecastPropertiesInput interface {
	pulumi.Input

	ToAnalysisTimeBasedForecastPropertiesOutput() AnalysisTimeBasedForecastPropertiesOutput
	ToAnalysisTimeBasedForecastPropertiesOutputWithContext(context.Context) AnalysisTimeBasedForecastPropertiesOutput
}

type AnalysisTimeBasedForecastPropertiesArgs struct {
	LowerBoundary      pulumi.Float64PtrInput `pulumi:"lowerBoundary"`
	PeriodsBackward    pulumi.Float64PtrInput `pulumi:"periodsBackward"`
	PeriodsForward     pulumi.Float64PtrInput `pulumi:"periodsForward"`
	PredictionInterval pulumi.Float64PtrInput `pulumi:"predictionInterval"`
	Seasonality        pulumi.Float64PtrInput `pulumi:"seasonality"`
	UpperBoundary      pulumi.Float64PtrInput `pulumi:"upperBoundary"`
}

func (AnalysisTimeBasedForecastPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeBasedForecastProperties)(nil)).Elem()
}

func (i AnalysisTimeBasedForecastPropertiesArgs) ToAnalysisTimeBasedForecastPropertiesOutput() AnalysisTimeBasedForecastPropertiesOutput {
	return i.ToAnalysisTimeBasedForecastPropertiesOutputWithContext(context.Background())
}

func (i AnalysisTimeBasedForecastPropertiesArgs) ToAnalysisTimeBasedForecastPropertiesOutputWithContext(ctx context.Context) AnalysisTimeBasedForecastPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeBasedForecastPropertiesOutput)
}

func (i AnalysisTimeBasedForecastPropertiesArgs) ToAnalysisTimeBasedForecastPropertiesPtrOutput() AnalysisTimeBasedForecastPropertiesPtrOutput {
	return i.ToAnalysisTimeBasedForecastPropertiesPtrOutputWithContext(context.Background())
}

func (i AnalysisTimeBasedForecastPropertiesArgs) ToAnalysisTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) AnalysisTimeBasedForecastPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeBasedForecastPropertiesOutput).ToAnalysisTimeBasedForecastPropertiesPtrOutputWithContext(ctx)
}

// AnalysisTimeBasedForecastPropertiesPtrInput is an input type that accepts AnalysisTimeBasedForecastPropertiesArgs, AnalysisTimeBasedForecastPropertiesPtr and AnalysisTimeBasedForecastPropertiesPtrOutput values.
// You can construct a concrete instance of `AnalysisTimeBasedForecastPropertiesPtrInput` via:
//
//	        AnalysisTimeBasedForecastPropertiesArgs{...}
//
//	or:
//
//	        nil
type AnalysisTimeBasedForecastPropertiesPtrInput interface {
	pulumi.Input

	ToAnalysisTimeBasedForecastPropertiesPtrOutput() AnalysisTimeBasedForecastPropertiesPtrOutput
	ToAnalysisTimeBasedForecastPropertiesPtrOutputWithContext(context.Context) AnalysisTimeBasedForecastPropertiesPtrOutput
}

type analysisTimeBasedForecastPropertiesPtrType AnalysisTimeBasedForecastPropertiesArgs

func AnalysisTimeBasedForecastPropertiesPtr(v *AnalysisTimeBasedForecastPropertiesArgs) AnalysisTimeBasedForecastPropertiesPtrInput {
	return (*analysisTimeBasedForecastPropertiesPtrType)(v)
}

func (*analysisTimeBasedForecastPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeBasedForecastProperties)(nil)).Elem()
}

func (i *analysisTimeBasedForecastPropertiesPtrType) ToAnalysisTimeBasedForecastPropertiesPtrOutput() AnalysisTimeBasedForecastPropertiesPtrOutput {
	return i.ToAnalysisTimeBasedForecastPropertiesPtrOutputWithContext(context.Background())
}

func (i *analysisTimeBasedForecastPropertiesPtrType) ToAnalysisTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) AnalysisTimeBasedForecastPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeBasedForecastPropertiesPtrOutput)
}

type AnalysisTimeBasedForecastPropertiesOutput struct{ *pulumi.OutputState }

func (AnalysisTimeBasedForecastPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeBasedForecastProperties)(nil)).Elem()
}

func (o AnalysisTimeBasedForecastPropertiesOutput) ToAnalysisTimeBasedForecastPropertiesOutput() AnalysisTimeBasedForecastPropertiesOutput {
	return o
}

func (o AnalysisTimeBasedForecastPropertiesOutput) ToAnalysisTimeBasedForecastPropertiesOutputWithContext(ctx context.Context) AnalysisTimeBasedForecastPropertiesOutput {
	return o
}

func (o AnalysisTimeBasedForecastPropertiesOutput) ToAnalysisTimeBasedForecastPropertiesPtrOutput() AnalysisTimeBasedForecastPropertiesPtrOutput {
	return o.ToAnalysisTimeBasedForecastPropertiesPtrOutputWithContext(context.Background())
}

func (o AnalysisTimeBasedForecastPropertiesOutput) ToAnalysisTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) AnalysisTimeBasedForecastPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTimeBasedForecastProperties) *AnalysisTimeBasedForecastProperties {
		return &v
	}).(AnalysisTimeBasedForecastPropertiesPtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTimeBasedForecastProperties) *float64 { return v.LowerBoundary }).(pulumi.Float64PtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTimeBasedForecastProperties) *float64 { return v.PeriodsBackward }).(pulumi.Float64PtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTimeBasedForecastProperties) *float64 { return v.PeriodsForward }).(pulumi.Float64PtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTimeBasedForecastProperties) *float64 { return v.PredictionInterval }).(pulumi.Float64PtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesOutput) Seasonality() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTimeBasedForecastProperties) *float64 { return v.Seasonality }).(pulumi.Float64PtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTimeBasedForecastProperties) *float64 { return v.UpperBoundary }).(pulumi.Float64PtrOutput)
}

type AnalysisTimeBasedForecastPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTimeBasedForecastPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeBasedForecastProperties)(nil)).Elem()
}

func (o AnalysisTimeBasedForecastPropertiesPtrOutput) ToAnalysisTimeBasedForecastPropertiesPtrOutput() AnalysisTimeBasedForecastPropertiesPtrOutput {
	return o
}

func (o AnalysisTimeBasedForecastPropertiesPtrOutput) ToAnalysisTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) AnalysisTimeBasedForecastPropertiesPtrOutput {
	return o
}

func (o AnalysisTimeBasedForecastPropertiesPtrOutput) Elem() AnalysisTimeBasedForecastPropertiesOutput {
	return o.ApplyT(func(v *AnalysisTimeBasedForecastProperties) AnalysisTimeBasedForecastProperties {
		if v != nil {
			return *v
		}
		var ret AnalysisTimeBasedForecastProperties
		return ret
	}).(AnalysisTimeBasedForecastPropertiesOutput)
}

func (o AnalysisTimeBasedForecastPropertiesPtrOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.LowerBoundary
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesPtrOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsBackward
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesPtrOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsForward
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesPtrOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.PredictionInterval
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesPtrOutput) Seasonality() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Seasonality
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisTimeBasedForecastPropertiesPtrOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.UpperBoundary
	}).(pulumi.Float64PtrOutput)
}

type AnalysisTimeEqualityFilter struct {
	Column          AnalysisColumnIdentifier `pulumi:"column"`
	FilterId        string                   `pulumi:"filterId"`
	ParameterName   *string                  `pulumi:"parameterName"`
	TimeGranularity *AnalysisTimeGranularity `pulumi:"timeGranularity"`
	Value           *string                  `pulumi:"value"`
}

// AnalysisTimeEqualityFilterInput is an input type that accepts AnalysisTimeEqualityFilterArgs and AnalysisTimeEqualityFilterOutput values.
// You can construct a concrete instance of `AnalysisTimeEqualityFilterInput` via:
//
//	AnalysisTimeEqualityFilterArgs{...}
type AnalysisTimeEqualityFilterInput interface {
	pulumi.Input

	ToAnalysisTimeEqualityFilterOutput() AnalysisTimeEqualityFilterOutput
	ToAnalysisTimeEqualityFilterOutputWithContext(context.Context) AnalysisTimeEqualityFilterOutput
}

type AnalysisTimeEqualityFilterArgs struct {
	Column          AnalysisColumnIdentifierInput   `pulumi:"column"`
	FilterId        pulumi.StringInput              `pulumi:"filterId"`
	ParameterName   pulumi.StringPtrInput           `pulumi:"parameterName"`
	TimeGranularity AnalysisTimeGranularityPtrInput `pulumi:"timeGranularity"`
	Value           pulumi.StringPtrInput           `pulumi:"value"`
}

func (AnalysisTimeEqualityFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeEqualityFilter)(nil)).Elem()
}

func (i AnalysisTimeEqualityFilterArgs) ToAnalysisTimeEqualityFilterOutput() AnalysisTimeEqualityFilterOutput {
	return i.ToAnalysisTimeEqualityFilterOutputWithContext(context.Background())
}

func (i AnalysisTimeEqualityFilterArgs) ToAnalysisTimeEqualityFilterOutputWithContext(ctx context.Context) AnalysisTimeEqualityFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeEqualityFilterOutput)
}

func (i AnalysisTimeEqualityFilterArgs) ToAnalysisTimeEqualityFilterPtrOutput() AnalysisTimeEqualityFilterPtrOutput {
	return i.ToAnalysisTimeEqualityFilterPtrOutputWithContext(context.Background())
}

func (i AnalysisTimeEqualityFilterArgs) ToAnalysisTimeEqualityFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeEqualityFilterOutput).ToAnalysisTimeEqualityFilterPtrOutputWithContext(ctx)
}

// AnalysisTimeEqualityFilterPtrInput is an input type that accepts AnalysisTimeEqualityFilterArgs, AnalysisTimeEqualityFilterPtr and AnalysisTimeEqualityFilterPtrOutput values.
// You can construct a concrete instance of `AnalysisTimeEqualityFilterPtrInput` via:
//
//	        AnalysisTimeEqualityFilterArgs{...}
//
//	or:
//
//	        nil
type AnalysisTimeEqualityFilterPtrInput interface {
	pulumi.Input

	ToAnalysisTimeEqualityFilterPtrOutput() AnalysisTimeEqualityFilterPtrOutput
	ToAnalysisTimeEqualityFilterPtrOutputWithContext(context.Context) AnalysisTimeEqualityFilterPtrOutput
}

type analysisTimeEqualityFilterPtrType AnalysisTimeEqualityFilterArgs

func AnalysisTimeEqualityFilterPtr(v *AnalysisTimeEqualityFilterArgs) AnalysisTimeEqualityFilterPtrInput {
	return (*analysisTimeEqualityFilterPtrType)(v)
}

func (*analysisTimeEqualityFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeEqualityFilter)(nil)).Elem()
}

func (i *analysisTimeEqualityFilterPtrType) ToAnalysisTimeEqualityFilterPtrOutput() AnalysisTimeEqualityFilterPtrOutput {
	return i.ToAnalysisTimeEqualityFilterPtrOutputWithContext(context.Background())
}

func (i *analysisTimeEqualityFilterPtrType) ToAnalysisTimeEqualityFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeEqualityFilterPtrOutput)
}

type AnalysisTimeEqualityFilterOutput struct{ *pulumi.OutputState }

func (AnalysisTimeEqualityFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeEqualityFilter)(nil)).Elem()
}

func (o AnalysisTimeEqualityFilterOutput) ToAnalysisTimeEqualityFilterOutput() AnalysisTimeEqualityFilterOutput {
	return o
}

func (o AnalysisTimeEqualityFilterOutput) ToAnalysisTimeEqualityFilterOutputWithContext(ctx context.Context) AnalysisTimeEqualityFilterOutput {
	return o
}

func (o AnalysisTimeEqualityFilterOutput) ToAnalysisTimeEqualityFilterPtrOutput() AnalysisTimeEqualityFilterPtrOutput {
	return o.ToAnalysisTimeEqualityFilterPtrOutputWithContext(context.Background())
}

func (o AnalysisTimeEqualityFilterOutput) ToAnalysisTimeEqualityFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeEqualityFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTimeEqualityFilter) *AnalysisTimeEqualityFilter {
		return &v
	}).(AnalysisTimeEqualityFilterPtrOutput)
}

func (o AnalysisTimeEqualityFilterOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisTimeEqualityFilter) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisTimeEqualityFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTimeEqualityFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o AnalysisTimeEqualityFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTimeEqualityFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o AnalysisTimeEqualityFilterOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v AnalysisTimeEqualityFilter) *AnalysisTimeGranularity { return v.TimeGranularity }).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisTimeEqualityFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTimeEqualityFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AnalysisTimeEqualityFilterPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTimeEqualityFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeEqualityFilter)(nil)).Elem()
}

func (o AnalysisTimeEqualityFilterPtrOutput) ToAnalysisTimeEqualityFilterPtrOutput() AnalysisTimeEqualityFilterPtrOutput {
	return o
}

func (o AnalysisTimeEqualityFilterPtrOutput) ToAnalysisTimeEqualityFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeEqualityFilterPtrOutput {
	return o
}

func (o AnalysisTimeEqualityFilterPtrOutput) Elem() AnalysisTimeEqualityFilterOutput {
	return o.ApplyT(func(v *AnalysisTimeEqualityFilter) AnalysisTimeEqualityFilter {
		if v != nil {
			return *v
		}
		var ret AnalysisTimeEqualityFilter
		return ret
	}).(AnalysisTimeEqualityFilterOutput)
}

func (o AnalysisTimeEqualityFilterPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeEqualityFilter) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisTimeEqualityFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTimeEqualityFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTimeEqualityFilterPtrOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeEqualityFilter) *AnalysisTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisTimeEqualityFilterPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type AnalysisTimeRangeDrillDownFilter struct {
	Column          AnalysisColumnIdentifier `pulumi:"column"`
	RangeMaximum    string                   `pulumi:"rangeMaximum"`
	RangeMinimum    string                   `pulumi:"rangeMinimum"`
	TimeGranularity AnalysisTimeGranularity  `pulumi:"timeGranularity"`
}

// AnalysisTimeRangeDrillDownFilterInput is an input type that accepts AnalysisTimeRangeDrillDownFilterArgs and AnalysisTimeRangeDrillDownFilterOutput values.
// You can construct a concrete instance of `AnalysisTimeRangeDrillDownFilterInput` via:
//
//	AnalysisTimeRangeDrillDownFilterArgs{...}
type AnalysisTimeRangeDrillDownFilterInput interface {
	pulumi.Input

	ToAnalysisTimeRangeDrillDownFilterOutput() AnalysisTimeRangeDrillDownFilterOutput
	ToAnalysisTimeRangeDrillDownFilterOutputWithContext(context.Context) AnalysisTimeRangeDrillDownFilterOutput
}

type AnalysisTimeRangeDrillDownFilterArgs struct {
	Column          AnalysisColumnIdentifierInput `pulumi:"column"`
	RangeMaximum    pulumi.StringInput            `pulumi:"rangeMaximum"`
	RangeMinimum    pulumi.StringInput            `pulumi:"rangeMinimum"`
	TimeGranularity AnalysisTimeGranularityInput  `pulumi:"timeGranularity"`
}

func (AnalysisTimeRangeDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeRangeDrillDownFilter)(nil)).Elem()
}

func (i AnalysisTimeRangeDrillDownFilterArgs) ToAnalysisTimeRangeDrillDownFilterOutput() AnalysisTimeRangeDrillDownFilterOutput {
	return i.ToAnalysisTimeRangeDrillDownFilterOutputWithContext(context.Background())
}

func (i AnalysisTimeRangeDrillDownFilterArgs) ToAnalysisTimeRangeDrillDownFilterOutputWithContext(ctx context.Context) AnalysisTimeRangeDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeRangeDrillDownFilterOutput)
}

func (i AnalysisTimeRangeDrillDownFilterArgs) ToAnalysisTimeRangeDrillDownFilterPtrOutput() AnalysisTimeRangeDrillDownFilterPtrOutput {
	return i.ToAnalysisTimeRangeDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i AnalysisTimeRangeDrillDownFilterArgs) ToAnalysisTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeRangeDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeRangeDrillDownFilterOutput).ToAnalysisTimeRangeDrillDownFilterPtrOutputWithContext(ctx)
}

// AnalysisTimeRangeDrillDownFilterPtrInput is an input type that accepts AnalysisTimeRangeDrillDownFilterArgs, AnalysisTimeRangeDrillDownFilterPtr and AnalysisTimeRangeDrillDownFilterPtrOutput values.
// You can construct a concrete instance of `AnalysisTimeRangeDrillDownFilterPtrInput` via:
//
//	        AnalysisTimeRangeDrillDownFilterArgs{...}
//
//	or:
//
//	        nil
type AnalysisTimeRangeDrillDownFilterPtrInput interface {
	pulumi.Input

	ToAnalysisTimeRangeDrillDownFilterPtrOutput() AnalysisTimeRangeDrillDownFilterPtrOutput
	ToAnalysisTimeRangeDrillDownFilterPtrOutputWithContext(context.Context) AnalysisTimeRangeDrillDownFilterPtrOutput
}

type analysisTimeRangeDrillDownFilterPtrType AnalysisTimeRangeDrillDownFilterArgs

func AnalysisTimeRangeDrillDownFilterPtr(v *AnalysisTimeRangeDrillDownFilterArgs) AnalysisTimeRangeDrillDownFilterPtrInput {
	return (*analysisTimeRangeDrillDownFilterPtrType)(v)
}

func (*analysisTimeRangeDrillDownFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeRangeDrillDownFilter)(nil)).Elem()
}

func (i *analysisTimeRangeDrillDownFilterPtrType) ToAnalysisTimeRangeDrillDownFilterPtrOutput() AnalysisTimeRangeDrillDownFilterPtrOutput {
	return i.ToAnalysisTimeRangeDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i *analysisTimeRangeDrillDownFilterPtrType) ToAnalysisTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeRangeDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeRangeDrillDownFilterPtrOutput)
}

type AnalysisTimeRangeDrillDownFilterOutput struct{ *pulumi.OutputState }

func (AnalysisTimeRangeDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeRangeDrillDownFilter)(nil)).Elem()
}

func (o AnalysisTimeRangeDrillDownFilterOutput) ToAnalysisTimeRangeDrillDownFilterOutput() AnalysisTimeRangeDrillDownFilterOutput {
	return o
}

func (o AnalysisTimeRangeDrillDownFilterOutput) ToAnalysisTimeRangeDrillDownFilterOutputWithContext(ctx context.Context) AnalysisTimeRangeDrillDownFilterOutput {
	return o
}

func (o AnalysisTimeRangeDrillDownFilterOutput) ToAnalysisTimeRangeDrillDownFilterPtrOutput() AnalysisTimeRangeDrillDownFilterPtrOutput {
	return o.ToAnalysisTimeRangeDrillDownFilterPtrOutputWithContext(context.Background())
}

func (o AnalysisTimeRangeDrillDownFilterOutput) ToAnalysisTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeRangeDrillDownFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTimeRangeDrillDownFilter) *AnalysisTimeRangeDrillDownFilter {
		return &v
	}).(AnalysisTimeRangeDrillDownFilterPtrOutput)
}

func (o AnalysisTimeRangeDrillDownFilterOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisTimeRangeDrillDownFilter) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisTimeRangeDrillDownFilterOutput) RangeMaximum() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTimeRangeDrillDownFilter) string { return v.RangeMaximum }).(pulumi.StringOutput)
}

func (o AnalysisTimeRangeDrillDownFilterOutput) RangeMinimum() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTimeRangeDrillDownFilter) string { return v.RangeMinimum }).(pulumi.StringOutput)
}

func (o AnalysisTimeRangeDrillDownFilterOutput) TimeGranularity() AnalysisTimeGranularityOutput {
	return o.ApplyT(func(v AnalysisTimeRangeDrillDownFilter) AnalysisTimeGranularity { return v.TimeGranularity }).(AnalysisTimeGranularityOutput)
}

type AnalysisTimeRangeDrillDownFilterPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTimeRangeDrillDownFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeRangeDrillDownFilter)(nil)).Elem()
}

func (o AnalysisTimeRangeDrillDownFilterPtrOutput) ToAnalysisTimeRangeDrillDownFilterPtrOutput() AnalysisTimeRangeDrillDownFilterPtrOutput {
	return o
}

func (o AnalysisTimeRangeDrillDownFilterPtrOutput) ToAnalysisTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeRangeDrillDownFilterPtrOutput {
	return o
}

func (o AnalysisTimeRangeDrillDownFilterPtrOutput) Elem() AnalysisTimeRangeDrillDownFilterOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeDrillDownFilter) AnalysisTimeRangeDrillDownFilter {
		if v != nil {
			return *v
		}
		var ret AnalysisTimeRangeDrillDownFilter
		return ret
	}).(AnalysisTimeRangeDrillDownFilterOutput)
}

func (o AnalysisTimeRangeDrillDownFilterPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeDrillDownFilter) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisTimeRangeDrillDownFilterPtrOutput) RangeMaximum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeDrillDownFilter) *string {
		if v == nil {
			return nil
		}
		return &v.RangeMaximum
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTimeRangeDrillDownFilterPtrOutput) RangeMinimum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeDrillDownFilter) *string {
		if v == nil {
			return nil
		}
		return &v.RangeMinimum
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTimeRangeDrillDownFilterPtrOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeDrillDownFilter) *AnalysisTimeGranularity {
		if v == nil {
			return nil
		}
		return &v.TimeGranularity
	}).(AnalysisTimeGranularityPtrOutput)
}

type AnalysisTimeRangeFilter struct {
	Column                     AnalysisColumnIdentifier            `pulumi:"column"`
	ExcludePeriodConfiguration *AnalysisExcludePeriodConfiguration `pulumi:"excludePeriodConfiguration"`
	FilterId                   string                              `pulumi:"filterId"`
	IncludeMaximum             *bool                               `pulumi:"includeMaximum"`
	IncludeMinimum             *bool                               `pulumi:"includeMinimum"`
	NullOption                 AnalysisFilterNullOption            `pulumi:"nullOption"`
	RangeMaximumValue          *AnalysisTimeRangeFilterValue       `pulumi:"rangeMaximumValue"`
	RangeMinimumValue          *AnalysisTimeRangeFilterValue       `pulumi:"rangeMinimumValue"`
	TimeGranularity            *AnalysisTimeGranularity            `pulumi:"timeGranularity"`
}

// AnalysisTimeRangeFilterInput is an input type that accepts AnalysisTimeRangeFilterArgs and AnalysisTimeRangeFilterOutput values.
// You can construct a concrete instance of `AnalysisTimeRangeFilterInput` via:
//
//	AnalysisTimeRangeFilterArgs{...}
type AnalysisTimeRangeFilterInput interface {
	pulumi.Input

	ToAnalysisTimeRangeFilterOutput() AnalysisTimeRangeFilterOutput
	ToAnalysisTimeRangeFilterOutputWithContext(context.Context) AnalysisTimeRangeFilterOutput
}

type AnalysisTimeRangeFilterArgs struct {
	Column                     AnalysisColumnIdentifierInput              `pulumi:"column"`
	ExcludePeriodConfiguration AnalysisExcludePeriodConfigurationPtrInput `pulumi:"excludePeriodConfiguration"`
	FilterId                   pulumi.StringInput                         `pulumi:"filterId"`
	IncludeMaximum             pulumi.BoolPtrInput                        `pulumi:"includeMaximum"`
	IncludeMinimum             pulumi.BoolPtrInput                        `pulumi:"includeMinimum"`
	NullOption                 AnalysisFilterNullOptionInput              `pulumi:"nullOption"`
	RangeMaximumValue          AnalysisTimeRangeFilterValuePtrInput       `pulumi:"rangeMaximumValue"`
	RangeMinimumValue          AnalysisTimeRangeFilterValuePtrInput       `pulumi:"rangeMinimumValue"`
	TimeGranularity            AnalysisTimeGranularityPtrInput            `pulumi:"timeGranularity"`
}

func (AnalysisTimeRangeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeRangeFilter)(nil)).Elem()
}

func (i AnalysisTimeRangeFilterArgs) ToAnalysisTimeRangeFilterOutput() AnalysisTimeRangeFilterOutput {
	return i.ToAnalysisTimeRangeFilterOutputWithContext(context.Background())
}

func (i AnalysisTimeRangeFilterArgs) ToAnalysisTimeRangeFilterOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeRangeFilterOutput)
}

func (i AnalysisTimeRangeFilterArgs) ToAnalysisTimeRangeFilterPtrOutput() AnalysisTimeRangeFilterPtrOutput {
	return i.ToAnalysisTimeRangeFilterPtrOutputWithContext(context.Background())
}

func (i AnalysisTimeRangeFilterArgs) ToAnalysisTimeRangeFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeRangeFilterOutput).ToAnalysisTimeRangeFilterPtrOutputWithContext(ctx)
}

// AnalysisTimeRangeFilterPtrInput is an input type that accepts AnalysisTimeRangeFilterArgs, AnalysisTimeRangeFilterPtr and AnalysisTimeRangeFilterPtrOutput values.
// You can construct a concrete instance of `AnalysisTimeRangeFilterPtrInput` via:
//
//	        AnalysisTimeRangeFilterArgs{...}
//
//	or:
//
//	        nil
type AnalysisTimeRangeFilterPtrInput interface {
	pulumi.Input

	ToAnalysisTimeRangeFilterPtrOutput() AnalysisTimeRangeFilterPtrOutput
	ToAnalysisTimeRangeFilterPtrOutputWithContext(context.Context) AnalysisTimeRangeFilterPtrOutput
}

type analysisTimeRangeFilterPtrType AnalysisTimeRangeFilterArgs

func AnalysisTimeRangeFilterPtr(v *AnalysisTimeRangeFilterArgs) AnalysisTimeRangeFilterPtrInput {
	return (*analysisTimeRangeFilterPtrType)(v)
}

func (*analysisTimeRangeFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeRangeFilter)(nil)).Elem()
}

func (i *analysisTimeRangeFilterPtrType) ToAnalysisTimeRangeFilterPtrOutput() AnalysisTimeRangeFilterPtrOutput {
	return i.ToAnalysisTimeRangeFilterPtrOutputWithContext(context.Background())
}

func (i *analysisTimeRangeFilterPtrType) ToAnalysisTimeRangeFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeRangeFilterPtrOutput)
}

type AnalysisTimeRangeFilterOutput struct{ *pulumi.OutputState }

func (AnalysisTimeRangeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeRangeFilter)(nil)).Elem()
}

func (o AnalysisTimeRangeFilterOutput) ToAnalysisTimeRangeFilterOutput() AnalysisTimeRangeFilterOutput {
	return o
}

func (o AnalysisTimeRangeFilterOutput) ToAnalysisTimeRangeFilterOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterOutput {
	return o
}

func (o AnalysisTimeRangeFilterOutput) ToAnalysisTimeRangeFilterPtrOutput() AnalysisTimeRangeFilterPtrOutput {
	return o.ToAnalysisTimeRangeFilterPtrOutputWithContext(context.Background())
}

func (o AnalysisTimeRangeFilterOutput) ToAnalysisTimeRangeFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTimeRangeFilter) *AnalysisTimeRangeFilter {
		return &v
	}).(AnalysisTimeRangeFilterPtrOutput)
}

func (o AnalysisTimeRangeFilterOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilter) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisTimeRangeFilterOutput) ExcludePeriodConfiguration() AnalysisExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilter) *AnalysisExcludePeriodConfiguration {
		return v.ExcludePeriodConfiguration
	}).(AnalysisExcludePeriodConfigurationPtrOutput)
}

func (o AnalysisTimeRangeFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o AnalysisTimeRangeFilterOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilter) *bool { return v.IncludeMaximum }).(pulumi.BoolPtrOutput)
}

func (o AnalysisTimeRangeFilterOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilter) *bool { return v.IncludeMinimum }).(pulumi.BoolPtrOutput)
}

func (o AnalysisTimeRangeFilterOutput) NullOption() AnalysisFilterNullOptionOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilter) AnalysisFilterNullOption { return v.NullOption }).(AnalysisFilterNullOptionOutput)
}

func (o AnalysisTimeRangeFilterOutput) RangeMaximumValue() AnalysisTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilter) *AnalysisTimeRangeFilterValue { return v.RangeMaximumValue }).(AnalysisTimeRangeFilterValuePtrOutput)
}

func (o AnalysisTimeRangeFilterOutput) RangeMinimumValue() AnalysisTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilter) *AnalysisTimeRangeFilterValue { return v.RangeMinimumValue }).(AnalysisTimeRangeFilterValuePtrOutput)
}

func (o AnalysisTimeRangeFilterOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilter) *AnalysisTimeGranularity { return v.TimeGranularity }).(AnalysisTimeGranularityPtrOutput)
}

type AnalysisTimeRangeFilterPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTimeRangeFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeRangeFilter)(nil)).Elem()
}

func (o AnalysisTimeRangeFilterPtrOutput) ToAnalysisTimeRangeFilterPtrOutput() AnalysisTimeRangeFilterPtrOutput {
	return o
}

func (o AnalysisTimeRangeFilterPtrOutput) ToAnalysisTimeRangeFilterPtrOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterPtrOutput {
	return o
}

func (o AnalysisTimeRangeFilterPtrOutput) Elem() AnalysisTimeRangeFilterOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilter) AnalysisTimeRangeFilter {
		if v != nil {
			return *v
		}
		var ret AnalysisTimeRangeFilter
		return ret
	}).(AnalysisTimeRangeFilterOutput)
}

func (o AnalysisTimeRangeFilterPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilter) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisTimeRangeFilterPtrOutput) ExcludePeriodConfiguration() AnalysisExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilter) *AnalysisExcludePeriodConfiguration {
		if v == nil {
			return nil
		}
		return v.ExcludePeriodConfiguration
	}).(AnalysisExcludePeriodConfigurationPtrOutput)
}

func (o AnalysisTimeRangeFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTimeRangeFilterPtrOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMaximum
	}).(pulumi.BoolPtrOutput)
}

func (o AnalysisTimeRangeFilterPtrOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMinimum
	}).(pulumi.BoolPtrOutput)
}

func (o AnalysisTimeRangeFilterPtrOutput) NullOption() AnalysisFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilter) *AnalysisFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(AnalysisFilterNullOptionPtrOutput)
}

func (o AnalysisTimeRangeFilterPtrOutput) RangeMaximumValue() AnalysisTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilter) *AnalysisTimeRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMaximumValue
	}).(AnalysisTimeRangeFilterValuePtrOutput)
}

func (o AnalysisTimeRangeFilterPtrOutput) RangeMinimumValue() AnalysisTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilter) *AnalysisTimeRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMinimumValue
	}).(AnalysisTimeRangeFilterValuePtrOutput)
}

func (o AnalysisTimeRangeFilterPtrOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilter) *AnalysisTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(AnalysisTimeGranularityPtrOutput)
}

type AnalysisTimeRangeFilterValue struct {
	Parameter   *string                           `pulumi:"parameter"`
	RollingDate *AnalysisRollingDateConfiguration `pulumi:"rollingDate"`
	StaticValue *string                           `pulumi:"staticValue"`
}

// AnalysisTimeRangeFilterValueInput is an input type that accepts AnalysisTimeRangeFilterValueArgs and AnalysisTimeRangeFilterValueOutput values.
// You can construct a concrete instance of `AnalysisTimeRangeFilterValueInput` via:
//
//	AnalysisTimeRangeFilterValueArgs{...}
type AnalysisTimeRangeFilterValueInput interface {
	pulumi.Input

	ToAnalysisTimeRangeFilterValueOutput() AnalysisTimeRangeFilterValueOutput
	ToAnalysisTimeRangeFilterValueOutputWithContext(context.Context) AnalysisTimeRangeFilterValueOutput
}

type AnalysisTimeRangeFilterValueArgs struct {
	Parameter   pulumi.StringPtrInput                    `pulumi:"parameter"`
	RollingDate AnalysisRollingDateConfigurationPtrInput `pulumi:"rollingDate"`
	StaticValue pulumi.StringPtrInput                    `pulumi:"staticValue"`
}

func (AnalysisTimeRangeFilterValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeRangeFilterValue)(nil)).Elem()
}

func (i AnalysisTimeRangeFilterValueArgs) ToAnalysisTimeRangeFilterValueOutput() AnalysisTimeRangeFilterValueOutput {
	return i.ToAnalysisTimeRangeFilterValueOutputWithContext(context.Background())
}

func (i AnalysisTimeRangeFilterValueArgs) ToAnalysisTimeRangeFilterValueOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeRangeFilterValueOutput)
}

func (i AnalysisTimeRangeFilterValueArgs) ToAnalysisTimeRangeFilterValuePtrOutput() AnalysisTimeRangeFilterValuePtrOutput {
	return i.ToAnalysisTimeRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i AnalysisTimeRangeFilterValueArgs) ToAnalysisTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeRangeFilterValueOutput).ToAnalysisTimeRangeFilterValuePtrOutputWithContext(ctx)
}

// AnalysisTimeRangeFilterValuePtrInput is an input type that accepts AnalysisTimeRangeFilterValueArgs, AnalysisTimeRangeFilterValuePtr and AnalysisTimeRangeFilterValuePtrOutput values.
// You can construct a concrete instance of `AnalysisTimeRangeFilterValuePtrInput` via:
//
//	        AnalysisTimeRangeFilterValueArgs{...}
//
//	or:
//
//	        nil
type AnalysisTimeRangeFilterValuePtrInput interface {
	pulumi.Input

	ToAnalysisTimeRangeFilterValuePtrOutput() AnalysisTimeRangeFilterValuePtrOutput
	ToAnalysisTimeRangeFilterValuePtrOutputWithContext(context.Context) AnalysisTimeRangeFilterValuePtrOutput
}

type analysisTimeRangeFilterValuePtrType AnalysisTimeRangeFilterValueArgs

func AnalysisTimeRangeFilterValuePtr(v *AnalysisTimeRangeFilterValueArgs) AnalysisTimeRangeFilterValuePtrInput {
	return (*analysisTimeRangeFilterValuePtrType)(v)
}

func (*analysisTimeRangeFilterValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeRangeFilterValue)(nil)).Elem()
}

func (i *analysisTimeRangeFilterValuePtrType) ToAnalysisTimeRangeFilterValuePtrOutput() AnalysisTimeRangeFilterValuePtrOutput {
	return i.ToAnalysisTimeRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i *analysisTimeRangeFilterValuePtrType) ToAnalysisTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTimeRangeFilterValuePtrOutput)
}

type AnalysisTimeRangeFilterValueOutput struct{ *pulumi.OutputState }

func (AnalysisTimeRangeFilterValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeRangeFilterValue)(nil)).Elem()
}

func (o AnalysisTimeRangeFilterValueOutput) ToAnalysisTimeRangeFilterValueOutput() AnalysisTimeRangeFilterValueOutput {
	return o
}

func (o AnalysisTimeRangeFilterValueOutput) ToAnalysisTimeRangeFilterValueOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterValueOutput {
	return o
}

func (o AnalysisTimeRangeFilterValueOutput) ToAnalysisTimeRangeFilterValuePtrOutput() AnalysisTimeRangeFilterValuePtrOutput {
	return o.ToAnalysisTimeRangeFilterValuePtrOutputWithContext(context.Background())
}

func (o AnalysisTimeRangeFilterValueOutput) ToAnalysisTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTimeRangeFilterValue) *AnalysisTimeRangeFilterValue {
		return &v
	}).(AnalysisTimeRangeFilterValuePtrOutput)
}

func (o AnalysisTimeRangeFilterValueOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilterValue) *string { return v.Parameter }).(pulumi.StringPtrOutput)
}

func (o AnalysisTimeRangeFilterValueOutput) RollingDate() AnalysisRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilterValue) *AnalysisRollingDateConfiguration { return v.RollingDate }).(AnalysisRollingDateConfigurationPtrOutput)
}

func (o AnalysisTimeRangeFilterValueOutput) StaticValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTimeRangeFilterValue) *string { return v.StaticValue }).(pulumi.StringPtrOutput)
}

type AnalysisTimeRangeFilterValuePtrOutput struct{ *pulumi.OutputState }

func (AnalysisTimeRangeFilterValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeRangeFilterValue)(nil)).Elem()
}

func (o AnalysisTimeRangeFilterValuePtrOutput) ToAnalysisTimeRangeFilterValuePtrOutput() AnalysisTimeRangeFilterValuePtrOutput {
	return o
}

func (o AnalysisTimeRangeFilterValuePtrOutput) ToAnalysisTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) AnalysisTimeRangeFilterValuePtrOutput {
	return o
}

func (o AnalysisTimeRangeFilterValuePtrOutput) Elem() AnalysisTimeRangeFilterValueOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilterValue) AnalysisTimeRangeFilterValue {
		if v != nil {
			return *v
		}
		var ret AnalysisTimeRangeFilterValue
		return ret
	}).(AnalysisTimeRangeFilterValueOutput)
}

func (o AnalysisTimeRangeFilterValuePtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilterValue) *string {
		if v == nil {
			return nil
		}
		return v.Parameter
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTimeRangeFilterValuePtrOutput) RollingDate() AnalysisRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilterValue) *AnalysisRollingDateConfiguration {
		if v == nil {
			return nil
		}
		return v.RollingDate
	}).(AnalysisRollingDateConfigurationPtrOutput)
}

func (o AnalysisTimeRangeFilterValuePtrOutput) StaticValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTimeRangeFilterValue) *string {
		if v == nil {
			return nil
		}
		return v.StaticValue
	}).(pulumi.StringPtrOutput)
}

type AnalysisTooltipItem struct {
	ColumnTooltipItem *AnalysisColumnTooltipItem `pulumi:"columnTooltipItem"`
	FieldTooltipItem  *AnalysisFieldTooltipItem  `pulumi:"fieldTooltipItem"`
}

// AnalysisTooltipItemInput is an input type that accepts AnalysisTooltipItemArgs and AnalysisTooltipItemOutput values.
// You can construct a concrete instance of `AnalysisTooltipItemInput` via:
//
//	AnalysisTooltipItemArgs{...}
type AnalysisTooltipItemInput interface {
	pulumi.Input

	ToAnalysisTooltipItemOutput() AnalysisTooltipItemOutput
	ToAnalysisTooltipItemOutputWithContext(context.Context) AnalysisTooltipItemOutput
}

type AnalysisTooltipItemArgs struct {
	ColumnTooltipItem AnalysisColumnTooltipItemPtrInput `pulumi:"columnTooltipItem"`
	FieldTooltipItem  AnalysisFieldTooltipItemPtrInput  `pulumi:"fieldTooltipItem"`
}

func (AnalysisTooltipItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTooltipItem)(nil)).Elem()
}

func (i AnalysisTooltipItemArgs) ToAnalysisTooltipItemOutput() AnalysisTooltipItemOutput {
	return i.ToAnalysisTooltipItemOutputWithContext(context.Background())
}

func (i AnalysisTooltipItemArgs) ToAnalysisTooltipItemOutputWithContext(ctx context.Context) AnalysisTooltipItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTooltipItemOutput)
}

// AnalysisTooltipItemArrayInput is an input type that accepts AnalysisTooltipItemArray and AnalysisTooltipItemArrayOutput values.
// You can construct a concrete instance of `AnalysisTooltipItemArrayInput` via:
//
//	AnalysisTooltipItemArray{ AnalysisTooltipItemArgs{...} }
type AnalysisTooltipItemArrayInput interface {
	pulumi.Input

	ToAnalysisTooltipItemArrayOutput() AnalysisTooltipItemArrayOutput
	ToAnalysisTooltipItemArrayOutputWithContext(context.Context) AnalysisTooltipItemArrayOutput
}

type AnalysisTooltipItemArray []AnalysisTooltipItemInput

func (AnalysisTooltipItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisTooltipItem)(nil)).Elem()
}

func (i AnalysisTooltipItemArray) ToAnalysisTooltipItemArrayOutput() AnalysisTooltipItemArrayOutput {
	return i.ToAnalysisTooltipItemArrayOutputWithContext(context.Background())
}

func (i AnalysisTooltipItemArray) ToAnalysisTooltipItemArrayOutputWithContext(ctx context.Context) AnalysisTooltipItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTooltipItemArrayOutput)
}

type AnalysisTooltipItemOutput struct{ *pulumi.OutputState }

func (AnalysisTooltipItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTooltipItem)(nil)).Elem()
}

func (o AnalysisTooltipItemOutput) ToAnalysisTooltipItemOutput() AnalysisTooltipItemOutput {
	return o
}

func (o AnalysisTooltipItemOutput) ToAnalysisTooltipItemOutputWithContext(ctx context.Context) AnalysisTooltipItemOutput {
	return o
}

func (o AnalysisTooltipItemOutput) ColumnTooltipItem() AnalysisColumnTooltipItemPtrOutput {
	return o.ApplyT(func(v AnalysisTooltipItem) *AnalysisColumnTooltipItem { return v.ColumnTooltipItem }).(AnalysisColumnTooltipItemPtrOutput)
}

func (o AnalysisTooltipItemOutput) FieldTooltipItem() AnalysisFieldTooltipItemPtrOutput {
	return o.ApplyT(func(v AnalysisTooltipItem) *AnalysisFieldTooltipItem { return v.FieldTooltipItem }).(AnalysisFieldTooltipItemPtrOutput)
}

type AnalysisTooltipItemArrayOutput struct{ *pulumi.OutputState }

func (AnalysisTooltipItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisTooltipItem)(nil)).Elem()
}

func (o AnalysisTooltipItemArrayOutput) ToAnalysisTooltipItemArrayOutput() AnalysisTooltipItemArrayOutput {
	return o
}

func (o AnalysisTooltipItemArrayOutput) ToAnalysisTooltipItemArrayOutputWithContext(ctx context.Context) AnalysisTooltipItemArrayOutput {
	return o
}

func (o AnalysisTooltipItemArrayOutput) Index(i pulumi.IntInput) AnalysisTooltipItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisTooltipItem {
		return vs[0].([]AnalysisTooltipItem)[vs[1].(int)]
	}).(AnalysisTooltipItemOutput)
}

type AnalysisTooltipOptions struct {
	FieldBasedTooltip   *AnalysisFieldBasedTooltip   `pulumi:"fieldBasedTooltip"`
	SelectedTooltipType *AnalysisSelectedTooltipType `pulumi:"selectedTooltipType"`
	TooltipVisibility   *AnalysisVisibility          `pulumi:"tooltipVisibility"`
}

// AnalysisTooltipOptionsInput is an input type that accepts AnalysisTooltipOptionsArgs and AnalysisTooltipOptionsOutput values.
// You can construct a concrete instance of `AnalysisTooltipOptionsInput` via:
//
//	AnalysisTooltipOptionsArgs{...}
type AnalysisTooltipOptionsInput interface {
	pulumi.Input

	ToAnalysisTooltipOptionsOutput() AnalysisTooltipOptionsOutput
	ToAnalysisTooltipOptionsOutputWithContext(context.Context) AnalysisTooltipOptionsOutput
}

type AnalysisTooltipOptionsArgs struct {
	FieldBasedTooltip   AnalysisFieldBasedTooltipPtrInput   `pulumi:"fieldBasedTooltip"`
	SelectedTooltipType AnalysisSelectedTooltipTypePtrInput `pulumi:"selectedTooltipType"`
	TooltipVisibility   AnalysisVisibilityPtrInput          `pulumi:"tooltipVisibility"`
}

func (AnalysisTooltipOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTooltipOptions)(nil)).Elem()
}

func (i AnalysisTooltipOptionsArgs) ToAnalysisTooltipOptionsOutput() AnalysisTooltipOptionsOutput {
	return i.ToAnalysisTooltipOptionsOutputWithContext(context.Background())
}

func (i AnalysisTooltipOptionsArgs) ToAnalysisTooltipOptionsOutputWithContext(ctx context.Context) AnalysisTooltipOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTooltipOptionsOutput)
}

func (i AnalysisTooltipOptionsArgs) ToAnalysisTooltipOptionsPtrOutput() AnalysisTooltipOptionsPtrOutput {
	return i.ToAnalysisTooltipOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTooltipOptionsArgs) ToAnalysisTooltipOptionsPtrOutputWithContext(ctx context.Context) AnalysisTooltipOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTooltipOptionsOutput).ToAnalysisTooltipOptionsPtrOutputWithContext(ctx)
}

// AnalysisTooltipOptionsPtrInput is an input type that accepts AnalysisTooltipOptionsArgs, AnalysisTooltipOptionsPtr and AnalysisTooltipOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTooltipOptionsPtrInput` via:
//
//	        AnalysisTooltipOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTooltipOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTooltipOptionsPtrOutput() AnalysisTooltipOptionsPtrOutput
	ToAnalysisTooltipOptionsPtrOutputWithContext(context.Context) AnalysisTooltipOptionsPtrOutput
}

type analysisTooltipOptionsPtrType AnalysisTooltipOptionsArgs

func AnalysisTooltipOptionsPtr(v *AnalysisTooltipOptionsArgs) AnalysisTooltipOptionsPtrInput {
	return (*analysisTooltipOptionsPtrType)(v)
}

func (*analysisTooltipOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTooltipOptions)(nil)).Elem()
}

func (i *analysisTooltipOptionsPtrType) ToAnalysisTooltipOptionsPtrOutput() AnalysisTooltipOptionsPtrOutput {
	return i.ToAnalysisTooltipOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTooltipOptionsPtrType) ToAnalysisTooltipOptionsPtrOutputWithContext(ctx context.Context) AnalysisTooltipOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTooltipOptionsPtrOutput)
}

type AnalysisTooltipOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTooltipOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTooltipOptions)(nil)).Elem()
}

func (o AnalysisTooltipOptionsOutput) ToAnalysisTooltipOptionsOutput() AnalysisTooltipOptionsOutput {
	return o
}

func (o AnalysisTooltipOptionsOutput) ToAnalysisTooltipOptionsOutputWithContext(ctx context.Context) AnalysisTooltipOptionsOutput {
	return o
}

func (o AnalysisTooltipOptionsOutput) ToAnalysisTooltipOptionsPtrOutput() AnalysisTooltipOptionsPtrOutput {
	return o.ToAnalysisTooltipOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTooltipOptionsOutput) ToAnalysisTooltipOptionsPtrOutputWithContext(ctx context.Context) AnalysisTooltipOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTooltipOptions) *AnalysisTooltipOptions {
		return &v
	}).(AnalysisTooltipOptionsPtrOutput)
}

func (o AnalysisTooltipOptionsOutput) FieldBasedTooltip() AnalysisFieldBasedTooltipPtrOutput {
	return o.ApplyT(func(v AnalysisTooltipOptions) *AnalysisFieldBasedTooltip { return v.FieldBasedTooltip }).(AnalysisFieldBasedTooltipPtrOutput)
}

func (o AnalysisTooltipOptionsOutput) SelectedTooltipType() AnalysisSelectedTooltipTypePtrOutput {
	return o.ApplyT(func(v AnalysisTooltipOptions) *AnalysisSelectedTooltipType { return v.SelectedTooltipType }).(AnalysisSelectedTooltipTypePtrOutput)
}

func (o AnalysisTooltipOptionsOutput) TooltipVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisTooltipOptions) *AnalysisVisibility { return v.TooltipVisibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisTooltipOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTooltipOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTooltipOptions)(nil)).Elem()
}

func (o AnalysisTooltipOptionsPtrOutput) ToAnalysisTooltipOptionsPtrOutput() AnalysisTooltipOptionsPtrOutput {
	return o
}

func (o AnalysisTooltipOptionsPtrOutput) ToAnalysisTooltipOptionsPtrOutputWithContext(ctx context.Context) AnalysisTooltipOptionsPtrOutput {
	return o
}

func (o AnalysisTooltipOptionsPtrOutput) Elem() AnalysisTooltipOptionsOutput {
	return o.ApplyT(func(v *AnalysisTooltipOptions) AnalysisTooltipOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTooltipOptions
		return ret
	}).(AnalysisTooltipOptionsOutput)
}

func (o AnalysisTooltipOptionsPtrOutput) FieldBasedTooltip() AnalysisFieldBasedTooltipPtrOutput {
	return o.ApplyT(func(v *AnalysisTooltipOptions) *AnalysisFieldBasedTooltip {
		if v == nil {
			return nil
		}
		return v.FieldBasedTooltip
	}).(AnalysisFieldBasedTooltipPtrOutput)
}

func (o AnalysisTooltipOptionsPtrOutput) SelectedTooltipType() AnalysisSelectedTooltipTypePtrOutput {
	return o.ApplyT(func(v *AnalysisTooltipOptions) *AnalysisSelectedTooltipType {
		if v == nil {
			return nil
		}
		return v.SelectedTooltipType
	}).(AnalysisSelectedTooltipTypePtrOutput)
}

func (o AnalysisTooltipOptionsPtrOutput) TooltipVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisTooltipOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.TooltipVisibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisTopBottomFilter struct {
	AggregationSortConfigurations []AnalysisAggregationSortConfiguration `pulumi:"aggregationSortConfigurations"`
	Column                        AnalysisColumnIdentifier               `pulumi:"column"`
	FilterId                      string                                 `pulumi:"filterId"`
	Limit                         *float64                               `pulumi:"limit"`
	ParameterName                 *string                                `pulumi:"parameterName"`
	TimeGranularity               *AnalysisTimeGranularity               `pulumi:"timeGranularity"`
}

// AnalysisTopBottomFilterInput is an input type that accepts AnalysisTopBottomFilterArgs and AnalysisTopBottomFilterOutput values.
// You can construct a concrete instance of `AnalysisTopBottomFilterInput` via:
//
//	AnalysisTopBottomFilterArgs{...}
type AnalysisTopBottomFilterInput interface {
	pulumi.Input

	ToAnalysisTopBottomFilterOutput() AnalysisTopBottomFilterOutput
	ToAnalysisTopBottomFilterOutputWithContext(context.Context) AnalysisTopBottomFilterOutput
}

type AnalysisTopBottomFilterArgs struct {
	AggregationSortConfigurations AnalysisAggregationSortConfigurationArrayInput `pulumi:"aggregationSortConfigurations"`
	Column                        AnalysisColumnIdentifierInput                  `pulumi:"column"`
	FilterId                      pulumi.StringInput                             `pulumi:"filterId"`
	Limit                         pulumi.Float64PtrInput                         `pulumi:"limit"`
	ParameterName                 pulumi.StringPtrInput                          `pulumi:"parameterName"`
	TimeGranularity               AnalysisTimeGranularityPtrInput                `pulumi:"timeGranularity"`
}

func (AnalysisTopBottomFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTopBottomFilter)(nil)).Elem()
}

func (i AnalysisTopBottomFilterArgs) ToAnalysisTopBottomFilterOutput() AnalysisTopBottomFilterOutput {
	return i.ToAnalysisTopBottomFilterOutputWithContext(context.Background())
}

func (i AnalysisTopBottomFilterArgs) ToAnalysisTopBottomFilterOutputWithContext(ctx context.Context) AnalysisTopBottomFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTopBottomFilterOutput)
}

func (i AnalysisTopBottomFilterArgs) ToAnalysisTopBottomFilterPtrOutput() AnalysisTopBottomFilterPtrOutput {
	return i.ToAnalysisTopBottomFilterPtrOutputWithContext(context.Background())
}

func (i AnalysisTopBottomFilterArgs) ToAnalysisTopBottomFilterPtrOutputWithContext(ctx context.Context) AnalysisTopBottomFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTopBottomFilterOutput).ToAnalysisTopBottomFilterPtrOutputWithContext(ctx)
}

// AnalysisTopBottomFilterPtrInput is an input type that accepts AnalysisTopBottomFilterArgs, AnalysisTopBottomFilterPtr and AnalysisTopBottomFilterPtrOutput values.
// You can construct a concrete instance of `AnalysisTopBottomFilterPtrInput` via:
//
//	        AnalysisTopBottomFilterArgs{...}
//
//	or:
//
//	        nil
type AnalysisTopBottomFilterPtrInput interface {
	pulumi.Input

	ToAnalysisTopBottomFilterPtrOutput() AnalysisTopBottomFilterPtrOutput
	ToAnalysisTopBottomFilterPtrOutputWithContext(context.Context) AnalysisTopBottomFilterPtrOutput
}

type analysisTopBottomFilterPtrType AnalysisTopBottomFilterArgs

func AnalysisTopBottomFilterPtr(v *AnalysisTopBottomFilterArgs) AnalysisTopBottomFilterPtrInput {
	return (*analysisTopBottomFilterPtrType)(v)
}

func (*analysisTopBottomFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTopBottomFilter)(nil)).Elem()
}

func (i *analysisTopBottomFilterPtrType) ToAnalysisTopBottomFilterPtrOutput() AnalysisTopBottomFilterPtrOutput {
	return i.ToAnalysisTopBottomFilterPtrOutputWithContext(context.Background())
}

func (i *analysisTopBottomFilterPtrType) ToAnalysisTopBottomFilterPtrOutputWithContext(ctx context.Context) AnalysisTopBottomFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTopBottomFilterPtrOutput)
}

type AnalysisTopBottomFilterOutput struct{ *pulumi.OutputState }

func (AnalysisTopBottomFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTopBottomFilter)(nil)).Elem()
}

func (o AnalysisTopBottomFilterOutput) ToAnalysisTopBottomFilterOutput() AnalysisTopBottomFilterOutput {
	return o
}

func (o AnalysisTopBottomFilterOutput) ToAnalysisTopBottomFilterOutputWithContext(ctx context.Context) AnalysisTopBottomFilterOutput {
	return o
}

func (o AnalysisTopBottomFilterOutput) ToAnalysisTopBottomFilterPtrOutput() AnalysisTopBottomFilterPtrOutput {
	return o.ToAnalysisTopBottomFilterPtrOutputWithContext(context.Background())
}

func (o AnalysisTopBottomFilterOutput) ToAnalysisTopBottomFilterPtrOutputWithContext(ctx context.Context) AnalysisTopBottomFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTopBottomFilter) *AnalysisTopBottomFilter {
		return &v
	}).(AnalysisTopBottomFilterPtrOutput)
}

func (o AnalysisTopBottomFilterOutput) AggregationSortConfigurations() AnalysisAggregationSortConfigurationArrayOutput {
	return o.ApplyT(func(v AnalysisTopBottomFilter) []AnalysisAggregationSortConfiguration {
		return v.AggregationSortConfigurations
	}).(AnalysisAggregationSortConfigurationArrayOutput)
}

func (o AnalysisTopBottomFilterOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisTopBottomFilter) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisTopBottomFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTopBottomFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o AnalysisTopBottomFilterOutput) Limit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTopBottomFilter) *float64 { return v.Limit }).(pulumi.Float64PtrOutput)
}

func (o AnalysisTopBottomFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTopBottomFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o AnalysisTopBottomFilterOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v AnalysisTopBottomFilter) *AnalysisTimeGranularity { return v.TimeGranularity }).(AnalysisTimeGranularityPtrOutput)
}

type AnalysisTopBottomFilterPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTopBottomFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTopBottomFilter)(nil)).Elem()
}

func (o AnalysisTopBottomFilterPtrOutput) ToAnalysisTopBottomFilterPtrOutput() AnalysisTopBottomFilterPtrOutput {
	return o
}

func (o AnalysisTopBottomFilterPtrOutput) ToAnalysisTopBottomFilterPtrOutputWithContext(ctx context.Context) AnalysisTopBottomFilterPtrOutput {
	return o
}

func (o AnalysisTopBottomFilterPtrOutput) Elem() AnalysisTopBottomFilterOutput {
	return o.ApplyT(func(v *AnalysisTopBottomFilter) AnalysisTopBottomFilter {
		if v != nil {
			return *v
		}
		var ret AnalysisTopBottomFilter
		return ret
	}).(AnalysisTopBottomFilterOutput)
}

func (o AnalysisTopBottomFilterPtrOutput) AggregationSortConfigurations() AnalysisAggregationSortConfigurationArrayOutput {
	return o.ApplyT(func(v *AnalysisTopBottomFilter) []AnalysisAggregationSortConfiguration {
		if v == nil {
			return nil
		}
		return v.AggregationSortConfigurations
	}).(AnalysisAggregationSortConfigurationArrayOutput)
}

func (o AnalysisTopBottomFilterPtrOutput) Column() AnalysisColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomFilter) *AnalysisColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(AnalysisColumnIdentifierPtrOutput)
}

func (o AnalysisTopBottomFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTopBottomFilterPtrOutput) Limit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisTopBottomFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTopBottomFilterPtrOutput) TimeGranularity() AnalysisTimeGranularityPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomFilter) *AnalysisTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(AnalysisTimeGranularityPtrOutput)
}

type AnalysisTopBottomMoversComputation struct {
	Category      AnalysisDimensionField           `pulumi:"category"`
	ComputationId string                           `pulumi:"computationId"`
	MoverSize     *float64                         `pulumi:"moverSize"`
	Name          *string                          `pulumi:"name"`
	SortOrder     *AnalysisTopBottomSortOrder      `pulumi:"sortOrder"`
	Time          AnalysisDimensionField           `pulumi:"time"`
	Type          AnalysisTopBottomComputationType `pulumi:"type"`
	Value         *AnalysisMeasureField            `pulumi:"value"`
}

// AnalysisTopBottomMoversComputationInput is an input type that accepts AnalysisTopBottomMoversComputationArgs and AnalysisTopBottomMoversComputationOutput values.
// You can construct a concrete instance of `AnalysisTopBottomMoversComputationInput` via:
//
//	AnalysisTopBottomMoversComputationArgs{...}
type AnalysisTopBottomMoversComputationInput interface {
	pulumi.Input

	ToAnalysisTopBottomMoversComputationOutput() AnalysisTopBottomMoversComputationOutput
	ToAnalysisTopBottomMoversComputationOutputWithContext(context.Context) AnalysisTopBottomMoversComputationOutput
}

type AnalysisTopBottomMoversComputationArgs struct {
	Category      AnalysisDimensionFieldInput           `pulumi:"category"`
	ComputationId pulumi.StringInput                    `pulumi:"computationId"`
	MoverSize     pulumi.Float64PtrInput                `pulumi:"moverSize"`
	Name          pulumi.StringPtrInput                 `pulumi:"name"`
	SortOrder     AnalysisTopBottomSortOrderPtrInput    `pulumi:"sortOrder"`
	Time          AnalysisDimensionFieldInput           `pulumi:"time"`
	Type          AnalysisTopBottomComputationTypeInput `pulumi:"type"`
	Value         AnalysisMeasureFieldPtrInput          `pulumi:"value"`
}

func (AnalysisTopBottomMoversComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTopBottomMoversComputation)(nil)).Elem()
}

func (i AnalysisTopBottomMoversComputationArgs) ToAnalysisTopBottomMoversComputationOutput() AnalysisTopBottomMoversComputationOutput {
	return i.ToAnalysisTopBottomMoversComputationOutputWithContext(context.Background())
}

func (i AnalysisTopBottomMoversComputationArgs) ToAnalysisTopBottomMoversComputationOutputWithContext(ctx context.Context) AnalysisTopBottomMoversComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTopBottomMoversComputationOutput)
}

func (i AnalysisTopBottomMoversComputationArgs) ToAnalysisTopBottomMoversComputationPtrOutput() AnalysisTopBottomMoversComputationPtrOutput {
	return i.ToAnalysisTopBottomMoversComputationPtrOutputWithContext(context.Background())
}

func (i AnalysisTopBottomMoversComputationArgs) ToAnalysisTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) AnalysisTopBottomMoversComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTopBottomMoversComputationOutput).ToAnalysisTopBottomMoversComputationPtrOutputWithContext(ctx)
}

// AnalysisTopBottomMoversComputationPtrInput is an input type that accepts AnalysisTopBottomMoversComputationArgs, AnalysisTopBottomMoversComputationPtr and AnalysisTopBottomMoversComputationPtrOutput values.
// You can construct a concrete instance of `AnalysisTopBottomMoversComputationPtrInput` via:
//
//	        AnalysisTopBottomMoversComputationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTopBottomMoversComputationPtrInput interface {
	pulumi.Input

	ToAnalysisTopBottomMoversComputationPtrOutput() AnalysisTopBottomMoversComputationPtrOutput
	ToAnalysisTopBottomMoversComputationPtrOutputWithContext(context.Context) AnalysisTopBottomMoversComputationPtrOutput
}

type analysisTopBottomMoversComputationPtrType AnalysisTopBottomMoversComputationArgs

func AnalysisTopBottomMoversComputationPtr(v *AnalysisTopBottomMoversComputationArgs) AnalysisTopBottomMoversComputationPtrInput {
	return (*analysisTopBottomMoversComputationPtrType)(v)
}

func (*analysisTopBottomMoversComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTopBottomMoversComputation)(nil)).Elem()
}

func (i *analysisTopBottomMoversComputationPtrType) ToAnalysisTopBottomMoversComputationPtrOutput() AnalysisTopBottomMoversComputationPtrOutput {
	return i.ToAnalysisTopBottomMoversComputationPtrOutputWithContext(context.Background())
}

func (i *analysisTopBottomMoversComputationPtrType) ToAnalysisTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) AnalysisTopBottomMoversComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTopBottomMoversComputationPtrOutput)
}

type AnalysisTopBottomMoversComputationOutput struct{ *pulumi.OutputState }

func (AnalysisTopBottomMoversComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTopBottomMoversComputation)(nil)).Elem()
}

func (o AnalysisTopBottomMoversComputationOutput) ToAnalysisTopBottomMoversComputationOutput() AnalysisTopBottomMoversComputationOutput {
	return o
}

func (o AnalysisTopBottomMoversComputationOutput) ToAnalysisTopBottomMoversComputationOutputWithContext(ctx context.Context) AnalysisTopBottomMoversComputationOutput {
	return o
}

func (o AnalysisTopBottomMoversComputationOutput) ToAnalysisTopBottomMoversComputationPtrOutput() AnalysisTopBottomMoversComputationPtrOutput {
	return o.ToAnalysisTopBottomMoversComputationPtrOutputWithContext(context.Background())
}

func (o AnalysisTopBottomMoversComputationOutput) ToAnalysisTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) AnalysisTopBottomMoversComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTopBottomMoversComputation) *AnalysisTopBottomMoversComputation {
		return &v
	}).(AnalysisTopBottomMoversComputationPtrOutput)
}

func (o AnalysisTopBottomMoversComputationOutput) Category() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v AnalysisTopBottomMoversComputation) AnalysisDimensionField { return v.Category }).(AnalysisDimensionFieldOutput)
}

func (o AnalysisTopBottomMoversComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTopBottomMoversComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o AnalysisTopBottomMoversComputationOutput) MoverSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTopBottomMoversComputation) *float64 { return v.MoverSize }).(pulumi.Float64PtrOutput)
}

func (o AnalysisTopBottomMoversComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTopBottomMoversComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisTopBottomMoversComputationOutput) SortOrder() AnalysisTopBottomSortOrderPtrOutput {
	return o.ApplyT(func(v AnalysisTopBottomMoversComputation) *AnalysisTopBottomSortOrder { return v.SortOrder }).(AnalysisTopBottomSortOrderPtrOutput)
}

func (o AnalysisTopBottomMoversComputationOutput) Time() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v AnalysisTopBottomMoversComputation) AnalysisDimensionField { return v.Time }).(AnalysisDimensionFieldOutput)
}

func (o AnalysisTopBottomMoversComputationOutput) Type() AnalysisTopBottomComputationTypeOutput {
	return o.ApplyT(func(v AnalysisTopBottomMoversComputation) AnalysisTopBottomComputationType { return v.Type }).(AnalysisTopBottomComputationTypeOutput)
}

func (o AnalysisTopBottomMoversComputationOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisTopBottomMoversComputation) *AnalysisMeasureField { return v.Value }).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisTopBottomMoversComputationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTopBottomMoversComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTopBottomMoversComputation)(nil)).Elem()
}

func (o AnalysisTopBottomMoversComputationPtrOutput) ToAnalysisTopBottomMoversComputationPtrOutput() AnalysisTopBottomMoversComputationPtrOutput {
	return o
}

func (o AnalysisTopBottomMoversComputationPtrOutput) ToAnalysisTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) AnalysisTopBottomMoversComputationPtrOutput {
	return o
}

func (o AnalysisTopBottomMoversComputationPtrOutput) Elem() AnalysisTopBottomMoversComputationOutput {
	return o.ApplyT(func(v *AnalysisTopBottomMoversComputation) AnalysisTopBottomMoversComputation {
		if v != nil {
			return *v
		}
		var ret AnalysisTopBottomMoversComputation
		return ret
	}).(AnalysisTopBottomMoversComputationOutput)
}

func (o AnalysisTopBottomMoversComputationPtrOutput) Category() AnalysisDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomMoversComputation) *AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return &v.Category
	}).(AnalysisDimensionFieldPtrOutput)
}

func (o AnalysisTopBottomMoversComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomMoversComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTopBottomMoversComputationPtrOutput) MoverSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomMoversComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.MoverSize
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisTopBottomMoversComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomMoversComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTopBottomMoversComputationPtrOutput) SortOrder() AnalysisTopBottomSortOrderPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomMoversComputation) *AnalysisTopBottomSortOrder {
		if v == nil {
			return nil
		}
		return v.SortOrder
	}).(AnalysisTopBottomSortOrderPtrOutput)
}

func (o AnalysisTopBottomMoversComputationPtrOutput) Time() AnalysisDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomMoversComputation) *AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(AnalysisDimensionFieldPtrOutput)
}

func (o AnalysisTopBottomMoversComputationPtrOutput) Type() AnalysisTopBottomComputationTypePtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomMoversComputation) *AnalysisTopBottomComputationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(AnalysisTopBottomComputationTypePtrOutput)
}

func (o AnalysisTopBottomMoversComputationPtrOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomMoversComputation) *AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisTopBottomRankedComputation struct {
	Category      AnalysisDimensionField           `pulumi:"category"`
	ComputationId string                           `pulumi:"computationId"`
	Name          *string                          `pulumi:"name"`
	ResultSize    *float64                         `pulumi:"resultSize"`
	Type          AnalysisTopBottomComputationType `pulumi:"type"`
	Value         *AnalysisMeasureField            `pulumi:"value"`
}

// AnalysisTopBottomRankedComputationInput is an input type that accepts AnalysisTopBottomRankedComputationArgs and AnalysisTopBottomRankedComputationOutput values.
// You can construct a concrete instance of `AnalysisTopBottomRankedComputationInput` via:
//
//	AnalysisTopBottomRankedComputationArgs{...}
type AnalysisTopBottomRankedComputationInput interface {
	pulumi.Input

	ToAnalysisTopBottomRankedComputationOutput() AnalysisTopBottomRankedComputationOutput
	ToAnalysisTopBottomRankedComputationOutputWithContext(context.Context) AnalysisTopBottomRankedComputationOutput
}

type AnalysisTopBottomRankedComputationArgs struct {
	Category      AnalysisDimensionFieldInput           `pulumi:"category"`
	ComputationId pulumi.StringInput                    `pulumi:"computationId"`
	Name          pulumi.StringPtrInput                 `pulumi:"name"`
	ResultSize    pulumi.Float64PtrInput                `pulumi:"resultSize"`
	Type          AnalysisTopBottomComputationTypeInput `pulumi:"type"`
	Value         AnalysisMeasureFieldPtrInput          `pulumi:"value"`
}

func (AnalysisTopBottomRankedComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTopBottomRankedComputation)(nil)).Elem()
}

func (i AnalysisTopBottomRankedComputationArgs) ToAnalysisTopBottomRankedComputationOutput() AnalysisTopBottomRankedComputationOutput {
	return i.ToAnalysisTopBottomRankedComputationOutputWithContext(context.Background())
}

func (i AnalysisTopBottomRankedComputationArgs) ToAnalysisTopBottomRankedComputationOutputWithContext(ctx context.Context) AnalysisTopBottomRankedComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTopBottomRankedComputationOutput)
}

func (i AnalysisTopBottomRankedComputationArgs) ToAnalysisTopBottomRankedComputationPtrOutput() AnalysisTopBottomRankedComputationPtrOutput {
	return i.ToAnalysisTopBottomRankedComputationPtrOutputWithContext(context.Background())
}

func (i AnalysisTopBottomRankedComputationArgs) ToAnalysisTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) AnalysisTopBottomRankedComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTopBottomRankedComputationOutput).ToAnalysisTopBottomRankedComputationPtrOutputWithContext(ctx)
}

// AnalysisTopBottomRankedComputationPtrInput is an input type that accepts AnalysisTopBottomRankedComputationArgs, AnalysisTopBottomRankedComputationPtr and AnalysisTopBottomRankedComputationPtrOutput values.
// You can construct a concrete instance of `AnalysisTopBottomRankedComputationPtrInput` via:
//
//	        AnalysisTopBottomRankedComputationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTopBottomRankedComputationPtrInput interface {
	pulumi.Input

	ToAnalysisTopBottomRankedComputationPtrOutput() AnalysisTopBottomRankedComputationPtrOutput
	ToAnalysisTopBottomRankedComputationPtrOutputWithContext(context.Context) AnalysisTopBottomRankedComputationPtrOutput
}

type analysisTopBottomRankedComputationPtrType AnalysisTopBottomRankedComputationArgs

func AnalysisTopBottomRankedComputationPtr(v *AnalysisTopBottomRankedComputationArgs) AnalysisTopBottomRankedComputationPtrInput {
	return (*analysisTopBottomRankedComputationPtrType)(v)
}

func (*analysisTopBottomRankedComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTopBottomRankedComputation)(nil)).Elem()
}

func (i *analysisTopBottomRankedComputationPtrType) ToAnalysisTopBottomRankedComputationPtrOutput() AnalysisTopBottomRankedComputationPtrOutput {
	return i.ToAnalysisTopBottomRankedComputationPtrOutputWithContext(context.Background())
}

func (i *analysisTopBottomRankedComputationPtrType) ToAnalysisTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) AnalysisTopBottomRankedComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTopBottomRankedComputationPtrOutput)
}

type AnalysisTopBottomRankedComputationOutput struct{ *pulumi.OutputState }

func (AnalysisTopBottomRankedComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTopBottomRankedComputation)(nil)).Elem()
}

func (o AnalysisTopBottomRankedComputationOutput) ToAnalysisTopBottomRankedComputationOutput() AnalysisTopBottomRankedComputationOutput {
	return o
}

func (o AnalysisTopBottomRankedComputationOutput) ToAnalysisTopBottomRankedComputationOutputWithContext(ctx context.Context) AnalysisTopBottomRankedComputationOutput {
	return o
}

func (o AnalysisTopBottomRankedComputationOutput) ToAnalysisTopBottomRankedComputationPtrOutput() AnalysisTopBottomRankedComputationPtrOutput {
	return o.ToAnalysisTopBottomRankedComputationPtrOutputWithContext(context.Background())
}

func (o AnalysisTopBottomRankedComputationOutput) ToAnalysisTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) AnalysisTopBottomRankedComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTopBottomRankedComputation) *AnalysisTopBottomRankedComputation {
		return &v
	}).(AnalysisTopBottomRankedComputationPtrOutput)
}

func (o AnalysisTopBottomRankedComputationOutput) Category() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v AnalysisTopBottomRankedComputation) AnalysisDimensionField { return v.Category }).(AnalysisDimensionFieldOutput)
}

func (o AnalysisTopBottomRankedComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTopBottomRankedComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o AnalysisTopBottomRankedComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTopBottomRankedComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisTopBottomRankedComputationOutput) ResultSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisTopBottomRankedComputation) *float64 { return v.ResultSize }).(pulumi.Float64PtrOutput)
}

func (o AnalysisTopBottomRankedComputationOutput) Type() AnalysisTopBottomComputationTypeOutput {
	return o.ApplyT(func(v AnalysisTopBottomRankedComputation) AnalysisTopBottomComputationType { return v.Type }).(AnalysisTopBottomComputationTypeOutput)
}

func (o AnalysisTopBottomRankedComputationOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v AnalysisTopBottomRankedComputation) *AnalysisMeasureField { return v.Value }).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisTopBottomRankedComputationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTopBottomRankedComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTopBottomRankedComputation)(nil)).Elem()
}

func (o AnalysisTopBottomRankedComputationPtrOutput) ToAnalysisTopBottomRankedComputationPtrOutput() AnalysisTopBottomRankedComputationPtrOutput {
	return o
}

func (o AnalysisTopBottomRankedComputationPtrOutput) ToAnalysisTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) AnalysisTopBottomRankedComputationPtrOutput {
	return o
}

func (o AnalysisTopBottomRankedComputationPtrOutput) Elem() AnalysisTopBottomRankedComputationOutput {
	return o.ApplyT(func(v *AnalysisTopBottomRankedComputation) AnalysisTopBottomRankedComputation {
		if v != nil {
			return *v
		}
		var ret AnalysisTopBottomRankedComputation
		return ret
	}).(AnalysisTopBottomRankedComputationOutput)
}

func (o AnalysisTopBottomRankedComputationPtrOutput) Category() AnalysisDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomRankedComputation) *AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return &v.Category
	}).(AnalysisDimensionFieldPtrOutput)
}

func (o AnalysisTopBottomRankedComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomRankedComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTopBottomRankedComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomRankedComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTopBottomRankedComputationPtrOutput) ResultSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomRankedComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.ResultSize
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisTopBottomRankedComputationPtrOutput) Type() AnalysisTopBottomComputationTypePtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomRankedComputation) *AnalysisTopBottomComputationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(AnalysisTopBottomComputationTypePtrOutput)
}

func (o AnalysisTopBottomRankedComputationPtrOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisTopBottomRankedComputation) *AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisTotalAggregationComputation struct {
	ComputationId string               `pulumi:"computationId"`
	Name          *string              `pulumi:"name"`
	Value         AnalysisMeasureField `pulumi:"value"`
}

// AnalysisTotalAggregationComputationInput is an input type that accepts AnalysisTotalAggregationComputationArgs and AnalysisTotalAggregationComputationOutput values.
// You can construct a concrete instance of `AnalysisTotalAggregationComputationInput` via:
//
//	AnalysisTotalAggregationComputationArgs{...}
type AnalysisTotalAggregationComputationInput interface {
	pulumi.Input

	ToAnalysisTotalAggregationComputationOutput() AnalysisTotalAggregationComputationOutput
	ToAnalysisTotalAggregationComputationOutputWithContext(context.Context) AnalysisTotalAggregationComputationOutput
}

type AnalysisTotalAggregationComputationArgs struct {
	ComputationId pulumi.StringInput        `pulumi:"computationId"`
	Name          pulumi.StringPtrInput     `pulumi:"name"`
	Value         AnalysisMeasureFieldInput `pulumi:"value"`
}

func (AnalysisTotalAggregationComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTotalAggregationComputation)(nil)).Elem()
}

func (i AnalysisTotalAggregationComputationArgs) ToAnalysisTotalAggregationComputationOutput() AnalysisTotalAggregationComputationOutput {
	return i.ToAnalysisTotalAggregationComputationOutputWithContext(context.Background())
}

func (i AnalysisTotalAggregationComputationArgs) ToAnalysisTotalAggregationComputationOutputWithContext(ctx context.Context) AnalysisTotalAggregationComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTotalAggregationComputationOutput)
}

func (i AnalysisTotalAggregationComputationArgs) ToAnalysisTotalAggregationComputationPtrOutput() AnalysisTotalAggregationComputationPtrOutput {
	return i.ToAnalysisTotalAggregationComputationPtrOutputWithContext(context.Background())
}

func (i AnalysisTotalAggregationComputationArgs) ToAnalysisTotalAggregationComputationPtrOutputWithContext(ctx context.Context) AnalysisTotalAggregationComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTotalAggregationComputationOutput).ToAnalysisTotalAggregationComputationPtrOutputWithContext(ctx)
}

// AnalysisTotalAggregationComputationPtrInput is an input type that accepts AnalysisTotalAggregationComputationArgs, AnalysisTotalAggregationComputationPtr and AnalysisTotalAggregationComputationPtrOutput values.
// You can construct a concrete instance of `AnalysisTotalAggregationComputationPtrInput` via:
//
//	        AnalysisTotalAggregationComputationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTotalAggregationComputationPtrInput interface {
	pulumi.Input

	ToAnalysisTotalAggregationComputationPtrOutput() AnalysisTotalAggregationComputationPtrOutput
	ToAnalysisTotalAggregationComputationPtrOutputWithContext(context.Context) AnalysisTotalAggregationComputationPtrOutput
}

type analysisTotalAggregationComputationPtrType AnalysisTotalAggregationComputationArgs

func AnalysisTotalAggregationComputationPtr(v *AnalysisTotalAggregationComputationArgs) AnalysisTotalAggregationComputationPtrInput {
	return (*analysisTotalAggregationComputationPtrType)(v)
}

func (*analysisTotalAggregationComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTotalAggregationComputation)(nil)).Elem()
}

func (i *analysisTotalAggregationComputationPtrType) ToAnalysisTotalAggregationComputationPtrOutput() AnalysisTotalAggregationComputationPtrOutput {
	return i.ToAnalysisTotalAggregationComputationPtrOutputWithContext(context.Background())
}

func (i *analysisTotalAggregationComputationPtrType) ToAnalysisTotalAggregationComputationPtrOutputWithContext(ctx context.Context) AnalysisTotalAggregationComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTotalAggregationComputationPtrOutput)
}

type AnalysisTotalAggregationComputationOutput struct{ *pulumi.OutputState }

func (AnalysisTotalAggregationComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTotalAggregationComputation)(nil)).Elem()
}

func (o AnalysisTotalAggregationComputationOutput) ToAnalysisTotalAggregationComputationOutput() AnalysisTotalAggregationComputationOutput {
	return o
}

func (o AnalysisTotalAggregationComputationOutput) ToAnalysisTotalAggregationComputationOutputWithContext(ctx context.Context) AnalysisTotalAggregationComputationOutput {
	return o
}

func (o AnalysisTotalAggregationComputationOutput) ToAnalysisTotalAggregationComputationPtrOutput() AnalysisTotalAggregationComputationPtrOutput {
	return o.ToAnalysisTotalAggregationComputationPtrOutputWithContext(context.Background())
}

func (o AnalysisTotalAggregationComputationOutput) ToAnalysisTotalAggregationComputationPtrOutputWithContext(ctx context.Context) AnalysisTotalAggregationComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTotalAggregationComputation) *AnalysisTotalAggregationComputation {
		return &v
	}).(AnalysisTotalAggregationComputationPtrOutput)
}

func (o AnalysisTotalAggregationComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTotalAggregationComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o AnalysisTotalAggregationComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTotalAggregationComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AnalysisTotalAggregationComputationOutput) Value() AnalysisMeasureFieldOutput {
	return o.ApplyT(func(v AnalysisTotalAggregationComputation) AnalysisMeasureField { return v.Value }).(AnalysisMeasureFieldOutput)
}

type AnalysisTotalAggregationComputationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTotalAggregationComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTotalAggregationComputation)(nil)).Elem()
}

func (o AnalysisTotalAggregationComputationPtrOutput) ToAnalysisTotalAggregationComputationPtrOutput() AnalysisTotalAggregationComputationPtrOutput {
	return o
}

func (o AnalysisTotalAggregationComputationPtrOutput) ToAnalysisTotalAggregationComputationPtrOutputWithContext(ctx context.Context) AnalysisTotalAggregationComputationPtrOutput {
	return o
}

func (o AnalysisTotalAggregationComputationPtrOutput) Elem() AnalysisTotalAggregationComputationOutput {
	return o.ApplyT(func(v *AnalysisTotalAggregationComputation) AnalysisTotalAggregationComputation {
		if v != nil {
			return *v
		}
		var ret AnalysisTotalAggregationComputation
		return ret
	}).(AnalysisTotalAggregationComputationOutput)
}

func (o AnalysisTotalAggregationComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTotalAggregationComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTotalAggregationComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTotalAggregationComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTotalAggregationComputationPtrOutput) Value() AnalysisMeasureFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisTotalAggregationComputation) *AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(AnalysisMeasureFieldPtrOutput)
}

type AnalysisTotalOptions struct {
	CustomLabel      *string                          `pulumi:"customLabel"`
	Placement        *AnalysisTableTotalsPlacement    `pulumi:"placement"`
	ScrollStatus     *AnalysisTableTotalsScrollStatus `pulumi:"scrollStatus"`
	TotalCellStyle   *AnalysisTableCellStyle          `pulumi:"totalCellStyle"`
	TotalsVisibility *AnalysisVisibility              `pulumi:"totalsVisibility"`
}

// AnalysisTotalOptionsInput is an input type that accepts AnalysisTotalOptionsArgs and AnalysisTotalOptionsOutput values.
// You can construct a concrete instance of `AnalysisTotalOptionsInput` via:
//
//	AnalysisTotalOptionsArgs{...}
type AnalysisTotalOptionsInput interface {
	pulumi.Input

	ToAnalysisTotalOptionsOutput() AnalysisTotalOptionsOutput
	ToAnalysisTotalOptionsOutputWithContext(context.Context) AnalysisTotalOptionsOutput
}

type AnalysisTotalOptionsArgs struct {
	CustomLabel      pulumi.StringPtrInput                   `pulumi:"customLabel"`
	Placement        AnalysisTableTotalsPlacementPtrInput    `pulumi:"placement"`
	ScrollStatus     AnalysisTableTotalsScrollStatusPtrInput `pulumi:"scrollStatus"`
	TotalCellStyle   AnalysisTableCellStylePtrInput          `pulumi:"totalCellStyle"`
	TotalsVisibility AnalysisVisibilityPtrInput              `pulumi:"totalsVisibility"`
}

func (AnalysisTotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTotalOptions)(nil)).Elem()
}

func (i AnalysisTotalOptionsArgs) ToAnalysisTotalOptionsOutput() AnalysisTotalOptionsOutput {
	return i.ToAnalysisTotalOptionsOutputWithContext(context.Background())
}

func (i AnalysisTotalOptionsArgs) ToAnalysisTotalOptionsOutputWithContext(ctx context.Context) AnalysisTotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTotalOptionsOutput)
}

func (i AnalysisTotalOptionsArgs) ToAnalysisTotalOptionsPtrOutput() AnalysisTotalOptionsPtrOutput {
	return i.ToAnalysisTotalOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTotalOptionsArgs) ToAnalysisTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTotalOptionsOutput).ToAnalysisTotalOptionsPtrOutputWithContext(ctx)
}

// AnalysisTotalOptionsPtrInput is an input type that accepts AnalysisTotalOptionsArgs, AnalysisTotalOptionsPtr and AnalysisTotalOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTotalOptionsPtrInput` via:
//
//	        AnalysisTotalOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTotalOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTotalOptionsPtrOutput() AnalysisTotalOptionsPtrOutput
	ToAnalysisTotalOptionsPtrOutputWithContext(context.Context) AnalysisTotalOptionsPtrOutput
}

type analysisTotalOptionsPtrType AnalysisTotalOptionsArgs

func AnalysisTotalOptionsPtr(v *AnalysisTotalOptionsArgs) AnalysisTotalOptionsPtrInput {
	return (*analysisTotalOptionsPtrType)(v)
}

func (*analysisTotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTotalOptions)(nil)).Elem()
}

func (i *analysisTotalOptionsPtrType) ToAnalysisTotalOptionsPtrOutput() AnalysisTotalOptionsPtrOutput {
	return i.ToAnalysisTotalOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTotalOptionsPtrType) ToAnalysisTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTotalOptionsPtrOutput)
}

type AnalysisTotalOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTotalOptions)(nil)).Elem()
}

func (o AnalysisTotalOptionsOutput) ToAnalysisTotalOptionsOutput() AnalysisTotalOptionsOutput {
	return o
}

func (o AnalysisTotalOptionsOutput) ToAnalysisTotalOptionsOutputWithContext(ctx context.Context) AnalysisTotalOptionsOutput {
	return o
}

func (o AnalysisTotalOptionsOutput) ToAnalysisTotalOptionsPtrOutput() AnalysisTotalOptionsPtrOutput {
	return o.ToAnalysisTotalOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTotalOptionsOutput) ToAnalysisTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisTotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTotalOptions) *AnalysisTotalOptions {
		return &v
	}).(AnalysisTotalOptionsPtrOutput)
}

func (o AnalysisTotalOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisTotalOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o AnalysisTotalOptionsOutput) Placement() AnalysisTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v AnalysisTotalOptions) *AnalysisTableTotalsPlacement { return v.Placement }).(AnalysisTableTotalsPlacementPtrOutput)
}

func (o AnalysisTotalOptionsOutput) ScrollStatus() AnalysisTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v AnalysisTotalOptions) *AnalysisTableTotalsScrollStatus { return v.ScrollStatus }).(AnalysisTableTotalsScrollStatusPtrOutput)
}

func (o AnalysisTotalOptionsOutput) TotalCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v AnalysisTotalOptions) *AnalysisTableCellStyle { return v.TotalCellStyle }).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisTotalOptionsOutput) TotalsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisTotalOptions) *AnalysisVisibility { return v.TotalsVisibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisTotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTotalOptions)(nil)).Elem()
}

func (o AnalysisTotalOptionsPtrOutput) ToAnalysisTotalOptionsPtrOutput() AnalysisTotalOptionsPtrOutput {
	return o
}

func (o AnalysisTotalOptionsPtrOutput) ToAnalysisTotalOptionsPtrOutputWithContext(ctx context.Context) AnalysisTotalOptionsPtrOutput {
	return o
}

func (o AnalysisTotalOptionsPtrOutput) Elem() AnalysisTotalOptionsOutput {
	return o.ApplyT(func(v *AnalysisTotalOptions) AnalysisTotalOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTotalOptions
		return ret
	}).(AnalysisTotalOptionsOutput)
}

func (o AnalysisTotalOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTotalOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisTotalOptionsPtrOutput) Placement() AnalysisTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v *AnalysisTotalOptions) *AnalysisTableTotalsPlacement {
		if v == nil {
			return nil
		}
		return v.Placement
	}).(AnalysisTableTotalsPlacementPtrOutput)
}

func (o AnalysisTotalOptionsPtrOutput) ScrollStatus() AnalysisTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v *AnalysisTotalOptions) *AnalysisTableTotalsScrollStatus {
		if v == nil {
			return nil
		}
		return v.ScrollStatus
	}).(AnalysisTableTotalsScrollStatusPtrOutput)
}

func (o AnalysisTotalOptionsPtrOutput) TotalCellStyle() AnalysisTableCellStylePtrOutput {
	return o.ApplyT(func(v *AnalysisTotalOptions) *AnalysisTableCellStyle {
		if v == nil {
			return nil
		}
		return v.TotalCellStyle
	}).(AnalysisTableCellStylePtrOutput)
}

func (o AnalysisTotalOptionsPtrOutput) TotalsVisibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisTotalOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.TotalsVisibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisTreeMapAggregatedFieldWells struct {
	Colors []AnalysisMeasureField   `pulumi:"colors"`
	Groups []AnalysisDimensionField `pulumi:"groups"`
	Sizes  []AnalysisMeasureField   `pulumi:"sizes"`
}

// AnalysisTreeMapAggregatedFieldWellsInput is an input type that accepts AnalysisTreeMapAggregatedFieldWellsArgs and AnalysisTreeMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisTreeMapAggregatedFieldWellsInput` via:
//
//	AnalysisTreeMapAggregatedFieldWellsArgs{...}
type AnalysisTreeMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisTreeMapAggregatedFieldWellsOutput() AnalysisTreeMapAggregatedFieldWellsOutput
	ToAnalysisTreeMapAggregatedFieldWellsOutputWithContext(context.Context) AnalysisTreeMapAggregatedFieldWellsOutput
}

type AnalysisTreeMapAggregatedFieldWellsArgs struct {
	Colors AnalysisMeasureFieldArrayInput   `pulumi:"colors"`
	Groups AnalysisDimensionFieldArrayInput `pulumi:"groups"`
	Sizes  AnalysisMeasureFieldArrayInput   `pulumi:"sizes"`
}

func (AnalysisTreeMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisTreeMapAggregatedFieldWellsArgs) ToAnalysisTreeMapAggregatedFieldWellsOutput() AnalysisTreeMapAggregatedFieldWellsOutput {
	return i.ToAnalysisTreeMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisTreeMapAggregatedFieldWellsArgs) ToAnalysisTreeMapAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisTreeMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapAggregatedFieldWellsOutput)
}

func (i AnalysisTreeMapAggregatedFieldWellsArgs) ToAnalysisTreeMapAggregatedFieldWellsPtrOutput() AnalysisTreeMapAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisTreeMapAggregatedFieldWellsArgs) ToAnalysisTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTreeMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapAggregatedFieldWellsOutput).ToAnalysisTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisTreeMapAggregatedFieldWellsPtrInput is an input type that accepts AnalysisTreeMapAggregatedFieldWellsArgs, AnalysisTreeMapAggregatedFieldWellsPtr and AnalysisTreeMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisTreeMapAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisTreeMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTreeMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisTreeMapAggregatedFieldWellsPtrOutput() AnalysisTreeMapAggregatedFieldWellsPtrOutput
	ToAnalysisTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisTreeMapAggregatedFieldWellsPtrOutput
}

type analysisTreeMapAggregatedFieldWellsPtrType AnalysisTreeMapAggregatedFieldWellsArgs

func AnalysisTreeMapAggregatedFieldWellsPtr(v *AnalysisTreeMapAggregatedFieldWellsArgs) AnalysisTreeMapAggregatedFieldWellsPtrInput {
	return (*analysisTreeMapAggregatedFieldWellsPtrType)(v)
}

func (*analysisTreeMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisTreeMapAggregatedFieldWellsPtrType) ToAnalysisTreeMapAggregatedFieldWellsPtrOutput() AnalysisTreeMapAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisTreeMapAggregatedFieldWellsPtrType) ToAnalysisTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTreeMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapAggregatedFieldWellsPtrOutput)
}

type AnalysisTreeMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisTreeMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisTreeMapAggregatedFieldWellsOutput) ToAnalysisTreeMapAggregatedFieldWellsOutput() AnalysisTreeMapAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisTreeMapAggregatedFieldWellsOutput) ToAnalysisTreeMapAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisTreeMapAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisTreeMapAggregatedFieldWellsOutput) ToAnalysisTreeMapAggregatedFieldWellsPtrOutput() AnalysisTreeMapAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisTreeMapAggregatedFieldWellsOutput) ToAnalysisTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTreeMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTreeMapAggregatedFieldWells) *AnalysisTreeMapAggregatedFieldWells {
		return &v
	}).(AnalysisTreeMapAggregatedFieldWellsPtrOutput)
}

func (o AnalysisTreeMapAggregatedFieldWellsOutput) Colors() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisTreeMapAggregatedFieldWells) []AnalysisMeasureField { return v.Colors }).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisTreeMapAggregatedFieldWellsOutput) Groups() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisTreeMapAggregatedFieldWells) []AnalysisDimensionField { return v.Groups }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisTreeMapAggregatedFieldWellsOutput) Sizes() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisTreeMapAggregatedFieldWells) []AnalysisMeasureField { return v.Sizes }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisTreeMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTreeMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisTreeMapAggregatedFieldWellsPtrOutput) ToAnalysisTreeMapAggregatedFieldWellsPtrOutput() AnalysisTreeMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisTreeMapAggregatedFieldWellsPtrOutput) ToAnalysisTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTreeMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisTreeMapAggregatedFieldWellsPtrOutput) Elem() AnalysisTreeMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisTreeMapAggregatedFieldWells) AnalysisTreeMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisTreeMapAggregatedFieldWells
		return ret
	}).(AnalysisTreeMapAggregatedFieldWellsOutput)
}

func (o AnalysisTreeMapAggregatedFieldWellsPtrOutput) Colors() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisTreeMapAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(AnalysisMeasureFieldArrayOutput)
}

func (o AnalysisTreeMapAggregatedFieldWellsPtrOutput) Groups() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisTreeMapAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisTreeMapAggregatedFieldWellsPtrOutput) Sizes() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisTreeMapAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Sizes
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisTreeMapConfiguration struct {
	ColorLabelOptions *AnalysisChartAxisLabelOptions    `pulumi:"colorLabelOptions"`
	ColorScale        *AnalysisColorScale               `pulumi:"colorScale"`
	DataLabels        *AnalysisDataLabelOptions         `pulumi:"dataLabels"`
	FieldWells        *AnalysisTreeMapFieldWells        `pulumi:"fieldWells"`
	GroupLabelOptions *AnalysisChartAxisLabelOptions    `pulumi:"groupLabelOptions"`
	Legend            *AnalysisLegendOptions            `pulumi:"legend"`
	SizeLabelOptions  *AnalysisChartAxisLabelOptions    `pulumi:"sizeLabelOptions"`
	SortConfiguration *AnalysisTreeMapSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip           *AnalysisTooltipOptions           `pulumi:"tooltip"`
}

// AnalysisTreeMapConfigurationInput is an input type that accepts AnalysisTreeMapConfigurationArgs and AnalysisTreeMapConfigurationOutput values.
// You can construct a concrete instance of `AnalysisTreeMapConfigurationInput` via:
//
//	AnalysisTreeMapConfigurationArgs{...}
type AnalysisTreeMapConfigurationInput interface {
	pulumi.Input

	ToAnalysisTreeMapConfigurationOutput() AnalysisTreeMapConfigurationOutput
	ToAnalysisTreeMapConfigurationOutputWithContext(context.Context) AnalysisTreeMapConfigurationOutput
}

type AnalysisTreeMapConfigurationArgs struct {
	ColorLabelOptions AnalysisChartAxisLabelOptionsPtrInput    `pulumi:"colorLabelOptions"`
	ColorScale        AnalysisColorScalePtrInput               `pulumi:"colorScale"`
	DataLabels        AnalysisDataLabelOptionsPtrInput         `pulumi:"dataLabels"`
	FieldWells        AnalysisTreeMapFieldWellsPtrInput        `pulumi:"fieldWells"`
	GroupLabelOptions AnalysisChartAxisLabelOptionsPtrInput    `pulumi:"groupLabelOptions"`
	Legend            AnalysisLegendOptionsPtrInput            `pulumi:"legend"`
	SizeLabelOptions  AnalysisChartAxisLabelOptionsPtrInput    `pulumi:"sizeLabelOptions"`
	SortConfiguration AnalysisTreeMapSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip           AnalysisTooltipOptionsPtrInput           `pulumi:"tooltip"`
}

func (AnalysisTreeMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTreeMapConfiguration)(nil)).Elem()
}

func (i AnalysisTreeMapConfigurationArgs) ToAnalysisTreeMapConfigurationOutput() AnalysisTreeMapConfigurationOutput {
	return i.ToAnalysisTreeMapConfigurationOutputWithContext(context.Background())
}

func (i AnalysisTreeMapConfigurationArgs) ToAnalysisTreeMapConfigurationOutputWithContext(ctx context.Context) AnalysisTreeMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapConfigurationOutput)
}

func (i AnalysisTreeMapConfigurationArgs) ToAnalysisTreeMapConfigurationPtrOutput() AnalysisTreeMapConfigurationPtrOutput {
	return i.ToAnalysisTreeMapConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisTreeMapConfigurationArgs) ToAnalysisTreeMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTreeMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapConfigurationOutput).ToAnalysisTreeMapConfigurationPtrOutputWithContext(ctx)
}

// AnalysisTreeMapConfigurationPtrInput is an input type that accepts AnalysisTreeMapConfigurationArgs, AnalysisTreeMapConfigurationPtr and AnalysisTreeMapConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisTreeMapConfigurationPtrInput` via:
//
//	        AnalysisTreeMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTreeMapConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisTreeMapConfigurationPtrOutput() AnalysisTreeMapConfigurationPtrOutput
	ToAnalysisTreeMapConfigurationPtrOutputWithContext(context.Context) AnalysisTreeMapConfigurationPtrOutput
}

type analysisTreeMapConfigurationPtrType AnalysisTreeMapConfigurationArgs

func AnalysisTreeMapConfigurationPtr(v *AnalysisTreeMapConfigurationArgs) AnalysisTreeMapConfigurationPtrInput {
	return (*analysisTreeMapConfigurationPtrType)(v)
}

func (*analysisTreeMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTreeMapConfiguration)(nil)).Elem()
}

func (i *analysisTreeMapConfigurationPtrType) ToAnalysisTreeMapConfigurationPtrOutput() AnalysisTreeMapConfigurationPtrOutput {
	return i.ToAnalysisTreeMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisTreeMapConfigurationPtrType) ToAnalysisTreeMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTreeMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapConfigurationPtrOutput)
}

type AnalysisTreeMapConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisTreeMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTreeMapConfiguration)(nil)).Elem()
}

func (o AnalysisTreeMapConfigurationOutput) ToAnalysisTreeMapConfigurationOutput() AnalysisTreeMapConfigurationOutput {
	return o
}

func (o AnalysisTreeMapConfigurationOutput) ToAnalysisTreeMapConfigurationOutputWithContext(ctx context.Context) AnalysisTreeMapConfigurationOutput {
	return o
}

func (o AnalysisTreeMapConfigurationOutput) ToAnalysisTreeMapConfigurationPtrOutput() AnalysisTreeMapConfigurationPtrOutput {
	return o.ToAnalysisTreeMapConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisTreeMapConfigurationOutput) ToAnalysisTreeMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTreeMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTreeMapConfiguration) *AnalysisTreeMapConfiguration {
		return &v
	}).(AnalysisTreeMapConfigurationPtrOutput)
}

func (o AnalysisTreeMapConfigurationOutput) ColorLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapConfiguration) *AnalysisChartAxisLabelOptions { return v.ColorLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapConfigurationOutput) ColorScale() AnalysisColorScalePtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapConfiguration) *AnalysisColorScale { return v.ColorScale }).(AnalysisColorScalePtrOutput)
}

func (o AnalysisTreeMapConfigurationOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapConfiguration) *AnalysisDataLabelOptions { return v.DataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapConfigurationOutput) FieldWells() AnalysisTreeMapFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapConfiguration) *AnalysisTreeMapFieldWells { return v.FieldWells }).(AnalysisTreeMapFieldWellsPtrOutput)
}

func (o AnalysisTreeMapConfigurationOutput) GroupLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapConfiguration) *AnalysisChartAxisLabelOptions { return v.GroupLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisTreeMapConfigurationOutput) SizeLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapConfiguration) *AnalysisChartAxisLabelOptions { return v.SizeLabelOptions }).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapConfigurationOutput) SortConfiguration() AnalysisTreeMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapConfiguration) *AnalysisTreeMapSortConfiguration { return v.SortConfiguration }).(AnalysisTreeMapSortConfigurationPtrOutput)
}

func (o AnalysisTreeMapConfigurationOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapConfiguration) *AnalysisTooltipOptions { return v.Tooltip }).(AnalysisTooltipOptionsPtrOutput)
}

type AnalysisTreeMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTreeMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTreeMapConfiguration)(nil)).Elem()
}

func (o AnalysisTreeMapConfigurationPtrOutput) ToAnalysisTreeMapConfigurationPtrOutput() AnalysisTreeMapConfigurationPtrOutput {
	return o
}

func (o AnalysisTreeMapConfigurationPtrOutput) ToAnalysisTreeMapConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTreeMapConfigurationPtrOutput {
	return o
}

func (o AnalysisTreeMapConfigurationPtrOutput) Elem() AnalysisTreeMapConfigurationOutput {
	return o.ApplyT(func(v *AnalysisTreeMapConfiguration) AnalysisTreeMapConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisTreeMapConfiguration
		return ret
	}).(AnalysisTreeMapConfigurationOutput)
}

func (o AnalysisTreeMapConfigurationPtrOutput) ColorLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapConfigurationPtrOutput) ColorScale() AnalysisColorScalePtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapConfiguration) *AnalysisColorScale {
		if v == nil {
			return nil
		}
		return v.ColorScale
	}).(AnalysisColorScalePtrOutput)
}

func (o AnalysisTreeMapConfigurationPtrOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapConfigurationPtrOutput) FieldWells() AnalysisTreeMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapConfiguration) *AnalysisTreeMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisTreeMapFieldWellsPtrOutput)
}

func (o AnalysisTreeMapConfigurationPtrOutput) GroupLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.GroupLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisTreeMapConfigurationPtrOutput) SizeLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.SizeLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapConfigurationPtrOutput) SortConfiguration() AnalysisTreeMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapConfiguration) *AnalysisTreeMapSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisTreeMapSortConfigurationPtrOutput)
}

func (o AnalysisTreeMapConfigurationPtrOutput) Tooltip() AnalysisTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapConfiguration) *AnalysisTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(AnalysisTooltipOptionsPtrOutput)
}

type AnalysisTreeMapFieldWells struct {
	TreeMapAggregatedFieldWells *AnalysisTreeMapAggregatedFieldWells `pulumi:"treeMapAggregatedFieldWells"`
}

// AnalysisTreeMapFieldWellsInput is an input type that accepts AnalysisTreeMapFieldWellsArgs and AnalysisTreeMapFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisTreeMapFieldWellsInput` via:
//
//	AnalysisTreeMapFieldWellsArgs{...}
type AnalysisTreeMapFieldWellsInput interface {
	pulumi.Input

	ToAnalysisTreeMapFieldWellsOutput() AnalysisTreeMapFieldWellsOutput
	ToAnalysisTreeMapFieldWellsOutputWithContext(context.Context) AnalysisTreeMapFieldWellsOutput
}

type AnalysisTreeMapFieldWellsArgs struct {
	TreeMapAggregatedFieldWells AnalysisTreeMapAggregatedFieldWellsPtrInput `pulumi:"treeMapAggregatedFieldWells"`
}

func (AnalysisTreeMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTreeMapFieldWells)(nil)).Elem()
}

func (i AnalysisTreeMapFieldWellsArgs) ToAnalysisTreeMapFieldWellsOutput() AnalysisTreeMapFieldWellsOutput {
	return i.ToAnalysisTreeMapFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisTreeMapFieldWellsArgs) ToAnalysisTreeMapFieldWellsOutputWithContext(ctx context.Context) AnalysisTreeMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapFieldWellsOutput)
}

func (i AnalysisTreeMapFieldWellsArgs) ToAnalysisTreeMapFieldWellsPtrOutput() AnalysisTreeMapFieldWellsPtrOutput {
	return i.ToAnalysisTreeMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisTreeMapFieldWellsArgs) ToAnalysisTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTreeMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapFieldWellsOutput).ToAnalysisTreeMapFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisTreeMapFieldWellsPtrInput is an input type that accepts AnalysisTreeMapFieldWellsArgs, AnalysisTreeMapFieldWellsPtr and AnalysisTreeMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisTreeMapFieldWellsPtrInput` via:
//
//	        AnalysisTreeMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTreeMapFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisTreeMapFieldWellsPtrOutput() AnalysisTreeMapFieldWellsPtrOutput
	ToAnalysisTreeMapFieldWellsPtrOutputWithContext(context.Context) AnalysisTreeMapFieldWellsPtrOutput
}

type analysisTreeMapFieldWellsPtrType AnalysisTreeMapFieldWellsArgs

func AnalysisTreeMapFieldWellsPtr(v *AnalysisTreeMapFieldWellsArgs) AnalysisTreeMapFieldWellsPtrInput {
	return (*analysisTreeMapFieldWellsPtrType)(v)
}

func (*analysisTreeMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTreeMapFieldWells)(nil)).Elem()
}

func (i *analysisTreeMapFieldWellsPtrType) ToAnalysisTreeMapFieldWellsPtrOutput() AnalysisTreeMapFieldWellsPtrOutput {
	return i.ToAnalysisTreeMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisTreeMapFieldWellsPtrType) ToAnalysisTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTreeMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapFieldWellsPtrOutput)
}

type AnalysisTreeMapFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisTreeMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTreeMapFieldWells)(nil)).Elem()
}

func (o AnalysisTreeMapFieldWellsOutput) ToAnalysisTreeMapFieldWellsOutput() AnalysisTreeMapFieldWellsOutput {
	return o
}

func (o AnalysisTreeMapFieldWellsOutput) ToAnalysisTreeMapFieldWellsOutputWithContext(ctx context.Context) AnalysisTreeMapFieldWellsOutput {
	return o
}

func (o AnalysisTreeMapFieldWellsOutput) ToAnalysisTreeMapFieldWellsPtrOutput() AnalysisTreeMapFieldWellsPtrOutput {
	return o.ToAnalysisTreeMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisTreeMapFieldWellsOutput) ToAnalysisTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTreeMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTreeMapFieldWells) *AnalysisTreeMapFieldWells {
		return &v
	}).(AnalysisTreeMapFieldWellsPtrOutput)
}

func (o AnalysisTreeMapFieldWellsOutput) TreeMapAggregatedFieldWells() AnalysisTreeMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapFieldWells) *AnalysisTreeMapAggregatedFieldWells {
		return v.TreeMapAggregatedFieldWells
	}).(AnalysisTreeMapAggregatedFieldWellsPtrOutput)
}

type AnalysisTreeMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTreeMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTreeMapFieldWells)(nil)).Elem()
}

func (o AnalysisTreeMapFieldWellsPtrOutput) ToAnalysisTreeMapFieldWellsPtrOutput() AnalysisTreeMapFieldWellsPtrOutput {
	return o
}

func (o AnalysisTreeMapFieldWellsPtrOutput) ToAnalysisTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisTreeMapFieldWellsPtrOutput {
	return o
}

func (o AnalysisTreeMapFieldWellsPtrOutput) Elem() AnalysisTreeMapFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisTreeMapFieldWells) AnalysisTreeMapFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisTreeMapFieldWells
		return ret
	}).(AnalysisTreeMapFieldWellsOutput)
}

func (o AnalysisTreeMapFieldWellsPtrOutput) TreeMapAggregatedFieldWells() AnalysisTreeMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapFieldWells) *AnalysisTreeMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.TreeMapAggregatedFieldWells
	}).(AnalysisTreeMapAggregatedFieldWellsPtrOutput)
}

type AnalysisTreeMapSortConfiguration struct {
	TreeMapGroupItemsLimitConfiguration *AnalysisItemsLimitConfiguration `pulumi:"treeMapGroupItemsLimitConfiguration"`
	TreeMapSort                         []AnalysisFieldSortOptions       `pulumi:"treeMapSort"`
}

// AnalysisTreeMapSortConfigurationInput is an input type that accepts AnalysisTreeMapSortConfigurationArgs and AnalysisTreeMapSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisTreeMapSortConfigurationInput` via:
//
//	AnalysisTreeMapSortConfigurationArgs{...}
type AnalysisTreeMapSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisTreeMapSortConfigurationOutput() AnalysisTreeMapSortConfigurationOutput
	ToAnalysisTreeMapSortConfigurationOutputWithContext(context.Context) AnalysisTreeMapSortConfigurationOutput
}

type AnalysisTreeMapSortConfigurationArgs struct {
	TreeMapGroupItemsLimitConfiguration AnalysisItemsLimitConfigurationPtrInput `pulumi:"treeMapGroupItemsLimitConfiguration"`
	TreeMapSort                         AnalysisFieldSortOptionsArrayInput      `pulumi:"treeMapSort"`
}

func (AnalysisTreeMapSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTreeMapSortConfiguration)(nil)).Elem()
}

func (i AnalysisTreeMapSortConfigurationArgs) ToAnalysisTreeMapSortConfigurationOutput() AnalysisTreeMapSortConfigurationOutput {
	return i.ToAnalysisTreeMapSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisTreeMapSortConfigurationArgs) ToAnalysisTreeMapSortConfigurationOutputWithContext(ctx context.Context) AnalysisTreeMapSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapSortConfigurationOutput)
}

func (i AnalysisTreeMapSortConfigurationArgs) ToAnalysisTreeMapSortConfigurationPtrOutput() AnalysisTreeMapSortConfigurationPtrOutput {
	return i.ToAnalysisTreeMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisTreeMapSortConfigurationArgs) ToAnalysisTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTreeMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapSortConfigurationOutput).ToAnalysisTreeMapSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisTreeMapSortConfigurationPtrInput is an input type that accepts AnalysisTreeMapSortConfigurationArgs, AnalysisTreeMapSortConfigurationPtr and AnalysisTreeMapSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisTreeMapSortConfigurationPtrInput` via:
//
//	        AnalysisTreeMapSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisTreeMapSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisTreeMapSortConfigurationPtrOutput() AnalysisTreeMapSortConfigurationPtrOutput
	ToAnalysisTreeMapSortConfigurationPtrOutputWithContext(context.Context) AnalysisTreeMapSortConfigurationPtrOutput
}

type analysisTreeMapSortConfigurationPtrType AnalysisTreeMapSortConfigurationArgs

func AnalysisTreeMapSortConfigurationPtr(v *AnalysisTreeMapSortConfigurationArgs) AnalysisTreeMapSortConfigurationPtrInput {
	return (*analysisTreeMapSortConfigurationPtrType)(v)
}

func (*analysisTreeMapSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTreeMapSortConfiguration)(nil)).Elem()
}

func (i *analysisTreeMapSortConfigurationPtrType) ToAnalysisTreeMapSortConfigurationPtrOutput() AnalysisTreeMapSortConfigurationPtrOutput {
	return i.ToAnalysisTreeMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisTreeMapSortConfigurationPtrType) ToAnalysisTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTreeMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapSortConfigurationPtrOutput)
}

type AnalysisTreeMapSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisTreeMapSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTreeMapSortConfiguration)(nil)).Elem()
}

func (o AnalysisTreeMapSortConfigurationOutput) ToAnalysisTreeMapSortConfigurationOutput() AnalysisTreeMapSortConfigurationOutput {
	return o
}

func (o AnalysisTreeMapSortConfigurationOutput) ToAnalysisTreeMapSortConfigurationOutputWithContext(ctx context.Context) AnalysisTreeMapSortConfigurationOutput {
	return o
}

func (o AnalysisTreeMapSortConfigurationOutput) ToAnalysisTreeMapSortConfigurationPtrOutput() AnalysisTreeMapSortConfigurationPtrOutput {
	return o.ToAnalysisTreeMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisTreeMapSortConfigurationOutput) ToAnalysisTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTreeMapSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTreeMapSortConfiguration) *AnalysisTreeMapSortConfiguration {
		return &v
	}).(AnalysisTreeMapSortConfigurationPtrOutput)
}

func (o AnalysisTreeMapSortConfigurationOutput) TreeMapGroupItemsLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.TreeMapGroupItemsLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisTreeMapSortConfigurationOutput) TreeMapSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisTreeMapSortConfiguration) []AnalysisFieldSortOptions { return v.TreeMapSort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisTreeMapSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTreeMapSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTreeMapSortConfiguration)(nil)).Elem()
}

func (o AnalysisTreeMapSortConfigurationPtrOutput) ToAnalysisTreeMapSortConfigurationPtrOutput() AnalysisTreeMapSortConfigurationPtrOutput {
	return o
}

func (o AnalysisTreeMapSortConfigurationPtrOutput) ToAnalysisTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTreeMapSortConfigurationPtrOutput {
	return o
}

func (o AnalysisTreeMapSortConfigurationPtrOutput) Elem() AnalysisTreeMapSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisTreeMapSortConfiguration) AnalysisTreeMapSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisTreeMapSortConfiguration
		return ret
	}).(AnalysisTreeMapSortConfigurationOutput)
}

func (o AnalysisTreeMapSortConfigurationPtrOutput) TreeMapGroupItemsLimitConfiguration() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.TreeMapGroupItemsLimitConfiguration
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisTreeMapSortConfigurationPtrOutput) TreeMapSort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisTreeMapSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.TreeMapSort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisTreeMapVisual struct {
	Actions            []AnalysisVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *AnalysisTreeMapConfiguration       `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// AnalysisTreeMapVisualInput is an input type that accepts AnalysisTreeMapVisualArgs and AnalysisTreeMapVisualOutput values.
// You can construct a concrete instance of `AnalysisTreeMapVisualInput` via:
//
//	AnalysisTreeMapVisualArgs{...}
type AnalysisTreeMapVisualInput interface {
	pulumi.Input

	ToAnalysisTreeMapVisualOutput() AnalysisTreeMapVisualOutput
	ToAnalysisTreeMapVisualOutputWithContext(context.Context) AnalysisTreeMapVisualOutput
}

type AnalysisTreeMapVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration AnalysisTreeMapConfigurationPtrInput       `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (AnalysisTreeMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTreeMapVisual)(nil)).Elem()
}

func (i AnalysisTreeMapVisualArgs) ToAnalysisTreeMapVisualOutput() AnalysisTreeMapVisualOutput {
	return i.ToAnalysisTreeMapVisualOutputWithContext(context.Background())
}

func (i AnalysisTreeMapVisualArgs) ToAnalysisTreeMapVisualOutputWithContext(ctx context.Context) AnalysisTreeMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapVisualOutput)
}

func (i AnalysisTreeMapVisualArgs) ToAnalysisTreeMapVisualPtrOutput() AnalysisTreeMapVisualPtrOutput {
	return i.ToAnalysisTreeMapVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisTreeMapVisualArgs) ToAnalysisTreeMapVisualPtrOutputWithContext(ctx context.Context) AnalysisTreeMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapVisualOutput).ToAnalysisTreeMapVisualPtrOutputWithContext(ctx)
}

// AnalysisTreeMapVisualPtrInput is an input type that accepts AnalysisTreeMapVisualArgs, AnalysisTreeMapVisualPtr and AnalysisTreeMapVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisTreeMapVisualPtrInput` via:
//
//	        AnalysisTreeMapVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisTreeMapVisualPtrInput interface {
	pulumi.Input

	ToAnalysisTreeMapVisualPtrOutput() AnalysisTreeMapVisualPtrOutput
	ToAnalysisTreeMapVisualPtrOutputWithContext(context.Context) AnalysisTreeMapVisualPtrOutput
}

type analysisTreeMapVisualPtrType AnalysisTreeMapVisualArgs

func AnalysisTreeMapVisualPtr(v *AnalysisTreeMapVisualArgs) AnalysisTreeMapVisualPtrInput {
	return (*analysisTreeMapVisualPtrType)(v)
}

func (*analysisTreeMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTreeMapVisual)(nil)).Elem()
}

func (i *analysisTreeMapVisualPtrType) ToAnalysisTreeMapVisualPtrOutput() AnalysisTreeMapVisualPtrOutput {
	return i.ToAnalysisTreeMapVisualPtrOutputWithContext(context.Background())
}

func (i *analysisTreeMapVisualPtrType) ToAnalysisTreeMapVisualPtrOutputWithContext(ctx context.Context) AnalysisTreeMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTreeMapVisualPtrOutput)
}

type AnalysisTreeMapVisualOutput struct{ *pulumi.OutputState }

func (AnalysisTreeMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTreeMapVisual)(nil)).Elem()
}

func (o AnalysisTreeMapVisualOutput) ToAnalysisTreeMapVisualOutput() AnalysisTreeMapVisualOutput {
	return o
}

func (o AnalysisTreeMapVisualOutput) ToAnalysisTreeMapVisualOutputWithContext(ctx context.Context) AnalysisTreeMapVisualOutput {
	return o
}

func (o AnalysisTreeMapVisualOutput) ToAnalysisTreeMapVisualPtrOutput() AnalysisTreeMapVisualPtrOutput {
	return o.ToAnalysisTreeMapVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisTreeMapVisualOutput) ToAnalysisTreeMapVisualPtrOutputWithContext(ctx context.Context) AnalysisTreeMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTreeMapVisual) *AnalysisTreeMapVisual {
		return &v
	}).(AnalysisTreeMapVisualPtrOutput)
}

func (o AnalysisTreeMapVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisTreeMapVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisTreeMapVisualOutput) ChartConfiguration() AnalysisTreeMapConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapVisual) *AnalysisTreeMapConfiguration { return v.ChartConfiguration }).(AnalysisTreeMapConfigurationPtrOutput)
}

func (o AnalysisTreeMapVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisTreeMapVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisTreeMapVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisTreeMapVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisTreeMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisTreeMapVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTreeMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTreeMapVisual)(nil)).Elem()
}

func (o AnalysisTreeMapVisualPtrOutput) ToAnalysisTreeMapVisualPtrOutput() AnalysisTreeMapVisualPtrOutput {
	return o
}

func (o AnalysisTreeMapVisualPtrOutput) ToAnalysisTreeMapVisualPtrOutputWithContext(ctx context.Context) AnalysisTreeMapVisualPtrOutput {
	return o
}

func (o AnalysisTreeMapVisualPtrOutput) Elem() AnalysisTreeMapVisualOutput {
	return o.ApplyT(func(v *AnalysisTreeMapVisual) AnalysisTreeMapVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisTreeMapVisual
		return ret
	}).(AnalysisTreeMapVisualOutput)
}

func (o AnalysisTreeMapVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisTreeMapVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisTreeMapVisualPtrOutput) ChartConfiguration() AnalysisTreeMapConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapVisual) *AnalysisTreeMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisTreeMapConfigurationPtrOutput)
}

func (o AnalysisTreeMapVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisTreeMapVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisTreeMapVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisTreeMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisTreeMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisTrendArrowOptions struct {
	Visibility *AnalysisVisibility `pulumi:"visibility"`
}

// AnalysisTrendArrowOptionsInput is an input type that accepts AnalysisTrendArrowOptionsArgs and AnalysisTrendArrowOptionsOutput values.
// You can construct a concrete instance of `AnalysisTrendArrowOptionsInput` via:
//
//	AnalysisTrendArrowOptionsArgs{...}
type AnalysisTrendArrowOptionsInput interface {
	pulumi.Input

	ToAnalysisTrendArrowOptionsOutput() AnalysisTrendArrowOptionsOutput
	ToAnalysisTrendArrowOptionsOutputWithContext(context.Context) AnalysisTrendArrowOptionsOutput
}

type AnalysisTrendArrowOptionsArgs struct {
	Visibility AnalysisVisibilityPtrInput `pulumi:"visibility"`
}

func (AnalysisTrendArrowOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTrendArrowOptions)(nil)).Elem()
}

func (i AnalysisTrendArrowOptionsArgs) ToAnalysisTrendArrowOptionsOutput() AnalysisTrendArrowOptionsOutput {
	return i.ToAnalysisTrendArrowOptionsOutputWithContext(context.Background())
}

func (i AnalysisTrendArrowOptionsArgs) ToAnalysisTrendArrowOptionsOutputWithContext(ctx context.Context) AnalysisTrendArrowOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTrendArrowOptionsOutput)
}

func (i AnalysisTrendArrowOptionsArgs) ToAnalysisTrendArrowOptionsPtrOutput() AnalysisTrendArrowOptionsPtrOutput {
	return i.ToAnalysisTrendArrowOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisTrendArrowOptionsArgs) ToAnalysisTrendArrowOptionsPtrOutputWithContext(ctx context.Context) AnalysisTrendArrowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTrendArrowOptionsOutput).ToAnalysisTrendArrowOptionsPtrOutputWithContext(ctx)
}

// AnalysisTrendArrowOptionsPtrInput is an input type that accepts AnalysisTrendArrowOptionsArgs, AnalysisTrendArrowOptionsPtr and AnalysisTrendArrowOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisTrendArrowOptionsPtrInput` via:
//
//	        AnalysisTrendArrowOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisTrendArrowOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTrendArrowOptionsPtrOutput() AnalysisTrendArrowOptionsPtrOutput
	ToAnalysisTrendArrowOptionsPtrOutputWithContext(context.Context) AnalysisTrendArrowOptionsPtrOutput
}

type analysisTrendArrowOptionsPtrType AnalysisTrendArrowOptionsArgs

func AnalysisTrendArrowOptionsPtr(v *AnalysisTrendArrowOptionsArgs) AnalysisTrendArrowOptionsPtrInput {
	return (*analysisTrendArrowOptionsPtrType)(v)
}

func (*analysisTrendArrowOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTrendArrowOptions)(nil)).Elem()
}

func (i *analysisTrendArrowOptionsPtrType) ToAnalysisTrendArrowOptionsPtrOutput() AnalysisTrendArrowOptionsPtrOutput {
	return i.ToAnalysisTrendArrowOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisTrendArrowOptionsPtrType) ToAnalysisTrendArrowOptionsPtrOutputWithContext(ctx context.Context) AnalysisTrendArrowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisTrendArrowOptionsPtrOutput)
}

type AnalysisTrendArrowOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTrendArrowOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTrendArrowOptions)(nil)).Elem()
}

func (o AnalysisTrendArrowOptionsOutput) ToAnalysisTrendArrowOptionsOutput() AnalysisTrendArrowOptionsOutput {
	return o
}

func (o AnalysisTrendArrowOptionsOutput) ToAnalysisTrendArrowOptionsOutputWithContext(ctx context.Context) AnalysisTrendArrowOptionsOutput {
	return o
}

func (o AnalysisTrendArrowOptionsOutput) ToAnalysisTrendArrowOptionsPtrOutput() AnalysisTrendArrowOptionsPtrOutput {
	return o.ToAnalysisTrendArrowOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTrendArrowOptionsOutput) ToAnalysisTrendArrowOptionsPtrOutputWithContext(ctx context.Context) AnalysisTrendArrowOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTrendArrowOptions) *AnalysisTrendArrowOptions {
		return &v
	}).(AnalysisTrendArrowOptionsPtrOutput)
}

func (o AnalysisTrendArrowOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisTrendArrowOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisTrendArrowOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTrendArrowOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTrendArrowOptions)(nil)).Elem()
}

func (o AnalysisTrendArrowOptionsPtrOutput) ToAnalysisTrendArrowOptionsPtrOutput() AnalysisTrendArrowOptionsPtrOutput {
	return o
}

func (o AnalysisTrendArrowOptionsPtrOutput) ToAnalysisTrendArrowOptionsPtrOutputWithContext(ctx context.Context) AnalysisTrendArrowOptionsPtrOutput {
	return o
}

func (o AnalysisTrendArrowOptionsPtrOutput) Elem() AnalysisTrendArrowOptionsOutput {
	return o.ApplyT(func(v *AnalysisTrendArrowOptions) AnalysisTrendArrowOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTrendArrowOptions
		return ret
	}).(AnalysisTrendArrowOptionsOutput)
}

func (o AnalysisTrendArrowOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisTrendArrowOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisUnaggregatedField struct {
	Column              AnalysisColumnIdentifier     `pulumi:"column"`
	FieldId             string                       `pulumi:"fieldId"`
	FormatConfiguration *AnalysisFormatConfiguration `pulumi:"formatConfiguration"`
}

// AnalysisUnaggregatedFieldInput is an input type that accepts AnalysisUnaggregatedFieldArgs and AnalysisUnaggregatedFieldOutput values.
// You can construct a concrete instance of `AnalysisUnaggregatedFieldInput` via:
//
//	AnalysisUnaggregatedFieldArgs{...}
type AnalysisUnaggregatedFieldInput interface {
	pulumi.Input

	ToAnalysisUnaggregatedFieldOutput() AnalysisUnaggregatedFieldOutput
	ToAnalysisUnaggregatedFieldOutputWithContext(context.Context) AnalysisUnaggregatedFieldOutput
}

type AnalysisUnaggregatedFieldArgs struct {
	Column              AnalysisColumnIdentifierInput       `pulumi:"column"`
	FieldId             pulumi.StringInput                  `pulumi:"fieldId"`
	FormatConfiguration AnalysisFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
}

func (AnalysisUnaggregatedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisUnaggregatedField)(nil)).Elem()
}

func (i AnalysisUnaggregatedFieldArgs) ToAnalysisUnaggregatedFieldOutput() AnalysisUnaggregatedFieldOutput {
	return i.ToAnalysisUnaggregatedFieldOutputWithContext(context.Background())
}

func (i AnalysisUnaggregatedFieldArgs) ToAnalysisUnaggregatedFieldOutputWithContext(ctx context.Context) AnalysisUnaggregatedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisUnaggregatedFieldOutput)
}

// AnalysisUnaggregatedFieldArrayInput is an input type that accepts AnalysisUnaggregatedFieldArray and AnalysisUnaggregatedFieldArrayOutput values.
// You can construct a concrete instance of `AnalysisUnaggregatedFieldArrayInput` via:
//
//	AnalysisUnaggregatedFieldArray{ AnalysisUnaggregatedFieldArgs{...} }
type AnalysisUnaggregatedFieldArrayInput interface {
	pulumi.Input

	ToAnalysisUnaggregatedFieldArrayOutput() AnalysisUnaggregatedFieldArrayOutput
	ToAnalysisUnaggregatedFieldArrayOutputWithContext(context.Context) AnalysisUnaggregatedFieldArrayOutput
}

type AnalysisUnaggregatedFieldArray []AnalysisUnaggregatedFieldInput

func (AnalysisUnaggregatedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisUnaggregatedField)(nil)).Elem()
}

func (i AnalysisUnaggregatedFieldArray) ToAnalysisUnaggregatedFieldArrayOutput() AnalysisUnaggregatedFieldArrayOutput {
	return i.ToAnalysisUnaggregatedFieldArrayOutputWithContext(context.Background())
}

func (i AnalysisUnaggregatedFieldArray) ToAnalysisUnaggregatedFieldArrayOutputWithContext(ctx context.Context) AnalysisUnaggregatedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisUnaggregatedFieldArrayOutput)
}

type AnalysisUnaggregatedFieldOutput struct{ *pulumi.OutputState }

func (AnalysisUnaggregatedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisUnaggregatedField)(nil)).Elem()
}

func (o AnalysisUnaggregatedFieldOutput) ToAnalysisUnaggregatedFieldOutput() AnalysisUnaggregatedFieldOutput {
	return o
}

func (o AnalysisUnaggregatedFieldOutput) ToAnalysisUnaggregatedFieldOutputWithContext(ctx context.Context) AnalysisUnaggregatedFieldOutput {
	return o
}

func (o AnalysisUnaggregatedFieldOutput) Column() AnalysisColumnIdentifierOutput {
	return o.ApplyT(func(v AnalysisUnaggregatedField) AnalysisColumnIdentifier { return v.Column }).(AnalysisColumnIdentifierOutput)
}

func (o AnalysisUnaggregatedFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisUnaggregatedField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o AnalysisUnaggregatedFieldOutput) FormatConfiguration() AnalysisFormatConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisUnaggregatedField) *AnalysisFormatConfiguration { return v.FormatConfiguration }).(AnalysisFormatConfigurationPtrOutput)
}

type AnalysisUnaggregatedFieldArrayOutput struct{ *pulumi.OutputState }

func (AnalysisUnaggregatedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisUnaggregatedField)(nil)).Elem()
}

func (o AnalysisUnaggregatedFieldArrayOutput) ToAnalysisUnaggregatedFieldArrayOutput() AnalysisUnaggregatedFieldArrayOutput {
	return o
}

func (o AnalysisUnaggregatedFieldArrayOutput) ToAnalysisUnaggregatedFieldArrayOutputWithContext(ctx context.Context) AnalysisUnaggregatedFieldArrayOutput {
	return o
}

func (o AnalysisUnaggregatedFieldArrayOutput) Index(i pulumi.IntInput) AnalysisUnaggregatedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisUnaggregatedField {
		return vs[0].([]AnalysisUnaggregatedField)[vs[1].(int)]
	}).(AnalysisUnaggregatedFieldOutput)
}

type AnalysisUniqueValuesComputation struct {
	Category      AnalysisDimensionField `pulumi:"category"`
	ComputationId string                 `pulumi:"computationId"`
	Name          *string                `pulumi:"name"`
}

// AnalysisUniqueValuesComputationInput is an input type that accepts AnalysisUniqueValuesComputationArgs and AnalysisUniqueValuesComputationOutput values.
// You can construct a concrete instance of `AnalysisUniqueValuesComputationInput` via:
//
//	AnalysisUniqueValuesComputationArgs{...}
type AnalysisUniqueValuesComputationInput interface {
	pulumi.Input

	ToAnalysisUniqueValuesComputationOutput() AnalysisUniqueValuesComputationOutput
	ToAnalysisUniqueValuesComputationOutputWithContext(context.Context) AnalysisUniqueValuesComputationOutput
}

type AnalysisUniqueValuesComputationArgs struct {
	Category      AnalysisDimensionFieldInput `pulumi:"category"`
	ComputationId pulumi.StringInput          `pulumi:"computationId"`
	Name          pulumi.StringPtrInput       `pulumi:"name"`
}

func (AnalysisUniqueValuesComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisUniqueValuesComputation)(nil)).Elem()
}

func (i AnalysisUniqueValuesComputationArgs) ToAnalysisUniqueValuesComputationOutput() AnalysisUniqueValuesComputationOutput {
	return i.ToAnalysisUniqueValuesComputationOutputWithContext(context.Background())
}

func (i AnalysisUniqueValuesComputationArgs) ToAnalysisUniqueValuesComputationOutputWithContext(ctx context.Context) AnalysisUniqueValuesComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisUniqueValuesComputationOutput)
}

func (i AnalysisUniqueValuesComputationArgs) ToAnalysisUniqueValuesComputationPtrOutput() AnalysisUniqueValuesComputationPtrOutput {
	return i.ToAnalysisUniqueValuesComputationPtrOutputWithContext(context.Background())
}

func (i AnalysisUniqueValuesComputationArgs) ToAnalysisUniqueValuesComputationPtrOutputWithContext(ctx context.Context) AnalysisUniqueValuesComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisUniqueValuesComputationOutput).ToAnalysisUniqueValuesComputationPtrOutputWithContext(ctx)
}

// AnalysisUniqueValuesComputationPtrInput is an input type that accepts AnalysisUniqueValuesComputationArgs, AnalysisUniqueValuesComputationPtr and AnalysisUniqueValuesComputationPtrOutput values.
// You can construct a concrete instance of `AnalysisUniqueValuesComputationPtrInput` via:
//
//	        AnalysisUniqueValuesComputationArgs{...}
//
//	or:
//
//	        nil
type AnalysisUniqueValuesComputationPtrInput interface {
	pulumi.Input

	ToAnalysisUniqueValuesComputationPtrOutput() AnalysisUniqueValuesComputationPtrOutput
	ToAnalysisUniqueValuesComputationPtrOutputWithContext(context.Context) AnalysisUniqueValuesComputationPtrOutput
}

type analysisUniqueValuesComputationPtrType AnalysisUniqueValuesComputationArgs

func AnalysisUniqueValuesComputationPtr(v *AnalysisUniqueValuesComputationArgs) AnalysisUniqueValuesComputationPtrInput {
	return (*analysisUniqueValuesComputationPtrType)(v)
}

func (*analysisUniqueValuesComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisUniqueValuesComputation)(nil)).Elem()
}

func (i *analysisUniqueValuesComputationPtrType) ToAnalysisUniqueValuesComputationPtrOutput() AnalysisUniqueValuesComputationPtrOutput {
	return i.ToAnalysisUniqueValuesComputationPtrOutputWithContext(context.Background())
}

func (i *analysisUniqueValuesComputationPtrType) ToAnalysisUniqueValuesComputationPtrOutputWithContext(ctx context.Context) AnalysisUniqueValuesComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisUniqueValuesComputationPtrOutput)
}

type AnalysisUniqueValuesComputationOutput struct{ *pulumi.OutputState }

func (AnalysisUniqueValuesComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisUniqueValuesComputation)(nil)).Elem()
}

func (o AnalysisUniqueValuesComputationOutput) ToAnalysisUniqueValuesComputationOutput() AnalysisUniqueValuesComputationOutput {
	return o
}

func (o AnalysisUniqueValuesComputationOutput) ToAnalysisUniqueValuesComputationOutputWithContext(ctx context.Context) AnalysisUniqueValuesComputationOutput {
	return o
}

func (o AnalysisUniqueValuesComputationOutput) ToAnalysisUniqueValuesComputationPtrOutput() AnalysisUniqueValuesComputationPtrOutput {
	return o.ToAnalysisUniqueValuesComputationPtrOutputWithContext(context.Background())
}

func (o AnalysisUniqueValuesComputationOutput) ToAnalysisUniqueValuesComputationPtrOutputWithContext(ctx context.Context) AnalysisUniqueValuesComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisUniqueValuesComputation) *AnalysisUniqueValuesComputation {
		return &v
	}).(AnalysisUniqueValuesComputationPtrOutput)
}

func (o AnalysisUniqueValuesComputationOutput) Category() AnalysisDimensionFieldOutput {
	return o.ApplyT(func(v AnalysisUniqueValuesComputation) AnalysisDimensionField { return v.Category }).(AnalysisDimensionFieldOutput)
}

func (o AnalysisUniqueValuesComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisUniqueValuesComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o AnalysisUniqueValuesComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisUniqueValuesComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AnalysisUniqueValuesComputationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisUniqueValuesComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisUniqueValuesComputation)(nil)).Elem()
}

func (o AnalysisUniqueValuesComputationPtrOutput) ToAnalysisUniqueValuesComputationPtrOutput() AnalysisUniqueValuesComputationPtrOutput {
	return o
}

func (o AnalysisUniqueValuesComputationPtrOutput) ToAnalysisUniqueValuesComputationPtrOutputWithContext(ctx context.Context) AnalysisUniqueValuesComputationPtrOutput {
	return o
}

func (o AnalysisUniqueValuesComputationPtrOutput) Elem() AnalysisUniqueValuesComputationOutput {
	return o.ApplyT(func(v *AnalysisUniqueValuesComputation) AnalysisUniqueValuesComputation {
		if v != nil {
			return *v
		}
		var ret AnalysisUniqueValuesComputation
		return ret
	}).(AnalysisUniqueValuesComputationOutput)
}

func (o AnalysisUniqueValuesComputationPtrOutput) Category() AnalysisDimensionFieldPtrOutput {
	return o.ApplyT(func(v *AnalysisUniqueValuesComputation) *AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return &v.Category
	}).(AnalysisDimensionFieldPtrOutput)
}

func (o AnalysisUniqueValuesComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisUniqueValuesComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisUniqueValuesComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisUniqueValuesComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type AnalysisVisibleRangeOptions struct {
	PercentRange *AnalysisPercentVisibleRange `pulumi:"percentRange"`
}

// AnalysisVisibleRangeOptionsInput is an input type that accepts AnalysisVisibleRangeOptionsArgs and AnalysisVisibleRangeOptionsOutput values.
// You can construct a concrete instance of `AnalysisVisibleRangeOptionsInput` via:
//
//	AnalysisVisibleRangeOptionsArgs{...}
type AnalysisVisibleRangeOptionsInput interface {
	pulumi.Input

	ToAnalysisVisibleRangeOptionsOutput() AnalysisVisibleRangeOptionsOutput
	ToAnalysisVisibleRangeOptionsOutputWithContext(context.Context) AnalysisVisibleRangeOptionsOutput
}

type AnalysisVisibleRangeOptionsArgs struct {
	PercentRange AnalysisPercentVisibleRangePtrInput `pulumi:"percentRange"`
}

func (AnalysisVisibleRangeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisibleRangeOptions)(nil)).Elem()
}

func (i AnalysisVisibleRangeOptionsArgs) ToAnalysisVisibleRangeOptionsOutput() AnalysisVisibleRangeOptionsOutput {
	return i.ToAnalysisVisibleRangeOptionsOutputWithContext(context.Background())
}

func (i AnalysisVisibleRangeOptionsArgs) ToAnalysisVisibleRangeOptionsOutputWithContext(ctx context.Context) AnalysisVisibleRangeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisibleRangeOptionsOutput)
}

func (i AnalysisVisibleRangeOptionsArgs) ToAnalysisVisibleRangeOptionsPtrOutput() AnalysisVisibleRangeOptionsPtrOutput {
	return i.ToAnalysisVisibleRangeOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisVisibleRangeOptionsArgs) ToAnalysisVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisibleRangeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisibleRangeOptionsOutput).ToAnalysisVisibleRangeOptionsPtrOutputWithContext(ctx)
}

// AnalysisVisibleRangeOptionsPtrInput is an input type that accepts AnalysisVisibleRangeOptionsArgs, AnalysisVisibleRangeOptionsPtr and AnalysisVisibleRangeOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisVisibleRangeOptionsPtrInput` via:
//
//	        AnalysisVisibleRangeOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisVisibleRangeOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisVisibleRangeOptionsPtrOutput() AnalysisVisibleRangeOptionsPtrOutput
	ToAnalysisVisibleRangeOptionsPtrOutputWithContext(context.Context) AnalysisVisibleRangeOptionsPtrOutput
}

type analysisVisibleRangeOptionsPtrType AnalysisVisibleRangeOptionsArgs

func AnalysisVisibleRangeOptionsPtr(v *AnalysisVisibleRangeOptionsArgs) AnalysisVisibleRangeOptionsPtrInput {
	return (*analysisVisibleRangeOptionsPtrType)(v)
}

func (*analysisVisibleRangeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVisibleRangeOptions)(nil)).Elem()
}

func (i *analysisVisibleRangeOptionsPtrType) ToAnalysisVisibleRangeOptionsPtrOutput() AnalysisVisibleRangeOptionsPtrOutput {
	return i.ToAnalysisVisibleRangeOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisVisibleRangeOptionsPtrType) ToAnalysisVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisibleRangeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisibleRangeOptionsPtrOutput)
}

type AnalysisVisibleRangeOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisVisibleRangeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisibleRangeOptions)(nil)).Elem()
}

func (o AnalysisVisibleRangeOptionsOutput) ToAnalysisVisibleRangeOptionsOutput() AnalysisVisibleRangeOptionsOutput {
	return o
}

func (o AnalysisVisibleRangeOptionsOutput) ToAnalysisVisibleRangeOptionsOutputWithContext(ctx context.Context) AnalysisVisibleRangeOptionsOutput {
	return o
}

func (o AnalysisVisibleRangeOptionsOutput) ToAnalysisVisibleRangeOptionsPtrOutput() AnalysisVisibleRangeOptionsPtrOutput {
	return o.ToAnalysisVisibleRangeOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisVisibleRangeOptionsOutput) ToAnalysisVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisibleRangeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisVisibleRangeOptions) *AnalysisVisibleRangeOptions {
		return &v
	}).(AnalysisVisibleRangeOptionsPtrOutput)
}

func (o AnalysisVisibleRangeOptionsOutput) PercentRange() AnalysisPercentVisibleRangePtrOutput {
	return o.ApplyT(func(v AnalysisVisibleRangeOptions) *AnalysisPercentVisibleRange { return v.PercentRange }).(AnalysisPercentVisibleRangePtrOutput)
}

type AnalysisVisibleRangeOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisVisibleRangeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVisibleRangeOptions)(nil)).Elem()
}

func (o AnalysisVisibleRangeOptionsPtrOutput) ToAnalysisVisibleRangeOptionsPtrOutput() AnalysisVisibleRangeOptionsPtrOutput {
	return o
}

func (o AnalysisVisibleRangeOptionsPtrOutput) ToAnalysisVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisibleRangeOptionsPtrOutput {
	return o
}

func (o AnalysisVisibleRangeOptionsPtrOutput) Elem() AnalysisVisibleRangeOptionsOutput {
	return o.ApplyT(func(v *AnalysisVisibleRangeOptions) AnalysisVisibleRangeOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisVisibleRangeOptions
		return ret
	}).(AnalysisVisibleRangeOptionsOutput)
}

func (o AnalysisVisibleRangeOptionsPtrOutput) PercentRange() AnalysisPercentVisibleRangePtrOutput {
	return o.ApplyT(func(v *AnalysisVisibleRangeOptions) *AnalysisPercentVisibleRange {
		if v == nil {
			return nil
		}
		return v.PercentRange
	}).(AnalysisPercentVisibleRangePtrOutput)
}

type AnalysisVisual struct {
	BarChartVisual      *AnalysisBarChartVisual      `pulumi:"barChartVisual"`
	BoxPlotVisual       *AnalysisBoxPlotVisual       `pulumi:"boxPlotVisual"`
	ComboChartVisual    *AnalysisComboChartVisual    `pulumi:"comboChartVisual"`
	CustomContentVisual *AnalysisCustomContentVisual `pulumi:"customContentVisual"`
	EmptyVisual         *AnalysisEmptyVisual         `pulumi:"emptyVisual"`
	FilledMapVisual     *AnalysisFilledMapVisual     `pulumi:"filledMapVisual"`
	FunnelChartVisual   *AnalysisFunnelChartVisual   `pulumi:"funnelChartVisual"`
	GaugeChartVisual    *AnalysisGaugeChartVisual    `pulumi:"gaugeChartVisual"`
	GeospatialMapVisual *AnalysisGeospatialMapVisual `pulumi:"geospatialMapVisual"`
	HeatMapVisual       *AnalysisHeatMapVisual       `pulumi:"heatMapVisual"`
	HistogramVisual     *AnalysisHistogramVisual     `pulumi:"histogramVisual"`
	InsightVisual       *AnalysisInsightVisual       `pulumi:"insightVisual"`
	KPIVisual           *AnalysisKPIVisual           `pulumi:"kPIVisual"`
	LineChartVisual     *AnalysisLineChartVisual     `pulumi:"lineChartVisual"`
	PieChartVisual      *AnalysisPieChartVisual      `pulumi:"pieChartVisual"`
	PivotTableVisual    *AnalysisPivotTableVisual    `pulumi:"pivotTableVisual"`
	RadarChartVisual    *AnalysisRadarChartVisual    `pulumi:"radarChartVisual"`
	SankeyDiagramVisual *AnalysisSankeyDiagramVisual `pulumi:"sankeyDiagramVisual"`
	ScatterPlotVisual   *AnalysisScatterPlotVisual   `pulumi:"scatterPlotVisual"`
	TableVisual         *AnalysisTableVisual         `pulumi:"tableVisual"`
	TreeMapVisual       *AnalysisTreeMapVisual       `pulumi:"treeMapVisual"`
	WaterfallVisual     *AnalysisWaterfallVisual     `pulumi:"waterfallVisual"`
	WordCloudVisual     *AnalysisWordCloudVisual     `pulumi:"wordCloudVisual"`
}

// AnalysisVisualInput is an input type that accepts AnalysisVisualArgs and AnalysisVisualOutput values.
// You can construct a concrete instance of `AnalysisVisualInput` via:
//
//	AnalysisVisualArgs{...}
type AnalysisVisualInput interface {
	pulumi.Input

	ToAnalysisVisualOutput() AnalysisVisualOutput
	ToAnalysisVisualOutputWithContext(context.Context) AnalysisVisualOutput
}

type AnalysisVisualArgs struct {
	BarChartVisual      AnalysisBarChartVisualPtrInput      `pulumi:"barChartVisual"`
	BoxPlotVisual       AnalysisBoxPlotVisualPtrInput       `pulumi:"boxPlotVisual"`
	ComboChartVisual    AnalysisComboChartVisualPtrInput    `pulumi:"comboChartVisual"`
	CustomContentVisual AnalysisCustomContentVisualPtrInput `pulumi:"customContentVisual"`
	EmptyVisual         AnalysisEmptyVisualPtrInput         `pulumi:"emptyVisual"`
	FilledMapVisual     AnalysisFilledMapVisualPtrInput     `pulumi:"filledMapVisual"`
	FunnelChartVisual   AnalysisFunnelChartVisualPtrInput   `pulumi:"funnelChartVisual"`
	GaugeChartVisual    AnalysisGaugeChartVisualPtrInput    `pulumi:"gaugeChartVisual"`
	GeospatialMapVisual AnalysisGeospatialMapVisualPtrInput `pulumi:"geospatialMapVisual"`
	HeatMapVisual       AnalysisHeatMapVisualPtrInput       `pulumi:"heatMapVisual"`
	HistogramVisual     AnalysisHistogramVisualPtrInput     `pulumi:"histogramVisual"`
	InsightVisual       AnalysisInsightVisualPtrInput       `pulumi:"insightVisual"`
	KPIVisual           AnalysisKPIVisualPtrInput           `pulumi:"kPIVisual"`
	LineChartVisual     AnalysisLineChartVisualPtrInput     `pulumi:"lineChartVisual"`
	PieChartVisual      AnalysisPieChartVisualPtrInput      `pulumi:"pieChartVisual"`
	PivotTableVisual    AnalysisPivotTableVisualPtrInput    `pulumi:"pivotTableVisual"`
	RadarChartVisual    AnalysisRadarChartVisualPtrInput    `pulumi:"radarChartVisual"`
	SankeyDiagramVisual AnalysisSankeyDiagramVisualPtrInput `pulumi:"sankeyDiagramVisual"`
	ScatterPlotVisual   AnalysisScatterPlotVisualPtrInput   `pulumi:"scatterPlotVisual"`
	TableVisual         AnalysisTableVisualPtrInput         `pulumi:"tableVisual"`
	TreeMapVisual       AnalysisTreeMapVisualPtrInput       `pulumi:"treeMapVisual"`
	WaterfallVisual     AnalysisWaterfallVisualPtrInput     `pulumi:"waterfallVisual"`
	WordCloudVisual     AnalysisWordCloudVisualPtrInput     `pulumi:"wordCloudVisual"`
}

func (AnalysisVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisual)(nil)).Elem()
}

func (i AnalysisVisualArgs) ToAnalysisVisualOutput() AnalysisVisualOutput {
	return i.ToAnalysisVisualOutputWithContext(context.Background())
}

func (i AnalysisVisualArgs) ToAnalysisVisualOutputWithContext(ctx context.Context) AnalysisVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualOutput)
}

// AnalysisVisualArrayInput is an input type that accepts AnalysisVisualArray and AnalysisVisualArrayOutput values.
// You can construct a concrete instance of `AnalysisVisualArrayInput` via:
//
//	AnalysisVisualArray{ AnalysisVisualArgs{...} }
type AnalysisVisualArrayInput interface {
	pulumi.Input

	ToAnalysisVisualArrayOutput() AnalysisVisualArrayOutput
	ToAnalysisVisualArrayOutputWithContext(context.Context) AnalysisVisualArrayOutput
}

type AnalysisVisualArray []AnalysisVisualInput

func (AnalysisVisualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisVisual)(nil)).Elem()
}

func (i AnalysisVisualArray) ToAnalysisVisualArrayOutput() AnalysisVisualArrayOutput {
	return i.ToAnalysisVisualArrayOutputWithContext(context.Background())
}

func (i AnalysisVisualArray) ToAnalysisVisualArrayOutputWithContext(ctx context.Context) AnalysisVisualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualArrayOutput)
}

type AnalysisVisualOutput struct{ *pulumi.OutputState }

func (AnalysisVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisual)(nil)).Elem()
}

func (o AnalysisVisualOutput) ToAnalysisVisualOutput() AnalysisVisualOutput {
	return o
}

func (o AnalysisVisualOutput) ToAnalysisVisualOutputWithContext(ctx context.Context) AnalysisVisualOutput {
	return o
}

func (o AnalysisVisualOutput) BarChartVisual() AnalysisBarChartVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisBarChartVisual { return v.BarChartVisual }).(AnalysisBarChartVisualPtrOutput)
}

func (o AnalysisVisualOutput) BoxPlotVisual() AnalysisBoxPlotVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisBoxPlotVisual { return v.BoxPlotVisual }).(AnalysisBoxPlotVisualPtrOutput)
}

func (o AnalysisVisualOutput) ComboChartVisual() AnalysisComboChartVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisComboChartVisual { return v.ComboChartVisual }).(AnalysisComboChartVisualPtrOutput)
}

func (o AnalysisVisualOutput) CustomContentVisual() AnalysisCustomContentVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisCustomContentVisual { return v.CustomContentVisual }).(AnalysisCustomContentVisualPtrOutput)
}

func (o AnalysisVisualOutput) EmptyVisual() AnalysisEmptyVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisEmptyVisual { return v.EmptyVisual }).(AnalysisEmptyVisualPtrOutput)
}

func (o AnalysisVisualOutput) FilledMapVisual() AnalysisFilledMapVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisFilledMapVisual { return v.FilledMapVisual }).(AnalysisFilledMapVisualPtrOutput)
}

func (o AnalysisVisualOutput) FunnelChartVisual() AnalysisFunnelChartVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisFunnelChartVisual { return v.FunnelChartVisual }).(AnalysisFunnelChartVisualPtrOutput)
}

func (o AnalysisVisualOutput) GaugeChartVisual() AnalysisGaugeChartVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisGaugeChartVisual { return v.GaugeChartVisual }).(AnalysisGaugeChartVisualPtrOutput)
}

func (o AnalysisVisualOutput) GeospatialMapVisual() AnalysisGeospatialMapVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisGeospatialMapVisual { return v.GeospatialMapVisual }).(AnalysisGeospatialMapVisualPtrOutput)
}

func (o AnalysisVisualOutput) HeatMapVisual() AnalysisHeatMapVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisHeatMapVisual { return v.HeatMapVisual }).(AnalysisHeatMapVisualPtrOutput)
}

func (o AnalysisVisualOutput) HistogramVisual() AnalysisHistogramVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisHistogramVisual { return v.HistogramVisual }).(AnalysisHistogramVisualPtrOutput)
}

func (o AnalysisVisualOutput) InsightVisual() AnalysisInsightVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisInsightVisual { return v.InsightVisual }).(AnalysisInsightVisualPtrOutput)
}

func (o AnalysisVisualOutput) KPIVisual() AnalysisKPIVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisKPIVisual { return v.KPIVisual }).(AnalysisKPIVisualPtrOutput)
}

func (o AnalysisVisualOutput) LineChartVisual() AnalysisLineChartVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisLineChartVisual { return v.LineChartVisual }).(AnalysisLineChartVisualPtrOutput)
}

func (o AnalysisVisualOutput) PieChartVisual() AnalysisPieChartVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisPieChartVisual { return v.PieChartVisual }).(AnalysisPieChartVisualPtrOutput)
}

func (o AnalysisVisualOutput) PivotTableVisual() AnalysisPivotTableVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisPivotTableVisual { return v.PivotTableVisual }).(AnalysisPivotTableVisualPtrOutput)
}

func (o AnalysisVisualOutput) RadarChartVisual() AnalysisRadarChartVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisRadarChartVisual { return v.RadarChartVisual }).(AnalysisRadarChartVisualPtrOutput)
}

func (o AnalysisVisualOutput) SankeyDiagramVisual() AnalysisSankeyDiagramVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisSankeyDiagramVisual { return v.SankeyDiagramVisual }).(AnalysisSankeyDiagramVisualPtrOutput)
}

func (o AnalysisVisualOutput) ScatterPlotVisual() AnalysisScatterPlotVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisScatterPlotVisual { return v.ScatterPlotVisual }).(AnalysisScatterPlotVisualPtrOutput)
}

func (o AnalysisVisualOutput) TableVisual() AnalysisTableVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisTableVisual { return v.TableVisual }).(AnalysisTableVisualPtrOutput)
}

func (o AnalysisVisualOutput) TreeMapVisual() AnalysisTreeMapVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisTreeMapVisual { return v.TreeMapVisual }).(AnalysisTreeMapVisualPtrOutput)
}

func (o AnalysisVisualOutput) WaterfallVisual() AnalysisWaterfallVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisWaterfallVisual { return v.WaterfallVisual }).(AnalysisWaterfallVisualPtrOutput)
}

func (o AnalysisVisualOutput) WordCloudVisual() AnalysisWordCloudVisualPtrOutput {
	return o.ApplyT(func(v AnalysisVisual) *AnalysisWordCloudVisual { return v.WordCloudVisual }).(AnalysisWordCloudVisualPtrOutput)
}

type AnalysisVisualArrayOutput struct{ *pulumi.OutputState }

func (AnalysisVisualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisVisual)(nil)).Elem()
}

func (o AnalysisVisualArrayOutput) ToAnalysisVisualArrayOutput() AnalysisVisualArrayOutput {
	return o
}

func (o AnalysisVisualArrayOutput) ToAnalysisVisualArrayOutputWithContext(ctx context.Context) AnalysisVisualArrayOutput {
	return o
}

func (o AnalysisVisualArrayOutput) Index(i pulumi.IntInput) AnalysisVisualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisVisual {
		return vs[0].([]AnalysisVisual)[vs[1].(int)]
	}).(AnalysisVisualOutput)
}

type AnalysisVisualCustomAction struct {
	ActionOperations []AnalysisVisualCustomActionOperation `pulumi:"actionOperations"`
	CustomActionId   string                                `pulumi:"customActionId"`
	Name             string                                `pulumi:"name"`
	Status           *AnalysisWidgetStatus                 `pulumi:"status"`
	Trigger          AnalysisVisualCustomActionTrigger     `pulumi:"trigger"`
}

// AnalysisVisualCustomActionInput is an input type that accepts AnalysisVisualCustomActionArgs and AnalysisVisualCustomActionOutput values.
// You can construct a concrete instance of `AnalysisVisualCustomActionInput` via:
//
//	AnalysisVisualCustomActionArgs{...}
type AnalysisVisualCustomActionInput interface {
	pulumi.Input

	ToAnalysisVisualCustomActionOutput() AnalysisVisualCustomActionOutput
	ToAnalysisVisualCustomActionOutputWithContext(context.Context) AnalysisVisualCustomActionOutput
}

type AnalysisVisualCustomActionArgs struct {
	ActionOperations AnalysisVisualCustomActionOperationArrayInput `pulumi:"actionOperations"`
	CustomActionId   pulumi.StringInput                            `pulumi:"customActionId"`
	Name             pulumi.StringInput                            `pulumi:"name"`
	Status           AnalysisWidgetStatusPtrInput                  `pulumi:"status"`
	Trigger          AnalysisVisualCustomActionTriggerInput        `pulumi:"trigger"`
}

func (AnalysisVisualCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualCustomAction)(nil)).Elem()
}

func (i AnalysisVisualCustomActionArgs) ToAnalysisVisualCustomActionOutput() AnalysisVisualCustomActionOutput {
	return i.ToAnalysisVisualCustomActionOutputWithContext(context.Background())
}

func (i AnalysisVisualCustomActionArgs) ToAnalysisVisualCustomActionOutputWithContext(ctx context.Context) AnalysisVisualCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualCustomActionOutput)
}

// AnalysisVisualCustomActionArrayInput is an input type that accepts AnalysisVisualCustomActionArray and AnalysisVisualCustomActionArrayOutput values.
// You can construct a concrete instance of `AnalysisVisualCustomActionArrayInput` via:
//
//	AnalysisVisualCustomActionArray{ AnalysisVisualCustomActionArgs{...} }
type AnalysisVisualCustomActionArrayInput interface {
	pulumi.Input

	ToAnalysisVisualCustomActionArrayOutput() AnalysisVisualCustomActionArrayOutput
	ToAnalysisVisualCustomActionArrayOutputWithContext(context.Context) AnalysisVisualCustomActionArrayOutput
}

type AnalysisVisualCustomActionArray []AnalysisVisualCustomActionInput

func (AnalysisVisualCustomActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisVisualCustomAction)(nil)).Elem()
}

func (i AnalysisVisualCustomActionArray) ToAnalysisVisualCustomActionArrayOutput() AnalysisVisualCustomActionArrayOutput {
	return i.ToAnalysisVisualCustomActionArrayOutputWithContext(context.Background())
}

func (i AnalysisVisualCustomActionArray) ToAnalysisVisualCustomActionArrayOutputWithContext(ctx context.Context) AnalysisVisualCustomActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualCustomActionArrayOutput)
}

type AnalysisVisualCustomActionOutput struct{ *pulumi.OutputState }

func (AnalysisVisualCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualCustomAction)(nil)).Elem()
}

func (o AnalysisVisualCustomActionOutput) ToAnalysisVisualCustomActionOutput() AnalysisVisualCustomActionOutput {
	return o
}

func (o AnalysisVisualCustomActionOutput) ToAnalysisVisualCustomActionOutputWithContext(ctx context.Context) AnalysisVisualCustomActionOutput {
	return o
}

func (o AnalysisVisualCustomActionOutput) ActionOperations() AnalysisVisualCustomActionOperationArrayOutput {
	return o.ApplyT(func(v AnalysisVisualCustomAction) []AnalysisVisualCustomActionOperation { return v.ActionOperations }).(AnalysisVisualCustomActionOperationArrayOutput)
}

func (o AnalysisVisualCustomActionOutput) CustomActionId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisVisualCustomAction) string { return v.CustomActionId }).(pulumi.StringOutput)
}

func (o AnalysisVisualCustomActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisVisualCustomAction) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalysisVisualCustomActionOutput) Status() AnalysisWidgetStatusPtrOutput {
	return o.ApplyT(func(v AnalysisVisualCustomAction) *AnalysisWidgetStatus { return v.Status }).(AnalysisWidgetStatusPtrOutput)
}

func (o AnalysisVisualCustomActionOutput) Trigger() AnalysisVisualCustomActionTriggerOutput {
	return o.ApplyT(func(v AnalysisVisualCustomAction) AnalysisVisualCustomActionTrigger { return v.Trigger }).(AnalysisVisualCustomActionTriggerOutput)
}

type AnalysisVisualCustomActionArrayOutput struct{ *pulumi.OutputState }

func (AnalysisVisualCustomActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisVisualCustomAction)(nil)).Elem()
}

func (o AnalysisVisualCustomActionArrayOutput) ToAnalysisVisualCustomActionArrayOutput() AnalysisVisualCustomActionArrayOutput {
	return o
}

func (o AnalysisVisualCustomActionArrayOutput) ToAnalysisVisualCustomActionArrayOutputWithContext(ctx context.Context) AnalysisVisualCustomActionArrayOutput {
	return o
}

func (o AnalysisVisualCustomActionArrayOutput) Index(i pulumi.IntInput) AnalysisVisualCustomActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisVisualCustomAction {
		return vs[0].([]AnalysisVisualCustomAction)[vs[1].(int)]
	}).(AnalysisVisualCustomActionOutput)
}

type AnalysisVisualCustomActionOperation struct {
	FilterOperation        *AnalysisCustomActionFilterOperation        `pulumi:"filterOperation"`
	NavigationOperation    *AnalysisCustomActionNavigationOperation    `pulumi:"navigationOperation"`
	SetParametersOperation *AnalysisCustomActionSetParametersOperation `pulumi:"setParametersOperation"`
	URLOperation           *AnalysisCustomActionURLOperation           `pulumi:"uRLOperation"`
}

// AnalysisVisualCustomActionOperationInput is an input type that accepts AnalysisVisualCustomActionOperationArgs and AnalysisVisualCustomActionOperationOutput values.
// You can construct a concrete instance of `AnalysisVisualCustomActionOperationInput` via:
//
//	AnalysisVisualCustomActionOperationArgs{...}
type AnalysisVisualCustomActionOperationInput interface {
	pulumi.Input

	ToAnalysisVisualCustomActionOperationOutput() AnalysisVisualCustomActionOperationOutput
	ToAnalysisVisualCustomActionOperationOutputWithContext(context.Context) AnalysisVisualCustomActionOperationOutput
}

type AnalysisVisualCustomActionOperationArgs struct {
	FilterOperation        AnalysisCustomActionFilterOperationPtrInput        `pulumi:"filterOperation"`
	NavigationOperation    AnalysisCustomActionNavigationOperationPtrInput    `pulumi:"navigationOperation"`
	SetParametersOperation AnalysisCustomActionSetParametersOperationPtrInput `pulumi:"setParametersOperation"`
	URLOperation           AnalysisCustomActionURLOperationPtrInput           `pulumi:"uRLOperation"`
}

func (AnalysisVisualCustomActionOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualCustomActionOperation)(nil)).Elem()
}

func (i AnalysisVisualCustomActionOperationArgs) ToAnalysisVisualCustomActionOperationOutput() AnalysisVisualCustomActionOperationOutput {
	return i.ToAnalysisVisualCustomActionOperationOutputWithContext(context.Background())
}

func (i AnalysisVisualCustomActionOperationArgs) ToAnalysisVisualCustomActionOperationOutputWithContext(ctx context.Context) AnalysisVisualCustomActionOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualCustomActionOperationOutput)
}

// AnalysisVisualCustomActionOperationArrayInput is an input type that accepts AnalysisVisualCustomActionOperationArray and AnalysisVisualCustomActionOperationArrayOutput values.
// You can construct a concrete instance of `AnalysisVisualCustomActionOperationArrayInput` via:
//
//	AnalysisVisualCustomActionOperationArray{ AnalysisVisualCustomActionOperationArgs{...} }
type AnalysisVisualCustomActionOperationArrayInput interface {
	pulumi.Input

	ToAnalysisVisualCustomActionOperationArrayOutput() AnalysisVisualCustomActionOperationArrayOutput
	ToAnalysisVisualCustomActionOperationArrayOutputWithContext(context.Context) AnalysisVisualCustomActionOperationArrayOutput
}

type AnalysisVisualCustomActionOperationArray []AnalysisVisualCustomActionOperationInput

func (AnalysisVisualCustomActionOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisVisualCustomActionOperation)(nil)).Elem()
}

func (i AnalysisVisualCustomActionOperationArray) ToAnalysisVisualCustomActionOperationArrayOutput() AnalysisVisualCustomActionOperationArrayOutput {
	return i.ToAnalysisVisualCustomActionOperationArrayOutputWithContext(context.Background())
}

func (i AnalysisVisualCustomActionOperationArray) ToAnalysisVisualCustomActionOperationArrayOutputWithContext(ctx context.Context) AnalysisVisualCustomActionOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualCustomActionOperationArrayOutput)
}

type AnalysisVisualCustomActionOperationOutput struct{ *pulumi.OutputState }

func (AnalysisVisualCustomActionOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualCustomActionOperation)(nil)).Elem()
}

func (o AnalysisVisualCustomActionOperationOutput) ToAnalysisVisualCustomActionOperationOutput() AnalysisVisualCustomActionOperationOutput {
	return o
}

func (o AnalysisVisualCustomActionOperationOutput) ToAnalysisVisualCustomActionOperationOutputWithContext(ctx context.Context) AnalysisVisualCustomActionOperationOutput {
	return o
}

func (o AnalysisVisualCustomActionOperationOutput) FilterOperation() AnalysisCustomActionFilterOperationPtrOutput {
	return o.ApplyT(func(v AnalysisVisualCustomActionOperation) *AnalysisCustomActionFilterOperation {
		return v.FilterOperation
	}).(AnalysisCustomActionFilterOperationPtrOutput)
}

func (o AnalysisVisualCustomActionOperationOutput) NavigationOperation() AnalysisCustomActionNavigationOperationPtrOutput {
	return o.ApplyT(func(v AnalysisVisualCustomActionOperation) *AnalysisCustomActionNavigationOperation {
		return v.NavigationOperation
	}).(AnalysisCustomActionNavigationOperationPtrOutput)
}

func (o AnalysisVisualCustomActionOperationOutput) SetParametersOperation() AnalysisCustomActionSetParametersOperationPtrOutput {
	return o.ApplyT(func(v AnalysisVisualCustomActionOperation) *AnalysisCustomActionSetParametersOperation {
		return v.SetParametersOperation
	}).(AnalysisCustomActionSetParametersOperationPtrOutput)
}

func (o AnalysisVisualCustomActionOperationOutput) URLOperation() AnalysisCustomActionURLOperationPtrOutput {
	return o.ApplyT(func(v AnalysisVisualCustomActionOperation) *AnalysisCustomActionURLOperation { return v.URLOperation }).(AnalysisCustomActionURLOperationPtrOutput)
}

type AnalysisVisualCustomActionOperationArrayOutput struct{ *pulumi.OutputState }

func (AnalysisVisualCustomActionOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalysisVisualCustomActionOperation)(nil)).Elem()
}

func (o AnalysisVisualCustomActionOperationArrayOutput) ToAnalysisVisualCustomActionOperationArrayOutput() AnalysisVisualCustomActionOperationArrayOutput {
	return o
}

func (o AnalysisVisualCustomActionOperationArrayOutput) ToAnalysisVisualCustomActionOperationArrayOutputWithContext(ctx context.Context) AnalysisVisualCustomActionOperationArrayOutput {
	return o
}

func (o AnalysisVisualCustomActionOperationArrayOutput) Index(i pulumi.IntInput) AnalysisVisualCustomActionOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalysisVisualCustomActionOperation {
		return vs[0].([]AnalysisVisualCustomActionOperation)[vs[1].(int)]
	}).(AnalysisVisualCustomActionOperationOutput)
}

type AnalysisVisualPalette struct {
	ChartColor *string                 `pulumi:"chartColor"`
	ColorMap   []AnalysisDataPathColor `pulumi:"colorMap"`
}

// AnalysisVisualPaletteInput is an input type that accepts AnalysisVisualPaletteArgs and AnalysisVisualPaletteOutput values.
// You can construct a concrete instance of `AnalysisVisualPaletteInput` via:
//
//	AnalysisVisualPaletteArgs{...}
type AnalysisVisualPaletteInput interface {
	pulumi.Input

	ToAnalysisVisualPaletteOutput() AnalysisVisualPaletteOutput
	ToAnalysisVisualPaletteOutputWithContext(context.Context) AnalysisVisualPaletteOutput
}

type AnalysisVisualPaletteArgs struct {
	ChartColor pulumi.StringPtrInput           `pulumi:"chartColor"`
	ColorMap   AnalysisDataPathColorArrayInput `pulumi:"colorMap"`
}

func (AnalysisVisualPaletteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualPalette)(nil)).Elem()
}

func (i AnalysisVisualPaletteArgs) ToAnalysisVisualPaletteOutput() AnalysisVisualPaletteOutput {
	return i.ToAnalysisVisualPaletteOutputWithContext(context.Background())
}

func (i AnalysisVisualPaletteArgs) ToAnalysisVisualPaletteOutputWithContext(ctx context.Context) AnalysisVisualPaletteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualPaletteOutput)
}

func (i AnalysisVisualPaletteArgs) ToAnalysisVisualPalettePtrOutput() AnalysisVisualPalettePtrOutput {
	return i.ToAnalysisVisualPalettePtrOutputWithContext(context.Background())
}

func (i AnalysisVisualPaletteArgs) ToAnalysisVisualPalettePtrOutputWithContext(ctx context.Context) AnalysisVisualPalettePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualPaletteOutput).ToAnalysisVisualPalettePtrOutputWithContext(ctx)
}

// AnalysisVisualPalettePtrInput is an input type that accepts AnalysisVisualPaletteArgs, AnalysisVisualPalettePtr and AnalysisVisualPalettePtrOutput values.
// You can construct a concrete instance of `AnalysisVisualPalettePtrInput` via:
//
//	        AnalysisVisualPaletteArgs{...}
//
//	or:
//
//	        nil
type AnalysisVisualPalettePtrInput interface {
	pulumi.Input

	ToAnalysisVisualPalettePtrOutput() AnalysisVisualPalettePtrOutput
	ToAnalysisVisualPalettePtrOutputWithContext(context.Context) AnalysisVisualPalettePtrOutput
}

type analysisVisualPalettePtrType AnalysisVisualPaletteArgs

func AnalysisVisualPalettePtr(v *AnalysisVisualPaletteArgs) AnalysisVisualPalettePtrInput {
	return (*analysisVisualPalettePtrType)(v)
}

func (*analysisVisualPalettePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVisualPalette)(nil)).Elem()
}

func (i *analysisVisualPalettePtrType) ToAnalysisVisualPalettePtrOutput() AnalysisVisualPalettePtrOutput {
	return i.ToAnalysisVisualPalettePtrOutputWithContext(context.Background())
}

func (i *analysisVisualPalettePtrType) ToAnalysisVisualPalettePtrOutputWithContext(ctx context.Context) AnalysisVisualPalettePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualPalettePtrOutput)
}

type AnalysisVisualPaletteOutput struct{ *pulumi.OutputState }

func (AnalysisVisualPaletteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualPalette)(nil)).Elem()
}

func (o AnalysisVisualPaletteOutput) ToAnalysisVisualPaletteOutput() AnalysisVisualPaletteOutput {
	return o
}

func (o AnalysisVisualPaletteOutput) ToAnalysisVisualPaletteOutputWithContext(ctx context.Context) AnalysisVisualPaletteOutput {
	return o
}

func (o AnalysisVisualPaletteOutput) ToAnalysisVisualPalettePtrOutput() AnalysisVisualPalettePtrOutput {
	return o.ToAnalysisVisualPalettePtrOutputWithContext(context.Background())
}

func (o AnalysisVisualPaletteOutput) ToAnalysisVisualPalettePtrOutputWithContext(ctx context.Context) AnalysisVisualPalettePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisVisualPalette) *AnalysisVisualPalette {
		return &v
	}).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisVisualPaletteOutput) ChartColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisVisualPalette) *string { return v.ChartColor }).(pulumi.StringPtrOutput)
}

func (o AnalysisVisualPaletteOutput) ColorMap() AnalysisDataPathColorArrayOutput {
	return o.ApplyT(func(v AnalysisVisualPalette) []AnalysisDataPathColor { return v.ColorMap }).(AnalysisDataPathColorArrayOutput)
}

type AnalysisVisualPalettePtrOutput struct{ *pulumi.OutputState }

func (AnalysisVisualPalettePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVisualPalette)(nil)).Elem()
}

func (o AnalysisVisualPalettePtrOutput) ToAnalysisVisualPalettePtrOutput() AnalysisVisualPalettePtrOutput {
	return o
}

func (o AnalysisVisualPalettePtrOutput) ToAnalysisVisualPalettePtrOutputWithContext(ctx context.Context) AnalysisVisualPalettePtrOutput {
	return o
}

func (o AnalysisVisualPalettePtrOutput) Elem() AnalysisVisualPaletteOutput {
	return o.ApplyT(func(v *AnalysisVisualPalette) AnalysisVisualPalette {
		if v != nil {
			return *v
		}
		var ret AnalysisVisualPalette
		return ret
	}).(AnalysisVisualPaletteOutput)
}

func (o AnalysisVisualPalettePtrOutput) ChartColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisVisualPalette) *string {
		if v == nil {
			return nil
		}
		return v.ChartColor
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisVisualPalettePtrOutput) ColorMap() AnalysisDataPathColorArrayOutput {
	return o.ApplyT(func(v *AnalysisVisualPalette) []AnalysisDataPathColor {
		if v == nil {
			return nil
		}
		return v.ColorMap
	}).(AnalysisDataPathColorArrayOutput)
}

type AnalysisVisualSubtitleLabelOptions struct {
	FormatText *AnalysisLongFormatText `pulumi:"formatText"`
	Visibility *AnalysisVisibility     `pulumi:"visibility"`
}

// AnalysisVisualSubtitleLabelOptionsInput is an input type that accepts AnalysisVisualSubtitleLabelOptionsArgs and AnalysisVisualSubtitleLabelOptionsOutput values.
// You can construct a concrete instance of `AnalysisVisualSubtitleLabelOptionsInput` via:
//
//	AnalysisVisualSubtitleLabelOptionsArgs{...}
type AnalysisVisualSubtitleLabelOptionsInput interface {
	pulumi.Input

	ToAnalysisVisualSubtitleLabelOptionsOutput() AnalysisVisualSubtitleLabelOptionsOutput
	ToAnalysisVisualSubtitleLabelOptionsOutputWithContext(context.Context) AnalysisVisualSubtitleLabelOptionsOutput
}

type AnalysisVisualSubtitleLabelOptionsArgs struct {
	FormatText AnalysisLongFormatTextPtrInput `pulumi:"formatText"`
	Visibility AnalysisVisibilityPtrInput     `pulumi:"visibility"`
}

func (AnalysisVisualSubtitleLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualSubtitleLabelOptions)(nil)).Elem()
}

func (i AnalysisVisualSubtitleLabelOptionsArgs) ToAnalysisVisualSubtitleLabelOptionsOutput() AnalysisVisualSubtitleLabelOptionsOutput {
	return i.ToAnalysisVisualSubtitleLabelOptionsOutputWithContext(context.Background())
}

func (i AnalysisVisualSubtitleLabelOptionsArgs) ToAnalysisVisualSubtitleLabelOptionsOutputWithContext(ctx context.Context) AnalysisVisualSubtitleLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualSubtitleLabelOptionsOutput)
}

func (i AnalysisVisualSubtitleLabelOptionsArgs) ToAnalysisVisualSubtitleLabelOptionsPtrOutput() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return i.ToAnalysisVisualSubtitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisVisualSubtitleLabelOptionsArgs) ToAnalysisVisualSubtitleLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualSubtitleLabelOptionsOutput).ToAnalysisVisualSubtitleLabelOptionsPtrOutputWithContext(ctx)
}

// AnalysisVisualSubtitleLabelOptionsPtrInput is an input type that accepts AnalysisVisualSubtitleLabelOptionsArgs, AnalysisVisualSubtitleLabelOptionsPtr and AnalysisVisualSubtitleLabelOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisVisualSubtitleLabelOptionsPtrInput` via:
//
//	        AnalysisVisualSubtitleLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisVisualSubtitleLabelOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisVisualSubtitleLabelOptionsPtrOutput() AnalysisVisualSubtitleLabelOptionsPtrOutput
	ToAnalysisVisualSubtitleLabelOptionsPtrOutputWithContext(context.Context) AnalysisVisualSubtitleLabelOptionsPtrOutput
}

type analysisVisualSubtitleLabelOptionsPtrType AnalysisVisualSubtitleLabelOptionsArgs

func AnalysisVisualSubtitleLabelOptionsPtr(v *AnalysisVisualSubtitleLabelOptionsArgs) AnalysisVisualSubtitleLabelOptionsPtrInput {
	return (*analysisVisualSubtitleLabelOptionsPtrType)(v)
}

func (*analysisVisualSubtitleLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVisualSubtitleLabelOptions)(nil)).Elem()
}

func (i *analysisVisualSubtitleLabelOptionsPtrType) ToAnalysisVisualSubtitleLabelOptionsPtrOutput() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return i.ToAnalysisVisualSubtitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisVisualSubtitleLabelOptionsPtrType) ToAnalysisVisualSubtitleLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

type AnalysisVisualSubtitleLabelOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisVisualSubtitleLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualSubtitleLabelOptions)(nil)).Elem()
}

func (o AnalysisVisualSubtitleLabelOptionsOutput) ToAnalysisVisualSubtitleLabelOptionsOutput() AnalysisVisualSubtitleLabelOptionsOutput {
	return o
}

func (o AnalysisVisualSubtitleLabelOptionsOutput) ToAnalysisVisualSubtitleLabelOptionsOutputWithContext(ctx context.Context) AnalysisVisualSubtitleLabelOptionsOutput {
	return o
}

func (o AnalysisVisualSubtitleLabelOptionsOutput) ToAnalysisVisualSubtitleLabelOptionsPtrOutput() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ToAnalysisVisualSubtitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisVisualSubtitleLabelOptionsOutput) ToAnalysisVisualSubtitleLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisVisualSubtitleLabelOptions) *AnalysisVisualSubtitleLabelOptions {
		return &v
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisVisualSubtitleLabelOptionsOutput) FormatText() AnalysisLongFormatTextPtrOutput {
	return o.ApplyT(func(v AnalysisVisualSubtitleLabelOptions) *AnalysisLongFormatText { return v.FormatText }).(AnalysisLongFormatTextPtrOutput)
}

func (o AnalysisVisualSubtitleLabelOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisVisualSubtitleLabelOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisVisualSubtitleLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisVisualSubtitleLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVisualSubtitleLabelOptions)(nil)).Elem()
}

func (o AnalysisVisualSubtitleLabelOptionsPtrOutput) ToAnalysisVisualSubtitleLabelOptionsPtrOutput() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o
}

func (o AnalysisVisualSubtitleLabelOptionsPtrOutput) ToAnalysisVisualSubtitleLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o
}

func (o AnalysisVisualSubtitleLabelOptionsPtrOutput) Elem() AnalysisVisualSubtitleLabelOptionsOutput {
	return o.ApplyT(func(v *AnalysisVisualSubtitleLabelOptions) AnalysisVisualSubtitleLabelOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisVisualSubtitleLabelOptions
		return ret
	}).(AnalysisVisualSubtitleLabelOptionsOutput)
}

func (o AnalysisVisualSubtitleLabelOptionsPtrOutput) FormatText() AnalysisLongFormatTextPtrOutput {
	return o.ApplyT(func(v *AnalysisVisualSubtitleLabelOptions) *AnalysisLongFormatText {
		if v == nil {
			return nil
		}
		return v.FormatText
	}).(AnalysisLongFormatTextPtrOutput)
}

func (o AnalysisVisualSubtitleLabelOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisVisualSubtitleLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisVisualTitleLabelOptions struct {
	FormatText *AnalysisShortFormatText `pulumi:"formatText"`
	Visibility *AnalysisVisibility      `pulumi:"visibility"`
}

// AnalysisVisualTitleLabelOptionsInput is an input type that accepts AnalysisVisualTitleLabelOptionsArgs and AnalysisVisualTitleLabelOptionsOutput values.
// You can construct a concrete instance of `AnalysisVisualTitleLabelOptionsInput` via:
//
//	AnalysisVisualTitleLabelOptionsArgs{...}
type AnalysisVisualTitleLabelOptionsInput interface {
	pulumi.Input

	ToAnalysisVisualTitleLabelOptionsOutput() AnalysisVisualTitleLabelOptionsOutput
	ToAnalysisVisualTitleLabelOptionsOutputWithContext(context.Context) AnalysisVisualTitleLabelOptionsOutput
}

type AnalysisVisualTitleLabelOptionsArgs struct {
	FormatText AnalysisShortFormatTextPtrInput `pulumi:"formatText"`
	Visibility AnalysisVisibilityPtrInput      `pulumi:"visibility"`
}

func (AnalysisVisualTitleLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualTitleLabelOptions)(nil)).Elem()
}

func (i AnalysisVisualTitleLabelOptionsArgs) ToAnalysisVisualTitleLabelOptionsOutput() AnalysisVisualTitleLabelOptionsOutput {
	return i.ToAnalysisVisualTitleLabelOptionsOutputWithContext(context.Background())
}

func (i AnalysisVisualTitleLabelOptionsArgs) ToAnalysisVisualTitleLabelOptionsOutputWithContext(ctx context.Context) AnalysisVisualTitleLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualTitleLabelOptionsOutput)
}

func (i AnalysisVisualTitleLabelOptionsArgs) ToAnalysisVisualTitleLabelOptionsPtrOutput() AnalysisVisualTitleLabelOptionsPtrOutput {
	return i.ToAnalysisVisualTitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisVisualTitleLabelOptionsArgs) ToAnalysisVisualTitleLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisualTitleLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualTitleLabelOptionsOutput).ToAnalysisVisualTitleLabelOptionsPtrOutputWithContext(ctx)
}

// AnalysisVisualTitleLabelOptionsPtrInput is an input type that accepts AnalysisVisualTitleLabelOptionsArgs, AnalysisVisualTitleLabelOptionsPtr and AnalysisVisualTitleLabelOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisVisualTitleLabelOptionsPtrInput` via:
//
//	        AnalysisVisualTitleLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisVisualTitleLabelOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisVisualTitleLabelOptionsPtrOutput() AnalysisVisualTitleLabelOptionsPtrOutput
	ToAnalysisVisualTitleLabelOptionsPtrOutputWithContext(context.Context) AnalysisVisualTitleLabelOptionsPtrOutput
}

type analysisVisualTitleLabelOptionsPtrType AnalysisVisualTitleLabelOptionsArgs

func AnalysisVisualTitleLabelOptionsPtr(v *AnalysisVisualTitleLabelOptionsArgs) AnalysisVisualTitleLabelOptionsPtrInput {
	return (*analysisVisualTitleLabelOptionsPtrType)(v)
}

func (*analysisVisualTitleLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVisualTitleLabelOptions)(nil)).Elem()
}

func (i *analysisVisualTitleLabelOptionsPtrType) ToAnalysisVisualTitleLabelOptionsPtrOutput() AnalysisVisualTitleLabelOptionsPtrOutput {
	return i.ToAnalysisVisualTitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisVisualTitleLabelOptionsPtrType) ToAnalysisVisualTitleLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisualTitleLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

type AnalysisVisualTitleLabelOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisVisualTitleLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualTitleLabelOptions)(nil)).Elem()
}

func (o AnalysisVisualTitleLabelOptionsOutput) ToAnalysisVisualTitleLabelOptionsOutput() AnalysisVisualTitleLabelOptionsOutput {
	return o
}

func (o AnalysisVisualTitleLabelOptionsOutput) ToAnalysisVisualTitleLabelOptionsOutputWithContext(ctx context.Context) AnalysisVisualTitleLabelOptionsOutput {
	return o
}

func (o AnalysisVisualTitleLabelOptionsOutput) ToAnalysisVisualTitleLabelOptionsPtrOutput() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ToAnalysisVisualTitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisVisualTitleLabelOptionsOutput) ToAnalysisVisualTitleLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisVisualTitleLabelOptions) *AnalysisVisualTitleLabelOptions {
		return &v
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisVisualTitleLabelOptionsOutput) FormatText() AnalysisShortFormatTextPtrOutput {
	return o.ApplyT(func(v AnalysisVisualTitleLabelOptions) *AnalysisShortFormatText { return v.FormatText }).(AnalysisShortFormatTextPtrOutput)
}

func (o AnalysisVisualTitleLabelOptionsOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v AnalysisVisualTitleLabelOptions) *AnalysisVisibility { return v.Visibility }).(AnalysisVisibilityPtrOutput)
}

type AnalysisVisualTitleLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisVisualTitleLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVisualTitleLabelOptions)(nil)).Elem()
}

func (o AnalysisVisualTitleLabelOptionsPtrOutput) ToAnalysisVisualTitleLabelOptionsPtrOutput() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o
}

func (o AnalysisVisualTitleLabelOptionsPtrOutput) ToAnalysisVisualTitleLabelOptionsPtrOutputWithContext(ctx context.Context) AnalysisVisualTitleLabelOptionsPtrOutput {
	return o
}

func (o AnalysisVisualTitleLabelOptionsPtrOutput) Elem() AnalysisVisualTitleLabelOptionsOutput {
	return o.ApplyT(func(v *AnalysisVisualTitleLabelOptions) AnalysisVisualTitleLabelOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisVisualTitleLabelOptions
		return ret
	}).(AnalysisVisualTitleLabelOptionsOutput)
}

func (o AnalysisVisualTitleLabelOptionsPtrOutput) FormatText() AnalysisShortFormatTextPtrOutput {
	return o.ApplyT(func(v *AnalysisVisualTitleLabelOptions) *AnalysisShortFormatText {
		if v == nil {
			return nil
		}
		return v.FormatText
	}).(AnalysisShortFormatTextPtrOutput)
}

func (o AnalysisVisualTitleLabelOptionsPtrOutput) Visibility() AnalysisVisibilityPtrOutput {
	return o.ApplyT(func(v *AnalysisVisualTitleLabelOptions) *AnalysisVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(AnalysisVisibilityPtrOutput)
}

type AnalysisWaterfallChartAggregatedFieldWells struct {
	Breakdowns []AnalysisDimensionField `pulumi:"breakdowns"`
	Categories []AnalysisDimensionField `pulumi:"categories"`
	Values     []AnalysisMeasureField   `pulumi:"values"`
}

// AnalysisWaterfallChartAggregatedFieldWellsInput is an input type that accepts AnalysisWaterfallChartAggregatedFieldWellsArgs and AnalysisWaterfallChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisWaterfallChartAggregatedFieldWellsInput` via:
//
//	AnalysisWaterfallChartAggregatedFieldWellsArgs{...}
type AnalysisWaterfallChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisWaterfallChartAggregatedFieldWellsOutput() AnalysisWaterfallChartAggregatedFieldWellsOutput
	ToAnalysisWaterfallChartAggregatedFieldWellsOutputWithContext(context.Context) AnalysisWaterfallChartAggregatedFieldWellsOutput
}

type AnalysisWaterfallChartAggregatedFieldWellsArgs struct {
	Breakdowns AnalysisDimensionFieldArrayInput `pulumi:"breakdowns"`
	Categories AnalysisDimensionFieldArrayInput `pulumi:"categories"`
	Values     AnalysisMeasureFieldArrayInput   `pulumi:"values"`
}

func (AnalysisWaterfallChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallChartAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisWaterfallChartAggregatedFieldWellsArgs) ToAnalysisWaterfallChartAggregatedFieldWellsOutput() AnalysisWaterfallChartAggregatedFieldWellsOutput {
	return i.ToAnalysisWaterfallChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisWaterfallChartAggregatedFieldWellsArgs) ToAnalysisWaterfallChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisWaterfallChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartAggregatedFieldWellsOutput)
}

func (i AnalysisWaterfallChartAggregatedFieldWellsArgs) ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutput() AnalysisWaterfallChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisWaterfallChartAggregatedFieldWellsArgs) ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartAggregatedFieldWellsOutput).ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisWaterfallChartAggregatedFieldWellsPtrInput is an input type that accepts AnalysisWaterfallChartAggregatedFieldWellsArgs, AnalysisWaterfallChartAggregatedFieldWellsPtr and AnalysisWaterfallChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisWaterfallChartAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisWaterfallChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisWaterfallChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutput() AnalysisWaterfallChartAggregatedFieldWellsPtrOutput
	ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisWaterfallChartAggregatedFieldWellsPtrOutput
}

type analysisWaterfallChartAggregatedFieldWellsPtrType AnalysisWaterfallChartAggregatedFieldWellsArgs

func AnalysisWaterfallChartAggregatedFieldWellsPtr(v *AnalysisWaterfallChartAggregatedFieldWellsArgs) AnalysisWaterfallChartAggregatedFieldWellsPtrInput {
	return (*analysisWaterfallChartAggregatedFieldWellsPtrType)(v)
}

func (*analysisWaterfallChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallChartAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisWaterfallChartAggregatedFieldWellsPtrType) ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutput() AnalysisWaterfallChartAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisWaterfallChartAggregatedFieldWellsPtrType) ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartAggregatedFieldWellsPtrOutput)
}

type AnalysisWaterfallChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisWaterfallChartAggregatedFieldWellsOutput) ToAnalysisWaterfallChartAggregatedFieldWellsOutput() AnalysisWaterfallChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisWaterfallChartAggregatedFieldWellsOutput) ToAnalysisWaterfallChartAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisWaterfallChartAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisWaterfallChartAggregatedFieldWellsOutput) ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutput() AnalysisWaterfallChartAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisWaterfallChartAggregatedFieldWellsOutput) ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWaterfallChartAggregatedFieldWells) *AnalysisWaterfallChartAggregatedFieldWells {
		return &v
	}).(AnalysisWaterfallChartAggregatedFieldWellsPtrOutput)
}

func (o AnalysisWaterfallChartAggregatedFieldWellsOutput) Breakdowns() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartAggregatedFieldWells) []AnalysisDimensionField { return v.Breakdowns }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisWaterfallChartAggregatedFieldWellsOutput) Categories() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartAggregatedFieldWells) []AnalysisDimensionField { return v.Categories }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisWaterfallChartAggregatedFieldWellsOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartAggregatedFieldWells) []AnalysisMeasureField { return v.Values }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisWaterfallChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallChartAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisWaterfallChartAggregatedFieldWellsPtrOutput) ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutput() AnalysisWaterfallChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisWaterfallChartAggregatedFieldWellsPtrOutput) ToAnalysisWaterfallChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisWaterfallChartAggregatedFieldWellsPtrOutput) Elem() AnalysisWaterfallChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartAggregatedFieldWells) AnalysisWaterfallChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisWaterfallChartAggregatedFieldWells
		return ret
	}).(AnalysisWaterfallChartAggregatedFieldWellsOutput)
}

func (o AnalysisWaterfallChartAggregatedFieldWellsPtrOutput) Breakdowns() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Breakdowns
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisWaterfallChartAggregatedFieldWellsPtrOutput) Categories() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.Categories
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisWaterfallChartAggregatedFieldWellsPtrOutput) Values() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisWaterfallChartConfiguration struct {
	CategoryAxisDisplayOptions *AnalysisAxisDisplayOptions              `pulumi:"categoryAxisDisplayOptions"`
	CategoryAxisLabelOptions   *AnalysisChartAxisLabelOptions           `pulumi:"categoryAxisLabelOptions"`
	DataLabels                 *AnalysisDataLabelOptions                `pulumi:"dataLabels"`
	FieldWells                 *AnalysisWaterfallChartFieldWells        `pulumi:"fieldWells"`
	Legend                     *AnalysisLegendOptions                   `pulumi:"legend"`
	PrimaryYAxisDisplayOptions *AnalysisAxisDisplayOptions              `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   *AnalysisChartAxisLabelOptions           `pulumi:"primaryYAxisLabelOptions"`
	SortConfiguration          *AnalysisWaterfallChartSortConfiguration `pulumi:"sortConfiguration"`
	VisualPalette              *AnalysisVisualPalette                   `pulumi:"visualPalette"`
	WaterfallChartOptions      *AnalysisWaterfallChartOptions           `pulumi:"waterfallChartOptions"`
}

// AnalysisWaterfallChartConfigurationInput is an input type that accepts AnalysisWaterfallChartConfigurationArgs and AnalysisWaterfallChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisWaterfallChartConfigurationInput` via:
//
//	AnalysisWaterfallChartConfigurationArgs{...}
type AnalysisWaterfallChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisWaterfallChartConfigurationOutput() AnalysisWaterfallChartConfigurationOutput
	ToAnalysisWaterfallChartConfigurationOutputWithContext(context.Context) AnalysisWaterfallChartConfigurationOutput
}

type AnalysisWaterfallChartConfigurationArgs struct {
	CategoryAxisDisplayOptions AnalysisAxisDisplayOptionsPtrInput              `pulumi:"categoryAxisDisplayOptions"`
	CategoryAxisLabelOptions   AnalysisChartAxisLabelOptionsPtrInput           `pulumi:"categoryAxisLabelOptions"`
	DataLabels                 AnalysisDataLabelOptionsPtrInput                `pulumi:"dataLabels"`
	FieldWells                 AnalysisWaterfallChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                     AnalysisLegendOptionsPtrInput                   `pulumi:"legend"`
	PrimaryYAxisDisplayOptions AnalysisAxisDisplayOptionsPtrInput              `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   AnalysisChartAxisLabelOptionsPtrInput           `pulumi:"primaryYAxisLabelOptions"`
	SortConfiguration          AnalysisWaterfallChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	VisualPalette              AnalysisVisualPalettePtrInput                   `pulumi:"visualPalette"`
	WaterfallChartOptions      AnalysisWaterfallChartOptionsPtrInput           `pulumi:"waterfallChartOptions"`
}

func (AnalysisWaterfallChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallChartConfiguration)(nil)).Elem()
}

func (i AnalysisWaterfallChartConfigurationArgs) ToAnalysisWaterfallChartConfigurationOutput() AnalysisWaterfallChartConfigurationOutput {
	return i.ToAnalysisWaterfallChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisWaterfallChartConfigurationArgs) ToAnalysisWaterfallChartConfigurationOutputWithContext(ctx context.Context) AnalysisWaterfallChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartConfigurationOutput)
}

func (i AnalysisWaterfallChartConfigurationArgs) ToAnalysisWaterfallChartConfigurationPtrOutput() AnalysisWaterfallChartConfigurationPtrOutput {
	return i.ToAnalysisWaterfallChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisWaterfallChartConfigurationArgs) ToAnalysisWaterfallChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartConfigurationOutput).ToAnalysisWaterfallChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisWaterfallChartConfigurationPtrInput is an input type that accepts AnalysisWaterfallChartConfigurationArgs, AnalysisWaterfallChartConfigurationPtr and AnalysisWaterfallChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisWaterfallChartConfigurationPtrInput` via:
//
//	        AnalysisWaterfallChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisWaterfallChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisWaterfallChartConfigurationPtrOutput() AnalysisWaterfallChartConfigurationPtrOutput
	ToAnalysisWaterfallChartConfigurationPtrOutputWithContext(context.Context) AnalysisWaterfallChartConfigurationPtrOutput
}

type analysisWaterfallChartConfigurationPtrType AnalysisWaterfallChartConfigurationArgs

func AnalysisWaterfallChartConfigurationPtr(v *AnalysisWaterfallChartConfigurationArgs) AnalysisWaterfallChartConfigurationPtrInput {
	return (*analysisWaterfallChartConfigurationPtrType)(v)
}

func (*analysisWaterfallChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallChartConfiguration)(nil)).Elem()
}

func (i *analysisWaterfallChartConfigurationPtrType) ToAnalysisWaterfallChartConfigurationPtrOutput() AnalysisWaterfallChartConfigurationPtrOutput {
	return i.ToAnalysisWaterfallChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisWaterfallChartConfigurationPtrType) ToAnalysisWaterfallChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartConfigurationPtrOutput)
}

type AnalysisWaterfallChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallChartConfiguration)(nil)).Elem()
}

func (o AnalysisWaterfallChartConfigurationOutput) ToAnalysisWaterfallChartConfigurationOutput() AnalysisWaterfallChartConfigurationOutput {
	return o
}

func (o AnalysisWaterfallChartConfigurationOutput) ToAnalysisWaterfallChartConfigurationOutputWithContext(ctx context.Context) AnalysisWaterfallChartConfigurationOutput {
	return o
}

func (o AnalysisWaterfallChartConfigurationOutput) ToAnalysisWaterfallChartConfigurationPtrOutput() AnalysisWaterfallChartConfigurationPtrOutput {
	return o.ToAnalysisWaterfallChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisWaterfallChartConfigurationOutput) ToAnalysisWaterfallChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWaterfallChartConfiguration) *AnalysisWaterfallChartConfiguration {
		return &v
	}).(AnalysisWaterfallChartConfigurationPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationOutput) CategoryAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartConfiguration) *AnalysisAxisDisplayOptions {
		return v.CategoryAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationOutput) CategoryAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartConfiguration) *AnalysisChartAxisLabelOptions {
		return v.CategoryAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartConfiguration) *AnalysisDataLabelOptions { return v.DataLabels }).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationOutput) FieldWells() AnalysisWaterfallChartFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartConfiguration) *AnalysisWaterfallChartFieldWells { return v.FieldWells }).(AnalysisWaterfallChartFieldWellsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartConfiguration) *AnalysisLegendOptions { return v.Legend }).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationOutput) PrimaryYAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartConfiguration) *AnalysisAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationOutput) PrimaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartConfiguration) *AnalysisChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationOutput) SortConfiguration() AnalysisWaterfallChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartConfiguration) *AnalysisWaterfallChartSortConfiguration {
		return v.SortConfiguration
	}).(AnalysisWaterfallChartSortConfigurationPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartConfiguration) *AnalysisVisualPalette { return v.VisualPalette }).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisWaterfallChartConfigurationOutput) WaterfallChartOptions() AnalysisWaterfallChartOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartConfiguration) *AnalysisWaterfallChartOptions {
		return v.WaterfallChartOptions
	}).(AnalysisWaterfallChartOptionsPtrOutput)
}

type AnalysisWaterfallChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallChartConfiguration)(nil)).Elem()
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) ToAnalysisWaterfallChartConfigurationPtrOutput() AnalysisWaterfallChartConfigurationPtrOutput {
	return o
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) ToAnalysisWaterfallChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartConfigurationPtrOutput {
	return o
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) Elem() AnalysisWaterfallChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) AnalysisWaterfallChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisWaterfallChartConfiguration
		return ret
	}).(AnalysisWaterfallChartConfigurationOutput)
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) CategoryAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) CategoryAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) DataLabels() AnalysisDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) *AnalysisDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(AnalysisDataLabelOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) FieldWells() AnalysisWaterfallChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) *AnalysisWaterfallChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisWaterfallChartFieldWellsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) Legend() AnalysisLegendOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) *AnalysisLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(AnalysisLegendOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() AnalysisAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) *AnalysisAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(AnalysisAxisDisplayOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) SortConfiguration() AnalysisWaterfallChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) *AnalysisWaterfallChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisWaterfallChartSortConfigurationPtrOutput)
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) VisualPalette() AnalysisVisualPalettePtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) *AnalysisVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(AnalysisVisualPalettePtrOutput)
}

func (o AnalysisWaterfallChartConfigurationPtrOutput) WaterfallChartOptions() AnalysisWaterfallChartOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartConfiguration) *AnalysisWaterfallChartOptions {
		if v == nil {
			return nil
		}
		return v.WaterfallChartOptions
	}).(AnalysisWaterfallChartOptionsPtrOutput)
}

type AnalysisWaterfallChartFieldWells struct {
	WaterfallChartAggregatedFieldWells *AnalysisWaterfallChartAggregatedFieldWells `pulumi:"waterfallChartAggregatedFieldWells"`
}

// AnalysisWaterfallChartFieldWellsInput is an input type that accepts AnalysisWaterfallChartFieldWellsArgs and AnalysisWaterfallChartFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisWaterfallChartFieldWellsInput` via:
//
//	AnalysisWaterfallChartFieldWellsArgs{...}
type AnalysisWaterfallChartFieldWellsInput interface {
	pulumi.Input

	ToAnalysisWaterfallChartFieldWellsOutput() AnalysisWaterfallChartFieldWellsOutput
	ToAnalysisWaterfallChartFieldWellsOutputWithContext(context.Context) AnalysisWaterfallChartFieldWellsOutput
}

type AnalysisWaterfallChartFieldWellsArgs struct {
	WaterfallChartAggregatedFieldWells AnalysisWaterfallChartAggregatedFieldWellsPtrInput `pulumi:"waterfallChartAggregatedFieldWells"`
}

func (AnalysisWaterfallChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallChartFieldWells)(nil)).Elem()
}

func (i AnalysisWaterfallChartFieldWellsArgs) ToAnalysisWaterfallChartFieldWellsOutput() AnalysisWaterfallChartFieldWellsOutput {
	return i.ToAnalysisWaterfallChartFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisWaterfallChartFieldWellsArgs) ToAnalysisWaterfallChartFieldWellsOutputWithContext(ctx context.Context) AnalysisWaterfallChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartFieldWellsOutput)
}

func (i AnalysisWaterfallChartFieldWellsArgs) ToAnalysisWaterfallChartFieldWellsPtrOutput() AnalysisWaterfallChartFieldWellsPtrOutput {
	return i.ToAnalysisWaterfallChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisWaterfallChartFieldWellsArgs) ToAnalysisWaterfallChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartFieldWellsOutput).ToAnalysisWaterfallChartFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisWaterfallChartFieldWellsPtrInput is an input type that accepts AnalysisWaterfallChartFieldWellsArgs, AnalysisWaterfallChartFieldWellsPtr and AnalysisWaterfallChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisWaterfallChartFieldWellsPtrInput` via:
//
//	        AnalysisWaterfallChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisWaterfallChartFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisWaterfallChartFieldWellsPtrOutput() AnalysisWaterfallChartFieldWellsPtrOutput
	ToAnalysisWaterfallChartFieldWellsPtrOutputWithContext(context.Context) AnalysisWaterfallChartFieldWellsPtrOutput
}

type analysisWaterfallChartFieldWellsPtrType AnalysisWaterfallChartFieldWellsArgs

func AnalysisWaterfallChartFieldWellsPtr(v *AnalysisWaterfallChartFieldWellsArgs) AnalysisWaterfallChartFieldWellsPtrInput {
	return (*analysisWaterfallChartFieldWellsPtrType)(v)
}

func (*analysisWaterfallChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallChartFieldWells)(nil)).Elem()
}

func (i *analysisWaterfallChartFieldWellsPtrType) ToAnalysisWaterfallChartFieldWellsPtrOutput() AnalysisWaterfallChartFieldWellsPtrOutput {
	return i.ToAnalysisWaterfallChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisWaterfallChartFieldWellsPtrType) ToAnalysisWaterfallChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartFieldWellsPtrOutput)
}

type AnalysisWaterfallChartFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallChartFieldWells)(nil)).Elem()
}

func (o AnalysisWaterfallChartFieldWellsOutput) ToAnalysisWaterfallChartFieldWellsOutput() AnalysisWaterfallChartFieldWellsOutput {
	return o
}

func (o AnalysisWaterfallChartFieldWellsOutput) ToAnalysisWaterfallChartFieldWellsOutputWithContext(ctx context.Context) AnalysisWaterfallChartFieldWellsOutput {
	return o
}

func (o AnalysisWaterfallChartFieldWellsOutput) ToAnalysisWaterfallChartFieldWellsPtrOutput() AnalysisWaterfallChartFieldWellsPtrOutput {
	return o.ToAnalysisWaterfallChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisWaterfallChartFieldWellsOutput) ToAnalysisWaterfallChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWaterfallChartFieldWells) *AnalysisWaterfallChartFieldWells {
		return &v
	}).(AnalysisWaterfallChartFieldWellsPtrOutput)
}

func (o AnalysisWaterfallChartFieldWellsOutput) WaterfallChartAggregatedFieldWells() AnalysisWaterfallChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartFieldWells) *AnalysisWaterfallChartAggregatedFieldWells {
		return v.WaterfallChartAggregatedFieldWells
	}).(AnalysisWaterfallChartAggregatedFieldWellsPtrOutput)
}

type AnalysisWaterfallChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallChartFieldWells)(nil)).Elem()
}

func (o AnalysisWaterfallChartFieldWellsPtrOutput) ToAnalysisWaterfallChartFieldWellsPtrOutput() AnalysisWaterfallChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisWaterfallChartFieldWellsPtrOutput) ToAnalysisWaterfallChartFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartFieldWellsPtrOutput {
	return o
}

func (o AnalysisWaterfallChartFieldWellsPtrOutput) Elem() AnalysisWaterfallChartFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartFieldWells) AnalysisWaterfallChartFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisWaterfallChartFieldWells
		return ret
	}).(AnalysisWaterfallChartFieldWellsOutput)
}

func (o AnalysisWaterfallChartFieldWellsPtrOutput) WaterfallChartAggregatedFieldWells() AnalysisWaterfallChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartFieldWells) *AnalysisWaterfallChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.WaterfallChartAggregatedFieldWells
	}).(AnalysisWaterfallChartAggregatedFieldWellsPtrOutput)
}

type AnalysisWaterfallChartOptions struct {
	TotalBarLabel *string `pulumi:"totalBarLabel"`
}

// AnalysisWaterfallChartOptionsInput is an input type that accepts AnalysisWaterfallChartOptionsArgs and AnalysisWaterfallChartOptionsOutput values.
// You can construct a concrete instance of `AnalysisWaterfallChartOptionsInput` via:
//
//	AnalysisWaterfallChartOptionsArgs{...}
type AnalysisWaterfallChartOptionsInput interface {
	pulumi.Input

	ToAnalysisWaterfallChartOptionsOutput() AnalysisWaterfallChartOptionsOutput
	ToAnalysisWaterfallChartOptionsOutputWithContext(context.Context) AnalysisWaterfallChartOptionsOutput
}

type AnalysisWaterfallChartOptionsArgs struct {
	TotalBarLabel pulumi.StringPtrInput `pulumi:"totalBarLabel"`
}

func (AnalysisWaterfallChartOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallChartOptions)(nil)).Elem()
}

func (i AnalysisWaterfallChartOptionsArgs) ToAnalysisWaterfallChartOptionsOutput() AnalysisWaterfallChartOptionsOutput {
	return i.ToAnalysisWaterfallChartOptionsOutputWithContext(context.Background())
}

func (i AnalysisWaterfallChartOptionsArgs) ToAnalysisWaterfallChartOptionsOutputWithContext(ctx context.Context) AnalysisWaterfallChartOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartOptionsOutput)
}

func (i AnalysisWaterfallChartOptionsArgs) ToAnalysisWaterfallChartOptionsPtrOutput() AnalysisWaterfallChartOptionsPtrOutput {
	return i.ToAnalysisWaterfallChartOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisWaterfallChartOptionsArgs) ToAnalysisWaterfallChartOptionsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartOptionsOutput).ToAnalysisWaterfallChartOptionsPtrOutputWithContext(ctx)
}

// AnalysisWaterfallChartOptionsPtrInput is an input type that accepts AnalysisWaterfallChartOptionsArgs, AnalysisWaterfallChartOptionsPtr and AnalysisWaterfallChartOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisWaterfallChartOptionsPtrInput` via:
//
//	        AnalysisWaterfallChartOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisWaterfallChartOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisWaterfallChartOptionsPtrOutput() AnalysisWaterfallChartOptionsPtrOutput
	ToAnalysisWaterfallChartOptionsPtrOutputWithContext(context.Context) AnalysisWaterfallChartOptionsPtrOutput
}

type analysisWaterfallChartOptionsPtrType AnalysisWaterfallChartOptionsArgs

func AnalysisWaterfallChartOptionsPtr(v *AnalysisWaterfallChartOptionsArgs) AnalysisWaterfallChartOptionsPtrInput {
	return (*analysisWaterfallChartOptionsPtrType)(v)
}

func (*analysisWaterfallChartOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallChartOptions)(nil)).Elem()
}

func (i *analysisWaterfallChartOptionsPtrType) ToAnalysisWaterfallChartOptionsPtrOutput() AnalysisWaterfallChartOptionsPtrOutput {
	return i.ToAnalysisWaterfallChartOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisWaterfallChartOptionsPtrType) ToAnalysisWaterfallChartOptionsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartOptionsPtrOutput)
}

type AnalysisWaterfallChartOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallChartOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallChartOptions)(nil)).Elem()
}

func (o AnalysisWaterfallChartOptionsOutput) ToAnalysisWaterfallChartOptionsOutput() AnalysisWaterfallChartOptionsOutput {
	return o
}

func (o AnalysisWaterfallChartOptionsOutput) ToAnalysisWaterfallChartOptionsOutputWithContext(ctx context.Context) AnalysisWaterfallChartOptionsOutput {
	return o
}

func (o AnalysisWaterfallChartOptionsOutput) ToAnalysisWaterfallChartOptionsPtrOutput() AnalysisWaterfallChartOptionsPtrOutput {
	return o.ToAnalysisWaterfallChartOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisWaterfallChartOptionsOutput) ToAnalysisWaterfallChartOptionsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWaterfallChartOptions) *AnalysisWaterfallChartOptions {
		return &v
	}).(AnalysisWaterfallChartOptionsPtrOutput)
}

func (o AnalysisWaterfallChartOptionsOutput) TotalBarLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartOptions) *string { return v.TotalBarLabel }).(pulumi.StringPtrOutput)
}

type AnalysisWaterfallChartOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallChartOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallChartOptions)(nil)).Elem()
}

func (o AnalysisWaterfallChartOptionsPtrOutput) ToAnalysisWaterfallChartOptionsPtrOutput() AnalysisWaterfallChartOptionsPtrOutput {
	return o
}

func (o AnalysisWaterfallChartOptionsPtrOutput) ToAnalysisWaterfallChartOptionsPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartOptionsPtrOutput {
	return o
}

func (o AnalysisWaterfallChartOptionsPtrOutput) Elem() AnalysisWaterfallChartOptionsOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartOptions) AnalysisWaterfallChartOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisWaterfallChartOptions
		return ret
	}).(AnalysisWaterfallChartOptionsOutput)
}

func (o AnalysisWaterfallChartOptionsPtrOutput) TotalBarLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartOptions) *string {
		if v == nil {
			return nil
		}
		return v.TotalBarLabel
	}).(pulumi.StringPtrOutput)
}

type AnalysisWaterfallChartSortConfiguration struct {
	BreakdownItemsLimit *AnalysisItemsLimitConfiguration `pulumi:"breakdownItemsLimit"`
	CategorySort        []AnalysisFieldSortOptions       `pulumi:"categorySort"`
}

// AnalysisWaterfallChartSortConfigurationInput is an input type that accepts AnalysisWaterfallChartSortConfigurationArgs and AnalysisWaterfallChartSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisWaterfallChartSortConfigurationInput` via:
//
//	AnalysisWaterfallChartSortConfigurationArgs{...}
type AnalysisWaterfallChartSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisWaterfallChartSortConfigurationOutput() AnalysisWaterfallChartSortConfigurationOutput
	ToAnalysisWaterfallChartSortConfigurationOutputWithContext(context.Context) AnalysisWaterfallChartSortConfigurationOutput
}

type AnalysisWaterfallChartSortConfigurationArgs struct {
	BreakdownItemsLimit AnalysisItemsLimitConfigurationPtrInput `pulumi:"breakdownItemsLimit"`
	CategorySort        AnalysisFieldSortOptionsArrayInput      `pulumi:"categorySort"`
}

func (AnalysisWaterfallChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallChartSortConfiguration)(nil)).Elem()
}

func (i AnalysisWaterfallChartSortConfigurationArgs) ToAnalysisWaterfallChartSortConfigurationOutput() AnalysisWaterfallChartSortConfigurationOutput {
	return i.ToAnalysisWaterfallChartSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisWaterfallChartSortConfigurationArgs) ToAnalysisWaterfallChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisWaterfallChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartSortConfigurationOutput)
}

func (i AnalysisWaterfallChartSortConfigurationArgs) ToAnalysisWaterfallChartSortConfigurationPtrOutput() AnalysisWaterfallChartSortConfigurationPtrOutput {
	return i.ToAnalysisWaterfallChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisWaterfallChartSortConfigurationArgs) ToAnalysisWaterfallChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartSortConfigurationOutput).ToAnalysisWaterfallChartSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisWaterfallChartSortConfigurationPtrInput is an input type that accepts AnalysisWaterfallChartSortConfigurationArgs, AnalysisWaterfallChartSortConfigurationPtr and AnalysisWaterfallChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisWaterfallChartSortConfigurationPtrInput` via:
//
//	        AnalysisWaterfallChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisWaterfallChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisWaterfallChartSortConfigurationPtrOutput() AnalysisWaterfallChartSortConfigurationPtrOutput
	ToAnalysisWaterfallChartSortConfigurationPtrOutputWithContext(context.Context) AnalysisWaterfallChartSortConfigurationPtrOutput
}

type analysisWaterfallChartSortConfigurationPtrType AnalysisWaterfallChartSortConfigurationArgs

func AnalysisWaterfallChartSortConfigurationPtr(v *AnalysisWaterfallChartSortConfigurationArgs) AnalysisWaterfallChartSortConfigurationPtrInput {
	return (*analysisWaterfallChartSortConfigurationPtrType)(v)
}

func (*analysisWaterfallChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallChartSortConfiguration)(nil)).Elem()
}

func (i *analysisWaterfallChartSortConfigurationPtrType) ToAnalysisWaterfallChartSortConfigurationPtrOutput() AnalysisWaterfallChartSortConfigurationPtrOutput {
	return i.ToAnalysisWaterfallChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisWaterfallChartSortConfigurationPtrType) ToAnalysisWaterfallChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallChartSortConfigurationPtrOutput)
}

type AnalysisWaterfallChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisWaterfallChartSortConfigurationOutput) ToAnalysisWaterfallChartSortConfigurationOutput() AnalysisWaterfallChartSortConfigurationOutput {
	return o
}

func (o AnalysisWaterfallChartSortConfigurationOutput) ToAnalysisWaterfallChartSortConfigurationOutputWithContext(ctx context.Context) AnalysisWaterfallChartSortConfigurationOutput {
	return o
}

func (o AnalysisWaterfallChartSortConfigurationOutput) ToAnalysisWaterfallChartSortConfigurationPtrOutput() AnalysisWaterfallChartSortConfigurationPtrOutput {
	return o.ToAnalysisWaterfallChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisWaterfallChartSortConfigurationOutput) ToAnalysisWaterfallChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWaterfallChartSortConfiguration) *AnalysisWaterfallChartSortConfiguration {
		return &v
	}).(AnalysisWaterfallChartSortConfigurationPtrOutput)
}

func (o AnalysisWaterfallChartSortConfigurationOutput) BreakdownItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.BreakdownItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisWaterfallChartSortConfigurationOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisWaterfallChartSortConfiguration) []AnalysisFieldSortOptions { return v.CategorySort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisWaterfallChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallChartSortConfiguration)(nil)).Elem()
}

func (o AnalysisWaterfallChartSortConfigurationPtrOutput) ToAnalysisWaterfallChartSortConfigurationPtrOutput() AnalysisWaterfallChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisWaterfallChartSortConfigurationPtrOutput) ToAnalysisWaterfallChartSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWaterfallChartSortConfigurationPtrOutput {
	return o
}

func (o AnalysisWaterfallChartSortConfigurationPtrOutput) Elem() AnalysisWaterfallChartSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartSortConfiguration) AnalysisWaterfallChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisWaterfallChartSortConfiguration
		return ret
	}).(AnalysisWaterfallChartSortConfigurationOutput)
}

func (o AnalysisWaterfallChartSortConfigurationPtrOutput) BreakdownItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.BreakdownItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisWaterfallChartSortConfigurationPtrOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisWaterfallChartSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisWaterfallVisual struct {
	Actions            []AnalysisVisualCustomAction         `pulumi:"actions"`
	ChartConfiguration *AnalysisWaterfallChartConfiguration `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy            `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions  `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions     `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// AnalysisWaterfallVisualInput is an input type that accepts AnalysisWaterfallVisualArgs and AnalysisWaterfallVisualOutput values.
// You can construct a concrete instance of `AnalysisWaterfallVisualInput` via:
//
//	AnalysisWaterfallVisualArgs{...}
type AnalysisWaterfallVisualInput interface {
	pulumi.Input

	ToAnalysisWaterfallVisualOutput() AnalysisWaterfallVisualOutput
	ToAnalysisWaterfallVisualOutputWithContext(context.Context) AnalysisWaterfallVisualOutput
}

type AnalysisWaterfallVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput        `pulumi:"actions"`
	ChartConfiguration AnalysisWaterfallChartConfigurationPtrInput `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput           `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput  `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput     `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (AnalysisWaterfallVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallVisual)(nil)).Elem()
}

func (i AnalysisWaterfallVisualArgs) ToAnalysisWaterfallVisualOutput() AnalysisWaterfallVisualOutput {
	return i.ToAnalysisWaterfallVisualOutputWithContext(context.Background())
}

func (i AnalysisWaterfallVisualArgs) ToAnalysisWaterfallVisualOutputWithContext(ctx context.Context) AnalysisWaterfallVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallVisualOutput)
}

func (i AnalysisWaterfallVisualArgs) ToAnalysisWaterfallVisualPtrOutput() AnalysisWaterfallVisualPtrOutput {
	return i.ToAnalysisWaterfallVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisWaterfallVisualArgs) ToAnalysisWaterfallVisualPtrOutputWithContext(ctx context.Context) AnalysisWaterfallVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallVisualOutput).ToAnalysisWaterfallVisualPtrOutputWithContext(ctx)
}

// AnalysisWaterfallVisualPtrInput is an input type that accepts AnalysisWaterfallVisualArgs, AnalysisWaterfallVisualPtr and AnalysisWaterfallVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisWaterfallVisualPtrInput` via:
//
//	        AnalysisWaterfallVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisWaterfallVisualPtrInput interface {
	pulumi.Input

	ToAnalysisWaterfallVisualPtrOutput() AnalysisWaterfallVisualPtrOutput
	ToAnalysisWaterfallVisualPtrOutputWithContext(context.Context) AnalysisWaterfallVisualPtrOutput
}

type analysisWaterfallVisualPtrType AnalysisWaterfallVisualArgs

func AnalysisWaterfallVisualPtr(v *AnalysisWaterfallVisualArgs) AnalysisWaterfallVisualPtrInput {
	return (*analysisWaterfallVisualPtrType)(v)
}

func (*analysisWaterfallVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallVisual)(nil)).Elem()
}

func (i *analysisWaterfallVisualPtrType) ToAnalysisWaterfallVisualPtrOutput() AnalysisWaterfallVisualPtrOutput {
	return i.ToAnalysisWaterfallVisualPtrOutputWithContext(context.Background())
}

func (i *analysisWaterfallVisualPtrType) ToAnalysisWaterfallVisualPtrOutputWithContext(ctx context.Context) AnalysisWaterfallVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWaterfallVisualPtrOutput)
}

type AnalysisWaterfallVisualOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWaterfallVisual)(nil)).Elem()
}

func (o AnalysisWaterfallVisualOutput) ToAnalysisWaterfallVisualOutput() AnalysisWaterfallVisualOutput {
	return o
}

func (o AnalysisWaterfallVisualOutput) ToAnalysisWaterfallVisualOutputWithContext(ctx context.Context) AnalysisWaterfallVisualOutput {
	return o
}

func (o AnalysisWaterfallVisualOutput) ToAnalysisWaterfallVisualPtrOutput() AnalysisWaterfallVisualPtrOutput {
	return o.ToAnalysisWaterfallVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisWaterfallVisualOutput) ToAnalysisWaterfallVisualPtrOutputWithContext(ctx context.Context) AnalysisWaterfallVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWaterfallVisual) *AnalysisWaterfallVisual {
		return &v
	}).(AnalysisWaterfallVisualPtrOutput)
}

func (o AnalysisWaterfallVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisWaterfallVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisWaterfallVisualOutput) ChartConfiguration() AnalysisWaterfallChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallVisual) *AnalysisWaterfallChartConfiguration { return v.ChartConfiguration }).(AnalysisWaterfallChartConfigurationPtrOutput)
}

func (o AnalysisWaterfallVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisWaterfallVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisWaterfallVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisWaterfallVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWaterfallVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisWaterfallVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisWaterfallVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisWaterfallVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWaterfallVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWaterfallVisual)(nil)).Elem()
}

func (o AnalysisWaterfallVisualPtrOutput) ToAnalysisWaterfallVisualPtrOutput() AnalysisWaterfallVisualPtrOutput {
	return o
}

func (o AnalysisWaterfallVisualPtrOutput) ToAnalysisWaterfallVisualPtrOutputWithContext(ctx context.Context) AnalysisWaterfallVisualPtrOutput {
	return o
}

func (o AnalysisWaterfallVisualPtrOutput) Elem() AnalysisWaterfallVisualOutput {
	return o.ApplyT(func(v *AnalysisWaterfallVisual) AnalysisWaterfallVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisWaterfallVisual
		return ret
	}).(AnalysisWaterfallVisualOutput)
}

func (o AnalysisWaterfallVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisWaterfallVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisWaterfallVisualPtrOutput) ChartConfiguration() AnalysisWaterfallChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallVisual) *AnalysisWaterfallChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisWaterfallChartConfigurationPtrOutput)
}

func (o AnalysisWaterfallVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisWaterfallVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisWaterfallVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisWaterfallVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisWaterfallVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisWaterfallVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type AnalysisWhatIfPointScenario struct {
	Date  string  `pulumi:"date"`
	Value float64 `pulumi:"value"`
}

// AnalysisWhatIfPointScenarioInput is an input type that accepts AnalysisWhatIfPointScenarioArgs and AnalysisWhatIfPointScenarioOutput values.
// You can construct a concrete instance of `AnalysisWhatIfPointScenarioInput` via:
//
//	AnalysisWhatIfPointScenarioArgs{...}
type AnalysisWhatIfPointScenarioInput interface {
	pulumi.Input

	ToAnalysisWhatIfPointScenarioOutput() AnalysisWhatIfPointScenarioOutput
	ToAnalysisWhatIfPointScenarioOutputWithContext(context.Context) AnalysisWhatIfPointScenarioOutput
}

type AnalysisWhatIfPointScenarioArgs struct {
	Date  pulumi.StringInput  `pulumi:"date"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (AnalysisWhatIfPointScenarioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWhatIfPointScenario)(nil)).Elem()
}

func (i AnalysisWhatIfPointScenarioArgs) ToAnalysisWhatIfPointScenarioOutput() AnalysisWhatIfPointScenarioOutput {
	return i.ToAnalysisWhatIfPointScenarioOutputWithContext(context.Background())
}

func (i AnalysisWhatIfPointScenarioArgs) ToAnalysisWhatIfPointScenarioOutputWithContext(ctx context.Context) AnalysisWhatIfPointScenarioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWhatIfPointScenarioOutput)
}

func (i AnalysisWhatIfPointScenarioArgs) ToAnalysisWhatIfPointScenarioPtrOutput() AnalysisWhatIfPointScenarioPtrOutput {
	return i.ToAnalysisWhatIfPointScenarioPtrOutputWithContext(context.Background())
}

func (i AnalysisWhatIfPointScenarioArgs) ToAnalysisWhatIfPointScenarioPtrOutputWithContext(ctx context.Context) AnalysisWhatIfPointScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWhatIfPointScenarioOutput).ToAnalysisWhatIfPointScenarioPtrOutputWithContext(ctx)
}

// AnalysisWhatIfPointScenarioPtrInput is an input type that accepts AnalysisWhatIfPointScenarioArgs, AnalysisWhatIfPointScenarioPtr and AnalysisWhatIfPointScenarioPtrOutput values.
// You can construct a concrete instance of `AnalysisWhatIfPointScenarioPtrInput` via:
//
//	        AnalysisWhatIfPointScenarioArgs{...}
//
//	or:
//
//	        nil
type AnalysisWhatIfPointScenarioPtrInput interface {
	pulumi.Input

	ToAnalysisWhatIfPointScenarioPtrOutput() AnalysisWhatIfPointScenarioPtrOutput
	ToAnalysisWhatIfPointScenarioPtrOutputWithContext(context.Context) AnalysisWhatIfPointScenarioPtrOutput
}

type analysisWhatIfPointScenarioPtrType AnalysisWhatIfPointScenarioArgs

func AnalysisWhatIfPointScenarioPtr(v *AnalysisWhatIfPointScenarioArgs) AnalysisWhatIfPointScenarioPtrInput {
	return (*analysisWhatIfPointScenarioPtrType)(v)
}

func (*analysisWhatIfPointScenarioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWhatIfPointScenario)(nil)).Elem()
}

func (i *analysisWhatIfPointScenarioPtrType) ToAnalysisWhatIfPointScenarioPtrOutput() AnalysisWhatIfPointScenarioPtrOutput {
	return i.ToAnalysisWhatIfPointScenarioPtrOutputWithContext(context.Background())
}

func (i *analysisWhatIfPointScenarioPtrType) ToAnalysisWhatIfPointScenarioPtrOutputWithContext(ctx context.Context) AnalysisWhatIfPointScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWhatIfPointScenarioPtrOutput)
}

type AnalysisWhatIfPointScenarioOutput struct{ *pulumi.OutputState }

func (AnalysisWhatIfPointScenarioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWhatIfPointScenario)(nil)).Elem()
}

func (o AnalysisWhatIfPointScenarioOutput) ToAnalysisWhatIfPointScenarioOutput() AnalysisWhatIfPointScenarioOutput {
	return o
}

func (o AnalysisWhatIfPointScenarioOutput) ToAnalysisWhatIfPointScenarioOutputWithContext(ctx context.Context) AnalysisWhatIfPointScenarioOutput {
	return o
}

func (o AnalysisWhatIfPointScenarioOutput) ToAnalysisWhatIfPointScenarioPtrOutput() AnalysisWhatIfPointScenarioPtrOutput {
	return o.ToAnalysisWhatIfPointScenarioPtrOutputWithContext(context.Background())
}

func (o AnalysisWhatIfPointScenarioOutput) ToAnalysisWhatIfPointScenarioPtrOutputWithContext(ctx context.Context) AnalysisWhatIfPointScenarioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWhatIfPointScenario) *AnalysisWhatIfPointScenario {
		return &v
	}).(AnalysisWhatIfPointScenarioPtrOutput)
}

func (o AnalysisWhatIfPointScenarioOutput) Date() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisWhatIfPointScenario) string { return v.Date }).(pulumi.StringOutput)
}

func (o AnalysisWhatIfPointScenarioOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisWhatIfPointScenario) float64 { return v.Value }).(pulumi.Float64Output)
}

type AnalysisWhatIfPointScenarioPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWhatIfPointScenarioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWhatIfPointScenario)(nil)).Elem()
}

func (o AnalysisWhatIfPointScenarioPtrOutput) ToAnalysisWhatIfPointScenarioPtrOutput() AnalysisWhatIfPointScenarioPtrOutput {
	return o
}

func (o AnalysisWhatIfPointScenarioPtrOutput) ToAnalysisWhatIfPointScenarioPtrOutputWithContext(ctx context.Context) AnalysisWhatIfPointScenarioPtrOutput {
	return o
}

func (o AnalysisWhatIfPointScenarioPtrOutput) Elem() AnalysisWhatIfPointScenarioOutput {
	return o.ApplyT(func(v *AnalysisWhatIfPointScenario) AnalysisWhatIfPointScenario {
		if v != nil {
			return *v
		}
		var ret AnalysisWhatIfPointScenario
		return ret
	}).(AnalysisWhatIfPointScenarioOutput)
}

func (o AnalysisWhatIfPointScenarioPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisWhatIfPointScenario) *string {
		if v == nil {
			return nil
		}
		return &v.Date
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisWhatIfPointScenarioPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisWhatIfPointScenario) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type AnalysisWhatIfRangeScenario struct {
	EndDate   string  `pulumi:"endDate"`
	StartDate string  `pulumi:"startDate"`
	Value     float64 `pulumi:"value"`
}

// AnalysisWhatIfRangeScenarioInput is an input type that accepts AnalysisWhatIfRangeScenarioArgs and AnalysisWhatIfRangeScenarioOutput values.
// You can construct a concrete instance of `AnalysisWhatIfRangeScenarioInput` via:
//
//	AnalysisWhatIfRangeScenarioArgs{...}
type AnalysisWhatIfRangeScenarioInput interface {
	pulumi.Input

	ToAnalysisWhatIfRangeScenarioOutput() AnalysisWhatIfRangeScenarioOutput
	ToAnalysisWhatIfRangeScenarioOutputWithContext(context.Context) AnalysisWhatIfRangeScenarioOutput
}

type AnalysisWhatIfRangeScenarioArgs struct {
	EndDate   pulumi.StringInput  `pulumi:"endDate"`
	StartDate pulumi.StringInput  `pulumi:"startDate"`
	Value     pulumi.Float64Input `pulumi:"value"`
}

func (AnalysisWhatIfRangeScenarioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWhatIfRangeScenario)(nil)).Elem()
}

func (i AnalysisWhatIfRangeScenarioArgs) ToAnalysisWhatIfRangeScenarioOutput() AnalysisWhatIfRangeScenarioOutput {
	return i.ToAnalysisWhatIfRangeScenarioOutputWithContext(context.Background())
}

func (i AnalysisWhatIfRangeScenarioArgs) ToAnalysisWhatIfRangeScenarioOutputWithContext(ctx context.Context) AnalysisWhatIfRangeScenarioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWhatIfRangeScenarioOutput)
}

func (i AnalysisWhatIfRangeScenarioArgs) ToAnalysisWhatIfRangeScenarioPtrOutput() AnalysisWhatIfRangeScenarioPtrOutput {
	return i.ToAnalysisWhatIfRangeScenarioPtrOutputWithContext(context.Background())
}

func (i AnalysisWhatIfRangeScenarioArgs) ToAnalysisWhatIfRangeScenarioPtrOutputWithContext(ctx context.Context) AnalysisWhatIfRangeScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWhatIfRangeScenarioOutput).ToAnalysisWhatIfRangeScenarioPtrOutputWithContext(ctx)
}

// AnalysisWhatIfRangeScenarioPtrInput is an input type that accepts AnalysisWhatIfRangeScenarioArgs, AnalysisWhatIfRangeScenarioPtr and AnalysisWhatIfRangeScenarioPtrOutput values.
// You can construct a concrete instance of `AnalysisWhatIfRangeScenarioPtrInput` via:
//
//	        AnalysisWhatIfRangeScenarioArgs{...}
//
//	or:
//
//	        nil
type AnalysisWhatIfRangeScenarioPtrInput interface {
	pulumi.Input

	ToAnalysisWhatIfRangeScenarioPtrOutput() AnalysisWhatIfRangeScenarioPtrOutput
	ToAnalysisWhatIfRangeScenarioPtrOutputWithContext(context.Context) AnalysisWhatIfRangeScenarioPtrOutput
}

type analysisWhatIfRangeScenarioPtrType AnalysisWhatIfRangeScenarioArgs

func AnalysisWhatIfRangeScenarioPtr(v *AnalysisWhatIfRangeScenarioArgs) AnalysisWhatIfRangeScenarioPtrInput {
	return (*analysisWhatIfRangeScenarioPtrType)(v)
}

func (*analysisWhatIfRangeScenarioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWhatIfRangeScenario)(nil)).Elem()
}

func (i *analysisWhatIfRangeScenarioPtrType) ToAnalysisWhatIfRangeScenarioPtrOutput() AnalysisWhatIfRangeScenarioPtrOutput {
	return i.ToAnalysisWhatIfRangeScenarioPtrOutputWithContext(context.Background())
}

func (i *analysisWhatIfRangeScenarioPtrType) ToAnalysisWhatIfRangeScenarioPtrOutputWithContext(ctx context.Context) AnalysisWhatIfRangeScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWhatIfRangeScenarioPtrOutput)
}

type AnalysisWhatIfRangeScenarioOutput struct{ *pulumi.OutputState }

func (AnalysisWhatIfRangeScenarioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWhatIfRangeScenario)(nil)).Elem()
}

func (o AnalysisWhatIfRangeScenarioOutput) ToAnalysisWhatIfRangeScenarioOutput() AnalysisWhatIfRangeScenarioOutput {
	return o
}

func (o AnalysisWhatIfRangeScenarioOutput) ToAnalysisWhatIfRangeScenarioOutputWithContext(ctx context.Context) AnalysisWhatIfRangeScenarioOutput {
	return o
}

func (o AnalysisWhatIfRangeScenarioOutput) ToAnalysisWhatIfRangeScenarioPtrOutput() AnalysisWhatIfRangeScenarioPtrOutput {
	return o.ToAnalysisWhatIfRangeScenarioPtrOutputWithContext(context.Background())
}

func (o AnalysisWhatIfRangeScenarioOutput) ToAnalysisWhatIfRangeScenarioPtrOutputWithContext(ctx context.Context) AnalysisWhatIfRangeScenarioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWhatIfRangeScenario) *AnalysisWhatIfRangeScenario {
		return &v
	}).(AnalysisWhatIfRangeScenarioPtrOutput)
}

func (o AnalysisWhatIfRangeScenarioOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisWhatIfRangeScenario) string { return v.EndDate }).(pulumi.StringOutput)
}

func (o AnalysisWhatIfRangeScenarioOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisWhatIfRangeScenario) string { return v.StartDate }).(pulumi.StringOutput)
}

func (o AnalysisWhatIfRangeScenarioOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v AnalysisWhatIfRangeScenario) float64 { return v.Value }).(pulumi.Float64Output)
}

type AnalysisWhatIfRangeScenarioPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWhatIfRangeScenarioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWhatIfRangeScenario)(nil)).Elem()
}

func (o AnalysisWhatIfRangeScenarioPtrOutput) ToAnalysisWhatIfRangeScenarioPtrOutput() AnalysisWhatIfRangeScenarioPtrOutput {
	return o
}

func (o AnalysisWhatIfRangeScenarioPtrOutput) ToAnalysisWhatIfRangeScenarioPtrOutputWithContext(ctx context.Context) AnalysisWhatIfRangeScenarioPtrOutput {
	return o
}

func (o AnalysisWhatIfRangeScenarioPtrOutput) Elem() AnalysisWhatIfRangeScenarioOutput {
	return o.ApplyT(func(v *AnalysisWhatIfRangeScenario) AnalysisWhatIfRangeScenario {
		if v != nil {
			return *v
		}
		var ret AnalysisWhatIfRangeScenario
		return ret
	}).(AnalysisWhatIfRangeScenarioOutput)
}

func (o AnalysisWhatIfRangeScenarioPtrOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisWhatIfRangeScenario) *string {
		if v == nil {
			return nil
		}
		return &v.EndDate
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisWhatIfRangeScenarioPtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisWhatIfRangeScenario) *string {
		if v == nil {
			return nil
		}
		return &v.StartDate
	}).(pulumi.StringPtrOutput)
}

func (o AnalysisWhatIfRangeScenarioPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisWhatIfRangeScenario) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type AnalysisWordCloudAggregatedFieldWells struct {
	GroupBy []AnalysisDimensionField `pulumi:"groupBy"`
	Size    []AnalysisMeasureField   `pulumi:"size"`
}

// AnalysisWordCloudAggregatedFieldWellsInput is an input type that accepts AnalysisWordCloudAggregatedFieldWellsArgs and AnalysisWordCloudAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisWordCloudAggregatedFieldWellsInput` via:
//
//	AnalysisWordCloudAggregatedFieldWellsArgs{...}
type AnalysisWordCloudAggregatedFieldWellsInput interface {
	pulumi.Input

	ToAnalysisWordCloudAggregatedFieldWellsOutput() AnalysisWordCloudAggregatedFieldWellsOutput
	ToAnalysisWordCloudAggregatedFieldWellsOutputWithContext(context.Context) AnalysisWordCloudAggregatedFieldWellsOutput
}

type AnalysisWordCloudAggregatedFieldWellsArgs struct {
	GroupBy AnalysisDimensionFieldArrayInput `pulumi:"groupBy"`
	Size    AnalysisMeasureFieldArrayInput   `pulumi:"size"`
}

func (AnalysisWordCloudAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudAggregatedFieldWells)(nil)).Elem()
}

func (i AnalysisWordCloudAggregatedFieldWellsArgs) ToAnalysisWordCloudAggregatedFieldWellsOutput() AnalysisWordCloudAggregatedFieldWellsOutput {
	return i.ToAnalysisWordCloudAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisWordCloudAggregatedFieldWellsArgs) ToAnalysisWordCloudAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisWordCloudAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudAggregatedFieldWellsOutput)
}

func (i AnalysisWordCloudAggregatedFieldWellsArgs) ToAnalysisWordCloudAggregatedFieldWellsPtrOutput() AnalysisWordCloudAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisWordCloudAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisWordCloudAggregatedFieldWellsArgs) ToAnalysisWordCloudAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudAggregatedFieldWellsOutput).ToAnalysisWordCloudAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisWordCloudAggregatedFieldWellsPtrInput is an input type that accepts AnalysisWordCloudAggregatedFieldWellsArgs, AnalysisWordCloudAggregatedFieldWellsPtr and AnalysisWordCloudAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisWordCloudAggregatedFieldWellsPtrInput` via:
//
//	        AnalysisWordCloudAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisWordCloudAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudAggregatedFieldWellsPtrOutput() AnalysisWordCloudAggregatedFieldWellsPtrOutput
	ToAnalysisWordCloudAggregatedFieldWellsPtrOutputWithContext(context.Context) AnalysisWordCloudAggregatedFieldWellsPtrOutput
}

type analysisWordCloudAggregatedFieldWellsPtrType AnalysisWordCloudAggregatedFieldWellsArgs

func AnalysisWordCloudAggregatedFieldWellsPtr(v *AnalysisWordCloudAggregatedFieldWellsArgs) AnalysisWordCloudAggregatedFieldWellsPtrInput {
	return (*analysisWordCloudAggregatedFieldWellsPtrType)(v)
}

func (*analysisWordCloudAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudAggregatedFieldWells)(nil)).Elem()
}

func (i *analysisWordCloudAggregatedFieldWellsPtrType) ToAnalysisWordCloudAggregatedFieldWellsPtrOutput() AnalysisWordCloudAggregatedFieldWellsPtrOutput {
	return i.ToAnalysisWordCloudAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisWordCloudAggregatedFieldWellsPtrType) ToAnalysisWordCloudAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudAggregatedFieldWellsPtrOutput)
}

type AnalysisWordCloudAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisWordCloudAggregatedFieldWellsOutput) ToAnalysisWordCloudAggregatedFieldWellsOutput() AnalysisWordCloudAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisWordCloudAggregatedFieldWellsOutput) ToAnalysisWordCloudAggregatedFieldWellsOutputWithContext(ctx context.Context) AnalysisWordCloudAggregatedFieldWellsOutput {
	return o
}

func (o AnalysisWordCloudAggregatedFieldWellsOutput) ToAnalysisWordCloudAggregatedFieldWellsPtrOutput() AnalysisWordCloudAggregatedFieldWellsPtrOutput {
	return o.ToAnalysisWordCloudAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudAggregatedFieldWellsOutput) ToAnalysisWordCloudAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudAggregatedFieldWells) *AnalysisWordCloudAggregatedFieldWells {
		return &v
	}).(AnalysisWordCloudAggregatedFieldWellsPtrOutput)
}

func (o AnalysisWordCloudAggregatedFieldWellsOutput) GroupBy() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v AnalysisWordCloudAggregatedFieldWells) []AnalysisDimensionField { return v.GroupBy }).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisWordCloudAggregatedFieldWellsOutput) Size() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v AnalysisWordCloudAggregatedFieldWells) []AnalysisMeasureField { return v.Size }).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisWordCloudAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudAggregatedFieldWells)(nil)).Elem()
}

func (o AnalysisWordCloudAggregatedFieldWellsPtrOutput) ToAnalysisWordCloudAggregatedFieldWellsPtrOutput() AnalysisWordCloudAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisWordCloudAggregatedFieldWellsPtrOutput) ToAnalysisWordCloudAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudAggregatedFieldWellsPtrOutput {
	return o
}

func (o AnalysisWordCloudAggregatedFieldWellsPtrOutput) Elem() AnalysisWordCloudAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisWordCloudAggregatedFieldWells) AnalysisWordCloudAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudAggregatedFieldWells
		return ret
	}).(AnalysisWordCloudAggregatedFieldWellsOutput)
}

func (o AnalysisWordCloudAggregatedFieldWellsPtrOutput) GroupBy() AnalysisDimensionFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisWordCloudAggregatedFieldWells) []AnalysisDimensionField {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(AnalysisDimensionFieldArrayOutput)
}

func (o AnalysisWordCloudAggregatedFieldWellsPtrOutput) Size() AnalysisMeasureFieldArrayOutput {
	return o.ApplyT(func(v *AnalysisWordCloudAggregatedFieldWells) []AnalysisMeasureField {
		if v == nil {
			return nil
		}
		return v.Size
	}).(AnalysisMeasureFieldArrayOutput)
}

type AnalysisWordCloudChartConfiguration struct {
	CategoryLabelOptions *AnalysisChartAxisLabelOptions      `pulumi:"categoryLabelOptions"`
	FieldWells           *AnalysisWordCloudFieldWells        `pulumi:"fieldWells"`
	SortConfiguration    *AnalysisWordCloudSortConfiguration `pulumi:"sortConfiguration"`
	WordCloudOptions     *AnalysisWordCloudOptions           `pulumi:"wordCloudOptions"`
}

// AnalysisWordCloudChartConfigurationInput is an input type that accepts AnalysisWordCloudChartConfigurationArgs and AnalysisWordCloudChartConfigurationOutput values.
// You can construct a concrete instance of `AnalysisWordCloudChartConfigurationInput` via:
//
//	AnalysisWordCloudChartConfigurationArgs{...}
type AnalysisWordCloudChartConfigurationInput interface {
	pulumi.Input

	ToAnalysisWordCloudChartConfigurationOutput() AnalysisWordCloudChartConfigurationOutput
	ToAnalysisWordCloudChartConfigurationOutputWithContext(context.Context) AnalysisWordCloudChartConfigurationOutput
}

type AnalysisWordCloudChartConfigurationArgs struct {
	CategoryLabelOptions AnalysisChartAxisLabelOptionsPtrInput      `pulumi:"categoryLabelOptions"`
	FieldWells           AnalysisWordCloudFieldWellsPtrInput        `pulumi:"fieldWells"`
	SortConfiguration    AnalysisWordCloudSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	WordCloudOptions     AnalysisWordCloudOptionsPtrInput           `pulumi:"wordCloudOptions"`
}

func (AnalysisWordCloudChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudChartConfiguration)(nil)).Elem()
}

func (i AnalysisWordCloudChartConfigurationArgs) ToAnalysisWordCloudChartConfigurationOutput() AnalysisWordCloudChartConfigurationOutput {
	return i.ToAnalysisWordCloudChartConfigurationOutputWithContext(context.Background())
}

func (i AnalysisWordCloudChartConfigurationArgs) ToAnalysisWordCloudChartConfigurationOutputWithContext(ctx context.Context) AnalysisWordCloudChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudChartConfigurationOutput)
}

func (i AnalysisWordCloudChartConfigurationArgs) ToAnalysisWordCloudChartConfigurationPtrOutput() AnalysisWordCloudChartConfigurationPtrOutput {
	return i.ToAnalysisWordCloudChartConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisWordCloudChartConfigurationArgs) ToAnalysisWordCloudChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudChartConfigurationOutput).ToAnalysisWordCloudChartConfigurationPtrOutputWithContext(ctx)
}

// AnalysisWordCloudChartConfigurationPtrInput is an input type that accepts AnalysisWordCloudChartConfigurationArgs, AnalysisWordCloudChartConfigurationPtr and AnalysisWordCloudChartConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisWordCloudChartConfigurationPtrInput` via:
//
//	        AnalysisWordCloudChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisWordCloudChartConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudChartConfigurationPtrOutput() AnalysisWordCloudChartConfigurationPtrOutput
	ToAnalysisWordCloudChartConfigurationPtrOutputWithContext(context.Context) AnalysisWordCloudChartConfigurationPtrOutput
}

type analysisWordCloudChartConfigurationPtrType AnalysisWordCloudChartConfigurationArgs

func AnalysisWordCloudChartConfigurationPtr(v *AnalysisWordCloudChartConfigurationArgs) AnalysisWordCloudChartConfigurationPtrInput {
	return (*analysisWordCloudChartConfigurationPtrType)(v)
}

func (*analysisWordCloudChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudChartConfiguration)(nil)).Elem()
}

func (i *analysisWordCloudChartConfigurationPtrType) ToAnalysisWordCloudChartConfigurationPtrOutput() AnalysisWordCloudChartConfigurationPtrOutput {
	return i.ToAnalysisWordCloudChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisWordCloudChartConfigurationPtrType) ToAnalysisWordCloudChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudChartConfigurationPtrOutput)
}

type AnalysisWordCloudChartConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudChartConfiguration)(nil)).Elem()
}

func (o AnalysisWordCloudChartConfigurationOutput) ToAnalysisWordCloudChartConfigurationOutput() AnalysisWordCloudChartConfigurationOutput {
	return o
}

func (o AnalysisWordCloudChartConfigurationOutput) ToAnalysisWordCloudChartConfigurationOutputWithContext(ctx context.Context) AnalysisWordCloudChartConfigurationOutput {
	return o
}

func (o AnalysisWordCloudChartConfigurationOutput) ToAnalysisWordCloudChartConfigurationPtrOutput() AnalysisWordCloudChartConfigurationPtrOutput {
	return o.ToAnalysisWordCloudChartConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudChartConfigurationOutput) ToAnalysisWordCloudChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudChartConfiguration) *AnalysisWordCloudChartConfiguration {
		return &v
	}).(AnalysisWordCloudChartConfigurationPtrOutput)
}

func (o AnalysisWordCloudChartConfigurationOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudChartConfiguration) *AnalysisChartAxisLabelOptions {
		return v.CategoryLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisWordCloudChartConfigurationOutput) FieldWells() AnalysisWordCloudFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudChartConfiguration) *AnalysisWordCloudFieldWells { return v.FieldWells }).(AnalysisWordCloudFieldWellsPtrOutput)
}

func (o AnalysisWordCloudChartConfigurationOutput) SortConfiguration() AnalysisWordCloudSortConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudChartConfiguration) *AnalysisWordCloudSortConfiguration {
		return v.SortConfiguration
	}).(AnalysisWordCloudSortConfigurationPtrOutput)
}

func (o AnalysisWordCloudChartConfigurationOutput) WordCloudOptions() AnalysisWordCloudOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudChartConfiguration) *AnalysisWordCloudOptions { return v.WordCloudOptions }).(AnalysisWordCloudOptionsPtrOutput)
}

type AnalysisWordCloudChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudChartConfiguration)(nil)).Elem()
}

func (o AnalysisWordCloudChartConfigurationPtrOutput) ToAnalysisWordCloudChartConfigurationPtrOutput() AnalysisWordCloudChartConfigurationPtrOutput {
	return o
}

func (o AnalysisWordCloudChartConfigurationPtrOutput) ToAnalysisWordCloudChartConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudChartConfigurationPtrOutput {
	return o
}

func (o AnalysisWordCloudChartConfigurationPtrOutput) Elem() AnalysisWordCloudChartConfigurationOutput {
	return o.ApplyT(func(v *AnalysisWordCloudChartConfiguration) AnalysisWordCloudChartConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudChartConfiguration
		return ret
	}).(AnalysisWordCloudChartConfigurationOutput)
}

func (o AnalysisWordCloudChartConfigurationPtrOutput) CategoryLabelOptions() AnalysisChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudChartConfiguration) *AnalysisChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(AnalysisChartAxisLabelOptionsPtrOutput)
}

func (o AnalysisWordCloudChartConfigurationPtrOutput) FieldWells() AnalysisWordCloudFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudChartConfiguration) *AnalysisWordCloudFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(AnalysisWordCloudFieldWellsPtrOutput)
}

func (o AnalysisWordCloudChartConfigurationPtrOutput) SortConfiguration() AnalysisWordCloudSortConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudChartConfiguration) *AnalysisWordCloudSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(AnalysisWordCloudSortConfigurationPtrOutput)
}

func (o AnalysisWordCloudChartConfigurationPtrOutput) WordCloudOptions() AnalysisWordCloudOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudChartConfiguration) *AnalysisWordCloudOptions {
		if v == nil {
			return nil
		}
		return v.WordCloudOptions
	}).(AnalysisWordCloudOptionsPtrOutput)
}

type AnalysisWordCloudFieldWells struct {
	WordCloudAggregatedFieldWells *AnalysisWordCloudAggregatedFieldWells `pulumi:"wordCloudAggregatedFieldWells"`
}

// AnalysisWordCloudFieldWellsInput is an input type that accepts AnalysisWordCloudFieldWellsArgs and AnalysisWordCloudFieldWellsOutput values.
// You can construct a concrete instance of `AnalysisWordCloudFieldWellsInput` via:
//
//	AnalysisWordCloudFieldWellsArgs{...}
type AnalysisWordCloudFieldWellsInput interface {
	pulumi.Input

	ToAnalysisWordCloudFieldWellsOutput() AnalysisWordCloudFieldWellsOutput
	ToAnalysisWordCloudFieldWellsOutputWithContext(context.Context) AnalysisWordCloudFieldWellsOutput
}

type AnalysisWordCloudFieldWellsArgs struct {
	WordCloudAggregatedFieldWells AnalysisWordCloudAggregatedFieldWellsPtrInput `pulumi:"wordCloudAggregatedFieldWells"`
}

func (AnalysisWordCloudFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudFieldWells)(nil)).Elem()
}

func (i AnalysisWordCloudFieldWellsArgs) ToAnalysisWordCloudFieldWellsOutput() AnalysisWordCloudFieldWellsOutput {
	return i.ToAnalysisWordCloudFieldWellsOutputWithContext(context.Background())
}

func (i AnalysisWordCloudFieldWellsArgs) ToAnalysisWordCloudFieldWellsOutputWithContext(ctx context.Context) AnalysisWordCloudFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudFieldWellsOutput)
}

func (i AnalysisWordCloudFieldWellsArgs) ToAnalysisWordCloudFieldWellsPtrOutput() AnalysisWordCloudFieldWellsPtrOutput {
	return i.ToAnalysisWordCloudFieldWellsPtrOutputWithContext(context.Background())
}

func (i AnalysisWordCloudFieldWellsArgs) ToAnalysisWordCloudFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudFieldWellsOutput).ToAnalysisWordCloudFieldWellsPtrOutputWithContext(ctx)
}

// AnalysisWordCloudFieldWellsPtrInput is an input type that accepts AnalysisWordCloudFieldWellsArgs, AnalysisWordCloudFieldWellsPtr and AnalysisWordCloudFieldWellsPtrOutput values.
// You can construct a concrete instance of `AnalysisWordCloudFieldWellsPtrInput` via:
//
//	        AnalysisWordCloudFieldWellsArgs{...}
//
//	or:
//
//	        nil
type AnalysisWordCloudFieldWellsPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudFieldWellsPtrOutput() AnalysisWordCloudFieldWellsPtrOutput
	ToAnalysisWordCloudFieldWellsPtrOutputWithContext(context.Context) AnalysisWordCloudFieldWellsPtrOutput
}

type analysisWordCloudFieldWellsPtrType AnalysisWordCloudFieldWellsArgs

func AnalysisWordCloudFieldWellsPtr(v *AnalysisWordCloudFieldWellsArgs) AnalysisWordCloudFieldWellsPtrInput {
	return (*analysisWordCloudFieldWellsPtrType)(v)
}

func (*analysisWordCloudFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudFieldWells)(nil)).Elem()
}

func (i *analysisWordCloudFieldWellsPtrType) ToAnalysisWordCloudFieldWellsPtrOutput() AnalysisWordCloudFieldWellsPtrOutput {
	return i.ToAnalysisWordCloudFieldWellsPtrOutputWithContext(context.Background())
}

func (i *analysisWordCloudFieldWellsPtrType) ToAnalysisWordCloudFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudFieldWellsPtrOutput)
}

type AnalysisWordCloudFieldWellsOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudFieldWells)(nil)).Elem()
}

func (o AnalysisWordCloudFieldWellsOutput) ToAnalysisWordCloudFieldWellsOutput() AnalysisWordCloudFieldWellsOutput {
	return o
}

func (o AnalysisWordCloudFieldWellsOutput) ToAnalysisWordCloudFieldWellsOutputWithContext(ctx context.Context) AnalysisWordCloudFieldWellsOutput {
	return o
}

func (o AnalysisWordCloudFieldWellsOutput) ToAnalysisWordCloudFieldWellsPtrOutput() AnalysisWordCloudFieldWellsPtrOutput {
	return o.ToAnalysisWordCloudFieldWellsPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudFieldWellsOutput) ToAnalysisWordCloudFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudFieldWells) *AnalysisWordCloudFieldWells {
		return &v
	}).(AnalysisWordCloudFieldWellsPtrOutput)
}

func (o AnalysisWordCloudFieldWellsOutput) WordCloudAggregatedFieldWells() AnalysisWordCloudAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudFieldWells) *AnalysisWordCloudAggregatedFieldWells {
		return v.WordCloudAggregatedFieldWells
	}).(AnalysisWordCloudAggregatedFieldWellsPtrOutput)
}

type AnalysisWordCloudFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudFieldWells)(nil)).Elem()
}

func (o AnalysisWordCloudFieldWellsPtrOutput) ToAnalysisWordCloudFieldWellsPtrOutput() AnalysisWordCloudFieldWellsPtrOutput {
	return o
}

func (o AnalysisWordCloudFieldWellsPtrOutput) ToAnalysisWordCloudFieldWellsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudFieldWellsPtrOutput {
	return o
}

func (o AnalysisWordCloudFieldWellsPtrOutput) Elem() AnalysisWordCloudFieldWellsOutput {
	return o.ApplyT(func(v *AnalysisWordCloudFieldWells) AnalysisWordCloudFieldWells {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudFieldWells
		return ret
	}).(AnalysisWordCloudFieldWellsOutput)
}

func (o AnalysisWordCloudFieldWellsPtrOutput) WordCloudAggregatedFieldWells() AnalysisWordCloudAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudFieldWells) *AnalysisWordCloudAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.WordCloudAggregatedFieldWells
	}).(AnalysisWordCloudAggregatedFieldWellsPtrOutput)
}

type AnalysisWordCloudOptions struct {
	CloudLayout         *AnalysisWordCloudCloudLayout     `pulumi:"cloudLayout"`
	MaximumStringLength *float64                          `pulumi:"maximumStringLength"`
	WordCasing          *AnalysisWordCloudWordCasing      `pulumi:"wordCasing"`
	WordOrientation     *AnalysisWordCloudWordOrientation `pulumi:"wordOrientation"`
	WordPadding         *AnalysisWordCloudWordPadding     `pulumi:"wordPadding"`
	WordScaling         *AnalysisWordCloudWordScaling     `pulumi:"wordScaling"`
}

// AnalysisWordCloudOptionsInput is an input type that accepts AnalysisWordCloudOptionsArgs and AnalysisWordCloudOptionsOutput values.
// You can construct a concrete instance of `AnalysisWordCloudOptionsInput` via:
//
//	AnalysisWordCloudOptionsArgs{...}
type AnalysisWordCloudOptionsInput interface {
	pulumi.Input

	ToAnalysisWordCloudOptionsOutput() AnalysisWordCloudOptionsOutput
	ToAnalysisWordCloudOptionsOutputWithContext(context.Context) AnalysisWordCloudOptionsOutput
}

type AnalysisWordCloudOptionsArgs struct {
	CloudLayout         AnalysisWordCloudCloudLayoutPtrInput     `pulumi:"cloudLayout"`
	MaximumStringLength pulumi.Float64PtrInput                   `pulumi:"maximumStringLength"`
	WordCasing          AnalysisWordCloudWordCasingPtrInput      `pulumi:"wordCasing"`
	WordOrientation     AnalysisWordCloudWordOrientationPtrInput `pulumi:"wordOrientation"`
	WordPadding         AnalysisWordCloudWordPaddingPtrInput     `pulumi:"wordPadding"`
	WordScaling         AnalysisWordCloudWordScalingPtrInput     `pulumi:"wordScaling"`
}

func (AnalysisWordCloudOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudOptions)(nil)).Elem()
}

func (i AnalysisWordCloudOptionsArgs) ToAnalysisWordCloudOptionsOutput() AnalysisWordCloudOptionsOutput {
	return i.ToAnalysisWordCloudOptionsOutputWithContext(context.Background())
}

func (i AnalysisWordCloudOptionsArgs) ToAnalysisWordCloudOptionsOutputWithContext(ctx context.Context) AnalysisWordCloudOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudOptionsOutput)
}

func (i AnalysisWordCloudOptionsArgs) ToAnalysisWordCloudOptionsPtrOutput() AnalysisWordCloudOptionsPtrOutput {
	return i.ToAnalysisWordCloudOptionsPtrOutputWithContext(context.Background())
}

func (i AnalysisWordCloudOptionsArgs) ToAnalysisWordCloudOptionsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudOptionsOutput).ToAnalysisWordCloudOptionsPtrOutputWithContext(ctx)
}

// AnalysisWordCloudOptionsPtrInput is an input type that accepts AnalysisWordCloudOptionsArgs, AnalysisWordCloudOptionsPtr and AnalysisWordCloudOptionsPtrOutput values.
// You can construct a concrete instance of `AnalysisWordCloudOptionsPtrInput` via:
//
//	        AnalysisWordCloudOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalysisWordCloudOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudOptionsPtrOutput() AnalysisWordCloudOptionsPtrOutput
	ToAnalysisWordCloudOptionsPtrOutputWithContext(context.Context) AnalysisWordCloudOptionsPtrOutput
}

type analysisWordCloudOptionsPtrType AnalysisWordCloudOptionsArgs

func AnalysisWordCloudOptionsPtr(v *AnalysisWordCloudOptionsArgs) AnalysisWordCloudOptionsPtrInput {
	return (*analysisWordCloudOptionsPtrType)(v)
}

func (*analysisWordCloudOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudOptions)(nil)).Elem()
}

func (i *analysisWordCloudOptionsPtrType) ToAnalysisWordCloudOptionsPtrOutput() AnalysisWordCloudOptionsPtrOutput {
	return i.ToAnalysisWordCloudOptionsPtrOutputWithContext(context.Background())
}

func (i *analysisWordCloudOptionsPtrType) ToAnalysisWordCloudOptionsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudOptionsPtrOutput)
}

type AnalysisWordCloudOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudOptions)(nil)).Elem()
}

func (o AnalysisWordCloudOptionsOutput) ToAnalysisWordCloudOptionsOutput() AnalysisWordCloudOptionsOutput {
	return o
}

func (o AnalysisWordCloudOptionsOutput) ToAnalysisWordCloudOptionsOutputWithContext(ctx context.Context) AnalysisWordCloudOptionsOutput {
	return o
}

func (o AnalysisWordCloudOptionsOutput) ToAnalysisWordCloudOptionsPtrOutput() AnalysisWordCloudOptionsPtrOutput {
	return o.ToAnalysisWordCloudOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudOptionsOutput) ToAnalysisWordCloudOptionsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudOptions) *AnalysisWordCloudOptions {
		return &v
	}).(AnalysisWordCloudOptionsPtrOutput)
}

func (o AnalysisWordCloudOptionsOutput) CloudLayout() AnalysisWordCloudCloudLayoutPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudOptions) *AnalysisWordCloudCloudLayout { return v.CloudLayout }).(AnalysisWordCloudCloudLayoutPtrOutput)
}

func (o AnalysisWordCloudOptionsOutput) MaximumStringLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudOptions) *float64 { return v.MaximumStringLength }).(pulumi.Float64PtrOutput)
}

func (o AnalysisWordCloudOptionsOutput) WordCasing() AnalysisWordCloudWordCasingPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudOptions) *AnalysisWordCloudWordCasing { return v.WordCasing }).(AnalysisWordCloudWordCasingPtrOutput)
}

func (o AnalysisWordCloudOptionsOutput) WordOrientation() AnalysisWordCloudWordOrientationPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudOptions) *AnalysisWordCloudWordOrientation { return v.WordOrientation }).(AnalysisWordCloudWordOrientationPtrOutput)
}

func (o AnalysisWordCloudOptionsOutput) WordPadding() AnalysisWordCloudWordPaddingPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudOptions) *AnalysisWordCloudWordPadding { return v.WordPadding }).(AnalysisWordCloudWordPaddingPtrOutput)
}

func (o AnalysisWordCloudOptionsOutput) WordScaling() AnalysisWordCloudWordScalingPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudOptions) *AnalysisWordCloudWordScaling { return v.WordScaling }).(AnalysisWordCloudWordScalingPtrOutput)
}

type AnalysisWordCloudOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudOptions)(nil)).Elem()
}

func (o AnalysisWordCloudOptionsPtrOutput) ToAnalysisWordCloudOptionsPtrOutput() AnalysisWordCloudOptionsPtrOutput {
	return o
}

func (o AnalysisWordCloudOptionsPtrOutput) ToAnalysisWordCloudOptionsPtrOutputWithContext(ctx context.Context) AnalysisWordCloudOptionsPtrOutput {
	return o
}

func (o AnalysisWordCloudOptionsPtrOutput) Elem() AnalysisWordCloudOptionsOutput {
	return o.ApplyT(func(v *AnalysisWordCloudOptions) AnalysisWordCloudOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudOptions
		return ret
	}).(AnalysisWordCloudOptionsOutput)
}

func (o AnalysisWordCloudOptionsPtrOutput) CloudLayout() AnalysisWordCloudCloudLayoutPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudOptions) *AnalysisWordCloudCloudLayout {
		if v == nil {
			return nil
		}
		return v.CloudLayout
	}).(AnalysisWordCloudCloudLayoutPtrOutput)
}

func (o AnalysisWordCloudOptionsPtrOutput) MaximumStringLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.MaximumStringLength
	}).(pulumi.Float64PtrOutput)
}

func (o AnalysisWordCloudOptionsPtrOutput) WordCasing() AnalysisWordCloudWordCasingPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudOptions) *AnalysisWordCloudWordCasing {
		if v == nil {
			return nil
		}
		return v.WordCasing
	}).(AnalysisWordCloudWordCasingPtrOutput)
}

func (o AnalysisWordCloudOptionsPtrOutput) WordOrientation() AnalysisWordCloudWordOrientationPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudOptions) *AnalysisWordCloudWordOrientation {
		if v == nil {
			return nil
		}
		return v.WordOrientation
	}).(AnalysisWordCloudWordOrientationPtrOutput)
}

func (o AnalysisWordCloudOptionsPtrOutput) WordPadding() AnalysisWordCloudWordPaddingPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudOptions) *AnalysisWordCloudWordPadding {
		if v == nil {
			return nil
		}
		return v.WordPadding
	}).(AnalysisWordCloudWordPaddingPtrOutput)
}

func (o AnalysisWordCloudOptionsPtrOutput) WordScaling() AnalysisWordCloudWordScalingPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudOptions) *AnalysisWordCloudWordScaling {
		if v == nil {
			return nil
		}
		return v.WordScaling
	}).(AnalysisWordCloudWordScalingPtrOutput)
}

type AnalysisWordCloudSortConfiguration struct {
	CategoryItemsLimit *AnalysisItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []AnalysisFieldSortOptions       `pulumi:"categorySort"`
}

// AnalysisWordCloudSortConfigurationInput is an input type that accepts AnalysisWordCloudSortConfigurationArgs and AnalysisWordCloudSortConfigurationOutput values.
// You can construct a concrete instance of `AnalysisWordCloudSortConfigurationInput` via:
//
//	AnalysisWordCloudSortConfigurationArgs{...}
type AnalysisWordCloudSortConfigurationInput interface {
	pulumi.Input

	ToAnalysisWordCloudSortConfigurationOutput() AnalysisWordCloudSortConfigurationOutput
	ToAnalysisWordCloudSortConfigurationOutputWithContext(context.Context) AnalysisWordCloudSortConfigurationOutput
}

type AnalysisWordCloudSortConfigurationArgs struct {
	CategoryItemsLimit AnalysisItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       AnalysisFieldSortOptionsArrayInput      `pulumi:"categorySort"`
}

func (AnalysisWordCloudSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudSortConfiguration)(nil)).Elem()
}

func (i AnalysisWordCloudSortConfigurationArgs) ToAnalysisWordCloudSortConfigurationOutput() AnalysisWordCloudSortConfigurationOutput {
	return i.ToAnalysisWordCloudSortConfigurationOutputWithContext(context.Background())
}

func (i AnalysisWordCloudSortConfigurationArgs) ToAnalysisWordCloudSortConfigurationOutputWithContext(ctx context.Context) AnalysisWordCloudSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudSortConfigurationOutput)
}

func (i AnalysisWordCloudSortConfigurationArgs) ToAnalysisWordCloudSortConfigurationPtrOutput() AnalysisWordCloudSortConfigurationPtrOutput {
	return i.ToAnalysisWordCloudSortConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalysisWordCloudSortConfigurationArgs) ToAnalysisWordCloudSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudSortConfigurationOutput).ToAnalysisWordCloudSortConfigurationPtrOutputWithContext(ctx)
}

// AnalysisWordCloudSortConfigurationPtrInput is an input type that accepts AnalysisWordCloudSortConfigurationArgs, AnalysisWordCloudSortConfigurationPtr and AnalysisWordCloudSortConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalysisWordCloudSortConfigurationPtrInput` via:
//
//	        AnalysisWordCloudSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalysisWordCloudSortConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudSortConfigurationPtrOutput() AnalysisWordCloudSortConfigurationPtrOutput
	ToAnalysisWordCloudSortConfigurationPtrOutputWithContext(context.Context) AnalysisWordCloudSortConfigurationPtrOutput
}

type analysisWordCloudSortConfigurationPtrType AnalysisWordCloudSortConfigurationArgs

func AnalysisWordCloudSortConfigurationPtr(v *AnalysisWordCloudSortConfigurationArgs) AnalysisWordCloudSortConfigurationPtrInput {
	return (*analysisWordCloudSortConfigurationPtrType)(v)
}

func (*analysisWordCloudSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudSortConfiguration)(nil)).Elem()
}

func (i *analysisWordCloudSortConfigurationPtrType) ToAnalysisWordCloudSortConfigurationPtrOutput() AnalysisWordCloudSortConfigurationPtrOutput {
	return i.ToAnalysisWordCloudSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *analysisWordCloudSortConfigurationPtrType) ToAnalysisWordCloudSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudSortConfigurationPtrOutput)
}

type AnalysisWordCloudSortConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudSortConfiguration)(nil)).Elem()
}

func (o AnalysisWordCloudSortConfigurationOutput) ToAnalysisWordCloudSortConfigurationOutput() AnalysisWordCloudSortConfigurationOutput {
	return o
}

func (o AnalysisWordCloudSortConfigurationOutput) ToAnalysisWordCloudSortConfigurationOutputWithContext(ctx context.Context) AnalysisWordCloudSortConfigurationOutput {
	return o
}

func (o AnalysisWordCloudSortConfigurationOutput) ToAnalysisWordCloudSortConfigurationPtrOutput() AnalysisWordCloudSortConfigurationPtrOutput {
	return o.ToAnalysisWordCloudSortConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudSortConfigurationOutput) ToAnalysisWordCloudSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudSortConfiguration) *AnalysisWordCloudSortConfiguration {
		return &v
	}).(AnalysisWordCloudSortConfigurationPtrOutput)
}

func (o AnalysisWordCloudSortConfigurationOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudSortConfiguration) *AnalysisItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisWordCloudSortConfigurationOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v AnalysisWordCloudSortConfiguration) []AnalysisFieldSortOptions { return v.CategorySort }).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisWordCloudSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudSortConfiguration)(nil)).Elem()
}

func (o AnalysisWordCloudSortConfigurationPtrOutput) ToAnalysisWordCloudSortConfigurationPtrOutput() AnalysisWordCloudSortConfigurationPtrOutput {
	return o
}

func (o AnalysisWordCloudSortConfigurationPtrOutput) ToAnalysisWordCloudSortConfigurationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudSortConfigurationPtrOutput {
	return o
}

func (o AnalysisWordCloudSortConfigurationPtrOutput) Elem() AnalysisWordCloudSortConfigurationOutput {
	return o.ApplyT(func(v *AnalysisWordCloudSortConfiguration) AnalysisWordCloudSortConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudSortConfiguration
		return ret
	}).(AnalysisWordCloudSortConfigurationOutput)
}

func (o AnalysisWordCloudSortConfigurationPtrOutput) CategoryItemsLimit() AnalysisItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudSortConfiguration) *AnalysisItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(AnalysisItemsLimitConfigurationPtrOutput)
}

func (o AnalysisWordCloudSortConfigurationPtrOutput) CategorySort() AnalysisFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *AnalysisWordCloudSortConfiguration) []AnalysisFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(AnalysisFieldSortOptionsArrayOutput)
}

type AnalysisWordCloudVisual struct {
	Actions            []AnalysisVisualCustomAction         `pulumi:"actions"`
	ChartConfiguration *AnalysisWordCloudChartConfiguration `pulumi:"chartConfiguration"`
	ColumnHierarchies  []AnalysisColumnHierarchy            `pulumi:"columnHierarchies"`
	Subtitle           *AnalysisVisualSubtitleLabelOptions  `pulumi:"subtitle"`
	Title              *AnalysisVisualTitleLabelOptions     `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// AnalysisWordCloudVisualInput is an input type that accepts AnalysisWordCloudVisualArgs and AnalysisWordCloudVisualOutput values.
// You can construct a concrete instance of `AnalysisWordCloudVisualInput` via:
//
//	AnalysisWordCloudVisualArgs{...}
type AnalysisWordCloudVisualInput interface {
	pulumi.Input

	ToAnalysisWordCloudVisualOutput() AnalysisWordCloudVisualOutput
	ToAnalysisWordCloudVisualOutputWithContext(context.Context) AnalysisWordCloudVisualOutput
}

type AnalysisWordCloudVisualArgs struct {
	Actions            AnalysisVisualCustomActionArrayInput        `pulumi:"actions"`
	ChartConfiguration AnalysisWordCloudChartConfigurationPtrInput `pulumi:"chartConfiguration"`
	ColumnHierarchies  AnalysisColumnHierarchyArrayInput           `pulumi:"columnHierarchies"`
	Subtitle           AnalysisVisualSubtitleLabelOptionsPtrInput  `pulumi:"subtitle"`
	Title              AnalysisVisualTitleLabelOptionsPtrInput     `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (AnalysisWordCloudVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudVisual)(nil)).Elem()
}

func (i AnalysisWordCloudVisualArgs) ToAnalysisWordCloudVisualOutput() AnalysisWordCloudVisualOutput {
	return i.ToAnalysisWordCloudVisualOutputWithContext(context.Background())
}

func (i AnalysisWordCloudVisualArgs) ToAnalysisWordCloudVisualOutputWithContext(ctx context.Context) AnalysisWordCloudVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudVisualOutput)
}

func (i AnalysisWordCloudVisualArgs) ToAnalysisWordCloudVisualPtrOutput() AnalysisWordCloudVisualPtrOutput {
	return i.ToAnalysisWordCloudVisualPtrOutputWithContext(context.Background())
}

func (i AnalysisWordCloudVisualArgs) ToAnalysisWordCloudVisualPtrOutputWithContext(ctx context.Context) AnalysisWordCloudVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudVisualOutput).ToAnalysisWordCloudVisualPtrOutputWithContext(ctx)
}

// AnalysisWordCloudVisualPtrInput is an input type that accepts AnalysisWordCloudVisualArgs, AnalysisWordCloudVisualPtr and AnalysisWordCloudVisualPtrOutput values.
// You can construct a concrete instance of `AnalysisWordCloudVisualPtrInput` via:
//
//	        AnalysisWordCloudVisualArgs{...}
//
//	or:
//
//	        nil
type AnalysisWordCloudVisualPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudVisualPtrOutput() AnalysisWordCloudVisualPtrOutput
	ToAnalysisWordCloudVisualPtrOutputWithContext(context.Context) AnalysisWordCloudVisualPtrOutput
}

type analysisWordCloudVisualPtrType AnalysisWordCloudVisualArgs

func AnalysisWordCloudVisualPtr(v *AnalysisWordCloudVisualArgs) AnalysisWordCloudVisualPtrInput {
	return (*analysisWordCloudVisualPtrType)(v)
}

func (*analysisWordCloudVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudVisual)(nil)).Elem()
}

func (i *analysisWordCloudVisualPtrType) ToAnalysisWordCloudVisualPtrOutput() AnalysisWordCloudVisualPtrOutput {
	return i.ToAnalysisWordCloudVisualPtrOutputWithContext(context.Background())
}

func (i *analysisWordCloudVisualPtrType) ToAnalysisWordCloudVisualPtrOutputWithContext(ctx context.Context) AnalysisWordCloudVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisWordCloudVisualPtrOutput)
}

type AnalysisWordCloudVisualOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudVisual)(nil)).Elem()
}

func (o AnalysisWordCloudVisualOutput) ToAnalysisWordCloudVisualOutput() AnalysisWordCloudVisualOutput {
	return o
}

func (o AnalysisWordCloudVisualOutput) ToAnalysisWordCloudVisualOutputWithContext(ctx context.Context) AnalysisWordCloudVisualOutput {
	return o
}

func (o AnalysisWordCloudVisualOutput) ToAnalysisWordCloudVisualPtrOutput() AnalysisWordCloudVisualPtrOutput {
	return o.ToAnalysisWordCloudVisualPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudVisualOutput) ToAnalysisWordCloudVisualPtrOutputWithContext(ctx context.Context) AnalysisWordCloudVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudVisual) *AnalysisWordCloudVisual {
		return &v
	}).(AnalysisWordCloudVisualPtrOutput)
}

func (o AnalysisWordCloudVisualOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v AnalysisWordCloudVisual) []AnalysisVisualCustomAction { return v.Actions }).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisWordCloudVisualOutput) ChartConfiguration() AnalysisWordCloudChartConfigurationPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudVisual) *AnalysisWordCloudChartConfiguration { return v.ChartConfiguration }).(AnalysisWordCloudChartConfigurationPtrOutput)
}

func (o AnalysisWordCloudVisualOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v AnalysisWordCloudVisual) []AnalysisColumnHierarchy { return v.ColumnHierarchies }).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisWordCloudVisualOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudVisual) *AnalysisVisualSubtitleLabelOptions { return v.Subtitle }).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisWordCloudVisualOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v AnalysisWordCloudVisual) *AnalysisVisualTitleLabelOptions { return v.Title }).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisWordCloudVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalysisWordCloudVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type AnalysisWordCloudVisualPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudVisual)(nil)).Elem()
}

func (o AnalysisWordCloudVisualPtrOutput) ToAnalysisWordCloudVisualPtrOutput() AnalysisWordCloudVisualPtrOutput {
	return o
}

func (o AnalysisWordCloudVisualPtrOutput) ToAnalysisWordCloudVisualPtrOutputWithContext(ctx context.Context) AnalysisWordCloudVisualPtrOutput {
	return o
}

func (o AnalysisWordCloudVisualPtrOutput) Elem() AnalysisWordCloudVisualOutput {
	return o.ApplyT(func(v *AnalysisWordCloudVisual) AnalysisWordCloudVisual {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudVisual
		return ret
	}).(AnalysisWordCloudVisualOutput)
}

func (o AnalysisWordCloudVisualPtrOutput) Actions() AnalysisVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *AnalysisWordCloudVisual) []AnalysisVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AnalysisVisualCustomActionArrayOutput)
}

func (o AnalysisWordCloudVisualPtrOutput) ChartConfiguration() AnalysisWordCloudChartConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudVisual) *AnalysisWordCloudChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(AnalysisWordCloudChartConfigurationPtrOutput)
}

func (o AnalysisWordCloudVisualPtrOutput) ColumnHierarchies() AnalysisColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *AnalysisWordCloudVisual) []AnalysisColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(AnalysisColumnHierarchyArrayOutput)
}

func (o AnalysisWordCloudVisualPtrOutput) Subtitle() AnalysisVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudVisual) *AnalysisVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(AnalysisVisualSubtitleLabelOptionsPtrOutput)
}

func (o AnalysisWordCloudVisualPtrOutput) Title() AnalysisVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudVisual) *AnalysisVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AnalysisVisualTitleLabelOptionsPtrOutput)
}

func (o AnalysisWordCloudVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalysisWordCloudVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardAdHocFilteringOption struct {
	AvailabilityStatus *DashboardBehavior `pulumi:"availabilityStatus"`
}

// DashboardAdHocFilteringOptionInput is an input type that accepts DashboardAdHocFilteringOptionArgs and DashboardAdHocFilteringOptionOutput values.
// You can construct a concrete instance of `DashboardAdHocFilteringOptionInput` via:
//
//	DashboardAdHocFilteringOptionArgs{...}
type DashboardAdHocFilteringOptionInput interface {
	pulumi.Input

	ToDashboardAdHocFilteringOptionOutput() DashboardAdHocFilteringOptionOutput
	ToDashboardAdHocFilteringOptionOutputWithContext(context.Context) DashboardAdHocFilteringOptionOutput
}

type DashboardAdHocFilteringOptionArgs struct {
	AvailabilityStatus DashboardBehaviorPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardAdHocFilteringOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAdHocFilteringOption)(nil)).Elem()
}

func (i DashboardAdHocFilteringOptionArgs) ToDashboardAdHocFilteringOptionOutput() DashboardAdHocFilteringOptionOutput {
	return i.ToDashboardAdHocFilteringOptionOutputWithContext(context.Background())
}

func (i DashboardAdHocFilteringOptionArgs) ToDashboardAdHocFilteringOptionOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAdHocFilteringOptionOutput)
}

func (i DashboardAdHocFilteringOptionArgs) ToDashboardAdHocFilteringOptionPtrOutput() DashboardAdHocFilteringOptionPtrOutput {
	return i.ToDashboardAdHocFilteringOptionPtrOutputWithContext(context.Background())
}

func (i DashboardAdHocFilteringOptionArgs) ToDashboardAdHocFilteringOptionPtrOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAdHocFilteringOptionOutput).ToDashboardAdHocFilteringOptionPtrOutputWithContext(ctx)
}

// DashboardAdHocFilteringOptionPtrInput is an input type that accepts DashboardAdHocFilteringOptionArgs, DashboardAdHocFilteringOptionPtr and DashboardAdHocFilteringOptionPtrOutput values.
// You can construct a concrete instance of `DashboardAdHocFilteringOptionPtrInput` via:
//
//	        DashboardAdHocFilteringOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardAdHocFilteringOptionPtrInput interface {
	pulumi.Input

	ToDashboardAdHocFilteringOptionPtrOutput() DashboardAdHocFilteringOptionPtrOutput
	ToDashboardAdHocFilteringOptionPtrOutputWithContext(context.Context) DashboardAdHocFilteringOptionPtrOutput
}

type dashboardAdHocFilteringOptionPtrType DashboardAdHocFilteringOptionArgs

func DashboardAdHocFilteringOptionPtr(v *DashboardAdHocFilteringOptionArgs) DashboardAdHocFilteringOptionPtrInput {
	return (*dashboardAdHocFilteringOptionPtrType)(v)
}

func (*dashboardAdHocFilteringOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAdHocFilteringOption)(nil)).Elem()
}

func (i *dashboardAdHocFilteringOptionPtrType) ToDashboardAdHocFilteringOptionPtrOutput() DashboardAdHocFilteringOptionPtrOutput {
	return i.ToDashboardAdHocFilteringOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardAdHocFilteringOptionPtrType) ToDashboardAdHocFilteringOptionPtrOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAdHocFilteringOptionPtrOutput)
}

type DashboardAdHocFilteringOptionOutput struct{ *pulumi.OutputState }

func (DashboardAdHocFilteringOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAdHocFilteringOption)(nil)).Elem()
}

func (o DashboardAdHocFilteringOptionOutput) ToDashboardAdHocFilteringOptionOutput() DashboardAdHocFilteringOptionOutput {
	return o
}

func (o DashboardAdHocFilteringOptionOutput) ToDashboardAdHocFilteringOptionOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionOutput {
	return o
}

func (o DashboardAdHocFilteringOptionOutput) ToDashboardAdHocFilteringOptionPtrOutput() DashboardAdHocFilteringOptionPtrOutput {
	return o.ToDashboardAdHocFilteringOptionPtrOutputWithContext(context.Background())
}

func (o DashboardAdHocFilteringOptionOutput) ToDashboardAdHocFilteringOptionPtrOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAdHocFilteringOption) *DashboardAdHocFilteringOption {
		return &v
	}).(DashboardAdHocFilteringOptionPtrOutput)
}

func (o DashboardAdHocFilteringOptionOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v DashboardAdHocFilteringOption) *DashboardBehavior { return v.AvailabilityStatus }).(DashboardBehaviorPtrOutput)
}

type DashboardAdHocFilteringOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardAdHocFilteringOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAdHocFilteringOption)(nil)).Elem()
}

func (o DashboardAdHocFilteringOptionPtrOutput) ToDashboardAdHocFilteringOptionPtrOutput() DashboardAdHocFilteringOptionPtrOutput {
	return o
}

func (o DashboardAdHocFilteringOptionPtrOutput) ToDashboardAdHocFilteringOptionPtrOutputWithContext(ctx context.Context) DashboardAdHocFilteringOptionPtrOutput {
	return o
}

func (o DashboardAdHocFilteringOptionPtrOutput) Elem() DashboardAdHocFilteringOptionOutput {
	return o.ApplyT(func(v *DashboardAdHocFilteringOption) DashboardAdHocFilteringOption {
		if v != nil {
			return *v
		}
		var ret DashboardAdHocFilteringOption
		return ret
	}).(DashboardAdHocFilteringOptionOutput)
}

func (o DashboardAdHocFilteringOptionPtrOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v *DashboardAdHocFilteringOption) *DashboardBehavior {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(DashboardBehaviorPtrOutput)
}

type DashboardAggregationFunction struct {
	CategoricalAggregationFunction *DashboardCategoricalAggregationFunction `pulumi:"categoricalAggregationFunction"`
	DateAggregationFunction        *DashboardDateAggregationFunction        `pulumi:"dateAggregationFunction"`
	NumericalAggregationFunction   *DashboardNumericalAggregationFunction   `pulumi:"numericalAggregationFunction"`
}

// DashboardAggregationFunctionInput is an input type that accepts DashboardAggregationFunctionArgs and DashboardAggregationFunctionOutput values.
// You can construct a concrete instance of `DashboardAggregationFunctionInput` via:
//
//	DashboardAggregationFunctionArgs{...}
type DashboardAggregationFunctionInput interface {
	pulumi.Input

	ToDashboardAggregationFunctionOutput() DashboardAggregationFunctionOutput
	ToDashboardAggregationFunctionOutputWithContext(context.Context) DashboardAggregationFunctionOutput
}

type DashboardAggregationFunctionArgs struct {
	CategoricalAggregationFunction DashboardCategoricalAggregationFunctionPtrInput `pulumi:"categoricalAggregationFunction"`
	DateAggregationFunction        DashboardDateAggregationFunctionPtrInput        `pulumi:"dateAggregationFunction"`
	NumericalAggregationFunction   DashboardNumericalAggregationFunctionPtrInput   `pulumi:"numericalAggregationFunction"`
}

func (DashboardAggregationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAggregationFunction)(nil)).Elem()
}

func (i DashboardAggregationFunctionArgs) ToDashboardAggregationFunctionOutput() DashboardAggregationFunctionOutput {
	return i.ToDashboardAggregationFunctionOutputWithContext(context.Background())
}

func (i DashboardAggregationFunctionArgs) ToDashboardAggregationFunctionOutputWithContext(ctx context.Context) DashboardAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAggregationFunctionOutput)
}

func (i DashboardAggregationFunctionArgs) ToDashboardAggregationFunctionPtrOutput() DashboardAggregationFunctionPtrOutput {
	return i.ToDashboardAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i DashboardAggregationFunctionArgs) ToDashboardAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAggregationFunctionOutput).ToDashboardAggregationFunctionPtrOutputWithContext(ctx)
}

// DashboardAggregationFunctionPtrInput is an input type that accepts DashboardAggregationFunctionArgs, DashboardAggregationFunctionPtr and DashboardAggregationFunctionPtrOutput values.
// You can construct a concrete instance of `DashboardAggregationFunctionPtrInput` via:
//
//	        DashboardAggregationFunctionArgs{...}
//
//	or:
//
//	        nil
type DashboardAggregationFunctionPtrInput interface {
	pulumi.Input

	ToDashboardAggregationFunctionPtrOutput() DashboardAggregationFunctionPtrOutput
	ToDashboardAggregationFunctionPtrOutputWithContext(context.Context) DashboardAggregationFunctionPtrOutput
}

type dashboardAggregationFunctionPtrType DashboardAggregationFunctionArgs

func DashboardAggregationFunctionPtr(v *DashboardAggregationFunctionArgs) DashboardAggregationFunctionPtrInput {
	return (*dashboardAggregationFunctionPtrType)(v)
}

func (*dashboardAggregationFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAggregationFunction)(nil)).Elem()
}

func (i *dashboardAggregationFunctionPtrType) ToDashboardAggregationFunctionPtrOutput() DashboardAggregationFunctionPtrOutput {
	return i.ToDashboardAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i *dashboardAggregationFunctionPtrType) ToDashboardAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAggregationFunctionPtrOutput)
}

type DashboardAggregationFunctionOutput struct{ *pulumi.OutputState }

func (DashboardAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAggregationFunction)(nil)).Elem()
}

func (o DashboardAggregationFunctionOutput) ToDashboardAggregationFunctionOutput() DashboardAggregationFunctionOutput {
	return o
}

func (o DashboardAggregationFunctionOutput) ToDashboardAggregationFunctionOutputWithContext(ctx context.Context) DashboardAggregationFunctionOutput {
	return o
}

func (o DashboardAggregationFunctionOutput) ToDashboardAggregationFunctionPtrOutput() DashboardAggregationFunctionPtrOutput {
	return o.ToDashboardAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o DashboardAggregationFunctionOutput) ToDashboardAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAggregationFunction) *DashboardAggregationFunction {
		return &v
	}).(DashboardAggregationFunctionPtrOutput)
}

func (o DashboardAggregationFunctionOutput) CategoricalAggregationFunction() DashboardCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardAggregationFunction) *DashboardCategoricalAggregationFunction {
		return v.CategoricalAggregationFunction
	}).(DashboardCategoricalAggregationFunctionPtrOutput)
}

func (o DashboardAggregationFunctionOutput) DateAggregationFunction() DashboardDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardAggregationFunction) *DashboardDateAggregationFunction {
		return v.DateAggregationFunction
	}).(DashboardDateAggregationFunctionPtrOutput)
}

func (o DashboardAggregationFunctionOutput) NumericalAggregationFunction() DashboardNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardAggregationFunction) *DashboardNumericalAggregationFunction {
		return v.NumericalAggregationFunction
	}).(DashboardNumericalAggregationFunctionPtrOutput)
}

type DashboardAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (DashboardAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAggregationFunction)(nil)).Elem()
}

func (o DashboardAggregationFunctionPtrOutput) ToDashboardAggregationFunctionPtrOutput() DashboardAggregationFunctionPtrOutput {
	return o
}

func (o DashboardAggregationFunctionPtrOutput) ToDashboardAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardAggregationFunctionPtrOutput {
	return o
}

func (o DashboardAggregationFunctionPtrOutput) Elem() DashboardAggregationFunctionOutput {
	return o.ApplyT(func(v *DashboardAggregationFunction) DashboardAggregationFunction {
		if v != nil {
			return *v
		}
		var ret DashboardAggregationFunction
		return ret
	}).(DashboardAggregationFunctionOutput)
}

func (o DashboardAggregationFunctionPtrOutput) CategoricalAggregationFunction() DashboardCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardAggregationFunction) *DashboardCategoricalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.CategoricalAggregationFunction
	}).(DashboardCategoricalAggregationFunctionPtrOutput)
}

func (o DashboardAggregationFunctionPtrOutput) DateAggregationFunction() DashboardDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardAggregationFunction) *DashboardDateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.DateAggregationFunction
	}).(DashboardDateAggregationFunctionPtrOutput)
}

func (o DashboardAggregationFunctionPtrOutput) NumericalAggregationFunction() DashboardNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardAggregationFunction) *DashboardNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.NumericalAggregationFunction
	}).(DashboardNumericalAggregationFunctionPtrOutput)
}

type DashboardAggregationSortConfiguration struct {
	AggregationFunction DashboardAggregationFunction `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifier    `pulumi:"column"`
	SortDirection       DashboardSortDirection       `pulumi:"sortDirection"`
}

// DashboardAggregationSortConfigurationInput is an input type that accepts DashboardAggregationSortConfigurationArgs and DashboardAggregationSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardAggregationSortConfigurationInput` via:
//
//	DashboardAggregationSortConfigurationArgs{...}
type DashboardAggregationSortConfigurationInput interface {
	pulumi.Input

	ToDashboardAggregationSortConfigurationOutput() DashboardAggregationSortConfigurationOutput
	ToDashboardAggregationSortConfigurationOutputWithContext(context.Context) DashboardAggregationSortConfigurationOutput
}

type DashboardAggregationSortConfigurationArgs struct {
	AggregationFunction DashboardAggregationFunctionInput `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifierInput    `pulumi:"column"`
	SortDirection       DashboardSortDirectionInput       `pulumi:"sortDirection"`
}

func (DashboardAggregationSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAggregationSortConfiguration)(nil)).Elem()
}

func (i DashboardAggregationSortConfigurationArgs) ToDashboardAggregationSortConfigurationOutput() DashboardAggregationSortConfigurationOutput {
	return i.ToDashboardAggregationSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardAggregationSortConfigurationArgs) ToDashboardAggregationSortConfigurationOutputWithContext(ctx context.Context) DashboardAggregationSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAggregationSortConfigurationOutput)
}

// DashboardAggregationSortConfigurationArrayInput is an input type that accepts DashboardAggregationSortConfigurationArray and DashboardAggregationSortConfigurationArrayOutput values.
// You can construct a concrete instance of `DashboardAggregationSortConfigurationArrayInput` via:
//
//	DashboardAggregationSortConfigurationArray{ DashboardAggregationSortConfigurationArgs{...} }
type DashboardAggregationSortConfigurationArrayInput interface {
	pulumi.Input

	ToDashboardAggregationSortConfigurationArrayOutput() DashboardAggregationSortConfigurationArrayOutput
	ToDashboardAggregationSortConfigurationArrayOutputWithContext(context.Context) DashboardAggregationSortConfigurationArrayOutput
}

type DashboardAggregationSortConfigurationArray []DashboardAggregationSortConfigurationInput

func (DashboardAggregationSortConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardAggregationSortConfiguration)(nil)).Elem()
}

func (i DashboardAggregationSortConfigurationArray) ToDashboardAggregationSortConfigurationArrayOutput() DashboardAggregationSortConfigurationArrayOutput {
	return i.ToDashboardAggregationSortConfigurationArrayOutputWithContext(context.Background())
}

func (i DashboardAggregationSortConfigurationArray) ToDashboardAggregationSortConfigurationArrayOutputWithContext(ctx context.Context) DashboardAggregationSortConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAggregationSortConfigurationArrayOutput)
}

type DashboardAggregationSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardAggregationSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAggregationSortConfiguration)(nil)).Elem()
}

func (o DashboardAggregationSortConfigurationOutput) ToDashboardAggregationSortConfigurationOutput() DashboardAggregationSortConfigurationOutput {
	return o
}

func (o DashboardAggregationSortConfigurationOutput) ToDashboardAggregationSortConfigurationOutputWithContext(ctx context.Context) DashboardAggregationSortConfigurationOutput {
	return o
}

func (o DashboardAggregationSortConfigurationOutput) AggregationFunction() DashboardAggregationFunctionOutput {
	return o.ApplyT(func(v DashboardAggregationSortConfiguration) DashboardAggregationFunction {
		return v.AggregationFunction
	}).(DashboardAggregationFunctionOutput)
}

func (o DashboardAggregationSortConfigurationOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardAggregationSortConfiguration) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardAggregationSortConfigurationOutput) SortDirection() DashboardSortDirectionOutput {
	return o.ApplyT(func(v DashboardAggregationSortConfiguration) DashboardSortDirection { return v.SortDirection }).(DashboardSortDirectionOutput)
}

type DashboardAggregationSortConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DashboardAggregationSortConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardAggregationSortConfiguration)(nil)).Elem()
}

func (o DashboardAggregationSortConfigurationArrayOutput) ToDashboardAggregationSortConfigurationArrayOutput() DashboardAggregationSortConfigurationArrayOutput {
	return o
}

func (o DashboardAggregationSortConfigurationArrayOutput) ToDashboardAggregationSortConfigurationArrayOutputWithContext(ctx context.Context) DashboardAggregationSortConfigurationArrayOutput {
	return o
}

func (o DashboardAggregationSortConfigurationArrayOutput) Index(i pulumi.IntInput) DashboardAggregationSortConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardAggregationSortConfiguration {
		return vs[0].([]DashboardAggregationSortConfiguration)[vs[1].(int)]
	}).(DashboardAggregationSortConfigurationOutput)
}

type DashboardAnalysisDefaults struct {
	DefaultNewSheetConfiguration DashboardDefaultNewSheetConfiguration `pulumi:"defaultNewSheetConfiguration"`
}

// DashboardAnalysisDefaultsInput is an input type that accepts DashboardAnalysisDefaultsArgs and DashboardAnalysisDefaultsOutput values.
// You can construct a concrete instance of `DashboardAnalysisDefaultsInput` via:
//
//	DashboardAnalysisDefaultsArgs{...}
type DashboardAnalysisDefaultsInput interface {
	pulumi.Input

	ToDashboardAnalysisDefaultsOutput() DashboardAnalysisDefaultsOutput
	ToDashboardAnalysisDefaultsOutputWithContext(context.Context) DashboardAnalysisDefaultsOutput
}

type DashboardAnalysisDefaultsArgs struct {
	DefaultNewSheetConfiguration DashboardDefaultNewSheetConfigurationInput `pulumi:"defaultNewSheetConfiguration"`
}

func (DashboardAnalysisDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAnalysisDefaults)(nil)).Elem()
}

func (i DashboardAnalysisDefaultsArgs) ToDashboardAnalysisDefaultsOutput() DashboardAnalysisDefaultsOutput {
	return i.ToDashboardAnalysisDefaultsOutputWithContext(context.Background())
}

func (i DashboardAnalysisDefaultsArgs) ToDashboardAnalysisDefaultsOutputWithContext(ctx context.Context) DashboardAnalysisDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAnalysisDefaultsOutput)
}

func (i DashboardAnalysisDefaultsArgs) ToDashboardAnalysisDefaultsPtrOutput() DashboardAnalysisDefaultsPtrOutput {
	return i.ToDashboardAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (i DashboardAnalysisDefaultsArgs) ToDashboardAnalysisDefaultsPtrOutputWithContext(ctx context.Context) DashboardAnalysisDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAnalysisDefaultsOutput).ToDashboardAnalysisDefaultsPtrOutputWithContext(ctx)
}

// DashboardAnalysisDefaultsPtrInput is an input type that accepts DashboardAnalysisDefaultsArgs, DashboardAnalysisDefaultsPtr and DashboardAnalysisDefaultsPtrOutput values.
// You can construct a concrete instance of `DashboardAnalysisDefaultsPtrInput` via:
//
//	        DashboardAnalysisDefaultsArgs{...}
//
//	or:
//
//	        nil
type DashboardAnalysisDefaultsPtrInput interface {
	pulumi.Input

	ToDashboardAnalysisDefaultsPtrOutput() DashboardAnalysisDefaultsPtrOutput
	ToDashboardAnalysisDefaultsPtrOutputWithContext(context.Context) DashboardAnalysisDefaultsPtrOutput
}

type dashboardAnalysisDefaultsPtrType DashboardAnalysisDefaultsArgs

func DashboardAnalysisDefaultsPtr(v *DashboardAnalysisDefaultsArgs) DashboardAnalysisDefaultsPtrInput {
	return (*dashboardAnalysisDefaultsPtrType)(v)
}

func (*dashboardAnalysisDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAnalysisDefaults)(nil)).Elem()
}

func (i *dashboardAnalysisDefaultsPtrType) ToDashboardAnalysisDefaultsPtrOutput() DashboardAnalysisDefaultsPtrOutput {
	return i.ToDashboardAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (i *dashboardAnalysisDefaultsPtrType) ToDashboardAnalysisDefaultsPtrOutputWithContext(ctx context.Context) DashboardAnalysisDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAnalysisDefaultsPtrOutput)
}

type DashboardAnalysisDefaultsOutput struct{ *pulumi.OutputState }

func (DashboardAnalysisDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAnalysisDefaults)(nil)).Elem()
}

func (o DashboardAnalysisDefaultsOutput) ToDashboardAnalysisDefaultsOutput() DashboardAnalysisDefaultsOutput {
	return o
}

func (o DashboardAnalysisDefaultsOutput) ToDashboardAnalysisDefaultsOutputWithContext(ctx context.Context) DashboardAnalysisDefaultsOutput {
	return o
}

func (o DashboardAnalysisDefaultsOutput) ToDashboardAnalysisDefaultsPtrOutput() DashboardAnalysisDefaultsPtrOutput {
	return o.ToDashboardAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (o DashboardAnalysisDefaultsOutput) ToDashboardAnalysisDefaultsPtrOutputWithContext(ctx context.Context) DashboardAnalysisDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAnalysisDefaults) *DashboardAnalysisDefaults {
		return &v
	}).(DashboardAnalysisDefaultsPtrOutput)
}

func (o DashboardAnalysisDefaultsOutput) DefaultNewSheetConfiguration() DashboardDefaultNewSheetConfigurationOutput {
	return o.ApplyT(func(v DashboardAnalysisDefaults) DashboardDefaultNewSheetConfiguration {
		return v.DefaultNewSheetConfiguration
	}).(DashboardDefaultNewSheetConfigurationOutput)
}

type DashboardAnalysisDefaultsPtrOutput struct{ *pulumi.OutputState }

func (DashboardAnalysisDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAnalysisDefaults)(nil)).Elem()
}

func (o DashboardAnalysisDefaultsPtrOutput) ToDashboardAnalysisDefaultsPtrOutput() DashboardAnalysisDefaultsPtrOutput {
	return o
}

func (o DashboardAnalysisDefaultsPtrOutput) ToDashboardAnalysisDefaultsPtrOutputWithContext(ctx context.Context) DashboardAnalysisDefaultsPtrOutput {
	return o
}

func (o DashboardAnalysisDefaultsPtrOutput) Elem() DashboardAnalysisDefaultsOutput {
	return o.ApplyT(func(v *DashboardAnalysisDefaults) DashboardAnalysisDefaults {
		if v != nil {
			return *v
		}
		var ret DashboardAnalysisDefaults
		return ret
	}).(DashboardAnalysisDefaultsOutput)
}

func (o DashboardAnalysisDefaultsPtrOutput) DefaultNewSheetConfiguration() DashboardDefaultNewSheetConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardAnalysisDefaults) *DashboardDefaultNewSheetConfiguration {
		if v == nil {
			return nil
		}
		return &v.DefaultNewSheetConfiguration
	}).(DashboardDefaultNewSheetConfigurationPtrOutput)
}

type DashboardAnchorDateConfiguration struct {
	AnchorOption  *DashboardAnchorOption `pulumi:"anchorOption"`
	ParameterName *string                `pulumi:"parameterName"`
}

// DashboardAnchorDateConfigurationInput is an input type that accepts DashboardAnchorDateConfigurationArgs and DashboardAnchorDateConfigurationOutput values.
// You can construct a concrete instance of `DashboardAnchorDateConfigurationInput` via:
//
//	DashboardAnchorDateConfigurationArgs{...}
type DashboardAnchorDateConfigurationInput interface {
	pulumi.Input

	ToDashboardAnchorDateConfigurationOutput() DashboardAnchorDateConfigurationOutput
	ToDashboardAnchorDateConfigurationOutputWithContext(context.Context) DashboardAnchorDateConfigurationOutput
}

type DashboardAnchorDateConfigurationArgs struct {
	AnchorOption  DashboardAnchorOptionPtrInput `pulumi:"anchorOption"`
	ParameterName pulumi.StringPtrInput         `pulumi:"parameterName"`
}

func (DashboardAnchorDateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAnchorDateConfiguration)(nil)).Elem()
}

func (i DashboardAnchorDateConfigurationArgs) ToDashboardAnchorDateConfigurationOutput() DashboardAnchorDateConfigurationOutput {
	return i.ToDashboardAnchorDateConfigurationOutputWithContext(context.Background())
}

func (i DashboardAnchorDateConfigurationArgs) ToDashboardAnchorDateConfigurationOutputWithContext(ctx context.Context) DashboardAnchorDateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAnchorDateConfigurationOutput)
}

func (i DashboardAnchorDateConfigurationArgs) ToDashboardAnchorDateConfigurationPtrOutput() DashboardAnchorDateConfigurationPtrOutput {
	return i.ToDashboardAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardAnchorDateConfigurationArgs) ToDashboardAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) DashboardAnchorDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAnchorDateConfigurationOutput).ToDashboardAnchorDateConfigurationPtrOutputWithContext(ctx)
}

// DashboardAnchorDateConfigurationPtrInput is an input type that accepts DashboardAnchorDateConfigurationArgs, DashboardAnchorDateConfigurationPtr and DashboardAnchorDateConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardAnchorDateConfigurationPtrInput` via:
//
//	        DashboardAnchorDateConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardAnchorDateConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardAnchorDateConfigurationPtrOutput() DashboardAnchorDateConfigurationPtrOutput
	ToDashboardAnchorDateConfigurationPtrOutputWithContext(context.Context) DashboardAnchorDateConfigurationPtrOutput
}

type dashboardAnchorDateConfigurationPtrType DashboardAnchorDateConfigurationArgs

func DashboardAnchorDateConfigurationPtr(v *DashboardAnchorDateConfigurationArgs) DashboardAnchorDateConfigurationPtrInput {
	return (*dashboardAnchorDateConfigurationPtrType)(v)
}

func (*dashboardAnchorDateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAnchorDateConfiguration)(nil)).Elem()
}

func (i *dashboardAnchorDateConfigurationPtrType) ToDashboardAnchorDateConfigurationPtrOutput() DashboardAnchorDateConfigurationPtrOutput {
	return i.ToDashboardAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardAnchorDateConfigurationPtrType) ToDashboardAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) DashboardAnchorDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAnchorDateConfigurationPtrOutput)
}

type DashboardAnchorDateConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardAnchorDateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAnchorDateConfiguration)(nil)).Elem()
}

func (o DashboardAnchorDateConfigurationOutput) ToDashboardAnchorDateConfigurationOutput() DashboardAnchorDateConfigurationOutput {
	return o
}

func (o DashboardAnchorDateConfigurationOutput) ToDashboardAnchorDateConfigurationOutputWithContext(ctx context.Context) DashboardAnchorDateConfigurationOutput {
	return o
}

func (o DashboardAnchorDateConfigurationOutput) ToDashboardAnchorDateConfigurationPtrOutput() DashboardAnchorDateConfigurationPtrOutput {
	return o.ToDashboardAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardAnchorDateConfigurationOutput) ToDashboardAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) DashboardAnchorDateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAnchorDateConfiguration) *DashboardAnchorDateConfiguration {
		return &v
	}).(DashboardAnchorDateConfigurationPtrOutput)
}

func (o DashboardAnchorDateConfigurationOutput) AnchorOption() DashboardAnchorOptionPtrOutput {
	return o.ApplyT(func(v DashboardAnchorDateConfiguration) *DashboardAnchorOption { return v.AnchorOption }).(DashboardAnchorOptionPtrOutput)
}

func (o DashboardAnchorDateConfigurationOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardAnchorDateConfiguration) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

type DashboardAnchorDateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardAnchorDateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAnchorDateConfiguration)(nil)).Elem()
}

func (o DashboardAnchorDateConfigurationPtrOutput) ToDashboardAnchorDateConfigurationPtrOutput() DashboardAnchorDateConfigurationPtrOutput {
	return o
}

func (o DashboardAnchorDateConfigurationPtrOutput) ToDashboardAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) DashboardAnchorDateConfigurationPtrOutput {
	return o
}

func (o DashboardAnchorDateConfigurationPtrOutput) Elem() DashboardAnchorDateConfigurationOutput {
	return o.ApplyT(func(v *DashboardAnchorDateConfiguration) DashboardAnchorDateConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardAnchorDateConfiguration
		return ret
	}).(DashboardAnchorDateConfigurationOutput)
}

func (o DashboardAnchorDateConfigurationPtrOutput) AnchorOption() DashboardAnchorOptionPtrOutput {
	return o.ApplyT(func(v *DashboardAnchorDateConfiguration) *DashboardAnchorOption {
		if v == nil {
			return nil
		}
		return v.AnchorOption
	}).(DashboardAnchorOptionPtrOutput)
}

func (o DashboardAnchorDateConfigurationPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardAnchorDateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

type DashboardArcAxisConfiguration struct {
	Range        *DashboardArcAxisDisplayRange `pulumi:"range"`
	ReserveRange *float64                      `pulumi:"reserveRange"`
}

// DashboardArcAxisConfigurationInput is an input type that accepts DashboardArcAxisConfigurationArgs and DashboardArcAxisConfigurationOutput values.
// You can construct a concrete instance of `DashboardArcAxisConfigurationInput` via:
//
//	DashboardArcAxisConfigurationArgs{...}
type DashboardArcAxisConfigurationInput interface {
	pulumi.Input

	ToDashboardArcAxisConfigurationOutput() DashboardArcAxisConfigurationOutput
	ToDashboardArcAxisConfigurationOutputWithContext(context.Context) DashboardArcAxisConfigurationOutput
}

type DashboardArcAxisConfigurationArgs struct {
	Range        DashboardArcAxisDisplayRangePtrInput `pulumi:"range"`
	ReserveRange pulumi.Float64PtrInput               `pulumi:"reserveRange"`
}

func (DashboardArcAxisConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcAxisConfiguration)(nil)).Elem()
}

func (i DashboardArcAxisConfigurationArgs) ToDashboardArcAxisConfigurationOutput() DashboardArcAxisConfigurationOutput {
	return i.ToDashboardArcAxisConfigurationOutputWithContext(context.Background())
}

func (i DashboardArcAxisConfigurationArgs) ToDashboardArcAxisConfigurationOutputWithContext(ctx context.Context) DashboardArcAxisConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcAxisConfigurationOutput)
}

func (i DashboardArcAxisConfigurationArgs) ToDashboardArcAxisConfigurationPtrOutput() DashboardArcAxisConfigurationPtrOutput {
	return i.ToDashboardArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardArcAxisConfigurationArgs) ToDashboardArcAxisConfigurationPtrOutputWithContext(ctx context.Context) DashboardArcAxisConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcAxisConfigurationOutput).ToDashboardArcAxisConfigurationPtrOutputWithContext(ctx)
}

// DashboardArcAxisConfigurationPtrInput is an input type that accepts DashboardArcAxisConfigurationArgs, DashboardArcAxisConfigurationPtr and DashboardArcAxisConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardArcAxisConfigurationPtrInput` via:
//
//	        DashboardArcAxisConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardArcAxisConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardArcAxisConfigurationPtrOutput() DashboardArcAxisConfigurationPtrOutput
	ToDashboardArcAxisConfigurationPtrOutputWithContext(context.Context) DashboardArcAxisConfigurationPtrOutput
}

type dashboardArcAxisConfigurationPtrType DashboardArcAxisConfigurationArgs

func DashboardArcAxisConfigurationPtr(v *DashboardArcAxisConfigurationArgs) DashboardArcAxisConfigurationPtrInput {
	return (*dashboardArcAxisConfigurationPtrType)(v)
}

func (*dashboardArcAxisConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardArcAxisConfiguration)(nil)).Elem()
}

func (i *dashboardArcAxisConfigurationPtrType) ToDashboardArcAxisConfigurationPtrOutput() DashboardArcAxisConfigurationPtrOutput {
	return i.ToDashboardArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardArcAxisConfigurationPtrType) ToDashboardArcAxisConfigurationPtrOutputWithContext(ctx context.Context) DashboardArcAxisConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcAxisConfigurationPtrOutput)
}

type DashboardArcAxisConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardArcAxisConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcAxisConfiguration)(nil)).Elem()
}

func (o DashboardArcAxisConfigurationOutput) ToDashboardArcAxisConfigurationOutput() DashboardArcAxisConfigurationOutput {
	return o
}

func (o DashboardArcAxisConfigurationOutput) ToDashboardArcAxisConfigurationOutputWithContext(ctx context.Context) DashboardArcAxisConfigurationOutput {
	return o
}

func (o DashboardArcAxisConfigurationOutput) ToDashboardArcAxisConfigurationPtrOutput() DashboardArcAxisConfigurationPtrOutput {
	return o.ToDashboardArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardArcAxisConfigurationOutput) ToDashboardArcAxisConfigurationPtrOutputWithContext(ctx context.Context) DashboardArcAxisConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardArcAxisConfiguration) *DashboardArcAxisConfiguration {
		return &v
	}).(DashboardArcAxisConfigurationPtrOutput)
}

func (o DashboardArcAxisConfigurationOutput) Range() DashboardArcAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v DashboardArcAxisConfiguration) *DashboardArcAxisDisplayRange { return v.Range }).(DashboardArcAxisDisplayRangePtrOutput)
}

func (o DashboardArcAxisConfigurationOutput) ReserveRange() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardArcAxisConfiguration) *float64 { return v.ReserveRange }).(pulumi.Float64PtrOutput)
}

type DashboardArcAxisConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardArcAxisConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardArcAxisConfiguration)(nil)).Elem()
}

func (o DashboardArcAxisConfigurationPtrOutput) ToDashboardArcAxisConfigurationPtrOutput() DashboardArcAxisConfigurationPtrOutput {
	return o
}

func (o DashboardArcAxisConfigurationPtrOutput) ToDashboardArcAxisConfigurationPtrOutputWithContext(ctx context.Context) DashboardArcAxisConfigurationPtrOutput {
	return o
}

func (o DashboardArcAxisConfigurationPtrOutput) Elem() DashboardArcAxisConfigurationOutput {
	return o.ApplyT(func(v *DashboardArcAxisConfiguration) DashboardArcAxisConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardArcAxisConfiguration
		return ret
	}).(DashboardArcAxisConfigurationOutput)
}

func (o DashboardArcAxisConfigurationPtrOutput) Range() DashboardArcAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v *DashboardArcAxisConfiguration) *DashboardArcAxisDisplayRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(DashboardArcAxisDisplayRangePtrOutput)
}

func (o DashboardArcAxisConfigurationPtrOutput) ReserveRange() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardArcAxisConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ReserveRange
	}).(pulumi.Float64PtrOutput)
}

type DashboardArcAxisDisplayRange struct {
	Max *float64 `pulumi:"max"`
	Min *float64 `pulumi:"min"`
}

// DashboardArcAxisDisplayRangeInput is an input type that accepts DashboardArcAxisDisplayRangeArgs and DashboardArcAxisDisplayRangeOutput values.
// You can construct a concrete instance of `DashboardArcAxisDisplayRangeInput` via:
//
//	DashboardArcAxisDisplayRangeArgs{...}
type DashboardArcAxisDisplayRangeInput interface {
	pulumi.Input

	ToDashboardArcAxisDisplayRangeOutput() DashboardArcAxisDisplayRangeOutput
	ToDashboardArcAxisDisplayRangeOutputWithContext(context.Context) DashboardArcAxisDisplayRangeOutput
}

type DashboardArcAxisDisplayRangeArgs struct {
	Max pulumi.Float64PtrInput `pulumi:"max"`
	Min pulumi.Float64PtrInput `pulumi:"min"`
}

func (DashboardArcAxisDisplayRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcAxisDisplayRange)(nil)).Elem()
}

func (i DashboardArcAxisDisplayRangeArgs) ToDashboardArcAxisDisplayRangeOutput() DashboardArcAxisDisplayRangeOutput {
	return i.ToDashboardArcAxisDisplayRangeOutputWithContext(context.Background())
}

func (i DashboardArcAxisDisplayRangeArgs) ToDashboardArcAxisDisplayRangeOutputWithContext(ctx context.Context) DashboardArcAxisDisplayRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcAxisDisplayRangeOutput)
}

func (i DashboardArcAxisDisplayRangeArgs) ToDashboardArcAxisDisplayRangePtrOutput() DashboardArcAxisDisplayRangePtrOutput {
	return i.ToDashboardArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i DashboardArcAxisDisplayRangeArgs) ToDashboardArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) DashboardArcAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcAxisDisplayRangeOutput).ToDashboardArcAxisDisplayRangePtrOutputWithContext(ctx)
}

// DashboardArcAxisDisplayRangePtrInput is an input type that accepts DashboardArcAxisDisplayRangeArgs, DashboardArcAxisDisplayRangePtr and DashboardArcAxisDisplayRangePtrOutput values.
// You can construct a concrete instance of `DashboardArcAxisDisplayRangePtrInput` via:
//
//	        DashboardArcAxisDisplayRangeArgs{...}
//
//	or:
//
//	        nil
type DashboardArcAxisDisplayRangePtrInput interface {
	pulumi.Input

	ToDashboardArcAxisDisplayRangePtrOutput() DashboardArcAxisDisplayRangePtrOutput
	ToDashboardArcAxisDisplayRangePtrOutputWithContext(context.Context) DashboardArcAxisDisplayRangePtrOutput
}

type dashboardArcAxisDisplayRangePtrType DashboardArcAxisDisplayRangeArgs

func DashboardArcAxisDisplayRangePtr(v *DashboardArcAxisDisplayRangeArgs) DashboardArcAxisDisplayRangePtrInput {
	return (*dashboardArcAxisDisplayRangePtrType)(v)
}

func (*dashboardArcAxisDisplayRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardArcAxisDisplayRange)(nil)).Elem()
}

func (i *dashboardArcAxisDisplayRangePtrType) ToDashboardArcAxisDisplayRangePtrOutput() DashboardArcAxisDisplayRangePtrOutput {
	return i.ToDashboardArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i *dashboardArcAxisDisplayRangePtrType) ToDashboardArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) DashboardArcAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcAxisDisplayRangePtrOutput)
}

type DashboardArcAxisDisplayRangeOutput struct{ *pulumi.OutputState }

func (DashboardArcAxisDisplayRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcAxisDisplayRange)(nil)).Elem()
}

func (o DashboardArcAxisDisplayRangeOutput) ToDashboardArcAxisDisplayRangeOutput() DashboardArcAxisDisplayRangeOutput {
	return o
}

func (o DashboardArcAxisDisplayRangeOutput) ToDashboardArcAxisDisplayRangeOutputWithContext(ctx context.Context) DashboardArcAxisDisplayRangeOutput {
	return o
}

func (o DashboardArcAxisDisplayRangeOutput) ToDashboardArcAxisDisplayRangePtrOutput() DashboardArcAxisDisplayRangePtrOutput {
	return o.ToDashboardArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (o DashboardArcAxisDisplayRangeOutput) ToDashboardArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) DashboardArcAxisDisplayRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardArcAxisDisplayRange) *DashboardArcAxisDisplayRange {
		return &v
	}).(DashboardArcAxisDisplayRangePtrOutput)
}

func (o DashboardArcAxisDisplayRangeOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardArcAxisDisplayRange) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

func (o DashboardArcAxisDisplayRangeOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardArcAxisDisplayRange) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

type DashboardArcAxisDisplayRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardArcAxisDisplayRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardArcAxisDisplayRange)(nil)).Elem()
}

func (o DashboardArcAxisDisplayRangePtrOutput) ToDashboardArcAxisDisplayRangePtrOutput() DashboardArcAxisDisplayRangePtrOutput {
	return o
}

func (o DashboardArcAxisDisplayRangePtrOutput) ToDashboardArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) DashboardArcAxisDisplayRangePtrOutput {
	return o
}

func (o DashboardArcAxisDisplayRangePtrOutput) Elem() DashboardArcAxisDisplayRangeOutput {
	return o.ApplyT(func(v *DashboardArcAxisDisplayRange) DashboardArcAxisDisplayRange {
		if v != nil {
			return *v
		}
		var ret DashboardArcAxisDisplayRange
		return ret
	}).(DashboardArcAxisDisplayRangeOutput)
}

func (o DashboardArcAxisDisplayRangePtrOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardArcAxisDisplayRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardArcAxisDisplayRangePtrOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardArcAxisDisplayRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.Float64PtrOutput)
}

type DashboardArcConfiguration struct {
	ArcAngle     *float64                      `pulumi:"arcAngle"`
	ArcThickness *DashboardArcThicknessOptions `pulumi:"arcThickness"`
}

// DashboardArcConfigurationInput is an input type that accepts DashboardArcConfigurationArgs and DashboardArcConfigurationOutput values.
// You can construct a concrete instance of `DashboardArcConfigurationInput` via:
//
//	DashboardArcConfigurationArgs{...}
type DashboardArcConfigurationInput interface {
	pulumi.Input

	ToDashboardArcConfigurationOutput() DashboardArcConfigurationOutput
	ToDashboardArcConfigurationOutputWithContext(context.Context) DashboardArcConfigurationOutput
}

type DashboardArcConfigurationArgs struct {
	ArcAngle     pulumi.Float64PtrInput               `pulumi:"arcAngle"`
	ArcThickness DashboardArcThicknessOptionsPtrInput `pulumi:"arcThickness"`
}

func (DashboardArcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcConfiguration)(nil)).Elem()
}

func (i DashboardArcConfigurationArgs) ToDashboardArcConfigurationOutput() DashboardArcConfigurationOutput {
	return i.ToDashboardArcConfigurationOutputWithContext(context.Background())
}

func (i DashboardArcConfigurationArgs) ToDashboardArcConfigurationOutputWithContext(ctx context.Context) DashboardArcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcConfigurationOutput)
}

func (i DashboardArcConfigurationArgs) ToDashboardArcConfigurationPtrOutput() DashboardArcConfigurationPtrOutput {
	return i.ToDashboardArcConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardArcConfigurationArgs) ToDashboardArcConfigurationPtrOutputWithContext(ctx context.Context) DashboardArcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcConfigurationOutput).ToDashboardArcConfigurationPtrOutputWithContext(ctx)
}

// DashboardArcConfigurationPtrInput is an input type that accepts DashboardArcConfigurationArgs, DashboardArcConfigurationPtr and DashboardArcConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardArcConfigurationPtrInput` via:
//
//	        DashboardArcConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardArcConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardArcConfigurationPtrOutput() DashboardArcConfigurationPtrOutput
	ToDashboardArcConfigurationPtrOutputWithContext(context.Context) DashboardArcConfigurationPtrOutput
}

type dashboardArcConfigurationPtrType DashboardArcConfigurationArgs

func DashboardArcConfigurationPtr(v *DashboardArcConfigurationArgs) DashboardArcConfigurationPtrInput {
	return (*dashboardArcConfigurationPtrType)(v)
}

func (*dashboardArcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardArcConfiguration)(nil)).Elem()
}

func (i *dashboardArcConfigurationPtrType) ToDashboardArcConfigurationPtrOutput() DashboardArcConfigurationPtrOutput {
	return i.ToDashboardArcConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardArcConfigurationPtrType) ToDashboardArcConfigurationPtrOutputWithContext(ctx context.Context) DashboardArcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcConfigurationPtrOutput)
}

type DashboardArcConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardArcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcConfiguration)(nil)).Elem()
}

func (o DashboardArcConfigurationOutput) ToDashboardArcConfigurationOutput() DashboardArcConfigurationOutput {
	return o
}

func (o DashboardArcConfigurationOutput) ToDashboardArcConfigurationOutputWithContext(ctx context.Context) DashboardArcConfigurationOutput {
	return o
}

func (o DashboardArcConfigurationOutput) ToDashboardArcConfigurationPtrOutput() DashboardArcConfigurationPtrOutput {
	return o.ToDashboardArcConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardArcConfigurationOutput) ToDashboardArcConfigurationPtrOutputWithContext(ctx context.Context) DashboardArcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardArcConfiguration) *DashboardArcConfiguration {
		return &v
	}).(DashboardArcConfigurationPtrOutput)
}

func (o DashboardArcConfigurationOutput) ArcAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardArcConfiguration) *float64 { return v.ArcAngle }).(pulumi.Float64PtrOutput)
}

func (o DashboardArcConfigurationOutput) ArcThickness() DashboardArcThicknessOptionsPtrOutput {
	return o.ApplyT(func(v DashboardArcConfiguration) *DashboardArcThicknessOptions { return v.ArcThickness }).(DashboardArcThicknessOptionsPtrOutput)
}

type DashboardArcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardArcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardArcConfiguration)(nil)).Elem()
}

func (o DashboardArcConfigurationPtrOutput) ToDashboardArcConfigurationPtrOutput() DashboardArcConfigurationPtrOutput {
	return o
}

func (o DashboardArcConfigurationPtrOutput) ToDashboardArcConfigurationPtrOutputWithContext(ctx context.Context) DashboardArcConfigurationPtrOutput {
	return o
}

func (o DashboardArcConfigurationPtrOutput) Elem() DashboardArcConfigurationOutput {
	return o.ApplyT(func(v *DashboardArcConfiguration) DashboardArcConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardArcConfiguration
		return ret
	}).(DashboardArcConfigurationOutput)
}

func (o DashboardArcConfigurationPtrOutput) ArcAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardArcConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ArcAngle
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardArcConfigurationPtrOutput) ArcThickness() DashboardArcThicknessOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardArcConfiguration) *DashboardArcThicknessOptions {
		if v == nil {
			return nil
		}
		return v.ArcThickness
	}).(DashboardArcThicknessOptionsPtrOutput)
}

type DashboardArcOptions struct {
	ArcThickness *DashboardArcThickness `pulumi:"arcThickness"`
}

// DashboardArcOptionsInput is an input type that accepts DashboardArcOptionsArgs and DashboardArcOptionsOutput values.
// You can construct a concrete instance of `DashboardArcOptionsInput` via:
//
//	DashboardArcOptionsArgs{...}
type DashboardArcOptionsInput interface {
	pulumi.Input

	ToDashboardArcOptionsOutput() DashboardArcOptionsOutput
	ToDashboardArcOptionsOutputWithContext(context.Context) DashboardArcOptionsOutput
}

type DashboardArcOptionsArgs struct {
	ArcThickness DashboardArcThicknessPtrInput `pulumi:"arcThickness"`
}

func (DashboardArcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcOptions)(nil)).Elem()
}

func (i DashboardArcOptionsArgs) ToDashboardArcOptionsOutput() DashboardArcOptionsOutput {
	return i.ToDashboardArcOptionsOutputWithContext(context.Background())
}

func (i DashboardArcOptionsArgs) ToDashboardArcOptionsOutputWithContext(ctx context.Context) DashboardArcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcOptionsOutput)
}

func (i DashboardArcOptionsArgs) ToDashboardArcOptionsPtrOutput() DashboardArcOptionsPtrOutput {
	return i.ToDashboardArcOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardArcOptionsArgs) ToDashboardArcOptionsPtrOutputWithContext(ctx context.Context) DashboardArcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcOptionsOutput).ToDashboardArcOptionsPtrOutputWithContext(ctx)
}

// DashboardArcOptionsPtrInput is an input type that accepts DashboardArcOptionsArgs, DashboardArcOptionsPtr and DashboardArcOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardArcOptionsPtrInput` via:
//
//	        DashboardArcOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardArcOptionsPtrInput interface {
	pulumi.Input

	ToDashboardArcOptionsPtrOutput() DashboardArcOptionsPtrOutput
	ToDashboardArcOptionsPtrOutputWithContext(context.Context) DashboardArcOptionsPtrOutput
}

type dashboardArcOptionsPtrType DashboardArcOptionsArgs

func DashboardArcOptionsPtr(v *DashboardArcOptionsArgs) DashboardArcOptionsPtrInput {
	return (*dashboardArcOptionsPtrType)(v)
}

func (*dashboardArcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardArcOptions)(nil)).Elem()
}

func (i *dashboardArcOptionsPtrType) ToDashboardArcOptionsPtrOutput() DashboardArcOptionsPtrOutput {
	return i.ToDashboardArcOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardArcOptionsPtrType) ToDashboardArcOptionsPtrOutputWithContext(ctx context.Context) DashboardArcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArcOptionsPtrOutput)
}

type DashboardArcOptionsOutput struct{ *pulumi.OutputState }

func (DashboardArcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcOptions)(nil)).Elem()
}

func (o DashboardArcOptionsOutput) ToDashboardArcOptionsOutput() DashboardArcOptionsOutput {
	return o
}

func (o DashboardArcOptionsOutput) ToDashboardArcOptionsOutputWithContext(ctx context.Context) DashboardArcOptionsOutput {
	return o
}

func (o DashboardArcOptionsOutput) ToDashboardArcOptionsPtrOutput() DashboardArcOptionsPtrOutput {
	return o.ToDashboardArcOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardArcOptionsOutput) ToDashboardArcOptionsPtrOutputWithContext(ctx context.Context) DashboardArcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardArcOptions) *DashboardArcOptions {
		return &v
	}).(DashboardArcOptionsPtrOutput)
}

func (o DashboardArcOptionsOutput) ArcThickness() DashboardArcThicknessPtrOutput {
	return o.ApplyT(func(v DashboardArcOptions) *DashboardArcThickness { return v.ArcThickness }).(DashboardArcThicknessPtrOutput)
}

type DashboardArcOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardArcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardArcOptions)(nil)).Elem()
}

func (o DashboardArcOptionsPtrOutput) ToDashboardArcOptionsPtrOutput() DashboardArcOptionsPtrOutput {
	return o
}

func (o DashboardArcOptionsPtrOutput) ToDashboardArcOptionsPtrOutputWithContext(ctx context.Context) DashboardArcOptionsPtrOutput {
	return o
}

func (o DashboardArcOptionsPtrOutput) Elem() DashboardArcOptionsOutput {
	return o.ApplyT(func(v *DashboardArcOptions) DashboardArcOptions {
		if v != nil {
			return *v
		}
		var ret DashboardArcOptions
		return ret
	}).(DashboardArcOptionsOutput)
}

func (o DashboardArcOptionsPtrOutput) ArcThickness() DashboardArcThicknessPtrOutput {
	return o.ApplyT(func(v *DashboardArcOptions) *DashboardArcThickness {
		if v == nil {
			return nil
		}
		return v.ArcThickness
	}).(DashboardArcThicknessPtrOutput)
}

type DashboardAxisDataOptions struct {
	DateAxisOptions    *DashboardDateAxisOptions    `pulumi:"dateAxisOptions"`
	NumericAxisOptions *DashboardNumericAxisOptions `pulumi:"numericAxisOptions"`
}

// DashboardAxisDataOptionsInput is an input type that accepts DashboardAxisDataOptionsArgs and DashboardAxisDataOptionsOutput values.
// You can construct a concrete instance of `DashboardAxisDataOptionsInput` via:
//
//	DashboardAxisDataOptionsArgs{...}
type DashboardAxisDataOptionsInput interface {
	pulumi.Input

	ToDashboardAxisDataOptionsOutput() DashboardAxisDataOptionsOutput
	ToDashboardAxisDataOptionsOutputWithContext(context.Context) DashboardAxisDataOptionsOutput
}

type DashboardAxisDataOptionsArgs struct {
	DateAxisOptions    DashboardDateAxisOptionsPtrInput    `pulumi:"dateAxisOptions"`
	NumericAxisOptions DashboardNumericAxisOptionsPtrInput `pulumi:"numericAxisOptions"`
}

func (DashboardAxisDataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisDataOptions)(nil)).Elem()
}

func (i DashboardAxisDataOptionsArgs) ToDashboardAxisDataOptionsOutput() DashboardAxisDataOptionsOutput {
	return i.ToDashboardAxisDataOptionsOutputWithContext(context.Background())
}

func (i DashboardAxisDataOptionsArgs) ToDashboardAxisDataOptionsOutputWithContext(ctx context.Context) DashboardAxisDataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDataOptionsOutput)
}

func (i DashboardAxisDataOptionsArgs) ToDashboardAxisDataOptionsPtrOutput() DashboardAxisDataOptionsPtrOutput {
	return i.ToDashboardAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardAxisDataOptionsArgs) ToDashboardAxisDataOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDataOptionsOutput).ToDashboardAxisDataOptionsPtrOutputWithContext(ctx)
}

// DashboardAxisDataOptionsPtrInput is an input type that accepts DashboardAxisDataOptionsArgs, DashboardAxisDataOptionsPtr and DashboardAxisDataOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardAxisDataOptionsPtrInput` via:
//
//	        DashboardAxisDataOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardAxisDataOptionsPtrInput interface {
	pulumi.Input

	ToDashboardAxisDataOptionsPtrOutput() DashboardAxisDataOptionsPtrOutput
	ToDashboardAxisDataOptionsPtrOutputWithContext(context.Context) DashboardAxisDataOptionsPtrOutput
}

type dashboardAxisDataOptionsPtrType DashboardAxisDataOptionsArgs

func DashboardAxisDataOptionsPtr(v *DashboardAxisDataOptionsArgs) DashboardAxisDataOptionsPtrInput {
	return (*dashboardAxisDataOptionsPtrType)(v)
}

func (*dashboardAxisDataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisDataOptions)(nil)).Elem()
}

func (i *dashboardAxisDataOptionsPtrType) ToDashboardAxisDataOptionsPtrOutput() DashboardAxisDataOptionsPtrOutput {
	return i.ToDashboardAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardAxisDataOptionsPtrType) ToDashboardAxisDataOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDataOptionsPtrOutput)
}

type DashboardAxisDataOptionsOutput struct{ *pulumi.OutputState }

func (DashboardAxisDataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisDataOptions)(nil)).Elem()
}

func (o DashboardAxisDataOptionsOutput) ToDashboardAxisDataOptionsOutput() DashboardAxisDataOptionsOutput {
	return o
}

func (o DashboardAxisDataOptionsOutput) ToDashboardAxisDataOptionsOutputWithContext(ctx context.Context) DashboardAxisDataOptionsOutput {
	return o
}

func (o DashboardAxisDataOptionsOutput) ToDashboardAxisDataOptionsPtrOutput() DashboardAxisDataOptionsPtrOutput {
	return o.ToDashboardAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardAxisDataOptionsOutput) ToDashboardAxisDataOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisDataOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisDataOptions) *DashboardAxisDataOptions {
		return &v
	}).(DashboardAxisDataOptionsPtrOutput)
}

func (o DashboardAxisDataOptionsOutput) DateAxisOptions() DashboardDateAxisOptionsPtrOutput {
	return o.ApplyT(func(v DashboardAxisDataOptions) *DashboardDateAxisOptions { return v.DateAxisOptions }).(DashboardDateAxisOptionsPtrOutput)
}

func (o DashboardAxisDataOptionsOutput) NumericAxisOptions() DashboardNumericAxisOptionsPtrOutput {
	return o.ApplyT(func(v DashboardAxisDataOptions) *DashboardNumericAxisOptions { return v.NumericAxisOptions }).(DashboardNumericAxisOptionsPtrOutput)
}

type DashboardAxisDataOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisDataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisDataOptions)(nil)).Elem()
}

func (o DashboardAxisDataOptionsPtrOutput) ToDashboardAxisDataOptionsPtrOutput() DashboardAxisDataOptionsPtrOutput {
	return o
}

func (o DashboardAxisDataOptionsPtrOutput) ToDashboardAxisDataOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisDataOptionsPtrOutput {
	return o
}

func (o DashboardAxisDataOptionsPtrOutput) Elem() DashboardAxisDataOptionsOutput {
	return o.ApplyT(func(v *DashboardAxisDataOptions) DashboardAxisDataOptions {
		if v != nil {
			return *v
		}
		var ret DashboardAxisDataOptions
		return ret
	}).(DashboardAxisDataOptionsOutput)
}

func (o DashboardAxisDataOptionsPtrOutput) DateAxisOptions() DashboardDateAxisOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardAxisDataOptions) *DashboardDateAxisOptions {
		if v == nil {
			return nil
		}
		return v.DateAxisOptions
	}).(DashboardDateAxisOptionsPtrOutput)
}

func (o DashboardAxisDataOptionsPtrOutput) NumericAxisOptions() DashboardNumericAxisOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardAxisDataOptions) *DashboardNumericAxisOptions {
		if v == nil {
			return nil
		}
		return v.NumericAxisOptions
	}).(DashboardNumericAxisOptionsPtrOutput)
}

type DashboardAxisDisplayDataDrivenRange struct {
}

// DashboardAxisDisplayDataDrivenRangeInput is an input type that accepts DashboardAxisDisplayDataDrivenRangeArgs and DashboardAxisDisplayDataDrivenRangeOutput values.
// You can construct a concrete instance of `DashboardAxisDisplayDataDrivenRangeInput` via:
//
//	DashboardAxisDisplayDataDrivenRangeArgs{...}
type DashboardAxisDisplayDataDrivenRangeInput interface {
	pulumi.Input

	ToDashboardAxisDisplayDataDrivenRangeOutput() DashboardAxisDisplayDataDrivenRangeOutput
	ToDashboardAxisDisplayDataDrivenRangeOutputWithContext(context.Context) DashboardAxisDisplayDataDrivenRangeOutput
}

type DashboardAxisDisplayDataDrivenRangeArgs struct {
}

func (DashboardAxisDisplayDataDrivenRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (i DashboardAxisDisplayDataDrivenRangeArgs) ToDashboardAxisDisplayDataDrivenRangeOutput() DashboardAxisDisplayDataDrivenRangeOutput {
	return i.ToDashboardAxisDisplayDataDrivenRangeOutputWithContext(context.Background())
}

func (i DashboardAxisDisplayDataDrivenRangeArgs) ToDashboardAxisDisplayDataDrivenRangeOutputWithContext(ctx context.Context) DashboardAxisDisplayDataDrivenRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayDataDrivenRangeOutput)
}

func (i DashboardAxisDisplayDataDrivenRangeArgs) ToDashboardAxisDisplayDataDrivenRangePtrOutput() DashboardAxisDisplayDataDrivenRangePtrOutput {
	return i.ToDashboardAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (i DashboardAxisDisplayDataDrivenRangeArgs) ToDashboardAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayDataDrivenRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayDataDrivenRangeOutput).ToDashboardAxisDisplayDataDrivenRangePtrOutputWithContext(ctx)
}

// DashboardAxisDisplayDataDrivenRangePtrInput is an input type that accepts DashboardAxisDisplayDataDrivenRangeArgs, DashboardAxisDisplayDataDrivenRangePtr and DashboardAxisDisplayDataDrivenRangePtrOutput values.
// You can construct a concrete instance of `DashboardAxisDisplayDataDrivenRangePtrInput` via:
//
//	        DashboardAxisDisplayDataDrivenRangeArgs{...}
//
//	or:
//
//	        nil
type DashboardAxisDisplayDataDrivenRangePtrInput interface {
	pulumi.Input

	ToDashboardAxisDisplayDataDrivenRangePtrOutput() DashboardAxisDisplayDataDrivenRangePtrOutput
	ToDashboardAxisDisplayDataDrivenRangePtrOutputWithContext(context.Context) DashboardAxisDisplayDataDrivenRangePtrOutput
}

type dashboardAxisDisplayDataDrivenRangePtrType DashboardAxisDisplayDataDrivenRangeArgs

func DashboardAxisDisplayDataDrivenRangePtr(v *DashboardAxisDisplayDataDrivenRangeArgs) DashboardAxisDisplayDataDrivenRangePtrInput {
	return (*dashboardAxisDisplayDataDrivenRangePtrType)(v)
}

func (*dashboardAxisDisplayDataDrivenRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (i *dashboardAxisDisplayDataDrivenRangePtrType) ToDashboardAxisDisplayDataDrivenRangePtrOutput() DashboardAxisDisplayDataDrivenRangePtrOutput {
	return i.ToDashboardAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (i *dashboardAxisDisplayDataDrivenRangePtrType) ToDashboardAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayDataDrivenRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayDataDrivenRangePtrOutput)
}

type DashboardAxisDisplayDataDrivenRangeOutput struct{ *pulumi.OutputState }

func (DashboardAxisDisplayDataDrivenRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (o DashboardAxisDisplayDataDrivenRangeOutput) ToDashboardAxisDisplayDataDrivenRangeOutput() DashboardAxisDisplayDataDrivenRangeOutput {
	return o
}

func (o DashboardAxisDisplayDataDrivenRangeOutput) ToDashboardAxisDisplayDataDrivenRangeOutputWithContext(ctx context.Context) DashboardAxisDisplayDataDrivenRangeOutput {
	return o
}

func (o DashboardAxisDisplayDataDrivenRangeOutput) ToDashboardAxisDisplayDataDrivenRangePtrOutput() DashboardAxisDisplayDataDrivenRangePtrOutput {
	return o.ToDashboardAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (o DashboardAxisDisplayDataDrivenRangeOutput) ToDashboardAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisDisplayDataDrivenRange) *DashboardAxisDisplayDataDrivenRange {
		return &v
	}).(DashboardAxisDisplayDataDrivenRangePtrOutput)
}

type DashboardAxisDisplayDataDrivenRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisDisplayDataDrivenRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (o DashboardAxisDisplayDataDrivenRangePtrOutput) ToDashboardAxisDisplayDataDrivenRangePtrOutput() DashboardAxisDisplayDataDrivenRangePtrOutput {
	return o
}

func (o DashboardAxisDisplayDataDrivenRangePtrOutput) ToDashboardAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayDataDrivenRangePtrOutput {
	return o
}

func (o DashboardAxisDisplayDataDrivenRangePtrOutput) Elem() DashboardAxisDisplayDataDrivenRangeOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayDataDrivenRange) DashboardAxisDisplayDataDrivenRange {
		if v != nil {
			return *v
		}
		var ret DashboardAxisDisplayDataDrivenRange
		return ret
	}).(DashboardAxisDisplayDataDrivenRangeOutput)
}

type DashboardAxisDisplayMinMaxRange struct {
	Maximum *float64 `pulumi:"maximum"`
	Minimum *float64 `pulumi:"minimum"`
}

// DashboardAxisDisplayMinMaxRangeInput is an input type that accepts DashboardAxisDisplayMinMaxRangeArgs and DashboardAxisDisplayMinMaxRangeOutput values.
// You can construct a concrete instance of `DashboardAxisDisplayMinMaxRangeInput` via:
//
//	DashboardAxisDisplayMinMaxRangeArgs{...}
type DashboardAxisDisplayMinMaxRangeInput interface {
	pulumi.Input

	ToDashboardAxisDisplayMinMaxRangeOutput() DashboardAxisDisplayMinMaxRangeOutput
	ToDashboardAxisDisplayMinMaxRangeOutputWithContext(context.Context) DashboardAxisDisplayMinMaxRangeOutput
}

type DashboardAxisDisplayMinMaxRangeArgs struct {
	Maximum pulumi.Float64PtrInput `pulumi:"maximum"`
	Minimum pulumi.Float64PtrInput `pulumi:"minimum"`
}

func (DashboardAxisDisplayMinMaxRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisDisplayMinMaxRange)(nil)).Elem()
}

func (i DashboardAxisDisplayMinMaxRangeArgs) ToDashboardAxisDisplayMinMaxRangeOutput() DashboardAxisDisplayMinMaxRangeOutput {
	return i.ToDashboardAxisDisplayMinMaxRangeOutputWithContext(context.Background())
}

func (i DashboardAxisDisplayMinMaxRangeArgs) ToDashboardAxisDisplayMinMaxRangeOutputWithContext(ctx context.Context) DashboardAxisDisplayMinMaxRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayMinMaxRangeOutput)
}

func (i DashboardAxisDisplayMinMaxRangeArgs) ToDashboardAxisDisplayMinMaxRangePtrOutput() DashboardAxisDisplayMinMaxRangePtrOutput {
	return i.ToDashboardAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (i DashboardAxisDisplayMinMaxRangeArgs) ToDashboardAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayMinMaxRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayMinMaxRangeOutput).ToDashboardAxisDisplayMinMaxRangePtrOutputWithContext(ctx)
}

// DashboardAxisDisplayMinMaxRangePtrInput is an input type that accepts DashboardAxisDisplayMinMaxRangeArgs, DashboardAxisDisplayMinMaxRangePtr and DashboardAxisDisplayMinMaxRangePtrOutput values.
// You can construct a concrete instance of `DashboardAxisDisplayMinMaxRangePtrInput` via:
//
//	        DashboardAxisDisplayMinMaxRangeArgs{...}
//
//	or:
//
//	        nil
type DashboardAxisDisplayMinMaxRangePtrInput interface {
	pulumi.Input

	ToDashboardAxisDisplayMinMaxRangePtrOutput() DashboardAxisDisplayMinMaxRangePtrOutput
	ToDashboardAxisDisplayMinMaxRangePtrOutputWithContext(context.Context) DashboardAxisDisplayMinMaxRangePtrOutput
}

type dashboardAxisDisplayMinMaxRangePtrType DashboardAxisDisplayMinMaxRangeArgs

func DashboardAxisDisplayMinMaxRangePtr(v *DashboardAxisDisplayMinMaxRangeArgs) DashboardAxisDisplayMinMaxRangePtrInput {
	return (*dashboardAxisDisplayMinMaxRangePtrType)(v)
}

func (*dashboardAxisDisplayMinMaxRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisDisplayMinMaxRange)(nil)).Elem()
}

func (i *dashboardAxisDisplayMinMaxRangePtrType) ToDashboardAxisDisplayMinMaxRangePtrOutput() DashboardAxisDisplayMinMaxRangePtrOutput {
	return i.ToDashboardAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (i *dashboardAxisDisplayMinMaxRangePtrType) ToDashboardAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayMinMaxRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayMinMaxRangePtrOutput)
}

type DashboardAxisDisplayMinMaxRangeOutput struct{ *pulumi.OutputState }

func (DashboardAxisDisplayMinMaxRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisDisplayMinMaxRange)(nil)).Elem()
}

func (o DashboardAxisDisplayMinMaxRangeOutput) ToDashboardAxisDisplayMinMaxRangeOutput() DashboardAxisDisplayMinMaxRangeOutput {
	return o
}

func (o DashboardAxisDisplayMinMaxRangeOutput) ToDashboardAxisDisplayMinMaxRangeOutputWithContext(ctx context.Context) DashboardAxisDisplayMinMaxRangeOutput {
	return o
}

func (o DashboardAxisDisplayMinMaxRangeOutput) ToDashboardAxisDisplayMinMaxRangePtrOutput() DashboardAxisDisplayMinMaxRangePtrOutput {
	return o.ToDashboardAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (o DashboardAxisDisplayMinMaxRangeOutput) ToDashboardAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisDisplayMinMaxRange) *DashboardAxisDisplayMinMaxRange {
		return &v
	}).(DashboardAxisDisplayMinMaxRangePtrOutput)
}

func (o DashboardAxisDisplayMinMaxRangeOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardAxisDisplayMinMaxRange) *float64 { return v.Maximum }).(pulumi.Float64PtrOutput)
}

func (o DashboardAxisDisplayMinMaxRangeOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardAxisDisplayMinMaxRange) *float64 { return v.Minimum }).(pulumi.Float64PtrOutput)
}

type DashboardAxisDisplayMinMaxRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisDisplayMinMaxRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisDisplayMinMaxRange)(nil)).Elem()
}

func (o DashboardAxisDisplayMinMaxRangePtrOutput) ToDashboardAxisDisplayMinMaxRangePtrOutput() DashboardAxisDisplayMinMaxRangePtrOutput {
	return o
}

func (o DashboardAxisDisplayMinMaxRangePtrOutput) ToDashboardAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayMinMaxRangePtrOutput {
	return o
}

func (o DashboardAxisDisplayMinMaxRangePtrOutput) Elem() DashboardAxisDisplayMinMaxRangeOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayMinMaxRange) DashboardAxisDisplayMinMaxRange {
		if v != nil {
			return *v
		}
		var ret DashboardAxisDisplayMinMaxRange
		return ret
	}).(DashboardAxisDisplayMinMaxRangeOutput)
}

func (o DashboardAxisDisplayMinMaxRangePtrOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayMinMaxRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardAxisDisplayMinMaxRangePtrOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayMinMaxRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.Float64PtrOutput)
}

type DashboardAxisDisplayOptions struct {
	AxisLineVisibility *DashboardVisibility `pulumi:"axisLineVisibility"`
	// String based length that is composed of value and unit in px
	AxisOffset         *string                        `pulumi:"axisOffset"`
	DataOptions        *DashboardAxisDataOptions      `pulumi:"dataOptions"`
	GridLineVisibility *DashboardVisibility           `pulumi:"gridLineVisibility"`
	ScrollbarOptions   *DashboardScrollBarOptions     `pulumi:"scrollbarOptions"`
	TickLabelOptions   *DashboardAxisTickLabelOptions `pulumi:"tickLabelOptions"`
}

// DashboardAxisDisplayOptionsInput is an input type that accepts DashboardAxisDisplayOptionsArgs and DashboardAxisDisplayOptionsOutput values.
// You can construct a concrete instance of `DashboardAxisDisplayOptionsInput` via:
//
//	DashboardAxisDisplayOptionsArgs{...}
type DashboardAxisDisplayOptionsInput interface {
	pulumi.Input

	ToDashboardAxisDisplayOptionsOutput() DashboardAxisDisplayOptionsOutput
	ToDashboardAxisDisplayOptionsOutputWithContext(context.Context) DashboardAxisDisplayOptionsOutput
}

type DashboardAxisDisplayOptionsArgs struct {
	AxisLineVisibility DashboardVisibilityPtrInput `pulumi:"axisLineVisibility"`
	// String based length that is composed of value and unit in px
	AxisOffset         pulumi.StringPtrInput                 `pulumi:"axisOffset"`
	DataOptions        DashboardAxisDataOptionsPtrInput      `pulumi:"dataOptions"`
	GridLineVisibility DashboardVisibilityPtrInput           `pulumi:"gridLineVisibility"`
	ScrollbarOptions   DashboardScrollBarOptionsPtrInput     `pulumi:"scrollbarOptions"`
	TickLabelOptions   DashboardAxisTickLabelOptionsPtrInput `pulumi:"tickLabelOptions"`
}

func (DashboardAxisDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisDisplayOptions)(nil)).Elem()
}

func (i DashboardAxisDisplayOptionsArgs) ToDashboardAxisDisplayOptionsOutput() DashboardAxisDisplayOptionsOutput {
	return i.ToDashboardAxisDisplayOptionsOutputWithContext(context.Background())
}

func (i DashboardAxisDisplayOptionsArgs) ToDashboardAxisDisplayOptionsOutputWithContext(ctx context.Context) DashboardAxisDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayOptionsOutput)
}

func (i DashboardAxisDisplayOptionsArgs) ToDashboardAxisDisplayOptionsPtrOutput() DashboardAxisDisplayOptionsPtrOutput {
	return i.ToDashboardAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardAxisDisplayOptionsArgs) ToDashboardAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayOptionsOutput).ToDashboardAxisDisplayOptionsPtrOutputWithContext(ctx)
}

// DashboardAxisDisplayOptionsPtrInput is an input type that accepts DashboardAxisDisplayOptionsArgs, DashboardAxisDisplayOptionsPtr and DashboardAxisDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardAxisDisplayOptionsPtrInput` via:
//
//	        DashboardAxisDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardAxisDisplayOptionsPtrInput interface {
	pulumi.Input

	ToDashboardAxisDisplayOptionsPtrOutput() DashboardAxisDisplayOptionsPtrOutput
	ToDashboardAxisDisplayOptionsPtrOutputWithContext(context.Context) DashboardAxisDisplayOptionsPtrOutput
}

type dashboardAxisDisplayOptionsPtrType DashboardAxisDisplayOptionsArgs

func DashboardAxisDisplayOptionsPtr(v *DashboardAxisDisplayOptionsArgs) DashboardAxisDisplayOptionsPtrInput {
	return (*dashboardAxisDisplayOptionsPtrType)(v)
}

func (*dashboardAxisDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisDisplayOptions)(nil)).Elem()
}

func (i *dashboardAxisDisplayOptionsPtrType) ToDashboardAxisDisplayOptionsPtrOutput() DashboardAxisDisplayOptionsPtrOutput {
	return i.ToDashboardAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardAxisDisplayOptionsPtrType) ToDashboardAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayOptionsPtrOutput)
}

type DashboardAxisDisplayOptionsOutput struct{ *pulumi.OutputState }

func (DashboardAxisDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisDisplayOptions)(nil)).Elem()
}

func (o DashboardAxisDisplayOptionsOutput) ToDashboardAxisDisplayOptionsOutput() DashboardAxisDisplayOptionsOutput {
	return o
}

func (o DashboardAxisDisplayOptionsOutput) ToDashboardAxisDisplayOptionsOutputWithContext(ctx context.Context) DashboardAxisDisplayOptionsOutput {
	return o
}

func (o DashboardAxisDisplayOptionsOutput) ToDashboardAxisDisplayOptionsPtrOutput() DashboardAxisDisplayOptionsPtrOutput {
	return o.ToDashboardAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardAxisDisplayOptionsOutput) ToDashboardAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisDisplayOptions) *DashboardAxisDisplayOptions {
		return &v
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardAxisDisplayOptionsOutput) AxisLineVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardAxisDisplayOptions) *DashboardVisibility { return v.AxisLineVisibility }).(DashboardVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardAxisDisplayOptionsOutput) AxisOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardAxisDisplayOptions) *string { return v.AxisOffset }).(pulumi.StringPtrOutput)
}

func (o DashboardAxisDisplayOptionsOutput) DataOptions() DashboardAxisDataOptionsPtrOutput {
	return o.ApplyT(func(v DashboardAxisDisplayOptions) *DashboardAxisDataOptions { return v.DataOptions }).(DashboardAxisDataOptionsPtrOutput)
}

func (o DashboardAxisDisplayOptionsOutput) GridLineVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardAxisDisplayOptions) *DashboardVisibility { return v.GridLineVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardAxisDisplayOptionsOutput) ScrollbarOptions() DashboardScrollBarOptionsPtrOutput {
	return o.ApplyT(func(v DashboardAxisDisplayOptions) *DashboardScrollBarOptions { return v.ScrollbarOptions }).(DashboardScrollBarOptionsPtrOutput)
}

func (o DashboardAxisDisplayOptionsOutput) TickLabelOptions() DashboardAxisTickLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardAxisDisplayOptions) *DashboardAxisTickLabelOptions { return v.TickLabelOptions }).(DashboardAxisTickLabelOptionsPtrOutput)
}

type DashboardAxisDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisDisplayOptions)(nil)).Elem()
}

func (o DashboardAxisDisplayOptionsPtrOutput) ToDashboardAxisDisplayOptionsPtrOutput() DashboardAxisDisplayOptionsPtrOutput {
	return o
}

func (o DashboardAxisDisplayOptionsPtrOutput) ToDashboardAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisDisplayOptionsPtrOutput {
	return o
}

func (o DashboardAxisDisplayOptionsPtrOutput) Elem() DashboardAxisDisplayOptionsOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayOptions) DashboardAxisDisplayOptions {
		if v != nil {
			return *v
		}
		var ret DashboardAxisDisplayOptions
		return ret
	}).(DashboardAxisDisplayOptionsOutput)
}

func (o DashboardAxisDisplayOptionsPtrOutput) AxisLineVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.AxisLineVisibility
	}).(DashboardVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardAxisDisplayOptionsPtrOutput) AxisOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayOptions) *string {
		if v == nil {
			return nil
		}
		return v.AxisOffset
	}).(pulumi.StringPtrOutput)
}

func (o DashboardAxisDisplayOptionsPtrOutput) DataOptions() DashboardAxisDataOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayOptions) *DashboardAxisDataOptions {
		if v == nil {
			return nil
		}
		return v.DataOptions
	}).(DashboardAxisDataOptionsPtrOutput)
}

func (o DashboardAxisDisplayOptionsPtrOutput) GridLineVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.GridLineVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardAxisDisplayOptionsPtrOutput) ScrollbarOptions() DashboardScrollBarOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayOptions) *DashboardScrollBarOptions {
		if v == nil {
			return nil
		}
		return v.ScrollbarOptions
	}).(DashboardScrollBarOptionsPtrOutput)
}

func (o DashboardAxisDisplayOptionsPtrOutput) TickLabelOptions() DashboardAxisTickLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayOptions) *DashboardAxisTickLabelOptions {
		if v == nil {
			return nil
		}
		return v.TickLabelOptions
	}).(DashboardAxisTickLabelOptionsPtrOutput)
}

type DashboardAxisDisplayRange struct {
	DataDriven *DashboardAxisDisplayDataDrivenRange `pulumi:"dataDriven"`
	MinMax     *DashboardAxisDisplayMinMaxRange     `pulumi:"minMax"`
}

// DashboardAxisDisplayRangeInput is an input type that accepts DashboardAxisDisplayRangeArgs and DashboardAxisDisplayRangeOutput values.
// You can construct a concrete instance of `DashboardAxisDisplayRangeInput` via:
//
//	DashboardAxisDisplayRangeArgs{...}
type DashboardAxisDisplayRangeInput interface {
	pulumi.Input

	ToDashboardAxisDisplayRangeOutput() DashboardAxisDisplayRangeOutput
	ToDashboardAxisDisplayRangeOutputWithContext(context.Context) DashboardAxisDisplayRangeOutput
}

type DashboardAxisDisplayRangeArgs struct {
	DataDriven DashboardAxisDisplayDataDrivenRangePtrInput `pulumi:"dataDriven"`
	MinMax     DashboardAxisDisplayMinMaxRangePtrInput     `pulumi:"minMax"`
}

func (DashboardAxisDisplayRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisDisplayRange)(nil)).Elem()
}

func (i DashboardAxisDisplayRangeArgs) ToDashboardAxisDisplayRangeOutput() DashboardAxisDisplayRangeOutput {
	return i.ToDashboardAxisDisplayRangeOutputWithContext(context.Background())
}

func (i DashboardAxisDisplayRangeArgs) ToDashboardAxisDisplayRangeOutputWithContext(ctx context.Context) DashboardAxisDisplayRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayRangeOutput)
}

func (i DashboardAxisDisplayRangeArgs) ToDashboardAxisDisplayRangePtrOutput() DashboardAxisDisplayRangePtrOutput {
	return i.ToDashboardAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i DashboardAxisDisplayRangeArgs) ToDashboardAxisDisplayRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayRangeOutput).ToDashboardAxisDisplayRangePtrOutputWithContext(ctx)
}

// DashboardAxisDisplayRangePtrInput is an input type that accepts DashboardAxisDisplayRangeArgs, DashboardAxisDisplayRangePtr and DashboardAxisDisplayRangePtrOutput values.
// You can construct a concrete instance of `DashboardAxisDisplayRangePtrInput` via:
//
//	        DashboardAxisDisplayRangeArgs{...}
//
//	or:
//
//	        nil
type DashboardAxisDisplayRangePtrInput interface {
	pulumi.Input

	ToDashboardAxisDisplayRangePtrOutput() DashboardAxisDisplayRangePtrOutput
	ToDashboardAxisDisplayRangePtrOutputWithContext(context.Context) DashboardAxisDisplayRangePtrOutput
}

type dashboardAxisDisplayRangePtrType DashboardAxisDisplayRangeArgs

func DashboardAxisDisplayRangePtr(v *DashboardAxisDisplayRangeArgs) DashboardAxisDisplayRangePtrInput {
	return (*dashboardAxisDisplayRangePtrType)(v)
}

func (*dashboardAxisDisplayRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisDisplayRange)(nil)).Elem()
}

func (i *dashboardAxisDisplayRangePtrType) ToDashboardAxisDisplayRangePtrOutput() DashboardAxisDisplayRangePtrOutput {
	return i.ToDashboardAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i *dashboardAxisDisplayRangePtrType) ToDashboardAxisDisplayRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisDisplayRangePtrOutput)
}

type DashboardAxisDisplayRangeOutput struct{ *pulumi.OutputState }

func (DashboardAxisDisplayRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisDisplayRange)(nil)).Elem()
}

func (o DashboardAxisDisplayRangeOutput) ToDashboardAxisDisplayRangeOutput() DashboardAxisDisplayRangeOutput {
	return o
}

func (o DashboardAxisDisplayRangeOutput) ToDashboardAxisDisplayRangeOutputWithContext(ctx context.Context) DashboardAxisDisplayRangeOutput {
	return o
}

func (o DashboardAxisDisplayRangeOutput) ToDashboardAxisDisplayRangePtrOutput() DashboardAxisDisplayRangePtrOutput {
	return o.ToDashboardAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (o DashboardAxisDisplayRangeOutput) ToDashboardAxisDisplayRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisDisplayRange) *DashboardAxisDisplayRange {
		return &v
	}).(DashboardAxisDisplayRangePtrOutput)
}

func (o DashboardAxisDisplayRangeOutput) DataDriven() DashboardAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyT(func(v DashboardAxisDisplayRange) *DashboardAxisDisplayDataDrivenRange { return v.DataDriven }).(DashboardAxisDisplayDataDrivenRangePtrOutput)
}

func (o DashboardAxisDisplayRangeOutput) MinMax() DashboardAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyT(func(v DashboardAxisDisplayRange) *DashboardAxisDisplayMinMaxRange { return v.MinMax }).(DashboardAxisDisplayMinMaxRangePtrOutput)
}

type DashboardAxisDisplayRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisDisplayRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisDisplayRange)(nil)).Elem()
}

func (o DashboardAxisDisplayRangePtrOutput) ToDashboardAxisDisplayRangePtrOutput() DashboardAxisDisplayRangePtrOutput {
	return o
}

func (o DashboardAxisDisplayRangePtrOutput) ToDashboardAxisDisplayRangePtrOutputWithContext(ctx context.Context) DashboardAxisDisplayRangePtrOutput {
	return o
}

func (o DashboardAxisDisplayRangePtrOutput) Elem() DashboardAxisDisplayRangeOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayRange) DashboardAxisDisplayRange {
		if v != nil {
			return *v
		}
		var ret DashboardAxisDisplayRange
		return ret
	}).(DashboardAxisDisplayRangeOutput)
}

func (o DashboardAxisDisplayRangePtrOutput) DataDriven() DashboardAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayRange) *DashboardAxisDisplayDataDrivenRange {
		if v == nil {
			return nil
		}
		return v.DataDriven
	}).(DashboardAxisDisplayDataDrivenRangePtrOutput)
}

func (o DashboardAxisDisplayRangePtrOutput) MinMax() DashboardAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyT(func(v *DashboardAxisDisplayRange) *DashboardAxisDisplayMinMaxRange {
		if v == nil {
			return nil
		}
		return v.MinMax
	}).(DashboardAxisDisplayMinMaxRangePtrOutput)
}

type DashboardAxisLabelOptions struct {
	ApplyTo           *DashboardAxisLabelReferenceOptions `pulumi:"applyTo"`
	CustomLabel       *string                             `pulumi:"customLabel"`
	FontConfiguration *DashboardFontConfiguration         `pulumi:"fontConfiguration"`
}

// DashboardAxisLabelOptionsInput is an input type that accepts DashboardAxisLabelOptionsArgs and DashboardAxisLabelOptionsOutput values.
// You can construct a concrete instance of `DashboardAxisLabelOptionsInput` via:
//
//	DashboardAxisLabelOptionsArgs{...}
type DashboardAxisLabelOptionsInput interface {
	pulumi.Input

	ToDashboardAxisLabelOptionsOutput() DashboardAxisLabelOptionsOutput
	ToDashboardAxisLabelOptionsOutputWithContext(context.Context) DashboardAxisLabelOptionsOutput
}

type DashboardAxisLabelOptionsArgs struct {
	ApplyTo           DashboardAxisLabelReferenceOptionsPtrInput `pulumi:"applyTo"`
	CustomLabel       pulumi.StringPtrInput                      `pulumi:"customLabel"`
	FontConfiguration DashboardFontConfigurationPtrInput         `pulumi:"fontConfiguration"`
}

func (DashboardAxisLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisLabelOptions)(nil)).Elem()
}

func (i DashboardAxisLabelOptionsArgs) ToDashboardAxisLabelOptionsOutput() DashboardAxisLabelOptionsOutput {
	return i.ToDashboardAxisLabelOptionsOutputWithContext(context.Background())
}

func (i DashboardAxisLabelOptionsArgs) ToDashboardAxisLabelOptionsOutputWithContext(ctx context.Context) DashboardAxisLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLabelOptionsOutput)
}

// DashboardAxisLabelOptionsArrayInput is an input type that accepts DashboardAxisLabelOptionsArray and DashboardAxisLabelOptionsArrayOutput values.
// You can construct a concrete instance of `DashboardAxisLabelOptionsArrayInput` via:
//
//	DashboardAxisLabelOptionsArray{ DashboardAxisLabelOptionsArgs{...} }
type DashboardAxisLabelOptionsArrayInput interface {
	pulumi.Input

	ToDashboardAxisLabelOptionsArrayOutput() DashboardAxisLabelOptionsArrayOutput
	ToDashboardAxisLabelOptionsArrayOutputWithContext(context.Context) DashboardAxisLabelOptionsArrayOutput
}

type DashboardAxisLabelOptionsArray []DashboardAxisLabelOptionsInput

func (DashboardAxisLabelOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardAxisLabelOptions)(nil)).Elem()
}

func (i DashboardAxisLabelOptionsArray) ToDashboardAxisLabelOptionsArrayOutput() DashboardAxisLabelOptionsArrayOutput {
	return i.ToDashboardAxisLabelOptionsArrayOutputWithContext(context.Background())
}

func (i DashboardAxisLabelOptionsArray) ToDashboardAxisLabelOptionsArrayOutputWithContext(ctx context.Context) DashboardAxisLabelOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLabelOptionsArrayOutput)
}

type DashboardAxisLabelOptionsOutput struct{ *pulumi.OutputState }

func (DashboardAxisLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisLabelOptions)(nil)).Elem()
}

func (o DashboardAxisLabelOptionsOutput) ToDashboardAxisLabelOptionsOutput() DashboardAxisLabelOptionsOutput {
	return o
}

func (o DashboardAxisLabelOptionsOutput) ToDashboardAxisLabelOptionsOutputWithContext(ctx context.Context) DashboardAxisLabelOptionsOutput {
	return o
}

func (o DashboardAxisLabelOptionsOutput) ApplyTo() DashboardAxisLabelReferenceOptionsPtrOutput {
	return o.ApplyT(func(v DashboardAxisLabelOptions) *DashboardAxisLabelReferenceOptions { return v.ApplyTo }).(DashboardAxisLabelReferenceOptionsPtrOutput)
}

func (o DashboardAxisLabelOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardAxisLabelOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o DashboardAxisLabelOptionsOutput) FontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardAxisLabelOptions) *DashboardFontConfiguration { return v.FontConfiguration }).(DashboardFontConfigurationPtrOutput)
}

type DashboardAxisLabelOptionsArrayOutput struct{ *pulumi.OutputState }

func (DashboardAxisLabelOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardAxisLabelOptions)(nil)).Elem()
}

func (o DashboardAxisLabelOptionsArrayOutput) ToDashboardAxisLabelOptionsArrayOutput() DashboardAxisLabelOptionsArrayOutput {
	return o
}

func (o DashboardAxisLabelOptionsArrayOutput) ToDashboardAxisLabelOptionsArrayOutputWithContext(ctx context.Context) DashboardAxisLabelOptionsArrayOutput {
	return o
}

func (o DashboardAxisLabelOptionsArrayOutput) Index(i pulumi.IntInput) DashboardAxisLabelOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardAxisLabelOptions {
		return vs[0].([]DashboardAxisLabelOptions)[vs[1].(int)]
	}).(DashboardAxisLabelOptionsOutput)
}

type DashboardAxisLabelReferenceOptions struct {
	Column  DashboardColumnIdentifier `pulumi:"column"`
	FieldId string                    `pulumi:"fieldId"`
}

// DashboardAxisLabelReferenceOptionsInput is an input type that accepts DashboardAxisLabelReferenceOptionsArgs and DashboardAxisLabelReferenceOptionsOutput values.
// You can construct a concrete instance of `DashboardAxisLabelReferenceOptionsInput` via:
//
//	DashboardAxisLabelReferenceOptionsArgs{...}
type DashboardAxisLabelReferenceOptionsInput interface {
	pulumi.Input

	ToDashboardAxisLabelReferenceOptionsOutput() DashboardAxisLabelReferenceOptionsOutput
	ToDashboardAxisLabelReferenceOptionsOutputWithContext(context.Context) DashboardAxisLabelReferenceOptionsOutput
}

type DashboardAxisLabelReferenceOptionsArgs struct {
	Column  DashboardColumnIdentifierInput `pulumi:"column"`
	FieldId pulumi.StringInput             `pulumi:"fieldId"`
}

func (DashboardAxisLabelReferenceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisLabelReferenceOptions)(nil)).Elem()
}

func (i DashboardAxisLabelReferenceOptionsArgs) ToDashboardAxisLabelReferenceOptionsOutput() DashboardAxisLabelReferenceOptionsOutput {
	return i.ToDashboardAxisLabelReferenceOptionsOutputWithContext(context.Background())
}

func (i DashboardAxisLabelReferenceOptionsArgs) ToDashboardAxisLabelReferenceOptionsOutputWithContext(ctx context.Context) DashboardAxisLabelReferenceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLabelReferenceOptionsOutput)
}

func (i DashboardAxisLabelReferenceOptionsArgs) ToDashboardAxisLabelReferenceOptionsPtrOutput() DashboardAxisLabelReferenceOptionsPtrOutput {
	return i.ToDashboardAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardAxisLabelReferenceOptionsArgs) ToDashboardAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisLabelReferenceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLabelReferenceOptionsOutput).ToDashboardAxisLabelReferenceOptionsPtrOutputWithContext(ctx)
}

// DashboardAxisLabelReferenceOptionsPtrInput is an input type that accepts DashboardAxisLabelReferenceOptionsArgs, DashboardAxisLabelReferenceOptionsPtr and DashboardAxisLabelReferenceOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardAxisLabelReferenceOptionsPtrInput` via:
//
//	        DashboardAxisLabelReferenceOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardAxisLabelReferenceOptionsPtrInput interface {
	pulumi.Input

	ToDashboardAxisLabelReferenceOptionsPtrOutput() DashboardAxisLabelReferenceOptionsPtrOutput
	ToDashboardAxisLabelReferenceOptionsPtrOutputWithContext(context.Context) DashboardAxisLabelReferenceOptionsPtrOutput
}

type dashboardAxisLabelReferenceOptionsPtrType DashboardAxisLabelReferenceOptionsArgs

func DashboardAxisLabelReferenceOptionsPtr(v *DashboardAxisLabelReferenceOptionsArgs) DashboardAxisLabelReferenceOptionsPtrInput {
	return (*dashboardAxisLabelReferenceOptionsPtrType)(v)
}

func (*dashboardAxisLabelReferenceOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisLabelReferenceOptions)(nil)).Elem()
}

func (i *dashboardAxisLabelReferenceOptionsPtrType) ToDashboardAxisLabelReferenceOptionsPtrOutput() DashboardAxisLabelReferenceOptionsPtrOutput {
	return i.ToDashboardAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardAxisLabelReferenceOptionsPtrType) ToDashboardAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisLabelReferenceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLabelReferenceOptionsPtrOutput)
}

type DashboardAxisLabelReferenceOptionsOutput struct{ *pulumi.OutputState }

func (DashboardAxisLabelReferenceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisLabelReferenceOptions)(nil)).Elem()
}

func (o DashboardAxisLabelReferenceOptionsOutput) ToDashboardAxisLabelReferenceOptionsOutput() DashboardAxisLabelReferenceOptionsOutput {
	return o
}

func (o DashboardAxisLabelReferenceOptionsOutput) ToDashboardAxisLabelReferenceOptionsOutputWithContext(ctx context.Context) DashboardAxisLabelReferenceOptionsOutput {
	return o
}

func (o DashboardAxisLabelReferenceOptionsOutput) ToDashboardAxisLabelReferenceOptionsPtrOutput() DashboardAxisLabelReferenceOptionsPtrOutput {
	return o.ToDashboardAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardAxisLabelReferenceOptionsOutput) ToDashboardAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisLabelReferenceOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisLabelReferenceOptions) *DashboardAxisLabelReferenceOptions {
		return &v
	}).(DashboardAxisLabelReferenceOptionsPtrOutput)
}

func (o DashboardAxisLabelReferenceOptionsOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardAxisLabelReferenceOptions) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardAxisLabelReferenceOptionsOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardAxisLabelReferenceOptions) string { return v.FieldId }).(pulumi.StringOutput)
}

type DashboardAxisLabelReferenceOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisLabelReferenceOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisLabelReferenceOptions)(nil)).Elem()
}

func (o DashboardAxisLabelReferenceOptionsPtrOutput) ToDashboardAxisLabelReferenceOptionsPtrOutput() DashboardAxisLabelReferenceOptionsPtrOutput {
	return o
}

func (o DashboardAxisLabelReferenceOptionsPtrOutput) ToDashboardAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisLabelReferenceOptionsPtrOutput {
	return o
}

func (o DashboardAxisLabelReferenceOptionsPtrOutput) Elem() DashboardAxisLabelReferenceOptionsOutput {
	return o.ApplyT(func(v *DashboardAxisLabelReferenceOptions) DashboardAxisLabelReferenceOptions {
		if v != nil {
			return *v
		}
		var ret DashboardAxisLabelReferenceOptions
		return ret
	}).(DashboardAxisLabelReferenceOptionsOutput)
}

func (o DashboardAxisLabelReferenceOptionsPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardAxisLabelReferenceOptions) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardAxisLabelReferenceOptionsPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardAxisLabelReferenceOptions) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type DashboardAxisLinearScale struct {
	StepCount *float64 `pulumi:"stepCount"`
	StepSize  *float64 `pulumi:"stepSize"`
}

// DashboardAxisLinearScaleInput is an input type that accepts DashboardAxisLinearScaleArgs and DashboardAxisLinearScaleOutput values.
// You can construct a concrete instance of `DashboardAxisLinearScaleInput` via:
//
//	DashboardAxisLinearScaleArgs{...}
type DashboardAxisLinearScaleInput interface {
	pulumi.Input

	ToDashboardAxisLinearScaleOutput() DashboardAxisLinearScaleOutput
	ToDashboardAxisLinearScaleOutputWithContext(context.Context) DashboardAxisLinearScaleOutput
}

type DashboardAxisLinearScaleArgs struct {
	StepCount pulumi.Float64PtrInput `pulumi:"stepCount"`
	StepSize  pulumi.Float64PtrInput `pulumi:"stepSize"`
}

func (DashboardAxisLinearScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisLinearScale)(nil)).Elem()
}

func (i DashboardAxisLinearScaleArgs) ToDashboardAxisLinearScaleOutput() DashboardAxisLinearScaleOutput {
	return i.ToDashboardAxisLinearScaleOutputWithContext(context.Background())
}

func (i DashboardAxisLinearScaleArgs) ToDashboardAxisLinearScaleOutputWithContext(ctx context.Context) DashboardAxisLinearScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLinearScaleOutput)
}

func (i DashboardAxisLinearScaleArgs) ToDashboardAxisLinearScalePtrOutput() DashboardAxisLinearScalePtrOutput {
	return i.ToDashboardAxisLinearScalePtrOutputWithContext(context.Background())
}

func (i DashboardAxisLinearScaleArgs) ToDashboardAxisLinearScalePtrOutputWithContext(ctx context.Context) DashboardAxisLinearScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLinearScaleOutput).ToDashboardAxisLinearScalePtrOutputWithContext(ctx)
}

// DashboardAxisLinearScalePtrInput is an input type that accepts DashboardAxisLinearScaleArgs, DashboardAxisLinearScalePtr and DashboardAxisLinearScalePtrOutput values.
// You can construct a concrete instance of `DashboardAxisLinearScalePtrInput` via:
//
//	        DashboardAxisLinearScaleArgs{...}
//
//	or:
//
//	        nil
type DashboardAxisLinearScalePtrInput interface {
	pulumi.Input

	ToDashboardAxisLinearScalePtrOutput() DashboardAxisLinearScalePtrOutput
	ToDashboardAxisLinearScalePtrOutputWithContext(context.Context) DashboardAxisLinearScalePtrOutput
}

type dashboardAxisLinearScalePtrType DashboardAxisLinearScaleArgs

func DashboardAxisLinearScalePtr(v *DashboardAxisLinearScaleArgs) DashboardAxisLinearScalePtrInput {
	return (*dashboardAxisLinearScalePtrType)(v)
}

func (*dashboardAxisLinearScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisLinearScale)(nil)).Elem()
}

func (i *dashboardAxisLinearScalePtrType) ToDashboardAxisLinearScalePtrOutput() DashboardAxisLinearScalePtrOutput {
	return i.ToDashboardAxisLinearScalePtrOutputWithContext(context.Background())
}

func (i *dashboardAxisLinearScalePtrType) ToDashboardAxisLinearScalePtrOutputWithContext(ctx context.Context) DashboardAxisLinearScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLinearScalePtrOutput)
}

type DashboardAxisLinearScaleOutput struct{ *pulumi.OutputState }

func (DashboardAxisLinearScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisLinearScale)(nil)).Elem()
}

func (o DashboardAxisLinearScaleOutput) ToDashboardAxisLinearScaleOutput() DashboardAxisLinearScaleOutput {
	return o
}

func (o DashboardAxisLinearScaleOutput) ToDashboardAxisLinearScaleOutputWithContext(ctx context.Context) DashboardAxisLinearScaleOutput {
	return o
}

func (o DashboardAxisLinearScaleOutput) ToDashboardAxisLinearScalePtrOutput() DashboardAxisLinearScalePtrOutput {
	return o.ToDashboardAxisLinearScalePtrOutputWithContext(context.Background())
}

func (o DashboardAxisLinearScaleOutput) ToDashboardAxisLinearScalePtrOutputWithContext(ctx context.Context) DashboardAxisLinearScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisLinearScale) *DashboardAxisLinearScale {
		return &v
	}).(DashboardAxisLinearScalePtrOutput)
}

func (o DashboardAxisLinearScaleOutput) StepCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardAxisLinearScale) *float64 { return v.StepCount }).(pulumi.Float64PtrOutput)
}

func (o DashboardAxisLinearScaleOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardAxisLinearScale) *float64 { return v.StepSize }).(pulumi.Float64PtrOutput)
}

type DashboardAxisLinearScalePtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisLinearScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisLinearScale)(nil)).Elem()
}

func (o DashboardAxisLinearScalePtrOutput) ToDashboardAxisLinearScalePtrOutput() DashboardAxisLinearScalePtrOutput {
	return o
}

func (o DashboardAxisLinearScalePtrOutput) ToDashboardAxisLinearScalePtrOutputWithContext(ctx context.Context) DashboardAxisLinearScalePtrOutput {
	return o
}

func (o DashboardAxisLinearScalePtrOutput) Elem() DashboardAxisLinearScaleOutput {
	return o.ApplyT(func(v *DashboardAxisLinearScale) DashboardAxisLinearScale {
		if v != nil {
			return *v
		}
		var ret DashboardAxisLinearScale
		return ret
	}).(DashboardAxisLinearScaleOutput)
}

func (o DashboardAxisLinearScalePtrOutput) StepCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardAxisLinearScale) *float64 {
		if v == nil {
			return nil
		}
		return v.StepCount
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardAxisLinearScalePtrOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardAxisLinearScale) *float64 {
		if v == nil {
			return nil
		}
		return v.StepSize
	}).(pulumi.Float64PtrOutput)
}

type DashboardAxisLogarithmicScale struct {
	Base *float64 `pulumi:"base"`
}

// DashboardAxisLogarithmicScaleInput is an input type that accepts DashboardAxisLogarithmicScaleArgs and DashboardAxisLogarithmicScaleOutput values.
// You can construct a concrete instance of `DashboardAxisLogarithmicScaleInput` via:
//
//	DashboardAxisLogarithmicScaleArgs{...}
type DashboardAxisLogarithmicScaleInput interface {
	pulumi.Input

	ToDashboardAxisLogarithmicScaleOutput() DashboardAxisLogarithmicScaleOutput
	ToDashboardAxisLogarithmicScaleOutputWithContext(context.Context) DashboardAxisLogarithmicScaleOutput
}

type DashboardAxisLogarithmicScaleArgs struct {
	Base pulumi.Float64PtrInput `pulumi:"base"`
}

func (DashboardAxisLogarithmicScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisLogarithmicScale)(nil)).Elem()
}

func (i DashboardAxisLogarithmicScaleArgs) ToDashboardAxisLogarithmicScaleOutput() DashboardAxisLogarithmicScaleOutput {
	return i.ToDashboardAxisLogarithmicScaleOutputWithContext(context.Background())
}

func (i DashboardAxisLogarithmicScaleArgs) ToDashboardAxisLogarithmicScaleOutputWithContext(ctx context.Context) DashboardAxisLogarithmicScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLogarithmicScaleOutput)
}

func (i DashboardAxisLogarithmicScaleArgs) ToDashboardAxisLogarithmicScalePtrOutput() DashboardAxisLogarithmicScalePtrOutput {
	return i.ToDashboardAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (i DashboardAxisLogarithmicScaleArgs) ToDashboardAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) DashboardAxisLogarithmicScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLogarithmicScaleOutput).ToDashboardAxisLogarithmicScalePtrOutputWithContext(ctx)
}

// DashboardAxisLogarithmicScalePtrInput is an input type that accepts DashboardAxisLogarithmicScaleArgs, DashboardAxisLogarithmicScalePtr and DashboardAxisLogarithmicScalePtrOutput values.
// You can construct a concrete instance of `DashboardAxisLogarithmicScalePtrInput` via:
//
//	        DashboardAxisLogarithmicScaleArgs{...}
//
//	or:
//
//	        nil
type DashboardAxisLogarithmicScalePtrInput interface {
	pulumi.Input

	ToDashboardAxisLogarithmicScalePtrOutput() DashboardAxisLogarithmicScalePtrOutput
	ToDashboardAxisLogarithmicScalePtrOutputWithContext(context.Context) DashboardAxisLogarithmicScalePtrOutput
}

type dashboardAxisLogarithmicScalePtrType DashboardAxisLogarithmicScaleArgs

func DashboardAxisLogarithmicScalePtr(v *DashboardAxisLogarithmicScaleArgs) DashboardAxisLogarithmicScalePtrInput {
	return (*dashboardAxisLogarithmicScalePtrType)(v)
}

func (*dashboardAxisLogarithmicScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisLogarithmicScale)(nil)).Elem()
}

func (i *dashboardAxisLogarithmicScalePtrType) ToDashboardAxisLogarithmicScalePtrOutput() DashboardAxisLogarithmicScalePtrOutput {
	return i.ToDashboardAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (i *dashboardAxisLogarithmicScalePtrType) ToDashboardAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) DashboardAxisLogarithmicScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisLogarithmicScalePtrOutput)
}

type DashboardAxisLogarithmicScaleOutput struct{ *pulumi.OutputState }

func (DashboardAxisLogarithmicScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisLogarithmicScale)(nil)).Elem()
}

func (o DashboardAxisLogarithmicScaleOutput) ToDashboardAxisLogarithmicScaleOutput() DashboardAxisLogarithmicScaleOutput {
	return o
}

func (o DashboardAxisLogarithmicScaleOutput) ToDashboardAxisLogarithmicScaleOutputWithContext(ctx context.Context) DashboardAxisLogarithmicScaleOutput {
	return o
}

func (o DashboardAxisLogarithmicScaleOutput) ToDashboardAxisLogarithmicScalePtrOutput() DashboardAxisLogarithmicScalePtrOutput {
	return o.ToDashboardAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (o DashboardAxisLogarithmicScaleOutput) ToDashboardAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) DashboardAxisLogarithmicScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisLogarithmicScale) *DashboardAxisLogarithmicScale {
		return &v
	}).(DashboardAxisLogarithmicScalePtrOutput)
}

func (o DashboardAxisLogarithmicScaleOutput) Base() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardAxisLogarithmicScale) *float64 { return v.Base }).(pulumi.Float64PtrOutput)
}

type DashboardAxisLogarithmicScalePtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisLogarithmicScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisLogarithmicScale)(nil)).Elem()
}

func (o DashboardAxisLogarithmicScalePtrOutput) ToDashboardAxisLogarithmicScalePtrOutput() DashboardAxisLogarithmicScalePtrOutput {
	return o
}

func (o DashboardAxisLogarithmicScalePtrOutput) ToDashboardAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) DashboardAxisLogarithmicScalePtrOutput {
	return o
}

func (o DashboardAxisLogarithmicScalePtrOutput) Elem() DashboardAxisLogarithmicScaleOutput {
	return o.ApplyT(func(v *DashboardAxisLogarithmicScale) DashboardAxisLogarithmicScale {
		if v != nil {
			return *v
		}
		var ret DashboardAxisLogarithmicScale
		return ret
	}).(DashboardAxisLogarithmicScaleOutput)
}

func (o DashboardAxisLogarithmicScalePtrOutput) Base() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardAxisLogarithmicScale) *float64 {
		if v == nil {
			return nil
		}
		return v.Base
	}).(pulumi.Float64PtrOutput)
}

type DashboardAxisScale struct {
	Linear      *DashboardAxisLinearScale      `pulumi:"linear"`
	Logarithmic *DashboardAxisLogarithmicScale `pulumi:"logarithmic"`
}

// DashboardAxisScaleInput is an input type that accepts DashboardAxisScaleArgs and DashboardAxisScaleOutput values.
// You can construct a concrete instance of `DashboardAxisScaleInput` via:
//
//	DashboardAxisScaleArgs{...}
type DashboardAxisScaleInput interface {
	pulumi.Input

	ToDashboardAxisScaleOutput() DashboardAxisScaleOutput
	ToDashboardAxisScaleOutputWithContext(context.Context) DashboardAxisScaleOutput
}

type DashboardAxisScaleArgs struct {
	Linear      DashboardAxisLinearScalePtrInput      `pulumi:"linear"`
	Logarithmic DashboardAxisLogarithmicScalePtrInput `pulumi:"logarithmic"`
}

func (DashboardAxisScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisScale)(nil)).Elem()
}

func (i DashboardAxisScaleArgs) ToDashboardAxisScaleOutput() DashboardAxisScaleOutput {
	return i.ToDashboardAxisScaleOutputWithContext(context.Background())
}

func (i DashboardAxisScaleArgs) ToDashboardAxisScaleOutputWithContext(ctx context.Context) DashboardAxisScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisScaleOutput)
}

func (i DashboardAxisScaleArgs) ToDashboardAxisScalePtrOutput() DashboardAxisScalePtrOutput {
	return i.ToDashboardAxisScalePtrOutputWithContext(context.Background())
}

func (i DashboardAxisScaleArgs) ToDashboardAxisScalePtrOutputWithContext(ctx context.Context) DashboardAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisScaleOutput).ToDashboardAxisScalePtrOutputWithContext(ctx)
}

// DashboardAxisScalePtrInput is an input type that accepts DashboardAxisScaleArgs, DashboardAxisScalePtr and DashboardAxisScalePtrOutput values.
// You can construct a concrete instance of `DashboardAxisScalePtrInput` via:
//
//	        DashboardAxisScaleArgs{...}
//
//	or:
//
//	        nil
type DashboardAxisScalePtrInput interface {
	pulumi.Input

	ToDashboardAxisScalePtrOutput() DashboardAxisScalePtrOutput
	ToDashboardAxisScalePtrOutputWithContext(context.Context) DashboardAxisScalePtrOutput
}

type dashboardAxisScalePtrType DashboardAxisScaleArgs

func DashboardAxisScalePtr(v *DashboardAxisScaleArgs) DashboardAxisScalePtrInput {
	return (*dashboardAxisScalePtrType)(v)
}

func (*dashboardAxisScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisScale)(nil)).Elem()
}

func (i *dashboardAxisScalePtrType) ToDashboardAxisScalePtrOutput() DashboardAxisScalePtrOutput {
	return i.ToDashboardAxisScalePtrOutputWithContext(context.Background())
}

func (i *dashboardAxisScalePtrType) ToDashboardAxisScalePtrOutputWithContext(ctx context.Context) DashboardAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisScalePtrOutput)
}

type DashboardAxisScaleOutput struct{ *pulumi.OutputState }

func (DashboardAxisScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisScale)(nil)).Elem()
}

func (o DashboardAxisScaleOutput) ToDashboardAxisScaleOutput() DashboardAxisScaleOutput {
	return o
}

func (o DashboardAxisScaleOutput) ToDashboardAxisScaleOutputWithContext(ctx context.Context) DashboardAxisScaleOutput {
	return o
}

func (o DashboardAxisScaleOutput) ToDashboardAxisScalePtrOutput() DashboardAxisScalePtrOutput {
	return o.ToDashboardAxisScalePtrOutputWithContext(context.Background())
}

func (o DashboardAxisScaleOutput) ToDashboardAxisScalePtrOutputWithContext(ctx context.Context) DashboardAxisScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisScale) *DashboardAxisScale {
		return &v
	}).(DashboardAxisScalePtrOutput)
}

func (o DashboardAxisScaleOutput) Linear() DashboardAxisLinearScalePtrOutput {
	return o.ApplyT(func(v DashboardAxisScale) *DashboardAxisLinearScale { return v.Linear }).(DashboardAxisLinearScalePtrOutput)
}

func (o DashboardAxisScaleOutput) Logarithmic() DashboardAxisLogarithmicScalePtrOutput {
	return o.ApplyT(func(v DashboardAxisScale) *DashboardAxisLogarithmicScale { return v.Logarithmic }).(DashboardAxisLogarithmicScalePtrOutput)
}

type DashboardAxisScalePtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisScale)(nil)).Elem()
}

func (o DashboardAxisScalePtrOutput) ToDashboardAxisScalePtrOutput() DashboardAxisScalePtrOutput {
	return o
}

func (o DashboardAxisScalePtrOutput) ToDashboardAxisScalePtrOutputWithContext(ctx context.Context) DashboardAxisScalePtrOutput {
	return o
}

func (o DashboardAxisScalePtrOutput) Elem() DashboardAxisScaleOutput {
	return o.ApplyT(func(v *DashboardAxisScale) DashboardAxisScale {
		if v != nil {
			return *v
		}
		var ret DashboardAxisScale
		return ret
	}).(DashboardAxisScaleOutput)
}

func (o DashboardAxisScalePtrOutput) Linear() DashboardAxisLinearScalePtrOutput {
	return o.ApplyT(func(v *DashboardAxisScale) *DashboardAxisLinearScale {
		if v == nil {
			return nil
		}
		return v.Linear
	}).(DashboardAxisLinearScalePtrOutput)
}

func (o DashboardAxisScalePtrOutput) Logarithmic() DashboardAxisLogarithmicScalePtrOutput {
	return o.ApplyT(func(v *DashboardAxisScale) *DashboardAxisLogarithmicScale {
		if v == nil {
			return nil
		}
		return v.Logarithmic
	}).(DashboardAxisLogarithmicScalePtrOutput)
}

type DashboardAxisTickLabelOptions struct {
	LabelOptions  *DashboardLabelOptions `pulumi:"labelOptions"`
	RotationAngle *float64               `pulumi:"rotationAngle"`
}

// DashboardAxisTickLabelOptionsInput is an input type that accepts DashboardAxisTickLabelOptionsArgs and DashboardAxisTickLabelOptionsOutput values.
// You can construct a concrete instance of `DashboardAxisTickLabelOptionsInput` via:
//
//	DashboardAxisTickLabelOptionsArgs{...}
type DashboardAxisTickLabelOptionsInput interface {
	pulumi.Input

	ToDashboardAxisTickLabelOptionsOutput() DashboardAxisTickLabelOptionsOutput
	ToDashboardAxisTickLabelOptionsOutputWithContext(context.Context) DashboardAxisTickLabelOptionsOutput
}

type DashboardAxisTickLabelOptionsArgs struct {
	LabelOptions  DashboardLabelOptionsPtrInput `pulumi:"labelOptions"`
	RotationAngle pulumi.Float64PtrInput        `pulumi:"rotationAngle"`
}

func (DashboardAxisTickLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisTickLabelOptions)(nil)).Elem()
}

func (i DashboardAxisTickLabelOptionsArgs) ToDashboardAxisTickLabelOptionsOutput() DashboardAxisTickLabelOptionsOutput {
	return i.ToDashboardAxisTickLabelOptionsOutputWithContext(context.Background())
}

func (i DashboardAxisTickLabelOptionsArgs) ToDashboardAxisTickLabelOptionsOutputWithContext(ctx context.Context) DashboardAxisTickLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisTickLabelOptionsOutput)
}

func (i DashboardAxisTickLabelOptionsArgs) ToDashboardAxisTickLabelOptionsPtrOutput() DashboardAxisTickLabelOptionsPtrOutput {
	return i.ToDashboardAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardAxisTickLabelOptionsArgs) ToDashboardAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisTickLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisTickLabelOptionsOutput).ToDashboardAxisTickLabelOptionsPtrOutputWithContext(ctx)
}

// DashboardAxisTickLabelOptionsPtrInput is an input type that accepts DashboardAxisTickLabelOptionsArgs, DashboardAxisTickLabelOptionsPtr and DashboardAxisTickLabelOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardAxisTickLabelOptionsPtrInput` via:
//
//	        DashboardAxisTickLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardAxisTickLabelOptionsPtrInput interface {
	pulumi.Input

	ToDashboardAxisTickLabelOptionsPtrOutput() DashboardAxisTickLabelOptionsPtrOutput
	ToDashboardAxisTickLabelOptionsPtrOutputWithContext(context.Context) DashboardAxisTickLabelOptionsPtrOutput
}

type dashboardAxisTickLabelOptionsPtrType DashboardAxisTickLabelOptionsArgs

func DashboardAxisTickLabelOptionsPtr(v *DashboardAxisTickLabelOptionsArgs) DashboardAxisTickLabelOptionsPtrInput {
	return (*dashboardAxisTickLabelOptionsPtrType)(v)
}

func (*dashboardAxisTickLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisTickLabelOptions)(nil)).Elem()
}

func (i *dashboardAxisTickLabelOptionsPtrType) ToDashboardAxisTickLabelOptionsPtrOutput() DashboardAxisTickLabelOptionsPtrOutput {
	return i.ToDashboardAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardAxisTickLabelOptionsPtrType) ToDashboardAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisTickLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardAxisTickLabelOptionsPtrOutput)
}

type DashboardAxisTickLabelOptionsOutput struct{ *pulumi.OutputState }

func (DashboardAxisTickLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisTickLabelOptions)(nil)).Elem()
}

func (o DashboardAxisTickLabelOptionsOutput) ToDashboardAxisTickLabelOptionsOutput() DashboardAxisTickLabelOptionsOutput {
	return o
}

func (o DashboardAxisTickLabelOptionsOutput) ToDashboardAxisTickLabelOptionsOutputWithContext(ctx context.Context) DashboardAxisTickLabelOptionsOutput {
	return o
}

func (o DashboardAxisTickLabelOptionsOutput) ToDashboardAxisTickLabelOptionsPtrOutput() DashboardAxisTickLabelOptionsPtrOutput {
	return o.ToDashboardAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardAxisTickLabelOptionsOutput) ToDashboardAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisTickLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisTickLabelOptions) *DashboardAxisTickLabelOptions {
		return &v
	}).(DashboardAxisTickLabelOptionsPtrOutput)
}

func (o DashboardAxisTickLabelOptionsOutput) LabelOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardAxisTickLabelOptions) *DashboardLabelOptions { return v.LabelOptions }).(DashboardLabelOptionsPtrOutput)
}

func (o DashboardAxisTickLabelOptionsOutput) RotationAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardAxisTickLabelOptions) *float64 { return v.RotationAngle }).(pulumi.Float64PtrOutput)
}

type DashboardAxisTickLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisTickLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisTickLabelOptions)(nil)).Elem()
}

func (o DashboardAxisTickLabelOptionsPtrOutput) ToDashboardAxisTickLabelOptionsPtrOutput() DashboardAxisTickLabelOptionsPtrOutput {
	return o
}

func (o DashboardAxisTickLabelOptionsPtrOutput) ToDashboardAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardAxisTickLabelOptionsPtrOutput {
	return o
}

func (o DashboardAxisTickLabelOptionsPtrOutput) Elem() DashboardAxisTickLabelOptionsOutput {
	return o.ApplyT(func(v *DashboardAxisTickLabelOptions) DashboardAxisTickLabelOptions {
		if v != nil {
			return *v
		}
		var ret DashboardAxisTickLabelOptions
		return ret
	}).(DashboardAxisTickLabelOptionsOutput)
}

func (o DashboardAxisTickLabelOptionsPtrOutput) LabelOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardAxisTickLabelOptions) *DashboardLabelOptions {
		if v == nil {
			return nil
		}
		return v.LabelOptions
	}).(DashboardLabelOptionsPtrOutput)
}

func (o DashboardAxisTickLabelOptionsPtrOutput) RotationAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardAxisTickLabelOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.RotationAngle
	}).(pulumi.Float64PtrOutput)
}

type DashboardBarChartAggregatedFieldWells struct {
	Category       []DashboardDimensionField `pulumi:"category"`
	Colors         []DashboardDimensionField `pulumi:"colors"`
	SmallMultiples []DashboardDimensionField `pulumi:"smallMultiples"`
	Values         []DashboardMeasureField   `pulumi:"values"`
}

// DashboardBarChartAggregatedFieldWellsInput is an input type that accepts DashboardBarChartAggregatedFieldWellsArgs and DashboardBarChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardBarChartAggregatedFieldWellsInput` via:
//
//	DashboardBarChartAggregatedFieldWellsArgs{...}
type DashboardBarChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardBarChartAggregatedFieldWellsOutput() DashboardBarChartAggregatedFieldWellsOutput
	ToDashboardBarChartAggregatedFieldWellsOutputWithContext(context.Context) DashboardBarChartAggregatedFieldWellsOutput
}

type DashboardBarChartAggregatedFieldWellsArgs struct {
	Category       DashboardDimensionFieldArrayInput `pulumi:"category"`
	Colors         DashboardDimensionFieldArrayInput `pulumi:"colors"`
	SmallMultiples DashboardDimensionFieldArrayInput `pulumi:"smallMultiples"`
	Values         DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardBarChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardBarChartAggregatedFieldWellsArgs) ToDashboardBarChartAggregatedFieldWellsOutput() DashboardBarChartAggregatedFieldWellsOutput {
	return i.ToDashboardBarChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardBarChartAggregatedFieldWellsArgs) ToDashboardBarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardBarChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartAggregatedFieldWellsOutput)
}

func (i DashboardBarChartAggregatedFieldWellsArgs) ToDashboardBarChartAggregatedFieldWellsPtrOutput() DashboardBarChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardBarChartAggregatedFieldWellsArgs) ToDashboardBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartAggregatedFieldWellsOutput).ToDashboardBarChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardBarChartAggregatedFieldWellsPtrInput is an input type that accepts DashboardBarChartAggregatedFieldWellsArgs, DashboardBarChartAggregatedFieldWellsPtr and DashboardBarChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardBarChartAggregatedFieldWellsPtrInput` via:
//
//	        DashboardBarChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardBarChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardBarChartAggregatedFieldWellsPtrOutput() DashboardBarChartAggregatedFieldWellsPtrOutput
	ToDashboardBarChartAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardBarChartAggregatedFieldWellsPtrOutput
}

type dashboardBarChartAggregatedFieldWellsPtrType DashboardBarChartAggregatedFieldWellsArgs

func DashboardBarChartAggregatedFieldWellsPtr(v *DashboardBarChartAggregatedFieldWellsArgs) DashboardBarChartAggregatedFieldWellsPtrInput {
	return (*dashboardBarChartAggregatedFieldWellsPtrType)(v)
}

func (*dashboardBarChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardBarChartAggregatedFieldWellsPtrType) ToDashboardBarChartAggregatedFieldWellsPtrOutput() DashboardBarChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardBarChartAggregatedFieldWellsPtrType) ToDashboardBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartAggregatedFieldWellsPtrOutput)
}

type DashboardBarChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardBarChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardBarChartAggregatedFieldWellsOutput) ToDashboardBarChartAggregatedFieldWellsOutput() DashboardBarChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardBarChartAggregatedFieldWellsOutput) ToDashboardBarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardBarChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardBarChartAggregatedFieldWellsOutput) ToDashboardBarChartAggregatedFieldWellsPtrOutput() DashboardBarChartAggregatedFieldWellsPtrOutput {
	return o.ToDashboardBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardBarChartAggregatedFieldWellsOutput) ToDashboardBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBarChartAggregatedFieldWells) *DashboardBarChartAggregatedFieldWells {
		return &v
	}).(DashboardBarChartAggregatedFieldWellsPtrOutput)
}

func (o DashboardBarChartAggregatedFieldWellsOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardBarChartAggregatedFieldWells) []DashboardDimensionField { return v.Category }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardBarChartAggregatedFieldWellsOutput) Colors() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardBarChartAggregatedFieldWells) []DashboardDimensionField { return v.Colors }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardBarChartAggregatedFieldWellsOutput) SmallMultiples() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardBarChartAggregatedFieldWells) []DashboardDimensionField { return v.SmallMultiples }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardBarChartAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardBarChartAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardBarChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardBarChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardBarChartAggregatedFieldWellsPtrOutput) ToDashboardBarChartAggregatedFieldWellsPtrOutput() DashboardBarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardBarChartAggregatedFieldWellsPtrOutput) ToDashboardBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardBarChartAggregatedFieldWellsPtrOutput) Elem() DashboardBarChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardBarChartAggregatedFieldWells) DashboardBarChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardBarChartAggregatedFieldWells
		return ret
	}).(DashboardBarChartAggregatedFieldWellsOutput)
}

func (o DashboardBarChartAggregatedFieldWellsPtrOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardBarChartAggregatedFieldWellsPtrOutput) Colors() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardBarChartAggregatedFieldWellsPtrOutput) SmallMultiples() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.SmallMultiples
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardBarChartAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardBarChartConfiguration struct {
	BarsArrangement              *DashboardBarsArrangement              `pulumi:"barsArrangement"`
	CategoryAxis                 *DashboardAxisDisplayOptions           `pulumi:"categoryAxis"`
	CategoryLabelOptions         *DashboardChartAxisLabelOptions        `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            *DashboardChartAxisLabelOptions        `pulumi:"colorLabelOptions"`
	ContributionAnalysisDefaults []DashboardContributionAnalysisDefault `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   *DashboardDataLabelOptions             `pulumi:"dataLabels"`
	FieldWells                   *DashboardBarChartFieldWells           `pulumi:"fieldWells"`
	Legend                       *DashboardLegendOptions                `pulumi:"legend"`
	Orientation                  *DashboardBarChartOrientation          `pulumi:"orientation"`
	ReferenceLines               []DashboardReferenceLine               `pulumi:"referenceLines"`
	SmallMultiplesOptions        *DashboardSmallMultiplesOptions        `pulumi:"smallMultiplesOptions"`
	SortConfiguration            *DashboardBarChartSortConfiguration    `pulumi:"sortConfiguration"`
	Tooltip                      *DashboardTooltipOptions               `pulumi:"tooltip"`
	ValueAxis                    *DashboardAxisDisplayOptions           `pulumi:"valueAxis"`
	ValueLabelOptions            *DashboardChartAxisLabelOptions        `pulumi:"valueLabelOptions"`
	VisualPalette                *DashboardVisualPalette                `pulumi:"visualPalette"`
}

// DashboardBarChartConfigurationInput is an input type that accepts DashboardBarChartConfigurationArgs and DashboardBarChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardBarChartConfigurationInput` via:
//
//	DashboardBarChartConfigurationArgs{...}
type DashboardBarChartConfigurationInput interface {
	pulumi.Input

	ToDashboardBarChartConfigurationOutput() DashboardBarChartConfigurationOutput
	ToDashboardBarChartConfigurationOutputWithContext(context.Context) DashboardBarChartConfigurationOutput
}

type DashboardBarChartConfigurationArgs struct {
	BarsArrangement              DashboardBarsArrangementPtrInput               `pulumi:"barsArrangement"`
	CategoryAxis                 DashboardAxisDisplayOptionsPtrInput            `pulumi:"categoryAxis"`
	CategoryLabelOptions         DashboardChartAxisLabelOptionsPtrInput         `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            DashboardChartAxisLabelOptionsPtrInput         `pulumi:"colorLabelOptions"`
	ContributionAnalysisDefaults DashboardContributionAnalysisDefaultArrayInput `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   DashboardDataLabelOptionsPtrInput              `pulumi:"dataLabels"`
	FieldWells                   DashboardBarChartFieldWellsPtrInput            `pulumi:"fieldWells"`
	Legend                       DashboardLegendOptionsPtrInput                 `pulumi:"legend"`
	Orientation                  DashboardBarChartOrientationPtrInput           `pulumi:"orientation"`
	ReferenceLines               DashboardReferenceLineArrayInput               `pulumi:"referenceLines"`
	SmallMultiplesOptions        DashboardSmallMultiplesOptionsPtrInput         `pulumi:"smallMultiplesOptions"`
	SortConfiguration            DashboardBarChartSortConfigurationPtrInput     `pulumi:"sortConfiguration"`
	Tooltip                      DashboardTooltipOptionsPtrInput                `pulumi:"tooltip"`
	ValueAxis                    DashboardAxisDisplayOptionsPtrInput            `pulumi:"valueAxis"`
	ValueLabelOptions            DashboardChartAxisLabelOptionsPtrInput         `pulumi:"valueLabelOptions"`
	VisualPalette                DashboardVisualPalettePtrInput                 `pulumi:"visualPalette"`
}

func (DashboardBarChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartConfiguration)(nil)).Elem()
}

func (i DashboardBarChartConfigurationArgs) ToDashboardBarChartConfigurationOutput() DashboardBarChartConfigurationOutput {
	return i.ToDashboardBarChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardBarChartConfigurationArgs) ToDashboardBarChartConfigurationOutputWithContext(ctx context.Context) DashboardBarChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartConfigurationOutput)
}

func (i DashboardBarChartConfigurationArgs) ToDashboardBarChartConfigurationPtrOutput() DashboardBarChartConfigurationPtrOutput {
	return i.ToDashboardBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardBarChartConfigurationArgs) ToDashboardBarChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardBarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartConfigurationOutput).ToDashboardBarChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardBarChartConfigurationPtrInput is an input type that accepts DashboardBarChartConfigurationArgs, DashboardBarChartConfigurationPtr and DashboardBarChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardBarChartConfigurationPtrInput` via:
//
//	        DashboardBarChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardBarChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardBarChartConfigurationPtrOutput() DashboardBarChartConfigurationPtrOutput
	ToDashboardBarChartConfigurationPtrOutputWithContext(context.Context) DashboardBarChartConfigurationPtrOutput
}

type dashboardBarChartConfigurationPtrType DashboardBarChartConfigurationArgs

func DashboardBarChartConfigurationPtr(v *DashboardBarChartConfigurationArgs) DashboardBarChartConfigurationPtrInput {
	return (*dashboardBarChartConfigurationPtrType)(v)
}

func (*dashboardBarChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartConfiguration)(nil)).Elem()
}

func (i *dashboardBarChartConfigurationPtrType) ToDashboardBarChartConfigurationPtrOutput() DashboardBarChartConfigurationPtrOutput {
	return i.ToDashboardBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardBarChartConfigurationPtrType) ToDashboardBarChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardBarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartConfigurationPtrOutput)
}

type DashboardBarChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardBarChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartConfiguration)(nil)).Elem()
}

func (o DashboardBarChartConfigurationOutput) ToDashboardBarChartConfigurationOutput() DashboardBarChartConfigurationOutput {
	return o
}

func (o DashboardBarChartConfigurationOutput) ToDashboardBarChartConfigurationOutputWithContext(ctx context.Context) DashboardBarChartConfigurationOutput {
	return o
}

func (o DashboardBarChartConfigurationOutput) ToDashboardBarChartConfigurationPtrOutput() DashboardBarChartConfigurationPtrOutput {
	return o.ToDashboardBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardBarChartConfigurationOutput) ToDashboardBarChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardBarChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBarChartConfiguration) *DashboardBarChartConfiguration {
		return &v
	}).(DashboardBarChartConfigurationPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) BarsArrangement() DashboardBarsArrangementPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardBarsArrangement { return v.BarsArrangement }).(DashboardBarsArrangementPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) CategoryAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardAxisDisplayOptions { return v.CategoryAxis }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardChartAxisLabelOptions { return v.CategoryLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) ColorLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardChartAxisLabelOptions { return v.ColorLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) ContributionAnalysisDefaults() DashboardContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) []DashboardContributionAnalysisDefault {
		return v.ContributionAnalysisDefaults
	}).(DashboardContributionAnalysisDefaultArrayOutput)
}

func (o DashboardBarChartConfigurationOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardDataLabelOptions { return v.DataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) FieldWells() DashboardBarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardBarChartFieldWells { return v.FieldWells }).(DashboardBarChartFieldWellsPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) Orientation() DashboardBarChartOrientationPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardBarChartOrientation { return v.Orientation }).(DashboardBarChartOrientationPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) ReferenceLines() DashboardReferenceLineArrayOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) []DashboardReferenceLine { return v.ReferenceLines }).(DashboardReferenceLineArrayOutput)
}

func (o DashboardBarChartConfigurationOutput) SmallMultiplesOptions() DashboardSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardSmallMultiplesOptions { return v.SmallMultiplesOptions }).(DashboardSmallMultiplesOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) SortConfiguration() DashboardBarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardBarChartSortConfiguration { return v.SortConfiguration }).(DashboardBarChartSortConfigurationPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) ValueAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardAxisDisplayOptions { return v.ValueAxis }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) ValueLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardChartAxisLabelOptions { return v.ValueLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardBarChartConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

type DashboardBarChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardBarChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartConfiguration)(nil)).Elem()
}

func (o DashboardBarChartConfigurationPtrOutput) ToDashboardBarChartConfigurationPtrOutput() DashboardBarChartConfigurationPtrOutput {
	return o
}

func (o DashboardBarChartConfigurationPtrOutput) ToDashboardBarChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardBarChartConfigurationPtrOutput {
	return o
}

func (o DashboardBarChartConfigurationPtrOutput) Elem() DashboardBarChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) DashboardBarChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardBarChartConfiguration
		return ret
	}).(DashboardBarChartConfigurationOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) BarsArrangement() DashboardBarsArrangementPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardBarsArrangement {
		if v == nil {
			return nil
		}
		return v.BarsArrangement
	}).(DashboardBarsArrangementPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) CategoryAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) ColorLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) ContributionAnalysisDefaults() DashboardContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) []DashboardContributionAnalysisDefault {
		if v == nil {
			return nil
		}
		return v.ContributionAnalysisDefaults
	}).(DashboardContributionAnalysisDefaultArrayOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) FieldWells() DashboardBarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardBarChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardBarChartFieldWellsPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) Orientation() DashboardBarChartOrientationPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardBarChartOrientation {
		if v == nil {
			return nil
		}
		return v.Orientation
	}).(DashboardBarChartOrientationPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) ReferenceLines() DashboardReferenceLineArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) []DashboardReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(DashboardReferenceLineArrayOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) SmallMultiplesOptions() DashboardSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardSmallMultiplesOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesOptions
	}).(DashboardSmallMultiplesOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) SortConfiguration() DashboardBarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardBarChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardBarChartSortConfigurationPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) ValueAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.ValueAxis
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) ValueLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ValueLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardBarChartConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardBarChartConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

type DashboardBarChartFieldWells struct {
	BarChartAggregatedFieldWells *DashboardBarChartAggregatedFieldWells `pulumi:"barChartAggregatedFieldWells"`
}

// DashboardBarChartFieldWellsInput is an input type that accepts DashboardBarChartFieldWellsArgs and DashboardBarChartFieldWellsOutput values.
// You can construct a concrete instance of `DashboardBarChartFieldWellsInput` via:
//
//	DashboardBarChartFieldWellsArgs{...}
type DashboardBarChartFieldWellsInput interface {
	pulumi.Input

	ToDashboardBarChartFieldWellsOutput() DashboardBarChartFieldWellsOutput
	ToDashboardBarChartFieldWellsOutputWithContext(context.Context) DashboardBarChartFieldWellsOutput
}

type DashboardBarChartFieldWellsArgs struct {
	BarChartAggregatedFieldWells DashboardBarChartAggregatedFieldWellsPtrInput `pulumi:"barChartAggregatedFieldWells"`
}

func (DashboardBarChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartFieldWells)(nil)).Elem()
}

func (i DashboardBarChartFieldWellsArgs) ToDashboardBarChartFieldWellsOutput() DashboardBarChartFieldWellsOutput {
	return i.ToDashboardBarChartFieldWellsOutputWithContext(context.Background())
}

func (i DashboardBarChartFieldWellsArgs) ToDashboardBarChartFieldWellsOutputWithContext(ctx context.Context) DashboardBarChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartFieldWellsOutput)
}

func (i DashboardBarChartFieldWellsArgs) ToDashboardBarChartFieldWellsPtrOutput() DashboardBarChartFieldWellsPtrOutput {
	return i.ToDashboardBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardBarChartFieldWellsArgs) ToDashboardBarChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartFieldWellsOutput).ToDashboardBarChartFieldWellsPtrOutputWithContext(ctx)
}

// DashboardBarChartFieldWellsPtrInput is an input type that accepts DashboardBarChartFieldWellsArgs, DashboardBarChartFieldWellsPtr and DashboardBarChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardBarChartFieldWellsPtrInput` via:
//
//	        DashboardBarChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardBarChartFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardBarChartFieldWellsPtrOutput() DashboardBarChartFieldWellsPtrOutput
	ToDashboardBarChartFieldWellsPtrOutputWithContext(context.Context) DashboardBarChartFieldWellsPtrOutput
}

type dashboardBarChartFieldWellsPtrType DashboardBarChartFieldWellsArgs

func DashboardBarChartFieldWellsPtr(v *DashboardBarChartFieldWellsArgs) DashboardBarChartFieldWellsPtrInput {
	return (*dashboardBarChartFieldWellsPtrType)(v)
}

func (*dashboardBarChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartFieldWells)(nil)).Elem()
}

func (i *dashboardBarChartFieldWellsPtrType) ToDashboardBarChartFieldWellsPtrOutput() DashboardBarChartFieldWellsPtrOutput {
	return i.ToDashboardBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardBarChartFieldWellsPtrType) ToDashboardBarChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartFieldWellsPtrOutput)
}

type DashboardBarChartFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardBarChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartFieldWells)(nil)).Elem()
}

func (o DashboardBarChartFieldWellsOutput) ToDashboardBarChartFieldWellsOutput() DashboardBarChartFieldWellsOutput {
	return o
}

func (o DashboardBarChartFieldWellsOutput) ToDashboardBarChartFieldWellsOutputWithContext(ctx context.Context) DashboardBarChartFieldWellsOutput {
	return o
}

func (o DashboardBarChartFieldWellsOutput) ToDashboardBarChartFieldWellsPtrOutput() DashboardBarChartFieldWellsPtrOutput {
	return o.ToDashboardBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardBarChartFieldWellsOutput) ToDashboardBarChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBarChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBarChartFieldWells) *DashboardBarChartFieldWells {
		return &v
	}).(DashboardBarChartFieldWellsPtrOutput)
}

func (o DashboardBarChartFieldWellsOutput) BarChartAggregatedFieldWells() DashboardBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartFieldWells) *DashboardBarChartAggregatedFieldWells {
		return v.BarChartAggregatedFieldWells
	}).(DashboardBarChartAggregatedFieldWellsPtrOutput)
}

type DashboardBarChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardBarChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartFieldWells)(nil)).Elem()
}

func (o DashboardBarChartFieldWellsPtrOutput) ToDashboardBarChartFieldWellsPtrOutput() DashboardBarChartFieldWellsPtrOutput {
	return o
}

func (o DashboardBarChartFieldWellsPtrOutput) ToDashboardBarChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBarChartFieldWellsPtrOutput {
	return o
}

func (o DashboardBarChartFieldWellsPtrOutput) Elem() DashboardBarChartFieldWellsOutput {
	return o.ApplyT(func(v *DashboardBarChartFieldWells) DashboardBarChartFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardBarChartFieldWells
		return ret
	}).(DashboardBarChartFieldWellsOutput)
}

func (o DashboardBarChartFieldWellsPtrOutput) BarChartAggregatedFieldWells() DashboardBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartFieldWells) *DashboardBarChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.BarChartAggregatedFieldWells
	}).(DashboardBarChartAggregatedFieldWellsPtrOutput)
}

type DashboardBarChartSortConfiguration struct {
	CategoryItemsLimit               *DashboardItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort                     []DashboardFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimit                  *DashboardItemsLimitConfiguration `pulumi:"colorItemsLimit"`
	ColorSort                        []DashboardFieldSortOptions       `pulumi:"colorSort"`
	SmallMultiplesLimitConfiguration *DashboardItemsLimitConfiguration `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               []DashboardFieldSortOptions       `pulumi:"smallMultiplesSort"`
}

// DashboardBarChartSortConfigurationInput is an input type that accepts DashboardBarChartSortConfigurationArgs and DashboardBarChartSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardBarChartSortConfigurationInput` via:
//
//	DashboardBarChartSortConfigurationArgs{...}
type DashboardBarChartSortConfigurationInput interface {
	pulumi.Input

	ToDashboardBarChartSortConfigurationOutput() DashboardBarChartSortConfigurationOutput
	ToDashboardBarChartSortConfigurationOutputWithContext(context.Context) DashboardBarChartSortConfigurationOutput
}

type DashboardBarChartSortConfigurationArgs struct {
	CategoryItemsLimit               DashboardItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort                     DashboardFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimit                  DashboardItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimit"`
	ColorSort                        DashboardFieldSortOptionsArrayInput      `pulumi:"colorSort"`
	SmallMultiplesLimitConfiguration DashboardItemsLimitConfigurationPtrInput `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               DashboardFieldSortOptionsArrayInput      `pulumi:"smallMultiplesSort"`
}

func (DashboardBarChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartSortConfiguration)(nil)).Elem()
}

func (i DashboardBarChartSortConfigurationArgs) ToDashboardBarChartSortConfigurationOutput() DashboardBarChartSortConfigurationOutput {
	return i.ToDashboardBarChartSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardBarChartSortConfigurationArgs) ToDashboardBarChartSortConfigurationOutputWithContext(ctx context.Context) DashboardBarChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartSortConfigurationOutput)
}

func (i DashboardBarChartSortConfigurationArgs) ToDashboardBarChartSortConfigurationPtrOutput() DashboardBarChartSortConfigurationPtrOutput {
	return i.ToDashboardBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardBarChartSortConfigurationArgs) ToDashboardBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardBarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartSortConfigurationOutput).ToDashboardBarChartSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardBarChartSortConfigurationPtrInput is an input type that accepts DashboardBarChartSortConfigurationArgs, DashboardBarChartSortConfigurationPtr and DashboardBarChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardBarChartSortConfigurationPtrInput` via:
//
//	        DashboardBarChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardBarChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardBarChartSortConfigurationPtrOutput() DashboardBarChartSortConfigurationPtrOutput
	ToDashboardBarChartSortConfigurationPtrOutputWithContext(context.Context) DashboardBarChartSortConfigurationPtrOutput
}

type dashboardBarChartSortConfigurationPtrType DashboardBarChartSortConfigurationArgs

func DashboardBarChartSortConfigurationPtr(v *DashboardBarChartSortConfigurationArgs) DashboardBarChartSortConfigurationPtrInput {
	return (*dashboardBarChartSortConfigurationPtrType)(v)
}

func (*dashboardBarChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartSortConfiguration)(nil)).Elem()
}

func (i *dashboardBarChartSortConfigurationPtrType) ToDashboardBarChartSortConfigurationPtrOutput() DashboardBarChartSortConfigurationPtrOutput {
	return i.ToDashboardBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardBarChartSortConfigurationPtrType) ToDashboardBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardBarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartSortConfigurationPtrOutput)
}

type DashboardBarChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardBarChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartSortConfiguration)(nil)).Elem()
}

func (o DashboardBarChartSortConfigurationOutput) ToDashboardBarChartSortConfigurationOutput() DashboardBarChartSortConfigurationOutput {
	return o
}

func (o DashboardBarChartSortConfigurationOutput) ToDashboardBarChartSortConfigurationOutputWithContext(ctx context.Context) DashboardBarChartSortConfigurationOutput {
	return o
}

func (o DashboardBarChartSortConfigurationOutput) ToDashboardBarChartSortConfigurationPtrOutput() DashboardBarChartSortConfigurationPtrOutput {
	return o.ToDashboardBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardBarChartSortConfigurationOutput) ToDashboardBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardBarChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBarChartSortConfiguration) *DashboardBarChartSortConfiguration {
		return &v
	}).(DashboardBarChartSortConfigurationPtrOutput)
}

func (o DashboardBarChartSortConfigurationOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardBarChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardBarChartSortConfigurationOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardBarChartSortConfiguration) []DashboardFieldSortOptions { return v.CategorySort }).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardBarChartSortConfigurationOutput) ColorItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardBarChartSortConfiguration) *DashboardItemsLimitConfiguration { return v.ColorItemsLimit }).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardBarChartSortConfigurationOutput) ColorSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardBarChartSortConfiguration) []DashboardFieldSortOptions { return v.ColorSort }).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardBarChartSortConfigurationOutput) SmallMultiplesLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardBarChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.SmallMultiplesLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardBarChartSortConfigurationOutput) SmallMultiplesSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardBarChartSortConfiguration) []DashboardFieldSortOptions { return v.SmallMultiplesSort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardBarChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardBarChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartSortConfiguration)(nil)).Elem()
}

func (o DashboardBarChartSortConfigurationPtrOutput) ToDashboardBarChartSortConfigurationPtrOutput() DashboardBarChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardBarChartSortConfigurationPtrOutput) ToDashboardBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardBarChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardBarChartSortConfigurationPtrOutput) Elem() DashboardBarChartSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardBarChartSortConfiguration) DashboardBarChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardBarChartSortConfiguration
		return ret
	}).(DashboardBarChartSortConfigurationOutput)
}

func (o DashboardBarChartSortConfigurationPtrOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardBarChartSortConfigurationPtrOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardBarChartSortConfigurationPtrOutput) ColorItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardBarChartSortConfigurationPtrOutput) ColorSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.ColorSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardBarChartSortConfigurationPtrOutput) SmallMultiplesLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardBarChartSortConfigurationPtrOutput) SmallMultiplesSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardBarChartVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardBarChartConfiguration      `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardBarChartVisualInput is an input type that accepts DashboardBarChartVisualArgs and DashboardBarChartVisualOutput values.
// You can construct a concrete instance of `DashboardBarChartVisualInput` via:
//
//	DashboardBarChartVisualArgs{...}
type DashboardBarChartVisualInput interface {
	pulumi.Input

	ToDashboardBarChartVisualOutput() DashboardBarChartVisualOutput
	ToDashboardBarChartVisualOutputWithContext(context.Context) DashboardBarChartVisualOutput
}

type DashboardBarChartVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardBarChartConfigurationPtrInput      `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardBarChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartVisual)(nil)).Elem()
}

func (i DashboardBarChartVisualArgs) ToDashboardBarChartVisualOutput() DashboardBarChartVisualOutput {
	return i.ToDashboardBarChartVisualOutputWithContext(context.Background())
}

func (i DashboardBarChartVisualArgs) ToDashboardBarChartVisualOutputWithContext(ctx context.Context) DashboardBarChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartVisualOutput)
}

func (i DashboardBarChartVisualArgs) ToDashboardBarChartVisualPtrOutput() DashboardBarChartVisualPtrOutput {
	return i.ToDashboardBarChartVisualPtrOutputWithContext(context.Background())
}

func (i DashboardBarChartVisualArgs) ToDashboardBarChartVisualPtrOutputWithContext(ctx context.Context) DashboardBarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartVisualOutput).ToDashboardBarChartVisualPtrOutputWithContext(ctx)
}

// DashboardBarChartVisualPtrInput is an input type that accepts DashboardBarChartVisualArgs, DashboardBarChartVisualPtr and DashboardBarChartVisualPtrOutput values.
// You can construct a concrete instance of `DashboardBarChartVisualPtrInput` via:
//
//	        DashboardBarChartVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardBarChartVisualPtrInput interface {
	pulumi.Input

	ToDashboardBarChartVisualPtrOutput() DashboardBarChartVisualPtrOutput
	ToDashboardBarChartVisualPtrOutputWithContext(context.Context) DashboardBarChartVisualPtrOutput
}

type dashboardBarChartVisualPtrType DashboardBarChartVisualArgs

func DashboardBarChartVisualPtr(v *DashboardBarChartVisualArgs) DashboardBarChartVisualPtrInput {
	return (*dashboardBarChartVisualPtrType)(v)
}

func (*dashboardBarChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartVisual)(nil)).Elem()
}

func (i *dashboardBarChartVisualPtrType) ToDashboardBarChartVisualPtrOutput() DashboardBarChartVisualPtrOutput {
	return i.ToDashboardBarChartVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardBarChartVisualPtrType) ToDashboardBarChartVisualPtrOutputWithContext(ctx context.Context) DashboardBarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBarChartVisualPtrOutput)
}

type DashboardBarChartVisualOutput struct{ *pulumi.OutputState }

func (DashboardBarChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartVisual)(nil)).Elem()
}

func (o DashboardBarChartVisualOutput) ToDashboardBarChartVisualOutput() DashboardBarChartVisualOutput {
	return o
}

func (o DashboardBarChartVisualOutput) ToDashboardBarChartVisualOutputWithContext(ctx context.Context) DashboardBarChartVisualOutput {
	return o
}

func (o DashboardBarChartVisualOutput) ToDashboardBarChartVisualPtrOutput() DashboardBarChartVisualPtrOutput {
	return o.ToDashboardBarChartVisualPtrOutputWithContext(context.Background())
}

func (o DashboardBarChartVisualOutput) ToDashboardBarChartVisualPtrOutputWithContext(ctx context.Context) DashboardBarChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBarChartVisual) *DashboardBarChartVisual {
		return &v
	}).(DashboardBarChartVisualPtrOutput)
}

func (o DashboardBarChartVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardBarChartVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardBarChartVisualOutput) ChartConfiguration() DashboardBarChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardBarChartVisual) *DashboardBarChartConfiguration { return v.ChartConfiguration }).(DashboardBarChartConfigurationPtrOutput)
}

func (o DashboardBarChartVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardBarChartVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardBarChartVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardBarChartVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBarChartVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardBarChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardBarChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardBarChartVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardBarChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartVisual)(nil)).Elem()
}

func (o DashboardBarChartVisualPtrOutput) ToDashboardBarChartVisualPtrOutput() DashboardBarChartVisualPtrOutput {
	return o
}

func (o DashboardBarChartVisualPtrOutput) ToDashboardBarChartVisualPtrOutputWithContext(ctx context.Context) DashboardBarChartVisualPtrOutput {
	return o
}

func (o DashboardBarChartVisualPtrOutput) Elem() DashboardBarChartVisualOutput {
	return o.ApplyT(func(v *DashboardBarChartVisual) DashboardBarChartVisual {
		if v != nil {
			return *v
		}
		var ret DashboardBarChartVisual
		return ret
	}).(DashboardBarChartVisualOutput)
}

func (o DashboardBarChartVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardBarChartVisualPtrOutput) ChartConfiguration() DashboardBarChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartVisual) *DashboardBarChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardBarChartConfigurationPtrOutput)
}

func (o DashboardBarChartVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardBarChartVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardBarChartVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardBarChartVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardBarChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardBarChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardBinCountOptions struct {
	Value *float64 `pulumi:"value"`
}

// DashboardBinCountOptionsInput is an input type that accepts DashboardBinCountOptionsArgs and DashboardBinCountOptionsOutput values.
// You can construct a concrete instance of `DashboardBinCountOptionsInput` via:
//
//	DashboardBinCountOptionsArgs{...}
type DashboardBinCountOptionsInput interface {
	pulumi.Input

	ToDashboardBinCountOptionsOutput() DashboardBinCountOptionsOutput
	ToDashboardBinCountOptionsOutputWithContext(context.Context) DashboardBinCountOptionsOutput
}

type DashboardBinCountOptionsArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (DashboardBinCountOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBinCountOptions)(nil)).Elem()
}

func (i DashboardBinCountOptionsArgs) ToDashboardBinCountOptionsOutput() DashboardBinCountOptionsOutput {
	return i.ToDashboardBinCountOptionsOutputWithContext(context.Background())
}

func (i DashboardBinCountOptionsArgs) ToDashboardBinCountOptionsOutputWithContext(ctx context.Context) DashboardBinCountOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBinCountOptionsOutput)
}

func (i DashboardBinCountOptionsArgs) ToDashboardBinCountOptionsPtrOutput() DashboardBinCountOptionsPtrOutput {
	return i.ToDashboardBinCountOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardBinCountOptionsArgs) ToDashboardBinCountOptionsPtrOutputWithContext(ctx context.Context) DashboardBinCountOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBinCountOptionsOutput).ToDashboardBinCountOptionsPtrOutputWithContext(ctx)
}

// DashboardBinCountOptionsPtrInput is an input type that accepts DashboardBinCountOptionsArgs, DashboardBinCountOptionsPtr and DashboardBinCountOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardBinCountOptionsPtrInput` via:
//
//	        DashboardBinCountOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardBinCountOptionsPtrInput interface {
	pulumi.Input

	ToDashboardBinCountOptionsPtrOutput() DashboardBinCountOptionsPtrOutput
	ToDashboardBinCountOptionsPtrOutputWithContext(context.Context) DashboardBinCountOptionsPtrOutput
}

type dashboardBinCountOptionsPtrType DashboardBinCountOptionsArgs

func DashboardBinCountOptionsPtr(v *DashboardBinCountOptionsArgs) DashboardBinCountOptionsPtrInput {
	return (*dashboardBinCountOptionsPtrType)(v)
}

func (*dashboardBinCountOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBinCountOptions)(nil)).Elem()
}

func (i *dashboardBinCountOptionsPtrType) ToDashboardBinCountOptionsPtrOutput() DashboardBinCountOptionsPtrOutput {
	return i.ToDashboardBinCountOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardBinCountOptionsPtrType) ToDashboardBinCountOptionsPtrOutputWithContext(ctx context.Context) DashboardBinCountOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBinCountOptionsPtrOutput)
}

type DashboardBinCountOptionsOutput struct{ *pulumi.OutputState }

func (DashboardBinCountOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBinCountOptions)(nil)).Elem()
}

func (o DashboardBinCountOptionsOutput) ToDashboardBinCountOptionsOutput() DashboardBinCountOptionsOutput {
	return o
}

func (o DashboardBinCountOptionsOutput) ToDashboardBinCountOptionsOutputWithContext(ctx context.Context) DashboardBinCountOptionsOutput {
	return o
}

func (o DashboardBinCountOptionsOutput) ToDashboardBinCountOptionsPtrOutput() DashboardBinCountOptionsPtrOutput {
	return o.ToDashboardBinCountOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardBinCountOptionsOutput) ToDashboardBinCountOptionsPtrOutputWithContext(ctx context.Context) DashboardBinCountOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBinCountOptions) *DashboardBinCountOptions {
		return &v
	}).(DashboardBinCountOptionsPtrOutput)
}

func (o DashboardBinCountOptionsOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardBinCountOptions) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type DashboardBinCountOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardBinCountOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBinCountOptions)(nil)).Elem()
}

func (o DashboardBinCountOptionsPtrOutput) ToDashboardBinCountOptionsPtrOutput() DashboardBinCountOptionsPtrOutput {
	return o
}

func (o DashboardBinCountOptionsPtrOutput) ToDashboardBinCountOptionsPtrOutputWithContext(ctx context.Context) DashboardBinCountOptionsPtrOutput {
	return o
}

func (o DashboardBinCountOptionsPtrOutput) Elem() DashboardBinCountOptionsOutput {
	return o.ApplyT(func(v *DashboardBinCountOptions) DashboardBinCountOptions {
		if v != nil {
			return *v
		}
		var ret DashboardBinCountOptions
		return ret
	}).(DashboardBinCountOptionsOutput)
}

func (o DashboardBinCountOptionsPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardBinCountOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type DashboardBinWidthOptions struct {
	BinCountLimit *float64 `pulumi:"binCountLimit"`
	Value         *float64 `pulumi:"value"`
}

// DashboardBinWidthOptionsInput is an input type that accepts DashboardBinWidthOptionsArgs and DashboardBinWidthOptionsOutput values.
// You can construct a concrete instance of `DashboardBinWidthOptionsInput` via:
//
//	DashboardBinWidthOptionsArgs{...}
type DashboardBinWidthOptionsInput interface {
	pulumi.Input

	ToDashboardBinWidthOptionsOutput() DashboardBinWidthOptionsOutput
	ToDashboardBinWidthOptionsOutputWithContext(context.Context) DashboardBinWidthOptionsOutput
}

type DashboardBinWidthOptionsArgs struct {
	BinCountLimit pulumi.Float64PtrInput `pulumi:"binCountLimit"`
	Value         pulumi.Float64PtrInput `pulumi:"value"`
}

func (DashboardBinWidthOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBinWidthOptions)(nil)).Elem()
}

func (i DashboardBinWidthOptionsArgs) ToDashboardBinWidthOptionsOutput() DashboardBinWidthOptionsOutput {
	return i.ToDashboardBinWidthOptionsOutputWithContext(context.Background())
}

func (i DashboardBinWidthOptionsArgs) ToDashboardBinWidthOptionsOutputWithContext(ctx context.Context) DashboardBinWidthOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBinWidthOptionsOutput)
}

func (i DashboardBinWidthOptionsArgs) ToDashboardBinWidthOptionsPtrOutput() DashboardBinWidthOptionsPtrOutput {
	return i.ToDashboardBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardBinWidthOptionsArgs) ToDashboardBinWidthOptionsPtrOutputWithContext(ctx context.Context) DashboardBinWidthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBinWidthOptionsOutput).ToDashboardBinWidthOptionsPtrOutputWithContext(ctx)
}

// DashboardBinWidthOptionsPtrInput is an input type that accepts DashboardBinWidthOptionsArgs, DashboardBinWidthOptionsPtr and DashboardBinWidthOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardBinWidthOptionsPtrInput` via:
//
//	        DashboardBinWidthOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardBinWidthOptionsPtrInput interface {
	pulumi.Input

	ToDashboardBinWidthOptionsPtrOutput() DashboardBinWidthOptionsPtrOutput
	ToDashboardBinWidthOptionsPtrOutputWithContext(context.Context) DashboardBinWidthOptionsPtrOutput
}

type dashboardBinWidthOptionsPtrType DashboardBinWidthOptionsArgs

func DashboardBinWidthOptionsPtr(v *DashboardBinWidthOptionsArgs) DashboardBinWidthOptionsPtrInput {
	return (*dashboardBinWidthOptionsPtrType)(v)
}

func (*dashboardBinWidthOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBinWidthOptions)(nil)).Elem()
}

func (i *dashboardBinWidthOptionsPtrType) ToDashboardBinWidthOptionsPtrOutput() DashboardBinWidthOptionsPtrOutput {
	return i.ToDashboardBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardBinWidthOptionsPtrType) ToDashboardBinWidthOptionsPtrOutputWithContext(ctx context.Context) DashboardBinWidthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBinWidthOptionsPtrOutput)
}

type DashboardBinWidthOptionsOutput struct{ *pulumi.OutputState }

func (DashboardBinWidthOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBinWidthOptions)(nil)).Elem()
}

func (o DashboardBinWidthOptionsOutput) ToDashboardBinWidthOptionsOutput() DashboardBinWidthOptionsOutput {
	return o
}

func (o DashboardBinWidthOptionsOutput) ToDashboardBinWidthOptionsOutputWithContext(ctx context.Context) DashboardBinWidthOptionsOutput {
	return o
}

func (o DashboardBinWidthOptionsOutput) ToDashboardBinWidthOptionsPtrOutput() DashboardBinWidthOptionsPtrOutput {
	return o.ToDashboardBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardBinWidthOptionsOutput) ToDashboardBinWidthOptionsPtrOutputWithContext(ctx context.Context) DashboardBinWidthOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBinWidthOptions) *DashboardBinWidthOptions {
		return &v
	}).(DashboardBinWidthOptionsPtrOutput)
}

func (o DashboardBinWidthOptionsOutput) BinCountLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardBinWidthOptions) *float64 { return v.BinCountLimit }).(pulumi.Float64PtrOutput)
}

func (o DashboardBinWidthOptionsOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardBinWidthOptions) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type DashboardBinWidthOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardBinWidthOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBinWidthOptions)(nil)).Elem()
}

func (o DashboardBinWidthOptionsPtrOutput) ToDashboardBinWidthOptionsPtrOutput() DashboardBinWidthOptionsPtrOutput {
	return o
}

func (o DashboardBinWidthOptionsPtrOutput) ToDashboardBinWidthOptionsPtrOutputWithContext(ctx context.Context) DashboardBinWidthOptionsPtrOutput {
	return o
}

func (o DashboardBinWidthOptionsPtrOutput) Elem() DashboardBinWidthOptionsOutput {
	return o.ApplyT(func(v *DashboardBinWidthOptions) DashboardBinWidthOptions {
		if v != nil {
			return *v
		}
		var ret DashboardBinWidthOptions
		return ret
	}).(DashboardBinWidthOptionsOutput)
}

func (o DashboardBinWidthOptionsPtrOutput) BinCountLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardBinWidthOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.BinCountLimit
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardBinWidthOptionsPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardBinWidthOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type DashboardBodySectionConfiguration struct {
	Content                DashboardBodySectionContent             `pulumi:"content"`
	PageBreakConfiguration *DashboardSectionPageBreakConfiguration `pulumi:"pageBreakConfiguration"`
	SectionId              string                                  `pulumi:"sectionId"`
	Style                  *DashboardSectionStyle                  `pulumi:"style"`
}

// DashboardBodySectionConfigurationInput is an input type that accepts DashboardBodySectionConfigurationArgs and DashboardBodySectionConfigurationOutput values.
// You can construct a concrete instance of `DashboardBodySectionConfigurationInput` via:
//
//	DashboardBodySectionConfigurationArgs{...}
type DashboardBodySectionConfigurationInput interface {
	pulumi.Input

	ToDashboardBodySectionConfigurationOutput() DashboardBodySectionConfigurationOutput
	ToDashboardBodySectionConfigurationOutputWithContext(context.Context) DashboardBodySectionConfigurationOutput
}

type DashboardBodySectionConfigurationArgs struct {
	Content                DashboardBodySectionContentInput               `pulumi:"content"`
	PageBreakConfiguration DashboardSectionPageBreakConfigurationPtrInput `pulumi:"pageBreakConfiguration"`
	SectionId              pulumi.StringInput                             `pulumi:"sectionId"`
	Style                  DashboardSectionStylePtrInput                  `pulumi:"style"`
}

func (DashboardBodySectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBodySectionConfiguration)(nil)).Elem()
}

func (i DashboardBodySectionConfigurationArgs) ToDashboardBodySectionConfigurationOutput() DashboardBodySectionConfigurationOutput {
	return i.ToDashboardBodySectionConfigurationOutputWithContext(context.Background())
}

func (i DashboardBodySectionConfigurationArgs) ToDashboardBodySectionConfigurationOutputWithContext(ctx context.Context) DashboardBodySectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBodySectionConfigurationOutput)
}

// DashboardBodySectionConfigurationArrayInput is an input type that accepts DashboardBodySectionConfigurationArray and DashboardBodySectionConfigurationArrayOutput values.
// You can construct a concrete instance of `DashboardBodySectionConfigurationArrayInput` via:
//
//	DashboardBodySectionConfigurationArray{ DashboardBodySectionConfigurationArgs{...} }
type DashboardBodySectionConfigurationArrayInput interface {
	pulumi.Input

	ToDashboardBodySectionConfigurationArrayOutput() DashboardBodySectionConfigurationArrayOutput
	ToDashboardBodySectionConfigurationArrayOutputWithContext(context.Context) DashboardBodySectionConfigurationArrayOutput
}

type DashboardBodySectionConfigurationArray []DashboardBodySectionConfigurationInput

func (DashboardBodySectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardBodySectionConfiguration)(nil)).Elem()
}

func (i DashboardBodySectionConfigurationArray) ToDashboardBodySectionConfigurationArrayOutput() DashboardBodySectionConfigurationArrayOutput {
	return i.ToDashboardBodySectionConfigurationArrayOutputWithContext(context.Background())
}

func (i DashboardBodySectionConfigurationArray) ToDashboardBodySectionConfigurationArrayOutputWithContext(ctx context.Context) DashboardBodySectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBodySectionConfigurationArrayOutput)
}

type DashboardBodySectionConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardBodySectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBodySectionConfiguration)(nil)).Elem()
}

func (o DashboardBodySectionConfigurationOutput) ToDashboardBodySectionConfigurationOutput() DashboardBodySectionConfigurationOutput {
	return o
}

func (o DashboardBodySectionConfigurationOutput) ToDashboardBodySectionConfigurationOutputWithContext(ctx context.Context) DashboardBodySectionConfigurationOutput {
	return o
}

func (o DashboardBodySectionConfigurationOutput) Content() DashboardBodySectionContentOutput {
	return o.ApplyT(func(v DashboardBodySectionConfiguration) DashboardBodySectionContent { return v.Content }).(DashboardBodySectionContentOutput)
}

func (o DashboardBodySectionConfigurationOutput) PageBreakConfiguration() DashboardSectionPageBreakConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardBodySectionConfiguration) *DashboardSectionPageBreakConfiguration {
		return v.PageBreakConfiguration
	}).(DashboardSectionPageBreakConfigurationPtrOutput)
}

func (o DashboardBodySectionConfigurationOutput) SectionId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardBodySectionConfiguration) string { return v.SectionId }).(pulumi.StringOutput)
}

func (o DashboardBodySectionConfigurationOutput) Style() DashboardSectionStylePtrOutput {
	return o.ApplyT(func(v DashboardBodySectionConfiguration) *DashboardSectionStyle { return v.Style }).(DashboardSectionStylePtrOutput)
}

type DashboardBodySectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DashboardBodySectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardBodySectionConfiguration)(nil)).Elem()
}

func (o DashboardBodySectionConfigurationArrayOutput) ToDashboardBodySectionConfigurationArrayOutput() DashboardBodySectionConfigurationArrayOutput {
	return o
}

func (o DashboardBodySectionConfigurationArrayOutput) ToDashboardBodySectionConfigurationArrayOutputWithContext(ctx context.Context) DashboardBodySectionConfigurationArrayOutput {
	return o
}

func (o DashboardBodySectionConfigurationArrayOutput) Index(i pulumi.IntInput) DashboardBodySectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardBodySectionConfiguration {
		return vs[0].([]DashboardBodySectionConfiguration)[vs[1].(int)]
	}).(DashboardBodySectionConfigurationOutput)
}

type DashboardBodySectionContent struct {
	Layout *DashboardSectionLayoutConfiguration `pulumi:"layout"`
}

// DashboardBodySectionContentInput is an input type that accepts DashboardBodySectionContentArgs and DashboardBodySectionContentOutput values.
// You can construct a concrete instance of `DashboardBodySectionContentInput` via:
//
//	DashboardBodySectionContentArgs{...}
type DashboardBodySectionContentInput interface {
	pulumi.Input

	ToDashboardBodySectionContentOutput() DashboardBodySectionContentOutput
	ToDashboardBodySectionContentOutputWithContext(context.Context) DashboardBodySectionContentOutput
}

type DashboardBodySectionContentArgs struct {
	Layout DashboardSectionLayoutConfigurationPtrInput `pulumi:"layout"`
}

func (DashboardBodySectionContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBodySectionContent)(nil)).Elem()
}

func (i DashboardBodySectionContentArgs) ToDashboardBodySectionContentOutput() DashboardBodySectionContentOutput {
	return i.ToDashboardBodySectionContentOutputWithContext(context.Background())
}

func (i DashboardBodySectionContentArgs) ToDashboardBodySectionContentOutputWithContext(ctx context.Context) DashboardBodySectionContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBodySectionContentOutput)
}

type DashboardBodySectionContentOutput struct{ *pulumi.OutputState }

func (DashboardBodySectionContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBodySectionContent)(nil)).Elem()
}

func (o DashboardBodySectionContentOutput) ToDashboardBodySectionContentOutput() DashboardBodySectionContentOutput {
	return o
}

func (o DashboardBodySectionContentOutput) ToDashboardBodySectionContentOutputWithContext(ctx context.Context) DashboardBodySectionContentOutput {
	return o
}

func (o DashboardBodySectionContentOutput) Layout() DashboardSectionLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardBodySectionContent) *DashboardSectionLayoutConfiguration { return v.Layout }).(DashboardSectionLayoutConfigurationPtrOutput)
}

type DashboardBoxPlotAggregatedFieldWells struct {
	GroupBy []DashboardDimensionField `pulumi:"groupBy"`
	Values  []DashboardMeasureField   `pulumi:"values"`
}

// DashboardBoxPlotAggregatedFieldWellsInput is an input type that accepts DashboardBoxPlotAggregatedFieldWellsArgs and DashboardBoxPlotAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardBoxPlotAggregatedFieldWellsInput` via:
//
//	DashboardBoxPlotAggregatedFieldWellsArgs{...}
type DashboardBoxPlotAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardBoxPlotAggregatedFieldWellsOutput() DashboardBoxPlotAggregatedFieldWellsOutput
	ToDashboardBoxPlotAggregatedFieldWellsOutputWithContext(context.Context) DashboardBoxPlotAggregatedFieldWellsOutput
}

type DashboardBoxPlotAggregatedFieldWellsArgs struct {
	GroupBy DashboardDimensionFieldArrayInput `pulumi:"groupBy"`
	Values  DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardBoxPlotAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardBoxPlotAggregatedFieldWellsArgs) ToDashboardBoxPlotAggregatedFieldWellsOutput() DashboardBoxPlotAggregatedFieldWellsOutput {
	return i.ToDashboardBoxPlotAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardBoxPlotAggregatedFieldWellsArgs) ToDashboardBoxPlotAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardBoxPlotAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotAggregatedFieldWellsOutput)
}

func (i DashboardBoxPlotAggregatedFieldWellsArgs) ToDashboardBoxPlotAggregatedFieldWellsPtrOutput() DashboardBoxPlotAggregatedFieldWellsPtrOutput {
	return i.ToDashboardBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardBoxPlotAggregatedFieldWellsArgs) ToDashboardBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotAggregatedFieldWellsOutput).ToDashboardBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardBoxPlotAggregatedFieldWellsPtrInput is an input type that accepts DashboardBoxPlotAggregatedFieldWellsArgs, DashboardBoxPlotAggregatedFieldWellsPtr and DashboardBoxPlotAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardBoxPlotAggregatedFieldWellsPtrInput` via:
//
//	        DashboardBoxPlotAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardBoxPlotAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardBoxPlotAggregatedFieldWellsPtrOutput() DashboardBoxPlotAggregatedFieldWellsPtrOutput
	ToDashboardBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardBoxPlotAggregatedFieldWellsPtrOutput
}

type dashboardBoxPlotAggregatedFieldWellsPtrType DashboardBoxPlotAggregatedFieldWellsArgs

func DashboardBoxPlotAggregatedFieldWellsPtr(v *DashboardBoxPlotAggregatedFieldWellsArgs) DashboardBoxPlotAggregatedFieldWellsPtrInput {
	return (*dashboardBoxPlotAggregatedFieldWellsPtrType)(v)
}

func (*dashboardBoxPlotAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardBoxPlotAggregatedFieldWellsPtrType) ToDashboardBoxPlotAggregatedFieldWellsPtrOutput() DashboardBoxPlotAggregatedFieldWellsPtrOutput {
	return i.ToDashboardBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardBoxPlotAggregatedFieldWellsPtrType) ToDashboardBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotAggregatedFieldWellsPtrOutput)
}

type DashboardBoxPlotAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardBoxPlotAggregatedFieldWellsOutput) ToDashboardBoxPlotAggregatedFieldWellsOutput() DashboardBoxPlotAggregatedFieldWellsOutput {
	return o
}

func (o DashboardBoxPlotAggregatedFieldWellsOutput) ToDashboardBoxPlotAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardBoxPlotAggregatedFieldWellsOutput {
	return o
}

func (o DashboardBoxPlotAggregatedFieldWellsOutput) ToDashboardBoxPlotAggregatedFieldWellsPtrOutput() DashboardBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ToDashboardBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardBoxPlotAggregatedFieldWellsOutput) ToDashboardBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBoxPlotAggregatedFieldWells) *DashboardBoxPlotAggregatedFieldWells {
		return &v
	}).(DashboardBoxPlotAggregatedFieldWellsPtrOutput)
}

func (o DashboardBoxPlotAggregatedFieldWellsOutput) GroupBy() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardBoxPlotAggregatedFieldWells) []DashboardDimensionField { return v.GroupBy }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardBoxPlotAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardBoxPlotAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardBoxPlotAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardBoxPlotAggregatedFieldWellsPtrOutput) ToDashboardBoxPlotAggregatedFieldWellsPtrOutput() DashboardBoxPlotAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardBoxPlotAggregatedFieldWellsPtrOutput) ToDashboardBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardBoxPlotAggregatedFieldWellsPtrOutput) Elem() DashboardBoxPlotAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardBoxPlotAggregatedFieldWells) DashboardBoxPlotAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardBoxPlotAggregatedFieldWells
		return ret
	}).(DashboardBoxPlotAggregatedFieldWellsOutput)
}

func (o DashboardBoxPlotAggregatedFieldWellsPtrOutput) GroupBy() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardBoxPlotAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardBoxPlotAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardBoxPlotAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardBoxPlotChartConfiguration struct {
	BoxPlotOptions             *DashboardBoxPlotOptions           `pulumi:"boxPlotOptions"`
	CategoryAxis               *DashboardAxisDisplayOptions       `pulumi:"categoryAxis"`
	CategoryLabelOptions       *DashboardChartAxisLabelOptions    `pulumi:"categoryLabelOptions"`
	FieldWells                 *DashboardBoxPlotFieldWells        `pulumi:"fieldWells"`
	Legend                     *DashboardLegendOptions            `pulumi:"legend"`
	PrimaryYAxisDisplayOptions *DashboardAxisDisplayOptions       `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   *DashboardChartAxisLabelOptions    `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines             []DashboardReferenceLine           `pulumi:"referenceLines"`
	SortConfiguration          *DashboardBoxPlotSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip                    *DashboardTooltipOptions           `pulumi:"tooltip"`
	VisualPalette              *DashboardVisualPalette            `pulumi:"visualPalette"`
}

// DashboardBoxPlotChartConfigurationInput is an input type that accepts DashboardBoxPlotChartConfigurationArgs and DashboardBoxPlotChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardBoxPlotChartConfigurationInput` via:
//
//	DashboardBoxPlotChartConfigurationArgs{...}
type DashboardBoxPlotChartConfigurationInput interface {
	pulumi.Input

	ToDashboardBoxPlotChartConfigurationOutput() DashboardBoxPlotChartConfigurationOutput
	ToDashboardBoxPlotChartConfigurationOutputWithContext(context.Context) DashboardBoxPlotChartConfigurationOutput
}

type DashboardBoxPlotChartConfigurationArgs struct {
	BoxPlotOptions             DashboardBoxPlotOptionsPtrInput           `pulumi:"boxPlotOptions"`
	CategoryAxis               DashboardAxisDisplayOptionsPtrInput       `pulumi:"categoryAxis"`
	CategoryLabelOptions       DashboardChartAxisLabelOptionsPtrInput    `pulumi:"categoryLabelOptions"`
	FieldWells                 DashboardBoxPlotFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                     DashboardLegendOptionsPtrInput            `pulumi:"legend"`
	PrimaryYAxisDisplayOptions DashboardAxisDisplayOptionsPtrInput       `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   DashboardChartAxisLabelOptionsPtrInput    `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines             DashboardReferenceLineArrayInput          `pulumi:"referenceLines"`
	SortConfiguration          DashboardBoxPlotSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip                    DashboardTooltipOptionsPtrInput           `pulumi:"tooltip"`
	VisualPalette              DashboardVisualPalettePtrInput            `pulumi:"visualPalette"`
}

func (DashboardBoxPlotChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotChartConfiguration)(nil)).Elem()
}

func (i DashboardBoxPlotChartConfigurationArgs) ToDashboardBoxPlotChartConfigurationOutput() DashboardBoxPlotChartConfigurationOutput {
	return i.ToDashboardBoxPlotChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardBoxPlotChartConfigurationArgs) ToDashboardBoxPlotChartConfigurationOutputWithContext(ctx context.Context) DashboardBoxPlotChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotChartConfigurationOutput)
}

func (i DashboardBoxPlotChartConfigurationArgs) ToDashboardBoxPlotChartConfigurationPtrOutput() DashboardBoxPlotChartConfigurationPtrOutput {
	return i.ToDashboardBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardBoxPlotChartConfigurationArgs) ToDashboardBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardBoxPlotChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotChartConfigurationOutput).ToDashboardBoxPlotChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardBoxPlotChartConfigurationPtrInput is an input type that accepts DashboardBoxPlotChartConfigurationArgs, DashboardBoxPlotChartConfigurationPtr and DashboardBoxPlotChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardBoxPlotChartConfigurationPtrInput` via:
//
//	        DashboardBoxPlotChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardBoxPlotChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardBoxPlotChartConfigurationPtrOutput() DashboardBoxPlotChartConfigurationPtrOutput
	ToDashboardBoxPlotChartConfigurationPtrOutputWithContext(context.Context) DashboardBoxPlotChartConfigurationPtrOutput
}

type dashboardBoxPlotChartConfigurationPtrType DashboardBoxPlotChartConfigurationArgs

func DashboardBoxPlotChartConfigurationPtr(v *DashboardBoxPlotChartConfigurationArgs) DashboardBoxPlotChartConfigurationPtrInput {
	return (*dashboardBoxPlotChartConfigurationPtrType)(v)
}

func (*dashboardBoxPlotChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotChartConfiguration)(nil)).Elem()
}

func (i *dashboardBoxPlotChartConfigurationPtrType) ToDashboardBoxPlotChartConfigurationPtrOutput() DashboardBoxPlotChartConfigurationPtrOutput {
	return i.ToDashboardBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardBoxPlotChartConfigurationPtrType) ToDashboardBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardBoxPlotChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotChartConfigurationPtrOutput)
}

type DashboardBoxPlotChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotChartConfiguration)(nil)).Elem()
}

func (o DashboardBoxPlotChartConfigurationOutput) ToDashboardBoxPlotChartConfigurationOutput() DashboardBoxPlotChartConfigurationOutput {
	return o
}

func (o DashboardBoxPlotChartConfigurationOutput) ToDashboardBoxPlotChartConfigurationOutputWithContext(ctx context.Context) DashboardBoxPlotChartConfigurationOutput {
	return o
}

func (o DashboardBoxPlotChartConfigurationOutput) ToDashboardBoxPlotChartConfigurationPtrOutput() DashboardBoxPlotChartConfigurationPtrOutput {
	return o.ToDashboardBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardBoxPlotChartConfigurationOutput) ToDashboardBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardBoxPlotChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBoxPlotChartConfiguration) *DashboardBoxPlotChartConfiguration {
		return &v
	}).(DashboardBoxPlotChartConfigurationPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) BoxPlotOptions() DashboardBoxPlotOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) *DashboardBoxPlotOptions { return v.BoxPlotOptions }).(DashboardBoxPlotOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) CategoryAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) *DashboardAxisDisplayOptions { return v.CategoryAxis }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) FieldWells() DashboardBoxPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) *DashboardBoxPlotFieldWells { return v.FieldWells }).(DashboardBoxPlotFieldWellsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) PrimaryYAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) *DashboardAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) PrimaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) ReferenceLines() DashboardReferenceLineArrayOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) []DashboardReferenceLine { return v.ReferenceLines }).(DashboardReferenceLineArrayOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) SortConfiguration() DashboardBoxPlotSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) *DashboardBoxPlotSortConfiguration {
		return v.SortConfiguration
	}).(DashboardBoxPlotSortConfigurationPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotChartConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

type DashboardBoxPlotChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotChartConfiguration)(nil)).Elem()
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) ToDashboardBoxPlotChartConfigurationPtrOutput() DashboardBoxPlotChartConfigurationPtrOutput {
	return o
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) ToDashboardBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardBoxPlotChartConfigurationPtrOutput {
	return o
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) Elem() DashboardBoxPlotChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) DashboardBoxPlotChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardBoxPlotChartConfiguration
		return ret
	}).(DashboardBoxPlotChartConfigurationOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) BoxPlotOptions() DashboardBoxPlotOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) *DashboardBoxPlotOptions {
		if v == nil {
			return nil
		}
		return v.BoxPlotOptions
	}).(DashboardBoxPlotOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) CategoryAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) FieldWells() DashboardBoxPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) *DashboardBoxPlotFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardBoxPlotFieldWellsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) ReferenceLines() DashboardReferenceLineArrayOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) []DashboardReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(DashboardReferenceLineArrayOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) SortConfiguration() DashboardBoxPlotSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) *DashboardBoxPlotSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardBoxPlotSortConfigurationPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardBoxPlotChartConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotChartConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

type DashboardBoxPlotFieldWells struct {
	BoxPlotAggregatedFieldWells *DashboardBoxPlotAggregatedFieldWells `pulumi:"boxPlotAggregatedFieldWells"`
}

// DashboardBoxPlotFieldWellsInput is an input type that accepts DashboardBoxPlotFieldWellsArgs and DashboardBoxPlotFieldWellsOutput values.
// You can construct a concrete instance of `DashboardBoxPlotFieldWellsInput` via:
//
//	DashboardBoxPlotFieldWellsArgs{...}
type DashboardBoxPlotFieldWellsInput interface {
	pulumi.Input

	ToDashboardBoxPlotFieldWellsOutput() DashboardBoxPlotFieldWellsOutput
	ToDashboardBoxPlotFieldWellsOutputWithContext(context.Context) DashboardBoxPlotFieldWellsOutput
}

type DashboardBoxPlotFieldWellsArgs struct {
	BoxPlotAggregatedFieldWells DashboardBoxPlotAggregatedFieldWellsPtrInput `pulumi:"boxPlotAggregatedFieldWells"`
}

func (DashboardBoxPlotFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotFieldWells)(nil)).Elem()
}

func (i DashboardBoxPlotFieldWellsArgs) ToDashboardBoxPlotFieldWellsOutput() DashboardBoxPlotFieldWellsOutput {
	return i.ToDashboardBoxPlotFieldWellsOutputWithContext(context.Background())
}

func (i DashboardBoxPlotFieldWellsArgs) ToDashboardBoxPlotFieldWellsOutputWithContext(ctx context.Context) DashboardBoxPlotFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotFieldWellsOutput)
}

func (i DashboardBoxPlotFieldWellsArgs) ToDashboardBoxPlotFieldWellsPtrOutput() DashboardBoxPlotFieldWellsPtrOutput {
	return i.ToDashboardBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardBoxPlotFieldWellsArgs) ToDashboardBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotFieldWellsOutput).ToDashboardBoxPlotFieldWellsPtrOutputWithContext(ctx)
}

// DashboardBoxPlotFieldWellsPtrInput is an input type that accepts DashboardBoxPlotFieldWellsArgs, DashboardBoxPlotFieldWellsPtr and DashboardBoxPlotFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardBoxPlotFieldWellsPtrInput` via:
//
//	        DashboardBoxPlotFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardBoxPlotFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardBoxPlotFieldWellsPtrOutput() DashboardBoxPlotFieldWellsPtrOutput
	ToDashboardBoxPlotFieldWellsPtrOutputWithContext(context.Context) DashboardBoxPlotFieldWellsPtrOutput
}

type dashboardBoxPlotFieldWellsPtrType DashboardBoxPlotFieldWellsArgs

func DashboardBoxPlotFieldWellsPtr(v *DashboardBoxPlotFieldWellsArgs) DashboardBoxPlotFieldWellsPtrInput {
	return (*dashboardBoxPlotFieldWellsPtrType)(v)
}

func (*dashboardBoxPlotFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotFieldWells)(nil)).Elem()
}

func (i *dashboardBoxPlotFieldWellsPtrType) ToDashboardBoxPlotFieldWellsPtrOutput() DashboardBoxPlotFieldWellsPtrOutput {
	return i.ToDashboardBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardBoxPlotFieldWellsPtrType) ToDashboardBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotFieldWellsPtrOutput)
}

type DashboardBoxPlotFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotFieldWells)(nil)).Elem()
}

func (o DashboardBoxPlotFieldWellsOutput) ToDashboardBoxPlotFieldWellsOutput() DashboardBoxPlotFieldWellsOutput {
	return o
}

func (o DashboardBoxPlotFieldWellsOutput) ToDashboardBoxPlotFieldWellsOutputWithContext(ctx context.Context) DashboardBoxPlotFieldWellsOutput {
	return o
}

func (o DashboardBoxPlotFieldWellsOutput) ToDashboardBoxPlotFieldWellsPtrOutput() DashboardBoxPlotFieldWellsPtrOutput {
	return o.ToDashboardBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardBoxPlotFieldWellsOutput) ToDashboardBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBoxPlotFieldWells) *DashboardBoxPlotFieldWells {
		return &v
	}).(DashboardBoxPlotFieldWellsPtrOutput)
}

func (o DashboardBoxPlotFieldWellsOutput) BoxPlotAggregatedFieldWells() DashboardBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotFieldWells) *DashboardBoxPlotAggregatedFieldWells {
		return v.BoxPlotAggregatedFieldWells
	}).(DashboardBoxPlotAggregatedFieldWellsPtrOutput)
}

type DashboardBoxPlotFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotFieldWells)(nil)).Elem()
}

func (o DashboardBoxPlotFieldWellsPtrOutput) ToDashboardBoxPlotFieldWellsPtrOutput() DashboardBoxPlotFieldWellsPtrOutput {
	return o
}

func (o DashboardBoxPlotFieldWellsPtrOutput) ToDashboardBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotFieldWellsPtrOutput {
	return o
}

func (o DashboardBoxPlotFieldWellsPtrOutput) Elem() DashboardBoxPlotFieldWellsOutput {
	return o.ApplyT(func(v *DashboardBoxPlotFieldWells) DashboardBoxPlotFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardBoxPlotFieldWells
		return ret
	}).(DashboardBoxPlotFieldWellsOutput)
}

func (o DashboardBoxPlotFieldWellsPtrOutput) BoxPlotAggregatedFieldWells() DashboardBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotFieldWells) *DashboardBoxPlotAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.BoxPlotAggregatedFieldWells
	}).(DashboardBoxPlotAggregatedFieldWellsPtrOutput)
}

type DashboardBoxPlotOptions struct {
	AllDataPointsVisibility *DashboardVisibility          `pulumi:"allDataPointsVisibility"`
	OutlierVisibility       *DashboardVisibility          `pulumi:"outlierVisibility"`
	StyleOptions            *DashboardBoxPlotStyleOptions `pulumi:"styleOptions"`
}

// DashboardBoxPlotOptionsInput is an input type that accepts DashboardBoxPlotOptionsArgs and DashboardBoxPlotOptionsOutput values.
// You can construct a concrete instance of `DashboardBoxPlotOptionsInput` via:
//
//	DashboardBoxPlotOptionsArgs{...}
type DashboardBoxPlotOptionsInput interface {
	pulumi.Input

	ToDashboardBoxPlotOptionsOutput() DashboardBoxPlotOptionsOutput
	ToDashboardBoxPlotOptionsOutputWithContext(context.Context) DashboardBoxPlotOptionsOutput
}

type DashboardBoxPlotOptionsArgs struct {
	AllDataPointsVisibility DashboardVisibilityPtrInput          `pulumi:"allDataPointsVisibility"`
	OutlierVisibility       DashboardVisibilityPtrInput          `pulumi:"outlierVisibility"`
	StyleOptions            DashboardBoxPlotStyleOptionsPtrInput `pulumi:"styleOptions"`
}

func (DashboardBoxPlotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotOptions)(nil)).Elem()
}

func (i DashboardBoxPlotOptionsArgs) ToDashboardBoxPlotOptionsOutput() DashboardBoxPlotOptionsOutput {
	return i.ToDashboardBoxPlotOptionsOutputWithContext(context.Background())
}

func (i DashboardBoxPlotOptionsArgs) ToDashboardBoxPlotOptionsOutputWithContext(ctx context.Context) DashboardBoxPlotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotOptionsOutput)
}

func (i DashboardBoxPlotOptionsArgs) ToDashboardBoxPlotOptionsPtrOutput() DashboardBoxPlotOptionsPtrOutput {
	return i.ToDashboardBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardBoxPlotOptionsArgs) ToDashboardBoxPlotOptionsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotOptionsOutput).ToDashboardBoxPlotOptionsPtrOutputWithContext(ctx)
}

// DashboardBoxPlotOptionsPtrInput is an input type that accepts DashboardBoxPlotOptionsArgs, DashboardBoxPlotOptionsPtr and DashboardBoxPlotOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardBoxPlotOptionsPtrInput` via:
//
//	        DashboardBoxPlotOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardBoxPlotOptionsPtrInput interface {
	pulumi.Input

	ToDashboardBoxPlotOptionsPtrOutput() DashboardBoxPlotOptionsPtrOutput
	ToDashboardBoxPlotOptionsPtrOutputWithContext(context.Context) DashboardBoxPlotOptionsPtrOutput
}

type dashboardBoxPlotOptionsPtrType DashboardBoxPlotOptionsArgs

func DashboardBoxPlotOptionsPtr(v *DashboardBoxPlotOptionsArgs) DashboardBoxPlotOptionsPtrInput {
	return (*dashboardBoxPlotOptionsPtrType)(v)
}

func (*dashboardBoxPlotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotOptions)(nil)).Elem()
}

func (i *dashboardBoxPlotOptionsPtrType) ToDashboardBoxPlotOptionsPtrOutput() DashboardBoxPlotOptionsPtrOutput {
	return i.ToDashboardBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardBoxPlotOptionsPtrType) ToDashboardBoxPlotOptionsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotOptionsPtrOutput)
}

type DashboardBoxPlotOptionsOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotOptions)(nil)).Elem()
}

func (o DashboardBoxPlotOptionsOutput) ToDashboardBoxPlotOptionsOutput() DashboardBoxPlotOptionsOutput {
	return o
}

func (o DashboardBoxPlotOptionsOutput) ToDashboardBoxPlotOptionsOutputWithContext(ctx context.Context) DashboardBoxPlotOptionsOutput {
	return o
}

func (o DashboardBoxPlotOptionsOutput) ToDashboardBoxPlotOptionsPtrOutput() DashboardBoxPlotOptionsPtrOutput {
	return o.ToDashboardBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardBoxPlotOptionsOutput) ToDashboardBoxPlotOptionsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBoxPlotOptions) *DashboardBoxPlotOptions {
		return &v
	}).(DashboardBoxPlotOptionsPtrOutput)
}

func (o DashboardBoxPlotOptionsOutput) AllDataPointsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotOptions) *DashboardVisibility { return v.AllDataPointsVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardBoxPlotOptionsOutput) OutlierVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotOptions) *DashboardVisibility { return v.OutlierVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardBoxPlotOptionsOutput) StyleOptions() DashboardBoxPlotStyleOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotOptions) *DashboardBoxPlotStyleOptions { return v.StyleOptions }).(DashboardBoxPlotStyleOptionsPtrOutput)
}

type DashboardBoxPlotOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotOptions)(nil)).Elem()
}

func (o DashboardBoxPlotOptionsPtrOutput) ToDashboardBoxPlotOptionsPtrOutput() DashboardBoxPlotOptionsPtrOutput {
	return o
}

func (o DashboardBoxPlotOptionsPtrOutput) ToDashboardBoxPlotOptionsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotOptionsPtrOutput {
	return o
}

func (o DashboardBoxPlotOptionsPtrOutput) Elem() DashboardBoxPlotOptionsOutput {
	return o.ApplyT(func(v *DashboardBoxPlotOptions) DashboardBoxPlotOptions {
		if v != nil {
			return *v
		}
		var ret DashboardBoxPlotOptions
		return ret
	}).(DashboardBoxPlotOptionsOutput)
}

func (o DashboardBoxPlotOptionsPtrOutput) AllDataPointsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.AllDataPointsVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardBoxPlotOptionsPtrOutput) OutlierVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.OutlierVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardBoxPlotOptionsPtrOutput) StyleOptions() DashboardBoxPlotStyleOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotOptions) *DashboardBoxPlotStyleOptions {
		if v == nil {
			return nil
		}
		return v.StyleOptions
	}).(DashboardBoxPlotStyleOptionsPtrOutput)
}

type DashboardBoxPlotSortConfiguration struct {
	CategorySort            []DashboardFieldSortOptions       `pulumi:"categorySort"`
	PaginationConfiguration *DashboardPaginationConfiguration `pulumi:"paginationConfiguration"`
}

// DashboardBoxPlotSortConfigurationInput is an input type that accepts DashboardBoxPlotSortConfigurationArgs and DashboardBoxPlotSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardBoxPlotSortConfigurationInput` via:
//
//	DashboardBoxPlotSortConfigurationArgs{...}
type DashboardBoxPlotSortConfigurationInput interface {
	pulumi.Input

	ToDashboardBoxPlotSortConfigurationOutput() DashboardBoxPlotSortConfigurationOutput
	ToDashboardBoxPlotSortConfigurationOutputWithContext(context.Context) DashboardBoxPlotSortConfigurationOutput
}

type DashboardBoxPlotSortConfigurationArgs struct {
	CategorySort            DashboardFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	PaginationConfiguration DashboardPaginationConfigurationPtrInput `pulumi:"paginationConfiguration"`
}

func (DashboardBoxPlotSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotSortConfiguration)(nil)).Elem()
}

func (i DashboardBoxPlotSortConfigurationArgs) ToDashboardBoxPlotSortConfigurationOutput() DashboardBoxPlotSortConfigurationOutput {
	return i.ToDashboardBoxPlotSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardBoxPlotSortConfigurationArgs) ToDashboardBoxPlotSortConfigurationOutputWithContext(ctx context.Context) DashboardBoxPlotSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotSortConfigurationOutput)
}

func (i DashboardBoxPlotSortConfigurationArgs) ToDashboardBoxPlotSortConfigurationPtrOutput() DashboardBoxPlotSortConfigurationPtrOutput {
	return i.ToDashboardBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardBoxPlotSortConfigurationArgs) ToDashboardBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardBoxPlotSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotSortConfigurationOutput).ToDashboardBoxPlotSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardBoxPlotSortConfigurationPtrInput is an input type that accepts DashboardBoxPlotSortConfigurationArgs, DashboardBoxPlotSortConfigurationPtr and DashboardBoxPlotSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardBoxPlotSortConfigurationPtrInput` via:
//
//	        DashboardBoxPlotSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardBoxPlotSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardBoxPlotSortConfigurationPtrOutput() DashboardBoxPlotSortConfigurationPtrOutput
	ToDashboardBoxPlotSortConfigurationPtrOutputWithContext(context.Context) DashboardBoxPlotSortConfigurationPtrOutput
}

type dashboardBoxPlotSortConfigurationPtrType DashboardBoxPlotSortConfigurationArgs

func DashboardBoxPlotSortConfigurationPtr(v *DashboardBoxPlotSortConfigurationArgs) DashboardBoxPlotSortConfigurationPtrInput {
	return (*dashboardBoxPlotSortConfigurationPtrType)(v)
}

func (*dashboardBoxPlotSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotSortConfiguration)(nil)).Elem()
}

func (i *dashboardBoxPlotSortConfigurationPtrType) ToDashboardBoxPlotSortConfigurationPtrOutput() DashboardBoxPlotSortConfigurationPtrOutput {
	return i.ToDashboardBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardBoxPlotSortConfigurationPtrType) ToDashboardBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardBoxPlotSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotSortConfigurationPtrOutput)
}

type DashboardBoxPlotSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotSortConfiguration)(nil)).Elem()
}

func (o DashboardBoxPlotSortConfigurationOutput) ToDashboardBoxPlotSortConfigurationOutput() DashboardBoxPlotSortConfigurationOutput {
	return o
}

func (o DashboardBoxPlotSortConfigurationOutput) ToDashboardBoxPlotSortConfigurationOutputWithContext(ctx context.Context) DashboardBoxPlotSortConfigurationOutput {
	return o
}

func (o DashboardBoxPlotSortConfigurationOutput) ToDashboardBoxPlotSortConfigurationPtrOutput() DashboardBoxPlotSortConfigurationPtrOutput {
	return o.ToDashboardBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardBoxPlotSortConfigurationOutput) ToDashboardBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardBoxPlotSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBoxPlotSortConfiguration) *DashboardBoxPlotSortConfiguration {
		return &v
	}).(DashboardBoxPlotSortConfigurationPtrOutput)
}

func (o DashboardBoxPlotSortConfigurationOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardBoxPlotSortConfiguration) []DashboardFieldSortOptions { return v.CategorySort }).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardBoxPlotSortConfigurationOutput) PaginationConfiguration() DashboardPaginationConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotSortConfiguration) *DashboardPaginationConfiguration {
		return v.PaginationConfiguration
	}).(DashboardPaginationConfigurationPtrOutput)
}

type DashboardBoxPlotSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotSortConfiguration)(nil)).Elem()
}

func (o DashboardBoxPlotSortConfigurationPtrOutput) ToDashboardBoxPlotSortConfigurationPtrOutput() DashboardBoxPlotSortConfigurationPtrOutput {
	return o
}

func (o DashboardBoxPlotSortConfigurationPtrOutput) ToDashboardBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardBoxPlotSortConfigurationPtrOutput {
	return o
}

func (o DashboardBoxPlotSortConfigurationPtrOutput) Elem() DashboardBoxPlotSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardBoxPlotSortConfiguration) DashboardBoxPlotSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardBoxPlotSortConfiguration
		return ret
	}).(DashboardBoxPlotSortConfigurationOutput)
}

func (o DashboardBoxPlotSortConfigurationPtrOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardBoxPlotSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardBoxPlotSortConfigurationPtrOutput) PaginationConfiguration() DashboardPaginationConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotSortConfiguration) *DashboardPaginationConfiguration {
		if v == nil {
			return nil
		}
		return v.PaginationConfiguration
	}).(DashboardPaginationConfigurationPtrOutput)
}

type DashboardBoxPlotStyleOptions struct {
	FillStyle *DashboardBoxPlotFillStyle `pulumi:"fillStyle"`
}

// DashboardBoxPlotStyleOptionsInput is an input type that accepts DashboardBoxPlotStyleOptionsArgs and DashboardBoxPlotStyleOptionsOutput values.
// You can construct a concrete instance of `DashboardBoxPlotStyleOptionsInput` via:
//
//	DashboardBoxPlotStyleOptionsArgs{...}
type DashboardBoxPlotStyleOptionsInput interface {
	pulumi.Input

	ToDashboardBoxPlotStyleOptionsOutput() DashboardBoxPlotStyleOptionsOutput
	ToDashboardBoxPlotStyleOptionsOutputWithContext(context.Context) DashboardBoxPlotStyleOptionsOutput
}

type DashboardBoxPlotStyleOptionsArgs struct {
	FillStyle DashboardBoxPlotFillStylePtrInput `pulumi:"fillStyle"`
}

func (DashboardBoxPlotStyleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotStyleOptions)(nil)).Elem()
}

func (i DashboardBoxPlotStyleOptionsArgs) ToDashboardBoxPlotStyleOptionsOutput() DashboardBoxPlotStyleOptionsOutput {
	return i.ToDashboardBoxPlotStyleOptionsOutputWithContext(context.Background())
}

func (i DashboardBoxPlotStyleOptionsArgs) ToDashboardBoxPlotStyleOptionsOutputWithContext(ctx context.Context) DashboardBoxPlotStyleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotStyleOptionsOutput)
}

func (i DashboardBoxPlotStyleOptionsArgs) ToDashboardBoxPlotStyleOptionsPtrOutput() DashboardBoxPlotStyleOptionsPtrOutput {
	return i.ToDashboardBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardBoxPlotStyleOptionsArgs) ToDashboardBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotStyleOptionsOutput).ToDashboardBoxPlotStyleOptionsPtrOutputWithContext(ctx)
}

// DashboardBoxPlotStyleOptionsPtrInput is an input type that accepts DashboardBoxPlotStyleOptionsArgs, DashboardBoxPlotStyleOptionsPtr and DashboardBoxPlotStyleOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardBoxPlotStyleOptionsPtrInput` via:
//
//	        DashboardBoxPlotStyleOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardBoxPlotStyleOptionsPtrInput interface {
	pulumi.Input

	ToDashboardBoxPlotStyleOptionsPtrOutput() DashboardBoxPlotStyleOptionsPtrOutput
	ToDashboardBoxPlotStyleOptionsPtrOutputWithContext(context.Context) DashboardBoxPlotStyleOptionsPtrOutput
}

type dashboardBoxPlotStyleOptionsPtrType DashboardBoxPlotStyleOptionsArgs

func DashboardBoxPlotStyleOptionsPtr(v *DashboardBoxPlotStyleOptionsArgs) DashboardBoxPlotStyleOptionsPtrInput {
	return (*dashboardBoxPlotStyleOptionsPtrType)(v)
}

func (*dashboardBoxPlotStyleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotStyleOptions)(nil)).Elem()
}

func (i *dashboardBoxPlotStyleOptionsPtrType) ToDashboardBoxPlotStyleOptionsPtrOutput() DashboardBoxPlotStyleOptionsPtrOutput {
	return i.ToDashboardBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardBoxPlotStyleOptionsPtrType) ToDashboardBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotStyleOptionsPtrOutput)
}

type DashboardBoxPlotStyleOptionsOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotStyleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotStyleOptions)(nil)).Elem()
}

func (o DashboardBoxPlotStyleOptionsOutput) ToDashboardBoxPlotStyleOptionsOutput() DashboardBoxPlotStyleOptionsOutput {
	return o
}

func (o DashboardBoxPlotStyleOptionsOutput) ToDashboardBoxPlotStyleOptionsOutputWithContext(ctx context.Context) DashboardBoxPlotStyleOptionsOutput {
	return o
}

func (o DashboardBoxPlotStyleOptionsOutput) ToDashboardBoxPlotStyleOptionsPtrOutput() DashboardBoxPlotStyleOptionsPtrOutput {
	return o.ToDashboardBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardBoxPlotStyleOptionsOutput) ToDashboardBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotStyleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBoxPlotStyleOptions) *DashboardBoxPlotStyleOptions {
		return &v
	}).(DashboardBoxPlotStyleOptionsPtrOutput)
}

func (o DashboardBoxPlotStyleOptionsOutput) FillStyle() DashboardBoxPlotFillStylePtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotStyleOptions) *DashboardBoxPlotFillStyle { return v.FillStyle }).(DashboardBoxPlotFillStylePtrOutput)
}

type DashboardBoxPlotStyleOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotStyleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotStyleOptions)(nil)).Elem()
}

func (o DashboardBoxPlotStyleOptionsPtrOutput) ToDashboardBoxPlotStyleOptionsPtrOutput() DashboardBoxPlotStyleOptionsPtrOutput {
	return o
}

func (o DashboardBoxPlotStyleOptionsPtrOutput) ToDashboardBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardBoxPlotStyleOptionsPtrOutput {
	return o
}

func (o DashboardBoxPlotStyleOptionsPtrOutput) Elem() DashboardBoxPlotStyleOptionsOutput {
	return o.ApplyT(func(v *DashboardBoxPlotStyleOptions) DashboardBoxPlotStyleOptions {
		if v != nil {
			return *v
		}
		var ret DashboardBoxPlotStyleOptions
		return ret
	}).(DashboardBoxPlotStyleOptionsOutput)
}

func (o DashboardBoxPlotStyleOptionsPtrOutput) FillStyle() DashboardBoxPlotFillStylePtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotStyleOptions) *DashboardBoxPlotFillStyle {
		if v == nil {
			return nil
		}
		return v.FillStyle
	}).(DashboardBoxPlotFillStylePtrOutput)
}

type DashboardBoxPlotVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardBoxPlotChartConfiguration  `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardBoxPlotVisualInput is an input type that accepts DashboardBoxPlotVisualArgs and DashboardBoxPlotVisualOutput values.
// You can construct a concrete instance of `DashboardBoxPlotVisualInput` via:
//
//	DashboardBoxPlotVisualArgs{...}
type DashboardBoxPlotVisualInput interface {
	pulumi.Input

	ToDashboardBoxPlotVisualOutput() DashboardBoxPlotVisualOutput
	ToDashboardBoxPlotVisualOutputWithContext(context.Context) DashboardBoxPlotVisualOutput
}

type DashboardBoxPlotVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardBoxPlotChartConfigurationPtrInput  `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardBoxPlotVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotVisual)(nil)).Elem()
}

func (i DashboardBoxPlotVisualArgs) ToDashboardBoxPlotVisualOutput() DashboardBoxPlotVisualOutput {
	return i.ToDashboardBoxPlotVisualOutputWithContext(context.Background())
}

func (i DashboardBoxPlotVisualArgs) ToDashboardBoxPlotVisualOutputWithContext(ctx context.Context) DashboardBoxPlotVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotVisualOutput)
}

func (i DashboardBoxPlotVisualArgs) ToDashboardBoxPlotVisualPtrOutput() DashboardBoxPlotVisualPtrOutput {
	return i.ToDashboardBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (i DashboardBoxPlotVisualArgs) ToDashboardBoxPlotVisualPtrOutputWithContext(ctx context.Context) DashboardBoxPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotVisualOutput).ToDashboardBoxPlotVisualPtrOutputWithContext(ctx)
}

// DashboardBoxPlotVisualPtrInput is an input type that accepts DashboardBoxPlotVisualArgs, DashboardBoxPlotVisualPtr and DashboardBoxPlotVisualPtrOutput values.
// You can construct a concrete instance of `DashboardBoxPlotVisualPtrInput` via:
//
//	        DashboardBoxPlotVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardBoxPlotVisualPtrInput interface {
	pulumi.Input

	ToDashboardBoxPlotVisualPtrOutput() DashboardBoxPlotVisualPtrOutput
	ToDashboardBoxPlotVisualPtrOutputWithContext(context.Context) DashboardBoxPlotVisualPtrOutput
}

type dashboardBoxPlotVisualPtrType DashboardBoxPlotVisualArgs

func DashboardBoxPlotVisualPtr(v *DashboardBoxPlotVisualArgs) DashboardBoxPlotVisualPtrInput {
	return (*dashboardBoxPlotVisualPtrType)(v)
}

func (*dashboardBoxPlotVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotVisual)(nil)).Elem()
}

func (i *dashboardBoxPlotVisualPtrType) ToDashboardBoxPlotVisualPtrOutput() DashboardBoxPlotVisualPtrOutput {
	return i.ToDashboardBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardBoxPlotVisualPtrType) ToDashboardBoxPlotVisualPtrOutputWithContext(ctx context.Context) DashboardBoxPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardBoxPlotVisualPtrOutput)
}

type DashboardBoxPlotVisualOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotVisual)(nil)).Elem()
}

func (o DashboardBoxPlotVisualOutput) ToDashboardBoxPlotVisualOutput() DashboardBoxPlotVisualOutput {
	return o
}

func (o DashboardBoxPlotVisualOutput) ToDashboardBoxPlotVisualOutputWithContext(ctx context.Context) DashboardBoxPlotVisualOutput {
	return o
}

func (o DashboardBoxPlotVisualOutput) ToDashboardBoxPlotVisualPtrOutput() DashboardBoxPlotVisualPtrOutput {
	return o.ToDashboardBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (o DashboardBoxPlotVisualOutput) ToDashboardBoxPlotVisualPtrOutputWithContext(ctx context.Context) DashboardBoxPlotVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBoxPlotVisual) *DashboardBoxPlotVisual {
		return &v
	}).(DashboardBoxPlotVisualPtrOutput)
}

func (o DashboardBoxPlotVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardBoxPlotVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardBoxPlotVisualOutput) ChartConfiguration() DashboardBoxPlotChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotVisual) *DashboardBoxPlotChartConfiguration { return v.ChartConfiguration }).(DashboardBoxPlotChartConfigurationPtrOutput)
}

func (o DashboardBoxPlotVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardBoxPlotVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardBoxPlotVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardBoxPlotVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardBoxPlotVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardBoxPlotVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardBoxPlotVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardBoxPlotVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotVisual)(nil)).Elem()
}

func (o DashboardBoxPlotVisualPtrOutput) ToDashboardBoxPlotVisualPtrOutput() DashboardBoxPlotVisualPtrOutput {
	return o
}

func (o DashboardBoxPlotVisualPtrOutput) ToDashboardBoxPlotVisualPtrOutputWithContext(ctx context.Context) DashboardBoxPlotVisualPtrOutput {
	return o
}

func (o DashboardBoxPlotVisualPtrOutput) Elem() DashboardBoxPlotVisualOutput {
	return o.ApplyT(func(v *DashboardBoxPlotVisual) DashboardBoxPlotVisual {
		if v != nil {
			return *v
		}
		var ret DashboardBoxPlotVisual
		return ret
	}).(DashboardBoxPlotVisualOutput)
}

func (o DashboardBoxPlotVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardBoxPlotVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardBoxPlotVisualPtrOutput) ChartConfiguration() DashboardBoxPlotChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotVisual) *DashboardBoxPlotChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardBoxPlotChartConfigurationPtrOutput)
}

func (o DashboardBoxPlotVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardBoxPlotVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardBoxPlotVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardBoxPlotVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardBoxPlotVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardBoxPlotVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardCalculatedField struct {
	DataSetIdentifier string `pulumi:"dataSetIdentifier"`
	Expression        string `pulumi:"expression"`
	Name              string `pulumi:"name"`
}

// DashboardCalculatedFieldInput is an input type that accepts DashboardCalculatedFieldArgs and DashboardCalculatedFieldOutput values.
// You can construct a concrete instance of `DashboardCalculatedFieldInput` via:
//
//	DashboardCalculatedFieldArgs{...}
type DashboardCalculatedFieldInput interface {
	pulumi.Input

	ToDashboardCalculatedFieldOutput() DashboardCalculatedFieldOutput
	ToDashboardCalculatedFieldOutputWithContext(context.Context) DashboardCalculatedFieldOutput
}

type DashboardCalculatedFieldArgs struct {
	DataSetIdentifier pulumi.StringInput `pulumi:"dataSetIdentifier"`
	Expression        pulumi.StringInput `pulumi:"expression"`
	Name              pulumi.StringInput `pulumi:"name"`
}

func (DashboardCalculatedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCalculatedField)(nil)).Elem()
}

func (i DashboardCalculatedFieldArgs) ToDashboardCalculatedFieldOutput() DashboardCalculatedFieldOutput {
	return i.ToDashboardCalculatedFieldOutputWithContext(context.Background())
}

func (i DashboardCalculatedFieldArgs) ToDashboardCalculatedFieldOutputWithContext(ctx context.Context) DashboardCalculatedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCalculatedFieldOutput)
}

// DashboardCalculatedFieldArrayInput is an input type that accepts DashboardCalculatedFieldArray and DashboardCalculatedFieldArrayOutput values.
// You can construct a concrete instance of `DashboardCalculatedFieldArrayInput` via:
//
//	DashboardCalculatedFieldArray{ DashboardCalculatedFieldArgs{...} }
type DashboardCalculatedFieldArrayInput interface {
	pulumi.Input

	ToDashboardCalculatedFieldArrayOutput() DashboardCalculatedFieldArrayOutput
	ToDashboardCalculatedFieldArrayOutputWithContext(context.Context) DashboardCalculatedFieldArrayOutput
}

type DashboardCalculatedFieldArray []DashboardCalculatedFieldInput

func (DashboardCalculatedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardCalculatedField)(nil)).Elem()
}

func (i DashboardCalculatedFieldArray) ToDashboardCalculatedFieldArrayOutput() DashboardCalculatedFieldArrayOutput {
	return i.ToDashboardCalculatedFieldArrayOutputWithContext(context.Background())
}

func (i DashboardCalculatedFieldArray) ToDashboardCalculatedFieldArrayOutputWithContext(ctx context.Context) DashboardCalculatedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCalculatedFieldArrayOutput)
}

type DashboardCalculatedFieldOutput struct{ *pulumi.OutputState }

func (DashboardCalculatedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCalculatedField)(nil)).Elem()
}

func (o DashboardCalculatedFieldOutput) ToDashboardCalculatedFieldOutput() DashboardCalculatedFieldOutput {
	return o
}

func (o DashboardCalculatedFieldOutput) ToDashboardCalculatedFieldOutputWithContext(ctx context.Context) DashboardCalculatedFieldOutput {
	return o
}

func (o DashboardCalculatedFieldOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCalculatedField) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o DashboardCalculatedFieldOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCalculatedField) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DashboardCalculatedFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCalculatedField) string { return v.Name }).(pulumi.StringOutput)
}

type DashboardCalculatedFieldArrayOutput struct{ *pulumi.OutputState }

func (DashboardCalculatedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardCalculatedField)(nil)).Elem()
}

func (o DashboardCalculatedFieldArrayOutput) ToDashboardCalculatedFieldArrayOutput() DashboardCalculatedFieldArrayOutput {
	return o
}

func (o DashboardCalculatedFieldArrayOutput) ToDashboardCalculatedFieldArrayOutputWithContext(ctx context.Context) DashboardCalculatedFieldArrayOutput {
	return o
}

func (o DashboardCalculatedFieldArrayOutput) Index(i pulumi.IntInput) DashboardCalculatedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardCalculatedField {
		return vs[0].([]DashboardCalculatedField)[vs[1].(int)]
	}).(DashboardCalculatedFieldOutput)
}

type DashboardCalculatedMeasureField struct {
	Expression string `pulumi:"expression"`
	FieldId    string `pulumi:"fieldId"`
}

// DashboardCalculatedMeasureFieldInput is an input type that accepts DashboardCalculatedMeasureFieldArgs and DashboardCalculatedMeasureFieldOutput values.
// You can construct a concrete instance of `DashboardCalculatedMeasureFieldInput` via:
//
//	DashboardCalculatedMeasureFieldArgs{...}
type DashboardCalculatedMeasureFieldInput interface {
	pulumi.Input

	ToDashboardCalculatedMeasureFieldOutput() DashboardCalculatedMeasureFieldOutput
	ToDashboardCalculatedMeasureFieldOutputWithContext(context.Context) DashboardCalculatedMeasureFieldOutput
}

type DashboardCalculatedMeasureFieldArgs struct {
	Expression pulumi.StringInput `pulumi:"expression"`
	FieldId    pulumi.StringInput `pulumi:"fieldId"`
}

func (DashboardCalculatedMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCalculatedMeasureField)(nil)).Elem()
}

func (i DashboardCalculatedMeasureFieldArgs) ToDashboardCalculatedMeasureFieldOutput() DashboardCalculatedMeasureFieldOutput {
	return i.ToDashboardCalculatedMeasureFieldOutputWithContext(context.Background())
}

func (i DashboardCalculatedMeasureFieldArgs) ToDashboardCalculatedMeasureFieldOutputWithContext(ctx context.Context) DashboardCalculatedMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCalculatedMeasureFieldOutput)
}

func (i DashboardCalculatedMeasureFieldArgs) ToDashboardCalculatedMeasureFieldPtrOutput() DashboardCalculatedMeasureFieldPtrOutput {
	return i.ToDashboardCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (i DashboardCalculatedMeasureFieldArgs) ToDashboardCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardCalculatedMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCalculatedMeasureFieldOutput).ToDashboardCalculatedMeasureFieldPtrOutputWithContext(ctx)
}

// DashboardCalculatedMeasureFieldPtrInput is an input type that accepts DashboardCalculatedMeasureFieldArgs, DashboardCalculatedMeasureFieldPtr and DashboardCalculatedMeasureFieldPtrOutput values.
// You can construct a concrete instance of `DashboardCalculatedMeasureFieldPtrInput` via:
//
//	        DashboardCalculatedMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type DashboardCalculatedMeasureFieldPtrInput interface {
	pulumi.Input

	ToDashboardCalculatedMeasureFieldPtrOutput() DashboardCalculatedMeasureFieldPtrOutput
	ToDashboardCalculatedMeasureFieldPtrOutputWithContext(context.Context) DashboardCalculatedMeasureFieldPtrOutput
}

type dashboardCalculatedMeasureFieldPtrType DashboardCalculatedMeasureFieldArgs

func DashboardCalculatedMeasureFieldPtr(v *DashboardCalculatedMeasureFieldArgs) DashboardCalculatedMeasureFieldPtrInput {
	return (*dashboardCalculatedMeasureFieldPtrType)(v)
}

func (*dashboardCalculatedMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCalculatedMeasureField)(nil)).Elem()
}

func (i *dashboardCalculatedMeasureFieldPtrType) ToDashboardCalculatedMeasureFieldPtrOutput() DashboardCalculatedMeasureFieldPtrOutput {
	return i.ToDashboardCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *dashboardCalculatedMeasureFieldPtrType) ToDashboardCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardCalculatedMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCalculatedMeasureFieldPtrOutput)
}

type DashboardCalculatedMeasureFieldOutput struct{ *pulumi.OutputState }

func (DashboardCalculatedMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCalculatedMeasureField)(nil)).Elem()
}

func (o DashboardCalculatedMeasureFieldOutput) ToDashboardCalculatedMeasureFieldOutput() DashboardCalculatedMeasureFieldOutput {
	return o
}

func (o DashboardCalculatedMeasureFieldOutput) ToDashboardCalculatedMeasureFieldOutputWithContext(ctx context.Context) DashboardCalculatedMeasureFieldOutput {
	return o
}

func (o DashboardCalculatedMeasureFieldOutput) ToDashboardCalculatedMeasureFieldPtrOutput() DashboardCalculatedMeasureFieldPtrOutput {
	return o.ToDashboardCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (o DashboardCalculatedMeasureFieldOutput) ToDashboardCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardCalculatedMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCalculatedMeasureField) *DashboardCalculatedMeasureField {
		return &v
	}).(DashboardCalculatedMeasureFieldPtrOutput)
}

func (o DashboardCalculatedMeasureFieldOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCalculatedMeasureField) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DashboardCalculatedMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCalculatedMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

type DashboardCalculatedMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (DashboardCalculatedMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCalculatedMeasureField)(nil)).Elem()
}

func (o DashboardCalculatedMeasureFieldPtrOutput) ToDashboardCalculatedMeasureFieldPtrOutput() DashboardCalculatedMeasureFieldPtrOutput {
	return o
}

func (o DashboardCalculatedMeasureFieldPtrOutput) ToDashboardCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardCalculatedMeasureFieldPtrOutput {
	return o
}

func (o DashboardCalculatedMeasureFieldPtrOutput) Elem() DashboardCalculatedMeasureFieldOutput {
	return o.ApplyT(func(v *DashboardCalculatedMeasureField) DashboardCalculatedMeasureField {
		if v != nil {
			return *v
		}
		var ret DashboardCalculatedMeasureField
		return ret
	}).(DashboardCalculatedMeasureFieldOutput)
}

func (o DashboardCalculatedMeasureFieldPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCalculatedMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o DashboardCalculatedMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCalculatedMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type DashboardCascadingControlConfiguration struct {
	SourceControls []DashboardCascadingControlSource `pulumi:"sourceControls"`
}

// DashboardCascadingControlConfigurationInput is an input type that accepts DashboardCascadingControlConfigurationArgs and DashboardCascadingControlConfigurationOutput values.
// You can construct a concrete instance of `DashboardCascadingControlConfigurationInput` via:
//
//	DashboardCascadingControlConfigurationArgs{...}
type DashboardCascadingControlConfigurationInput interface {
	pulumi.Input

	ToDashboardCascadingControlConfigurationOutput() DashboardCascadingControlConfigurationOutput
	ToDashboardCascadingControlConfigurationOutputWithContext(context.Context) DashboardCascadingControlConfigurationOutput
}

type DashboardCascadingControlConfigurationArgs struct {
	SourceControls DashboardCascadingControlSourceArrayInput `pulumi:"sourceControls"`
}

func (DashboardCascadingControlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCascadingControlConfiguration)(nil)).Elem()
}

func (i DashboardCascadingControlConfigurationArgs) ToDashboardCascadingControlConfigurationOutput() DashboardCascadingControlConfigurationOutput {
	return i.ToDashboardCascadingControlConfigurationOutputWithContext(context.Background())
}

func (i DashboardCascadingControlConfigurationArgs) ToDashboardCascadingControlConfigurationOutputWithContext(ctx context.Context) DashboardCascadingControlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCascadingControlConfigurationOutput)
}

func (i DashboardCascadingControlConfigurationArgs) ToDashboardCascadingControlConfigurationPtrOutput() DashboardCascadingControlConfigurationPtrOutput {
	return i.ToDashboardCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardCascadingControlConfigurationArgs) ToDashboardCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) DashboardCascadingControlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCascadingControlConfigurationOutput).ToDashboardCascadingControlConfigurationPtrOutputWithContext(ctx)
}

// DashboardCascadingControlConfigurationPtrInput is an input type that accepts DashboardCascadingControlConfigurationArgs, DashboardCascadingControlConfigurationPtr and DashboardCascadingControlConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardCascadingControlConfigurationPtrInput` via:
//
//	        DashboardCascadingControlConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardCascadingControlConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardCascadingControlConfigurationPtrOutput() DashboardCascadingControlConfigurationPtrOutput
	ToDashboardCascadingControlConfigurationPtrOutputWithContext(context.Context) DashboardCascadingControlConfigurationPtrOutput
}

type dashboardCascadingControlConfigurationPtrType DashboardCascadingControlConfigurationArgs

func DashboardCascadingControlConfigurationPtr(v *DashboardCascadingControlConfigurationArgs) DashboardCascadingControlConfigurationPtrInput {
	return (*dashboardCascadingControlConfigurationPtrType)(v)
}

func (*dashboardCascadingControlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCascadingControlConfiguration)(nil)).Elem()
}

func (i *dashboardCascadingControlConfigurationPtrType) ToDashboardCascadingControlConfigurationPtrOutput() DashboardCascadingControlConfigurationPtrOutput {
	return i.ToDashboardCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardCascadingControlConfigurationPtrType) ToDashboardCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) DashboardCascadingControlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCascadingControlConfigurationPtrOutput)
}

type DashboardCascadingControlConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardCascadingControlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCascadingControlConfiguration)(nil)).Elem()
}

func (o DashboardCascadingControlConfigurationOutput) ToDashboardCascadingControlConfigurationOutput() DashboardCascadingControlConfigurationOutput {
	return o
}

func (o DashboardCascadingControlConfigurationOutput) ToDashboardCascadingControlConfigurationOutputWithContext(ctx context.Context) DashboardCascadingControlConfigurationOutput {
	return o
}

func (o DashboardCascadingControlConfigurationOutput) ToDashboardCascadingControlConfigurationPtrOutput() DashboardCascadingControlConfigurationPtrOutput {
	return o.ToDashboardCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardCascadingControlConfigurationOutput) ToDashboardCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) DashboardCascadingControlConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCascadingControlConfiguration) *DashboardCascadingControlConfiguration {
		return &v
	}).(DashboardCascadingControlConfigurationPtrOutput)
}

func (o DashboardCascadingControlConfigurationOutput) SourceControls() DashboardCascadingControlSourceArrayOutput {
	return o.ApplyT(func(v DashboardCascadingControlConfiguration) []DashboardCascadingControlSource {
		return v.SourceControls
	}).(DashboardCascadingControlSourceArrayOutput)
}

type DashboardCascadingControlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCascadingControlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCascadingControlConfiguration)(nil)).Elem()
}

func (o DashboardCascadingControlConfigurationPtrOutput) ToDashboardCascadingControlConfigurationPtrOutput() DashboardCascadingControlConfigurationPtrOutput {
	return o
}

func (o DashboardCascadingControlConfigurationPtrOutput) ToDashboardCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) DashboardCascadingControlConfigurationPtrOutput {
	return o
}

func (o DashboardCascadingControlConfigurationPtrOutput) Elem() DashboardCascadingControlConfigurationOutput {
	return o.ApplyT(func(v *DashboardCascadingControlConfiguration) DashboardCascadingControlConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardCascadingControlConfiguration
		return ret
	}).(DashboardCascadingControlConfigurationOutput)
}

func (o DashboardCascadingControlConfigurationPtrOutput) SourceControls() DashboardCascadingControlSourceArrayOutput {
	return o.ApplyT(func(v *DashboardCascadingControlConfiguration) []DashboardCascadingControlSource {
		if v == nil {
			return nil
		}
		return v.SourceControls
	}).(DashboardCascadingControlSourceArrayOutput)
}

type DashboardCascadingControlSource struct {
	ColumnToMatch        *DashboardColumnIdentifier `pulumi:"columnToMatch"`
	SourceSheetControlId *string                    `pulumi:"sourceSheetControlId"`
}

// DashboardCascadingControlSourceInput is an input type that accepts DashboardCascadingControlSourceArgs and DashboardCascadingControlSourceOutput values.
// You can construct a concrete instance of `DashboardCascadingControlSourceInput` via:
//
//	DashboardCascadingControlSourceArgs{...}
type DashboardCascadingControlSourceInput interface {
	pulumi.Input

	ToDashboardCascadingControlSourceOutput() DashboardCascadingControlSourceOutput
	ToDashboardCascadingControlSourceOutputWithContext(context.Context) DashboardCascadingControlSourceOutput
}

type DashboardCascadingControlSourceArgs struct {
	ColumnToMatch        DashboardColumnIdentifierPtrInput `pulumi:"columnToMatch"`
	SourceSheetControlId pulumi.StringPtrInput             `pulumi:"sourceSheetControlId"`
}

func (DashboardCascadingControlSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCascadingControlSource)(nil)).Elem()
}

func (i DashboardCascadingControlSourceArgs) ToDashboardCascadingControlSourceOutput() DashboardCascadingControlSourceOutput {
	return i.ToDashboardCascadingControlSourceOutputWithContext(context.Background())
}

func (i DashboardCascadingControlSourceArgs) ToDashboardCascadingControlSourceOutputWithContext(ctx context.Context) DashboardCascadingControlSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCascadingControlSourceOutput)
}

// DashboardCascadingControlSourceArrayInput is an input type that accepts DashboardCascadingControlSourceArray and DashboardCascadingControlSourceArrayOutput values.
// You can construct a concrete instance of `DashboardCascadingControlSourceArrayInput` via:
//
//	DashboardCascadingControlSourceArray{ DashboardCascadingControlSourceArgs{...} }
type DashboardCascadingControlSourceArrayInput interface {
	pulumi.Input

	ToDashboardCascadingControlSourceArrayOutput() DashboardCascadingControlSourceArrayOutput
	ToDashboardCascadingControlSourceArrayOutputWithContext(context.Context) DashboardCascadingControlSourceArrayOutput
}

type DashboardCascadingControlSourceArray []DashboardCascadingControlSourceInput

func (DashboardCascadingControlSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardCascadingControlSource)(nil)).Elem()
}

func (i DashboardCascadingControlSourceArray) ToDashboardCascadingControlSourceArrayOutput() DashboardCascadingControlSourceArrayOutput {
	return i.ToDashboardCascadingControlSourceArrayOutputWithContext(context.Background())
}

func (i DashboardCascadingControlSourceArray) ToDashboardCascadingControlSourceArrayOutputWithContext(ctx context.Context) DashboardCascadingControlSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCascadingControlSourceArrayOutput)
}

type DashboardCascadingControlSourceOutput struct{ *pulumi.OutputState }

func (DashboardCascadingControlSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCascadingControlSource)(nil)).Elem()
}

func (o DashboardCascadingControlSourceOutput) ToDashboardCascadingControlSourceOutput() DashboardCascadingControlSourceOutput {
	return o
}

func (o DashboardCascadingControlSourceOutput) ToDashboardCascadingControlSourceOutputWithContext(ctx context.Context) DashboardCascadingControlSourceOutput {
	return o
}

func (o DashboardCascadingControlSourceOutput) ColumnToMatch() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v DashboardCascadingControlSource) *DashboardColumnIdentifier { return v.ColumnToMatch }).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardCascadingControlSourceOutput) SourceSheetControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardCascadingControlSource) *string { return v.SourceSheetControlId }).(pulumi.StringPtrOutput)
}

type DashboardCascadingControlSourceArrayOutput struct{ *pulumi.OutputState }

func (DashboardCascadingControlSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardCascadingControlSource)(nil)).Elem()
}

func (o DashboardCascadingControlSourceArrayOutput) ToDashboardCascadingControlSourceArrayOutput() DashboardCascadingControlSourceArrayOutput {
	return o
}

func (o DashboardCascadingControlSourceArrayOutput) ToDashboardCascadingControlSourceArrayOutputWithContext(ctx context.Context) DashboardCascadingControlSourceArrayOutput {
	return o
}

func (o DashboardCascadingControlSourceArrayOutput) Index(i pulumi.IntInput) DashboardCascadingControlSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardCascadingControlSource {
		return vs[0].([]DashboardCascadingControlSource)[vs[1].(int)]
	}).(DashboardCascadingControlSourceOutput)
}

type DashboardCategoricalDimensionField struct {
	Column              DashboardColumnIdentifier           `pulumi:"column"`
	FieldId             string                              `pulumi:"fieldId"`
	FormatConfiguration *DashboardStringFormatConfiguration `pulumi:"formatConfiguration"`
	HierarchyId         *string                             `pulumi:"hierarchyId"`
}

// DashboardCategoricalDimensionFieldInput is an input type that accepts DashboardCategoricalDimensionFieldArgs and DashboardCategoricalDimensionFieldOutput values.
// You can construct a concrete instance of `DashboardCategoricalDimensionFieldInput` via:
//
//	DashboardCategoricalDimensionFieldArgs{...}
type DashboardCategoricalDimensionFieldInput interface {
	pulumi.Input

	ToDashboardCategoricalDimensionFieldOutput() DashboardCategoricalDimensionFieldOutput
	ToDashboardCategoricalDimensionFieldOutputWithContext(context.Context) DashboardCategoricalDimensionFieldOutput
}

type DashboardCategoricalDimensionFieldArgs struct {
	Column              DashboardColumnIdentifierInput             `pulumi:"column"`
	FieldId             pulumi.StringInput                         `pulumi:"fieldId"`
	FormatConfiguration DashboardStringFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	HierarchyId         pulumi.StringPtrInput                      `pulumi:"hierarchyId"`
}

func (DashboardCategoricalDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoricalDimensionField)(nil)).Elem()
}

func (i DashboardCategoricalDimensionFieldArgs) ToDashboardCategoricalDimensionFieldOutput() DashboardCategoricalDimensionFieldOutput {
	return i.ToDashboardCategoricalDimensionFieldOutputWithContext(context.Background())
}

func (i DashboardCategoricalDimensionFieldArgs) ToDashboardCategoricalDimensionFieldOutputWithContext(ctx context.Context) DashboardCategoricalDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoricalDimensionFieldOutput)
}

func (i DashboardCategoricalDimensionFieldArgs) ToDashboardCategoricalDimensionFieldPtrOutput() DashboardCategoricalDimensionFieldPtrOutput {
	return i.ToDashboardCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i DashboardCategoricalDimensionFieldArgs) ToDashboardCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardCategoricalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoricalDimensionFieldOutput).ToDashboardCategoricalDimensionFieldPtrOutputWithContext(ctx)
}

// DashboardCategoricalDimensionFieldPtrInput is an input type that accepts DashboardCategoricalDimensionFieldArgs, DashboardCategoricalDimensionFieldPtr and DashboardCategoricalDimensionFieldPtrOutput values.
// You can construct a concrete instance of `DashboardCategoricalDimensionFieldPtrInput` via:
//
//	        DashboardCategoricalDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type DashboardCategoricalDimensionFieldPtrInput interface {
	pulumi.Input

	ToDashboardCategoricalDimensionFieldPtrOutput() DashboardCategoricalDimensionFieldPtrOutput
	ToDashboardCategoricalDimensionFieldPtrOutputWithContext(context.Context) DashboardCategoricalDimensionFieldPtrOutput
}

type dashboardCategoricalDimensionFieldPtrType DashboardCategoricalDimensionFieldArgs

func DashboardCategoricalDimensionFieldPtr(v *DashboardCategoricalDimensionFieldArgs) DashboardCategoricalDimensionFieldPtrInput {
	return (*dashboardCategoricalDimensionFieldPtrType)(v)
}

func (*dashboardCategoricalDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoricalDimensionField)(nil)).Elem()
}

func (i *dashboardCategoricalDimensionFieldPtrType) ToDashboardCategoricalDimensionFieldPtrOutput() DashboardCategoricalDimensionFieldPtrOutput {
	return i.ToDashboardCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *dashboardCategoricalDimensionFieldPtrType) ToDashboardCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardCategoricalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoricalDimensionFieldPtrOutput)
}

type DashboardCategoricalDimensionFieldOutput struct{ *pulumi.OutputState }

func (DashboardCategoricalDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoricalDimensionField)(nil)).Elem()
}

func (o DashboardCategoricalDimensionFieldOutput) ToDashboardCategoricalDimensionFieldOutput() DashboardCategoricalDimensionFieldOutput {
	return o
}

func (o DashboardCategoricalDimensionFieldOutput) ToDashboardCategoricalDimensionFieldOutputWithContext(ctx context.Context) DashboardCategoricalDimensionFieldOutput {
	return o
}

func (o DashboardCategoricalDimensionFieldOutput) ToDashboardCategoricalDimensionFieldPtrOutput() DashboardCategoricalDimensionFieldPtrOutput {
	return o.ToDashboardCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (o DashboardCategoricalDimensionFieldOutput) ToDashboardCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardCategoricalDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCategoricalDimensionField) *DashboardCategoricalDimensionField {
		return &v
	}).(DashboardCategoricalDimensionFieldPtrOutput)
}

func (o DashboardCategoricalDimensionFieldOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardCategoricalDimensionField) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardCategoricalDimensionFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCategoricalDimensionField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardCategoricalDimensionFieldOutput) FormatConfiguration() DashboardStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCategoricalDimensionField) *DashboardStringFormatConfiguration {
		return v.FormatConfiguration
	}).(DashboardStringFormatConfigurationPtrOutput)
}

func (o DashboardCategoricalDimensionFieldOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardCategoricalDimensionField) *string { return v.HierarchyId }).(pulumi.StringPtrOutput)
}

type DashboardCategoricalDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (DashboardCategoricalDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoricalDimensionField)(nil)).Elem()
}

func (o DashboardCategoricalDimensionFieldPtrOutput) ToDashboardCategoricalDimensionFieldPtrOutput() DashboardCategoricalDimensionFieldPtrOutput {
	return o
}

func (o DashboardCategoricalDimensionFieldPtrOutput) ToDashboardCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardCategoricalDimensionFieldPtrOutput {
	return o
}

func (o DashboardCategoricalDimensionFieldPtrOutput) Elem() DashboardCategoricalDimensionFieldOutput {
	return o.ApplyT(func(v *DashboardCategoricalDimensionField) DashboardCategoricalDimensionField {
		if v != nil {
			return *v
		}
		var ret DashboardCategoricalDimensionField
		return ret
	}).(DashboardCategoricalDimensionFieldOutput)
}

func (o DashboardCategoricalDimensionFieldPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardCategoricalDimensionField) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardCategoricalDimensionFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCategoricalDimensionField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardCategoricalDimensionFieldPtrOutput) FormatConfiguration() DashboardStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCategoricalDimensionField) *DashboardStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(DashboardStringFormatConfigurationPtrOutput)
}

func (o DashboardCategoricalDimensionFieldPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCategoricalDimensionField) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type DashboardCategoricalMeasureField struct {
	AggregationFunction *DashboardCategoricalAggregationFunction `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifier                `pulumi:"column"`
	FieldId             string                                   `pulumi:"fieldId"`
	FormatConfiguration *DashboardStringFormatConfiguration      `pulumi:"formatConfiguration"`
}

// DashboardCategoricalMeasureFieldInput is an input type that accepts DashboardCategoricalMeasureFieldArgs and DashboardCategoricalMeasureFieldOutput values.
// You can construct a concrete instance of `DashboardCategoricalMeasureFieldInput` via:
//
//	DashboardCategoricalMeasureFieldArgs{...}
type DashboardCategoricalMeasureFieldInput interface {
	pulumi.Input

	ToDashboardCategoricalMeasureFieldOutput() DashboardCategoricalMeasureFieldOutput
	ToDashboardCategoricalMeasureFieldOutputWithContext(context.Context) DashboardCategoricalMeasureFieldOutput
}

type DashboardCategoricalMeasureFieldArgs struct {
	AggregationFunction DashboardCategoricalAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifierInput                  `pulumi:"column"`
	FieldId             pulumi.StringInput                              `pulumi:"fieldId"`
	FormatConfiguration DashboardStringFormatConfigurationPtrInput      `pulumi:"formatConfiguration"`
}

func (DashboardCategoricalMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoricalMeasureField)(nil)).Elem()
}

func (i DashboardCategoricalMeasureFieldArgs) ToDashboardCategoricalMeasureFieldOutput() DashboardCategoricalMeasureFieldOutput {
	return i.ToDashboardCategoricalMeasureFieldOutputWithContext(context.Background())
}

func (i DashboardCategoricalMeasureFieldArgs) ToDashboardCategoricalMeasureFieldOutputWithContext(ctx context.Context) DashboardCategoricalMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoricalMeasureFieldOutput)
}

func (i DashboardCategoricalMeasureFieldArgs) ToDashboardCategoricalMeasureFieldPtrOutput() DashboardCategoricalMeasureFieldPtrOutput {
	return i.ToDashboardCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i DashboardCategoricalMeasureFieldArgs) ToDashboardCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardCategoricalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoricalMeasureFieldOutput).ToDashboardCategoricalMeasureFieldPtrOutputWithContext(ctx)
}

// DashboardCategoricalMeasureFieldPtrInput is an input type that accepts DashboardCategoricalMeasureFieldArgs, DashboardCategoricalMeasureFieldPtr and DashboardCategoricalMeasureFieldPtrOutput values.
// You can construct a concrete instance of `DashboardCategoricalMeasureFieldPtrInput` via:
//
//	        DashboardCategoricalMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type DashboardCategoricalMeasureFieldPtrInput interface {
	pulumi.Input

	ToDashboardCategoricalMeasureFieldPtrOutput() DashboardCategoricalMeasureFieldPtrOutput
	ToDashboardCategoricalMeasureFieldPtrOutputWithContext(context.Context) DashboardCategoricalMeasureFieldPtrOutput
}

type dashboardCategoricalMeasureFieldPtrType DashboardCategoricalMeasureFieldArgs

func DashboardCategoricalMeasureFieldPtr(v *DashboardCategoricalMeasureFieldArgs) DashboardCategoricalMeasureFieldPtrInput {
	return (*dashboardCategoricalMeasureFieldPtrType)(v)
}

func (*dashboardCategoricalMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoricalMeasureField)(nil)).Elem()
}

func (i *dashboardCategoricalMeasureFieldPtrType) ToDashboardCategoricalMeasureFieldPtrOutput() DashboardCategoricalMeasureFieldPtrOutput {
	return i.ToDashboardCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *dashboardCategoricalMeasureFieldPtrType) ToDashboardCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardCategoricalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoricalMeasureFieldPtrOutput)
}

type DashboardCategoricalMeasureFieldOutput struct{ *pulumi.OutputState }

func (DashboardCategoricalMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoricalMeasureField)(nil)).Elem()
}

func (o DashboardCategoricalMeasureFieldOutput) ToDashboardCategoricalMeasureFieldOutput() DashboardCategoricalMeasureFieldOutput {
	return o
}

func (o DashboardCategoricalMeasureFieldOutput) ToDashboardCategoricalMeasureFieldOutputWithContext(ctx context.Context) DashboardCategoricalMeasureFieldOutput {
	return o
}

func (o DashboardCategoricalMeasureFieldOutput) ToDashboardCategoricalMeasureFieldPtrOutput() DashboardCategoricalMeasureFieldPtrOutput {
	return o.ToDashboardCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (o DashboardCategoricalMeasureFieldOutput) ToDashboardCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardCategoricalMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCategoricalMeasureField) *DashboardCategoricalMeasureField {
		return &v
	}).(DashboardCategoricalMeasureFieldPtrOutput)
}

func (o DashboardCategoricalMeasureFieldOutput) AggregationFunction() DashboardCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardCategoricalMeasureField) *DashboardCategoricalAggregationFunction {
		return v.AggregationFunction
	}).(DashboardCategoricalAggregationFunctionPtrOutput)
}

func (o DashboardCategoricalMeasureFieldOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardCategoricalMeasureField) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardCategoricalMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCategoricalMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardCategoricalMeasureFieldOutput) FormatConfiguration() DashboardStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCategoricalMeasureField) *DashboardStringFormatConfiguration {
		return v.FormatConfiguration
	}).(DashboardStringFormatConfigurationPtrOutput)
}

type DashboardCategoricalMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (DashboardCategoricalMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoricalMeasureField)(nil)).Elem()
}

func (o DashboardCategoricalMeasureFieldPtrOutput) ToDashboardCategoricalMeasureFieldPtrOutput() DashboardCategoricalMeasureFieldPtrOutput {
	return o
}

func (o DashboardCategoricalMeasureFieldPtrOutput) ToDashboardCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardCategoricalMeasureFieldPtrOutput {
	return o
}

func (o DashboardCategoricalMeasureFieldPtrOutput) Elem() DashboardCategoricalMeasureFieldOutput {
	return o.ApplyT(func(v *DashboardCategoricalMeasureField) DashboardCategoricalMeasureField {
		if v != nil {
			return *v
		}
		var ret DashboardCategoricalMeasureField
		return ret
	}).(DashboardCategoricalMeasureFieldOutput)
}

func (o DashboardCategoricalMeasureFieldPtrOutput) AggregationFunction() DashboardCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardCategoricalMeasureField) *DashboardCategoricalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(DashboardCategoricalAggregationFunctionPtrOutput)
}

func (o DashboardCategoricalMeasureFieldPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardCategoricalMeasureField) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardCategoricalMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCategoricalMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardCategoricalMeasureFieldPtrOutput) FormatConfiguration() DashboardStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCategoricalMeasureField) *DashboardStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(DashboardStringFormatConfigurationPtrOutput)
}

type DashboardCategoryDrillDownFilter struct {
	CategoryValues []string                  `pulumi:"categoryValues"`
	Column         DashboardColumnIdentifier `pulumi:"column"`
}

// DashboardCategoryDrillDownFilterInput is an input type that accepts DashboardCategoryDrillDownFilterArgs and DashboardCategoryDrillDownFilterOutput values.
// You can construct a concrete instance of `DashboardCategoryDrillDownFilterInput` via:
//
//	DashboardCategoryDrillDownFilterArgs{...}
type DashboardCategoryDrillDownFilterInput interface {
	pulumi.Input

	ToDashboardCategoryDrillDownFilterOutput() DashboardCategoryDrillDownFilterOutput
	ToDashboardCategoryDrillDownFilterOutputWithContext(context.Context) DashboardCategoryDrillDownFilterOutput
}

type DashboardCategoryDrillDownFilterArgs struct {
	CategoryValues pulumi.StringArrayInput        `pulumi:"categoryValues"`
	Column         DashboardColumnIdentifierInput `pulumi:"column"`
}

func (DashboardCategoryDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoryDrillDownFilter)(nil)).Elem()
}

func (i DashboardCategoryDrillDownFilterArgs) ToDashboardCategoryDrillDownFilterOutput() DashboardCategoryDrillDownFilterOutput {
	return i.ToDashboardCategoryDrillDownFilterOutputWithContext(context.Background())
}

func (i DashboardCategoryDrillDownFilterArgs) ToDashboardCategoryDrillDownFilterOutputWithContext(ctx context.Context) DashboardCategoryDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoryDrillDownFilterOutput)
}

func (i DashboardCategoryDrillDownFilterArgs) ToDashboardCategoryDrillDownFilterPtrOutput() DashboardCategoryDrillDownFilterPtrOutput {
	return i.ToDashboardCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i DashboardCategoryDrillDownFilterArgs) ToDashboardCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardCategoryDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoryDrillDownFilterOutput).ToDashboardCategoryDrillDownFilterPtrOutputWithContext(ctx)
}

// DashboardCategoryDrillDownFilterPtrInput is an input type that accepts DashboardCategoryDrillDownFilterArgs, DashboardCategoryDrillDownFilterPtr and DashboardCategoryDrillDownFilterPtrOutput values.
// You can construct a concrete instance of `DashboardCategoryDrillDownFilterPtrInput` via:
//
//	        DashboardCategoryDrillDownFilterArgs{...}
//
//	or:
//
//	        nil
type DashboardCategoryDrillDownFilterPtrInput interface {
	pulumi.Input

	ToDashboardCategoryDrillDownFilterPtrOutput() DashboardCategoryDrillDownFilterPtrOutput
	ToDashboardCategoryDrillDownFilterPtrOutputWithContext(context.Context) DashboardCategoryDrillDownFilterPtrOutput
}

type dashboardCategoryDrillDownFilterPtrType DashboardCategoryDrillDownFilterArgs

func DashboardCategoryDrillDownFilterPtr(v *DashboardCategoryDrillDownFilterArgs) DashboardCategoryDrillDownFilterPtrInput {
	return (*dashboardCategoryDrillDownFilterPtrType)(v)
}

func (*dashboardCategoryDrillDownFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoryDrillDownFilter)(nil)).Elem()
}

func (i *dashboardCategoryDrillDownFilterPtrType) ToDashboardCategoryDrillDownFilterPtrOutput() DashboardCategoryDrillDownFilterPtrOutput {
	return i.ToDashboardCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i *dashboardCategoryDrillDownFilterPtrType) ToDashboardCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardCategoryDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoryDrillDownFilterPtrOutput)
}

type DashboardCategoryDrillDownFilterOutput struct{ *pulumi.OutputState }

func (DashboardCategoryDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoryDrillDownFilter)(nil)).Elem()
}

func (o DashboardCategoryDrillDownFilterOutput) ToDashboardCategoryDrillDownFilterOutput() DashboardCategoryDrillDownFilterOutput {
	return o
}

func (o DashboardCategoryDrillDownFilterOutput) ToDashboardCategoryDrillDownFilterOutputWithContext(ctx context.Context) DashboardCategoryDrillDownFilterOutput {
	return o
}

func (o DashboardCategoryDrillDownFilterOutput) ToDashboardCategoryDrillDownFilterPtrOutput() DashboardCategoryDrillDownFilterPtrOutput {
	return o.ToDashboardCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (o DashboardCategoryDrillDownFilterOutput) ToDashboardCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardCategoryDrillDownFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCategoryDrillDownFilter) *DashboardCategoryDrillDownFilter {
		return &v
	}).(DashboardCategoryDrillDownFilterPtrOutput)
}

func (o DashboardCategoryDrillDownFilterOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardCategoryDrillDownFilter) []string { return v.CategoryValues }).(pulumi.StringArrayOutput)
}

func (o DashboardCategoryDrillDownFilterOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardCategoryDrillDownFilter) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

type DashboardCategoryDrillDownFilterPtrOutput struct{ *pulumi.OutputState }

func (DashboardCategoryDrillDownFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoryDrillDownFilter)(nil)).Elem()
}

func (o DashboardCategoryDrillDownFilterPtrOutput) ToDashboardCategoryDrillDownFilterPtrOutput() DashboardCategoryDrillDownFilterPtrOutput {
	return o
}

func (o DashboardCategoryDrillDownFilterPtrOutput) ToDashboardCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardCategoryDrillDownFilterPtrOutput {
	return o
}

func (o DashboardCategoryDrillDownFilterPtrOutput) Elem() DashboardCategoryDrillDownFilterOutput {
	return o.ApplyT(func(v *DashboardCategoryDrillDownFilter) DashboardCategoryDrillDownFilter {
		if v != nil {
			return *v
		}
		var ret DashboardCategoryDrillDownFilter
		return ret
	}).(DashboardCategoryDrillDownFilterOutput)
}

func (o DashboardCategoryDrillDownFilterPtrOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardCategoryDrillDownFilter) []string {
		if v == nil {
			return nil
		}
		return v.CategoryValues
	}).(pulumi.StringArrayOutput)
}

func (o DashboardCategoryDrillDownFilterPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardCategoryDrillDownFilter) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

type DashboardCategoryFilter struct {
	Column        DashboardColumnIdentifier            `pulumi:"column"`
	Configuration DashboardCategoryFilterConfiguration `pulumi:"configuration"`
	FilterId      string                               `pulumi:"filterId"`
}

// DashboardCategoryFilterInput is an input type that accepts DashboardCategoryFilterArgs and DashboardCategoryFilterOutput values.
// You can construct a concrete instance of `DashboardCategoryFilterInput` via:
//
//	DashboardCategoryFilterArgs{...}
type DashboardCategoryFilterInput interface {
	pulumi.Input

	ToDashboardCategoryFilterOutput() DashboardCategoryFilterOutput
	ToDashboardCategoryFilterOutputWithContext(context.Context) DashboardCategoryFilterOutput
}

type DashboardCategoryFilterArgs struct {
	Column        DashboardColumnIdentifierInput            `pulumi:"column"`
	Configuration DashboardCategoryFilterConfigurationInput `pulumi:"configuration"`
	FilterId      pulumi.StringInput                        `pulumi:"filterId"`
}

func (DashboardCategoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoryFilter)(nil)).Elem()
}

func (i DashboardCategoryFilterArgs) ToDashboardCategoryFilterOutput() DashboardCategoryFilterOutput {
	return i.ToDashboardCategoryFilterOutputWithContext(context.Background())
}

func (i DashboardCategoryFilterArgs) ToDashboardCategoryFilterOutputWithContext(ctx context.Context) DashboardCategoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoryFilterOutput)
}

func (i DashboardCategoryFilterArgs) ToDashboardCategoryFilterPtrOutput() DashboardCategoryFilterPtrOutput {
	return i.ToDashboardCategoryFilterPtrOutputWithContext(context.Background())
}

func (i DashboardCategoryFilterArgs) ToDashboardCategoryFilterPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoryFilterOutput).ToDashboardCategoryFilterPtrOutputWithContext(ctx)
}

// DashboardCategoryFilterPtrInput is an input type that accepts DashboardCategoryFilterArgs, DashboardCategoryFilterPtr and DashboardCategoryFilterPtrOutput values.
// You can construct a concrete instance of `DashboardCategoryFilterPtrInput` via:
//
//	        DashboardCategoryFilterArgs{...}
//
//	or:
//
//	        nil
type DashboardCategoryFilterPtrInput interface {
	pulumi.Input

	ToDashboardCategoryFilterPtrOutput() DashboardCategoryFilterPtrOutput
	ToDashboardCategoryFilterPtrOutputWithContext(context.Context) DashboardCategoryFilterPtrOutput
}

type dashboardCategoryFilterPtrType DashboardCategoryFilterArgs

func DashboardCategoryFilterPtr(v *DashboardCategoryFilterArgs) DashboardCategoryFilterPtrInput {
	return (*dashboardCategoryFilterPtrType)(v)
}

func (*dashboardCategoryFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoryFilter)(nil)).Elem()
}

func (i *dashboardCategoryFilterPtrType) ToDashboardCategoryFilterPtrOutput() DashboardCategoryFilterPtrOutput {
	return i.ToDashboardCategoryFilterPtrOutputWithContext(context.Background())
}

func (i *dashboardCategoryFilterPtrType) ToDashboardCategoryFilterPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoryFilterPtrOutput)
}

type DashboardCategoryFilterOutput struct{ *pulumi.OutputState }

func (DashboardCategoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoryFilter)(nil)).Elem()
}

func (o DashboardCategoryFilterOutput) ToDashboardCategoryFilterOutput() DashboardCategoryFilterOutput {
	return o
}

func (o DashboardCategoryFilterOutput) ToDashboardCategoryFilterOutputWithContext(ctx context.Context) DashboardCategoryFilterOutput {
	return o
}

func (o DashboardCategoryFilterOutput) ToDashboardCategoryFilterPtrOutput() DashboardCategoryFilterPtrOutput {
	return o.ToDashboardCategoryFilterPtrOutputWithContext(context.Background())
}

func (o DashboardCategoryFilterOutput) ToDashboardCategoryFilterPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCategoryFilter) *DashboardCategoryFilter {
		return &v
	}).(DashboardCategoryFilterPtrOutput)
}

func (o DashboardCategoryFilterOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardCategoryFilter) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardCategoryFilterOutput) Configuration() DashboardCategoryFilterConfigurationOutput {
	return o.ApplyT(func(v DashboardCategoryFilter) DashboardCategoryFilterConfiguration { return v.Configuration }).(DashboardCategoryFilterConfigurationOutput)
}

func (o DashboardCategoryFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCategoryFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

type DashboardCategoryFilterPtrOutput struct{ *pulumi.OutputState }

func (DashboardCategoryFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoryFilter)(nil)).Elem()
}

func (o DashboardCategoryFilterPtrOutput) ToDashboardCategoryFilterPtrOutput() DashboardCategoryFilterPtrOutput {
	return o
}

func (o DashboardCategoryFilterPtrOutput) ToDashboardCategoryFilterPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterPtrOutput {
	return o
}

func (o DashboardCategoryFilterPtrOutput) Elem() DashboardCategoryFilterOutput {
	return o.ApplyT(func(v *DashboardCategoryFilter) DashboardCategoryFilter {
		if v != nil {
			return *v
		}
		var ret DashboardCategoryFilter
		return ret
	}).(DashboardCategoryFilterOutput)
}

func (o DashboardCategoryFilterPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardCategoryFilter) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardCategoryFilterPtrOutput) Configuration() DashboardCategoryFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCategoryFilter) *DashboardCategoryFilterConfiguration {
		if v == nil {
			return nil
		}
		return &v.Configuration
	}).(DashboardCategoryFilterConfigurationPtrOutput)
}

func (o DashboardCategoryFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCategoryFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

type DashboardCategoryFilterConfiguration struct {
	CustomFilterConfiguration     *DashboardCustomFilterConfiguration     `pulumi:"customFilterConfiguration"`
	CustomFilterListConfiguration *DashboardCustomFilterListConfiguration `pulumi:"customFilterListConfiguration"`
	FilterListConfiguration       *DashboardFilterListConfiguration       `pulumi:"filterListConfiguration"`
}

// DashboardCategoryFilterConfigurationInput is an input type that accepts DashboardCategoryFilterConfigurationArgs and DashboardCategoryFilterConfigurationOutput values.
// You can construct a concrete instance of `DashboardCategoryFilterConfigurationInput` via:
//
//	DashboardCategoryFilterConfigurationArgs{...}
type DashboardCategoryFilterConfigurationInput interface {
	pulumi.Input

	ToDashboardCategoryFilterConfigurationOutput() DashboardCategoryFilterConfigurationOutput
	ToDashboardCategoryFilterConfigurationOutputWithContext(context.Context) DashboardCategoryFilterConfigurationOutput
}

type DashboardCategoryFilterConfigurationArgs struct {
	CustomFilterConfiguration     DashboardCustomFilterConfigurationPtrInput     `pulumi:"customFilterConfiguration"`
	CustomFilterListConfiguration DashboardCustomFilterListConfigurationPtrInput `pulumi:"customFilterListConfiguration"`
	FilterListConfiguration       DashboardFilterListConfigurationPtrInput       `pulumi:"filterListConfiguration"`
}

func (DashboardCategoryFilterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoryFilterConfiguration)(nil)).Elem()
}

func (i DashboardCategoryFilterConfigurationArgs) ToDashboardCategoryFilterConfigurationOutput() DashboardCategoryFilterConfigurationOutput {
	return i.ToDashboardCategoryFilterConfigurationOutputWithContext(context.Background())
}

func (i DashboardCategoryFilterConfigurationArgs) ToDashboardCategoryFilterConfigurationOutputWithContext(ctx context.Context) DashboardCategoryFilterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoryFilterConfigurationOutput)
}

func (i DashboardCategoryFilterConfigurationArgs) ToDashboardCategoryFilterConfigurationPtrOutput() DashboardCategoryFilterConfigurationPtrOutput {
	return i.ToDashboardCategoryFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardCategoryFilterConfigurationArgs) ToDashboardCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoryFilterConfigurationOutput).ToDashboardCategoryFilterConfigurationPtrOutputWithContext(ctx)
}

// DashboardCategoryFilterConfigurationPtrInput is an input type that accepts DashboardCategoryFilterConfigurationArgs, DashboardCategoryFilterConfigurationPtr and DashboardCategoryFilterConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardCategoryFilterConfigurationPtrInput` via:
//
//	        DashboardCategoryFilterConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardCategoryFilterConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardCategoryFilterConfigurationPtrOutput() DashboardCategoryFilterConfigurationPtrOutput
	ToDashboardCategoryFilterConfigurationPtrOutputWithContext(context.Context) DashboardCategoryFilterConfigurationPtrOutput
}

type dashboardCategoryFilterConfigurationPtrType DashboardCategoryFilterConfigurationArgs

func DashboardCategoryFilterConfigurationPtr(v *DashboardCategoryFilterConfigurationArgs) DashboardCategoryFilterConfigurationPtrInput {
	return (*dashboardCategoryFilterConfigurationPtrType)(v)
}

func (*dashboardCategoryFilterConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoryFilterConfiguration)(nil)).Elem()
}

func (i *dashboardCategoryFilterConfigurationPtrType) ToDashboardCategoryFilterConfigurationPtrOutput() DashboardCategoryFilterConfigurationPtrOutput {
	return i.ToDashboardCategoryFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardCategoryFilterConfigurationPtrType) ToDashboardCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCategoryFilterConfigurationPtrOutput)
}

type DashboardCategoryFilterConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardCategoryFilterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoryFilterConfiguration)(nil)).Elem()
}

func (o DashboardCategoryFilterConfigurationOutput) ToDashboardCategoryFilterConfigurationOutput() DashboardCategoryFilterConfigurationOutput {
	return o
}

func (o DashboardCategoryFilterConfigurationOutput) ToDashboardCategoryFilterConfigurationOutputWithContext(ctx context.Context) DashboardCategoryFilterConfigurationOutput {
	return o
}

func (o DashboardCategoryFilterConfigurationOutput) ToDashboardCategoryFilterConfigurationPtrOutput() DashboardCategoryFilterConfigurationPtrOutput {
	return o.ToDashboardCategoryFilterConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardCategoryFilterConfigurationOutput) ToDashboardCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCategoryFilterConfiguration) *DashboardCategoryFilterConfiguration {
		return &v
	}).(DashboardCategoryFilterConfigurationPtrOutput)
}

func (o DashboardCategoryFilterConfigurationOutput) CustomFilterConfiguration() DashboardCustomFilterConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCategoryFilterConfiguration) *DashboardCustomFilterConfiguration {
		return v.CustomFilterConfiguration
	}).(DashboardCustomFilterConfigurationPtrOutput)
}

func (o DashboardCategoryFilterConfigurationOutput) CustomFilterListConfiguration() DashboardCustomFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCategoryFilterConfiguration) *DashboardCustomFilterListConfiguration {
		return v.CustomFilterListConfiguration
	}).(DashboardCustomFilterListConfigurationPtrOutput)
}

func (o DashboardCategoryFilterConfigurationOutput) FilterListConfiguration() DashboardFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCategoryFilterConfiguration) *DashboardFilterListConfiguration {
		return v.FilterListConfiguration
	}).(DashboardFilterListConfigurationPtrOutput)
}

type DashboardCategoryFilterConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCategoryFilterConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoryFilterConfiguration)(nil)).Elem()
}

func (o DashboardCategoryFilterConfigurationPtrOutput) ToDashboardCategoryFilterConfigurationPtrOutput() DashboardCategoryFilterConfigurationPtrOutput {
	return o
}

func (o DashboardCategoryFilterConfigurationPtrOutput) ToDashboardCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterConfigurationPtrOutput {
	return o
}

func (o DashboardCategoryFilterConfigurationPtrOutput) Elem() DashboardCategoryFilterConfigurationOutput {
	return o.ApplyT(func(v *DashboardCategoryFilterConfiguration) DashboardCategoryFilterConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardCategoryFilterConfiguration
		return ret
	}).(DashboardCategoryFilterConfigurationOutput)
}

func (o DashboardCategoryFilterConfigurationPtrOutput) CustomFilterConfiguration() DashboardCustomFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCategoryFilterConfiguration) *DashboardCustomFilterConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomFilterConfiguration
	}).(DashboardCustomFilterConfigurationPtrOutput)
}

func (o DashboardCategoryFilterConfigurationPtrOutput) CustomFilterListConfiguration() DashboardCustomFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCategoryFilterConfiguration) *DashboardCustomFilterListConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomFilterListConfiguration
	}).(DashboardCustomFilterListConfigurationPtrOutput)
}

func (o DashboardCategoryFilterConfigurationPtrOutput) FilterListConfiguration() DashboardFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCategoryFilterConfiguration) *DashboardFilterListConfiguration {
		if v == nil {
			return nil
		}
		return v.FilterListConfiguration
	}).(DashboardFilterListConfigurationPtrOutput)
}

type DashboardChartAxisLabelOptions struct {
	AxisLabelOptions   []DashboardAxisLabelOptions `pulumi:"axisLabelOptions"`
	SortIconVisibility *DashboardVisibility        `pulumi:"sortIconVisibility"`
	Visibility         *DashboardVisibility        `pulumi:"visibility"`
}

// DashboardChartAxisLabelOptionsInput is an input type that accepts DashboardChartAxisLabelOptionsArgs and DashboardChartAxisLabelOptionsOutput values.
// You can construct a concrete instance of `DashboardChartAxisLabelOptionsInput` via:
//
//	DashboardChartAxisLabelOptionsArgs{...}
type DashboardChartAxisLabelOptionsInput interface {
	pulumi.Input

	ToDashboardChartAxisLabelOptionsOutput() DashboardChartAxisLabelOptionsOutput
	ToDashboardChartAxisLabelOptionsOutputWithContext(context.Context) DashboardChartAxisLabelOptionsOutput
}

type DashboardChartAxisLabelOptionsArgs struct {
	AxisLabelOptions   DashboardAxisLabelOptionsArrayInput `pulumi:"axisLabelOptions"`
	SortIconVisibility DashboardVisibilityPtrInput         `pulumi:"sortIconVisibility"`
	Visibility         DashboardVisibilityPtrInput         `pulumi:"visibility"`
}

func (DashboardChartAxisLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardChartAxisLabelOptions)(nil)).Elem()
}

func (i DashboardChartAxisLabelOptionsArgs) ToDashboardChartAxisLabelOptionsOutput() DashboardChartAxisLabelOptionsOutput {
	return i.ToDashboardChartAxisLabelOptionsOutputWithContext(context.Background())
}

func (i DashboardChartAxisLabelOptionsArgs) ToDashboardChartAxisLabelOptionsOutputWithContext(ctx context.Context) DashboardChartAxisLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardChartAxisLabelOptionsOutput)
}

func (i DashboardChartAxisLabelOptionsArgs) ToDashboardChartAxisLabelOptionsPtrOutput() DashboardChartAxisLabelOptionsPtrOutput {
	return i.ToDashboardChartAxisLabelOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardChartAxisLabelOptionsArgs) ToDashboardChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardChartAxisLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardChartAxisLabelOptionsOutput).ToDashboardChartAxisLabelOptionsPtrOutputWithContext(ctx)
}

// DashboardChartAxisLabelOptionsPtrInput is an input type that accepts DashboardChartAxisLabelOptionsArgs, DashboardChartAxisLabelOptionsPtr and DashboardChartAxisLabelOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardChartAxisLabelOptionsPtrInput` via:
//
//	        DashboardChartAxisLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardChartAxisLabelOptionsPtrInput interface {
	pulumi.Input

	ToDashboardChartAxisLabelOptionsPtrOutput() DashboardChartAxisLabelOptionsPtrOutput
	ToDashboardChartAxisLabelOptionsPtrOutputWithContext(context.Context) DashboardChartAxisLabelOptionsPtrOutput
}

type dashboardChartAxisLabelOptionsPtrType DashboardChartAxisLabelOptionsArgs

func DashboardChartAxisLabelOptionsPtr(v *DashboardChartAxisLabelOptionsArgs) DashboardChartAxisLabelOptionsPtrInput {
	return (*dashboardChartAxisLabelOptionsPtrType)(v)
}

func (*dashboardChartAxisLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardChartAxisLabelOptions)(nil)).Elem()
}

func (i *dashboardChartAxisLabelOptionsPtrType) ToDashboardChartAxisLabelOptionsPtrOutput() DashboardChartAxisLabelOptionsPtrOutput {
	return i.ToDashboardChartAxisLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardChartAxisLabelOptionsPtrType) ToDashboardChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardChartAxisLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardChartAxisLabelOptionsPtrOutput)
}

type DashboardChartAxisLabelOptionsOutput struct{ *pulumi.OutputState }

func (DashboardChartAxisLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardChartAxisLabelOptions)(nil)).Elem()
}

func (o DashboardChartAxisLabelOptionsOutput) ToDashboardChartAxisLabelOptionsOutput() DashboardChartAxisLabelOptionsOutput {
	return o
}

func (o DashboardChartAxisLabelOptionsOutput) ToDashboardChartAxisLabelOptionsOutputWithContext(ctx context.Context) DashboardChartAxisLabelOptionsOutput {
	return o
}

func (o DashboardChartAxisLabelOptionsOutput) ToDashboardChartAxisLabelOptionsPtrOutput() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ToDashboardChartAxisLabelOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardChartAxisLabelOptionsOutput) ToDashboardChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardChartAxisLabelOptions) *DashboardChartAxisLabelOptions {
		return &v
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardChartAxisLabelOptionsOutput) AxisLabelOptions() DashboardAxisLabelOptionsArrayOutput {
	return o.ApplyT(func(v DashboardChartAxisLabelOptions) []DashboardAxisLabelOptions { return v.AxisLabelOptions }).(DashboardAxisLabelOptionsArrayOutput)
}

func (o DashboardChartAxisLabelOptionsOutput) SortIconVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardChartAxisLabelOptions) *DashboardVisibility { return v.SortIconVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardChartAxisLabelOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardChartAxisLabelOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardChartAxisLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardChartAxisLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardChartAxisLabelOptions)(nil)).Elem()
}

func (o DashboardChartAxisLabelOptionsPtrOutput) ToDashboardChartAxisLabelOptionsPtrOutput() DashboardChartAxisLabelOptionsPtrOutput {
	return o
}

func (o DashboardChartAxisLabelOptionsPtrOutput) ToDashboardChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardChartAxisLabelOptionsPtrOutput {
	return o
}

func (o DashboardChartAxisLabelOptionsPtrOutput) Elem() DashboardChartAxisLabelOptionsOutput {
	return o.ApplyT(func(v *DashboardChartAxisLabelOptions) DashboardChartAxisLabelOptions {
		if v != nil {
			return *v
		}
		var ret DashboardChartAxisLabelOptions
		return ret
	}).(DashboardChartAxisLabelOptionsOutput)
}

func (o DashboardChartAxisLabelOptionsPtrOutput) AxisLabelOptions() DashboardAxisLabelOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardChartAxisLabelOptions) []DashboardAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.AxisLabelOptions
	}).(DashboardAxisLabelOptionsArrayOutput)
}

func (o DashboardChartAxisLabelOptionsPtrOutput) SortIconVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardChartAxisLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.SortIconVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardChartAxisLabelOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardChartAxisLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardClusterMarker struct {
	SimpleClusterMarker *DashboardSimpleClusterMarker `pulumi:"simpleClusterMarker"`
}

// DashboardClusterMarkerInput is an input type that accepts DashboardClusterMarkerArgs and DashboardClusterMarkerOutput values.
// You can construct a concrete instance of `DashboardClusterMarkerInput` via:
//
//	DashboardClusterMarkerArgs{...}
type DashboardClusterMarkerInput interface {
	pulumi.Input

	ToDashboardClusterMarkerOutput() DashboardClusterMarkerOutput
	ToDashboardClusterMarkerOutputWithContext(context.Context) DashboardClusterMarkerOutput
}

type DashboardClusterMarkerArgs struct {
	SimpleClusterMarker DashboardSimpleClusterMarkerPtrInput `pulumi:"simpleClusterMarker"`
}

func (DashboardClusterMarkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardClusterMarker)(nil)).Elem()
}

func (i DashboardClusterMarkerArgs) ToDashboardClusterMarkerOutput() DashboardClusterMarkerOutput {
	return i.ToDashboardClusterMarkerOutputWithContext(context.Background())
}

func (i DashboardClusterMarkerArgs) ToDashboardClusterMarkerOutputWithContext(ctx context.Context) DashboardClusterMarkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardClusterMarkerOutput)
}

func (i DashboardClusterMarkerArgs) ToDashboardClusterMarkerPtrOutput() DashboardClusterMarkerPtrOutput {
	return i.ToDashboardClusterMarkerPtrOutputWithContext(context.Background())
}

func (i DashboardClusterMarkerArgs) ToDashboardClusterMarkerPtrOutputWithContext(ctx context.Context) DashboardClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardClusterMarkerOutput).ToDashboardClusterMarkerPtrOutputWithContext(ctx)
}

// DashboardClusterMarkerPtrInput is an input type that accepts DashboardClusterMarkerArgs, DashboardClusterMarkerPtr and DashboardClusterMarkerPtrOutput values.
// You can construct a concrete instance of `DashboardClusterMarkerPtrInput` via:
//
//	        DashboardClusterMarkerArgs{...}
//
//	or:
//
//	        nil
type DashboardClusterMarkerPtrInput interface {
	pulumi.Input

	ToDashboardClusterMarkerPtrOutput() DashboardClusterMarkerPtrOutput
	ToDashboardClusterMarkerPtrOutputWithContext(context.Context) DashboardClusterMarkerPtrOutput
}

type dashboardClusterMarkerPtrType DashboardClusterMarkerArgs

func DashboardClusterMarkerPtr(v *DashboardClusterMarkerArgs) DashboardClusterMarkerPtrInput {
	return (*dashboardClusterMarkerPtrType)(v)
}

func (*dashboardClusterMarkerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardClusterMarker)(nil)).Elem()
}

func (i *dashboardClusterMarkerPtrType) ToDashboardClusterMarkerPtrOutput() DashboardClusterMarkerPtrOutput {
	return i.ToDashboardClusterMarkerPtrOutputWithContext(context.Background())
}

func (i *dashboardClusterMarkerPtrType) ToDashboardClusterMarkerPtrOutputWithContext(ctx context.Context) DashboardClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardClusterMarkerPtrOutput)
}

type DashboardClusterMarkerOutput struct{ *pulumi.OutputState }

func (DashboardClusterMarkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardClusterMarker)(nil)).Elem()
}

func (o DashboardClusterMarkerOutput) ToDashboardClusterMarkerOutput() DashboardClusterMarkerOutput {
	return o
}

func (o DashboardClusterMarkerOutput) ToDashboardClusterMarkerOutputWithContext(ctx context.Context) DashboardClusterMarkerOutput {
	return o
}

func (o DashboardClusterMarkerOutput) ToDashboardClusterMarkerPtrOutput() DashboardClusterMarkerPtrOutput {
	return o.ToDashboardClusterMarkerPtrOutputWithContext(context.Background())
}

func (o DashboardClusterMarkerOutput) ToDashboardClusterMarkerPtrOutputWithContext(ctx context.Context) DashboardClusterMarkerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardClusterMarker) *DashboardClusterMarker {
		return &v
	}).(DashboardClusterMarkerPtrOutput)
}

func (o DashboardClusterMarkerOutput) SimpleClusterMarker() DashboardSimpleClusterMarkerPtrOutput {
	return o.ApplyT(func(v DashboardClusterMarker) *DashboardSimpleClusterMarker { return v.SimpleClusterMarker }).(DashboardSimpleClusterMarkerPtrOutput)
}

type DashboardClusterMarkerPtrOutput struct{ *pulumi.OutputState }

func (DashboardClusterMarkerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardClusterMarker)(nil)).Elem()
}

func (o DashboardClusterMarkerPtrOutput) ToDashboardClusterMarkerPtrOutput() DashboardClusterMarkerPtrOutput {
	return o
}

func (o DashboardClusterMarkerPtrOutput) ToDashboardClusterMarkerPtrOutputWithContext(ctx context.Context) DashboardClusterMarkerPtrOutput {
	return o
}

func (o DashboardClusterMarkerPtrOutput) Elem() DashboardClusterMarkerOutput {
	return o.ApplyT(func(v *DashboardClusterMarker) DashboardClusterMarker {
		if v != nil {
			return *v
		}
		var ret DashboardClusterMarker
		return ret
	}).(DashboardClusterMarkerOutput)
}

func (o DashboardClusterMarkerPtrOutput) SimpleClusterMarker() DashboardSimpleClusterMarkerPtrOutput {
	return o.ApplyT(func(v *DashboardClusterMarker) *DashboardSimpleClusterMarker {
		if v == nil {
			return nil
		}
		return v.SimpleClusterMarker
	}).(DashboardSimpleClusterMarkerPtrOutput)
}

type DashboardClusterMarkerConfiguration struct {
	ClusterMarker *DashboardClusterMarker `pulumi:"clusterMarker"`
}

// DashboardClusterMarkerConfigurationInput is an input type that accepts DashboardClusterMarkerConfigurationArgs and DashboardClusterMarkerConfigurationOutput values.
// You can construct a concrete instance of `DashboardClusterMarkerConfigurationInput` via:
//
//	DashboardClusterMarkerConfigurationArgs{...}
type DashboardClusterMarkerConfigurationInput interface {
	pulumi.Input

	ToDashboardClusterMarkerConfigurationOutput() DashboardClusterMarkerConfigurationOutput
	ToDashboardClusterMarkerConfigurationOutputWithContext(context.Context) DashboardClusterMarkerConfigurationOutput
}

type DashboardClusterMarkerConfigurationArgs struct {
	ClusterMarker DashboardClusterMarkerPtrInput `pulumi:"clusterMarker"`
}

func (DashboardClusterMarkerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardClusterMarkerConfiguration)(nil)).Elem()
}

func (i DashboardClusterMarkerConfigurationArgs) ToDashboardClusterMarkerConfigurationOutput() DashboardClusterMarkerConfigurationOutput {
	return i.ToDashboardClusterMarkerConfigurationOutputWithContext(context.Background())
}

func (i DashboardClusterMarkerConfigurationArgs) ToDashboardClusterMarkerConfigurationOutputWithContext(ctx context.Context) DashboardClusterMarkerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardClusterMarkerConfigurationOutput)
}

func (i DashboardClusterMarkerConfigurationArgs) ToDashboardClusterMarkerConfigurationPtrOutput() DashboardClusterMarkerConfigurationPtrOutput {
	return i.ToDashboardClusterMarkerConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardClusterMarkerConfigurationArgs) ToDashboardClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) DashboardClusterMarkerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardClusterMarkerConfigurationOutput).ToDashboardClusterMarkerConfigurationPtrOutputWithContext(ctx)
}

// DashboardClusterMarkerConfigurationPtrInput is an input type that accepts DashboardClusterMarkerConfigurationArgs, DashboardClusterMarkerConfigurationPtr and DashboardClusterMarkerConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardClusterMarkerConfigurationPtrInput` via:
//
//	        DashboardClusterMarkerConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardClusterMarkerConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardClusterMarkerConfigurationPtrOutput() DashboardClusterMarkerConfigurationPtrOutput
	ToDashboardClusterMarkerConfigurationPtrOutputWithContext(context.Context) DashboardClusterMarkerConfigurationPtrOutput
}

type dashboardClusterMarkerConfigurationPtrType DashboardClusterMarkerConfigurationArgs

func DashboardClusterMarkerConfigurationPtr(v *DashboardClusterMarkerConfigurationArgs) DashboardClusterMarkerConfigurationPtrInput {
	return (*dashboardClusterMarkerConfigurationPtrType)(v)
}

func (*dashboardClusterMarkerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardClusterMarkerConfiguration)(nil)).Elem()
}

func (i *dashboardClusterMarkerConfigurationPtrType) ToDashboardClusterMarkerConfigurationPtrOutput() DashboardClusterMarkerConfigurationPtrOutput {
	return i.ToDashboardClusterMarkerConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardClusterMarkerConfigurationPtrType) ToDashboardClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) DashboardClusterMarkerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardClusterMarkerConfigurationPtrOutput)
}

type DashboardClusterMarkerConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardClusterMarkerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardClusterMarkerConfiguration)(nil)).Elem()
}

func (o DashboardClusterMarkerConfigurationOutput) ToDashboardClusterMarkerConfigurationOutput() DashboardClusterMarkerConfigurationOutput {
	return o
}

func (o DashboardClusterMarkerConfigurationOutput) ToDashboardClusterMarkerConfigurationOutputWithContext(ctx context.Context) DashboardClusterMarkerConfigurationOutput {
	return o
}

func (o DashboardClusterMarkerConfigurationOutput) ToDashboardClusterMarkerConfigurationPtrOutput() DashboardClusterMarkerConfigurationPtrOutput {
	return o.ToDashboardClusterMarkerConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardClusterMarkerConfigurationOutput) ToDashboardClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) DashboardClusterMarkerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardClusterMarkerConfiguration) *DashboardClusterMarkerConfiguration {
		return &v
	}).(DashboardClusterMarkerConfigurationPtrOutput)
}

func (o DashboardClusterMarkerConfigurationOutput) ClusterMarker() DashboardClusterMarkerPtrOutput {
	return o.ApplyT(func(v DashboardClusterMarkerConfiguration) *DashboardClusterMarker { return v.ClusterMarker }).(DashboardClusterMarkerPtrOutput)
}

type DashboardClusterMarkerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardClusterMarkerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardClusterMarkerConfiguration)(nil)).Elem()
}

func (o DashboardClusterMarkerConfigurationPtrOutput) ToDashboardClusterMarkerConfigurationPtrOutput() DashboardClusterMarkerConfigurationPtrOutput {
	return o
}

func (o DashboardClusterMarkerConfigurationPtrOutput) ToDashboardClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) DashboardClusterMarkerConfigurationPtrOutput {
	return o
}

func (o DashboardClusterMarkerConfigurationPtrOutput) Elem() DashboardClusterMarkerConfigurationOutput {
	return o.ApplyT(func(v *DashboardClusterMarkerConfiguration) DashboardClusterMarkerConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardClusterMarkerConfiguration
		return ret
	}).(DashboardClusterMarkerConfigurationOutput)
}

func (o DashboardClusterMarkerConfigurationPtrOutput) ClusterMarker() DashboardClusterMarkerPtrOutput {
	return o.ApplyT(func(v *DashboardClusterMarkerConfiguration) *DashboardClusterMarker {
		if v == nil {
			return nil
		}
		return v.ClusterMarker
	}).(DashboardClusterMarkerPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAggregationFunctionInput)(nil)).Elem(), AnalysisAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAggregationFunctionPtrInput)(nil)).Elem(), AnalysisAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAggregationSortConfigurationInput)(nil)).Elem(), AnalysisAggregationSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAggregationSortConfigurationArrayInput)(nil)).Elem(), AnalysisAggregationSortConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAnchorDateConfigurationInput)(nil)).Elem(), AnalysisAnchorDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAnchorDateConfigurationPtrInput)(nil)).Elem(), AnalysisAnchorDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcAxisConfigurationInput)(nil)).Elem(), AnalysisArcAxisConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcAxisConfigurationPtrInput)(nil)).Elem(), AnalysisArcAxisConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcAxisDisplayRangeInput)(nil)).Elem(), AnalysisArcAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcAxisDisplayRangePtrInput)(nil)).Elem(), AnalysisArcAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcConfigurationInput)(nil)).Elem(), AnalysisArcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcConfigurationPtrInput)(nil)).Elem(), AnalysisArcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcOptionsInput)(nil)).Elem(), AnalysisArcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcOptionsPtrInput)(nil)).Elem(), AnalysisArcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisDataOptionsInput)(nil)).Elem(), AnalysisAxisDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisDataOptionsPtrInput)(nil)).Elem(), AnalysisAxisDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisDisplayDataDrivenRangeInput)(nil)).Elem(), AnalysisAxisDisplayDataDrivenRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisDisplayDataDrivenRangePtrInput)(nil)).Elem(), AnalysisAxisDisplayDataDrivenRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisDisplayMinMaxRangeInput)(nil)).Elem(), AnalysisAxisDisplayMinMaxRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisDisplayMinMaxRangePtrInput)(nil)).Elem(), AnalysisAxisDisplayMinMaxRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisDisplayOptionsInput)(nil)).Elem(), AnalysisAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisDisplayOptionsPtrInput)(nil)).Elem(), AnalysisAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisDisplayRangeInput)(nil)).Elem(), AnalysisAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisDisplayRangePtrInput)(nil)).Elem(), AnalysisAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisLabelOptionsInput)(nil)).Elem(), AnalysisAxisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisLabelOptionsArrayInput)(nil)).Elem(), AnalysisAxisLabelOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisLabelReferenceOptionsInput)(nil)).Elem(), AnalysisAxisLabelReferenceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisLabelReferenceOptionsPtrInput)(nil)).Elem(), AnalysisAxisLabelReferenceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisLinearScaleInput)(nil)).Elem(), AnalysisAxisLinearScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisLinearScalePtrInput)(nil)).Elem(), AnalysisAxisLinearScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisLogarithmicScaleInput)(nil)).Elem(), AnalysisAxisLogarithmicScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisLogarithmicScalePtrInput)(nil)).Elem(), AnalysisAxisLogarithmicScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisScaleInput)(nil)).Elem(), AnalysisAxisScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisScalePtrInput)(nil)).Elem(), AnalysisAxisScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisTickLabelOptionsInput)(nil)).Elem(), AnalysisAxisTickLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisTickLabelOptionsPtrInput)(nil)).Elem(), AnalysisAxisTickLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartAggregatedFieldWellsInput)(nil)).Elem(), AnalysisBarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisBarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartConfigurationInput)(nil)).Elem(), AnalysisBarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartConfigurationPtrInput)(nil)).Elem(), AnalysisBarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartFieldWellsInput)(nil)).Elem(), AnalysisBarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartFieldWellsPtrInput)(nil)).Elem(), AnalysisBarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartSortConfigurationInput)(nil)).Elem(), AnalysisBarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartSortConfigurationPtrInput)(nil)).Elem(), AnalysisBarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartVisualInput)(nil)).Elem(), AnalysisBarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartVisualPtrInput)(nil)).Elem(), AnalysisBarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBinCountOptionsInput)(nil)).Elem(), AnalysisBinCountOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBinCountOptionsPtrInput)(nil)).Elem(), AnalysisBinCountOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBinWidthOptionsInput)(nil)).Elem(), AnalysisBinWidthOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBinWidthOptionsPtrInput)(nil)).Elem(), AnalysisBinWidthOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBodySectionConfigurationInput)(nil)).Elem(), AnalysisBodySectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBodySectionConfigurationArrayInput)(nil)).Elem(), AnalysisBodySectionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBodySectionContentInput)(nil)).Elem(), AnalysisBodySectionContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotAggregatedFieldWellsInput)(nil)).Elem(), AnalysisBoxPlotAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisBoxPlotAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotChartConfigurationInput)(nil)).Elem(), AnalysisBoxPlotChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotChartConfigurationPtrInput)(nil)).Elem(), AnalysisBoxPlotChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotFieldWellsInput)(nil)).Elem(), AnalysisBoxPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotFieldWellsPtrInput)(nil)).Elem(), AnalysisBoxPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotOptionsInput)(nil)).Elem(), AnalysisBoxPlotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotOptionsPtrInput)(nil)).Elem(), AnalysisBoxPlotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotSortConfigurationInput)(nil)).Elem(), AnalysisBoxPlotSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotSortConfigurationPtrInput)(nil)).Elem(), AnalysisBoxPlotSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotStyleOptionsInput)(nil)).Elem(), AnalysisBoxPlotStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotStyleOptionsPtrInput)(nil)).Elem(), AnalysisBoxPlotStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotVisualInput)(nil)).Elem(), AnalysisBoxPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotVisualPtrInput)(nil)).Elem(), AnalysisBoxPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCalculatedFieldInput)(nil)).Elem(), AnalysisCalculatedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCalculatedFieldArrayInput)(nil)).Elem(), AnalysisCalculatedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCalculatedMeasureFieldInput)(nil)).Elem(), AnalysisCalculatedMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCalculatedMeasureFieldPtrInput)(nil)).Elem(), AnalysisCalculatedMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCascadingControlConfigurationInput)(nil)).Elem(), AnalysisCascadingControlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCascadingControlConfigurationPtrInput)(nil)).Elem(), AnalysisCascadingControlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCascadingControlSourceInput)(nil)).Elem(), AnalysisCascadingControlSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCascadingControlSourceArrayInput)(nil)).Elem(), AnalysisCascadingControlSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoricalDimensionFieldInput)(nil)).Elem(), AnalysisCategoricalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoricalDimensionFieldPtrInput)(nil)).Elem(), AnalysisCategoricalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoricalMeasureFieldInput)(nil)).Elem(), AnalysisCategoricalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoricalMeasureFieldPtrInput)(nil)).Elem(), AnalysisCategoricalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoryDrillDownFilterInput)(nil)).Elem(), AnalysisCategoryDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoryDrillDownFilterPtrInput)(nil)).Elem(), AnalysisCategoryDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoryFilterInput)(nil)).Elem(), AnalysisCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoryFilterPtrInput)(nil)).Elem(), AnalysisCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoryFilterConfigurationInput)(nil)).Elem(), AnalysisCategoryFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoryFilterConfigurationPtrInput)(nil)).Elem(), AnalysisCategoryFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisChartAxisLabelOptionsInput)(nil)).Elem(), AnalysisChartAxisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisChartAxisLabelOptionsPtrInput)(nil)).Elem(), AnalysisChartAxisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisClusterMarkerInput)(nil)).Elem(), AnalysisClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisClusterMarkerPtrInput)(nil)).Elem(), AnalysisClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisClusterMarkerConfigurationInput)(nil)).Elem(), AnalysisClusterMarkerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisClusterMarkerConfigurationPtrInput)(nil)).Elem(), AnalysisClusterMarkerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColorScaleInput)(nil)).Elem(), AnalysisColorScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColorScalePtrInput)(nil)).Elem(), AnalysisColorScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColorsConfigurationInput)(nil)).Elem(), AnalysisColorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColorsConfigurationPtrInput)(nil)).Elem(), AnalysisColorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnConfigurationInput)(nil)).Elem(), AnalysisColumnConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnConfigurationArrayInput)(nil)).Elem(), AnalysisColumnConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnHierarchyInput)(nil)).Elem(), AnalysisColumnHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnHierarchyArrayInput)(nil)).Elem(), AnalysisColumnHierarchyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnIdentifierInput)(nil)).Elem(), AnalysisColumnIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnIdentifierPtrInput)(nil)).Elem(), AnalysisColumnIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnIdentifierArrayInput)(nil)).Elem(), AnalysisColumnIdentifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnSortInput)(nil)).Elem(), AnalysisColumnSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnSortPtrInput)(nil)).Elem(), AnalysisColumnSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnTooltipItemInput)(nil)).Elem(), AnalysisColumnTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnTooltipItemPtrInput)(nil)).Elem(), AnalysisColumnTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComboChartAggregatedFieldWellsInput)(nil)).Elem(), AnalysisComboChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComboChartAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisComboChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComboChartConfigurationInput)(nil)).Elem(), AnalysisComboChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComboChartConfigurationPtrInput)(nil)).Elem(), AnalysisComboChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComboChartFieldWellsInput)(nil)).Elem(), AnalysisComboChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComboChartFieldWellsPtrInput)(nil)).Elem(), AnalysisComboChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComboChartSortConfigurationInput)(nil)).Elem(), AnalysisComboChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComboChartSortConfigurationPtrInput)(nil)).Elem(), AnalysisComboChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComboChartVisualInput)(nil)).Elem(), AnalysisComboChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComboChartVisualPtrInput)(nil)).Elem(), AnalysisComboChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComparisonConfigurationInput)(nil)).Elem(), AnalysisComparisonConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComparisonConfigurationPtrInput)(nil)).Elem(), AnalysisComparisonConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComparisonFormatConfigurationInput)(nil)).Elem(), AnalysisComparisonFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComparisonFormatConfigurationPtrInput)(nil)).Elem(), AnalysisComparisonFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComputationInput)(nil)).Elem(), AnalysisComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComputationArrayInput)(nil)).Elem(), AnalysisComputationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingColorInput)(nil)).Elem(), AnalysisConditionalFormattingColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingColorPtrInput)(nil)).Elem(), AnalysisConditionalFormattingColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingCustomIconConditionInput)(nil)).Elem(), AnalysisConditionalFormattingCustomIconConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingCustomIconConditionPtrInput)(nil)).Elem(), AnalysisConditionalFormattingCustomIconConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingCustomIconOptionsInput)(nil)).Elem(), AnalysisConditionalFormattingCustomIconOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingCustomIconOptionsPtrInput)(nil)).Elem(), AnalysisConditionalFormattingCustomIconOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingGradientColorInput)(nil)).Elem(), AnalysisConditionalFormattingGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingGradientColorPtrInput)(nil)).Elem(), AnalysisConditionalFormattingGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingIconInput)(nil)).Elem(), AnalysisConditionalFormattingIconArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingIconPtrInput)(nil)).Elem(), AnalysisConditionalFormattingIconArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingIconDisplayConfigurationInput)(nil)).Elem(), AnalysisConditionalFormattingIconDisplayConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingIconDisplayConfigurationPtrInput)(nil)).Elem(), AnalysisConditionalFormattingIconDisplayConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingIconSetInput)(nil)).Elem(), AnalysisConditionalFormattingIconSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingIconSetPtrInput)(nil)).Elem(), AnalysisConditionalFormattingIconSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingSolidColorInput)(nil)).Elem(), AnalysisConditionalFormattingSolidColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingSolidColorPtrInput)(nil)).Elem(), AnalysisConditionalFormattingSolidColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisContributionAnalysisDefaultInput)(nil)).Elem(), AnalysisContributionAnalysisDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisContributionAnalysisDefaultArrayInput)(nil)).Elem(), AnalysisContributionAnalysisDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCurrencyDisplayFormatConfigurationInput)(nil)).Elem(), AnalysisCurrencyDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCurrencyDisplayFormatConfigurationPtrInput)(nil)).Elem(), AnalysisCurrencyDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomActionFilterOperationInput)(nil)).Elem(), AnalysisCustomActionFilterOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomActionFilterOperationPtrInput)(nil)).Elem(), AnalysisCustomActionFilterOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomActionNavigationOperationInput)(nil)).Elem(), AnalysisCustomActionNavigationOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomActionNavigationOperationPtrInput)(nil)).Elem(), AnalysisCustomActionNavigationOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomActionSetParametersOperationInput)(nil)).Elem(), AnalysisCustomActionSetParametersOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomActionSetParametersOperationPtrInput)(nil)).Elem(), AnalysisCustomActionSetParametersOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomActionURLOperationInput)(nil)).Elem(), AnalysisCustomActionURLOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomActionURLOperationPtrInput)(nil)).Elem(), AnalysisCustomActionURLOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomColorInput)(nil)).Elem(), AnalysisCustomColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomColorArrayInput)(nil)).Elem(), AnalysisCustomColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomContentConfigurationInput)(nil)).Elem(), AnalysisCustomContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomContentConfigurationPtrInput)(nil)).Elem(), AnalysisCustomContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomContentVisualInput)(nil)).Elem(), AnalysisCustomContentVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomContentVisualPtrInput)(nil)).Elem(), AnalysisCustomContentVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomFilterConfigurationInput)(nil)).Elem(), AnalysisCustomFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomFilterConfigurationPtrInput)(nil)).Elem(), AnalysisCustomFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomFilterListConfigurationInput)(nil)).Elem(), AnalysisCustomFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomFilterListConfigurationPtrInput)(nil)).Elem(), AnalysisCustomFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomNarrativeOptionsInput)(nil)).Elem(), AnalysisCustomNarrativeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomNarrativeOptionsPtrInput)(nil)).Elem(), AnalysisCustomNarrativeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomParameterValuesInput)(nil)).Elem(), AnalysisCustomParameterValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomParameterValuesPtrInput)(nil)).Elem(), AnalysisCustomParameterValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomValuesConfigurationInput)(nil)).Elem(), AnalysisCustomValuesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomValuesConfigurationPtrInput)(nil)).Elem(), AnalysisCustomValuesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataBarsOptionsInput)(nil)).Elem(), AnalysisDataBarsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataBarsOptionsPtrInput)(nil)).Elem(), AnalysisDataBarsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataColorInput)(nil)).Elem(), AnalysisDataColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataColorPtrInput)(nil)).Elem(), AnalysisDataColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataColorArrayInput)(nil)).Elem(), AnalysisDataColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataFieldSeriesItemInput)(nil)).Elem(), AnalysisDataFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataFieldSeriesItemPtrInput)(nil)).Elem(), AnalysisDataFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataLabelOptionsInput)(nil)).Elem(), AnalysisDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataLabelOptionsPtrInput)(nil)).Elem(), AnalysisDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataLabelTypeInput)(nil)).Elem(), AnalysisDataLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataLabelTypeArrayInput)(nil)).Elem(), AnalysisDataLabelTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataPathColorInput)(nil)).Elem(), AnalysisDataPathColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataPathColorArrayInput)(nil)).Elem(), AnalysisDataPathColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataPathLabelTypeInput)(nil)).Elem(), AnalysisDataPathLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataPathLabelTypePtrInput)(nil)).Elem(), AnalysisDataPathLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataPathSortInput)(nil)).Elem(), AnalysisDataPathSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataPathSortPtrInput)(nil)).Elem(), AnalysisDataPathSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataPathValueInput)(nil)).Elem(), AnalysisDataPathValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataPathValueArrayInput)(nil)).Elem(), AnalysisDataPathValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataSetIdentifierDeclarationInput)(nil)).Elem(), AnalysisDataSetIdentifierDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataSetIdentifierDeclarationArrayInput)(nil)).Elem(), AnalysisDataSetIdentifierDeclarationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataSetReferenceInput)(nil)).Elem(), AnalysisDataSetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataSetReferenceArrayInput)(nil)).Elem(), AnalysisDataSetReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateAxisOptionsInput)(nil)).Elem(), AnalysisDateAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateAxisOptionsPtrInput)(nil)).Elem(), AnalysisDateAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateDimensionFieldInput)(nil)).Elem(), AnalysisDateDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateDimensionFieldPtrInput)(nil)).Elem(), AnalysisDateDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateMeasureFieldInput)(nil)).Elem(), AnalysisDateMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateMeasureFieldPtrInput)(nil)).Elem(), AnalysisDateMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeDefaultValuesInput)(nil)).Elem(), AnalysisDateTimeDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeDefaultValuesPtrInput)(nil)).Elem(), AnalysisDateTimeDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeFormatConfigurationInput)(nil)).Elem(), AnalysisDateTimeFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeFormatConfigurationPtrInput)(nil)).Elem(), AnalysisDateTimeFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeHierarchyInput)(nil)).Elem(), AnalysisDateTimeHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeHierarchyPtrInput)(nil)).Elem(), AnalysisDateTimeHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeParameterInput)(nil)).Elem(), AnalysisDateTimeParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeParameterArrayInput)(nil)).Elem(), AnalysisDateTimeParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeParameterDeclarationInput)(nil)).Elem(), AnalysisDateTimeParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeParameterDeclarationPtrInput)(nil)).Elem(), AnalysisDateTimeParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimePickerControlDisplayOptionsInput)(nil)).Elem(), AnalysisDateTimePickerControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimePickerControlDisplayOptionsPtrInput)(nil)).Elem(), AnalysisDateTimePickerControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeValueWhenUnsetConfigurationInput)(nil)).Elem(), AnalysisDateTimeValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateTimeValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), AnalysisDateTimeValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDecimalDefaultValuesInput)(nil)).Elem(), AnalysisDecimalDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDecimalDefaultValuesPtrInput)(nil)).Elem(), AnalysisDecimalDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDecimalParameterInput)(nil)).Elem(), AnalysisDecimalParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDecimalParameterArrayInput)(nil)).Elem(), AnalysisDecimalParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDecimalParameterDeclarationInput)(nil)).Elem(), AnalysisDecimalParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDecimalParameterDeclarationPtrInput)(nil)).Elem(), AnalysisDecimalParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDecimalPlacesConfigurationInput)(nil)).Elem(), AnalysisDecimalPlacesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDecimalPlacesConfigurationPtrInput)(nil)).Elem(), AnalysisDecimalPlacesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDecimalValueWhenUnsetConfigurationInput)(nil)).Elem(), AnalysisDecimalValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDecimalValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), AnalysisDecimalValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultFreeFormLayoutConfigurationInput)(nil)).Elem(), AnalysisDefaultFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultFreeFormLayoutConfigurationPtrInput)(nil)).Elem(), AnalysisDefaultFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultGridLayoutConfigurationInput)(nil)).Elem(), AnalysisDefaultGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultGridLayoutConfigurationPtrInput)(nil)).Elem(), AnalysisDefaultGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultInteractiveLayoutConfigurationInput)(nil)).Elem(), AnalysisDefaultInteractiveLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultInteractiveLayoutConfigurationPtrInput)(nil)).Elem(), AnalysisDefaultInteractiveLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultNewSheetConfigurationInput)(nil)).Elem(), AnalysisDefaultNewSheetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultNewSheetConfigurationPtrInput)(nil)).Elem(), AnalysisDefaultNewSheetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultPaginatedLayoutConfigurationInput)(nil)).Elem(), AnalysisDefaultPaginatedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultPaginatedLayoutConfigurationPtrInput)(nil)).Elem(), AnalysisDefaultPaginatedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultSectionBasedLayoutConfigurationInput)(nil)).Elem(), AnalysisDefaultSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultSectionBasedLayoutConfigurationPtrInput)(nil)).Elem(), AnalysisDefaultSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultsInput)(nil)).Elem(), AnalysisDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefaultsPtrInput)(nil)).Elem(), AnalysisDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefinitionInput)(nil)).Elem(), AnalysisDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDefinitionPtrInput)(nil)).Elem(), AnalysisDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDestinationParameterValueConfigurationInput)(nil)).Elem(), AnalysisDestinationParameterValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDimensionFieldInput)(nil)).Elem(), AnalysisDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDimensionFieldPtrInput)(nil)).Elem(), AnalysisDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDimensionFieldArrayInput)(nil)).Elem(), AnalysisDimensionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDonutCenterOptionsInput)(nil)).Elem(), AnalysisDonutCenterOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDonutCenterOptionsPtrInput)(nil)).Elem(), AnalysisDonutCenterOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDonutOptionsInput)(nil)).Elem(), AnalysisDonutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDonutOptionsPtrInput)(nil)).Elem(), AnalysisDonutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDrillDownFilterInput)(nil)).Elem(), AnalysisDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDrillDownFilterArrayInput)(nil)).Elem(), AnalysisDrillDownFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDropDownControlDisplayOptionsInput)(nil)).Elem(), AnalysisDropDownControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDropDownControlDisplayOptionsPtrInput)(nil)).Elem(), AnalysisDropDownControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDynamicDefaultValueInput)(nil)).Elem(), AnalysisDynamicDefaultValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDynamicDefaultValuePtrInput)(nil)).Elem(), AnalysisDynamicDefaultValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisEmptyVisualInput)(nil)).Elem(), AnalysisEmptyVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisEmptyVisualPtrInput)(nil)).Elem(), AnalysisEmptyVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisExcludePeriodConfigurationInput)(nil)).Elem(), AnalysisExcludePeriodConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisExcludePeriodConfigurationPtrInput)(nil)).Elem(), AnalysisExcludePeriodConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisExplicitHierarchyInput)(nil)).Elem(), AnalysisExplicitHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisExplicitHierarchyPtrInput)(nil)).Elem(), AnalysisExplicitHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldBasedTooltipInput)(nil)).Elem(), AnalysisFieldBasedTooltipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldBasedTooltipPtrInput)(nil)).Elem(), AnalysisFieldBasedTooltipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldLabelTypeInput)(nil)).Elem(), AnalysisFieldLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldLabelTypePtrInput)(nil)).Elem(), AnalysisFieldLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldSeriesItemInput)(nil)).Elem(), AnalysisFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldSeriesItemPtrInput)(nil)).Elem(), AnalysisFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldSortInput)(nil)).Elem(), AnalysisFieldSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldSortPtrInput)(nil)).Elem(), AnalysisFieldSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldSortOptionsInput)(nil)).Elem(), AnalysisFieldSortOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldSortOptionsArrayInput)(nil)).Elem(), AnalysisFieldSortOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldTooltipItemInput)(nil)).Elem(), AnalysisFieldTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFieldTooltipItemPtrInput)(nil)).Elem(), AnalysisFieldTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapAggregatedFieldWellsInput)(nil)).Elem(), AnalysisFilledMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisFilledMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapConditionalFormattingInput)(nil)).Elem(), AnalysisFilledMapConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapConditionalFormattingPtrInput)(nil)).Elem(), AnalysisFilledMapConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapConditionalFormattingOptionInput)(nil)).Elem(), AnalysisFilledMapConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapConditionalFormattingOptionArrayInput)(nil)).Elem(), AnalysisFilledMapConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapConfigurationInput)(nil)).Elem(), AnalysisFilledMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapConfigurationPtrInput)(nil)).Elem(), AnalysisFilledMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapFieldWellsInput)(nil)).Elem(), AnalysisFilledMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapFieldWellsPtrInput)(nil)).Elem(), AnalysisFilledMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapShapeConditionalFormattingInput)(nil)).Elem(), AnalysisFilledMapShapeConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapSortConfigurationInput)(nil)).Elem(), AnalysisFilledMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapSortConfigurationPtrInput)(nil)).Elem(), AnalysisFilledMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapVisualInput)(nil)).Elem(), AnalysisFilledMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilledMapVisualPtrInput)(nil)).Elem(), AnalysisFilledMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterInput)(nil)).Elem(), AnalysisFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterArrayInput)(nil)).Elem(), AnalysisFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterControlInput)(nil)).Elem(), AnalysisFilterControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterControlArrayInput)(nil)).Elem(), AnalysisFilterControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterDateTimePickerControlInput)(nil)).Elem(), AnalysisFilterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterDateTimePickerControlPtrInput)(nil)).Elem(), AnalysisFilterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterDropDownControlInput)(nil)).Elem(), AnalysisFilterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterDropDownControlPtrInput)(nil)).Elem(), AnalysisFilterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterGroupInput)(nil)).Elem(), AnalysisFilterGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterGroupArrayInput)(nil)).Elem(), AnalysisFilterGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterListConfigurationInput)(nil)).Elem(), AnalysisFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterListConfigurationPtrInput)(nil)).Elem(), AnalysisFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterListControlInput)(nil)).Elem(), AnalysisFilterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterListControlPtrInput)(nil)).Elem(), AnalysisFilterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterOperationSelectedFieldsConfigurationInput)(nil)).Elem(), AnalysisFilterOperationSelectedFieldsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterOperationSelectedFieldsConfigurationPtrInput)(nil)).Elem(), AnalysisFilterOperationSelectedFieldsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterOperationTargetVisualsConfigurationInput)(nil)).Elem(), AnalysisFilterOperationTargetVisualsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterOperationTargetVisualsConfigurationPtrInput)(nil)).Elem(), AnalysisFilterOperationTargetVisualsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterRelativeDateTimeControlInput)(nil)).Elem(), AnalysisFilterRelativeDateTimeControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterRelativeDateTimeControlPtrInput)(nil)).Elem(), AnalysisFilterRelativeDateTimeControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterScopeConfigurationInput)(nil)).Elem(), AnalysisFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterSelectableValuesInput)(nil)).Elem(), AnalysisFilterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterSelectableValuesPtrInput)(nil)).Elem(), AnalysisFilterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterSliderControlInput)(nil)).Elem(), AnalysisFilterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterSliderControlPtrInput)(nil)).Elem(), AnalysisFilterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterTextAreaControlInput)(nil)).Elem(), AnalysisFilterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterTextAreaControlPtrInput)(nil)).Elem(), AnalysisFilterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterTextFieldControlInput)(nil)).Elem(), AnalysisFilterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterTextFieldControlPtrInput)(nil)).Elem(), AnalysisFilterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontConfigurationInput)(nil)).Elem(), AnalysisFontConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontConfigurationPtrInput)(nil)).Elem(), AnalysisFontConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontSizeInput)(nil)).Elem(), AnalysisFontSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontSizePtrInput)(nil)).Elem(), AnalysisFontSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontWeightInput)(nil)).Elem(), AnalysisFontWeightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontWeightPtrInput)(nil)).Elem(), AnalysisFontWeightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisForecastComputationInput)(nil)).Elem(), AnalysisForecastComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisForecastComputationPtrInput)(nil)).Elem(), AnalysisForecastComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisForecastConfigurationInput)(nil)).Elem(), AnalysisForecastConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisForecastConfigurationArrayInput)(nil)).Elem(), AnalysisForecastConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisForecastScenarioInput)(nil)).Elem(), AnalysisForecastScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisForecastScenarioPtrInput)(nil)).Elem(), AnalysisForecastScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFormatConfigurationInput)(nil)).Elem(), AnalysisFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFormatConfigurationPtrInput)(nil)).Elem(), AnalysisFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutCanvasSizeOptionsInput)(nil)).Elem(), AnalysisFreeFormLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutCanvasSizeOptionsPtrInput)(nil)).Elem(), AnalysisFreeFormLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutConfigurationInput)(nil)).Elem(), AnalysisFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutConfigurationPtrInput)(nil)).Elem(), AnalysisFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutElementInput)(nil)).Elem(), AnalysisFreeFormLayoutElementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutElementArrayInput)(nil)).Elem(), AnalysisFreeFormLayoutElementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutElementBackgroundStyleInput)(nil)).Elem(), AnalysisFreeFormLayoutElementBackgroundStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutElementBackgroundStylePtrInput)(nil)).Elem(), AnalysisFreeFormLayoutElementBackgroundStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutElementBorderStyleInput)(nil)).Elem(), AnalysisFreeFormLayoutElementBorderStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutElementBorderStylePtrInput)(nil)).Elem(), AnalysisFreeFormLayoutElementBorderStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutScreenCanvasSizeOptionsInput)(nil)).Elem(), AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrInput)(nil)).Elem(), AnalysisFreeFormLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormSectionLayoutConfigurationInput)(nil)).Elem(), AnalysisFreeFormSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFreeFormSectionLayoutConfigurationPtrInput)(nil)).Elem(), AnalysisFreeFormSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartAggregatedFieldWellsInput)(nil)).Elem(), AnalysisFunnelChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisFunnelChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartConfigurationInput)(nil)).Elem(), AnalysisFunnelChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartConfigurationPtrInput)(nil)).Elem(), AnalysisFunnelChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartDataLabelOptionsInput)(nil)).Elem(), AnalysisFunnelChartDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartDataLabelOptionsPtrInput)(nil)).Elem(), AnalysisFunnelChartDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartFieldWellsInput)(nil)).Elem(), AnalysisFunnelChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartFieldWellsPtrInput)(nil)).Elem(), AnalysisFunnelChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartSortConfigurationInput)(nil)).Elem(), AnalysisFunnelChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartSortConfigurationPtrInput)(nil)).Elem(), AnalysisFunnelChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartVisualInput)(nil)).Elem(), AnalysisFunnelChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartVisualPtrInput)(nil)).Elem(), AnalysisFunnelChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartArcConditionalFormattingInput)(nil)).Elem(), AnalysisGaugeChartArcConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartArcConditionalFormattingPtrInput)(nil)).Elem(), AnalysisGaugeChartArcConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartConditionalFormattingInput)(nil)).Elem(), AnalysisGaugeChartConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartConditionalFormattingPtrInput)(nil)).Elem(), AnalysisGaugeChartConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartConditionalFormattingOptionInput)(nil)).Elem(), AnalysisGaugeChartConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartConditionalFormattingOptionArrayInput)(nil)).Elem(), AnalysisGaugeChartConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartConfigurationInput)(nil)).Elem(), AnalysisGaugeChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartConfigurationPtrInput)(nil)).Elem(), AnalysisGaugeChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartFieldWellsInput)(nil)).Elem(), AnalysisGaugeChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartFieldWellsPtrInput)(nil)).Elem(), AnalysisGaugeChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartOptionsInput)(nil)).Elem(), AnalysisGaugeChartOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartOptionsPtrInput)(nil)).Elem(), AnalysisGaugeChartOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartPrimaryValueConditionalFormattingInput)(nil)).Elem(), AnalysisGaugeChartPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartPrimaryValueConditionalFormattingPtrInput)(nil)).Elem(), AnalysisGaugeChartPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartVisualInput)(nil)).Elem(), AnalysisGaugeChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGaugeChartVisualPtrInput)(nil)).Elem(), AnalysisGaugeChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialCoordinateBoundsInput)(nil)).Elem(), AnalysisGeospatialCoordinateBoundsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialCoordinateBoundsPtrInput)(nil)).Elem(), AnalysisGeospatialCoordinateBoundsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialMapAggregatedFieldWellsInput)(nil)).Elem(), AnalysisGeospatialMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialMapAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisGeospatialMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialMapConfigurationInput)(nil)).Elem(), AnalysisGeospatialMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialMapConfigurationPtrInput)(nil)).Elem(), AnalysisGeospatialMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialMapFieldWellsInput)(nil)).Elem(), AnalysisGeospatialMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialMapFieldWellsPtrInput)(nil)).Elem(), AnalysisGeospatialMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialMapStyleOptionsInput)(nil)).Elem(), AnalysisGeospatialMapStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialMapStyleOptionsPtrInput)(nil)).Elem(), AnalysisGeospatialMapStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialMapVisualInput)(nil)).Elem(), AnalysisGeospatialMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialMapVisualPtrInput)(nil)).Elem(), AnalysisGeospatialMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialPointStyleOptionsInput)(nil)).Elem(), AnalysisGeospatialPointStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialPointStyleOptionsPtrInput)(nil)).Elem(), AnalysisGeospatialPointStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialWindowOptionsInput)(nil)).Elem(), AnalysisGeospatialWindowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialWindowOptionsPtrInput)(nil)).Elem(), AnalysisGeospatialWindowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGlobalTableBorderOptionsInput)(nil)).Elem(), AnalysisGlobalTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGlobalTableBorderOptionsPtrInput)(nil)).Elem(), AnalysisGlobalTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGradientColorInput)(nil)).Elem(), AnalysisGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGradientColorPtrInput)(nil)).Elem(), AnalysisGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGradientStopInput)(nil)).Elem(), AnalysisGradientStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGradientStopArrayInput)(nil)).Elem(), AnalysisGradientStopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGridLayoutCanvasSizeOptionsInput)(nil)).Elem(), AnalysisGridLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGridLayoutCanvasSizeOptionsPtrInput)(nil)).Elem(), AnalysisGridLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGridLayoutConfigurationInput)(nil)).Elem(), AnalysisGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGridLayoutConfigurationPtrInput)(nil)).Elem(), AnalysisGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGridLayoutElementInput)(nil)).Elem(), AnalysisGridLayoutElementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGridLayoutElementArrayInput)(nil)).Elem(), AnalysisGridLayoutElementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGridLayoutScreenCanvasSizeOptionsInput)(nil)).Elem(), AnalysisGridLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGridLayoutScreenCanvasSizeOptionsPtrInput)(nil)).Elem(), AnalysisGridLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGrowthRateComputationInput)(nil)).Elem(), AnalysisGrowthRateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGrowthRateComputationPtrInput)(nil)).Elem(), AnalysisGrowthRateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeaderFooterSectionConfigurationInput)(nil)).Elem(), AnalysisHeaderFooterSectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeaderFooterSectionConfigurationArrayInput)(nil)).Elem(), AnalysisHeaderFooterSectionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeatMapAggregatedFieldWellsInput)(nil)).Elem(), AnalysisHeatMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeatMapAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisHeatMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeatMapConfigurationInput)(nil)).Elem(), AnalysisHeatMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeatMapConfigurationPtrInput)(nil)).Elem(), AnalysisHeatMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeatMapFieldWellsInput)(nil)).Elem(), AnalysisHeatMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeatMapFieldWellsPtrInput)(nil)).Elem(), AnalysisHeatMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeatMapSortConfigurationInput)(nil)).Elem(), AnalysisHeatMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeatMapSortConfigurationPtrInput)(nil)).Elem(), AnalysisHeatMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeatMapVisualInput)(nil)).Elem(), AnalysisHeatMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHeatMapVisualPtrInput)(nil)).Elem(), AnalysisHeatMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramAggregatedFieldWellsInput)(nil)).Elem(), AnalysisHistogramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisHistogramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramBinOptionsInput)(nil)).Elem(), AnalysisHistogramBinOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramBinOptionsPtrInput)(nil)).Elem(), AnalysisHistogramBinOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramConfigurationInput)(nil)).Elem(), AnalysisHistogramConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramConfigurationPtrInput)(nil)).Elem(), AnalysisHistogramConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramFieldWellsInput)(nil)).Elem(), AnalysisHistogramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramFieldWellsPtrInput)(nil)).Elem(), AnalysisHistogramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramVisualInput)(nil)).Elem(), AnalysisHistogramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramVisualPtrInput)(nil)).Elem(), AnalysisHistogramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisInsightConfigurationInput)(nil)).Elem(), AnalysisInsightConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisInsightConfigurationPtrInput)(nil)).Elem(), AnalysisInsightConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisInsightVisualInput)(nil)).Elem(), AnalysisInsightVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisInsightVisualPtrInput)(nil)).Elem(), AnalysisInsightVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisIntegerDefaultValuesInput)(nil)).Elem(), AnalysisIntegerDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisIntegerDefaultValuesPtrInput)(nil)).Elem(), AnalysisIntegerDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisIntegerParameterInput)(nil)).Elem(), AnalysisIntegerParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisIntegerParameterArrayInput)(nil)).Elem(), AnalysisIntegerParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisIntegerParameterDeclarationInput)(nil)).Elem(), AnalysisIntegerParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisIntegerParameterDeclarationPtrInput)(nil)).Elem(), AnalysisIntegerParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisIntegerValueWhenUnsetConfigurationInput)(nil)).Elem(), AnalysisIntegerValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisIntegerValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), AnalysisIntegerValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisItemsLimitConfigurationInput)(nil)).Elem(), AnalysisItemsLimitConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisItemsLimitConfigurationPtrInput)(nil)).Elem(), AnalysisItemsLimitConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIConditionalFormattingInput)(nil)).Elem(), AnalysisKPIConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIConditionalFormattingPtrInput)(nil)).Elem(), AnalysisKPIConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIConditionalFormattingOptionInput)(nil)).Elem(), AnalysisKPIConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIConditionalFormattingOptionArrayInput)(nil)).Elem(), AnalysisKPIConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIConfigurationInput)(nil)).Elem(), AnalysisKPIConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIConfigurationPtrInput)(nil)).Elem(), AnalysisKPIConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIFieldWellsInput)(nil)).Elem(), AnalysisKPIFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIFieldWellsPtrInput)(nil)).Elem(), AnalysisKPIFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIOptionsInput)(nil)).Elem(), AnalysisKPIOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIOptionsPtrInput)(nil)).Elem(), AnalysisKPIOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIPrimaryValueConditionalFormattingInput)(nil)).Elem(), AnalysisKPIPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIPrimaryValueConditionalFormattingPtrInput)(nil)).Elem(), AnalysisKPIPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIProgressBarConditionalFormattingInput)(nil)).Elem(), AnalysisKPIProgressBarConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIProgressBarConditionalFormattingPtrInput)(nil)).Elem(), AnalysisKPIProgressBarConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPISortConfigurationInput)(nil)).Elem(), AnalysisKPISortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPISortConfigurationPtrInput)(nil)).Elem(), AnalysisKPISortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIVisualInput)(nil)).Elem(), AnalysisKPIVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKPIVisualPtrInput)(nil)).Elem(), AnalysisKPIVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLabelOptionsInput)(nil)).Elem(), AnalysisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLabelOptionsPtrInput)(nil)).Elem(), AnalysisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLayoutInput)(nil)).Elem(), AnalysisLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLayoutArrayInput)(nil)).Elem(), AnalysisLayoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLayoutConfigurationInput)(nil)).Elem(), AnalysisLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLegendOptionsInput)(nil)).Elem(), AnalysisLegendOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLegendOptionsPtrInput)(nil)).Elem(), AnalysisLegendOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartAggregatedFieldWellsInput)(nil)).Elem(), AnalysisLineChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisLineChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartConfigurationInput)(nil)).Elem(), AnalysisLineChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartConfigurationPtrInput)(nil)).Elem(), AnalysisLineChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartDefaultSeriesSettingsInput)(nil)).Elem(), AnalysisLineChartDefaultSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartDefaultSeriesSettingsPtrInput)(nil)).Elem(), AnalysisLineChartDefaultSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartFieldWellsInput)(nil)).Elem(), AnalysisLineChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartFieldWellsPtrInput)(nil)).Elem(), AnalysisLineChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartLineStyleSettingsInput)(nil)).Elem(), AnalysisLineChartLineStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartLineStyleSettingsPtrInput)(nil)).Elem(), AnalysisLineChartLineStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartMarkerStyleSettingsInput)(nil)).Elem(), AnalysisLineChartMarkerStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartMarkerStyleSettingsPtrInput)(nil)).Elem(), AnalysisLineChartMarkerStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartSeriesSettingsInput)(nil)).Elem(), AnalysisLineChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartSeriesSettingsPtrInput)(nil)).Elem(), AnalysisLineChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartSortConfigurationInput)(nil)).Elem(), AnalysisLineChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartSortConfigurationPtrInput)(nil)).Elem(), AnalysisLineChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartVisualInput)(nil)).Elem(), AnalysisLineChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartVisualPtrInput)(nil)).Elem(), AnalysisLineChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineSeriesAxisDisplayOptionsInput)(nil)).Elem(), AnalysisLineSeriesAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineSeriesAxisDisplayOptionsPtrInput)(nil)).Elem(), AnalysisLineSeriesAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisListControlDisplayOptionsInput)(nil)).Elem(), AnalysisListControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisListControlDisplayOptionsPtrInput)(nil)).Elem(), AnalysisListControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisListControlSearchOptionsInput)(nil)).Elem(), AnalysisListControlSearchOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisListControlSearchOptionsPtrInput)(nil)).Elem(), AnalysisListControlSearchOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisListControlSelectAllOptionsInput)(nil)).Elem(), AnalysisListControlSelectAllOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisListControlSelectAllOptionsPtrInput)(nil)).Elem(), AnalysisListControlSelectAllOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLoadingAnimationInput)(nil)).Elem(), AnalysisLoadingAnimationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLoadingAnimationPtrInput)(nil)).Elem(), AnalysisLoadingAnimationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLocalNavigationConfigurationInput)(nil)).Elem(), AnalysisLocalNavigationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLocalNavigationConfigurationPtrInput)(nil)).Elem(), AnalysisLocalNavigationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLongFormatTextInput)(nil)).Elem(), AnalysisLongFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLongFormatTextPtrInput)(nil)).Elem(), AnalysisLongFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMappedDataSetParameterInput)(nil)).Elem(), AnalysisMappedDataSetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMappedDataSetParameterArrayInput)(nil)).Elem(), AnalysisMappedDataSetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMaximumLabelTypeInput)(nil)).Elem(), AnalysisMaximumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMaximumLabelTypePtrInput)(nil)).Elem(), AnalysisMaximumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMaximumMinimumComputationInput)(nil)).Elem(), AnalysisMaximumMinimumComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMaximumMinimumComputationPtrInput)(nil)).Elem(), AnalysisMaximumMinimumComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMeasureFieldInput)(nil)).Elem(), AnalysisMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMeasureFieldPtrInput)(nil)).Elem(), AnalysisMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMeasureFieldArrayInput)(nil)).Elem(), AnalysisMeasureFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMetricComparisonComputationInput)(nil)).Elem(), AnalysisMetricComparisonComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMetricComparisonComputationPtrInput)(nil)).Elem(), AnalysisMetricComparisonComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMinimumLabelTypeInput)(nil)).Elem(), AnalysisMinimumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMinimumLabelTypePtrInput)(nil)).Elem(), AnalysisMinimumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMissingDataConfigurationInput)(nil)).Elem(), AnalysisMissingDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMissingDataConfigurationArrayInput)(nil)).Elem(), AnalysisMissingDataConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNegativeValueConfigurationInput)(nil)).Elem(), AnalysisNegativeValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNegativeValueConfigurationPtrInput)(nil)).Elem(), AnalysisNegativeValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNullValueFormatConfigurationInput)(nil)).Elem(), AnalysisNullValueFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNullValueFormatConfigurationPtrInput)(nil)).Elem(), AnalysisNullValueFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumberDisplayFormatConfigurationInput)(nil)).Elem(), AnalysisNumberDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumberDisplayFormatConfigurationPtrInput)(nil)).Elem(), AnalysisNumberDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumberFormatConfigurationInput)(nil)).Elem(), AnalysisNumberFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumberFormatConfigurationPtrInput)(nil)).Elem(), AnalysisNumberFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericAxisOptionsInput)(nil)).Elem(), AnalysisNumericAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericAxisOptionsPtrInput)(nil)).Elem(), AnalysisNumericAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericEqualityDrillDownFilterInput)(nil)).Elem(), AnalysisNumericEqualityDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericEqualityDrillDownFilterPtrInput)(nil)).Elem(), AnalysisNumericEqualityDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericEqualityFilterInput)(nil)).Elem(), AnalysisNumericEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericEqualityFilterPtrInput)(nil)).Elem(), AnalysisNumericEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericFormatConfigurationInput)(nil)).Elem(), AnalysisNumericFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericFormatConfigurationPtrInput)(nil)).Elem(), AnalysisNumericFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericRangeFilterInput)(nil)).Elem(), AnalysisNumericRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericRangeFilterPtrInput)(nil)).Elem(), AnalysisNumericRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericRangeFilterValueInput)(nil)).Elem(), AnalysisNumericRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericRangeFilterValuePtrInput)(nil)).Elem(), AnalysisNumericRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericSeparatorConfigurationInput)(nil)).Elem(), AnalysisNumericSeparatorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericSeparatorConfigurationPtrInput)(nil)).Elem(), AnalysisNumericSeparatorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericalAggregationFunctionInput)(nil)).Elem(), AnalysisNumericalAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericalAggregationFunctionPtrInput)(nil)).Elem(), AnalysisNumericalAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericalDimensionFieldInput)(nil)).Elem(), AnalysisNumericalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericalDimensionFieldPtrInput)(nil)).Elem(), AnalysisNumericalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericalMeasureFieldInput)(nil)).Elem(), AnalysisNumericalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericalMeasureFieldPtrInput)(nil)).Elem(), AnalysisNumericalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPaginationConfigurationInput)(nil)).Elem(), AnalysisPaginationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPaginationConfigurationPtrInput)(nil)).Elem(), AnalysisPaginationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPanelConfigurationInput)(nil)).Elem(), AnalysisPanelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPanelConfigurationPtrInput)(nil)).Elem(), AnalysisPanelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPanelTitleOptionsInput)(nil)).Elem(), AnalysisPanelTitleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPanelTitleOptionsPtrInput)(nil)).Elem(), AnalysisPanelTitleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterControlInput)(nil)).Elem(), AnalysisParameterControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterControlArrayInput)(nil)).Elem(), AnalysisParameterControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterDateTimePickerControlInput)(nil)).Elem(), AnalysisParameterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterDateTimePickerControlPtrInput)(nil)).Elem(), AnalysisParameterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterDeclarationInput)(nil)).Elem(), AnalysisParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterDeclarationArrayInput)(nil)).Elem(), AnalysisParameterDeclarationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterDropDownControlInput)(nil)).Elem(), AnalysisParameterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterDropDownControlPtrInput)(nil)).Elem(), AnalysisParameterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterListControlInput)(nil)).Elem(), AnalysisParameterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterListControlPtrInput)(nil)).Elem(), AnalysisParameterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterSelectableValuesInput)(nil)).Elem(), AnalysisParameterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterSelectableValuesPtrInput)(nil)).Elem(), AnalysisParameterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterSliderControlInput)(nil)).Elem(), AnalysisParameterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterSliderControlPtrInput)(nil)).Elem(), AnalysisParameterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterTextAreaControlInput)(nil)).Elem(), AnalysisParameterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterTextAreaControlPtrInput)(nil)).Elem(), AnalysisParameterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterTextFieldControlInput)(nil)).Elem(), AnalysisParameterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterTextFieldControlPtrInput)(nil)).Elem(), AnalysisParameterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParametersInput)(nil)).Elem(), AnalysisParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParametersPtrInput)(nil)).Elem(), AnalysisParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPercentVisibleRangeInput)(nil)).Elem(), AnalysisPercentVisibleRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPercentVisibleRangePtrInput)(nil)).Elem(), AnalysisPercentVisibleRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPercentageDisplayFormatConfigurationInput)(nil)).Elem(), AnalysisPercentageDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPercentageDisplayFormatConfigurationPtrInput)(nil)).Elem(), AnalysisPercentageDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPercentileAggregationInput)(nil)).Elem(), AnalysisPercentileAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPercentileAggregationPtrInput)(nil)).Elem(), AnalysisPercentileAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPeriodOverPeriodComputationInput)(nil)).Elem(), AnalysisPeriodOverPeriodComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPeriodOverPeriodComputationPtrInput)(nil)).Elem(), AnalysisPeriodOverPeriodComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPeriodToDateComputationInput)(nil)).Elem(), AnalysisPeriodToDateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPeriodToDateComputationPtrInput)(nil)).Elem(), AnalysisPeriodToDateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPieChartAggregatedFieldWellsInput)(nil)).Elem(), AnalysisPieChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPieChartAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisPieChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPieChartConfigurationInput)(nil)).Elem(), AnalysisPieChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPieChartConfigurationPtrInput)(nil)).Elem(), AnalysisPieChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPieChartFieldWellsInput)(nil)).Elem(), AnalysisPieChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPieChartFieldWellsPtrInput)(nil)).Elem(), AnalysisPieChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPieChartSortConfigurationInput)(nil)).Elem(), AnalysisPieChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPieChartSortConfigurationPtrInput)(nil)).Elem(), AnalysisPieChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPieChartVisualInput)(nil)).Elem(), AnalysisPieChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPieChartVisualPtrInput)(nil)).Elem(), AnalysisPieChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotFieldSortOptionsInput)(nil)).Elem(), AnalysisPivotFieldSortOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotFieldSortOptionsArrayInput)(nil)).Elem(), AnalysisPivotFieldSortOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableAggregatedFieldWellsInput)(nil)).Elem(), AnalysisPivotTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisPivotTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableCellConditionalFormattingInput)(nil)).Elem(), AnalysisPivotTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableCellConditionalFormattingPtrInput)(nil)).Elem(), AnalysisPivotTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableConditionalFormattingInput)(nil)).Elem(), AnalysisPivotTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableConditionalFormattingPtrInput)(nil)).Elem(), AnalysisPivotTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableConditionalFormattingOptionInput)(nil)).Elem(), AnalysisPivotTableConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableConditionalFormattingOptionArrayInput)(nil)).Elem(), AnalysisPivotTableConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableConditionalFormattingScopeInput)(nil)).Elem(), AnalysisPivotTableConditionalFormattingScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableConditionalFormattingScopePtrInput)(nil)).Elem(), AnalysisPivotTableConditionalFormattingScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableConfigurationInput)(nil)).Elem(), AnalysisPivotTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableConfigurationPtrInput)(nil)).Elem(), AnalysisPivotTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableDataPathOptionInput)(nil)).Elem(), AnalysisPivotTableDataPathOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableDataPathOptionArrayInput)(nil)).Elem(), AnalysisPivotTableDataPathOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableFieldOptionInput)(nil)).Elem(), AnalysisPivotTableFieldOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableFieldOptionArrayInput)(nil)).Elem(), AnalysisPivotTableFieldOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableFieldOptionsInput)(nil)).Elem(), AnalysisPivotTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableFieldOptionsPtrInput)(nil)).Elem(), AnalysisPivotTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableFieldSubtotalOptionsInput)(nil)).Elem(), AnalysisPivotTableFieldSubtotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableFieldSubtotalOptionsArrayInput)(nil)).Elem(), AnalysisPivotTableFieldSubtotalOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableFieldWellsInput)(nil)).Elem(), AnalysisPivotTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableFieldWellsPtrInput)(nil)).Elem(), AnalysisPivotTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableOptionsInput)(nil)).Elem(), AnalysisPivotTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableOptionsPtrInput)(nil)).Elem(), AnalysisPivotTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTablePaginatedReportOptionsInput)(nil)).Elem(), AnalysisPivotTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTablePaginatedReportOptionsPtrInput)(nil)).Elem(), AnalysisPivotTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableSortByInput)(nil)).Elem(), AnalysisPivotTableSortByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableSortConfigurationInput)(nil)).Elem(), AnalysisPivotTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableSortConfigurationPtrInput)(nil)).Elem(), AnalysisPivotTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableTotalOptionsInput)(nil)).Elem(), AnalysisPivotTableTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableTotalOptionsPtrInput)(nil)).Elem(), AnalysisPivotTableTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableVisualInput)(nil)).Elem(), AnalysisPivotTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableVisualPtrInput)(nil)).Elem(), AnalysisPivotTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTotalOptionsInput)(nil)).Elem(), AnalysisPivotTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTotalOptionsPtrInput)(nil)).Elem(), AnalysisPivotTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPredefinedHierarchyInput)(nil)).Elem(), AnalysisPredefinedHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPredefinedHierarchyPtrInput)(nil)).Elem(), AnalysisPredefinedHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisProgressBarOptionsInput)(nil)).Elem(), AnalysisProgressBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisProgressBarOptionsPtrInput)(nil)).Elem(), AnalysisProgressBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartAggregatedFieldWellsInput)(nil)).Elem(), AnalysisRadarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisRadarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartAreaStyleSettingsInput)(nil)).Elem(), AnalysisRadarChartAreaStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartAreaStyleSettingsPtrInput)(nil)).Elem(), AnalysisRadarChartAreaStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartConfigurationInput)(nil)).Elem(), AnalysisRadarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartConfigurationPtrInput)(nil)).Elem(), AnalysisRadarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartFieldWellsInput)(nil)).Elem(), AnalysisRadarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartFieldWellsPtrInput)(nil)).Elem(), AnalysisRadarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartSeriesSettingsInput)(nil)).Elem(), AnalysisRadarChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartSeriesSettingsPtrInput)(nil)).Elem(), AnalysisRadarChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartSortConfigurationInput)(nil)).Elem(), AnalysisRadarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartSortConfigurationPtrInput)(nil)).Elem(), AnalysisRadarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartVisualInput)(nil)).Elem(), AnalysisRadarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartVisualPtrInput)(nil)).Elem(), AnalysisRadarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRangeEndsLabelTypeInput)(nil)).Elem(), AnalysisRangeEndsLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRangeEndsLabelTypePtrInput)(nil)).Elem(), AnalysisRangeEndsLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineInput)(nil)).Elem(), AnalysisReferenceLineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineArrayInput)(nil)).Elem(), AnalysisReferenceLineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineCustomLabelConfigurationInput)(nil)).Elem(), AnalysisReferenceLineCustomLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineCustomLabelConfigurationPtrInput)(nil)).Elem(), AnalysisReferenceLineCustomLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineDataConfigurationInput)(nil)).Elem(), AnalysisReferenceLineDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineDynamicDataConfigurationInput)(nil)).Elem(), AnalysisReferenceLineDynamicDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineDynamicDataConfigurationPtrInput)(nil)).Elem(), AnalysisReferenceLineDynamicDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineLabelConfigurationInput)(nil)).Elem(), AnalysisReferenceLineLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineLabelConfigurationPtrInput)(nil)).Elem(), AnalysisReferenceLineLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineStaticDataConfigurationInput)(nil)).Elem(), AnalysisReferenceLineStaticDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineStaticDataConfigurationPtrInput)(nil)).Elem(), AnalysisReferenceLineStaticDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineStyleConfigurationInput)(nil)).Elem(), AnalysisReferenceLineStyleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineStyleConfigurationPtrInput)(nil)).Elem(), AnalysisReferenceLineStyleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineValueLabelConfigurationInput)(nil)).Elem(), AnalysisReferenceLineValueLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineValueLabelConfigurationPtrInput)(nil)).Elem(), AnalysisReferenceLineValueLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRelativeDateTimeControlDisplayOptionsInput)(nil)).Elem(), AnalysisRelativeDateTimeControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRelativeDateTimeControlDisplayOptionsPtrInput)(nil)).Elem(), AnalysisRelativeDateTimeControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRelativeDatesFilterInput)(nil)).Elem(), AnalysisRelativeDatesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRelativeDatesFilterPtrInput)(nil)).Elem(), AnalysisRelativeDatesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisResourcePermissionInput)(nil)).Elem(), AnalysisResourcePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisResourcePermissionArrayInput)(nil)).Elem(), AnalysisResourcePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRollingDateConfigurationInput)(nil)).Elem(), AnalysisRollingDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRollingDateConfigurationPtrInput)(nil)).Elem(), AnalysisRollingDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRowAlternateColorOptionsInput)(nil)).Elem(), AnalysisRowAlternateColorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRowAlternateColorOptionsPtrInput)(nil)).Elem(), AnalysisRowAlternateColorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSameSheetTargetVisualConfigurationInput)(nil)).Elem(), AnalysisSameSheetTargetVisualConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSameSheetTargetVisualConfigurationPtrInput)(nil)).Elem(), AnalysisSameSheetTargetVisualConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSankeyDiagramAggregatedFieldWellsInput)(nil)).Elem(), AnalysisSankeyDiagramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSankeyDiagramAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisSankeyDiagramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSankeyDiagramChartConfigurationInput)(nil)).Elem(), AnalysisSankeyDiagramChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSankeyDiagramChartConfigurationPtrInput)(nil)).Elem(), AnalysisSankeyDiagramChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSankeyDiagramFieldWellsInput)(nil)).Elem(), AnalysisSankeyDiagramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSankeyDiagramFieldWellsPtrInput)(nil)).Elem(), AnalysisSankeyDiagramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSankeyDiagramSortConfigurationInput)(nil)).Elem(), AnalysisSankeyDiagramSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSankeyDiagramSortConfigurationPtrInput)(nil)).Elem(), AnalysisSankeyDiagramSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSankeyDiagramVisualInput)(nil)).Elem(), AnalysisSankeyDiagramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSankeyDiagramVisualPtrInput)(nil)).Elem(), AnalysisSankeyDiagramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScatterPlotCategoricallyAggregatedFieldWellsInput)(nil)).Elem(), AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisScatterPlotCategoricallyAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScatterPlotConfigurationInput)(nil)).Elem(), AnalysisScatterPlotConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScatterPlotConfigurationPtrInput)(nil)).Elem(), AnalysisScatterPlotConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScatterPlotFieldWellsInput)(nil)).Elem(), AnalysisScatterPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScatterPlotFieldWellsPtrInput)(nil)).Elem(), AnalysisScatterPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScatterPlotUnaggregatedFieldWellsInput)(nil)).Elem(), AnalysisScatterPlotUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScatterPlotUnaggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisScatterPlotUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScatterPlotVisualInput)(nil)).Elem(), AnalysisScatterPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScatterPlotVisualPtrInput)(nil)).Elem(), AnalysisScatterPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScrollBarOptionsInput)(nil)).Elem(), AnalysisScrollBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisScrollBarOptionsPtrInput)(nil)).Elem(), AnalysisScrollBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSecondaryValueOptionsInput)(nil)).Elem(), AnalysisSecondaryValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSecondaryValueOptionsPtrInput)(nil)).Elem(), AnalysisSecondaryValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionAfterPageBreakInput)(nil)).Elem(), AnalysisSectionAfterPageBreakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionAfterPageBreakPtrInput)(nil)).Elem(), AnalysisSectionAfterPageBreakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionBasedLayoutCanvasSizeOptionsInput)(nil)).Elem(), AnalysisSectionBasedLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionBasedLayoutCanvasSizeOptionsPtrInput)(nil)).Elem(), AnalysisSectionBasedLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionBasedLayoutConfigurationInput)(nil)).Elem(), AnalysisSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionBasedLayoutConfigurationPtrInput)(nil)).Elem(), AnalysisSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionBasedLayoutPaperCanvasSizeOptionsInput)(nil)).Elem(), AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrInput)(nil)).Elem(), AnalysisSectionBasedLayoutPaperCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionLayoutConfigurationInput)(nil)).Elem(), AnalysisSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionLayoutConfigurationPtrInput)(nil)).Elem(), AnalysisSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionPageBreakConfigurationInput)(nil)).Elem(), AnalysisSectionPageBreakConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionPageBreakConfigurationPtrInput)(nil)).Elem(), AnalysisSectionPageBreakConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionStyleInput)(nil)).Elem(), AnalysisSectionStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionStylePtrInput)(nil)).Elem(), AnalysisSectionStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSelectedSheetsFilterScopeConfigurationInput)(nil)).Elem(), AnalysisSelectedSheetsFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSelectedSheetsFilterScopeConfigurationPtrInput)(nil)).Elem(), AnalysisSelectedSheetsFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSeriesItemInput)(nil)).Elem(), AnalysisSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSeriesItemArrayInput)(nil)).Elem(), AnalysisSeriesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSetParameterValueConfigurationInput)(nil)).Elem(), AnalysisSetParameterValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSetParameterValueConfigurationArrayInput)(nil)).Elem(), AnalysisSetParameterValueConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisShapeConditionalFormatInput)(nil)).Elem(), AnalysisShapeConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisShapeConditionalFormatPtrInput)(nil)).Elem(), AnalysisShapeConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetControlLayoutInput)(nil)).Elem(), AnalysisSheetControlLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetControlLayoutArrayInput)(nil)).Elem(), AnalysisSheetControlLayoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetControlLayoutConfigurationInput)(nil)).Elem(), AnalysisSheetControlLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetDefinitionInput)(nil)).Elem(), AnalysisSheetDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetDefinitionArrayInput)(nil)).Elem(), AnalysisSheetDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetElementConfigurationOverridesInput)(nil)).Elem(), AnalysisSheetElementConfigurationOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetElementRenderingRuleInput)(nil)).Elem(), AnalysisSheetElementRenderingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetElementRenderingRuleArrayInput)(nil)).Elem(), AnalysisSheetElementRenderingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetTextBoxInput)(nil)).Elem(), AnalysisSheetTextBoxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetTextBoxArrayInput)(nil)).Elem(), AnalysisSheetTextBoxArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetVisualScopingConfigurationInput)(nil)).Elem(), AnalysisSheetVisualScopingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetVisualScopingConfigurationArrayInput)(nil)).Elem(), AnalysisSheetVisualScopingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisShortFormatTextInput)(nil)).Elem(), AnalysisShortFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisShortFormatTextPtrInput)(nil)).Elem(), AnalysisShortFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSimpleClusterMarkerInput)(nil)).Elem(), AnalysisSimpleClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSimpleClusterMarkerPtrInput)(nil)).Elem(), AnalysisSimpleClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSliderControlDisplayOptionsInput)(nil)).Elem(), AnalysisSliderControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSliderControlDisplayOptionsPtrInput)(nil)).Elem(), AnalysisSliderControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSmallMultiplesOptionsInput)(nil)).Elem(), AnalysisSmallMultiplesOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSmallMultiplesOptionsPtrInput)(nil)).Elem(), AnalysisSmallMultiplesOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSourceEntityInput)(nil)).Elem(), AnalysisSourceEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSourceEntityPtrInput)(nil)).Elem(), AnalysisSourceEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSourceTemplateInput)(nil)).Elem(), AnalysisSourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSourceTemplatePtrInput)(nil)).Elem(), AnalysisSourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSpacingInput)(nil)).Elem(), AnalysisSpacingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSpacingPtrInput)(nil)).Elem(), AnalysisSpacingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStringDefaultValuesInput)(nil)).Elem(), AnalysisStringDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStringDefaultValuesPtrInput)(nil)).Elem(), AnalysisStringDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStringFormatConfigurationInput)(nil)).Elem(), AnalysisStringFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStringFormatConfigurationPtrInput)(nil)).Elem(), AnalysisStringFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStringParameterInput)(nil)).Elem(), AnalysisStringParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStringParameterArrayInput)(nil)).Elem(), AnalysisStringParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStringParameterDeclarationInput)(nil)).Elem(), AnalysisStringParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStringParameterDeclarationPtrInput)(nil)).Elem(), AnalysisStringParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStringValueWhenUnsetConfigurationInput)(nil)).Elem(), AnalysisStringValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStringValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), AnalysisStringValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSubtotalOptionsInput)(nil)).Elem(), AnalysisSubtotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSubtotalOptionsPtrInput)(nil)).Elem(), AnalysisSubtotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableAggregatedFieldWellsInput)(nil)).Elem(), AnalysisTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableBorderOptionsInput)(nil)).Elem(), AnalysisTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableBorderOptionsPtrInput)(nil)).Elem(), AnalysisTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableCellConditionalFormattingInput)(nil)).Elem(), AnalysisTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableCellConditionalFormattingPtrInput)(nil)).Elem(), AnalysisTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableCellImageSizingConfigurationInput)(nil)).Elem(), AnalysisTableCellImageSizingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableCellImageSizingConfigurationPtrInput)(nil)).Elem(), AnalysisTableCellImageSizingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableCellStyleInput)(nil)).Elem(), AnalysisTableCellStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableCellStylePtrInput)(nil)).Elem(), AnalysisTableCellStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableConditionalFormattingInput)(nil)).Elem(), AnalysisTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableConditionalFormattingPtrInput)(nil)).Elem(), AnalysisTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableConditionalFormattingOptionInput)(nil)).Elem(), AnalysisTableConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableConditionalFormattingOptionArrayInput)(nil)).Elem(), AnalysisTableConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableConfigurationInput)(nil)).Elem(), AnalysisTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableConfigurationPtrInput)(nil)).Elem(), AnalysisTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldCustomIconContentInput)(nil)).Elem(), AnalysisTableFieldCustomIconContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldCustomIconContentPtrInput)(nil)).Elem(), AnalysisTableFieldCustomIconContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldCustomTextContentInput)(nil)).Elem(), AnalysisTableFieldCustomTextContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldCustomTextContentPtrInput)(nil)).Elem(), AnalysisTableFieldCustomTextContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldImageConfigurationInput)(nil)).Elem(), AnalysisTableFieldImageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldImageConfigurationPtrInput)(nil)).Elem(), AnalysisTableFieldImageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldLinkConfigurationInput)(nil)).Elem(), AnalysisTableFieldLinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldLinkConfigurationPtrInput)(nil)).Elem(), AnalysisTableFieldLinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldLinkContentConfigurationInput)(nil)).Elem(), AnalysisTableFieldLinkContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldLinkContentConfigurationPtrInput)(nil)).Elem(), AnalysisTableFieldLinkContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldOptionInput)(nil)).Elem(), AnalysisTableFieldOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldOptionArrayInput)(nil)).Elem(), AnalysisTableFieldOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldOptionsInput)(nil)).Elem(), AnalysisTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldOptionsPtrInput)(nil)).Elem(), AnalysisTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldURLConfigurationInput)(nil)).Elem(), AnalysisTableFieldURLConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldURLConfigurationPtrInput)(nil)).Elem(), AnalysisTableFieldURLConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldWellsInput)(nil)).Elem(), AnalysisTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldWellsPtrInput)(nil)).Elem(), AnalysisTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableInlineVisualizationInput)(nil)).Elem(), AnalysisTableInlineVisualizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableInlineVisualizationArrayInput)(nil)).Elem(), AnalysisTableInlineVisualizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableOptionsInput)(nil)).Elem(), AnalysisTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableOptionsPtrInput)(nil)).Elem(), AnalysisTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTablePaginatedReportOptionsInput)(nil)).Elem(), AnalysisTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTablePaginatedReportOptionsPtrInput)(nil)).Elem(), AnalysisTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableRowConditionalFormattingInput)(nil)).Elem(), AnalysisTableRowConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableRowConditionalFormattingPtrInput)(nil)).Elem(), AnalysisTableRowConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableSideBorderOptionsInput)(nil)).Elem(), AnalysisTableSideBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableSideBorderOptionsPtrInput)(nil)).Elem(), AnalysisTableSideBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableSortConfigurationInput)(nil)).Elem(), AnalysisTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableSortConfigurationPtrInput)(nil)).Elem(), AnalysisTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableUnaggregatedFieldWellsInput)(nil)).Elem(), AnalysisTableUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableUnaggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisTableUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableVisualInput)(nil)).Elem(), AnalysisTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableVisualPtrInput)(nil)).Elem(), AnalysisTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTagInput)(nil)).Elem(), AnalysisTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTagArrayInput)(nil)).Elem(), AnalysisTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTextAreaControlDisplayOptionsInput)(nil)).Elem(), AnalysisTextAreaControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTextAreaControlDisplayOptionsPtrInput)(nil)).Elem(), AnalysisTextAreaControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTextConditionalFormatInput)(nil)).Elem(), AnalysisTextConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTextConditionalFormatPtrInput)(nil)).Elem(), AnalysisTextConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTextControlPlaceholderOptionsInput)(nil)).Elem(), AnalysisTextControlPlaceholderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTextControlPlaceholderOptionsPtrInput)(nil)).Elem(), AnalysisTextControlPlaceholderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTextFieldControlDisplayOptionsInput)(nil)).Elem(), AnalysisTextFieldControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTextFieldControlDisplayOptionsPtrInput)(nil)).Elem(), AnalysisTextFieldControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisThousandSeparatorOptionsInput)(nil)).Elem(), AnalysisThousandSeparatorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisThousandSeparatorOptionsPtrInput)(nil)).Elem(), AnalysisThousandSeparatorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeBasedForecastPropertiesInput)(nil)).Elem(), AnalysisTimeBasedForecastPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeBasedForecastPropertiesPtrInput)(nil)).Elem(), AnalysisTimeBasedForecastPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeEqualityFilterInput)(nil)).Elem(), AnalysisTimeEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeEqualityFilterPtrInput)(nil)).Elem(), AnalysisTimeEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeRangeDrillDownFilterInput)(nil)).Elem(), AnalysisTimeRangeDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeRangeDrillDownFilterPtrInput)(nil)).Elem(), AnalysisTimeRangeDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeRangeFilterInput)(nil)).Elem(), AnalysisTimeRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeRangeFilterPtrInput)(nil)).Elem(), AnalysisTimeRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeRangeFilterValueInput)(nil)).Elem(), AnalysisTimeRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeRangeFilterValuePtrInput)(nil)).Elem(), AnalysisTimeRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTooltipItemInput)(nil)).Elem(), AnalysisTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTooltipItemArrayInput)(nil)).Elem(), AnalysisTooltipItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTooltipOptionsInput)(nil)).Elem(), AnalysisTooltipOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTooltipOptionsPtrInput)(nil)).Elem(), AnalysisTooltipOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTopBottomFilterInput)(nil)).Elem(), AnalysisTopBottomFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTopBottomFilterPtrInput)(nil)).Elem(), AnalysisTopBottomFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTopBottomMoversComputationInput)(nil)).Elem(), AnalysisTopBottomMoversComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTopBottomMoversComputationPtrInput)(nil)).Elem(), AnalysisTopBottomMoversComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTopBottomRankedComputationInput)(nil)).Elem(), AnalysisTopBottomRankedComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTopBottomRankedComputationPtrInput)(nil)).Elem(), AnalysisTopBottomRankedComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTotalAggregationComputationInput)(nil)).Elem(), AnalysisTotalAggregationComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTotalAggregationComputationPtrInput)(nil)).Elem(), AnalysisTotalAggregationComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTotalOptionsInput)(nil)).Elem(), AnalysisTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTotalOptionsPtrInput)(nil)).Elem(), AnalysisTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTreeMapAggregatedFieldWellsInput)(nil)).Elem(), AnalysisTreeMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTreeMapAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisTreeMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTreeMapConfigurationInput)(nil)).Elem(), AnalysisTreeMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTreeMapConfigurationPtrInput)(nil)).Elem(), AnalysisTreeMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTreeMapFieldWellsInput)(nil)).Elem(), AnalysisTreeMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTreeMapFieldWellsPtrInput)(nil)).Elem(), AnalysisTreeMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTreeMapSortConfigurationInput)(nil)).Elem(), AnalysisTreeMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTreeMapSortConfigurationPtrInput)(nil)).Elem(), AnalysisTreeMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTreeMapVisualInput)(nil)).Elem(), AnalysisTreeMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTreeMapVisualPtrInput)(nil)).Elem(), AnalysisTreeMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTrendArrowOptionsInput)(nil)).Elem(), AnalysisTrendArrowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTrendArrowOptionsPtrInput)(nil)).Elem(), AnalysisTrendArrowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisUnaggregatedFieldInput)(nil)).Elem(), AnalysisUnaggregatedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisUnaggregatedFieldArrayInput)(nil)).Elem(), AnalysisUnaggregatedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisUniqueValuesComputationInput)(nil)).Elem(), AnalysisUniqueValuesComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisUniqueValuesComputationPtrInput)(nil)).Elem(), AnalysisUniqueValuesComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisibleRangeOptionsInput)(nil)).Elem(), AnalysisVisibleRangeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisibleRangeOptionsPtrInput)(nil)).Elem(), AnalysisVisibleRangeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualInput)(nil)).Elem(), AnalysisVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualArrayInput)(nil)).Elem(), AnalysisVisualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualCustomActionInput)(nil)).Elem(), AnalysisVisualCustomActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualCustomActionArrayInput)(nil)).Elem(), AnalysisVisualCustomActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualCustomActionOperationInput)(nil)).Elem(), AnalysisVisualCustomActionOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualCustomActionOperationArrayInput)(nil)).Elem(), AnalysisVisualCustomActionOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualPaletteInput)(nil)).Elem(), AnalysisVisualPaletteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualPalettePtrInput)(nil)).Elem(), AnalysisVisualPaletteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualSubtitleLabelOptionsInput)(nil)).Elem(), AnalysisVisualSubtitleLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualSubtitleLabelOptionsPtrInput)(nil)).Elem(), AnalysisVisualSubtitleLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualTitleLabelOptionsInput)(nil)).Elem(), AnalysisVisualTitleLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualTitleLabelOptionsPtrInput)(nil)).Elem(), AnalysisVisualTitleLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallChartAggregatedFieldWellsInput)(nil)).Elem(), AnalysisWaterfallChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallChartAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisWaterfallChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallChartConfigurationInput)(nil)).Elem(), AnalysisWaterfallChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallChartConfigurationPtrInput)(nil)).Elem(), AnalysisWaterfallChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallChartFieldWellsInput)(nil)).Elem(), AnalysisWaterfallChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallChartFieldWellsPtrInput)(nil)).Elem(), AnalysisWaterfallChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallChartOptionsInput)(nil)).Elem(), AnalysisWaterfallChartOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallChartOptionsPtrInput)(nil)).Elem(), AnalysisWaterfallChartOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallChartSortConfigurationInput)(nil)).Elem(), AnalysisWaterfallChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallChartSortConfigurationPtrInput)(nil)).Elem(), AnalysisWaterfallChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallVisualInput)(nil)).Elem(), AnalysisWaterfallVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWaterfallVisualPtrInput)(nil)).Elem(), AnalysisWaterfallVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWhatIfPointScenarioInput)(nil)).Elem(), AnalysisWhatIfPointScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWhatIfPointScenarioPtrInput)(nil)).Elem(), AnalysisWhatIfPointScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWhatIfRangeScenarioInput)(nil)).Elem(), AnalysisWhatIfRangeScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWhatIfRangeScenarioPtrInput)(nil)).Elem(), AnalysisWhatIfRangeScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudAggregatedFieldWellsInput)(nil)).Elem(), AnalysisWordCloudAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudAggregatedFieldWellsPtrInput)(nil)).Elem(), AnalysisWordCloudAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudChartConfigurationInput)(nil)).Elem(), AnalysisWordCloudChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudChartConfigurationPtrInput)(nil)).Elem(), AnalysisWordCloudChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudFieldWellsInput)(nil)).Elem(), AnalysisWordCloudFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudFieldWellsPtrInput)(nil)).Elem(), AnalysisWordCloudFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudOptionsInput)(nil)).Elem(), AnalysisWordCloudOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudOptionsPtrInput)(nil)).Elem(), AnalysisWordCloudOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudSortConfigurationInput)(nil)).Elem(), AnalysisWordCloudSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudSortConfigurationPtrInput)(nil)).Elem(), AnalysisWordCloudSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudVisualInput)(nil)).Elem(), AnalysisWordCloudVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudVisualPtrInput)(nil)).Elem(), AnalysisWordCloudVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAdHocFilteringOptionInput)(nil)).Elem(), DashboardAdHocFilteringOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAdHocFilteringOptionPtrInput)(nil)).Elem(), DashboardAdHocFilteringOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAggregationFunctionInput)(nil)).Elem(), DashboardAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAggregationFunctionPtrInput)(nil)).Elem(), DashboardAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAggregationSortConfigurationInput)(nil)).Elem(), DashboardAggregationSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAggregationSortConfigurationArrayInput)(nil)).Elem(), DashboardAggregationSortConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAnalysisDefaultsInput)(nil)).Elem(), DashboardAnalysisDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAnalysisDefaultsPtrInput)(nil)).Elem(), DashboardAnalysisDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAnchorDateConfigurationInput)(nil)).Elem(), DashboardAnchorDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAnchorDateConfigurationPtrInput)(nil)).Elem(), DashboardAnchorDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcAxisConfigurationInput)(nil)).Elem(), DashboardArcAxisConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcAxisConfigurationPtrInput)(nil)).Elem(), DashboardArcAxisConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcAxisDisplayRangeInput)(nil)).Elem(), DashboardArcAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcAxisDisplayRangePtrInput)(nil)).Elem(), DashboardArcAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcConfigurationInput)(nil)).Elem(), DashboardArcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcConfigurationPtrInput)(nil)).Elem(), DashboardArcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcOptionsInput)(nil)).Elem(), DashboardArcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcOptionsPtrInput)(nil)).Elem(), DashboardArcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisDataOptionsInput)(nil)).Elem(), DashboardAxisDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisDataOptionsPtrInput)(nil)).Elem(), DashboardAxisDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisDisplayDataDrivenRangeInput)(nil)).Elem(), DashboardAxisDisplayDataDrivenRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisDisplayDataDrivenRangePtrInput)(nil)).Elem(), DashboardAxisDisplayDataDrivenRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisDisplayMinMaxRangeInput)(nil)).Elem(), DashboardAxisDisplayMinMaxRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisDisplayMinMaxRangePtrInput)(nil)).Elem(), DashboardAxisDisplayMinMaxRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisDisplayOptionsInput)(nil)).Elem(), DashboardAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisDisplayOptionsPtrInput)(nil)).Elem(), DashboardAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisDisplayRangeInput)(nil)).Elem(), DashboardAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisDisplayRangePtrInput)(nil)).Elem(), DashboardAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisLabelOptionsInput)(nil)).Elem(), DashboardAxisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisLabelOptionsArrayInput)(nil)).Elem(), DashboardAxisLabelOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisLabelReferenceOptionsInput)(nil)).Elem(), DashboardAxisLabelReferenceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisLabelReferenceOptionsPtrInput)(nil)).Elem(), DashboardAxisLabelReferenceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisLinearScaleInput)(nil)).Elem(), DashboardAxisLinearScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisLinearScalePtrInput)(nil)).Elem(), DashboardAxisLinearScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisLogarithmicScaleInput)(nil)).Elem(), DashboardAxisLogarithmicScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisLogarithmicScalePtrInput)(nil)).Elem(), DashboardAxisLogarithmicScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisScaleInput)(nil)).Elem(), DashboardAxisScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisScalePtrInput)(nil)).Elem(), DashboardAxisScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisTickLabelOptionsInput)(nil)).Elem(), DashboardAxisTickLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisTickLabelOptionsPtrInput)(nil)).Elem(), DashboardAxisTickLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartAggregatedFieldWellsInput)(nil)).Elem(), DashboardBarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardBarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartConfigurationInput)(nil)).Elem(), DashboardBarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartConfigurationPtrInput)(nil)).Elem(), DashboardBarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartFieldWellsInput)(nil)).Elem(), DashboardBarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartFieldWellsPtrInput)(nil)).Elem(), DashboardBarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartSortConfigurationInput)(nil)).Elem(), DashboardBarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartSortConfigurationPtrInput)(nil)).Elem(), DashboardBarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartVisualInput)(nil)).Elem(), DashboardBarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartVisualPtrInput)(nil)).Elem(), DashboardBarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBinCountOptionsInput)(nil)).Elem(), DashboardBinCountOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBinCountOptionsPtrInput)(nil)).Elem(), DashboardBinCountOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBinWidthOptionsInput)(nil)).Elem(), DashboardBinWidthOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBinWidthOptionsPtrInput)(nil)).Elem(), DashboardBinWidthOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBodySectionConfigurationInput)(nil)).Elem(), DashboardBodySectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBodySectionConfigurationArrayInput)(nil)).Elem(), DashboardBodySectionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBodySectionContentInput)(nil)).Elem(), DashboardBodySectionContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotAggregatedFieldWellsInput)(nil)).Elem(), DashboardBoxPlotAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardBoxPlotAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotChartConfigurationInput)(nil)).Elem(), DashboardBoxPlotChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotChartConfigurationPtrInput)(nil)).Elem(), DashboardBoxPlotChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotFieldWellsInput)(nil)).Elem(), DashboardBoxPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotFieldWellsPtrInput)(nil)).Elem(), DashboardBoxPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotOptionsInput)(nil)).Elem(), DashboardBoxPlotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotOptionsPtrInput)(nil)).Elem(), DashboardBoxPlotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotSortConfigurationInput)(nil)).Elem(), DashboardBoxPlotSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotSortConfigurationPtrInput)(nil)).Elem(), DashboardBoxPlotSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotStyleOptionsInput)(nil)).Elem(), DashboardBoxPlotStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotStyleOptionsPtrInput)(nil)).Elem(), DashboardBoxPlotStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotVisualInput)(nil)).Elem(), DashboardBoxPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotVisualPtrInput)(nil)).Elem(), DashboardBoxPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCalculatedFieldInput)(nil)).Elem(), DashboardCalculatedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCalculatedFieldArrayInput)(nil)).Elem(), DashboardCalculatedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCalculatedMeasureFieldInput)(nil)).Elem(), DashboardCalculatedMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCalculatedMeasureFieldPtrInput)(nil)).Elem(), DashboardCalculatedMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCascadingControlConfigurationInput)(nil)).Elem(), DashboardCascadingControlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCascadingControlConfigurationPtrInput)(nil)).Elem(), DashboardCascadingControlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCascadingControlSourceInput)(nil)).Elem(), DashboardCascadingControlSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCascadingControlSourceArrayInput)(nil)).Elem(), DashboardCascadingControlSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoricalDimensionFieldInput)(nil)).Elem(), DashboardCategoricalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoricalDimensionFieldPtrInput)(nil)).Elem(), DashboardCategoricalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoricalMeasureFieldInput)(nil)).Elem(), DashboardCategoricalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoricalMeasureFieldPtrInput)(nil)).Elem(), DashboardCategoricalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoryDrillDownFilterInput)(nil)).Elem(), DashboardCategoryDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoryDrillDownFilterPtrInput)(nil)).Elem(), DashboardCategoryDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoryFilterInput)(nil)).Elem(), DashboardCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoryFilterPtrInput)(nil)).Elem(), DashboardCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoryFilterConfigurationInput)(nil)).Elem(), DashboardCategoryFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoryFilterConfigurationPtrInput)(nil)).Elem(), DashboardCategoryFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardChartAxisLabelOptionsInput)(nil)).Elem(), DashboardChartAxisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardChartAxisLabelOptionsPtrInput)(nil)).Elem(), DashboardChartAxisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardClusterMarkerInput)(nil)).Elem(), DashboardClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardClusterMarkerPtrInput)(nil)).Elem(), DashboardClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardClusterMarkerConfigurationInput)(nil)).Elem(), DashboardClusterMarkerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardClusterMarkerConfigurationPtrInput)(nil)).Elem(), DashboardClusterMarkerConfigurationArgs{})
	pulumi.RegisterOutputType(AnalysisAggregationFunctionOutput{})
	pulumi.RegisterOutputType(AnalysisAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisAggregationSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisAggregationSortConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisAnchorDateConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisAnchorDateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisArcAxisConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisArcAxisConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisArcAxisDisplayRangeOutput{})
	pulumi.RegisterOutputType(AnalysisArcAxisDisplayRangePtrOutput{})
	pulumi.RegisterOutputType(AnalysisArcConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisArcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisArcOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisArcOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisDataOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisAxisDataOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisDisplayDataDrivenRangeOutput{})
	pulumi.RegisterOutputType(AnalysisAxisDisplayDataDrivenRangePtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisDisplayMinMaxRangeOutput{})
	pulumi.RegisterOutputType(AnalysisAxisDisplayMinMaxRangePtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisDisplayOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisAxisDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisDisplayRangeOutput{})
	pulumi.RegisterOutputType(AnalysisAxisDisplayRangePtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisLabelOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisAxisLabelOptionsArrayOutput{})
	pulumi.RegisterOutputType(AnalysisAxisLabelReferenceOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisAxisLabelReferenceOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisLinearScaleOutput{})
	pulumi.RegisterOutputType(AnalysisAxisLinearScalePtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisLogarithmicScaleOutput{})
	pulumi.RegisterOutputType(AnalysisAxisLogarithmicScalePtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisScaleOutput{})
	pulumi.RegisterOutputType(AnalysisAxisScalePtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisTickLabelOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisAxisTickLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartVisualOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBinCountOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisBinCountOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBinWidthOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisBinWidthOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBodySectionConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisBodySectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisBodySectionContentOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotStyleOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotStyleOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotVisualOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCalculatedFieldOutput{})
	pulumi.RegisterOutputType(AnalysisCalculatedFieldArrayOutput{})
	pulumi.RegisterOutputType(AnalysisCalculatedMeasureFieldOutput{})
	pulumi.RegisterOutputType(AnalysisCalculatedMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCascadingControlConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisCascadingControlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCascadingControlSourceOutput{})
	pulumi.RegisterOutputType(AnalysisCascadingControlSourceArrayOutput{})
	pulumi.RegisterOutputType(AnalysisCategoricalDimensionFieldOutput{})
	pulumi.RegisterOutputType(AnalysisCategoricalDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCategoricalMeasureFieldOutput{})
	pulumi.RegisterOutputType(AnalysisCategoricalMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCategoryDrillDownFilterOutput{})
	pulumi.RegisterOutputType(AnalysisCategoryDrillDownFilterPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCategoryFilterOutput{})
	pulumi.RegisterOutputType(AnalysisCategoryFilterPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCategoryFilterConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisCategoryFilterConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisChartAxisLabelOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisChartAxisLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisClusterMarkerOutput{})
	pulumi.RegisterOutputType(AnalysisClusterMarkerPtrOutput{})
	pulumi.RegisterOutputType(AnalysisClusterMarkerConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisClusterMarkerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisColorScaleOutput{})
	pulumi.RegisterOutputType(AnalysisColorScalePtrOutput{})
	pulumi.RegisterOutputType(AnalysisColorsConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisColorsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisColumnConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisColumnConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisColumnHierarchyOutput{})
	pulumi.RegisterOutputType(AnalysisColumnHierarchyArrayOutput{})
	pulumi.RegisterOutputType(AnalysisColumnIdentifierOutput{})
	pulumi.RegisterOutputType(AnalysisColumnIdentifierPtrOutput{})
	pulumi.RegisterOutputType(AnalysisColumnIdentifierArrayOutput{})
	pulumi.RegisterOutputType(AnalysisColumnSortOutput{})
	pulumi.RegisterOutputType(AnalysisColumnSortPtrOutput{})
	pulumi.RegisterOutputType(AnalysisColumnTooltipItemOutput{})
	pulumi.RegisterOutputType(AnalysisColumnTooltipItemPtrOutput{})
	pulumi.RegisterOutputType(AnalysisComboChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisComboChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisComboChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisComboChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisComboChartFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisComboChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisComboChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisComboChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisComboChartVisualOutput{})
	pulumi.RegisterOutputType(AnalysisComboChartVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisComparisonConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisComparisonConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisComparisonFormatConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisComparisonFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisComputationOutput{})
	pulumi.RegisterOutputType(AnalysisComputationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingColorOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingColorPtrOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingCustomIconConditionOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingCustomIconConditionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingCustomIconOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingCustomIconOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingGradientColorOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingGradientColorPtrOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingIconOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingIconPtrOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingIconDisplayConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingIconDisplayConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingIconSetOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingIconSetPtrOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingSolidColorOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingSolidColorPtrOutput{})
	pulumi.RegisterOutputType(AnalysisContributionAnalysisDefaultOutput{})
	pulumi.RegisterOutputType(AnalysisContributionAnalysisDefaultArrayOutput{})
	pulumi.RegisterOutputType(AnalysisCurrencyDisplayFormatConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisCurrencyDisplayFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomActionFilterOperationOutput{})
	pulumi.RegisterOutputType(AnalysisCustomActionFilterOperationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomActionNavigationOperationOutput{})
	pulumi.RegisterOutputType(AnalysisCustomActionNavigationOperationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomActionSetParametersOperationOutput{})
	pulumi.RegisterOutputType(AnalysisCustomActionSetParametersOperationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomActionURLOperationOutput{})
	pulumi.RegisterOutputType(AnalysisCustomActionURLOperationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomColorOutput{})
	pulumi.RegisterOutputType(AnalysisCustomColorArrayOutput{})
	pulumi.RegisterOutputType(AnalysisCustomContentConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisCustomContentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomContentVisualOutput{})
	pulumi.RegisterOutputType(AnalysisCustomContentVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomFilterConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisCustomFilterConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomFilterListConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisCustomFilterListConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomNarrativeOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisCustomNarrativeOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomParameterValuesOutput{})
	pulumi.RegisterOutputType(AnalysisCustomParameterValuesPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomValuesConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisCustomValuesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataBarsOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisDataBarsOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataColorOutput{})
	pulumi.RegisterOutputType(AnalysisDataColorPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataColorArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDataFieldSeriesItemOutput{})
	pulumi.RegisterOutputType(AnalysisDataFieldSeriesItemPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataLabelOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisDataLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataLabelTypeOutput{})
	pulumi.RegisterOutputType(AnalysisDataLabelTypeArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDataPathColorOutput{})
	pulumi.RegisterOutputType(AnalysisDataPathColorArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDataPathLabelTypeOutput{})
	pulumi.RegisterOutputType(AnalysisDataPathLabelTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataPathSortOutput{})
	pulumi.RegisterOutputType(AnalysisDataPathSortPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataPathValueOutput{})
	pulumi.RegisterOutputType(AnalysisDataPathValueArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDataSetIdentifierDeclarationOutput{})
	pulumi.RegisterOutputType(AnalysisDataSetIdentifierDeclarationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDataSetReferenceOutput{})
	pulumi.RegisterOutputType(AnalysisDataSetReferenceArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDateAxisOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisDateAxisOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDateDimensionFieldOutput{})
	pulumi.RegisterOutputType(AnalysisDateDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDateMeasureFieldOutput{})
	pulumi.RegisterOutputType(AnalysisDateMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeDefaultValuesOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeFormatConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeHierarchyOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeHierarchyPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeParameterOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeParameterArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeParameterDeclarationOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimePickerControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimePickerControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDateTimeValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalDefaultValuesOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalParameterOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalParameterArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalParameterDeclarationOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalPlacesConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalPlacesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDecimalValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultFreeFormLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultFreeFormLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultGridLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultGridLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultInteractiveLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultInteractiveLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultNewSheetConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultNewSheetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultPaginatedLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultPaginatedLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultSectionBasedLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultSectionBasedLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultsOutput{})
	pulumi.RegisterOutputType(AnalysisDefaultsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDefinitionOutput{})
	pulumi.RegisterOutputType(AnalysisDefinitionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDestinationParameterValueConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisDimensionFieldOutput{})
	pulumi.RegisterOutputType(AnalysisDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDimensionFieldArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDonutCenterOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisDonutCenterOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDonutOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisDonutOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDrillDownFilterOutput{})
	pulumi.RegisterOutputType(AnalysisDrillDownFilterArrayOutput{})
	pulumi.RegisterOutputType(AnalysisDropDownControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisDropDownControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDynamicDefaultValueOutput{})
	pulumi.RegisterOutputType(AnalysisDynamicDefaultValuePtrOutput{})
	pulumi.RegisterOutputType(AnalysisEmptyVisualOutput{})
	pulumi.RegisterOutputType(AnalysisEmptyVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisEntityOutput{})
	pulumi.RegisterOutputType(AnalysisEntityArrayOutput{})
	pulumi.RegisterOutputType(AnalysisErrorOutput{})
	pulumi.RegisterOutputType(AnalysisErrorArrayOutput{})
	pulumi.RegisterOutputType(AnalysisExcludePeriodConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisExcludePeriodConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisExplicitHierarchyOutput{})
	pulumi.RegisterOutputType(AnalysisExplicitHierarchyPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFieldBasedTooltipOutput{})
	pulumi.RegisterOutputType(AnalysisFieldBasedTooltipPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFieldLabelTypeOutput{})
	pulumi.RegisterOutputType(AnalysisFieldLabelTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisFieldSeriesItemOutput{})
	pulumi.RegisterOutputType(AnalysisFieldSeriesItemPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFieldSortOutput{})
	pulumi.RegisterOutputType(AnalysisFieldSortPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFieldSortOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisFieldSortOptionsArrayOutput{})
	pulumi.RegisterOutputType(AnalysisFieldTooltipItemOutput{})
	pulumi.RegisterOutputType(AnalysisFieldTooltipItemPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapShapeConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapVisualOutput{})
	pulumi.RegisterOutputType(AnalysisFilledMapVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterOutput{})
	pulumi.RegisterOutputType(AnalysisFilterArrayOutput{})
	pulumi.RegisterOutputType(AnalysisFilterControlOutput{})
	pulumi.RegisterOutputType(AnalysisFilterControlArrayOutput{})
	pulumi.RegisterOutputType(AnalysisFilterDateTimePickerControlOutput{})
	pulumi.RegisterOutputType(AnalysisFilterDateTimePickerControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterDropDownControlOutput{})
	pulumi.RegisterOutputType(AnalysisFilterDropDownControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterGroupOutput{})
	pulumi.RegisterOutputType(AnalysisFilterGroupArrayOutput{})
	pulumi.RegisterOutputType(AnalysisFilterListConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFilterListConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterListControlOutput{})
	pulumi.RegisterOutputType(AnalysisFilterListControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterOperationSelectedFieldsConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFilterOperationSelectedFieldsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterOperationTargetVisualsConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFilterOperationTargetVisualsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterRelativeDateTimeControlOutput{})
	pulumi.RegisterOutputType(AnalysisFilterRelativeDateTimeControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterScopeConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFilterSelectableValuesOutput{})
	pulumi.RegisterOutputType(AnalysisFilterSelectableValuesPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterSliderControlOutput{})
	pulumi.RegisterOutputType(AnalysisFilterSliderControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterTextAreaControlOutput{})
	pulumi.RegisterOutputType(AnalysisFilterTextAreaControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterTextFieldControlOutput{})
	pulumi.RegisterOutputType(AnalysisFilterTextFieldControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFontConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFontConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFontSizeOutput{})
	pulumi.RegisterOutputType(AnalysisFontSizePtrOutput{})
	pulumi.RegisterOutputType(AnalysisFontWeightOutput{})
	pulumi.RegisterOutputType(AnalysisFontWeightPtrOutput{})
	pulumi.RegisterOutputType(AnalysisForecastComputationOutput{})
	pulumi.RegisterOutputType(AnalysisForecastComputationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisForecastConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisForecastConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisForecastScenarioOutput{})
	pulumi.RegisterOutputType(AnalysisForecastScenarioPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFormatConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutElementOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutElementArrayOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutElementBackgroundStyleOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutElementBackgroundStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutElementBorderStyleOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutElementBorderStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutScreenCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormLayoutScreenCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormSectionLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFreeFormSectionLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartDataLabelOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartDataLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartVisualOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartArcConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartArcConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartPrimaryValueConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartPrimaryValueConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartVisualOutput{})
	pulumi.RegisterOutputType(AnalysisGaugeChartVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialCoordinateBoundsOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialCoordinateBoundsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialMapConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialMapFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialMapStyleOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialMapStyleOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialMapVisualOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialMapVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialPointStyleOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialPointStyleOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialWindowOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialWindowOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGlobalTableBorderOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisGlobalTableBorderOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGradientColorOutput{})
	pulumi.RegisterOutputType(AnalysisGradientColorPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGradientStopOutput{})
	pulumi.RegisterOutputType(AnalysisGradientStopArrayOutput{})
	pulumi.RegisterOutputType(AnalysisGridLayoutCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisGridLayoutCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGridLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisGridLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGridLayoutElementOutput{})
	pulumi.RegisterOutputType(AnalysisGridLayoutElementArrayOutput{})
	pulumi.RegisterOutputType(AnalysisGridLayoutScreenCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisGridLayoutScreenCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisGrowthRateComputationOutput{})
	pulumi.RegisterOutputType(AnalysisGrowthRateComputationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisHeaderFooterSectionConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisHeaderFooterSectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisHeatMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisHeatMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisHeatMapConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisHeatMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisHeatMapFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisHeatMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisHeatMapSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisHeatMapSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisHeatMapVisualOutput{})
	pulumi.RegisterOutputType(AnalysisHeatMapVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramBinOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramBinOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramVisualOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisInsightConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisInsightConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisInsightVisualOutput{})
	pulumi.RegisterOutputType(AnalysisInsightVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisIntegerDefaultValuesOutput{})
	pulumi.RegisterOutputType(AnalysisIntegerDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(AnalysisIntegerParameterOutput{})
	pulumi.RegisterOutputType(AnalysisIntegerParameterArrayOutput{})
	pulumi.RegisterOutputType(AnalysisIntegerParameterDeclarationOutput{})
	pulumi.RegisterOutputType(AnalysisIntegerParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisIntegerValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisIntegerValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisItemsLimitConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisItemsLimitConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisKPIConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisKPIConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisKPIConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(AnalysisKPIConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisKPIConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisKPIConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisKPIFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisKPIFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisKPIOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisKPIOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisKPIPrimaryValueConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisKPIPrimaryValueConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisKPIProgressBarConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisKPIProgressBarConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisKPISortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisKPISortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisKPIVisualOutput{})
	pulumi.RegisterOutputType(AnalysisKPIVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLabelOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLayoutOutput{})
	pulumi.RegisterOutputType(AnalysisLayoutArrayOutput{})
	pulumi.RegisterOutputType(AnalysisLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisLegendOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisLegendOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartDefaultSeriesSettingsOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartDefaultSeriesSettingsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartLineStyleSettingsOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartLineStyleSettingsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartMarkerStyleSettingsOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartMarkerStyleSettingsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartSeriesSettingsOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartSeriesSettingsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartVisualOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineSeriesAxisDisplayOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisLineSeriesAxisDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisListControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisListControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisListControlSearchOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisListControlSearchOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisListControlSelectAllOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisListControlSelectAllOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLoadingAnimationOutput{})
	pulumi.RegisterOutputType(AnalysisLoadingAnimationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLocalNavigationConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisLocalNavigationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLongFormatTextOutput{})
	pulumi.RegisterOutputType(AnalysisLongFormatTextPtrOutput{})
	pulumi.RegisterOutputType(AnalysisMappedDataSetParameterOutput{})
	pulumi.RegisterOutputType(AnalysisMappedDataSetParameterArrayOutput{})
	pulumi.RegisterOutputType(AnalysisMaximumLabelTypeOutput{})
	pulumi.RegisterOutputType(AnalysisMaximumLabelTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisMaximumMinimumComputationOutput{})
	pulumi.RegisterOutputType(AnalysisMaximumMinimumComputationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisMeasureFieldOutput{})
	pulumi.RegisterOutputType(AnalysisMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(AnalysisMeasureFieldArrayOutput{})
	pulumi.RegisterOutputType(AnalysisMetricComparisonComputationOutput{})
	pulumi.RegisterOutputType(AnalysisMetricComparisonComputationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisMinimumLabelTypeOutput{})
	pulumi.RegisterOutputType(AnalysisMinimumLabelTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisMissingDataConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisMissingDataConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisNegativeValueConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisNegativeValueConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNullValueFormatConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisNullValueFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumberDisplayFormatConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisNumberDisplayFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumberFormatConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisNumberFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericAxisOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisNumericAxisOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericEqualityDrillDownFilterOutput{})
	pulumi.RegisterOutputType(AnalysisNumericEqualityDrillDownFilterPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericEqualityFilterOutput{})
	pulumi.RegisterOutputType(AnalysisNumericEqualityFilterPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericFormatConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisNumericFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericRangeFilterOutput{})
	pulumi.RegisterOutputType(AnalysisNumericRangeFilterPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericRangeFilterValueOutput{})
	pulumi.RegisterOutputType(AnalysisNumericRangeFilterValuePtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericSeparatorConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisNumericSeparatorConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(AnalysisNumericalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericalDimensionFieldOutput{})
	pulumi.RegisterOutputType(AnalysisNumericalDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericalMeasureFieldOutput{})
	pulumi.RegisterOutputType(AnalysisNumericalMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPaginationConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisPaginationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPanelConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisPanelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPanelTitleOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisPanelTitleOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisParameterControlOutput{})
	pulumi.RegisterOutputType(AnalysisParameterControlArrayOutput{})
	pulumi.RegisterOutputType(AnalysisParameterDateTimePickerControlOutput{})
	pulumi.RegisterOutputType(AnalysisParameterDateTimePickerControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisParameterDeclarationOutput{})
	pulumi.RegisterOutputType(AnalysisParameterDeclarationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisParameterDropDownControlOutput{})
	pulumi.RegisterOutputType(AnalysisParameterDropDownControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisParameterListControlOutput{})
	pulumi.RegisterOutputType(AnalysisParameterListControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisParameterSelectableValuesOutput{})
	pulumi.RegisterOutputType(AnalysisParameterSelectableValuesPtrOutput{})
	pulumi.RegisterOutputType(AnalysisParameterSliderControlOutput{})
	pulumi.RegisterOutputType(AnalysisParameterSliderControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisParameterTextAreaControlOutput{})
	pulumi.RegisterOutputType(AnalysisParameterTextAreaControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisParameterTextFieldControlOutput{})
	pulumi.RegisterOutputType(AnalysisParameterTextFieldControlPtrOutput{})
	pulumi.RegisterOutputType(AnalysisParametersOutput{})
	pulumi.RegisterOutputType(AnalysisParametersPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPercentVisibleRangeOutput{})
	pulumi.RegisterOutputType(AnalysisPercentVisibleRangePtrOutput{})
	pulumi.RegisterOutputType(AnalysisPercentageDisplayFormatConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisPercentageDisplayFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPercentileAggregationOutput{})
	pulumi.RegisterOutputType(AnalysisPercentileAggregationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPeriodOverPeriodComputationOutput{})
	pulumi.RegisterOutputType(AnalysisPeriodOverPeriodComputationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPeriodToDateComputationOutput{})
	pulumi.RegisterOutputType(AnalysisPeriodToDateComputationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPieChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisPieChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPieChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisPieChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPieChartFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisPieChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPieChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisPieChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPieChartVisualOutput{})
	pulumi.RegisterOutputType(AnalysisPieChartVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotFieldSortOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisPivotFieldSortOptionsArrayOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableCellConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableCellConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableConditionalFormattingScopeOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableConditionalFormattingScopePtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableDataPathOptionOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableDataPathOptionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableFieldOptionOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableFieldOptionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableFieldOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableFieldOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableFieldSubtotalOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableFieldSubtotalOptionsArrayOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTablePaginatedReportOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTablePaginatedReportOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableSortByOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableTotalOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableTotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableVisualOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTotalOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPredefinedHierarchyOutput{})
	pulumi.RegisterOutputType(AnalysisPredefinedHierarchyPtrOutput{})
	pulumi.RegisterOutputType(AnalysisProgressBarOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisProgressBarOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartAreaStyleSettingsOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartAreaStyleSettingsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartSeriesSettingsOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartSeriesSettingsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartVisualOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRangeEndsLabelTypeOutput{})
	pulumi.RegisterOutputType(AnalysisRangeEndsLabelTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineArrayOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineCustomLabelConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineCustomLabelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineDataConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineDynamicDataConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineDynamicDataConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineLabelConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineLabelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineStaticDataConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineStaticDataConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineStyleConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineStyleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineValueLabelConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineValueLabelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRelativeDateTimeControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisRelativeDateTimeControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRelativeDatesFilterOutput{})
	pulumi.RegisterOutputType(AnalysisRelativeDatesFilterPtrOutput{})
	pulumi.RegisterOutputType(AnalysisResourcePermissionOutput{})
	pulumi.RegisterOutputType(AnalysisResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisRollingDateConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisRollingDateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRowAlternateColorOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisRowAlternateColorOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSameSheetTargetVisualConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisSameSheetTargetVisualConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSankeyDiagramAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisSankeyDiagramAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSankeyDiagramChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisSankeyDiagramChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSankeyDiagramFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisSankeyDiagramFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSankeyDiagramSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisSankeyDiagramSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSankeyDiagramVisualOutput{})
	pulumi.RegisterOutputType(AnalysisSankeyDiagramVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisScatterPlotCategoricallyAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisScatterPlotCategoricallyAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisScatterPlotConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisScatterPlotConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisScatterPlotFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisScatterPlotFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisScatterPlotUnaggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisScatterPlotUnaggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisScatterPlotVisualOutput{})
	pulumi.RegisterOutputType(AnalysisScatterPlotVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisScrollBarOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisScrollBarOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSecondaryValueOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisSecondaryValueOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSectionAfterPageBreakOutput{})
	pulumi.RegisterOutputType(AnalysisSectionAfterPageBreakPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSectionBasedLayoutCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisSectionBasedLayoutCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSectionBasedLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisSectionBasedLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSectionBasedLayoutPaperCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSectionLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisSectionLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSectionPageBreakConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisSectionPageBreakConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSectionStyleOutput{})
	pulumi.RegisterOutputType(AnalysisSectionStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisSelectedSheetsFilterScopeConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisSelectedSheetsFilterScopeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSeriesItemOutput{})
	pulumi.RegisterOutputType(AnalysisSeriesItemArrayOutput{})
	pulumi.RegisterOutputType(AnalysisSetParameterValueConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisSetParameterValueConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisShapeConditionalFormatOutput{})
	pulumi.RegisterOutputType(AnalysisShapeConditionalFormatPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSheetOutput{})
	pulumi.RegisterOutputType(AnalysisSheetArrayOutput{})
	pulumi.RegisterOutputType(AnalysisSheetControlLayoutOutput{})
	pulumi.RegisterOutputType(AnalysisSheetControlLayoutArrayOutput{})
	pulumi.RegisterOutputType(AnalysisSheetControlLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisSheetDefinitionOutput{})
	pulumi.RegisterOutputType(AnalysisSheetDefinitionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisSheetElementConfigurationOverridesOutput{})
	pulumi.RegisterOutputType(AnalysisSheetElementRenderingRuleOutput{})
	pulumi.RegisterOutputType(AnalysisSheetElementRenderingRuleArrayOutput{})
	pulumi.RegisterOutputType(AnalysisSheetTextBoxOutput{})
	pulumi.RegisterOutputType(AnalysisSheetTextBoxArrayOutput{})
	pulumi.RegisterOutputType(AnalysisSheetVisualScopingConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisSheetVisualScopingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisShortFormatTextOutput{})
	pulumi.RegisterOutputType(AnalysisShortFormatTextPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSimpleClusterMarkerOutput{})
	pulumi.RegisterOutputType(AnalysisSimpleClusterMarkerPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSliderControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisSliderControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSmallMultiplesOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisSmallMultiplesOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSourceEntityOutput{})
	pulumi.RegisterOutputType(AnalysisSourceEntityPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSourceTemplateOutput{})
	pulumi.RegisterOutputType(AnalysisSourceTemplatePtrOutput{})
	pulumi.RegisterOutputType(AnalysisSpacingOutput{})
	pulumi.RegisterOutputType(AnalysisSpacingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisStringDefaultValuesOutput{})
	pulumi.RegisterOutputType(AnalysisStringDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(AnalysisStringFormatConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisStringFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisStringParameterOutput{})
	pulumi.RegisterOutputType(AnalysisStringParameterArrayOutput{})
	pulumi.RegisterOutputType(AnalysisStringParameterDeclarationOutput{})
	pulumi.RegisterOutputType(AnalysisStringParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisStringValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisStringValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSubtotalOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisSubtotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisTableAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableBorderOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTableBorderOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableCellConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisTableCellConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableCellImageSizingConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisTableCellImageSizingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableCellStyleOutput{})
	pulumi.RegisterOutputType(AnalysisTableCellStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisTableConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(AnalysisTableConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisTableConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisTableConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldCustomIconContentOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldCustomIconContentPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldCustomTextContentOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldCustomTextContentPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldImageConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldImageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldLinkConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldLinkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldLinkContentConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldLinkContentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldOptionOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldOptionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldURLConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldURLConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableInlineVisualizationOutput{})
	pulumi.RegisterOutputType(AnalysisTableInlineVisualizationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisTableOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTableOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTablePaginatedReportOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTablePaginatedReportOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableRowConditionalFormattingOutput{})
	pulumi.RegisterOutputType(AnalysisTableRowConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableSideBorderOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTableSideBorderOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisTableSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableUnaggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisTableUnaggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableVisualOutput{})
	pulumi.RegisterOutputType(AnalysisTableVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTagOutput{})
	pulumi.RegisterOutputType(AnalysisTagArrayOutput{})
	pulumi.RegisterOutputType(AnalysisTextAreaControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTextAreaControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTextConditionalFormatOutput{})
	pulumi.RegisterOutputType(AnalysisTextConditionalFormatPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTextControlPlaceholderOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTextControlPlaceholderOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTextFieldControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTextFieldControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisThousandSeparatorOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisThousandSeparatorOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTimeBasedForecastPropertiesOutput{})
	pulumi.RegisterOutputType(AnalysisTimeBasedForecastPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTimeEqualityFilterOutput{})
	pulumi.RegisterOutputType(AnalysisTimeEqualityFilterPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTimeRangeDrillDownFilterOutput{})
	pulumi.RegisterOutputType(AnalysisTimeRangeDrillDownFilterPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTimeRangeFilterOutput{})
	pulumi.RegisterOutputType(AnalysisTimeRangeFilterPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTimeRangeFilterValueOutput{})
	pulumi.RegisterOutputType(AnalysisTimeRangeFilterValuePtrOutput{})
	pulumi.RegisterOutputType(AnalysisTooltipItemOutput{})
	pulumi.RegisterOutputType(AnalysisTooltipItemArrayOutput{})
	pulumi.RegisterOutputType(AnalysisTooltipOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTooltipOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTopBottomFilterOutput{})
	pulumi.RegisterOutputType(AnalysisTopBottomFilterPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTopBottomMoversComputationOutput{})
	pulumi.RegisterOutputType(AnalysisTopBottomMoversComputationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTopBottomRankedComputationOutput{})
	pulumi.RegisterOutputType(AnalysisTopBottomRankedComputationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTotalAggregationComputationOutput{})
	pulumi.RegisterOutputType(AnalysisTotalAggregationComputationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTotalOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTreeMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisTreeMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTreeMapConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisTreeMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTreeMapFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisTreeMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTreeMapSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisTreeMapSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTreeMapVisualOutput{})
	pulumi.RegisterOutputType(AnalysisTreeMapVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTrendArrowOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTrendArrowOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisUnaggregatedFieldOutput{})
	pulumi.RegisterOutputType(AnalysisUnaggregatedFieldArrayOutput{})
	pulumi.RegisterOutputType(AnalysisUniqueValuesComputationOutput{})
	pulumi.RegisterOutputType(AnalysisUniqueValuesComputationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisVisibleRangeOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisVisibleRangeOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisVisualOutput{})
	pulumi.RegisterOutputType(AnalysisVisualArrayOutput{})
	pulumi.RegisterOutputType(AnalysisVisualCustomActionOutput{})
	pulumi.RegisterOutputType(AnalysisVisualCustomActionArrayOutput{})
	pulumi.RegisterOutputType(AnalysisVisualCustomActionOperationOutput{})
	pulumi.RegisterOutputType(AnalysisVisualCustomActionOperationArrayOutput{})
	pulumi.RegisterOutputType(AnalysisVisualPaletteOutput{})
	pulumi.RegisterOutputType(AnalysisVisualPalettePtrOutput{})
	pulumi.RegisterOutputType(AnalysisVisualSubtitleLabelOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisVisualSubtitleLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisVisualTitleLabelOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisVisualTitleLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallChartFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallChartOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallChartOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallVisualOutput{})
	pulumi.RegisterOutputType(AnalysisWaterfallVisualPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWhatIfPointScenarioOutput{})
	pulumi.RegisterOutputType(AnalysisWhatIfPointScenarioPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWhatIfRangeScenarioOutput{})
	pulumi.RegisterOutputType(AnalysisWhatIfRangeScenarioPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudChartConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudFieldWellsOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudSortConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudVisualOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardAdHocFilteringOptionOutput{})
	pulumi.RegisterOutputType(DashboardAdHocFilteringOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardAggregationFunctionOutput{})
	pulumi.RegisterOutputType(DashboardAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(DashboardAggregationSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardAggregationSortConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DashboardAnalysisDefaultsOutput{})
	pulumi.RegisterOutputType(DashboardAnalysisDefaultsPtrOutput{})
	pulumi.RegisterOutputType(DashboardAnchorDateConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardAnchorDateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardArcAxisConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardArcAxisConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardArcAxisDisplayRangeOutput{})
	pulumi.RegisterOutputType(DashboardArcAxisDisplayRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardArcConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardArcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardArcOptionsOutput{})
	pulumi.RegisterOutputType(DashboardArcOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisDataOptionsOutput{})
	pulumi.RegisterOutputType(DashboardAxisDataOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisDisplayDataDrivenRangeOutput{})
	pulumi.RegisterOutputType(DashboardAxisDisplayDataDrivenRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisDisplayMinMaxRangeOutput{})
	pulumi.RegisterOutputType(DashboardAxisDisplayMinMaxRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisDisplayOptionsOutput{})
	pulumi.RegisterOutputType(DashboardAxisDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisDisplayRangeOutput{})
	pulumi.RegisterOutputType(DashboardAxisDisplayRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisLabelOptionsOutput{})
	pulumi.RegisterOutputType(DashboardAxisLabelOptionsArrayOutput{})
	pulumi.RegisterOutputType(DashboardAxisLabelReferenceOptionsOutput{})
	pulumi.RegisterOutputType(DashboardAxisLabelReferenceOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisLinearScaleOutput{})
	pulumi.RegisterOutputType(DashboardAxisLinearScalePtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisLogarithmicScaleOutput{})
	pulumi.RegisterOutputType(DashboardAxisLogarithmicScalePtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisScaleOutput{})
	pulumi.RegisterOutputType(DashboardAxisScalePtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisTickLabelOptionsOutput{})
	pulumi.RegisterOutputType(DashboardAxisTickLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardBarChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardBarChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardBarChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardBarChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardBarChartFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardBarChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardBarChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardBarChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardBarChartVisualOutput{})
	pulumi.RegisterOutputType(DashboardBarChartVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardBinCountOptionsOutput{})
	pulumi.RegisterOutputType(DashboardBinCountOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardBinWidthOptionsOutput{})
	pulumi.RegisterOutputType(DashboardBinWidthOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardBodySectionConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardBodySectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DashboardBodySectionContentOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotOptionsOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotStyleOptionsOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotStyleOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotVisualOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardCalculatedFieldOutput{})
	pulumi.RegisterOutputType(DashboardCalculatedFieldArrayOutput{})
	pulumi.RegisterOutputType(DashboardCalculatedMeasureFieldOutput{})
	pulumi.RegisterOutputType(DashboardCalculatedMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(DashboardCascadingControlConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardCascadingControlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardCascadingControlSourceOutput{})
	pulumi.RegisterOutputType(DashboardCascadingControlSourceArrayOutput{})
	pulumi.RegisterOutputType(DashboardCategoricalDimensionFieldOutput{})
	pulumi.RegisterOutputType(DashboardCategoricalDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(DashboardCategoricalMeasureFieldOutput{})
	pulumi.RegisterOutputType(DashboardCategoricalMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(DashboardCategoryDrillDownFilterOutput{})
	pulumi.RegisterOutputType(DashboardCategoryDrillDownFilterPtrOutput{})
	pulumi.RegisterOutputType(DashboardCategoryFilterOutput{})
	pulumi.RegisterOutputType(DashboardCategoryFilterPtrOutput{})
	pulumi.RegisterOutputType(DashboardCategoryFilterConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardCategoryFilterConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardChartAxisLabelOptionsOutput{})
	pulumi.RegisterOutputType(DashboardChartAxisLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardClusterMarkerOutput{})
	pulumi.RegisterOutputType(DashboardClusterMarkerPtrOutput{})
	pulumi.RegisterOutputType(DashboardClusterMarkerConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardClusterMarkerConfigurationPtrOutput{})
}
