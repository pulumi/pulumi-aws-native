// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of the AWS::QuickSight::CustomPermissions Resource Type.
type CustomPermissions struct {
	pulumi.CustomResourceState

	Arn                   pulumi.StringOutput                    `pulumi:"arn"`
	AwsAccountId          pulumi.StringOutput                    `pulumi:"awsAccountId"`
	Capabilities          CustomPermissionsCapabilitiesPtrOutput `pulumi:"capabilities"`
	CustomPermissionsName pulumi.StringOutput                    `pulumi:"customPermissionsName"`
	Tags                  aws.TagArrayOutput                     `pulumi:"tags"`
}

// NewCustomPermissions registers a new resource with the given unique name, arguments, and options.
func NewCustomPermissions(ctx *pulumi.Context,
	name string, args *CustomPermissionsArgs, opts ...pulumi.ResourceOption) (*CustomPermissions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsAccountId == nil {
		return nil, errors.New("invalid value for required argument 'AwsAccountId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"awsAccountId",
		"customPermissionsName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomPermissions
	err := ctx.RegisterResource("aws-native:quicksight:CustomPermissions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomPermissions gets an existing CustomPermissions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomPermissions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomPermissionsState, opts ...pulumi.ResourceOption) (*CustomPermissions, error) {
	var resource CustomPermissions
	err := ctx.ReadResource("aws-native:quicksight:CustomPermissions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomPermissions resources.
type customPermissionsState struct {
}

type CustomPermissionsState struct {
}

func (CustomPermissionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*customPermissionsState)(nil)).Elem()
}

type customPermissionsArgs struct {
	AwsAccountId          string                         `pulumi:"awsAccountId"`
	Capabilities          *CustomPermissionsCapabilities `pulumi:"capabilities"`
	CustomPermissionsName *string                        `pulumi:"customPermissionsName"`
	Tags                  []aws.Tag                      `pulumi:"tags"`
}

// The set of arguments for constructing a CustomPermissions resource.
type CustomPermissionsArgs struct {
	AwsAccountId          pulumi.StringInput
	Capabilities          CustomPermissionsCapabilitiesPtrInput
	CustomPermissionsName pulumi.StringPtrInput
	Tags                  aws.TagArrayInput
}

func (CustomPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customPermissionsArgs)(nil)).Elem()
}

type CustomPermissionsInput interface {
	pulumi.Input

	ToCustomPermissionsOutput() CustomPermissionsOutput
	ToCustomPermissionsOutputWithContext(ctx context.Context) CustomPermissionsOutput
}

func (*CustomPermissions) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPermissions)(nil)).Elem()
}

func (i *CustomPermissions) ToCustomPermissionsOutput() CustomPermissionsOutput {
	return i.ToCustomPermissionsOutputWithContext(context.Background())
}

func (i *CustomPermissions) ToCustomPermissionsOutputWithContext(ctx context.Context) CustomPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPermissionsOutput)
}

type CustomPermissionsOutput struct{ *pulumi.OutputState }

func (CustomPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPermissions)(nil)).Elem()
}

func (o CustomPermissionsOutput) ToCustomPermissionsOutput() CustomPermissionsOutput {
	return o
}

func (o CustomPermissionsOutput) ToCustomPermissionsOutputWithContext(ctx context.Context) CustomPermissionsOutput {
	return o
}

func (o CustomPermissionsOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPermissions) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o CustomPermissionsOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPermissions) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

func (o CustomPermissionsOutput) Capabilities() CustomPermissionsCapabilitiesPtrOutput {
	return o.ApplyT(func(v *CustomPermissions) CustomPermissionsCapabilitiesPtrOutput { return v.Capabilities }).(CustomPermissionsCapabilitiesPtrOutput)
}

func (o CustomPermissionsOutput) CustomPermissionsName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPermissions) pulumi.StringOutput { return v.CustomPermissionsName }).(pulumi.StringOutput)
}

func (o CustomPermissionsOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *CustomPermissions) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPermissionsInput)(nil)).Elem(), &CustomPermissions{})
	pulumi.RegisterOutputType(CustomPermissionsOutput{})
}
