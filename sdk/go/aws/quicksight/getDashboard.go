// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of the AWS::QuickSight::Dashboard Resource Type.
func LookupDashboard(ctx *pulumi.Context, args *LookupDashboardArgs, opts ...pulumi.InvokeOption) (*LookupDashboardResult, error) {
	var rv LookupDashboardResult
	err := ctx.Invoke("aws-native:quicksight:getDashboard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDashboardArgs struct {
	AwsAccountId string `pulumi:"awsAccountId"`
	DashboardId  string `pulumi:"dashboardId"`
}

type LookupDashboardResult struct {
	// <p>The Amazon Resource Name (ARN) of the resource.</p>
	Arn *string `pulumi:"arn"`
	// <p>The last time that this dataset was published.</p>
	LastPublishedTime *string `pulumi:"lastPublishedTime"`
	// <p>The display name of the dashboard.</p>
	Name *string `pulumi:"name"`
	// <p>A structure that contains the permissions of the dashboard. You can use this structure
	//             for granting permissions by providing a list of IAM action information for each
	//             principal ARN. </p>
	//
	//         <p>To specify no permissions, omit the permissions list.</p>
	Permissions []DashboardResourcePermission `pulumi:"permissions"`
	// <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the
	//             dashboard.</p>
	Tags []DashboardTag `pulumi:"tags"`
}

func LookupDashboardOutput(ctx *pulumi.Context, args LookupDashboardOutputArgs, opts ...pulumi.InvokeOption) LookupDashboardResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDashboardResult, error) {
			args := v.(LookupDashboardArgs)
			r, err := LookupDashboard(ctx, &args, opts...)
			var s LookupDashboardResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDashboardResultOutput)
}

type LookupDashboardOutputArgs struct {
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	DashboardId  pulumi.StringInput `pulumi:"dashboardId"`
}

func (LookupDashboardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardArgs)(nil)).Elem()
}

type LookupDashboardResultOutput struct{ *pulumi.OutputState }

func (LookupDashboardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardResult)(nil)).Elem()
}

func (o LookupDashboardResultOutput) ToLookupDashboardResultOutput() LookupDashboardResultOutput {
	return o
}

func (o LookupDashboardResultOutput) ToLookupDashboardResultOutputWithContext(ctx context.Context) LookupDashboardResultOutput {
	return o
}

// <p>The Amazon Resource Name (ARN) of the resource.</p>
func (o LookupDashboardResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDashboardResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// <p>The last time that this dataset was published.</p>
func (o LookupDashboardResultOutput) LastPublishedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDashboardResult) *string { return v.LastPublishedTime }).(pulumi.StringPtrOutput)
}

// <p>The display name of the dashboard.</p>
func (o LookupDashboardResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDashboardResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// <p>A structure that contains the permissions of the dashboard. You can use this structure
//             for granting permissions by providing a list of IAM action information for each
//             principal ARN. </p>
//
//         <p>To specify no permissions, omit the permissions list.</p>
func (o LookupDashboardResultOutput) Permissions() DashboardResourcePermissionArrayOutput {
	return o.ApplyT(func(v LookupDashboardResult) []DashboardResourcePermission { return v.Permissions }).(DashboardResourcePermissionArrayOutput)
}

// <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the
//             dashboard.</p>
func (o LookupDashboardResultOutput) Tags() DashboardTagArrayOutput {
	return o.ApplyT(func(v LookupDashboardResult) []DashboardTag { return v.Tags }).(DashboardTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDashboardResultOutput{})
}
