// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of the AWS::QuickSight::VPCConnection Resource Type.
type VpcConnection struct {
	pulumi.CustomResourceState

	// <p>The Amazon Resource Name (ARN) of the VPC connection.</p>
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The availability status of the VPC connection.
	AvailabilityStatus VpcConnectionVpcConnectionAvailabilityStatusPtrOutput `pulumi:"availabilityStatus"`
	// The AWS account ID of the account where you want to create a new VPC connection.
	AwsAccountId pulumi.StringPtrOutput `pulumi:"awsAccountId"`
	// <p>The time that the VPC connection was created.</p>
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// A list of IP addresses of DNS resolver endpoints for the VPC connection.
	DnsResolvers pulumi.StringArrayOutput `pulumi:"dnsResolvers"`
	// <p>The time that the VPC connection was last updated.</p>
	LastUpdatedTime pulumi.StringOutput `pulumi:"lastUpdatedTime"`
	// The display name for the VPC connection.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// <p>A list of network interfaces.</p>
	NetworkInterfaces VpcConnectionNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// The ARN of the IAM role associated with the VPC connection.
	RoleArn pulumi.StringPtrOutput `pulumi:"roleArn"`
	// The Amazon EC2 security group IDs associated with the VPC connection.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// The HTTP status of the request.
	Status VpcConnectionVpcConnectionResourceStatusOutput `pulumi:"status"`
	// A list of subnet IDs for the VPC connection.
	SubnetIds pulumi.StringArrayOutput `pulumi:"subnetIds"`
	// A map of the key-value pairs for the resource tag or tags assigned to the VPC connection.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The ID of the VPC connection that you're creating. This ID is a unique identifier for each AWS Region in an AWS account.
	VpcConnectionId pulumi.StringPtrOutput `pulumi:"vpcConnectionId"`
	// <p>The Amazon EC2 VPC ID associated with the VPC connection.</p>
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpcConnection registers a new resource with the given unique name, arguments, and options.
func NewVpcConnection(ctx *pulumi.Context,
	name string, args *VpcConnectionArgs, opts ...pulumi.ResourceOption) (*VpcConnection, error) {
	if args == nil {
		args = &VpcConnectionArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"awsAccountId",
		"vpcConnectionId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcConnection
	err := ctx.RegisterResource("aws-native:quicksight:VpcConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcConnection gets an existing VpcConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcConnectionState, opts ...pulumi.ResourceOption) (*VpcConnection, error) {
	var resource VpcConnection
	err := ctx.ReadResource("aws-native:quicksight:VpcConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcConnection resources.
type vpcConnectionState struct {
}

type VpcConnectionState struct {
}

func (VpcConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcConnectionState)(nil)).Elem()
}

type vpcConnectionArgs struct {
	// The availability status of the VPC connection.
	AvailabilityStatus *VpcConnectionVpcConnectionAvailabilityStatus `pulumi:"availabilityStatus"`
	// The AWS account ID of the account where you want to create a new VPC connection.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// A list of IP addresses of DNS resolver endpoints for the VPC connection.
	DnsResolvers []string `pulumi:"dnsResolvers"`
	// The display name for the VPC connection.
	Name *string `pulumi:"name"`
	// The ARN of the IAM role associated with the VPC connection.
	RoleArn *string `pulumi:"roleArn"`
	// The Amazon EC2 security group IDs associated with the VPC connection.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of subnet IDs for the VPC connection.
	SubnetIds []string `pulumi:"subnetIds"`
	// A map of the key-value pairs for the resource tag or tags assigned to the VPC connection.
	Tags []aws.Tag `pulumi:"tags"`
	// The ID of the VPC connection that you're creating. This ID is a unique identifier for each AWS Region in an AWS account.
	VpcConnectionId *string `pulumi:"vpcConnectionId"`
}

// The set of arguments for constructing a VpcConnection resource.
type VpcConnectionArgs struct {
	// The availability status of the VPC connection.
	AvailabilityStatus VpcConnectionVpcConnectionAvailabilityStatusPtrInput
	// The AWS account ID of the account where you want to create a new VPC connection.
	AwsAccountId pulumi.StringPtrInput
	// A list of IP addresses of DNS resolver endpoints for the VPC connection.
	DnsResolvers pulumi.StringArrayInput
	// The display name for the VPC connection.
	Name pulumi.StringPtrInput
	// The ARN of the IAM role associated with the VPC connection.
	RoleArn pulumi.StringPtrInput
	// The Amazon EC2 security group IDs associated with the VPC connection.
	SecurityGroupIds pulumi.StringArrayInput
	// A list of subnet IDs for the VPC connection.
	SubnetIds pulumi.StringArrayInput
	// A map of the key-value pairs for the resource tag or tags assigned to the VPC connection.
	Tags aws.TagArrayInput
	// The ID of the VPC connection that you're creating. This ID is a unique identifier for each AWS Region in an AWS account.
	VpcConnectionId pulumi.StringPtrInput
}

func (VpcConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcConnectionArgs)(nil)).Elem()
}

type VpcConnectionInput interface {
	pulumi.Input

	ToVpcConnectionOutput() VpcConnectionOutput
	ToVpcConnectionOutputWithContext(ctx context.Context) VpcConnectionOutput
}

func (*VpcConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConnection)(nil)).Elem()
}

func (i *VpcConnection) ToVpcConnectionOutput() VpcConnectionOutput {
	return i.ToVpcConnectionOutputWithContext(context.Background())
}

func (i *VpcConnection) ToVpcConnectionOutputWithContext(ctx context.Context) VpcConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConnectionOutput)
}

type VpcConnectionOutput struct{ *pulumi.OutputState }

func (VpcConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConnection)(nil)).Elem()
}

func (o VpcConnectionOutput) ToVpcConnectionOutput() VpcConnectionOutput {
	return o
}

func (o VpcConnectionOutput) ToVpcConnectionOutputWithContext(ctx context.Context) VpcConnectionOutput {
	return o
}

// <p>The Amazon Resource Name (ARN) of the VPC connection.</p>
func (o VpcConnectionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The availability status of the VPC connection.
func (o VpcConnectionOutput) AvailabilityStatus() VpcConnectionVpcConnectionAvailabilityStatusPtrOutput {
	return o.ApplyT(func(v *VpcConnection) VpcConnectionVpcConnectionAvailabilityStatusPtrOutput {
		return v.AvailabilityStatus
	}).(VpcConnectionVpcConnectionAvailabilityStatusPtrOutput)
}

// The AWS account ID of the account where you want to create a new VPC connection.
func (o VpcConnectionOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringPtrOutput { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// <p>The time that the VPC connection was created.</p>
func (o VpcConnectionOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// A list of IP addresses of DNS resolver endpoints for the VPC connection.
func (o VpcConnectionOutput) DnsResolvers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringArrayOutput { return v.DnsResolvers }).(pulumi.StringArrayOutput)
}

// <p>The time that the VPC connection was last updated.</p>
func (o VpcConnectionOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringOutput { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// The display name for the VPC connection.
func (o VpcConnectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// <p>A list of network interfaces.</p>
func (o VpcConnectionOutput) NetworkInterfaces() VpcConnectionNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *VpcConnection) VpcConnectionNetworkInterfaceArrayOutput { return v.NetworkInterfaces }).(VpcConnectionNetworkInterfaceArrayOutput)
}

// The ARN of the IAM role associated with the VPC connection.
func (o VpcConnectionOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringPtrOutput { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The Amazon EC2 security group IDs associated with the VPC connection.
func (o VpcConnectionOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The HTTP status of the request.
func (o VpcConnectionOutput) Status() VpcConnectionVpcConnectionResourceStatusOutput {
	return o.ApplyT(func(v *VpcConnection) VpcConnectionVpcConnectionResourceStatusOutput { return v.Status }).(VpcConnectionVpcConnectionResourceStatusOutput)
}

// A list of subnet IDs for the VPC connection.
func (o VpcConnectionOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringArrayOutput { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// A map of the key-value pairs for the resource tag or tags assigned to the VPC connection.
func (o VpcConnectionOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *VpcConnection) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The ID of the VPC connection that you're creating. This ID is a unique identifier for each AWS Region in an AWS account.
func (o VpcConnectionOutput) VpcConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringPtrOutput { return v.VpcConnectionId }).(pulumi.StringPtrOutput)
}

// <p>The Amazon EC2 VPC ID associated with the VPC connection.</p>
func (o VpcConnectionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcConnectionInput)(nil)).Elem(), &VpcConnection{})
	pulumi.RegisterOutputType(VpcConnectionOutput{})
}
