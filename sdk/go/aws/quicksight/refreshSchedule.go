// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Definition of the AWS::QuickSight::RefreshSchedule Resource Type.
type RefreshSchedule struct {
	pulumi.CustomResourceState

	// <p>The Amazon Resource Name (ARN) of the data source.</p>
	Arn          pulumi.StringOutput         `pulumi:"arn"`
	AwsAccountId pulumi.StringPtrOutput      `pulumi:"awsAccountId"`
	DataSetId    pulumi.StringPtrOutput      `pulumi:"dataSetId"`
	Schedule     RefreshScheduleMapPtrOutput `pulumi:"schedule"`
}

// NewRefreshSchedule registers a new resource with the given unique name, arguments, and options.
func NewRefreshSchedule(ctx *pulumi.Context,
	name string, args *RefreshScheduleArgs, opts ...pulumi.ResourceOption) (*RefreshSchedule, error) {
	if args == nil {
		args = &RefreshScheduleArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"awsAccountId",
		"dataSetId",
		"schedule.scheduleId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RefreshSchedule
	err := ctx.RegisterResource("aws-native:quicksight:RefreshSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRefreshSchedule gets an existing RefreshSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRefreshSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RefreshScheduleState, opts ...pulumi.ResourceOption) (*RefreshSchedule, error) {
	var resource RefreshSchedule
	err := ctx.ReadResource("aws-native:quicksight:RefreshSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RefreshSchedule resources.
type refreshScheduleState struct {
}

type RefreshScheduleState struct {
}

func (RefreshScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*refreshScheduleState)(nil)).Elem()
}

type refreshScheduleArgs struct {
	AwsAccountId *string             `pulumi:"awsAccountId"`
	DataSetId    *string             `pulumi:"dataSetId"`
	Schedule     *RefreshScheduleMap `pulumi:"schedule"`
}

// The set of arguments for constructing a RefreshSchedule resource.
type RefreshScheduleArgs struct {
	AwsAccountId pulumi.StringPtrInput
	DataSetId    pulumi.StringPtrInput
	Schedule     RefreshScheduleMapPtrInput
}

func (RefreshScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*refreshScheduleArgs)(nil)).Elem()
}

type RefreshScheduleInput interface {
	pulumi.Input

	ToRefreshScheduleOutput() RefreshScheduleOutput
	ToRefreshScheduleOutputWithContext(ctx context.Context) RefreshScheduleOutput
}

func (*RefreshSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshSchedule)(nil)).Elem()
}

func (i *RefreshSchedule) ToRefreshScheduleOutput() RefreshScheduleOutput {
	return i.ToRefreshScheduleOutputWithContext(context.Background())
}

func (i *RefreshSchedule) ToRefreshScheduleOutputWithContext(ctx context.Context) RefreshScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshScheduleOutput)
}

func (i *RefreshSchedule) ToOutput(ctx context.Context) pulumix.Output[*RefreshSchedule] {
	return pulumix.Output[*RefreshSchedule]{
		OutputState: i.ToRefreshScheduleOutputWithContext(ctx).OutputState,
	}
}

type RefreshScheduleOutput struct{ *pulumi.OutputState }

func (RefreshScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshSchedule)(nil)).Elem()
}

func (o RefreshScheduleOutput) ToRefreshScheduleOutput() RefreshScheduleOutput {
	return o
}

func (o RefreshScheduleOutput) ToRefreshScheduleOutputWithContext(ctx context.Context) RefreshScheduleOutput {
	return o
}

func (o RefreshScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[*RefreshSchedule] {
	return pulumix.Output[*RefreshSchedule]{
		OutputState: o.OutputState,
	}
}

// <p>The Amazon Resource Name (ARN) of the data source.</p>
func (o RefreshScheduleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *RefreshSchedule) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o RefreshScheduleOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshSchedule) pulumi.StringPtrOutput { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

func (o RefreshScheduleOutput) DataSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshSchedule) pulumi.StringPtrOutput { return v.DataSetId }).(pulumi.StringPtrOutput)
}

func (o RefreshScheduleOutput) Schedule() RefreshScheduleMapPtrOutput {
	return o.ApplyT(func(v *RefreshSchedule) RefreshScheduleMapPtrOutput { return v.Schedule }).(RefreshScheduleMapPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleInput)(nil)).Elem(), &RefreshSchedule{})
	pulumi.RegisterOutputType(RefreshScheduleOutput{})
}
