// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AnalysisErrorType string

const (
	AnalysisErrorTypeAccessDenied                 = AnalysisErrorType("ACCESS_DENIED")
	AnalysisErrorTypeSourceNotFound               = AnalysisErrorType("SOURCE_NOT_FOUND")
	AnalysisErrorTypeDataSetNotFound              = AnalysisErrorType("DATA_SET_NOT_FOUND")
	AnalysisErrorTypeInternalFailure              = AnalysisErrorType("INTERNAL_FAILURE")
	AnalysisErrorTypeParameterValueIncompatible   = AnalysisErrorType("PARAMETER_VALUE_INCOMPATIBLE")
	AnalysisErrorTypeParameterTypeInvalid         = AnalysisErrorType("PARAMETER_TYPE_INVALID")
	AnalysisErrorTypeParameterNotFound            = AnalysisErrorType("PARAMETER_NOT_FOUND")
	AnalysisErrorTypeColumnTypeMismatch           = AnalysisErrorType("COLUMN_TYPE_MISMATCH")
	AnalysisErrorTypeColumnGeographicRoleMismatch = AnalysisErrorType("COLUMN_GEOGRAPHIC_ROLE_MISMATCH")
	AnalysisErrorTypeColumnReplacementMissing     = AnalysisErrorType("COLUMN_REPLACEMENT_MISSING")
)

func (AnalysisErrorType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisErrorType)(nil)).Elem()
}

func (e AnalysisErrorType) ToAnalysisErrorTypeOutput() AnalysisErrorTypeOutput {
	return pulumi.ToOutput(e).(AnalysisErrorTypeOutput)
}

func (e AnalysisErrorType) ToAnalysisErrorTypeOutputWithContext(ctx context.Context) AnalysisErrorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisErrorTypeOutput)
}

func (e AnalysisErrorType) ToAnalysisErrorTypePtrOutput() AnalysisErrorTypePtrOutput {
	return e.ToAnalysisErrorTypePtrOutputWithContext(context.Background())
}

func (e AnalysisErrorType) ToAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisErrorTypePtrOutput {
	return AnalysisErrorType(e).ToAnalysisErrorTypeOutputWithContext(ctx).ToAnalysisErrorTypePtrOutputWithContext(ctx)
}

func (e AnalysisErrorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisErrorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisErrorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisErrorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisErrorTypeOutput struct{ *pulumi.OutputState }

func (AnalysisErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisErrorType)(nil)).Elem()
}

func (o AnalysisErrorTypeOutput) ToAnalysisErrorTypeOutput() AnalysisErrorTypeOutput {
	return o
}

func (o AnalysisErrorTypeOutput) ToAnalysisErrorTypeOutputWithContext(ctx context.Context) AnalysisErrorTypeOutput {
	return o
}

func (o AnalysisErrorTypeOutput) ToAnalysisErrorTypePtrOutput() AnalysisErrorTypePtrOutput {
	return o.ToAnalysisErrorTypePtrOutputWithContext(context.Background())
}

func (o AnalysisErrorTypeOutput) ToAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisErrorType) *AnalysisErrorType {
		return &v
	}).(AnalysisErrorTypePtrOutput)
}

func (o AnalysisErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisErrorTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisErrorType)(nil)).Elem()
}

func (o AnalysisErrorTypePtrOutput) ToAnalysisErrorTypePtrOutput() AnalysisErrorTypePtrOutput {
	return o
}

func (o AnalysisErrorTypePtrOutput) ToAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisErrorTypePtrOutput {
	return o
}

func (o AnalysisErrorTypePtrOutput) Elem() AnalysisErrorTypeOutput {
	return o.ApplyT(func(v *AnalysisErrorType) AnalysisErrorType {
		if v != nil {
			return *v
		}
		var ret AnalysisErrorType
		return ret
	}).(AnalysisErrorTypeOutput)
}

func (o AnalysisErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisErrorTypeInput is an input type that accepts AnalysisErrorTypeArgs and AnalysisErrorTypeOutput values.
// You can construct a concrete instance of `AnalysisErrorTypeInput` via:
//
//          AnalysisErrorTypeArgs{...}
type AnalysisErrorTypeInput interface {
	pulumi.Input

	ToAnalysisErrorTypeOutput() AnalysisErrorTypeOutput
	ToAnalysisErrorTypeOutputWithContext(context.Context) AnalysisErrorTypeOutput
}

var analysisErrorTypePtrType = reflect.TypeOf((**AnalysisErrorType)(nil)).Elem()

type AnalysisErrorTypePtrInput interface {
	pulumi.Input

	ToAnalysisErrorTypePtrOutput() AnalysisErrorTypePtrOutput
	ToAnalysisErrorTypePtrOutputWithContext(context.Context) AnalysisErrorTypePtrOutput
}

type analysisErrorTypePtr string

func AnalysisErrorTypePtr(v string) AnalysisErrorTypePtrInput {
	return (*analysisErrorTypePtr)(&v)
}

func (*analysisErrorTypePtr) ElementType() reflect.Type {
	return analysisErrorTypePtrType
}

func (in *analysisErrorTypePtr) ToAnalysisErrorTypePtrOutput() AnalysisErrorTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisErrorTypePtrOutput)
}

func (in *analysisErrorTypePtr) ToAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisErrorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisErrorTypePtrOutput)
}

type AnalysisResourceStatus string

const (
	AnalysisResourceStatusCreationInProgress = AnalysisResourceStatus("CREATION_IN_PROGRESS")
	AnalysisResourceStatusCreationSuccessful = AnalysisResourceStatus("CREATION_SUCCESSFUL")
	AnalysisResourceStatusCreationFailed     = AnalysisResourceStatus("CREATION_FAILED")
	AnalysisResourceStatusUpdateInProgress   = AnalysisResourceStatus("UPDATE_IN_PROGRESS")
	AnalysisResourceStatusUpdateSuccessful   = AnalysisResourceStatus("UPDATE_SUCCESSFUL")
	AnalysisResourceStatusUpdateFailed       = AnalysisResourceStatus("UPDATE_FAILED")
	AnalysisResourceStatusDeleted            = AnalysisResourceStatus("DELETED")
)

func (AnalysisResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResourceStatus)(nil)).Elem()
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusOutput() AnalysisResourceStatusOutput {
	return pulumi.ToOutput(e).(AnalysisResourceStatusOutput)
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusOutputWithContext(ctx context.Context) AnalysisResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisResourceStatusOutput)
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return e.ToAnalysisResourceStatusPtrOutputWithContext(context.Background())
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return AnalysisResourceStatus(e).ToAnalysisResourceStatusOutputWithContext(ctx).ToAnalysisResourceStatusPtrOutputWithContext(ctx)
}

func (e AnalysisResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisResourceStatusOutput struct{ *pulumi.OutputState }

func (AnalysisResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResourceStatus)(nil)).Elem()
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusOutput() AnalysisResourceStatusOutput {
	return o
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusOutputWithContext(ctx context.Context) AnalysisResourceStatusOutput {
	return o
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return o.ToAnalysisResourceStatusPtrOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisResourceStatus) *AnalysisResourceStatus {
		return &v
	}).(AnalysisResourceStatusPtrOutput)
}

func (o AnalysisResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (AnalysisResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisResourceStatus)(nil)).Elem()
}

func (o AnalysisResourceStatusPtrOutput) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return o
}

func (o AnalysisResourceStatusPtrOutput) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return o
}

func (o AnalysisResourceStatusPtrOutput) Elem() AnalysisResourceStatusOutput {
	return o.ApplyT(func(v *AnalysisResourceStatus) AnalysisResourceStatus {
		if v != nil {
			return *v
		}
		var ret AnalysisResourceStatus
		return ret
	}).(AnalysisResourceStatusOutput)
}

func (o AnalysisResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisResourceStatusInput is an input type that accepts AnalysisResourceStatusArgs and AnalysisResourceStatusOutput values.
// You can construct a concrete instance of `AnalysisResourceStatusInput` via:
//
//          AnalysisResourceStatusArgs{...}
type AnalysisResourceStatusInput interface {
	pulumi.Input

	ToAnalysisResourceStatusOutput() AnalysisResourceStatusOutput
	ToAnalysisResourceStatusOutputWithContext(context.Context) AnalysisResourceStatusOutput
}

var analysisResourceStatusPtrType = reflect.TypeOf((**AnalysisResourceStatus)(nil)).Elem()

type AnalysisResourceStatusPtrInput interface {
	pulumi.Input

	ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput
	ToAnalysisResourceStatusPtrOutputWithContext(context.Context) AnalysisResourceStatusPtrOutput
}

type analysisResourceStatusPtr string

func AnalysisResourceStatusPtr(v string) AnalysisResourceStatusPtrInput {
	return (*analysisResourceStatusPtr)(&v)
}

func (*analysisResourceStatusPtr) ElementType() reflect.Type {
	return analysisResourceStatusPtrType
}

func (in *analysisResourceStatusPtr) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(AnalysisResourceStatusPtrOutput)
}

func (in *analysisResourceStatusPtr) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisResourceStatusPtrOutput)
}

type DashboardBehavior string

const (
	DashboardBehaviorEnabled  = DashboardBehavior("ENABLED")
	DashboardBehaviorDisabled = DashboardBehavior("DISABLED")
)

func (DashboardBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBehavior)(nil)).Elem()
}

func (e DashboardBehavior) ToDashboardBehaviorOutput() DashboardBehaviorOutput {
	return pulumi.ToOutput(e).(DashboardBehaviorOutput)
}

func (e DashboardBehavior) ToDashboardBehaviorOutputWithContext(ctx context.Context) DashboardBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardBehaviorOutput)
}

func (e DashboardBehavior) ToDashboardBehaviorPtrOutput() DashboardBehaviorPtrOutput {
	return e.ToDashboardBehaviorPtrOutputWithContext(context.Background())
}

func (e DashboardBehavior) ToDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardBehaviorPtrOutput {
	return DashboardBehavior(e).ToDashboardBehaviorOutputWithContext(ctx).ToDashboardBehaviorPtrOutputWithContext(ctx)
}

func (e DashboardBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardBehaviorOutput struct{ *pulumi.OutputState }

func (DashboardBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBehavior)(nil)).Elem()
}

func (o DashboardBehaviorOutput) ToDashboardBehaviorOutput() DashboardBehaviorOutput {
	return o
}

func (o DashboardBehaviorOutput) ToDashboardBehaviorOutputWithContext(ctx context.Context) DashboardBehaviorOutput {
	return o
}

func (o DashboardBehaviorOutput) ToDashboardBehaviorPtrOutput() DashboardBehaviorPtrOutput {
	return o.ToDashboardBehaviorPtrOutputWithContext(context.Background())
}

func (o DashboardBehaviorOutput) ToDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBehavior) *DashboardBehavior {
		return &v
	}).(DashboardBehaviorPtrOutput)
}

func (o DashboardBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardBehaviorPtrOutput struct{ *pulumi.OutputState }

func (DashboardBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBehavior)(nil)).Elem()
}

func (o DashboardBehaviorPtrOutput) ToDashboardBehaviorPtrOutput() DashboardBehaviorPtrOutput {
	return o
}

func (o DashboardBehaviorPtrOutput) ToDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardBehaviorPtrOutput {
	return o
}

func (o DashboardBehaviorPtrOutput) Elem() DashboardBehaviorOutput {
	return o.ApplyT(func(v *DashboardBehavior) DashboardBehavior {
		if v != nil {
			return *v
		}
		var ret DashboardBehavior
		return ret
	}).(DashboardBehaviorOutput)
}

func (o DashboardBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardBehaviorInput is an input type that accepts DashboardBehaviorArgs and DashboardBehaviorOutput values.
// You can construct a concrete instance of `DashboardBehaviorInput` via:
//
//          DashboardBehaviorArgs{...}
type DashboardBehaviorInput interface {
	pulumi.Input

	ToDashboardBehaviorOutput() DashboardBehaviorOutput
	ToDashboardBehaviorOutputWithContext(context.Context) DashboardBehaviorOutput
}

var dashboardBehaviorPtrType = reflect.TypeOf((**DashboardBehavior)(nil)).Elem()

type DashboardBehaviorPtrInput interface {
	pulumi.Input

	ToDashboardBehaviorPtrOutput() DashboardBehaviorPtrOutput
	ToDashboardBehaviorPtrOutputWithContext(context.Context) DashboardBehaviorPtrOutput
}

type dashboardBehaviorPtr string

func DashboardBehaviorPtr(v string) DashboardBehaviorPtrInput {
	return (*dashboardBehaviorPtr)(&v)
}

func (*dashboardBehaviorPtr) ElementType() reflect.Type {
	return dashboardBehaviorPtrType
}

func (in *dashboardBehaviorPtr) ToDashboardBehaviorPtrOutput() DashboardBehaviorPtrOutput {
	return pulumi.ToOutput(in).(DashboardBehaviorPtrOutput)
}

func (in *dashboardBehaviorPtr) ToDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardBehaviorPtrOutput)
}

type DashboardErrorType string

const (
	DashboardErrorTypeAccessDenied                 = DashboardErrorType("ACCESS_DENIED")
	DashboardErrorTypeSourceNotFound               = DashboardErrorType("SOURCE_NOT_FOUND")
	DashboardErrorTypeDataSetNotFound              = DashboardErrorType("DATA_SET_NOT_FOUND")
	DashboardErrorTypeInternalFailure              = DashboardErrorType("INTERNAL_FAILURE")
	DashboardErrorTypeParameterValueIncompatible   = DashboardErrorType("PARAMETER_VALUE_INCOMPATIBLE")
	DashboardErrorTypeParameterTypeInvalid         = DashboardErrorType("PARAMETER_TYPE_INVALID")
	DashboardErrorTypeParameterNotFound            = DashboardErrorType("PARAMETER_NOT_FOUND")
	DashboardErrorTypeColumnTypeMismatch           = DashboardErrorType("COLUMN_TYPE_MISMATCH")
	DashboardErrorTypeColumnGeographicRoleMismatch = DashboardErrorType("COLUMN_GEOGRAPHIC_ROLE_MISMATCH")
	DashboardErrorTypeColumnReplacementMissing     = DashboardErrorType("COLUMN_REPLACEMENT_MISSING")
)

func (DashboardErrorType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardErrorType)(nil)).Elem()
}

func (e DashboardErrorType) ToDashboardErrorTypeOutput() DashboardErrorTypeOutput {
	return pulumi.ToOutput(e).(DashboardErrorTypeOutput)
}

func (e DashboardErrorType) ToDashboardErrorTypeOutputWithContext(ctx context.Context) DashboardErrorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardErrorTypeOutput)
}

func (e DashboardErrorType) ToDashboardErrorTypePtrOutput() DashboardErrorTypePtrOutput {
	return e.ToDashboardErrorTypePtrOutputWithContext(context.Background())
}

func (e DashboardErrorType) ToDashboardErrorTypePtrOutputWithContext(ctx context.Context) DashboardErrorTypePtrOutput {
	return DashboardErrorType(e).ToDashboardErrorTypeOutputWithContext(ctx).ToDashboardErrorTypePtrOutputWithContext(ctx)
}

func (e DashboardErrorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardErrorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardErrorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardErrorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardErrorTypeOutput struct{ *pulumi.OutputState }

func (DashboardErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardErrorType)(nil)).Elem()
}

func (o DashboardErrorTypeOutput) ToDashboardErrorTypeOutput() DashboardErrorTypeOutput {
	return o
}

func (o DashboardErrorTypeOutput) ToDashboardErrorTypeOutputWithContext(ctx context.Context) DashboardErrorTypeOutput {
	return o
}

func (o DashboardErrorTypeOutput) ToDashboardErrorTypePtrOutput() DashboardErrorTypePtrOutput {
	return o.ToDashboardErrorTypePtrOutputWithContext(context.Background())
}

func (o DashboardErrorTypeOutput) ToDashboardErrorTypePtrOutputWithContext(ctx context.Context) DashboardErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardErrorType) *DashboardErrorType {
		return &v
	}).(DashboardErrorTypePtrOutput)
}

func (o DashboardErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardErrorTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardErrorType)(nil)).Elem()
}

func (o DashboardErrorTypePtrOutput) ToDashboardErrorTypePtrOutput() DashboardErrorTypePtrOutput {
	return o
}

func (o DashboardErrorTypePtrOutput) ToDashboardErrorTypePtrOutputWithContext(ctx context.Context) DashboardErrorTypePtrOutput {
	return o
}

func (o DashboardErrorTypePtrOutput) Elem() DashboardErrorTypeOutput {
	return o.ApplyT(func(v *DashboardErrorType) DashboardErrorType {
		if v != nil {
			return *v
		}
		var ret DashboardErrorType
		return ret
	}).(DashboardErrorTypeOutput)
}

func (o DashboardErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardErrorTypeInput is an input type that accepts DashboardErrorTypeArgs and DashboardErrorTypeOutput values.
// You can construct a concrete instance of `DashboardErrorTypeInput` via:
//
//          DashboardErrorTypeArgs{...}
type DashboardErrorTypeInput interface {
	pulumi.Input

	ToDashboardErrorTypeOutput() DashboardErrorTypeOutput
	ToDashboardErrorTypeOutputWithContext(context.Context) DashboardErrorTypeOutput
}

var dashboardErrorTypePtrType = reflect.TypeOf((**DashboardErrorType)(nil)).Elem()

type DashboardErrorTypePtrInput interface {
	pulumi.Input

	ToDashboardErrorTypePtrOutput() DashboardErrorTypePtrOutput
	ToDashboardErrorTypePtrOutputWithContext(context.Context) DashboardErrorTypePtrOutput
}

type dashboardErrorTypePtr string

func DashboardErrorTypePtr(v string) DashboardErrorTypePtrInput {
	return (*dashboardErrorTypePtr)(&v)
}

func (*dashboardErrorTypePtr) ElementType() reflect.Type {
	return dashboardErrorTypePtrType
}

func (in *dashboardErrorTypePtr) ToDashboardErrorTypePtrOutput() DashboardErrorTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardErrorTypePtrOutput)
}

func (in *dashboardErrorTypePtr) ToDashboardErrorTypePtrOutputWithContext(ctx context.Context) DashboardErrorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardErrorTypePtrOutput)
}

type DashboardResourceStatus string

const (
	DashboardResourceStatusCreationInProgress = DashboardResourceStatus("CREATION_IN_PROGRESS")
	DashboardResourceStatusCreationSuccessful = DashboardResourceStatus("CREATION_SUCCESSFUL")
	DashboardResourceStatusCreationFailed     = DashboardResourceStatus("CREATION_FAILED")
	DashboardResourceStatusUpdateInProgress   = DashboardResourceStatus("UPDATE_IN_PROGRESS")
	DashboardResourceStatusUpdateSuccessful   = DashboardResourceStatus("UPDATE_SUCCESSFUL")
	DashboardResourceStatusUpdateFailed       = DashboardResourceStatus("UPDATE_FAILED")
	DashboardResourceStatusDeleted            = DashboardResourceStatus("DELETED")
)

func (DashboardResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResourceStatus)(nil)).Elem()
}

func (e DashboardResourceStatus) ToDashboardResourceStatusOutput() DashboardResourceStatusOutput {
	return pulumi.ToOutput(e).(DashboardResourceStatusOutput)
}

func (e DashboardResourceStatus) ToDashboardResourceStatusOutputWithContext(ctx context.Context) DashboardResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardResourceStatusOutput)
}

func (e DashboardResourceStatus) ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput {
	return e.ToDashboardResourceStatusPtrOutputWithContext(context.Background())
}

func (e DashboardResourceStatus) ToDashboardResourceStatusPtrOutputWithContext(ctx context.Context) DashboardResourceStatusPtrOutput {
	return DashboardResourceStatus(e).ToDashboardResourceStatusOutputWithContext(ctx).ToDashboardResourceStatusPtrOutputWithContext(ctx)
}

func (e DashboardResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardResourceStatusOutput struct{ *pulumi.OutputState }

func (DashboardResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResourceStatus)(nil)).Elem()
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusOutput() DashboardResourceStatusOutput {
	return o
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusOutputWithContext(ctx context.Context) DashboardResourceStatusOutput {
	return o
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput {
	return o.ToDashboardResourceStatusPtrOutputWithContext(context.Background())
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusPtrOutputWithContext(ctx context.Context) DashboardResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardResourceStatus) *DashboardResourceStatus {
		return &v
	}).(DashboardResourceStatusPtrOutput)
}

func (o DashboardResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (DashboardResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardResourceStatus)(nil)).Elem()
}

func (o DashboardResourceStatusPtrOutput) ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput {
	return o
}

func (o DashboardResourceStatusPtrOutput) ToDashboardResourceStatusPtrOutputWithContext(ctx context.Context) DashboardResourceStatusPtrOutput {
	return o
}

func (o DashboardResourceStatusPtrOutput) Elem() DashboardResourceStatusOutput {
	return o.ApplyT(func(v *DashboardResourceStatus) DashboardResourceStatus {
		if v != nil {
			return *v
		}
		var ret DashboardResourceStatus
		return ret
	}).(DashboardResourceStatusOutput)
}

func (o DashboardResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardResourceStatusInput is an input type that accepts DashboardResourceStatusArgs and DashboardResourceStatusOutput values.
// You can construct a concrete instance of `DashboardResourceStatusInput` via:
//
//          DashboardResourceStatusArgs{...}
type DashboardResourceStatusInput interface {
	pulumi.Input

	ToDashboardResourceStatusOutput() DashboardResourceStatusOutput
	ToDashboardResourceStatusOutputWithContext(context.Context) DashboardResourceStatusOutput
}

var dashboardResourceStatusPtrType = reflect.TypeOf((**DashboardResourceStatus)(nil)).Elem()

type DashboardResourceStatusPtrInput interface {
	pulumi.Input

	ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput
	ToDashboardResourceStatusPtrOutputWithContext(context.Context) DashboardResourceStatusPtrOutput
}

type dashboardResourceStatusPtr string

func DashboardResourceStatusPtr(v string) DashboardResourceStatusPtrInput {
	return (*dashboardResourceStatusPtr)(&v)
}

func (*dashboardResourceStatusPtr) ElementType() reflect.Type {
	return dashboardResourceStatusPtrType
}

func (in *dashboardResourceStatusPtr) ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(DashboardResourceStatusPtrOutput)
}

func (in *dashboardResourceStatusPtr) ToDashboardResourceStatusPtrOutputWithContext(ctx context.Context) DashboardResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardResourceStatusPtrOutput)
}

type DashboardUIState string

const (
	DashboardUIStateExpanded  = DashboardUIState("EXPANDED")
	DashboardUIStateCollapsed = DashboardUIState("COLLAPSED")
)

func (DashboardUIState) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardUIState)(nil)).Elem()
}

func (e DashboardUIState) ToDashboardUIStateOutput() DashboardUIStateOutput {
	return pulumi.ToOutput(e).(DashboardUIStateOutput)
}

func (e DashboardUIState) ToDashboardUIStateOutputWithContext(ctx context.Context) DashboardUIStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardUIStateOutput)
}

func (e DashboardUIState) ToDashboardUIStatePtrOutput() DashboardUIStatePtrOutput {
	return e.ToDashboardUIStatePtrOutputWithContext(context.Background())
}

func (e DashboardUIState) ToDashboardUIStatePtrOutputWithContext(ctx context.Context) DashboardUIStatePtrOutput {
	return DashboardUIState(e).ToDashboardUIStateOutputWithContext(ctx).ToDashboardUIStatePtrOutputWithContext(ctx)
}

func (e DashboardUIState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardUIState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardUIState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardUIState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardUIStateOutput struct{ *pulumi.OutputState }

func (DashboardUIStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardUIState)(nil)).Elem()
}

func (o DashboardUIStateOutput) ToDashboardUIStateOutput() DashboardUIStateOutput {
	return o
}

func (o DashboardUIStateOutput) ToDashboardUIStateOutputWithContext(ctx context.Context) DashboardUIStateOutput {
	return o
}

func (o DashboardUIStateOutput) ToDashboardUIStatePtrOutput() DashboardUIStatePtrOutput {
	return o.ToDashboardUIStatePtrOutputWithContext(context.Background())
}

func (o DashboardUIStateOutput) ToDashboardUIStatePtrOutputWithContext(ctx context.Context) DashboardUIStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardUIState) *DashboardUIState {
		return &v
	}).(DashboardUIStatePtrOutput)
}

func (o DashboardUIStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardUIStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardUIState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardUIStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardUIStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardUIState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardUIStatePtrOutput struct{ *pulumi.OutputState }

func (DashboardUIStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardUIState)(nil)).Elem()
}

func (o DashboardUIStatePtrOutput) ToDashboardUIStatePtrOutput() DashboardUIStatePtrOutput {
	return o
}

func (o DashboardUIStatePtrOutput) ToDashboardUIStatePtrOutputWithContext(ctx context.Context) DashboardUIStatePtrOutput {
	return o
}

func (o DashboardUIStatePtrOutput) Elem() DashboardUIStateOutput {
	return o.ApplyT(func(v *DashboardUIState) DashboardUIState {
		if v != nil {
			return *v
		}
		var ret DashboardUIState
		return ret
	}).(DashboardUIStateOutput)
}

func (o DashboardUIStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardUIStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardUIState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardUIStateInput is an input type that accepts DashboardUIStateArgs and DashboardUIStateOutput values.
// You can construct a concrete instance of `DashboardUIStateInput` via:
//
//          DashboardUIStateArgs{...}
type DashboardUIStateInput interface {
	pulumi.Input

	ToDashboardUIStateOutput() DashboardUIStateOutput
	ToDashboardUIStateOutputWithContext(context.Context) DashboardUIStateOutput
}

var dashboardUIStatePtrType = reflect.TypeOf((**DashboardUIState)(nil)).Elem()

type DashboardUIStatePtrInput interface {
	pulumi.Input

	ToDashboardUIStatePtrOutput() DashboardUIStatePtrOutput
	ToDashboardUIStatePtrOutputWithContext(context.Context) DashboardUIStatePtrOutput
}

type dashboardUIStatePtr string

func DashboardUIStatePtr(v string) DashboardUIStatePtrInput {
	return (*dashboardUIStatePtr)(&v)
}

func (*dashboardUIStatePtr) ElementType() reflect.Type {
	return dashboardUIStatePtrType
}

func (in *dashboardUIStatePtr) ToDashboardUIStatePtrOutput() DashboardUIStatePtrOutput {
	return pulumi.ToOutput(in).(DashboardUIStatePtrOutput)
}

func (in *dashboardUIStatePtr) ToDashboardUIStatePtrOutputWithContext(ctx context.Context) DashboardUIStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardUIStatePtrOutput)
}

type DataSetColumnDataType string

const (
	DataSetColumnDataTypeString   = DataSetColumnDataType("STRING")
	DataSetColumnDataTypeInteger  = DataSetColumnDataType("INTEGER")
	DataSetColumnDataTypeDecimal  = DataSetColumnDataType("DECIMAL")
	DataSetColumnDataTypeDatetime = DataSetColumnDataType("DATETIME")
)

func (DataSetColumnDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnDataType)(nil)).Elem()
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypeOutput() DataSetColumnDataTypeOutput {
	return pulumi.ToOutput(e).(DataSetColumnDataTypeOutput)
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypeOutputWithContext(ctx context.Context) DataSetColumnDataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetColumnDataTypeOutput)
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return e.ToDataSetColumnDataTypePtrOutputWithContext(context.Background())
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return DataSetColumnDataType(e).ToDataSetColumnDataTypeOutputWithContext(ctx).ToDataSetColumnDataTypePtrOutputWithContext(ctx)
}

func (e DataSetColumnDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetColumnDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetColumnDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetColumnDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetColumnDataTypeOutput struct{ *pulumi.OutputState }

func (DataSetColumnDataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnDataType)(nil)).Elem()
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypeOutput() DataSetColumnDataTypeOutput {
	return o
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypeOutputWithContext(ctx context.Context) DataSetColumnDataTypeOutput {
	return o
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return o.ToDataSetColumnDataTypePtrOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetColumnDataType) *DataSetColumnDataType {
		return &v
	}).(DataSetColumnDataTypePtrOutput)
}

func (o DataSetColumnDataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetColumnDataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetColumnDataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetColumnDataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetColumnDataTypePtrOutput struct{ *pulumi.OutputState }

func (DataSetColumnDataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetColumnDataType)(nil)).Elem()
}

func (o DataSetColumnDataTypePtrOutput) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return o
}

func (o DataSetColumnDataTypePtrOutput) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return o
}

func (o DataSetColumnDataTypePtrOutput) Elem() DataSetColumnDataTypeOutput {
	return o.ApplyT(func(v *DataSetColumnDataType) DataSetColumnDataType {
		if v != nil {
			return *v
		}
		var ret DataSetColumnDataType
		return ret
	}).(DataSetColumnDataTypeOutput)
}

func (o DataSetColumnDataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetColumnDataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetColumnDataTypeInput is an input type that accepts DataSetColumnDataTypeArgs and DataSetColumnDataTypeOutput values.
// You can construct a concrete instance of `DataSetColumnDataTypeInput` via:
//
//          DataSetColumnDataTypeArgs{...}
type DataSetColumnDataTypeInput interface {
	pulumi.Input

	ToDataSetColumnDataTypeOutput() DataSetColumnDataTypeOutput
	ToDataSetColumnDataTypeOutputWithContext(context.Context) DataSetColumnDataTypeOutput
}

var dataSetColumnDataTypePtrType = reflect.TypeOf((**DataSetColumnDataType)(nil)).Elem()

type DataSetColumnDataTypePtrInput interface {
	pulumi.Input

	ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput
	ToDataSetColumnDataTypePtrOutputWithContext(context.Context) DataSetColumnDataTypePtrOutput
}

type dataSetColumnDataTypePtr string

func DataSetColumnDataTypePtr(v string) DataSetColumnDataTypePtrInput {
	return (*dataSetColumnDataTypePtr)(&v)
}

func (*dataSetColumnDataTypePtr) ElementType() reflect.Type {
	return dataSetColumnDataTypePtrType
}

func (in *dataSetColumnDataTypePtr) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return pulumi.ToOutput(in).(DataSetColumnDataTypePtrOutput)
}

func (in *dataSetColumnDataTypePtr) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetColumnDataTypePtrOutput)
}

type DataSetGeoSpatialCountryCode string

const (
	DataSetGeoSpatialCountryCodeUs = DataSetGeoSpatialCountryCode("US")
)

func (DataSetGeoSpatialCountryCode) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialCountryCode)(nil)).Elem()
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodeOutput() DataSetGeoSpatialCountryCodeOutput {
	return pulumi.ToOutput(e).(DataSetGeoSpatialCountryCodeOutput)
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodeOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetGeoSpatialCountryCodeOutput)
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return e.ToDataSetGeoSpatialCountryCodePtrOutputWithContext(context.Background())
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return DataSetGeoSpatialCountryCode(e).ToDataSetGeoSpatialCountryCodeOutputWithContext(ctx).ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx)
}

func (e DataSetGeoSpatialCountryCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetGeoSpatialCountryCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetGeoSpatialCountryCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetGeoSpatialCountryCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetGeoSpatialCountryCodeOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialCountryCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialCountryCode)(nil)).Elem()
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodeOutput() DataSetGeoSpatialCountryCodeOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodeOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodeOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return o.ToDataSetGeoSpatialCountryCodePtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetGeoSpatialCountryCode) *DataSetGeoSpatialCountryCode {
		return &v
	}).(DataSetGeoSpatialCountryCodePtrOutput)
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetGeoSpatialCountryCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetGeoSpatialCountryCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetGeoSpatialCountryCodePtrOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialCountryCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetGeoSpatialCountryCode)(nil)).Elem()
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodePtrOutput) Elem() DataSetGeoSpatialCountryCodeOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialCountryCode) DataSetGeoSpatialCountryCode {
		if v != nil {
			return *v
		}
		var ret DataSetGeoSpatialCountryCode
		return ret
	}).(DataSetGeoSpatialCountryCodeOutput)
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetGeoSpatialCountryCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetGeoSpatialCountryCodeInput is an input type that accepts DataSetGeoSpatialCountryCodeArgs and DataSetGeoSpatialCountryCodeOutput values.
// You can construct a concrete instance of `DataSetGeoSpatialCountryCodeInput` via:
//
//          DataSetGeoSpatialCountryCodeArgs{...}
type DataSetGeoSpatialCountryCodeInput interface {
	pulumi.Input

	ToDataSetGeoSpatialCountryCodeOutput() DataSetGeoSpatialCountryCodeOutput
	ToDataSetGeoSpatialCountryCodeOutputWithContext(context.Context) DataSetGeoSpatialCountryCodeOutput
}

var dataSetGeoSpatialCountryCodePtrType = reflect.TypeOf((**DataSetGeoSpatialCountryCode)(nil)).Elem()

type DataSetGeoSpatialCountryCodePtrInput interface {
	pulumi.Input

	ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput
	ToDataSetGeoSpatialCountryCodePtrOutputWithContext(context.Context) DataSetGeoSpatialCountryCodePtrOutput
}

type dataSetGeoSpatialCountryCodePtr string

func DataSetGeoSpatialCountryCodePtr(v string) DataSetGeoSpatialCountryCodePtrInput {
	return (*dataSetGeoSpatialCountryCodePtr)(&v)
}

func (*dataSetGeoSpatialCountryCodePtr) ElementType() reflect.Type {
	return dataSetGeoSpatialCountryCodePtrType
}

func (in *dataSetGeoSpatialCountryCodePtr) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return pulumi.ToOutput(in).(DataSetGeoSpatialCountryCodePtrOutput)
}

func (in *dataSetGeoSpatialCountryCodePtr) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetGeoSpatialCountryCodePtrOutput)
}

type DataSetImportMode string

const (
	DataSetImportModeSpice       = DataSetImportMode("SPICE")
	DataSetImportModeDirectQuery = DataSetImportMode("DIRECT_QUERY")
)

func (DataSetImportMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetImportMode)(nil)).Elem()
}

func (e DataSetImportMode) ToDataSetImportModeOutput() DataSetImportModeOutput {
	return pulumi.ToOutput(e).(DataSetImportModeOutput)
}

func (e DataSetImportMode) ToDataSetImportModeOutputWithContext(ctx context.Context) DataSetImportModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetImportModeOutput)
}

func (e DataSetImportMode) ToDataSetImportModePtrOutput() DataSetImportModePtrOutput {
	return e.ToDataSetImportModePtrOutputWithContext(context.Background())
}

func (e DataSetImportMode) ToDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetImportModePtrOutput {
	return DataSetImportMode(e).ToDataSetImportModeOutputWithContext(ctx).ToDataSetImportModePtrOutputWithContext(ctx)
}

func (e DataSetImportMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetImportMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetImportMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetImportMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetImportModeOutput struct{ *pulumi.OutputState }

func (DataSetImportModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetImportMode)(nil)).Elem()
}

func (o DataSetImportModeOutput) ToDataSetImportModeOutput() DataSetImportModeOutput {
	return o
}

func (o DataSetImportModeOutput) ToDataSetImportModeOutputWithContext(ctx context.Context) DataSetImportModeOutput {
	return o
}

func (o DataSetImportModeOutput) ToDataSetImportModePtrOutput() DataSetImportModePtrOutput {
	return o.ToDataSetImportModePtrOutputWithContext(context.Background())
}

func (o DataSetImportModeOutput) ToDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetImportModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetImportMode) *DataSetImportMode {
		return &v
	}).(DataSetImportModePtrOutput)
}

func (o DataSetImportModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetImportModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetImportMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetImportModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetImportModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetImportMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetImportModePtrOutput struct{ *pulumi.OutputState }

func (DataSetImportModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetImportMode)(nil)).Elem()
}

func (o DataSetImportModePtrOutput) ToDataSetImportModePtrOutput() DataSetImportModePtrOutput {
	return o
}

func (o DataSetImportModePtrOutput) ToDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetImportModePtrOutput {
	return o
}

func (o DataSetImportModePtrOutput) Elem() DataSetImportModeOutput {
	return o.ApplyT(func(v *DataSetImportMode) DataSetImportMode {
		if v != nil {
			return *v
		}
		var ret DataSetImportMode
		return ret
	}).(DataSetImportModeOutput)
}

func (o DataSetImportModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetImportModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetImportMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetImportModeInput is an input type that accepts DataSetImportModeArgs and DataSetImportModeOutput values.
// You can construct a concrete instance of `DataSetImportModeInput` via:
//
//          DataSetImportModeArgs{...}
type DataSetImportModeInput interface {
	pulumi.Input

	ToDataSetImportModeOutput() DataSetImportModeOutput
	ToDataSetImportModeOutputWithContext(context.Context) DataSetImportModeOutput
}

var dataSetImportModePtrType = reflect.TypeOf((**DataSetImportMode)(nil)).Elem()

type DataSetImportModePtrInput interface {
	pulumi.Input

	ToDataSetImportModePtrOutput() DataSetImportModePtrOutput
	ToDataSetImportModePtrOutputWithContext(context.Context) DataSetImportModePtrOutput
}

type dataSetImportModePtr string

func DataSetImportModePtr(v string) DataSetImportModePtrInput {
	return (*dataSetImportModePtr)(&v)
}

func (*dataSetImportModePtr) ElementType() reflect.Type {
	return dataSetImportModePtrType
}

func (in *dataSetImportModePtr) ToDataSetImportModePtrOutput() DataSetImportModePtrOutput {
	return pulumi.ToOutput(in).(DataSetImportModePtrOutput)
}

func (in *dataSetImportModePtr) ToDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetImportModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetImportModePtrOutput)
}

type DataSetRowLevelPermissionFormatVersion string

const (
	DataSetRowLevelPermissionFormatVersionVersion1 = DataSetRowLevelPermissionFormatVersion("VERSION_1")
	DataSetRowLevelPermissionFormatVersionVersion2 = DataSetRowLevelPermissionFormatVersion("VERSION_2")
)

func (DataSetRowLevelPermissionFormatVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionFormatVersion)(nil)).Elem()
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionOutput() DataSetRowLevelPermissionFormatVersionOutput {
	return pulumi.ToOutput(e).(DataSetRowLevelPermissionFormatVersionOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetRowLevelPermissionFormatVersionOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return e.ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return DataSetRowLevelPermissionFormatVersion(e).ToDataSetRowLevelPermissionFormatVersionOutputWithContext(ctx).ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx)
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetRowLevelPermissionFormatVersionOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionFormatVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionFormatVersion)(nil)).Elem()
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionOutput() DataSetRowLevelPermissionFormatVersionOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o.ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRowLevelPermissionFormatVersion) *DataSetRowLevelPermissionFormatVersion {
		return &v
	}).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionFormatVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionFormatVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetRowLevelPermissionFormatVersionPtrOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionFormatVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionFormatVersion)(nil)).Elem()
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) Elem() DataSetRowLevelPermissionFormatVersionOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionFormatVersion) DataSetRowLevelPermissionFormatVersion {
		if v != nil {
			return *v
		}
		var ret DataSetRowLevelPermissionFormatVersion
		return ret
	}).(DataSetRowLevelPermissionFormatVersionOutput)
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetRowLevelPermissionFormatVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetRowLevelPermissionFormatVersionInput is an input type that accepts DataSetRowLevelPermissionFormatVersionArgs and DataSetRowLevelPermissionFormatVersionOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionFormatVersionInput` via:
//
//          DataSetRowLevelPermissionFormatVersionArgs{...}
type DataSetRowLevelPermissionFormatVersionInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionFormatVersionOutput() DataSetRowLevelPermissionFormatVersionOutput
	ToDataSetRowLevelPermissionFormatVersionOutputWithContext(context.Context) DataSetRowLevelPermissionFormatVersionOutput
}

var dataSetRowLevelPermissionFormatVersionPtrType = reflect.TypeOf((**DataSetRowLevelPermissionFormatVersion)(nil)).Elem()

type DataSetRowLevelPermissionFormatVersionPtrInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput
	ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput
}

type dataSetRowLevelPermissionFormatVersionPtr string

func DataSetRowLevelPermissionFormatVersionPtr(v string) DataSetRowLevelPermissionFormatVersionPtrInput {
	return (*dataSetRowLevelPermissionFormatVersionPtr)(&v)
}

func (*dataSetRowLevelPermissionFormatVersionPtr) ElementType() reflect.Type {
	return dataSetRowLevelPermissionFormatVersionPtrType
}

func (in *dataSetRowLevelPermissionFormatVersionPtr) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return pulumi.ToOutput(in).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

func (in *dataSetRowLevelPermissionFormatVersionPtr) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

type DataSetRowLevelPermissionPolicy string

const (
	DataSetRowLevelPermissionPolicyGrantAccess = DataSetRowLevelPermissionPolicy("GRANT_ACCESS")
	DataSetRowLevelPermissionPolicyDenyAccess  = DataSetRowLevelPermissionPolicy("DENY_ACCESS")
)

func (DataSetRowLevelPermissionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionPolicy)(nil)).Elem()
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyOutput() DataSetRowLevelPermissionPolicyOutput {
	return pulumi.ToOutput(e).(DataSetRowLevelPermissionPolicyOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetRowLevelPermissionPolicyOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return e.ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return DataSetRowLevelPermissionPolicy(e).ToDataSetRowLevelPermissionPolicyOutputWithContext(ctx).ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx)
}

func (e DataSetRowLevelPermissionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetRowLevelPermissionPolicyOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionPolicy)(nil)).Elem()
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyOutput() DataSetRowLevelPermissionPolicyOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return o.ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRowLevelPermissionPolicy) *DataSetRowLevelPermissionPolicy {
		return &v
	}).(DataSetRowLevelPermissionPolicyPtrOutput)
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetRowLevelPermissionPolicyPtrOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionPolicy)(nil)).Elem()
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) Elem() DataSetRowLevelPermissionPolicyOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionPolicy) DataSetRowLevelPermissionPolicy {
		if v != nil {
			return *v
		}
		var ret DataSetRowLevelPermissionPolicy
		return ret
	}).(DataSetRowLevelPermissionPolicyOutput)
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetRowLevelPermissionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetRowLevelPermissionPolicyInput is an input type that accepts DataSetRowLevelPermissionPolicyArgs and DataSetRowLevelPermissionPolicyOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionPolicyInput` via:
//
//          DataSetRowLevelPermissionPolicyArgs{...}
type DataSetRowLevelPermissionPolicyInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionPolicyOutput() DataSetRowLevelPermissionPolicyOutput
	ToDataSetRowLevelPermissionPolicyOutputWithContext(context.Context) DataSetRowLevelPermissionPolicyOutput
}

var dataSetRowLevelPermissionPolicyPtrType = reflect.TypeOf((**DataSetRowLevelPermissionPolicy)(nil)).Elem()

type DataSetRowLevelPermissionPolicyPtrInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput
	ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(context.Context) DataSetRowLevelPermissionPolicyPtrOutput
}

type dataSetRowLevelPermissionPolicyPtr string

func DataSetRowLevelPermissionPolicyPtr(v string) DataSetRowLevelPermissionPolicyPtrInput {
	return (*dataSetRowLevelPermissionPolicyPtr)(&v)
}

func (*dataSetRowLevelPermissionPolicyPtr) ElementType() reflect.Type {
	return dataSetRowLevelPermissionPolicyPtrType
}

func (in *dataSetRowLevelPermissionPolicyPtr) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return pulumi.ToOutput(in).(DataSetRowLevelPermissionPolicyPtrOutput)
}

func (in *dataSetRowLevelPermissionPolicyPtr) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetRowLevelPermissionPolicyPtrOutput)
}

type DataSourceErrorInfoType string

const (
	DataSourceErrorInfoTypeAccessDenied              = DataSourceErrorInfoType("ACCESS_DENIED")
	DataSourceErrorInfoTypeCopySourceNotFound        = DataSourceErrorInfoType("COPY_SOURCE_NOT_FOUND")
	DataSourceErrorInfoTypeTimeout                   = DataSourceErrorInfoType("TIMEOUT")
	DataSourceErrorInfoTypeEngineVersionNotSupported = DataSourceErrorInfoType("ENGINE_VERSION_NOT_SUPPORTED")
	DataSourceErrorInfoTypeUnknownHost               = DataSourceErrorInfoType("UNKNOWN_HOST")
	DataSourceErrorInfoTypeGenericSqlFailure         = DataSourceErrorInfoType("GENERIC_SQL_FAILURE")
	DataSourceErrorInfoTypeConflict                  = DataSourceErrorInfoType("CONFLICT")
	DataSourceErrorInfoTypeUnknown                   = DataSourceErrorInfoType("UNKNOWN")
)

func (DataSourceErrorInfoType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceErrorInfoType)(nil)).Elem()
}

func (e DataSourceErrorInfoType) ToDataSourceErrorInfoTypeOutput() DataSourceErrorInfoTypeOutput {
	return pulumi.ToOutput(e).(DataSourceErrorInfoTypeOutput)
}

func (e DataSourceErrorInfoType) ToDataSourceErrorInfoTypeOutputWithContext(ctx context.Context) DataSourceErrorInfoTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceErrorInfoTypeOutput)
}

func (e DataSourceErrorInfoType) ToDataSourceErrorInfoTypePtrOutput() DataSourceErrorInfoTypePtrOutput {
	return e.ToDataSourceErrorInfoTypePtrOutputWithContext(context.Background())
}

func (e DataSourceErrorInfoType) ToDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceErrorInfoTypePtrOutput {
	return DataSourceErrorInfoType(e).ToDataSourceErrorInfoTypeOutputWithContext(ctx).ToDataSourceErrorInfoTypePtrOutputWithContext(ctx)
}

func (e DataSourceErrorInfoType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceErrorInfoType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceErrorInfoType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceErrorInfoType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceErrorInfoTypeOutput struct{ *pulumi.OutputState }

func (DataSourceErrorInfoTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceErrorInfoType)(nil)).Elem()
}

func (o DataSourceErrorInfoTypeOutput) ToDataSourceErrorInfoTypeOutput() DataSourceErrorInfoTypeOutput {
	return o
}

func (o DataSourceErrorInfoTypeOutput) ToDataSourceErrorInfoTypeOutputWithContext(ctx context.Context) DataSourceErrorInfoTypeOutput {
	return o
}

func (o DataSourceErrorInfoTypeOutput) ToDataSourceErrorInfoTypePtrOutput() DataSourceErrorInfoTypePtrOutput {
	return o.ToDataSourceErrorInfoTypePtrOutputWithContext(context.Background())
}

func (o DataSourceErrorInfoTypeOutput) ToDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceErrorInfoTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceErrorInfoType) *DataSourceErrorInfoType {
		return &v
	}).(DataSourceErrorInfoTypePtrOutput)
}

func (o DataSourceErrorInfoTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceErrorInfoTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceErrorInfoType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceErrorInfoTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceErrorInfoTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceErrorInfoType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceErrorInfoTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceErrorInfoTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceErrorInfoType)(nil)).Elem()
}

func (o DataSourceErrorInfoTypePtrOutput) ToDataSourceErrorInfoTypePtrOutput() DataSourceErrorInfoTypePtrOutput {
	return o
}

func (o DataSourceErrorInfoTypePtrOutput) ToDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceErrorInfoTypePtrOutput {
	return o
}

func (o DataSourceErrorInfoTypePtrOutput) Elem() DataSourceErrorInfoTypeOutput {
	return o.ApplyT(func(v *DataSourceErrorInfoType) DataSourceErrorInfoType {
		if v != nil {
			return *v
		}
		var ret DataSourceErrorInfoType
		return ret
	}).(DataSourceErrorInfoTypeOutput)
}

func (o DataSourceErrorInfoTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceErrorInfoTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceErrorInfoType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceErrorInfoTypeInput is an input type that accepts DataSourceErrorInfoTypeArgs and DataSourceErrorInfoTypeOutput values.
// You can construct a concrete instance of `DataSourceErrorInfoTypeInput` via:
//
//          DataSourceErrorInfoTypeArgs{...}
type DataSourceErrorInfoTypeInput interface {
	pulumi.Input

	ToDataSourceErrorInfoTypeOutput() DataSourceErrorInfoTypeOutput
	ToDataSourceErrorInfoTypeOutputWithContext(context.Context) DataSourceErrorInfoTypeOutput
}

var dataSourceErrorInfoTypePtrType = reflect.TypeOf((**DataSourceErrorInfoType)(nil)).Elem()

type DataSourceErrorInfoTypePtrInput interface {
	pulumi.Input

	ToDataSourceErrorInfoTypePtrOutput() DataSourceErrorInfoTypePtrOutput
	ToDataSourceErrorInfoTypePtrOutputWithContext(context.Context) DataSourceErrorInfoTypePtrOutput
}

type dataSourceErrorInfoTypePtr string

func DataSourceErrorInfoTypePtr(v string) DataSourceErrorInfoTypePtrInput {
	return (*dataSourceErrorInfoTypePtr)(&v)
}

func (*dataSourceErrorInfoTypePtr) ElementType() reflect.Type {
	return dataSourceErrorInfoTypePtrType
}

func (in *dataSourceErrorInfoTypePtr) ToDataSourceErrorInfoTypePtrOutput() DataSourceErrorInfoTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceErrorInfoTypePtrOutput)
}

func (in *dataSourceErrorInfoTypePtr) ToDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceErrorInfoTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceErrorInfoTypePtrOutput)
}

type DataSourceResourceStatus string

const (
	DataSourceResourceStatusCreationInProgress = DataSourceResourceStatus("CREATION_IN_PROGRESS")
	DataSourceResourceStatusCreationSuccessful = DataSourceResourceStatus("CREATION_SUCCESSFUL")
	DataSourceResourceStatusCreationFailed     = DataSourceResourceStatus("CREATION_FAILED")
	DataSourceResourceStatusUpdateInProgress   = DataSourceResourceStatus("UPDATE_IN_PROGRESS")
	DataSourceResourceStatusUpdateSuccessful   = DataSourceResourceStatus("UPDATE_SUCCESSFUL")
	DataSourceResourceStatusUpdateFailed       = DataSourceResourceStatus("UPDATE_FAILED")
	DataSourceResourceStatusDeleted            = DataSourceResourceStatus("DELETED")
)

func (DataSourceResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourceStatus)(nil)).Elem()
}

func (e DataSourceResourceStatus) ToDataSourceResourceStatusOutput() DataSourceResourceStatusOutput {
	return pulumi.ToOutput(e).(DataSourceResourceStatusOutput)
}

func (e DataSourceResourceStatus) ToDataSourceResourceStatusOutputWithContext(ctx context.Context) DataSourceResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceResourceStatusOutput)
}

func (e DataSourceResourceStatus) ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput {
	return e.ToDataSourceResourceStatusPtrOutputWithContext(context.Background())
}

func (e DataSourceResourceStatus) ToDataSourceResourceStatusPtrOutputWithContext(ctx context.Context) DataSourceResourceStatusPtrOutput {
	return DataSourceResourceStatus(e).ToDataSourceResourceStatusOutputWithContext(ctx).ToDataSourceResourceStatusPtrOutputWithContext(ctx)
}

func (e DataSourceResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceResourceStatusOutput struct{ *pulumi.OutputState }

func (DataSourceResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourceStatus)(nil)).Elem()
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusOutput() DataSourceResourceStatusOutput {
	return o
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusOutputWithContext(ctx context.Context) DataSourceResourceStatusOutput {
	return o
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput {
	return o.ToDataSourceResourceStatusPtrOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusPtrOutputWithContext(ctx context.Context) DataSourceResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceResourceStatus) *DataSourceResourceStatus {
		return &v
	}).(DataSourceResourceStatusPtrOutput)
}

func (o DataSourceResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (DataSourceResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceResourceStatus)(nil)).Elem()
}

func (o DataSourceResourceStatusPtrOutput) ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput {
	return o
}

func (o DataSourceResourceStatusPtrOutput) ToDataSourceResourceStatusPtrOutputWithContext(ctx context.Context) DataSourceResourceStatusPtrOutput {
	return o
}

func (o DataSourceResourceStatusPtrOutput) Elem() DataSourceResourceStatusOutput {
	return o.ApplyT(func(v *DataSourceResourceStatus) DataSourceResourceStatus {
		if v != nil {
			return *v
		}
		var ret DataSourceResourceStatus
		return ret
	}).(DataSourceResourceStatusOutput)
}

func (o DataSourceResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceResourceStatusInput is an input type that accepts DataSourceResourceStatusArgs and DataSourceResourceStatusOutput values.
// You can construct a concrete instance of `DataSourceResourceStatusInput` via:
//
//          DataSourceResourceStatusArgs{...}
type DataSourceResourceStatusInput interface {
	pulumi.Input

	ToDataSourceResourceStatusOutput() DataSourceResourceStatusOutput
	ToDataSourceResourceStatusOutputWithContext(context.Context) DataSourceResourceStatusOutput
}

var dataSourceResourceStatusPtrType = reflect.TypeOf((**DataSourceResourceStatus)(nil)).Elem()

type DataSourceResourceStatusPtrInput interface {
	pulumi.Input

	ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput
	ToDataSourceResourceStatusPtrOutputWithContext(context.Context) DataSourceResourceStatusPtrOutput
}

type dataSourceResourceStatusPtr string

func DataSourceResourceStatusPtr(v string) DataSourceResourceStatusPtrInput {
	return (*dataSourceResourceStatusPtr)(&v)
}

func (*dataSourceResourceStatusPtr) ElementType() reflect.Type {
	return dataSourceResourceStatusPtrType
}

func (in *dataSourceResourceStatusPtr) ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(DataSourceResourceStatusPtrOutput)
}

func (in *dataSourceResourceStatusPtr) ToDataSourceResourceStatusPtrOutputWithContext(ctx context.Context) DataSourceResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceResourceStatusPtrOutput)
}

type DataSourceType string

const (
	DataSourceTypeAdobeAnalytics      = DataSourceType("ADOBE_ANALYTICS")
	DataSourceTypeAmazonElasticsearch = DataSourceType("AMAZON_ELASTICSEARCH")
	DataSourceTypeAthena              = DataSourceType("ATHENA")
	DataSourceTypeAurora              = DataSourceType("AURORA")
	DataSourceTypeAuroraPostgresql    = DataSourceType("AURORA_POSTGRESQL")
	DataSourceTypeAwsIotAnalytics     = DataSourceType("AWS_IOT_ANALYTICS")
	DataSourceTypeGithub              = DataSourceType("GITHUB")
	DataSourceTypeJira                = DataSourceType("JIRA")
	DataSourceTypeMariadb             = DataSourceType("MARIADB")
	DataSourceTypeMysql               = DataSourceType("MYSQL")
	DataSourceTypeOracle              = DataSourceType("ORACLE")
	DataSourceTypePostgresql          = DataSourceType("POSTGRESQL")
	DataSourceTypePresto              = DataSourceType("PRESTO")
	DataSourceTypeRedshift            = DataSourceType("REDSHIFT")
	DataSourceTypeS3                  = DataSourceType("S3")
	DataSourceTypeSalesforce          = DataSourceType("SALESFORCE")
	DataSourceTypeServicenow          = DataSourceType("SERVICENOW")
	DataSourceTypeSnowflake           = DataSourceType("SNOWFLAKE")
	DataSourceTypeSpark               = DataSourceType("SPARK")
	DataSourceTypeSqlserver           = DataSourceType("SQLSERVER")
	DataSourceTypeTeradata            = DataSourceType("TERADATA")
	DataSourceTypeTwitter             = DataSourceType("TWITTER")
	DataSourceTypeTimestream          = DataSourceType("TIMESTREAM")
)

func (DataSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceType)(nil)).Elem()
}

func (e DataSourceType) ToDataSourceTypeOutput() DataSourceTypeOutput {
	return pulumi.ToOutput(e).(DataSourceTypeOutput)
}

func (e DataSourceType) ToDataSourceTypeOutputWithContext(ctx context.Context) DataSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceTypeOutput)
}

func (e DataSourceType) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return e.ToDataSourceTypePtrOutputWithContext(context.Background())
}

func (e DataSourceType) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return DataSourceType(e).ToDataSourceTypeOutputWithContext(ctx).ToDataSourceTypePtrOutputWithContext(ctx)
}

func (e DataSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceTypeOutput struct{ *pulumi.OutputState }

func (DataSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceType)(nil)).Elem()
}

func (o DataSourceTypeOutput) ToDataSourceTypeOutput() DataSourceTypeOutput {
	return o
}

func (o DataSourceTypeOutput) ToDataSourceTypeOutputWithContext(ctx context.Context) DataSourceTypeOutput {
	return o
}

func (o DataSourceTypeOutput) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return o.ToDataSourceTypePtrOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceType) *DataSourceType {
		return &v
	}).(DataSourceTypePtrOutput)
}

func (o DataSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceType)(nil)).Elem()
}

func (o DataSourceTypePtrOutput) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return o
}

func (o DataSourceTypePtrOutput) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return o
}

func (o DataSourceTypePtrOutput) Elem() DataSourceTypeOutput {
	return o.ApplyT(func(v *DataSourceType) DataSourceType {
		if v != nil {
			return *v
		}
		var ret DataSourceType
		return ret
	}).(DataSourceTypeOutput)
}

func (o DataSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceTypeInput is an input type that accepts DataSourceTypeArgs and DataSourceTypeOutput values.
// You can construct a concrete instance of `DataSourceTypeInput` via:
//
//          DataSourceTypeArgs{...}
type DataSourceTypeInput interface {
	pulumi.Input

	ToDataSourceTypeOutput() DataSourceTypeOutput
	ToDataSourceTypeOutputWithContext(context.Context) DataSourceTypeOutput
}

var dataSourceTypePtrType = reflect.TypeOf((**DataSourceType)(nil)).Elem()

type DataSourceTypePtrInput interface {
	pulumi.Input

	ToDataSourceTypePtrOutput() DataSourceTypePtrOutput
	ToDataSourceTypePtrOutputWithContext(context.Context) DataSourceTypePtrOutput
}

type dataSourceTypePtr string

func DataSourceTypePtr(v string) DataSourceTypePtrInput {
	return (*dataSourceTypePtr)(&v)
}

func (*dataSourceTypePtr) ElementType() reflect.Type {
	return dataSourceTypePtrType
}

func (in *dataSourceTypePtr) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceTypePtrOutput)
}

func (in *dataSourceTypePtr) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceTypePtrOutput)
}

type TemplateErrorType string

const (
	TemplateErrorTypeSourceNotFound  = TemplateErrorType("SOURCE_NOT_FOUND")
	TemplateErrorTypeDataSetNotFound = TemplateErrorType("DATA_SET_NOT_FOUND")
	TemplateErrorTypeInternalFailure = TemplateErrorType("INTERNAL_FAILURE")
	TemplateErrorTypeAccessDenied    = TemplateErrorType("ACCESS_DENIED")
)

func (TemplateErrorType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateErrorType)(nil)).Elem()
}

func (e TemplateErrorType) ToTemplateErrorTypeOutput() TemplateErrorTypeOutput {
	return pulumi.ToOutput(e).(TemplateErrorTypeOutput)
}

func (e TemplateErrorType) ToTemplateErrorTypeOutputWithContext(ctx context.Context) TemplateErrorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateErrorTypeOutput)
}

func (e TemplateErrorType) ToTemplateErrorTypePtrOutput() TemplateErrorTypePtrOutput {
	return e.ToTemplateErrorTypePtrOutputWithContext(context.Background())
}

func (e TemplateErrorType) ToTemplateErrorTypePtrOutputWithContext(ctx context.Context) TemplateErrorTypePtrOutput {
	return TemplateErrorType(e).ToTemplateErrorTypeOutputWithContext(ctx).ToTemplateErrorTypePtrOutputWithContext(ctx)
}

func (e TemplateErrorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateErrorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateErrorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateErrorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateErrorTypeOutput struct{ *pulumi.OutputState }

func (TemplateErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateErrorType)(nil)).Elem()
}

func (o TemplateErrorTypeOutput) ToTemplateErrorTypeOutput() TemplateErrorTypeOutput {
	return o
}

func (o TemplateErrorTypeOutput) ToTemplateErrorTypeOutputWithContext(ctx context.Context) TemplateErrorTypeOutput {
	return o
}

func (o TemplateErrorTypeOutput) ToTemplateErrorTypePtrOutput() TemplateErrorTypePtrOutput {
	return o.ToTemplateErrorTypePtrOutputWithContext(context.Background())
}

func (o TemplateErrorTypeOutput) ToTemplateErrorTypePtrOutputWithContext(ctx context.Context) TemplateErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateErrorType) *TemplateErrorType {
		return &v
	}).(TemplateErrorTypePtrOutput)
}

func (o TemplateErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateErrorTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateErrorType)(nil)).Elem()
}

func (o TemplateErrorTypePtrOutput) ToTemplateErrorTypePtrOutput() TemplateErrorTypePtrOutput {
	return o
}

func (o TemplateErrorTypePtrOutput) ToTemplateErrorTypePtrOutputWithContext(ctx context.Context) TemplateErrorTypePtrOutput {
	return o
}

func (o TemplateErrorTypePtrOutput) Elem() TemplateErrorTypeOutput {
	return o.ApplyT(func(v *TemplateErrorType) TemplateErrorType {
		if v != nil {
			return *v
		}
		var ret TemplateErrorType
		return ret
	}).(TemplateErrorTypeOutput)
}

func (o TemplateErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateErrorTypeInput is an input type that accepts TemplateErrorTypeArgs and TemplateErrorTypeOutput values.
// You can construct a concrete instance of `TemplateErrorTypeInput` via:
//
//          TemplateErrorTypeArgs{...}
type TemplateErrorTypeInput interface {
	pulumi.Input

	ToTemplateErrorTypeOutput() TemplateErrorTypeOutput
	ToTemplateErrorTypeOutputWithContext(context.Context) TemplateErrorTypeOutput
}

var templateErrorTypePtrType = reflect.TypeOf((**TemplateErrorType)(nil)).Elem()

type TemplateErrorTypePtrInput interface {
	pulumi.Input

	ToTemplateErrorTypePtrOutput() TemplateErrorTypePtrOutput
	ToTemplateErrorTypePtrOutputWithContext(context.Context) TemplateErrorTypePtrOutput
}

type templateErrorTypePtr string

func TemplateErrorTypePtr(v string) TemplateErrorTypePtrInput {
	return (*templateErrorTypePtr)(&v)
}

func (*templateErrorTypePtr) ElementType() reflect.Type {
	return templateErrorTypePtrType
}

func (in *templateErrorTypePtr) ToTemplateErrorTypePtrOutput() TemplateErrorTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateErrorTypePtrOutput)
}

func (in *templateErrorTypePtr) ToTemplateErrorTypePtrOutputWithContext(ctx context.Context) TemplateErrorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateErrorTypePtrOutput)
}

type TemplateResourceStatus string

const (
	TemplateResourceStatusCreationInProgress = TemplateResourceStatus("CREATION_IN_PROGRESS")
	TemplateResourceStatusCreationSuccessful = TemplateResourceStatus("CREATION_SUCCESSFUL")
	TemplateResourceStatusCreationFailed     = TemplateResourceStatus("CREATION_FAILED")
	TemplateResourceStatusUpdateInProgress   = TemplateResourceStatus("UPDATE_IN_PROGRESS")
	TemplateResourceStatusUpdateSuccessful   = TemplateResourceStatus("UPDATE_SUCCESSFUL")
	TemplateResourceStatusUpdateFailed       = TemplateResourceStatus("UPDATE_FAILED")
	TemplateResourceStatusDeleted            = TemplateResourceStatus("DELETED")
)

func (TemplateResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResourceStatus)(nil)).Elem()
}

func (e TemplateResourceStatus) ToTemplateResourceStatusOutput() TemplateResourceStatusOutput {
	return pulumi.ToOutput(e).(TemplateResourceStatusOutput)
}

func (e TemplateResourceStatus) ToTemplateResourceStatusOutputWithContext(ctx context.Context) TemplateResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateResourceStatusOutput)
}

func (e TemplateResourceStatus) ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput {
	return e.ToTemplateResourceStatusPtrOutputWithContext(context.Background())
}

func (e TemplateResourceStatus) ToTemplateResourceStatusPtrOutputWithContext(ctx context.Context) TemplateResourceStatusPtrOutput {
	return TemplateResourceStatus(e).ToTemplateResourceStatusOutputWithContext(ctx).ToTemplateResourceStatusPtrOutputWithContext(ctx)
}

func (e TemplateResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateResourceStatusOutput struct{ *pulumi.OutputState }

func (TemplateResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResourceStatus)(nil)).Elem()
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusOutput() TemplateResourceStatusOutput {
	return o
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusOutputWithContext(ctx context.Context) TemplateResourceStatusOutput {
	return o
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput {
	return o.ToTemplateResourceStatusPtrOutputWithContext(context.Background())
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusPtrOutputWithContext(ctx context.Context) TemplateResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateResourceStatus) *TemplateResourceStatus {
		return &v
	}).(TemplateResourceStatusPtrOutput)
}

func (o TemplateResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (TemplateResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateResourceStatus)(nil)).Elem()
}

func (o TemplateResourceStatusPtrOutput) ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput {
	return o
}

func (o TemplateResourceStatusPtrOutput) ToTemplateResourceStatusPtrOutputWithContext(ctx context.Context) TemplateResourceStatusPtrOutput {
	return o
}

func (o TemplateResourceStatusPtrOutput) Elem() TemplateResourceStatusOutput {
	return o.ApplyT(func(v *TemplateResourceStatus) TemplateResourceStatus {
		if v != nil {
			return *v
		}
		var ret TemplateResourceStatus
		return ret
	}).(TemplateResourceStatusOutput)
}

func (o TemplateResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateResourceStatusInput is an input type that accepts TemplateResourceStatusArgs and TemplateResourceStatusOutput values.
// You can construct a concrete instance of `TemplateResourceStatusInput` via:
//
//          TemplateResourceStatusArgs{...}
type TemplateResourceStatusInput interface {
	pulumi.Input

	ToTemplateResourceStatusOutput() TemplateResourceStatusOutput
	ToTemplateResourceStatusOutputWithContext(context.Context) TemplateResourceStatusOutput
}

var templateResourceStatusPtrType = reflect.TypeOf((**TemplateResourceStatus)(nil)).Elem()

type TemplateResourceStatusPtrInput interface {
	pulumi.Input

	ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput
	ToTemplateResourceStatusPtrOutputWithContext(context.Context) TemplateResourceStatusPtrOutput
}

type templateResourceStatusPtr string

func TemplateResourceStatusPtr(v string) TemplateResourceStatusPtrInput {
	return (*templateResourceStatusPtr)(&v)
}

func (*templateResourceStatusPtr) ElementType() reflect.Type {
	return templateResourceStatusPtrType
}

func (in *templateResourceStatusPtr) ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(TemplateResourceStatusPtrOutput)
}

func (in *templateResourceStatusPtr) ToTemplateResourceStatusPtrOutputWithContext(ctx context.Context) TemplateResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateResourceStatusPtrOutput)
}

type ThemeErrorType string

const (
	ThemeErrorTypeInternalFailure = ThemeErrorType("INTERNAL_FAILURE")
)

func (ThemeErrorType) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeErrorType)(nil)).Elem()
}

func (e ThemeErrorType) ToThemeErrorTypeOutput() ThemeErrorTypeOutput {
	return pulumi.ToOutput(e).(ThemeErrorTypeOutput)
}

func (e ThemeErrorType) ToThemeErrorTypeOutputWithContext(ctx context.Context) ThemeErrorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ThemeErrorTypeOutput)
}

func (e ThemeErrorType) ToThemeErrorTypePtrOutput() ThemeErrorTypePtrOutput {
	return e.ToThemeErrorTypePtrOutputWithContext(context.Background())
}

func (e ThemeErrorType) ToThemeErrorTypePtrOutputWithContext(ctx context.Context) ThemeErrorTypePtrOutput {
	return ThemeErrorType(e).ToThemeErrorTypeOutputWithContext(ctx).ToThemeErrorTypePtrOutputWithContext(ctx)
}

func (e ThemeErrorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeErrorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeErrorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ThemeErrorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ThemeErrorTypeOutput struct{ *pulumi.OutputState }

func (ThemeErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeErrorType)(nil)).Elem()
}

func (o ThemeErrorTypeOutput) ToThemeErrorTypeOutput() ThemeErrorTypeOutput {
	return o
}

func (o ThemeErrorTypeOutput) ToThemeErrorTypeOutputWithContext(ctx context.Context) ThemeErrorTypeOutput {
	return o
}

func (o ThemeErrorTypeOutput) ToThemeErrorTypePtrOutput() ThemeErrorTypePtrOutput {
	return o.ToThemeErrorTypePtrOutputWithContext(context.Background())
}

func (o ThemeErrorTypeOutput) ToThemeErrorTypePtrOutputWithContext(ctx context.Context) ThemeErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeErrorType) *ThemeErrorType {
		return &v
	}).(ThemeErrorTypePtrOutput)
}

func (o ThemeErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThemeErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThemeErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeErrorTypePtrOutput struct{ *pulumi.OutputState }

func (ThemeErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeErrorType)(nil)).Elem()
}

func (o ThemeErrorTypePtrOutput) ToThemeErrorTypePtrOutput() ThemeErrorTypePtrOutput {
	return o
}

func (o ThemeErrorTypePtrOutput) ToThemeErrorTypePtrOutputWithContext(ctx context.Context) ThemeErrorTypePtrOutput {
	return o
}

func (o ThemeErrorTypePtrOutput) Elem() ThemeErrorTypeOutput {
	return o.ApplyT(func(v *ThemeErrorType) ThemeErrorType {
		if v != nil {
			return *v
		}
		var ret ThemeErrorType
		return ret
	}).(ThemeErrorTypeOutput)
}

func (o ThemeErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ThemeErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ThemeErrorTypeInput is an input type that accepts ThemeErrorTypeArgs and ThemeErrorTypeOutput values.
// You can construct a concrete instance of `ThemeErrorTypeInput` via:
//
//          ThemeErrorTypeArgs{...}
type ThemeErrorTypeInput interface {
	pulumi.Input

	ToThemeErrorTypeOutput() ThemeErrorTypeOutput
	ToThemeErrorTypeOutputWithContext(context.Context) ThemeErrorTypeOutput
}

var themeErrorTypePtrType = reflect.TypeOf((**ThemeErrorType)(nil)).Elem()

type ThemeErrorTypePtrInput interface {
	pulumi.Input

	ToThemeErrorTypePtrOutput() ThemeErrorTypePtrOutput
	ToThemeErrorTypePtrOutputWithContext(context.Context) ThemeErrorTypePtrOutput
}

type themeErrorTypePtr string

func ThemeErrorTypePtr(v string) ThemeErrorTypePtrInput {
	return (*themeErrorTypePtr)(&v)
}

func (*themeErrorTypePtr) ElementType() reflect.Type {
	return themeErrorTypePtrType
}

func (in *themeErrorTypePtr) ToThemeErrorTypePtrOutput() ThemeErrorTypePtrOutput {
	return pulumi.ToOutput(in).(ThemeErrorTypePtrOutput)
}

func (in *themeErrorTypePtr) ToThemeErrorTypePtrOutputWithContext(ctx context.Context) ThemeErrorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ThemeErrorTypePtrOutput)
}

type ThemeResourceStatus string

const (
	ThemeResourceStatusCreationInProgress = ThemeResourceStatus("CREATION_IN_PROGRESS")
	ThemeResourceStatusCreationSuccessful = ThemeResourceStatus("CREATION_SUCCESSFUL")
	ThemeResourceStatusCreationFailed     = ThemeResourceStatus("CREATION_FAILED")
	ThemeResourceStatusUpdateInProgress   = ThemeResourceStatus("UPDATE_IN_PROGRESS")
	ThemeResourceStatusUpdateSuccessful   = ThemeResourceStatus("UPDATE_SUCCESSFUL")
	ThemeResourceStatusUpdateFailed       = ThemeResourceStatus("UPDATE_FAILED")
	ThemeResourceStatusDeleted            = ThemeResourceStatus("DELETED")
)

func (ThemeResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeResourceStatus)(nil)).Elem()
}

func (e ThemeResourceStatus) ToThemeResourceStatusOutput() ThemeResourceStatusOutput {
	return pulumi.ToOutput(e).(ThemeResourceStatusOutput)
}

func (e ThemeResourceStatus) ToThemeResourceStatusOutputWithContext(ctx context.Context) ThemeResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ThemeResourceStatusOutput)
}

func (e ThemeResourceStatus) ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput {
	return e.ToThemeResourceStatusPtrOutputWithContext(context.Background())
}

func (e ThemeResourceStatus) ToThemeResourceStatusPtrOutputWithContext(ctx context.Context) ThemeResourceStatusPtrOutput {
	return ThemeResourceStatus(e).ToThemeResourceStatusOutputWithContext(ctx).ToThemeResourceStatusPtrOutputWithContext(ctx)
}

func (e ThemeResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ThemeResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ThemeResourceStatusOutput struct{ *pulumi.OutputState }

func (ThemeResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeResourceStatus)(nil)).Elem()
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusOutput() ThemeResourceStatusOutput {
	return o
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusOutputWithContext(ctx context.Context) ThemeResourceStatusOutput {
	return o
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput {
	return o.ToThemeResourceStatusPtrOutputWithContext(context.Background())
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusPtrOutputWithContext(ctx context.Context) ThemeResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeResourceStatus) *ThemeResourceStatus {
		return &v
	}).(ThemeResourceStatusPtrOutput)
}

func (o ThemeResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThemeResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThemeResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (ThemeResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeResourceStatus)(nil)).Elem()
}

func (o ThemeResourceStatusPtrOutput) ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput {
	return o
}

func (o ThemeResourceStatusPtrOutput) ToThemeResourceStatusPtrOutputWithContext(ctx context.Context) ThemeResourceStatusPtrOutput {
	return o
}

func (o ThemeResourceStatusPtrOutput) Elem() ThemeResourceStatusOutput {
	return o.ApplyT(func(v *ThemeResourceStatus) ThemeResourceStatus {
		if v != nil {
			return *v
		}
		var ret ThemeResourceStatus
		return ret
	}).(ThemeResourceStatusOutput)
}

func (o ThemeResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ThemeResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ThemeResourceStatusInput is an input type that accepts ThemeResourceStatusArgs and ThemeResourceStatusOutput values.
// You can construct a concrete instance of `ThemeResourceStatusInput` via:
//
//          ThemeResourceStatusArgs{...}
type ThemeResourceStatusInput interface {
	pulumi.Input

	ToThemeResourceStatusOutput() ThemeResourceStatusOutput
	ToThemeResourceStatusOutputWithContext(context.Context) ThemeResourceStatusOutput
}

var themeResourceStatusPtrType = reflect.TypeOf((**ThemeResourceStatus)(nil)).Elem()

type ThemeResourceStatusPtrInput interface {
	pulumi.Input

	ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput
	ToThemeResourceStatusPtrOutputWithContext(context.Context) ThemeResourceStatusPtrOutput
}

type themeResourceStatusPtr string

func ThemeResourceStatusPtr(v string) ThemeResourceStatusPtrInput {
	return (*themeResourceStatusPtr)(&v)
}

func (*themeResourceStatusPtr) ElementType() reflect.Type {
	return themeResourceStatusPtrType
}

func (in *themeResourceStatusPtr) ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(ThemeResourceStatusPtrOutput)
}

func (in *themeResourceStatusPtr) ToThemeResourceStatusPtrOutputWithContext(ctx context.Context) ThemeResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ThemeResourceStatusPtrOutput)
}

type ThemeType string

const (
	ThemeTypeQuicksight = ThemeType("QUICKSIGHT")
	ThemeTypeCustom     = ThemeType("CUSTOM")
	ThemeTypeAll        = ThemeType("ALL")
)

func (ThemeType) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeType)(nil)).Elem()
}

func (e ThemeType) ToThemeTypeOutput() ThemeTypeOutput {
	return pulumi.ToOutput(e).(ThemeTypeOutput)
}

func (e ThemeType) ToThemeTypeOutputWithContext(ctx context.Context) ThemeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ThemeTypeOutput)
}

func (e ThemeType) ToThemeTypePtrOutput() ThemeTypePtrOutput {
	return e.ToThemeTypePtrOutputWithContext(context.Background())
}

func (e ThemeType) ToThemeTypePtrOutputWithContext(ctx context.Context) ThemeTypePtrOutput {
	return ThemeType(e).ToThemeTypeOutputWithContext(ctx).ToThemeTypePtrOutputWithContext(ctx)
}

func (e ThemeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ThemeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ThemeTypeOutput struct{ *pulumi.OutputState }

func (ThemeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeType)(nil)).Elem()
}

func (o ThemeTypeOutput) ToThemeTypeOutput() ThemeTypeOutput {
	return o
}

func (o ThemeTypeOutput) ToThemeTypeOutputWithContext(ctx context.Context) ThemeTypeOutput {
	return o
}

func (o ThemeTypeOutput) ToThemeTypePtrOutput() ThemeTypePtrOutput {
	return o.ToThemeTypePtrOutputWithContext(context.Background())
}

func (o ThemeTypeOutput) ToThemeTypePtrOutputWithContext(ctx context.Context) ThemeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeType) *ThemeType {
		return &v
	}).(ThemeTypePtrOutput)
}

func (o ThemeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThemeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThemeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeTypePtrOutput struct{ *pulumi.OutputState }

func (ThemeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeType)(nil)).Elem()
}

func (o ThemeTypePtrOutput) ToThemeTypePtrOutput() ThemeTypePtrOutput {
	return o
}

func (o ThemeTypePtrOutput) ToThemeTypePtrOutputWithContext(ctx context.Context) ThemeTypePtrOutput {
	return o
}

func (o ThemeTypePtrOutput) Elem() ThemeTypeOutput {
	return o.ApplyT(func(v *ThemeType) ThemeType {
		if v != nil {
			return *v
		}
		var ret ThemeType
		return ret
	}).(ThemeTypeOutput)
}

func (o ThemeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ThemeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ThemeTypeInput is an input type that accepts ThemeTypeArgs and ThemeTypeOutput values.
// You can construct a concrete instance of `ThemeTypeInput` via:
//
//          ThemeTypeArgs{...}
type ThemeTypeInput interface {
	pulumi.Input

	ToThemeTypeOutput() ThemeTypeOutput
	ToThemeTypeOutputWithContext(context.Context) ThemeTypeOutput
}

var themeTypePtrType = reflect.TypeOf((**ThemeType)(nil)).Elem()

type ThemeTypePtrInput interface {
	pulumi.Input

	ToThemeTypePtrOutput() ThemeTypePtrOutput
	ToThemeTypePtrOutputWithContext(context.Context) ThemeTypePtrOutput
}

type themeTypePtr string

func ThemeTypePtr(v string) ThemeTypePtrInput {
	return (*themeTypePtr)(&v)
}

func (*themeTypePtr) ElementType() reflect.Type {
	return themeTypePtrType
}

func (in *themeTypePtr) ToThemeTypePtrOutput() ThemeTypePtrOutput {
	return pulumi.ToOutput(in).(ThemeTypePtrOutput)
}

func (in *themeTypePtr) ToThemeTypePtrOutputWithContext(ctx context.Context) ThemeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ThemeTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalysisErrorTypeOutput{})
	pulumi.RegisterOutputType(AnalysisErrorTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisResourceStatusOutput{})
	pulumi.RegisterOutputType(AnalysisResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(DashboardBehaviorOutput{})
	pulumi.RegisterOutputType(DashboardBehaviorPtrOutput{})
	pulumi.RegisterOutputType(DashboardErrorTypeOutput{})
	pulumi.RegisterOutputType(DashboardErrorTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardResourceStatusOutput{})
	pulumi.RegisterOutputType(DashboardResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(DashboardUIStateOutput{})
	pulumi.RegisterOutputType(DashboardUIStatePtrOutput{})
	pulumi.RegisterOutputType(DataSetColumnDataTypeOutput{})
	pulumi.RegisterOutputType(DataSetColumnDataTypePtrOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialCountryCodeOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialCountryCodePtrOutput{})
	pulumi.RegisterOutputType(DataSetImportModeOutput{})
	pulumi.RegisterOutputType(DataSetImportModePtrOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionFormatVersionOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionFormatVersionPtrOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionPolicyOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionPolicyPtrOutput{})
	pulumi.RegisterOutputType(DataSourceErrorInfoTypeOutput{})
	pulumi.RegisterOutputType(DataSourceErrorInfoTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceResourceStatusOutput{})
	pulumi.RegisterOutputType(DataSourceResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(DataSourceTypeOutput{})
	pulumi.RegisterOutputType(DataSourceTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateErrorTypeOutput{})
	pulumi.RegisterOutputType(TemplateErrorTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateResourceStatusOutput{})
	pulumi.RegisterOutputType(TemplateResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(ThemeErrorTypeOutput{})
	pulumi.RegisterOutputType(ThemeErrorTypePtrOutput{})
	pulumi.RegisterOutputType(ThemeResourceStatusOutput{})
	pulumi.RegisterOutputType(ThemeResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(ThemeTypeOutput{})
	pulumi.RegisterOutputType(ThemeTypePtrOutput{})
}
