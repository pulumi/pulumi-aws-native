// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AnalysisAnchorOption string

const (
	AnalysisAnchorOptionNow = AnalysisAnchorOption("NOW")
)

func (AnalysisAnchorOption) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnchorOption)(nil)).Elem()
}

func (e AnalysisAnchorOption) ToAnalysisAnchorOptionOutput() AnalysisAnchorOptionOutput {
	return pulumi.ToOutput(e).(AnalysisAnchorOptionOutput)
}

func (e AnalysisAnchorOption) ToAnalysisAnchorOptionOutputWithContext(ctx context.Context) AnalysisAnchorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisAnchorOptionOutput)
}

func (e AnalysisAnchorOption) ToAnalysisAnchorOptionPtrOutput() AnalysisAnchorOptionPtrOutput {
	return e.ToAnalysisAnchorOptionPtrOutputWithContext(context.Background())
}

func (e AnalysisAnchorOption) ToAnalysisAnchorOptionPtrOutputWithContext(ctx context.Context) AnalysisAnchorOptionPtrOutput {
	return AnalysisAnchorOption(e).ToAnalysisAnchorOptionOutputWithContext(ctx).ToAnalysisAnchorOptionPtrOutputWithContext(ctx)
}

func (e AnalysisAnchorOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisAnchorOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisAnchorOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisAnchorOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisAnchorOptionOutput struct{ *pulumi.OutputState }

func (AnalysisAnchorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnchorOption)(nil)).Elem()
}

func (o AnalysisAnchorOptionOutput) ToAnalysisAnchorOptionOutput() AnalysisAnchorOptionOutput {
	return o
}

func (o AnalysisAnchorOptionOutput) ToAnalysisAnchorOptionOutputWithContext(ctx context.Context) AnalysisAnchorOptionOutput {
	return o
}

func (o AnalysisAnchorOptionOutput) ToAnalysisAnchorOptionPtrOutput() AnalysisAnchorOptionPtrOutput {
	return o.ToAnalysisAnchorOptionPtrOutputWithContext(context.Background())
}

func (o AnalysisAnchorOptionOutput) ToAnalysisAnchorOptionPtrOutputWithContext(ctx context.Context) AnalysisAnchorOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAnchorOption) *AnalysisAnchorOption {
		return &v
	}).(AnalysisAnchorOptionPtrOutput)
}

func (o AnalysisAnchorOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisAnchorOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisAnchorOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisAnchorOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisAnchorOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisAnchorOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisAnchorOptionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisAnchorOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAnchorOption)(nil)).Elem()
}

func (o AnalysisAnchorOptionPtrOutput) ToAnalysisAnchorOptionPtrOutput() AnalysisAnchorOptionPtrOutput {
	return o
}

func (o AnalysisAnchorOptionPtrOutput) ToAnalysisAnchorOptionPtrOutputWithContext(ctx context.Context) AnalysisAnchorOptionPtrOutput {
	return o
}

func (o AnalysisAnchorOptionPtrOutput) Elem() AnalysisAnchorOptionOutput {
	return o.ApplyT(func(v *AnalysisAnchorOption) AnalysisAnchorOption {
		if v != nil {
			return *v
		}
		var ret AnalysisAnchorOption
		return ret
	}).(AnalysisAnchorOptionOutput)
}

func (o AnalysisAnchorOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisAnchorOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisAnchorOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisAnchorOptionInput is an input type that accepts values of the AnalysisAnchorOption enum
// A concrete instance of `AnalysisAnchorOptionInput` can be one of the following:
//
//	AnalysisAnchorOptionNow
type AnalysisAnchorOptionInput interface {
	pulumi.Input

	ToAnalysisAnchorOptionOutput() AnalysisAnchorOptionOutput
	ToAnalysisAnchorOptionOutputWithContext(context.Context) AnalysisAnchorOptionOutput
}

var analysisAnchorOptionPtrType = reflect.TypeOf((**AnalysisAnchorOption)(nil)).Elem()

type AnalysisAnchorOptionPtrInput interface {
	pulumi.Input

	ToAnalysisAnchorOptionPtrOutput() AnalysisAnchorOptionPtrOutput
	ToAnalysisAnchorOptionPtrOutputWithContext(context.Context) AnalysisAnchorOptionPtrOutput
}

type analysisAnchorOptionPtr string

func AnalysisAnchorOptionPtr(v string) AnalysisAnchorOptionPtrInput {
	return (*analysisAnchorOptionPtr)(&v)
}

func (*analysisAnchorOptionPtr) ElementType() reflect.Type {
	return analysisAnchorOptionPtrType
}

func (in *analysisAnchorOptionPtr) ToAnalysisAnchorOptionPtrOutput() AnalysisAnchorOptionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisAnchorOptionPtrOutput)
}

func (in *analysisAnchorOptionPtr) ToAnalysisAnchorOptionPtrOutputWithContext(ctx context.Context) AnalysisAnchorOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisAnchorOptionPtrOutput)
}

type AnalysisArcThickness string

const (
	AnalysisArcThicknessSmall  = AnalysisArcThickness("SMALL")
	AnalysisArcThicknessMedium = AnalysisArcThickness("MEDIUM")
	AnalysisArcThicknessLarge  = AnalysisArcThickness("LARGE")
	AnalysisArcThicknessWhole  = AnalysisArcThickness("WHOLE")
)

func (AnalysisArcThickness) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcThickness)(nil)).Elem()
}

func (e AnalysisArcThickness) ToAnalysisArcThicknessOutput() AnalysisArcThicknessOutput {
	return pulumi.ToOutput(e).(AnalysisArcThicknessOutput)
}

func (e AnalysisArcThickness) ToAnalysisArcThicknessOutputWithContext(ctx context.Context) AnalysisArcThicknessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisArcThicknessOutput)
}

func (e AnalysisArcThickness) ToAnalysisArcThicknessPtrOutput() AnalysisArcThicknessPtrOutput {
	return e.ToAnalysisArcThicknessPtrOutputWithContext(context.Background())
}

func (e AnalysisArcThickness) ToAnalysisArcThicknessPtrOutputWithContext(ctx context.Context) AnalysisArcThicknessPtrOutput {
	return AnalysisArcThickness(e).ToAnalysisArcThicknessOutputWithContext(ctx).ToAnalysisArcThicknessPtrOutputWithContext(ctx)
}

func (e AnalysisArcThickness) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisArcThickness) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisArcThickness) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisArcThickness) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisArcThicknessOutput struct{ *pulumi.OutputState }

func (AnalysisArcThicknessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcThickness)(nil)).Elem()
}

func (o AnalysisArcThicknessOutput) ToAnalysisArcThicknessOutput() AnalysisArcThicknessOutput {
	return o
}

func (o AnalysisArcThicknessOutput) ToAnalysisArcThicknessOutputWithContext(ctx context.Context) AnalysisArcThicknessOutput {
	return o
}

func (o AnalysisArcThicknessOutput) ToAnalysisArcThicknessPtrOutput() AnalysisArcThicknessPtrOutput {
	return o.ToAnalysisArcThicknessPtrOutputWithContext(context.Background())
}

func (o AnalysisArcThicknessOutput) ToAnalysisArcThicknessPtrOutputWithContext(ctx context.Context) AnalysisArcThicknessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisArcThickness) *AnalysisArcThickness {
		return &v
	}).(AnalysisArcThicknessPtrOutput)
}

func (o AnalysisArcThicknessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisArcThicknessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisArcThickness) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisArcThicknessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisArcThicknessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisArcThickness) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisArcThicknessPtrOutput struct{ *pulumi.OutputState }

func (AnalysisArcThicknessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisArcThickness)(nil)).Elem()
}

func (o AnalysisArcThicknessPtrOutput) ToAnalysisArcThicknessPtrOutput() AnalysisArcThicknessPtrOutput {
	return o
}

func (o AnalysisArcThicknessPtrOutput) ToAnalysisArcThicknessPtrOutputWithContext(ctx context.Context) AnalysisArcThicknessPtrOutput {
	return o
}

func (o AnalysisArcThicknessPtrOutput) Elem() AnalysisArcThicknessOutput {
	return o.ApplyT(func(v *AnalysisArcThickness) AnalysisArcThickness {
		if v != nil {
			return *v
		}
		var ret AnalysisArcThickness
		return ret
	}).(AnalysisArcThicknessOutput)
}

func (o AnalysisArcThicknessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisArcThicknessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisArcThickness) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisArcThicknessInput is an input type that accepts values of the AnalysisArcThickness enum
// A concrete instance of `AnalysisArcThicknessInput` can be one of the following:
//
//	AnalysisArcThicknessSmall
//	AnalysisArcThicknessMedium
//	AnalysisArcThicknessLarge
//	AnalysisArcThicknessWhole
type AnalysisArcThicknessInput interface {
	pulumi.Input

	ToAnalysisArcThicknessOutput() AnalysisArcThicknessOutput
	ToAnalysisArcThicknessOutputWithContext(context.Context) AnalysisArcThicknessOutput
}

var analysisArcThicknessPtrType = reflect.TypeOf((**AnalysisArcThickness)(nil)).Elem()

type AnalysisArcThicknessPtrInput interface {
	pulumi.Input

	ToAnalysisArcThicknessPtrOutput() AnalysisArcThicknessPtrOutput
	ToAnalysisArcThicknessPtrOutputWithContext(context.Context) AnalysisArcThicknessPtrOutput
}

type analysisArcThicknessPtr string

func AnalysisArcThicknessPtr(v string) AnalysisArcThicknessPtrInput {
	return (*analysisArcThicknessPtr)(&v)
}

func (*analysisArcThicknessPtr) ElementType() reflect.Type {
	return analysisArcThicknessPtrType
}

func (in *analysisArcThicknessPtr) ToAnalysisArcThicknessPtrOutput() AnalysisArcThicknessPtrOutput {
	return pulumi.ToOutput(in).(AnalysisArcThicknessPtrOutput)
}

func (in *analysisArcThicknessPtr) ToAnalysisArcThicknessPtrOutputWithContext(ctx context.Context) AnalysisArcThicknessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisArcThicknessPtrOutput)
}

type AnalysisArcThicknessOptions string

const (
	AnalysisArcThicknessOptionsSmall  = AnalysisArcThicknessOptions("SMALL")
	AnalysisArcThicknessOptionsMedium = AnalysisArcThicknessOptions("MEDIUM")
	AnalysisArcThicknessOptionsLarge  = AnalysisArcThicknessOptions("LARGE")
)

func (AnalysisArcThicknessOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcThicknessOptions)(nil)).Elem()
}

func (e AnalysisArcThicknessOptions) ToAnalysisArcThicknessOptionsOutput() AnalysisArcThicknessOptionsOutput {
	return pulumi.ToOutput(e).(AnalysisArcThicknessOptionsOutput)
}

func (e AnalysisArcThicknessOptions) ToAnalysisArcThicknessOptionsOutputWithContext(ctx context.Context) AnalysisArcThicknessOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisArcThicknessOptionsOutput)
}

func (e AnalysisArcThicknessOptions) ToAnalysisArcThicknessOptionsPtrOutput() AnalysisArcThicknessOptionsPtrOutput {
	return e.ToAnalysisArcThicknessOptionsPtrOutputWithContext(context.Background())
}

func (e AnalysisArcThicknessOptions) ToAnalysisArcThicknessOptionsPtrOutputWithContext(ctx context.Context) AnalysisArcThicknessOptionsPtrOutput {
	return AnalysisArcThicknessOptions(e).ToAnalysisArcThicknessOptionsOutputWithContext(ctx).ToAnalysisArcThicknessOptionsPtrOutputWithContext(ctx)
}

func (e AnalysisArcThicknessOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisArcThicknessOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisArcThicknessOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisArcThicknessOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisArcThicknessOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisArcThicknessOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisArcThicknessOptions)(nil)).Elem()
}

func (o AnalysisArcThicknessOptionsOutput) ToAnalysisArcThicknessOptionsOutput() AnalysisArcThicknessOptionsOutput {
	return o
}

func (o AnalysisArcThicknessOptionsOutput) ToAnalysisArcThicknessOptionsOutputWithContext(ctx context.Context) AnalysisArcThicknessOptionsOutput {
	return o
}

func (o AnalysisArcThicknessOptionsOutput) ToAnalysisArcThicknessOptionsPtrOutput() AnalysisArcThicknessOptionsPtrOutput {
	return o.ToAnalysisArcThicknessOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisArcThicknessOptionsOutput) ToAnalysisArcThicknessOptionsPtrOutputWithContext(ctx context.Context) AnalysisArcThicknessOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisArcThicknessOptions) *AnalysisArcThicknessOptions {
		return &v
	}).(AnalysisArcThicknessOptionsPtrOutput)
}

func (o AnalysisArcThicknessOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisArcThicknessOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisArcThicknessOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisArcThicknessOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisArcThicknessOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisArcThicknessOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisArcThicknessOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisArcThicknessOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisArcThicknessOptions)(nil)).Elem()
}

func (o AnalysisArcThicknessOptionsPtrOutput) ToAnalysisArcThicknessOptionsPtrOutput() AnalysisArcThicknessOptionsPtrOutput {
	return o
}

func (o AnalysisArcThicknessOptionsPtrOutput) ToAnalysisArcThicknessOptionsPtrOutputWithContext(ctx context.Context) AnalysisArcThicknessOptionsPtrOutput {
	return o
}

func (o AnalysisArcThicknessOptionsPtrOutput) Elem() AnalysisArcThicknessOptionsOutput {
	return o.ApplyT(func(v *AnalysisArcThicknessOptions) AnalysisArcThicknessOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisArcThicknessOptions
		return ret
	}).(AnalysisArcThicknessOptionsOutput)
}

func (o AnalysisArcThicknessOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisArcThicknessOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisArcThicknessOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisArcThicknessOptionsInput is an input type that accepts values of the AnalysisArcThicknessOptions enum
// A concrete instance of `AnalysisArcThicknessOptionsInput` can be one of the following:
//
//	AnalysisArcThicknessOptionsSmall
//	AnalysisArcThicknessOptionsMedium
//	AnalysisArcThicknessOptionsLarge
type AnalysisArcThicknessOptionsInput interface {
	pulumi.Input

	ToAnalysisArcThicknessOptionsOutput() AnalysisArcThicknessOptionsOutput
	ToAnalysisArcThicknessOptionsOutputWithContext(context.Context) AnalysisArcThicknessOptionsOutput
}

var analysisArcThicknessOptionsPtrType = reflect.TypeOf((**AnalysisArcThicknessOptions)(nil)).Elem()

type AnalysisArcThicknessOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisArcThicknessOptionsPtrOutput() AnalysisArcThicknessOptionsPtrOutput
	ToAnalysisArcThicknessOptionsPtrOutputWithContext(context.Context) AnalysisArcThicknessOptionsPtrOutput
}

type analysisArcThicknessOptionsPtr string

func AnalysisArcThicknessOptionsPtr(v string) AnalysisArcThicknessOptionsPtrInput {
	return (*analysisArcThicknessOptionsPtr)(&v)
}

func (*analysisArcThicknessOptionsPtr) ElementType() reflect.Type {
	return analysisArcThicknessOptionsPtrType
}

func (in *analysisArcThicknessOptionsPtr) ToAnalysisArcThicknessOptionsPtrOutput() AnalysisArcThicknessOptionsPtrOutput {
	return pulumi.ToOutput(in).(AnalysisArcThicknessOptionsPtrOutput)
}

func (in *analysisArcThicknessOptionsPtr) ToAnalysisArcThicknessOptionsPtrOutputWithContext(ctx context.Context) AnalysisArcThicknessOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisArcThicknessOptionsPtrOutput)
}

type AnalysisAxisBinding string

const (
	AnalysisAxisBindingPrimaryYaxis   = AnalysisAxisBinding("PRIMARY_YAXIS")
	AnalysisAxisBindingSecondaryYaxis = AnalysisAxisBinding("SECONDARY_YAXIS")
)

func (AnalysisAxisBinding) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisBinding)(nil)).Elem()
}

func (e AnalysisAxisBinding) ToAnalysisAxisBindingOutput() AnalysisAxisBindingOutput {
	return pulumi.ToOutput(e).(AnalysisAxisBindingOutput)
}

func (e AnalysisAxisBinding) ToAnalysisAxisBindingOutputWithContext(ctx context.Context) AnalysisAxisBindingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisAxisBindingOutput)
}

func (e AnalysisAxisBinding) ToAnalysisAxisBindingPtrOutput() AnalysisAxisBindingPtrOutput {
	return e.ToAnalysisAxisBindingPtrOutputWithContext(context.Background())
}

func (e AnalysisAxisBinding) ToAnalysisAxisBindingPtrOutputWithContext(ctx context.Context) AnalysisAxisBindingPtrOutput {
	return AnalysisAxisBinding(e).ToAnalysisAxisBindingOutputWithContext(ctx).ToAnalysisAxisBindingPtrOutputWithContext(ctx)
}

func (e AnalysisAxisBinding) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisAxisBinding) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisAxisBinding) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisAxisBinding) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisAxisBindingOutput struct{ *pulumi.OutputState }

func (AnalysisAxisBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAxisBinding)(nil)).Elem()
}

func (o AnalysisAxisBindingOutput) ToAnalysisAxisBindingOutput() AnalysisAxisBindingOutput {
	return o
}

func (o AnalysisAxisBindingOutput) ToAnalysisAxisBindingOutputWithContext(ctx context.Context) AnalysisAxisBindingOutput {
	return o
}

func (o AnalysisAxisBindingOutput) ToAnalysisAxisBindingPtrOutput() AnalysisAxisBindingPtrOutput {
	return o.ToAnalysisAxisBindingPtrOutputWithContext(context.Background())
}

func (o AnalysisAxisBindingOutput) ToAnalysisAxisBindingPtrOutputWithContext(ctx context.Context) AnalysisAxisBindingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAxisBinding) *AnalysisAxisBinding {
		return &v
	}).(AnalysisAxisBindingPtrOutput)
}

func (o AnalysisAxisBindingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisAxisBindingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisAxisBinding) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisAxisBindingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisAxisBindingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisAxisBinding) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisAxisBindingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisAxisBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAxisBinding)(nil)).Elem()
}

func (o AnalysisAxisBindingPtrOutput) ToAnalysisAxisBindingPtrOutput() AnalysisAxisBindingPtrOutput {
	return o
}

func (o AnalysisAxisBindingPtrOutput) ToAnalysisAxisBindingPtrOutputWithContext(ctx context.Context) AnalysisAxisBindingPtrOutput {
	return o
}

func (o AnalysisAxisBindingPtrOutput) Elem() AnalysisAxisBindingOutput {
	return o.ApplyT(func(v *AnalysisAxisBinding) AnalysisAxisBinding {
		if v != nil {
			return *v
		}
		var ret AnalysisAxisBinding
		return ret
	}).(AnalysisAxisBindingOutput)
}

func (o AnalysisAxisBindingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisAxisBindingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisAxisBinding) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisAxisBindingInput is an input type that accepts values of the AnalysisAxisBinding enum
// A concrete instance of `AnalysisAxisBindingInput` can be one of the following:
//
//	AnalysisAxisBindingPrimaryYaxis
//	AnalysisAxisBindingSecondaryYaxis
type AnalysisAxisBindingInput interface {
	pulumi.Input

	ToAnalysisAxisBindingOutput() AnalysisAxisBindingOutput
	ToAnalysisAxisBindingOutputWithContext(context.Context) AnalysisAxisBindingOutput
}

var analysisAxisBindingPtrType = reflect.TypeOf((**AnalysisAxisBinding)(nil)).Elem()

type AnalysisAxisBindingPtrInput interface {
	pulumi.Input

	ToAnalysisAxisBindingPtrOutput() AnalysisAxisBindingPtrOutput
	ToAnalysisAxisBindingPtrOutputWithContext(context.Context) AnalysisAxisBindingPtrOutput
}

type analysisAxisBindingPtr string

func AnalysisAxisBindingPtr(v string) AnalysisAxisBindingPtrInput {
	return (*analysisAxisBindingPtr)(&v)
}

func (*analysisAxisBindingPtr) ElementType() reflect.Type {
	return analysisAxisBindingPtrType
}

func (in *analysisAxisBindingPtr) ToAnalysisAxisBindingPtrOutput() AnalysisAxisBindingPtrOutput {
	return pulumi.ToOutput(in).(AnalysisAxisBindingPtrOutput)
}

func (in *analysisAxisBindingPtr) ToAnalysisAxisBindingPtrOutputWithContext(ctx context.Context) AnalysisAxisBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisAxisBindingPtrOutput)
}

type AnalysisBarChartOrientation string

const (
	AnalysisBarChartOrientationHorizontal = AnalysisBarChartOrientation("HORIZONTAL")
	AnalysisBarChartOrientationVertical   = AnalysisBarChartOrientation("VERTICAL")
)

func (AnalysisBarChartOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartOrientation)(nil)).Elem()
}

func (e AnalysisBarChartOrientation) ToAnalysisBarChartOrientationOutput() AnalysisBarChartOrientationOutput {
	return pulumi.ToOutput(e).(AnalysisBarChartOrientationOutput)
}

func (e AnalysisBarChartOrientation) ToAnalysisBarChartOrientationOutputWithContext(ctx context.Context) AnalysisBarChartOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisBarChartOrientationOutput)
}

func (e AnalysisBarChartOrientation) ToAnalysisBarChartOrientationPtrOutput() AnalysisBarChartOrientationPtrOutput {
	return e.ToAnalysisBarChartOrientationPtrOutputWithContext(context.Background())
}

func (e AnalysisBarChartOrientation) ToAnalysisBarChartOrientationPtrOutputWithContext(ctx context.Context) AnalysisBarChartOrientationPtrOutput {
	return AnalysisBarChartOrientation(e).ToAnalysisBarChartOrientationOutputWithContext(ctx).ToAnalysisBarChartOrientationPtrOutputWithContext(ctx)
}

func (e AnalysisBarChartOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisBarChartOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisBarChartOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisBarChartOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisBarChartOrientationOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarChartOrientation)(nil)).Elem()
}

func (o AnalysisBarChartOrientationOutput) ToAnalysisBarChartOrientationOutput() AnalysisBarChartOrientationOutput {
	return o
}

func (o AnalysisBarChartOrientationOutput) ToAnalysisBarChartOrientationOutputWithContext(ctx context.Context) AnalysisBarChartOrientationOutput {
	return o
}

func (o AnalysisBarChartOrientationOutput) ToAnalysisBarChartOrientationPtrOutput() AnalysisBarChartOrientationPtrOutput {
	return o.ToAnalysisBarChartOrientationPtrOutputWithContext(context.Background())
}

func (o AnalysisBarChartOrientationOutput) ToAnalysisBarChartOrientationPtrOutputWithContext(ctx context.Context) AnalysisBarChartOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBarChartOrientation) *AnalysisBarChartOrientation {
		return &v
	}).(AnalysisBarChartOrientationPtrOutput)
}

func (o AnalysisBarChartOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisBarChartOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisBarChartOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisBarChartOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisBarChartOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisBarChartOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisBarChartOrientationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBarChartOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarChartOrientation)(nil)).Elem()
}

func (o AnalysisBarChartOrientationPtrOutput) ToAnalysisBarChartOrientationPtrOutput() AnalysisBarChartOrientationPtrOutput {
	return o
}

func (o AnalysisBarChartOrientationPtrOutput) ToAnalysisBarChartOrientationPtrOutputWithContext(ctx context.Context) AnalysisBarChartOrientationPtrOutput {
	return o
}

func (o AnalysisBarChartOrientationPtrOutput) Elem() AnalysisBarChartOrientationOutput {
	return o.ApplyT(func(v *AnalysisBarChartOrientation) AnalysisBarChartOrientation {
		if v != nil {
			return *v
		}
		var ret AnalysisBarChartOrientation
		return ret
	}).(AnalysisBarChartOrientationOutput)
}

func (o AnalysisBarChartOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisBarChartOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisBarChartOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisBarChartOrientationInput is an input type that accepts values of the AnalysisBarChartOrientation enum
// A concrete instance of `AnalysisBarChartOrientationInput` can be one of the following:
//
//	AnalysisBarChartOrientationHorizontal
//	AnalysisBarChartOrientationVertical
type AnalysisBarChartOrientationInput interface {
	pulumi.Input

	ToAnalysisBarChartOrientationOutput() AnalysisBarChartOrientationOutput
	ToAnalysisBarChartOrientationOutputWithContext(context.Context) AnalysisBarChartOrientationOutput
}

var analysisBarChartOrientationPtrType = reflect.TypeOf((**AnalysisBarChartOrientation)(nil)).Elem()

type AnalysisBarChartOrientationPtrInput interface {
	pulumi.Input

	ToAnalysisBarChartOrientationPtrOutput() AnalysisBarChartOrientationPtrOutput
	ToAnalysisBarChartOrientationPtrOutputWithContext(context.Context) AnalysisBarChartOrientationPtrOutput
}

type analysisBarChartOrientationPtr string

func AnalysisBarChartOrientationPtr(v string) AnalysisBarChartOrientationPtrInput {
	return (*analysisBarChartOrientationPtr)(&v)
}

func (*analysisBarChartOrientationPtr) ElementType() reflect.Type {
	return analysisBarChartOrientationPtrType
}

func (in *analysisBarChartOrientationPtr) ToAnalysisBarChartOrientationPtrOutput() AnalysisBarChartOrientationPtrOutput {
	return pulumi.ToOutput(in).(AnalysisBarChartOrientationPtrOutput)
}

func (in *analysisBarChartOrientationPtr) ToAnalysisBarChartOrientationPtrOutputWithContext(ctx context.Context) AnalysisBarChartOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisBarChartOrientationPtrOutput)
}

type AnalysisBarsArrangement string

const (
	AnalysisBarsArrangementClustered      = AnalysisBarsArrangement("CLUSTERED")
	AnalysisBarsArrangementStacked        = AnalysisBarsArrangement("STACKED")
	AnalysisBarsArrangementStackedPercent = AnalysisBarsArrangement("STACKED_PERCENT")
)

func (AnalysisBarsArrangement) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarsArrangement)(nil)).Elem()
}

func (e AnalysisBarsArrangement) ToAnalysisBarsArrangementOutput() AnalysisBarsArrangementOutput {
	return pulumi.ToOutput(e).(AnalysisBarsArrangementOutput)
}

func (e AnalysisBarsArrangement) ToAnalysisBarsArrangementOutputWithContext(ctx context.Context) AnalysisBarsArrangementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisBarsArrangementOutput)
}

func (e AnalysisBarsArrangement) ToAnalysisBarsArrangementPtrOutput() AnalysisBarsArrangementPtrOutput {
	return e.ToAnalysisBarsArrangementPtrOutputWithContext(context.Background())
}

func (e AnalysisBarsArrangement) ToAnalysisBarsArrangementPtrOutputWithContext(ctx context.Context) AnalysisBarsArrangementPtrOutput {
	return AnalysisBarsArrangement(e).ToAnalysisBarsArrangementOutputWithContext(ctx).ToAnalysisBarsArrangementPtrOutputWithContext(ctx)
}

func (e AnalysisBarsArrangement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisBarsArrangement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisBarsArrangement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisBarsArrangement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisBarsArrangementOutput struct{ *pulumi.OutputState }

func (AnalysisBarsArrangementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBarsArrangement)(nil)).Elem()
}

func (o AnalysisBarsArrangementOutput) ToAnalysisBarsArrangementOutput() AnalysisBarsArrangementOutput {
	return o
}

func (o AnalysisBarsArrangementOutput) ToAnalysisBarsArrangementOutputWithContext(ctx context.Context) AnalysisBarsArrangementOutput {
	return o
}

func (o AnalysisBarsArrangementOutput) ToAnalysisBarsArrangementPtrOutput() AnalysisBarsArrangementPtrOutput {
	return o.ToAnalysisBarsArrangementPtrOutputWithContext(context.Background())
}

func (o AnalysisBarsArrangementOutput) ToAnalysisBarsArrangementPtrOutputWithContext(ctx context.Context) AnalysisBarsArrangementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBarsArrangement) *AnalysisBarsArrangement {
		return &v
	}).(AnalysisBarsArrangementPtrOutput)
}

func (o AnalysisBarsArrangementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisBarsArrangementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisBarsArrangement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisBarsArrangementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisBarsArrangementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisBarsArrangement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisBarsArrangementPtrOutput struct{ *pulumi.OutputState }

func (AnalysisBarsArrangementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBarsArrangement)(nil)).Elem()
}

func (o AnalysisBarsArrangementPtrOutput) ToAnalysisBarsArrangementPtrOutput() AnalysisBarsArrangementPtrOutput {
	return o
}

func (o AnalysisBarsArrangementPtrOutput) ToAnalysisBarsArrangementPtrOutputWithContext(ctx context.Context) AnalysisBarsArrangementPtrOutput {
	return o
}

func (o AnalysisBarsArrangementPtrOutput) Elem() AnalysisBarsArrangementOutput {
	return o.ApplyT(func(v *AnalysisBarsArrangement) AnalysisBarsArrangement {
		if v != nil {
			return *v
		}
		var ret AnalysisBarsArrangement
		return ret
	}).(AnalysisBarsArrangementOutput)
}

func (o AnalysisBarsArrangementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisBarsArrangementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisBarsArrangement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisBarsArrangementInput is an input type that accepts values of the AnalysisBarsArrangement enum
// A concrete instance of `AnalysisBarsArrangementInput` can be one of the following:
//
//	AnalysisBarsArrangementClustered
//	AnalysisBarsArrangementStacked
//	AnalysisBarsArrangementStackedPercent
type AnalysisBarsArrangementInput interface {
	pulumi.Input

	ToAnalysisBarsArrangementOutput() AnalysisBarsArrangementOutput
	ToAnalysisBarsArrangementOutputWithContext(context.Context) AnalysisBarsArrangementOutput
}

var analysisBarsArrangementPtrType = reflect.TypeOf((**AnalysisBarsArrangement)(nil)).Elem()

type AnalysisBarsArrangementPtrInput interface {
	pulumi.Input

	ToAnalysisBarsArrangementPtrOutput() AnalysisBarsArrangementPtrOutput
	ToAnalysisBarsArrangementPtrOutputWithContext(context.Context) AnalysisBarsArrangementPtrOutput
}

type analysisBarsArrangementPtr string

func AnalysisBarsArrangementPtr(v string) AnalysisBarsArrangementPtrInput {
	return (*analysisBarsArrangementPtr)(&v)
}

func (*analysisBarsArrangementPtr) ElementType() reflect.Type {
	return analysisBarsArrangementPtrType
}

func (in *analysisBarsArrangementPtr) ToAnalysisBarsArrangementPtrOutput() AnalysisBarsArrangementPtrOutput {
	return pulumi.ToOutput(in).(AnalysisBarsArrangementPtrOutput)
}

func (in *analysisBarsArrangementPtr) ToAnalysisBarsArrangementPtrOutputWithContext(ctx context.Context) AnalysisBarsArrangementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisBarsArrangementPtrOutput)
}

type AnalysisBaseMapStyleType string

const (
	AnalysisBaseMapStyleTypeLightGray = AnalysisBaseMapStyleType("LIGHT_GRAY")
	AnalysisBaseMapStyleTypeDarkGray  = AnalysisBaseMapStyleType("DARK_GRAY")
	AnalysisBaseMapStyleTypeStreet    = AnalysisBaseMapStyleType("STREET")
	AnalysisBaseMapStyleTypeImagery   = AnalysisBaseMapStyleType("IMAGERY")
)

func (AnalysisBaseMapStyleType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBaseMapStyleType)(nil)).Elem()
}

func (e AnalysisBaseMapStyleType) ToAnalysisBaseMapStyleTypeOutput() AnalysisBaseMapStyleTypeOutput {
	return pulumi.ToOutput(e).(AnalysisBaseMapStyleTypeOutput)
}

func (e AnalysisBaseMapStyleType) ToAnalysisBaseMapStyleTypeOutputWithContext(ctx context.Context) AnalysisBaseMapStyleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisBaseMapStyleTypeOutput)
}

func (e AnalysisBaseMapStyleType) ToAnalysisBaseMapStyleTypePtrOutput() AnalysisBaseMapStyleTypePtrOutput {
	return e.ToAnalysisBaseMapStyleTypePtrOutputWithContext(context.Background())
}

func (e AnalysisBaseMapStyleType) ToAnalysisBaseMapStyleTypePtrOutputWithContext(ctx context.Context) AnalysisBaseMapStyleTypePtrOutput {
	return AnalysisBaseMapStyleType(e).ToAnalysisBaseMapStyleTypeOutputWithContext(ctx).ToAnalysisBaseMapStyleTypePtrOutputWithContext(ctx)
}

func (e AnalysisBaseMapStyleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisBaseMapStyleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisBaseMapStyleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisBaseMapStyleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisBaseMapStyleTypeOutput struct{ *pulumi.OutputState }

func (AnalysisBaseMapStyleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBaseMapStyleType)(nil)).Elem()
}

func (o AnalysisBaseMapStyleTypeOutput) ToAnalysisBaseMapStyleTypeOutput() AnalysisBaseMapStyleTypeOutput {
	return o
}

func (o AnalysisBaseMapStyleTypeOutput) ToAnalysisBaseMapStyleTypeOutputWithContext(ctx context.Context) AnalysisBaseMapStyleTypeOutput {
	return o
}

func (o AnalysisBaseMapStyleTypeOutput) ToAnalysisBaseMapStyleTypePtrOutput() AnalysisBaseMapStyleTypePtrOutput {
	return o.ToAnalysisBaseMapStyleTypePtrOutputWithContext(context.Background())
}

func (o AnalysisBaseMapStyleTypeOutput) ToAnalysisBaseMapStyleTypePtrOutputWithContext(ctx context.Context) AnalysisBaseMapStyleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBaseMapStyleType) *AnalysisBaseMapStyleType {
		return &v
	}).(AnalysisBaseMapStyleTypePtrOutput)
}

func (o AnalysisBaseMapStyleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisBaseMapStyleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisBaseMapStyleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisBaseMapStyleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisBaseMapStyleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisBaseMapStyleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisBaseMapStyleTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisBaseMapStyleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBaseMapStyleType)(nil)).Elem()
}

func (o AnalysisBaseMapStyleTypePtrOutput) ToAnalysisBaseMapStyleTypePtrOutput() AnalysisBaseMapStyleTypePtrOutput {
	return o
}

func (o AnalysisBaseMapStyleTypePtrOutput) ToAnalysisBaseMapStyleTypePtrOutputWithContext(ctx context.Context) AnalysisBaseMapStyleTypePtrOutput {
	return o
}

func (o AnalysisBaseMapStyleTypePtrOutput) Elem() AnalysisBaseMapStyleTypeOutput {
	return o.ApplyT(func(v *AnalysisBaseMapStyleType) AnalysisBaseMapStyleType {
		if v != nil {
			return *v
		}
		var ret AnalysisBaseMapStyleType
		return ret
	}).(AnalysisBaseMapStyleTypeOutput)
}

func (o AnalysisBaseMapStyleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisBaseMapStyleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisBaseMapStyleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisBaseMapStyleTypeInput is an input type that accepts values of the AnalysisBaseMapStyleType enum
// A concrete instance of `AnalysisBaseMapStyleTypeInput` can be one of the following:
//
//	AnalysisBaseMapStyleTypeLightGray
//	AnalysisBaseMapStyleTypeDarkGray
//	AnalysisBaseMapStyleTypeStreet
//	AnalysisBaseMapStyleTypeImagery
type AnalysisBaseMapStyleTypeInput interface {
	pulumi.Input

	ToAnalysisBaseMapStyleTypeOutput() AnalysisBaseMapStyleTypeOutput
	ToAnalysisBaseMapStyleTypeOutputWithContext(context.Context) AnalysisBaseMapStyleTypeOutput
}

var analysisBaseMapStyleTypePtrType = reflect.TypeOf((**AnalysisBaseMapStyleType)(nil)).Elem()

type AnalysisBaseMapStyleTypePtrInput interface {
	pulumi.Input

	ToAnalysisBaseMapStyleTypePtrOutput() AnalysisBaseMapStyleTypePtrOutput
	ToAnalysisBaseMapStyleTypePtrOutputWithContext(context.Context) AnalysisBaseMapStyleTypePtrOutput
}

type analysisBaseMapStyleTypePtr string

func AnalysisBaseMapStyleTypePtr(v string) AnalysisBaseMapStyleTypePtrInput {
	return (*analysisBaseMapStyleTypePtr)(&v)
}

func (*analysisBaseMapStyleTypePtr) ElementType() reflect.Type {
	return analysisBaseMapStyleTypePtrType
}

func (in *analysisBaseMapStyleTypePtr) ToAnalysisBaseMapStyleTypePtrOutput() AnalysisBaseMapStyleTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisBaseMapStyleTypePtrOutput)
}

func (in *analysisBaseMapStyleTypePtr) ToAnalysisBaseMapStyleTypePtrOutputWithContext(ctx context.Context) AnalysisBaseMapStyleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisBaseMapStyleTypePtrOutput)
}

type AnalysisBoxPlotFillStyle string

const (
	AnalysisBoxPlotFillStyleSolid       = AnalysisBoxPlotFillStyle("SOLID")
	AnalysisBoxPlotFillStyleTransparent = AnalysisBoxPlotFillStyle("TRANSPARENT")
)

func (AnalysisBoxPlotFillStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotFillStyle)(nil)).Elem()
}

func (e AnalysisBoxPlotFillStyle) ToAnalysisBoxPlotFillStyleOutput() AnalysisBoxPlotFillStyleOutput {
	return pulumi.ToOutput(e).(AnalysisBoxPlotFillStyleOutput)
}

func (e AnalysisBoxPlotFillStyle) ToAnalysisBoxPlotFillStyleOutputWithContext(ctx context.Context) AnalysisBoxPlotFillStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisBoxPlotFillStyleOutput)
}

func (e AnalysisBoxPlotFillStyle) ToAnalysisBoxPlotFillStylePtrOutput() AnalysisBoxPlotFillStylePtrOutput {
	return e.ToAnalysisBoxPlotFillStylePtrOutputWithContext(context.Background())
}

func (e AnalysisBoxPlotFillStyle) ToAnalysisBoxPlotFillStylePtrOutputWithContext(ctx context.Context) AnalysisBoxPlotFillStylePtrOutput {
	return AnalysisBoxPlotFillStyle(e).ToAnalysisBoxPlotFillStyleOutputWithContext(ctx).ToAnalysisBoxPlotFillStylePtrOutputWithContext(ctx)
}

func (e AnalysisBoxPlotFillStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisBoxPlotFillStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisBoxPlotFillStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisBoxPlotFillStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisBoxPlotFillStyleOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotFillStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisBoxPlotFillStyle)(nil)).Elem()
}

func (o AnalysisBoxPlotFillStyleOutput) ToAnalysisBoxPlotFillStyleOutput() AnalysisBoxPlotFillStyleOutput {
	return o
}

func (o AnalysisBoxPlotFillStyleOutput) ToAnalysisBoxPlotFillStyleOutputWithContext(ctx context.Context) AnalysisBoxPlotFillStyleOutput {
	return o
}

func (o AnalysisBoxPlotFillStyleOutput) ToAnalysisBoxPlotFillStylePtrOutput() AnalysisBoxPlotFillStylePtrOutput {
	return o.ToAnalysisBoxPlotFillStylePtrOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotFillStyleOutput) ToAnalysisBoxPlotFillStylePtrOutputWithContext(ctx context.Context) AnalysisBoxPlotFillStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisBoxPlotFillStyle) *AnalysisBoxPlotFillStyle {
		return &v
	}).(AnalysisBoxPlotFillStylePtrOutput)
}

func (o AnalysisBoxPlotFillStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotFillStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisBoxPlotFillStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisBoxPlotFillStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotFillStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisBoxPlotFillStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisBoxPlotFillStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisBoxPlotFillStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisBoxPlotFillStyle)(nil)).Elem()
}

func (o AnalysisBoxPlotFillStylePtrOutput) ToAnalysisBoxPlotFillStylePtrOutput() AnalysisBoxPlotFillStylePtrOutput {
	return o
}

func (o AnalysisBoxPlotFillStylePtrOutput) ToAnalysisBoxPlotFillStylePtrOutputWithContext(ctx context.Context) AnalysisBoxPlotFillStylePtrOutput {
	return o
}

func (o AnalysisBoxPlotFillStylePtrOutput) Elem() AnalysisBoxPlotFillStyleOutput {
	return o.ApplyT(func(v *AnalysisBoxPlotFillStyle) AnalysisBoxPlotFillStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisBoxPlotFillStyle
		return ret
	}).(AnalysisBoxPlotFillStyleOutput)
}

func (o AnalysisBoxPlotFillStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisBoxPlotFillStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisBoxPlotFillStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisBoxPlotFillStyleInput is an input type that accepts values of the AnalysisBoxPlotFillStyle enum
// A concrete instance of `AnalysisBoxPlotFillStyleInput` can be one of the following:
//
//	AnalysisBoxPlotFillStyleSolid
//	AnalysisBoxPlotFillStyleTransparent
type AnalysisBoxPlotFillStyleInput interface {
	pulumi.Input

	ToAnalysisBoxPlotFillStyleOutput() AnalysisBoxPlotFillStyleOutput
	ToAnalysisBoxPlotFillStyleOutputWithContext(context.Context) AnalysisBoxPlotFillStyleOutput
}

var analysisBoxPlotFillStylePtrType = reflect.TypeOf((**AnalysisBoxPlotFillStyle)(nil)).Elem()

type AnalysisBoxPlotFillStylePtrInput interface {
	pulumi.Input

	ToAnalysisBoxPlotFillStylePtrOutput() AnalysisBoxPlotFillStylePtrOutput
	ToAnalysisBoxPlotFillStylePtrOutputWithContext(context.Context) AnalysisBoxPlotFillStylePtrOutput
}

type analysisBoxPlotFillStylePtr string

func AnalysisBoxPlotFillStylePtr(v string) AnalysisBoxPlotFillStylePtrInput {
	return (*analysisBoxPlotFillStylePtr)(&v)
}

func (*analysisBoxPlotFillStylePtr) ElementType() reflect.Type {
	return analysisBoxPlotFillStylePtrType
}

func (in *analysisBoxPlotFillStylePtr) ToAnalysisBoxPlotFillStylePtrOutput() AnalysisBoxPlotFillStylePtrOutput {
	return pulumi.ToOutput(in).(AnalysisBoxPlotFillStylePtrOutput)
}

func (in *analysisBoxPlotFillStylePtr) ToAnalysisBoxPlotFillStylePtrOutputWithContext(ctx context.Context) AnalysisBoxPlotFillStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisBoxPlotFillStylePtrOutput)
}

type AnalysisCategoricalAggregationFunction string

const (
	AnalysisCategoricalAggregationFunctionCount         = AnalysisCategoricalAggregationFunction("COUNT")
	AnalysisCategoricalAggregationFunctionDistinctCount = AnalysisCategoricalAggregationFunction("DISTINCT_COUNT")
)

func (AnalysisCategoricalAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoricalAggregationFunction)(nil)).Elem()
}

func (e AnalysisCategoricalAggregationFunction) ToAnalysisCategoricalAggregationFunctionOutput() AnalysisCategoricalAggregationFunctionOutput {
	return pulumi.ToOutput(e).(AnalysisCategoricalAggregationFunctionOutput)
}

func (e AnalysisCategoricalAggregationFunction) ToAnalysisCategoricalAggregationFunctionOutputWithContext(ctx context.Context) AnalysisCategoricalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisCategoricalAggregationFunctionOutput)
}

func (e AnalysisCategoricalAggregationFunction) ToAnalysisCategoricalAggregationFunctionPtrOutput() AnalysisCategoricalAggregationFunctionPtrOutput {
	return e.ToAnalysisCategoricalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e AnalysisCategoricalAggregationFunction) ToAnalysisCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisCategoricalAggregationFunctionPtrOutput {
	return AnalysisCategoricalAggregationFunction(e).ToAnalysisCategoricalAggregationFunctionOutputWithContext(ctx).ToAnalysisCategoricalAggregationFunctionPtrOutputWithContext(ctx)
}

func (e AnalysisCategoricalAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCategoricalAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCategoricalAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisCategoricalAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisCategoricalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (AnalysisCategoricalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoricalAggregationFunction)(nil)).Elem()
}

func (o AnalysisCategoricalAggregationFunctionOutput) ToAnalysisCategoricalAggregationFunctionOutput() AnalysisCategoricalAggregationFunctionOutput {
	return o
}

func (o AnalysisCategoricalAggregationFunctionOutput) ToAnalysisCategoricalAggregationFunctionOutputWithContext(ctx context.Context) AnalysisCategoricalAggregationFunctionOutput {
	return o
}

func (o AnalysisCategoricalAggregationFunctionOutput) ToAnalysisCategoricalAggregationFunctionPtrOutput() AnalysisCategoricalAggregationFunctionPtrOutput {
	return o.ToAnalysisCategoricalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoricalAggregationFunctionOutput) ToAnalysisCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisCategoricalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCategoricalAggregationFunction) *AnalysisCategoricalAggregationFunction {
		return &v
	}).(AnalysisCategoricalAggregationFunctionPtrOutput)
}

func (o AnalysisCategoricalAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisCategoricalAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCategoricalAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisCategoricalAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoricalAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCategoricalAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisCategoricalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCategoricalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoricalAggregationFunction)(nil)).Elem()
}

func (o AnalysisCategoricalAggregationFunctionPtrOutput) ToAnalysisCategoricalAggregationFunctionPtrOutput() AnalysisCategoricalAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisCategoricalAggregationFunctionPtrOutput) ToAnalysisCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisCategoricalAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisCategoricalAggregationFunctionPtrOutput) Elem() AnalysisCategoricalAggregationFunctionOutput {
	return o.ApplyT(func(v *AnalysisCategoricalAggregationFunction) AnalysisCategoricalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret AnalysisCategoricalAggregationFunction
		return ret
	}).(AnalysisCategoricalAggregationFunctionOutput)
}

func (o AnalysisCategoricalAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoricalAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisCategoricalAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisCategoricalAggregationFunctionInput is an input type that accepts values of the AnalysisCategoricalAggregationFunction enum
// A concrete instance of `AnalysisCategoricalAggregationFunctionInput` can be one of the following:
//
//	AnalysisCategoricalAggregationFunctionCount
//	AnalysisCategoricalAggregationFunctionDistinctCount
type AnalysisCategoricalAggregationFunctionInput interface {
	pulumi.Input

	ToAnalysisCategoricalAggregationFunctionOutput() AnalysisCategoricalAggregationFunctionOutput
	ToAnalysisCategoricalAggregationFunctionOutputWithContext(context.Context) AnalysisCategoricalAggregationFunctionOutput
}

var analysisCategoricalAggregationFunctionPtrType = reflect.TypeOf((**AnalysisCategoricalAggregationFunction)(nil)).Elem()

type AnalysisCategoricalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToAnalysisCategoricalAggregationFunctionPtrOutput() AnalysisCategoricalAggregationFunctionPtrOutput
	ToAnalysisCategoricalAggregationFunctionPtrOutputWithContext(context.Context) AnalysisCategoricalAggregationFunctionPtrOutput
}

type analysisCategoricalAggregationFunctionPtr string

func AnalysisCategoricalAggregationFunctionPtr(v string) AnalysisCategoricalAggregationFunctionPtrInput {
	return (*analysisCategoricalAggregationFunctionPtr)(&v)
}

func (*analysisCategoricalAggregationFunctionPtr) ElementType() reflect.Type {
	return analysisCategoricalAggregationFunctionPtrType
}

func (in *analysisCategoricalAggregationFunctionPtr) ToAnalysisCategoricalAggregationFunctionPtrOutput() AnalysisCategoricalAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisCategoricalAggregationFunctionPtrOutput)
}

func (in *analysisCategoricalAggregationFunctionPtr) ToAnalysisCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisCategoricalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisCategoricalAggregationFunctionPtrOutput)
}

type AnalysisCategoryFilterMatchOperator string

const (
	AnalysisCategoryFilterMatchOperatorEquals         = AnalysisCategoryFilterMatchOperator("EQUALS")
	AnalysisCategoryFilterMatchOperatorDoesNotEqual   = AnalysisCategoryFilterMatchOperator("DOES_NOT_EQUAL")
	AnalysisCategoryFilterMatchOperatorContains       = AnalysisCategoryFilterMatchOperator("CONTAINS")
	AnalysisCategoryFilterMatchOperatorDoesNotContain = AnalysisCategoryFilterMatchOperator("DOES_NOT_CONTAIN")
	AnalysisCategoryFilterMatchOperatorStartsWith     = AnalysisCategoryFilterMatchOperator("STARTS_WITH")
	AnalysisCategoryFilterMatchOperatorEndsWith       = AnalysisCategoryFilterMatchOperator("ENDS_WITH")
)

func (AnalysisCategoryFilterMatchOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoryFilterMatchOperator)(nil)).Elem()
}

func (e AnalysisCategoryFilterMatchOperator) ToAnalysisCategoryFilterMatchOperatorOutput() AnalysisCategoryFilterMatchOperatorOutput {
	return pulumi.ToOutput(e).(AnalysisCategoryFilterMatchOperatorOutput)
}

func (e AnalysisCategoryFilterMatchOperator) ToAnalysisCategoryFilterMatchOperatorOutputWithContext(ctx context.Context) AnalysisCategoryFilterMatchOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisCategoryFilterMatchOperatorOutput)
}

func (e AnalysisCategoryFilterMatchOperator) ToAnalysisCategoryFilterMatchOperatorPtrOutput() AnalysisCategoryFilterMatchOperatorPtrOutput {
	return e.ToAnalysisCategoryFilterMatchOperatorPtrOutputWithContext(context.Background())
}

func (e AnalysisCategoryFilterMatchOperator) ToAnalysisCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterMatchOperatorPtrOutput {
	return AnalysisCategoryFilterMatchOperator(e).ToAnalysisCategoryFilterMatchOperatorOutputWithContext(ctx).ToAnalysisCategoryFilterMatchOperatorPtrOutputWithContext(ctx)
}

func (e AnalysisCategoryFilterMatchOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCategoryFilterMatchOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCategoryFilterMatchOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisCategoryFilterMatchOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisCategoryFilterMatchOperatorOutput struct{ *pulumi.OutputState }

func (AnalysisCategoryFilterMatchOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoryFilterMatchOperator)(nil)).Elem()
}

func (o AnalysisCategoryFilterMatchOperatorOutput) ToAnalysisCategoryFilterMatchOperatorOutput() AnalysisCategoryFilterMatchOperatorOutput {
	return o
}

func (o AnalysisCategoryFilterMatchOperatorOutput) ToAnalysisCategoryFilterMatchOperatorOutputWithContext(ctx context.Context) AnalysisCategoryFilterMatchOperatorOutput {
	return o
}

func (o AnalysisCategoryFilterMatchOperatorOutput) ToAnalysisCategoryFilterMatchOperatorPtrOutput() AnalysisCategoryFilterMatchOperatorPtrOutput {
	return o.ToAnalysisCategoryFilterMatchOperatorPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoryFilterMatchOperatorOutput) ToAnalysisCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCategoryFilterMatchOperator) *AnalysisCategoryFilterMatchOperator {
		return &v
	}).(AnalysisCategoryFilterMatchOperatorPtrOutput)
}

func (o AnalysisCategoryFilterMatchOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisCategoryFilterMatchOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCategoryFilterMatchOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisCategoryFilterMatchOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoryFilterMatchOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCategoryFilterMatchOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisCategoryFilterMatchOperatorPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCategoryFilterMatchOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoryFilterMatchOperator)(nil)).Elem()
}

func (o AnalysisCategoryFilterMatchOperatorPtrOutput) ToAnalysisCategoryFilterMatchOperatorPtrOutput() AnalysisCategoryFilterMatchOperatorPtrOutput {
	return o
}

func (o AnalysisCategoryFilterMatchOperatorPtrOutput) ToAnalysisCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterMatchOperatorPtrOutput {
	return o
}

func (o AnalysisCategoryFilterMatchOperatorPtrOutput) Elem() AnalysisCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v *AnalysisCategoryFilterMatchOperator) AnalysisCategoryFilterMatchOperator {
		if v != nil {
			return *v
		}
		var ret AnalysisCategoryFilterMatchOperator
		return ret
	}).(AnalysisCategoryFilterMatchOperatorOutput)
}

func (o AnalysisCategoryFilterMatchOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoryFilterMatchOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisCategoryFilterMatchOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisCategoryFilterMatchOperatorInput is an input type that accepts values of the AnalysisCategoryFilterMatchOperator enum
// A concrete instance of `AnalysisCategoryFilterMatchOperatorInput` can be one of the following:
//
//	AnalysisCategoryFilterMatchOperatorEquals
//	AnalysisCategoryFilterMatchOperatorDoesNotEqual
//	AnalysisCategoryFilterMatchOperatorContains
//	AnalysisCategoryFilterMatchOperatorDoesNotContain
//	AnalysisCategoryFilterMatchOperatorStartsWith
//	AnalysisCategoryFilterMatchOperatorEndsWith
type AnalysisCategoryFilterMatchOperatorInput interface {
	pulumi.Input

	ToAnalysisCategoryFilterMatchOperatorOutput() AnalysisCategoryFilterMatchOperatorOutput
	ToAnalysisCategoryFilterMatchOperatorOutputWithContext(context.Context) AnalysisCategoryFilterMatchOperatorOutput
}

var analysisCategoryFilterMatchOperatorPtrType = reflect.TypeOf((**AnalysisCategoryFilterMatchOperator)(nil)).Elem()

type AnalysisCategoryFilterMatchOperatorPtrInput interface {
	pulumi.Input

	ToAnalysisCategoryFilterMatchOperatorPtrOutput() AnalysisCategoryFilterMatchOperatorPtrOutput
	ToAnalysisCategoryFilterMatchOperatorPtrOutputWithContext(context.Context) AnalysisCategoryFilterMatchOperatorPtrOutput
}

type analysisCategoryFilterMatchOperatorPtr string

func AnalysisCategoryFilterMatchOperatorPtr(v string) AnalysisCategoryFilterMatchOperatorPtrInput {
	return (*analysisCategoryFilterMatchOperatorPtr)(&v)
}

func (*analysisCategoryFilterMatchOperatorPtr) ElementType() reflect.Type {
	return analysisCategoryFilterMatchOperatorPtrType
}

func (in *analysisCategoryFilterMatchOperatorPtr) ToAnalysisCategoryFilterMatchOperatorPtrOutput() AnalysisCategoryFilterMatchOperatorPtrOutput {
	return pulumi.ToOutput(in).(AnalysisCategoryFilterMatchOperatorPtrOutput)
}

func (in *analysisCategoryFilterMatchOperatorPtr) ToAnalysisCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterMatchOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisCategoryFilterMatchOperatorPtrOutput)
}

type AnalysisCategoryFilterSelectAllOptions string

const (
	AnalysisCategoryFilterSelectAllOptionsFilterAllValues = AnalysisCategoryFilterSelectAllOptions("FILTER_ALL_VALUES")
)

func (AnalysisCategoryFilterSelectAllOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoryFilterSelectAllOptions)(nil)).Elem()
}

func (e AnalysisCategoryFilterSelectAllOptions) ToAnalysisCategoryFilterSelectAllOptionsOutput() AnalysisCategoryFilterSelectAllOptionsOutput {
	return pulumi.ToOutput(e).(AnalysisCategoryFilterSelectAllOptionsOutput)
}

func (e AnalysisCategoryFilterSelectAllOptions) ToAnalysisCategoryFilterSelectAllOptionsOutputWithContext(ctx context.Context) AnalysisCategoryFilterSelectAllOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisCategoryFilterSelectAllOptionsOutput)
}

func (e AnalysisCategoryFilterSelectAllOptions) ToAnalysisCategoryFilterSelectAllOptionsPtrOutput() AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return e.ToAnalysisCategoryFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (e AnalysisCategoryFilterSelectAllOptions) ToAnalysisCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return AnalysisCategoryFilterSelectAllOptions(e).ToAnalysisCategoryFilterSelectAllOptionsOutputWithContext(ctx).ToAnalysisCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx)
}

func (e AnalysisCategoryFilterSelectAllOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCategoryFilterSelectAllOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCategoryFilterSelectAllOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisCategoryFilterSelectAllOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisCategoryFilterSelectAllOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisCategoryFilterSelectAllOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCategoryFilterSelectAllOptions)(nil)).Elem()
}

func (o AnalysisCategoryFilterSelectAllOptionsOutput) ToAnalysisCategoryFilterSelectAllOptionsOutput() AnalysisCategoryFilterSelectAllOptionsOutput {
	return o
}

func (o AnalysisCategoryFilterSelectAllOptionsOutput) ToAnalysisCategoryFilterSelectAllOptionsOutputWithContext(ctx context.Context) AnalysisCategoryFilterSelectAllOptionsOutput {
	return o
}

func (o AnalysisCategoryFilterSelectAllOptionsOutput) ToAnalysisCategoryFilterSelectAllOptionsPtrOutput() AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return o.ToAnalysisCategoryFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoryFilterSelectAllOptionsOutput) ToAnalysisCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCategoryFilterSelectAllOptions) *AnalysisCategoryFilterSelectAllOptions {
		return &v
	}).(AnalysisCategoryFilterSelectAllOptionsPtrOutput)
}

func (o AnalysisCategoryFilterSelectAllOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisCategoryFilterSelectAllOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCategoryFilterSelectAllOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisCategoryFilterSelectAllOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoryFilterSelectAllOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCategoryFilterSelectAllOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisCategoryFilterSelectAllOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCategoryFilterSelectAllOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCategoryFilterSelectAllOptions)(nil)).Elem()
}

func (o AnalysisCategoryFilterSelectAllOptionsPtrOutput) ToAnalysisCategoryFilterSelectAllOptionsPtrOutput() AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return o
}

func (o AnalysisCategoryFilterSelectAllOptionsPtrOutput) ToAnalysisCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return o
}

func (o AnalysisCategoryFilterSelectAllOptionsPtrOutput) Elem() AnalysisCategoryFilterSelectAllOptionsOutput {
	return o.ApplyT(func(v *AnalysisCategoryFilterSelectAllOptions) AnalysisCategoryFilterSelectAllOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisCategoryFilterSelectAllOptions
		return ret
	}).(AnalysisCategoryFilterSelectAllOptionsOutput)
}

func (o AnalysisCategoryFilterSelectAllOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCategoryFilterSelectAllOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisCategoryFilterSelectAllOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisCategoryFilterSelectAllOptionsInput is an input type that accepts values of the AnalysisCategoryFilterSelectAllOptions enum
// A concrete instance of `AnalysisCategoryFilterSelectAllOptionsInput` can be one of the following:
//
//	AnalysisCategoryFilterSelectAllOptionsFilterAllValues
type AnalysisCategoryFilterSelectAllOptionsInput interface {
	pulumi.Input

	ToAnalysisCategoryFilterSelectAllOptionsOutput() AnalysisCategoryFilterSelectAllOptionsOutput
	ToAnalysisCategoryFilterSelectAllOptionsOutputWithContext(context.Context) AnalysisCategoryFilterSelectAllOptionsOutput
}

var analysisCategoryFilterSelectAllOptionsPtrType = reflect.TypeOf((**AnalysisCategoryFilterSelectAllOptions)(nil)).Elem()

type AnalysisCategoryFilterSelectAllOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisCategoryFilterSelectAllOptionsPtrOutput() AnalysisCategoryFilterSelectAllOptionsPtrOutput
	ToAnalysisCategoryFilterSelectAllOptionsPtrOutputWithContext(context.Context) AnalysisCategoryFilterSelectAllOptionsPtrOutput
}

type analysisCategoryFilterSelectAllOptionsPtr string

func AnalysisCategoryFilterSelectAllOptionsPtr(v string) AnalysisCategoryFilterSelectAllOptionsPtrInput {
	return (*analysisCategoryFilterSelectAllOptionsPtr)(&v)
}

func (*analysisCategoryFilterSelectAllOptionsPtr) ElementType() reflect.Type {
	return analysisCategoryFilterSelectAllOptionsPtrType
}

func (in *analysisCategoryFilterSelectAllOptionsPtr) ToAnalysisCategoryFilterSelectAllOptionsPtrOutput() AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutput(in).(AnalysisCategoryFilterSelectAllOptionsPtrOutput)
}

func (in *analysisCategoryFilterSelectAllOptionsPtr) ToAnalysisCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisCategoryFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisCategoryFilterSelectAllOptionsPtrOutput)
}

type AnalysisColorFillType string

const (
	AnalysisColorFillTypeDiscrete = AnalysisColorFillType("DISCRETE")
	AnalysisColorFillTypeGradient = AnalysisColorFillType("GRADIENT")
)

func (AnalysisColorFillType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColorFillType)(nil)).Elem()
}

func (e AnalysisColorFillType) ToAnalysisColorFillTypeOutput() AnalysisColorFillTypeOutput {
	return pulumi.ToOutput(e).(AnalysisColorFillTypeOutput)
}

func (e AnalysisColorFillType) ToAnalysisColorFillTypeOutputWithContext(ctx context.Context) AnalysisColorFillTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisColorFillTypeOutput)
}

func (e AnalysisColorFillType) ToAnalysisColorFillTypePtrOutput() AnalysisColorFillTypePtrOutput {
	return e.ToAnalysisColorFillTypePtrOutputWithContext(context.Background())
}

func (e AnalysisColorFillType) ToAnalysisColorFillTypePtrOutputWithContext(ctx context.Context) AnalysisColorFillTypePtrOutput {
	return AnalysisColorFillType(e).ToAnalysisColorFillTypeOutputWithContext(ctx).ToAnalysisColorFillTypePtrOutputWithContext(ctx)
}

func (e AnalysisColorFillType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisColorFillType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisColorFillType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisColorFillType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisColorFillTypeOutput struct{ *pulumi.OutputState }

func (AnalysisColorFillTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColorFillType)(nil)).Elem()
}

func (o AnalysisColorFillTypeOutput) ToAnalysisColorFillTypeOutput() AnalysisColorFillTypeOutput {
	return o
}

func (o AnalysisColorFillTypeOutput) ToAnalysisColorFillTypeOutputWithContext(ctx context.Context) AnalysisColorFillTypeOutput {
	return o
}

func (o AnalysisColorFillTypeOutput) ToAnalysisColorFillTypePtrOutput() AnalysisColorFillTypePtrOutput {
	return o.ToAnalysisColorFillTypePtrOutputWithContext(context.Background())
}

func (o AnalysisColorFillTypeOutput) ToAnalysisColorFillTypePtrOutputWithContext(ctx context.Context) AnalysisColorFillTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisColorFillType) *AnalysisColorFillType {
		return &v
	}).(AnalysisColorFillTypePtrOutput)
}

func (o AnalysisColorFillTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisColorFillTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisColorFillType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisColorFillTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisColorFillTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisColorFillType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisColorFillTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisColorFillTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColorFillType)(nil)).Elem()
}

func (o AnalysisColorFillTypePtrOutput) ToAnalysisColorFillTypePtrOutput() AnalysisColorFillTypePtrOutput {
	return o
}

func (o AnalysisColorFillTypePtrOutput) ToAnalysisColorFillTypePtrOutputWithContext(ctx context.Context) AnalysisColorFillTypePtrOutput {
	return o
}

func (o AnalysisColorFillTypePtrOutput) Elem() AnalysisColorFillTypeOutput {
	return o.ApplyT(func(v *AnalysisColorFillType) AnalysisColorFillType {
		if v != nil {
			return *v
		}
		var ret AnalysisColorFillType
		return ret
	}).(AnalysisColorFillTypeOutput)
}

func (o AnalysisColorFillTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisColorFillTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisColorFillType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisColorFillTypeInput is an input type that accepts values of the AnalysisColorFillType enum
// A concrete instance of `AnalysisColorFillTypeInput` can be one of the following:
//
//	AnalysisColorFillTypeDiscrete
//	AnalysisColorFillTypeGradient
type AnalysisColorFillTypeInput interface {
	pulumi.Input

	ToAnalysisColorFillTypeOutput() AnalysisColorFillTypeOutput
	ToAnalysisColorFillTypeOutputWithContext(context.Context) AnalysisColorFillTypeOutput
}

var analysisColorFillTypePtrType = reflect.TypeOf((**AnalysisColorFillType)(nil)).Elem()

type AnalysisColorFillTypePtrInput interface {
	pulumi.Input

	ToAnalysisColorFillTypePtrOutput() AnalysisColorFillTypePtrOutput
	ToAnalysisColorFillTypePtrOutputWithContext(context.Context) AnalysisColorFillTypePtrOutput
}

type analysisColorFillTypePtr string

func AnalysisColorFillTypePtr(v string) AnalysisColorFillTypePtrInput {
	return (*analysisColorFillTypePtr)(&v)
}

func (*analysisColorFillTypePtr) ElementType() reflect.Type {
	return analysisColorFillTypePtrType
}

func (in *analysisColorFillTypePtr) ToAnalysisColorFillTypePtrOutput() AnalysisColorFillTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisColorFillTypePtrOutput)
}

func (in *analysisColorFillTypePtr) ToAnalysisColorFillTypePtrOutputWithContext(ctx context.Context) AnalysisColorFillTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisColorFillTypePtrOutput)
}

type AnalysisColumnRole string

const (
	AnalysisColumnRoleDimension = AnalysisColumnRole("DIMENSION")
	AnalysisColumnRoleMeasure   = AnalysisColumnRole("MEASURE")
)

func (AnalysisColumnRole) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnRole)(nil)).Elem()
}

func (e AnalysisColumnRole) ToAnalysisColumnRoleOutput() AnalysisColumnRoleOutput {
	return pulumi.ToOutput(e).(AnalysisColumnRoleOutput)
}

func (e AnalysisColumnRole) ToAnalysisColumnRoleOutputWithContext(ctx context.Context) AnalysisColumnRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisColumnRoleOutput)
}

func (e AnalysisColumnRole) ToAnalysisColumnRolePtrOutput() AnalysisColumnRolePtrOutput {
	return e.ToAnalysisColumnRolePtrOutputWithContext(context.Background())
}

func (e AnalysisColumnRole) ToAnalysisColumnRolePtrOutputWithContext(ctx context.Context) AnalysisColumnRolePtrOutput {
	return AnalysisColumnRole(e).ToAnalysisColumnRoleOutputWithContext(ctx).ToAnalysisColumnRolePtrOutputWithContext(ctx)
}

func (e AnalysisColumnRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisColumnRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisColumnRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisColumnRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisColumnRoleOutput struct{ *pulumi.OutputState }

func (AnalysisColumnRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisColumnRole)(nil)).Elem()
}

func (o AnalysisColumnRoleOutput) ToAnalysisColumnRoleOutput() AnalysisColumnRoleOutput {
	return o
}

func (o AnalysisColumnRoleOutput) ToAnalysisColumnRoleOutputWithContext(ctx context.Context) AnalysisColumnRoleOutput {
	return o
}

func (o AnalysisColumnRoleOutput) ToAnalysisColumnRolePtrOutput() AnalysisColumnRolePtrOutput {
	return o.ToAnalysisColumnRolePtrOutputWithContext(context.Background())
}

func (o AnalysisColumnRoleOutput) ToAnalysisColumnRolePtrOutputWithContext(ctx context.Context) AnalysisColumnRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisColumnRole) *AnalysisColumnRole {
		return &v
	}).(AnalysisColumnRolePtrOutput)
}

func (o AnalysisColumnRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisColumnRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisColumnRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisColumnRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisColumnRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisColumnRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisColumnRolePtrOutput struct{ *pulumi.OutputState }

func (AnalysisColumnRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisColumnRole)(nil)).Elem()
}

func (o AnalysisColumnRolePtrOutput) ToAnalysisColumnRolePtrOutput() AnalysisColumnRolePtrOutput {
	return o
}

func (o AnalysisColumnRolePtrOutput) ToAnalysisColumnRolePtrOutputWithContext(ctx context.Context) AnalysisColumnRolePtrOutput {
	return o
}

func (o AnalysisColumnRolePtrOutput) Elem() AnalysisColumnRoleOutput {
	return o.ApplyT(func(v *AnalysisColumnRole) AnalysisColumnRole {
		if v != nil {
			return *v
		}
		var ret AnalysisColumnRole
		return ret
	}).(AnalysisColumnRoleOutput)
}

func (o AnalysisColumnRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisColumnRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisColumnRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisColumnRoleInput is an input type that accepts values of the AnalysisColumnRole enum
// A concrete instance of `AnalysisColumnRoleInput` can be one of the following:
//
//	AnalysisColumnRoleDimension
//	AnalysisColumnRoleMeasure
type AnalysisColumnRoleInput interface {
	pulumi.Input

	ToAnalysisColumnRoleOutput() AnalysisColumnRoleOutput
	ToAnalysisColumnRoleOutputWithContext(context.Context) AnalysisColumnRoleOutput
}

var analysisColumnRolePtrType = reflect.TypeOf((**AnalysisColumnRole)(nil)).Elem()

type AnalysisColumnRolePtrInput interface {
	pulumi.Input

	ToAnalysisColumnRolePtrOutput() AnalysisColumnRolePtrOutput
	ToAnalysisColumnRolePtrOutputWithContext(context.Context) AnalysisColumnRolePtrOutput
}

type analysisColumnRolePtr string

func AnalysisColumnRolePtr(v string) AnalysisColumnRolePtrInput {
	return (*analysisColumnRolePtr)(&v)
}

func (*analysisColumnRolePtr) ElementType() reflect.Type {
	return analysisColumnRolePtrType
}

func (in *analysisColumnRolePtr) ToAnalysisColumnRolePtrOutput() AnalysisColumnRolePtrOutput {
	return pulumi.ToOutput(in).(AnalysisColumnRolePtrOutput)
}

func (in *analysisColumnRolePtr) ToAnalysisColumnRolePtrOutputWithContext(ctx context.Context) AnalysisColumnRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisColumnRolePtrOutput)
}

type AnalysisComparisonMethod string

const (
	AnalysisComparisonMethodDifference        = AnalysisComparisonMethod("DIFFERENCE")
	AnalysisComparisonMethodPercentDifference = AnalysisComparisonMethod("PERCENT_DIFFERENCE")
	AnalysisComparisonMethodPercent           = AnalysisComparisonMethod("PERCENT")
)

func (AnalysisComparisonMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComparisonMethod)(nil)).Elem()
}

func (e AnalysisComparisonMethod) ToAnalysisComparisonMethodOutput() AnalysisComparisonMethodOutput {
	return pulumi.ToOutput(e).(AnalysisComparisonMethodOutput)
}

func (e AnalysisComparisonMethod) ToAnalysisComparisonMethodOutputWithContext(ctx context.Context) AnalysisComparisonMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisComparisonMethodOutput)
}

func (e AnalysisComparisonMethod) ToAnalysisComparisonMethodPtrOutput() AnalysisComparisonMethodPtrOutput {
	return e.ToAnalysisComparisonMethodPtrOutputWithContext(context.Background())
}

func (e AnalysisComparisonMethod) ToAnalysisComparisonMethodPtrOutputWithContext(ctx context.Context) AnalysisComparisonMethodPtrOutput {
	return AnalysisComparisonMethod(e).ToAnalysisComparisonMethodOutputWithContext(ctx).ToAnalysisComparisonMethodPtrOutputWithContext(ctx)
}

func (e AnalysisComparisonMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisComparisonMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisComparisonMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisComparisonMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisComparisonMethodOutput struct{ *pulumi.OutputState }

func (AnalysisComparisonMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisComparisonMethod)(nil)).Elem()
}

func (o AnalysisComparisonMethodOutput) ToAnalysisComparisonMethodOutput() AnalysisComparisonMethodOutput {
	return o
}

func (o AnalysisComparisonMethodOutput) ToAnalysisComparisonMethodOutputWithContext(ctx context.Context) AnalysisComparisonMethodOutput {
	return o
}

func (o AnalysisComparisonMethodOutput) ToAnalysisComparisonMethodPtrOutput() AnalysisComparisonMethodPtrOutput {
	return o.ToAnalysisComparisonMethodPtrOutputWithContext(context.Background())
}

func (o AnalysisComparisonMethodOutput) ToAnalysisComparisonMethodPtrOutputWithContext(ctx context.Context) AnalysisComparisonMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisComparisonMethod) *AnalysisComparisonMethod {
		return &v
	}).(AnalysisComparisonMethodPtrOutput)
}

func (o AnalysisComparisonMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisComparisonMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisComparisonMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisComparisonMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisComparisonMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisComparisonMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisComparisonMethodPtrOutput struct{ *pulumi.OutputState }

func (AnalysisComparisonMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisComparisonMethod)(nil)).Elem()
}

func (o AnalysisComparisonMethodPtrOutput) ToAnalysisComparisonMethodPtrOutput() AnalysisComparisonMethodPtrOutput {
	return o
}

func (o AnalysisComparisonMethodPtrOutput) ToAnalysisComparisonMethodPtrOutputWithContext(ctx context.Context) AnalysisComparisonMethodPtrOutput {
	return o
}

func (o AnalysisComparisonMethodPtrOutput) Elem() AnalysisComparisonMethodOutput {
	return o.ApplyT(func(v *AnalysisComparisonMethod) AnalysisComparisonMethod {
		if v != nil {
			return *v
		}
		var ret AnalysisComparisonMethod
		return ret
	}).(AnalysisComparisonMethodOutput)
}

func (o AnalysisComparisonMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisComparisonMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisComparisonMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisComparisonMethodInput is an input type that accepts values of the AnalysisComparisonMethod enum
// A concrete instance of `AnalysisComparisonMethodInput` can be one of the following:
//
//	AnalysisComparisonMethodDifference
//	AnalysisComparisonMethodPercentDifference
//	AnalysisComparisonMethodPercent
type AnalysisComparisonMethodInput interface {
	pulumi.Input

	ToAnalysisComparisonMethodOutput() AnalysisComparisonMethodOutput
	ToAnalysisComparisonMethodOutputWithContext(context.Context) AnalysisComparisonMethodOutput
}

var analysisComparisonMethodPtrType = reflect.TypeOf((**AnalysisComparisonMethod)(nil)).Elem()

type AnalysisComparisonMethodPtrInput interface {
	pulumi.Input

	ToAnalysisComparisonMethodPtrOutput() AnalysisComparisonMethodPtrOutput
	ToAnalysisComparisonMethodPtrOutputWithContext(context.Context) AnalysisComparisonMethodPtrOutput
}

type analysisComparisonMethodPtr string

func AnalysisComparisonMethodPtr(v string) AnalysisComparisonMethodPtrInput {
	return (*analysisComparisonMethodPtr)(&v)
}

func (*analysisComparisonMethodPtr) ElementType() reflect.Type {
	return analysisComparisonMethodPtrType
}

func (in *analysisComparisonMethodPtr) ToAnalysisComparisonMethodPtrOutput() AnalysisComparisonMethodPtrOutput {
	return pulumi.ToOutput(in).(AnalysisComparisonMethodPtrOutput)
}

func (in *analysisComparisonMethodPtr) ToAnalysisComparisonMethodPtrOutputWithContext(ctx context.Context) AnalysisComparisonMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisComparisonMethodPtrOutput)
}

type AnalysisConditionalFormattingIconDisplayOption string

const (
	AnalysisConditionalFormattingIconDisplayOptionIconOnly = AnalysisConditionalFormattingIconDisplayOption("ICON_ONLY")
)

func (AnalysisConditionalFormattingIconDisplayOption) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingIconDisplayOption)(nil)).Elem()
}

func (e AnalysisConditionalFormattingIconDisplayOption) ToAnalysisConditionalFormattingIconDisplayOptionOutput() AnalysisConditionalFormattingIconDisplayOptionOutput {
	return pulumi.ToOutput(e).(AnalysisConditionalFormattingIconDisplayOptionOutput)
}

func (e AnalysisConditionalFormattingIconDisplayOption) ToAnalysisConditionalFormattingIconDisplayOptionOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisConditionalFormattingIconDisplayOptionOutput)
}

func (e AnalysisConditionalFormattingIconDisplayOption) ToAnalysisConditionalFormattingIconDisplayOptionPtrOutput() AnalysisConditionalFormattingIconDisplayOptionPtrOutput {
	return e.ToAnalysisConditionalFormattingIconDisplayOptionPtrOutputWithContext(context.Background())
}

func (e AnalysisConditionalFormattingIconDisplayOption) ToAnalysisConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayOptionPtrOutput {
	return AnalysisConditionalFormattingIconDisplayOption(e).ToAnalysisConditionalFormattingIconDisplayOptionOutputWithContext(ctx).ToAnalysisConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx)
}

func (e AnalysisConditionalFormattingIconDisplayOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisConditionalFormattingIconDisplayOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisConditionalFormattingIconDisplayOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisConditionalFormattingIconDisplayOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisConditionalFormattingIconDisplayOptionOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingIconDisplayOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingIconDisplayOption)(nil)).Elem()
}

func (o AnalysisConditionalFormattingIconDisplayOptionOutput) ToAnalysisConditionalFormattingIconDisplayOptionOutput() AnalysisConditionalFormattingIconDisplayOptionOutput {
	return o
}

func (o AnalysisConditionalFormattingIconDisplayOptionOutput) ToAnalysisConditionalFormattingIconDisplayOptionOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayOptionOutput {
	return o
}

func (o AnalysisConditionalFormattingIconDisplayOptionOutput) ToAnalysisConditionalFormattingIconDisplayOptionPtrOutput() AnalysisConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ToAnalysisConditionalFormattingIconDisplayOptionPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconDisplayOptionOutput) ToAnalysisConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisConditionalFormattingIconDisplayOption) *AnalysisConditionalFormattingIconDisplayOption {
		return &v
	}).(AnalysisConditionalFormattingIconDisplayOptionPtrOutput)
}

func (o AnalysisConditionalFormattingIconDisplayOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconDisplayOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisConditionalFormattingIconDisplayOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisConditionalFormattingIconDisplayOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconDisplayOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisConditionalFormattingIconDisplayOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisConditionalFormattingIconDisplayOptionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingIconDisplayOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingIconDisplayOption)(nil)).Elem()
}

func (o AnalysisConditionalFormattingIconDisplayOptionPtrOutput) ToAnalysisConditionalFormattingIconDisplayOptionPtrOutput() AnalysisConditionalFormattingIconDisplayOptionPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingIconDisplayOptionPtrOutput) ToAnalysisConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayOptionPtrOutput {
	return o
}

func (o AnalysisConditionalFormattingIconDisplayOptionPtrOutput) Elem() AnalysisConditionalFormattingIconDisplayOptionOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingIconDisplayOption) AnalysisConditionalFormattingIconDisplayOption {
		if v != nil {
			return *v
		}
		var ret AnalysisConditionalFormattingIconDisplayOption
		return ret
	}).(AnalysisConditionalFormattingIconDisplayOptionOutput)
}

func (o AnalysisConditionalFormattingIconDisplayOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconDisplayOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisConditionalFormattingIconDisplayOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisConditionalFormattingIconDisplayOptionInput is an input type that accepts values of the AnalysisConditionalFormattingIconDisplayOption enum
// A concrete instance of `AnalysisConditionalFormattingIconDisplayOptionInput` can be one of the following:
//
//	AnalysisConditionalFormattingIconDisplayOptionIconOnly
type AnalysisConditionalFormattingIconDisplayOptionInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingIconDisplayOptionOutput() AnalysisConditionalFormattingIconDisplayOptionOutput
	ToAnalysisConditionalFormattingIconDisplayOptionOutputWithContext(context.Context) AnalysisConditionalFormattingIconDisplayOptionOutput
}

var analysisConditionalFormattingIconDisplayOptionPtrType = reflect.TypeOf((**AnalysisConditionalFormattingIconDisplayOption)(nil)).Elem()

type AnalysisConditionalFormattingIconDisplayOptionPtrInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingIconDisplayOptionPtrOutput() AnalysisConditionalFormattingIconDisplayOptionPtrOutput
	ToAnalysisConditionalFormattingIconDisplayOptionPtrOutputWithContext(context.Context) AnalysisConditionalFormattingIconDisplayOptionPtrOutput
}

type analysisConditionalFormattingIconDisplayOptionPtr string

func AnalysisConditionalFormattingIconDisplayOptionPtr(v string) AnalysisConditionalFormattingIconDisplayOptionPtrInput {
	return (*analysisConditionalFormattingIconDisplayOptionPtr)(&v)
}

func (*analysisConditionalFormattingIconDisplayOptionPtr) ElementType() reflect.Type {
	return analysisConditionalFormattingIconDisplayOptionPtrType
}

func (in *analysisConditionalFormattingIconDisplayOptionPtr) ToAnalysisConditionalFormattingIconDisplayOptionPtrOutput() AnalysisConditionalFormattingIconDisplayOptionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisConditionalFormattingIconDisplayOptionPtrOutput)
}

func (in *analysisConditionalFormattingIconDisplayOptionPtr) ToAnalysisConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconDisplayOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisConditionalFormattingIconDisplayOptionPtrOutput)
}

type AnalysisConditionalFormattingIconSetType string

const (
	AnalysisConditionalFormattingIconSetTypePlusMinus        = AnalysisConditionalFormattingIconSetType("PLUS_MINUS")
	AnalysisConditionalFormattingIconSetTypeCheckX           = AnalysisConditionalFormattingIconSetType("CHECK_X")
	AnalysisConditionalFormattingIconSetTypeThreeColorArrow  = AnalysisConditionalFormattingIconSetType("THREE_COLOR_ARROW")
	AnalysisConditionalFormattingIconSetTypeThreeGrayArrow   = AnalysisConditionalFormattingIconSetType("THREE_GRAY_ARROW")
	AnalysisConditionalFormattingIconSetTypeCaretUpMinusDown = AnalysisConditionalFormattingIconSetType("CARET_UP_MINUS_DOWN")
	AnalysisConditionalFormattingIconSetTypeThreeShape       = AnalysisConditionalFormattingIconSetType("THREE_SHAPE")
	AnalysisConditionalFormattingIconSetTypeThreeCircle      = AnalysisConditionalFormattingIconSetType("THREE_CIRCLE")
	AnalysisConditionalFormattingIconSetTypeFlags            = AnalysisConditionalFormattingIconSetType("FLAGS")
	AnalysisConditionalFormattingIconSetTypeBars             = AnalysisConditionalFormattingIconSetType("BARS")
	AnalysisConditionalFormattingIconSetTypeFourColorArrow   = AnalysisConditionalFormattingIconSetType("FOUR_COLOR_ARROW")
	AnalysisConditionalFormattingIconSetTypeFourGrayArrow    = AnalysisConditionalFormattingIconSetType("FOUR_GRAY_ARROW")
)

func (AnalysisConditionalFormattingIconSetType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingIconSetType)(nil)).Elem()
}

func (e AnalysisConditionalFormattingIconSetType) ToAnalysisConditionalFormattingIconSetTypeOutput() AnalysisConditionalFormattingIconSetTypeOutput {
	return pulumi.ToOutput(e).(AnalysisConditionalFormattingIconSetTypeOutput)
}

func (e AnalysisConditionalFormattingIconSetType) ToAnalysisConditionalFormattingIconSetTypeOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisConditionalFormattingIconSetTypeOutput)
}

func (e AnalysisConditionalFormattingIconSetType) ToAnalysisConditionalFormattingIconSetTypePtrOutput() AnalysisConditionalFormattingIconSetTypePtrOutput {
	return e.ToAnalysisConditionalFormattingIconSetTypePtrOutputWithContext(context.Background())
}

func (e AnalysisConditionalFormattingIconSetType) ToAnalysisConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetTypePtrOutput {
	return AnalysisConditionalFormattingIconSetType(e).ToAnalysisConditionalFormattingIconSetTypeOutputWithContext(ctx).ToAnalysisConditionalFormattingIconSetTypePtrOutputWithContext(ctx)
}

func (e AnalysisConditionalFormattingIconSetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisConditionalFormattingIconSetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisConditionalFormattingIconSetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisConditionalFormattingIconSetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisConditionalFormattingIconSetTypeOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingIconSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisConditionalFormattingIconSetType)(nil)).Elem()
}

func (o AnalysisConditionalFormattingIconSetTypeOutput) ToAnalysisConditionalFormattingIconSetTypeOutput() AnalysisConditionalFormattingIconSetTypeOutput {
	return o
}

func (o AnalysisConditionalFormattingIconSetTypeOutput) ToAnalysisConditionalFormattingIconSetTypeOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetTypeOutput {
	return o
}

func (o AnalysisConditionalFormattingIconSetTypeOutput) ToAnalysisConditionalFormattingIconSetTypePtrOutput() AnalysisConditionalFormattingIconSetTypePtrOutput {
	return o.ToAnalysisConditionalFormattingIconSetTypePtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconSetTypeOutput) ToAnalysisConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisConditionalFormattingIconSetType) *AnalysisConditionalFormattingIconSetType {
		return &v
	}).(AnalysisConditionalFormattingIconSetTypePtrOutput)
}

func (o AnalysisConditionalFormattingIconSetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconSetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisConditionalFormattingIconSetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisConditionalFormattingIconSetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconSetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisConditionalFormattingIconSetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisConditionalFormattingIconSetTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisConditionalFormattingIconSetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisConditionalFormattingIconSetType)(nil)).Elem()
}

func (o AnalysisConditionalFormattingIconSetTypePtrOutput) ToAnalysisConditionalFormattingIconSetTypePtrOutput() AnalysisConditionalFormattingIconSetTypePtrOutput {
	return o
}

func (o AnalysisConditionalFormattingIconSetTypePtrOutput) ToAnalysisConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetTypePtrOutput {
	return o
}

func (o AnalysisConditionalFormattingIconSetTypePtrOutput) Elem() AnalysisConditionalFormattingIconSetTypeOutput {
	return o.ApplyT(func(v *AnalysisConditionalFormattingIconSetType) AnalysisConditionalFormattingIconSetType {
		if v != nil {
			return *v
		}
		var ret AnalysisConditionalFormattingIconSetType
		return ret
	}).(AnalysisConditionalFormattingIconSetTypeOutput)
}

func (o AnalysisConditionalFormattingIconSetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisConditionalFormattingIconSetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisConditionalFormattingIconSetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisConditionalFormattingIconSetTypeInput is an input type that accepts values of the AnalysisConditionalFormattingIconSetType enum
// A concrete instance of `AnalysisConditionalFormattingIconSetTypeInput` can be one of the following:
//
//	AnalysisConditionalFormattingIconSetTypePlusMinus
//	AnalysisConditionalFormattingIconSetTypeCheckX
//	AnalysisConditionalFormattingIconSetTypeThreeColorArrow
//	AnalysisConditionalFormattingIconSetTypeThreeGrayArrow
//	AnalysisConditionalFormattingIconSetTypeCaretUpMinusDown
//	AnalysisConditionalFormattingIconSetTypeThreeShape
//	AnalysisConditionalFormattingIconSetTypeThreeCircle
//	AnalysisConditionalFormattingIconSetTypeFlags
//	AnalysisConditionalFormattingIconSetTypeBars
//	AnalysisConditionalFormattingIconSetTypeFourColorArrow
//	AnalysisConditionalFormattingIconSetTypeFourGrayArrow
type AnalysisConditionalFormattingIconSetTypeInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingIconSetTypeOutput() AnalysisConditionalFormattingIconSetTypeOutput
	ToAnalysisConditionalFormattingIconSetTypeOutputWithContext(context.Context) AnalysisConditionalFormattingIconSetTypeOutput
}

var analysisConditionalFormattingIconSetTypePtrType = reflect.TypeOf((**AnalysisConditionalFormattingIconSetType)(nil)).Elem()

type AnalysisConditionalFormattingIconSetTypePtrInput interface {
	pulumi.Input

	ToAnalysisConditionalFormattingIconSetTypePtrOutput() AnalysisConditionalFormattingIconSetTypePtrOutput
	ToAnalysisConditionalFormattingIconSetTypePtrOutputWithContext(context.Context) AnalysisConditionalFormattingIconSetTypePtrOutput
}

type analysisConditionalFormattingIconSetTypePtr string

func AnalysisConditionalFormattingIconSetTypePtr(v string) AnalysisConditionalFormattingIconSetTypePtrInput {
	return (*analysisConditionalFormattingIconSetTypePtr)(&v)
}

func (*analysisConditionalFormattingIconSetTypePtr) ElementType() reflect.Type {
	return analysisConditionalFormattingIconSetTypePtrType
}

func (in *analysisConditionalFormattingIconSetTypePtr) ToAnalysisConditionalFormattingIconSetTypePtrOutput() AnalysisConditionalFormattingIconSetTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisConditionalFormattingIconSetTypePtrOutput)
}

func (in *analysisConditionalFormattingIconSetTypePtr) ToAnalysisConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) AnalysisConditionalFormattingIconSetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisConditionalFormattingIconSetTypePtrOutput)
}

type AnalysisCrossDatasetTypes string

const (
	AnalysisCrossDatasetTypesAllDatasets   = AnalysisCrossDatasetTypes("ALL_DATASETS")
	AnalysisCrossDatasetTypesSingleDataset = AnalysisCrossDatasetTypes("SINGLE_DATASET")
)

func (AnalysisCrossDatasetTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCrossDatasetTypes)(nil)).Elem()
}

func (e AnalysisCrossDatasetTypes) ToAnalysisCrossDatasetTypesOutput() AnalysisCrossDatasetTypesOutput {
	return pulumi.ToOutput(e).(AnalysisCrossDatasetTypesOutput)
}

func (e AnalysisCrossDatasetTypes) ToAnalysisCrossDatasetTypesOutputWithContext(ctx context.Context) AnalysisCrossDatasetTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisCrossDatasetTypesOutput)
}

func (e AnalysisCrossDatasetTypes) ToAnalysisCrossDatasetTypesPtrOutput() AnalysisCrossDatasetTypesPtrOutput {
	return e.ToAnalysisCrossDatasetTypesPtrOutputWithContext(context.Background())
}

func (e AnalysisCrossDatasetTypes) ToAnalysisCrossDatasetTypesPtrOutputWithContext(ctx context.Context) AnalysisCrossDatasetTypesPtrOutput {
	return AnalysisCrossDatasetTypes(e).ToAnalysisCrossDatasetTypesOutputWithContext(ctx).ToAnalysisCrossDatasetTypesPtrOutputWithContext(ctx)
}

func (e AnalysisCrossDatasetTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCrossDatasetTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCrossDatasetTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisCrossDatasetTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisCrossDatasetTypesOutput struct{ *pulumi.OutputState }

func (AnalysisCrossDatasetTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCrossDatasetTypes)(nil)).Elem()
}

func (o AnalysisCrossDatasetTypesOutput) ToAnalysisCrossDatasetTypesOutput() AnalysisCrossDatasetTypesOutput {
	return o
}

func (o AnalysisCrossDatasetTypesOutput) ToAnalysisCrossDatasetTypesOutputWithContext(ctx context.Context) AnalysisCrossDatasetTypesOutput {
	return o
}

func (o AnalysisCrossDatasetTypesOutput) ToAnalysisCrossDatasetTypesPtrOutput() AnalysisCrossDatasetTypesPtrOutput {
	return o.ToAnalysisCrossDatasetTypesPtrOutputWithContext(context.Background())
}

func (o AnalysisCrossDatasetTypesOutput) ToAnalysisCrossDatasetTypesPtrOutputWithContext(ctx context.Context) AnalysisCrossDatasetTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCrossDatasetTypes) *AnalysisCrossDatasetTypes {
		return &v
	}).(AnalysisCrossDatasetTypesPtrOutput)
}

func (o AnalysisCrossDatasetTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisCrossDatasetTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCrossDatasetTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisCrossDatasetTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCrossDatasetTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCrossDatasetTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisCrossDatasetTypesPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCrossDatasetTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCrossDatasetTypes)(nil)).Elem()
}

func (o AnalysisCrossDatasetTypesPtrOutput) ToAnalysisCrossDatasetTypesPtrOutput() AnalysisCrossDatasetTypesPtrOutput {
	return o
}

func (o AnalysisCrossDatasetTypesPtrOutput) ToAnalysisCrossDatasetTypesPtrOutputWithContext(ctx context.Context) AnalysisCrossDatasetTypesPtrOutput {
	return o
}

func (o AnalysisCrossDatasetTypesPtrOutput) Elem() AnalysisCrossDatasetTypesOutput {
	return o.ApplyT(func(v *AnalysisCrossDatasetTypes) AnalysisCrossDatasetTypes {
		if v != nil {
			return *v
		}
		var ret AnalysisCrossDatasetTypes
		return ret
	}).(AnalysisCrossDatasetTypesOutput)
}

func (o AnalysisCrossDatasetTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCrossDatasetTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisCrossDatasetTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisCrossDatasetTypesInput is an input type that accepts values of the AnalysisCrossDatasetTypes enum
// A concrete instance of `AnalysisCrossDatasetTypesInput` can be one of the following:
//
//	AnalysisCrossDatasetTypesAllDatasets
//	AnalysisCrossDatasetTypesSingleDataset
type AnalysisCrossDatasetTypesInput interface {
	pulumi.Input

	ToAnalysisCrossDatasetTypesOutput() AnalysisCrossDatasetTypesOutput
	ToAnalysisCrossDatasetTypesOutputWithContext(context.Context) AnalysisCrossDatasetTypesOutput
}

var analysisCrossDatasetTypesPtrType = reflect.TypeOf((**AnalysisCrossDatasetTypes)(nil)).Elem()

type AnalysisCrossDatasetTypesPtrInput interface {
	pulumi.Input

	ToAnalysisCrossDatasetTypesPtrOutput() AnalysisCrossDatasetTypesPtrOutput
	ToAnalysisCrossDatasetTypesPtrOutputWithContext(context.Context) AnalysisCrossDatasetTypesPtrOutput
}

type analysisCrossDatasetTypesPtr string

func AnalysisCrossDatasetTypesPtr(v string) AnalysisCrossDatasetTypesPtrInput {
	return (*analysisCrossDatasetTypesPtr)(&v)
}

func (*analysisCrossDatasetTypesPtr) ElementType() reflect.Type {
	return analysisCrossDatasetTypesPtrType
}

func (in *analysisCrossDatasetTypesPtr) ToAnalysisCrossDatasetTypesPtrOutput() AnalysisCrossDatasetTypesPtrOutput {
	return pulumi.ToOutput(in).(AnalysisCrossDatasetTypesPtrOutput)
}

func (in *analysisCrossDatasetTypesPtr) ToAnalysisCrossDatasetTypesPtrOutputWithContext(ctx context.Context) AnalysisCrossDatasetTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisCrossDatasetTypesPtrOutput)
}

type AnalysisCustomContentImageScalingConfiguration string

const (
	AnalysisCustomContentImageScalingConfigurationFitToHeight   = AnalysisCustomContentImageScalingConfiguration("FIT_TO_HEIGHT")
	AnalysisCustomContentImageScalingConfigurationFitToWidth    = AnalysisCustomContentImageScalingConfiguration("FIT_TO_WIDTH")
	AnalysisCustomContentImageScalingConfigurationDoNotScale    = AnalysisCustomContentImageScalingConfiguration("DO_NOT_SCALE")
	AnalysisCustomContentImageScalingConfigurationScaleToVisual = AnalysisCustomContentImageScalingConfiguration("SCALE_TO_VISUAL")
)

func (AnalysisCustomContentImageScalingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomContentImageScalingConfiguration)(nil)).Elem()
}

func (e AnalysisCustomContentImageScalingConfiguration) ToAnalysisCustomContentImageScalingConfigurationOutput() AnalysisCustomContentImageScalingConfigurationOutput {
	return pulumi.ToOutput(e).(AnalysisCustomContentImageScalingConfigurationOutput)
}

func (e AnalysisCustomContentImageScalingConfiguration) ToAnalysisCustomContentImageScalingConfigurationOutputWithContext(ctx context.Context) AnalysisCustomContentImageScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisCustomContentImageScalingConfigurationOutput)
}

func (e AnalysisCustomContentImageScalingConfiguration) ToAnalysisCustomContentImageScalingConfigurationPtrOutput() AnalysisCustomContentImageScalingConfigurationPtrOutput {
	return e.ToAnalysisCustomContentImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (e AnalysisCustomContentImageScalingConfiguration) ToAnalysisCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomContentImageScalingConfigurationPtrOutput {
	return AnalysisCustomContentImageScalingConfiguration(e).ToAnalysisCustomContentImageScalingConfigurationOutputWithContext(ctx).ToAnalysisCustomContentImageScalingConfigurationPtrOutputWithContext(ctx)
}

func (e AnalysisCustomContentImageScalingConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCustomContentImageScalingConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCustomContentImageScalingConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisCustomContentImageScalingConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisCustomContentImageScalingConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisCustomContentImageScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomContentImageScalingConfiguration)(nil)).Elem()
}

func (o AnalysisCustomContentImageScalingConfigurationOutput) ToAnalysisCustomContentImageScalingConfigurationOutput() AnalysisCustomContentImageScalingConfigurationOutput {
	return o
}

func (o AnalysisCustomContentImageScalingConfigurationOutput) ToAnalysisCustomContentImageScalingConfigurationOutputWithContext(ctx context.Context) AnalysisCustomContentImageScalingConfigurationOutput {
	return o
}

func (o AnalysisCustomContentImageScalingConfigurationOutput) ToAnalysisCustomContentImageScalingConfigurationPtrOutput() AnalysisCustomContentImageScalingConfigurationPtrOutput {
	return o.ToAnalysisCustomContentImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomContentImageScalingConfigurationOutput) ToAnalysisCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomContentImageScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomContentImageScalingConfiguration) *AnalysisCustomContentImageScalingConfiguration {
		return &v
	}).(AnalysisCustomContentImageScalingConfigurationPtrOutput)
}

func (o AnalysisCustomContentImageScalingConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisCustomContentImageScalingConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCustomContentImageScalingConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisCustomContentImageScalingConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomContentImageScalingConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCustomContentImageScalingConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisCustomContentImageScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomContentImageScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomContentImageScalingConfiguration)(nil)).Elem()
}

func (o AnalysisCustomContentImageScalingConfigurationPtrOutput) ToAnalysisCustomContentImageScalingConfigurationPtrOutput() AnalysisCustomContentImageScalingConfigurationPtrOutput {
	return o
}

func (o AnalysisCustomContentImageScalingConfigurationPtrOutput) ToAnalysisCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomContentImageScalingConfigurationPtrOutput {
	return o
}

func (o AnalysisCustomContentImageScalingConfigurationPtrOutput) Elem() AnalysisCustomContentImageScalingConfigurationOutput {
	return o.ApplyT(func(v *AnalysisCustomContentImageScalingConfiguration) AnalysisCustomContentImageScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomContentImageScalingConfiguration
		return ret
	}).(AnalysisCustomContentImageScalingConfigurationOutput)
}

func (o AnalysisCustomContentImageScalingConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomContentImageScalingConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisCustomContentImageScalingConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisCustomContentImageScalingConfigurationInput is an input type that accepts values of the AnalysisCustomContentImageScalingConfiguration enum
// A concrete instance of `AnalysisCustomContentImageScalingConfigurationInput` can be one of the following:
//
//	AnalysisCustomContentImageScalingConfigurationFitToHeight
//	AnalysisCustomContentImageScalingConfigurationFitToWidth
//	AnalysisCustomContentImageScalingConfigurationDoNotScale
//	AnalysisCustomContentImageScalingConfigurationScaleToVisual
type AnalysisCustomContentImageScalingConfigurationInput interface {
	pulumi.Input

	ToAnalysisCustomContentImageScalingConfigurationOutput() AnalysisCustomContentImageScalingConfigurationOutput
	ToAnalysisCustomContentImageScalingConfigurationOutputWithContext(context.Context) AnalysisCustomContentImageScalingConfigurationOutput
}

var analysisCustomContentImageScalingConfigurationPtrType = reflect.TypeOf((**AnalysisCustomContentImageScalingConfiguration)(nil)).Elem()

type AnalysisCustomContentImageScalingConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisCustomContentImageScalingConfigurationPtrOutput() AnalysisCustomContentImageScalingConfigurationPtrOutput
	ToAnalysisCustomContentImageScalingConfigurationPtrOutputWithContext(context.Context) AnalysisCustomContentImageScalingConfigurationPtrOutput
}

type analysisCustomContentImageScalingConfigurationPtr string

func AnalysisCustomContentImageScalingConfigurationPtr(v string) AnalysisCustomContentImageScalingConfigurationPtrInput {
	return (*analysisCustomContentImageScalingConfigurationPtr)(&v)
}

func (*analysisCustomContentImageScalingConfigurationPtr) ElementType() reflect.Type {
	return analysisCustomContentImageScalingConfigurationPtrType
}

func (in *analysisCustomContentImageScalingConfigurationPtr) ToAnalysisCustomContentImageScalingConfigurationPtrOutput() AnalysisCustomContentImageScalingConfigurationPtrOutput {
	return pulumi.ToOutput(in).(AnalysisCustomContentImageScalingConfigurationPtrOutput)
}

func (in *analysisCustomContentImageScalingConfigurationPtr) ToAnalysisCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisCustomContentImageScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisCustomContentImageScalingConfigurationPtrOutput)
}

type AnalysisCustomContentType string

const (
	AnalysisCustomContentTypeImage                = AnalysisCustomContentType("IMAGE")
	AnalysisCustomContentTypeOtherEmbeddedContent = AnalysisCustomContentType("OTHER_EMBEDDED_CONTENT")
)

func (AnalysisCustomContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomContentType)(nil)).Elem()
}

func (e AnalysisCustomContentType) ToAnalysisCustomContentTypeOutput() AnalysisCustomContentTypeOutput {
	return pulumi.ToOutput(e).(AnalysisCustomContentTypeOutput)
}

func (e AnalysisCustomContentType) ToAnalysisCustomContentTypeOutputWithContext(ctx context.Context) AnalysisCustomContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisCustomContentTypeOutput)
}

func (e AnalysisCustomContentType) ToAnalysisCustomContentTypePtrOutput() AnalysisCustomContentTypePtrOutput {
	return e.ToAnalysisCustomContentTypePtrOutputWithContext(context.Background())
}

func (e AnalysisCustomContentType) ToAnalysisCustomContentTypePtrOutputWithContext(ctx context.Context) AnalysisCustomContentTypePtrOutput {
	return AnalysisCustomContentType(e).ToAnalysisCustomContentTypeOutputWithContext(ctx).ToAnalysisCustomContentTypePtrOutputWithContext(ctx)
}

func (e AnalysisCustomContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCustomContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisCustomContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisCustomContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisCustomContentTypeOutput struct{ *pulumi.OutputState }

func (AnalysisCustomContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisCustomContentType)(nil)).Elem()
}

func (o AnalysisCustomContentTypeOutput) ToAnalysisCustomContentTypeOutput() AnalysisCustomContentTypeOutput {
	return o
}

func (o AnalysisCustomContentTypeOutput) ToAnalysisCustomContentTypeOutputWithContext(ctx context.Context) AnalysisCustomContentTypeOutput {
	return o
}

func (o AnalysisCustomContentTypeOutput) ToAnalysisCustomContentTypePtrOutput() AnalysisCustomContentTypePtrOutput {
	return o.ToAnalysisCustomContentTypePtrOutputWithContext(context.Background())
}

func (o AnalysisCustomContentTypeOutput) ToAnalysisCustomContentTypePtrOutputWithContext(ctx context.Context) AnalysisCustomContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisCustomContentType) *AnalysisCustomContentType {
		return &v
	}).(AnalysisCustomContentTypePtrOutput)
}

func (o AnalysisCustomContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisCustomContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCustomContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisCustomContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisCustomContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisCustomContentTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisCustomContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisCustomContentType)(nil)).Elem()
}

func (o AnalysisCustomContentTypePtrOutput) ToAnalysisCustomContentTypePtrOutput() AnalysisCustomContentTypePtrOutput {
	return o
}

func (o AnalysisCustomContentTypePtrOutput) ToAnalysisCustomContentTypePtrOutputWithContext(ctx context.Context) AnalysisCustomContentTypePtrOutput {
	return o
}

func (o AnalysisCustomContentTypePtrOutput) Elem() AnalysisCustomContentTypeOutput {
	return o.ApplyT(func(v *AnalysisCustomContentType) AnalysisCustomContentType {
		if v != nil {
			return *v
		}
		var ret AnalysisCustomContentType
		return ret
	}).(AnalysisCustomContentTypeOutput)
}

func (o AnalysisCustomContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisCustomContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisCustomContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisCustomContentTypeInput is an input type that accepts values of the AnalysisCustomContentType enum
// A concrete instance of `AnalysisCustomContentTypeInput` can be one of the following:
//
//	AnalysisCustomContentTypeImage
//	AnalysisCustomContentTypeOtherEmbeddedContent
type AnalysisCustomContentTypeInput interface {
	pulumi.Input

	ToAnalysisCustomContentTypeOutput() AnalysisCustomContentTypeOutput
	ToAnalysisCustomContentTypeOutputWithContext(context.Context) AnalysisCustomContentTypeOutput
}

var analysisCustomContentTypePtrType = reflect.TypeOf((**AnalysisCustomContentType)(nil)).Elem()

type AnalysisCustomContentTypePtrInput interface {
	pulumi.Input

	ToAnalysisCustomContentTypePtrOutput() AnalysisCustomContentTypePtrOutput
	ToAnalysisCustomContentTypePtrOutputWithContext(context.Context) AnalysisCustomContentTypePtrOutput
}

type analysisCustomContentTypePtr string

func AnalysisCustomContentTypePtr(v string) AnalysisCustomContentTypePtrInput {
	return (*analysisCustomContentTypePtr)(&v)
}

func (*analysisCustomContentTypePtr) ElementType() reflect.Type {
	return analysisCustomContentTypePtrType
}

func (in *analysisCustomContentTypePtr) ToAnalysisCustomContentTypePtrOutput() AnalysisCustomContentTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisCustomContentTypePtrOutput)
}

func (in *analysisCustomContentTypePtr) ToAnalysisCustomContentTypePtrOutputWithContext(ctx context.Context) AnalysisCustomContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisCustomContentTypePtrOutput)
}

type AnalysisDataLabelContent string

const (
	AnalysisDataLabelContentValue           = AnalysisDataLabelContent("VALUE")
	AnalysisDataLabelContentPercent         = AnalysisDataLabelContent("PERCENT")
	AnalysisDataLabelContentValueAndPercent = AnalysisDataLabelContent("VALUE_AND_PERCENT")
)

func (AnalysisDataLabelContent) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataLabelContent)(nil)).Elem()
}

func (e AnalysisDataLabelContent) ToAnalysisDataLabelContentOutput() AnalysisDataLabelContentOutput {
	return pulumi.ToOutput(e).(AnalysisDataLabelContentOutput)
}

func (e AnalysisDataLabelContent) ToAnalysisDataLabelContentOutputWithContext(ctx context.Context) AnalysisDataLabelContentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisDataLabelContentOutput)
}

func (e AnalysisDataLabelContent) ToAnalysisDataLabelContentPtrOutput() AnalysisDataLabelContentPtrOutput {
	return e.ToAnalysisDataLabelContentPtrOutputWithContext(context.Background())
}

func (e AnalysisDataLabelContent) ToAnalysisDataLabelContentPtrOutputWithContext(ctx context.Context) AnalysisDataLabelContentPtrOutput {
	return AnalysisDataLabelContent(e).ToAnalysisDataLabelContentOutputWithContext(ctx).ToAnalysisDataLabelContentPtrOutputWithContext(ctx)
}

func (e AnalysisDataLabelContent) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisDataLabelContent) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisDataLabelContent) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisDataLabelContent) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisDataLabelContentOutput struct{ *pulumi.OutputState }

func (AnalysisDataLabelContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataLabelContent)(nil)).Elem()
}

func (o AnalysisDataLabelContentOutput) ToAnalysisDataLabelContentOutput() AnalysisDataLabelContentOutput {
	return o
}

func (o AnalysisDataLabelContentOutput) ToAnalysisDataLabelContentOutputWithContext(ctx context.Context) AnalysisDataLabelContentOutput {
	return o
}

func (o AnalysisDataLabelContentOutput) ToAnalysisDataLabelContentPtrOutput() AnalysisDataLabelContentPtrOutput {
	return o.ToAnalysisDataLabelContentPtrOutputWithContext(context.Background())
}

func (o AnalysisDataLabelContentOutput) ToAnalysisDataLabelContentPtrOutputWithContext(ctx context.Context) AnalysisDataLabelContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDataLabelContent) *AnalysisDataLabelContent {
		return &v
	}).(AnalysisDataLabelContentPtrOutput)
}

func (o AnalysisDataLabelContentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisDataLabelContentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisDataLabelContent) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisDataLabelContentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisDataLabelContentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisDataLabelContent) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisDataLabelContentPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDataLabelContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataLabelContent)(nil)).Elem()
}

func (o AnalysisDataLabelContentPtrOutput) ToAnalysisDataLabelContentPtrOutput() AnalysisDataLabelContentPtrOutput {
	return o
}

func (o AnalysisDataLabelContentPtrOutput) ToAnalysisDataLabelContentPtrOutputWithContext(ctx context.Context) AnalysisDataLabelContentPtrOutput {
	return o
}

func (o AnalysisDataLabelContentPtrOutput) Elem() AnalysisDataLabelContentOutput {
	return o.ApplyT(func(v *AnalysisDataLabelContent) AnalysisDataLabelContent {
		if v != nil {
			return *v
		}
		var ret AnalysisDataLabelContent
		return ret
	}).(AnalysisDataLabelContentOutput)
}

func (o AnalysisDataLabelContentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisDataLabelContentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisDataLabelContent) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisDataLabelContentInput is an input type that accepts values of the AnalysisDataLabelContent enum
// A concrete instance of `AnalysisDataLabelContentInput` can be one of the following:
//
//	AnalysisDataLabelContentValue
//	AnalysisDataLabelContentPercent
//	AnalysisDataLabelContentValueAndPercent
type AnalysisDataLabelContentInput interface {
	pulumi.Input

	ToAnalysisDataLabelContentOutput() AnalysisDataLabelContentOutput
	ToAnalysisDataLabelContentOutputWithContext(context.Context) AnalysisDataLabelContentOutput
}

var analysisDataLabelContentPtrType = reflect.TypeOf((**AnalysisDataLabelContent)(nil)).Elem()

type AnalysisDataLabelContentPtrInput interface {
	pulumi.Input

	ToAnalysisDataLabelContentPtrOutput() AnalysisDataLabelContentPtrOutput
	ToAnalysisDataLabelContentPtrOutputWithContext(context.Context) AnalysisDataLabelContentPtrOutput
}

type analysisDataLabelContentPtr string

func AnalysisDataLabelContentPtr(v string) AnalysisDataLabelContentPtrInput {
	return (*analysisDataLabelContentPtr)(&v)
}

func (*analysisDataLabelContentPtr) ElementType() reflect.Type {
	return analysisDataLabelContentPtrType
}

func (in *analysisDataLabelContentPtr) ToAnalysisDataLabelContentPtrOutput() AnalysisDataLabelContentPtrOutput {
	return pulumi.ToOutput(in).(AnalysisDataLabelContentPtrOutput)
}

func (in *analysisDataLabelContentPtr) ToAnalysisDataLabelContentPtrOutputWithContext(ctx context.Context) AnalysisDataLabelContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisDataLabelContentPtrOutput)
}

type AnalysisDataLabelOverlap string

const (
	AnalysisDataLabelOverlapDisableOverlap = AnalysisDataLabelOverlap("DISABLE_OVERLAP")
	AnalysisDataLabelOverlapEnableOverlap  = AnalysisDataLabelOverlap("ENABLE_OVERLAP")
)

func (AnalysisDataLabelOverlap) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataLabelOverlap)(nil)).Elem()
}

func (e AnalysisDataLabelOverlap) ToAnalysisDataLabelOverlapOutput() AnalysisDataLabelOverlapOutput {
	return pulumi.ToOutput(e).(AnalysisDataLabelOverlapOutput)
}

func (e AnalysisDataLabelOverlap) ToAnalysisDataLabelOverlapOutputWithContext(ctx context.Context) AnalysisDataLabelOverlapOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisDataLabelOverlapOutput)
}

func (e AnalysisDataLabelOverlap) ToAnalysisDataLabelOverlapPtrOutput() AnalysisDataLabelOverlapPtrOutput {
	return e.ToAnalysisDataLabelOverlapPtrOutputWithContext(context.Background())
}

func (e AnalysisDataLabelOverlap) ToAnalysisDataLabelOverlapPtrOutputWithContext(ctx context.Context) AnalysisDataLabelOverlapPtrOutput {
	return AnalysisDataLabelOverlap(e).ToAnalysisDataLabelOverlapOutputWithContext(ctx).ToAnalysisDataLabelOverlapPtrOutputWithContext(ctx)
}

func (e AnalysisDataLabelOverlap) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisDataLabelOverlap) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisDataLabelOverlap) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisDataLabelOverlap) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisDataLabelOverlapOutput struct{ *pulumi.OutputState }

func (AnalysisDataLabelOverlapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataLabelOverlap)(nil)).Elem()
}

func (o AnalysisDataLabelOverlapOutput) ToAnalysisDataLabelOverlapOutput() AnalysisDataLabelOverlapOutput {
	return o
}

func (o AnalysisDataLabelOverlapOutput) ToAnalysisDataLabelOverlapOutputWithContext(ctx context.Context) AnalysisDataLabelOverlapOutput {
	return o
}

func (o AnalysisDataLabelOverlapOutput) ToAnalysisDataLabelOverlapPtrOutput() AnalysisDataLabelOverlapPtrOutput {
	return o.ToAnalysisDataLabelOverlapPtrOutputWithContext(context.Background())
}

func (o AnalysisDataLabelOverlapOutput) ToAnalysisDataLabelOverlapPtrOutputWithContext(ctx context.Context) AnalysisDataLabelOverlapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDataLabelOverlap) *AnalysisDataLabelOverlap {
		return &v
	}).(AnalysisDataLabelOverlapPtrOutput)
}

func (o AnalysisDataLabelOverlapOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisDataLabelOverlapOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisDataLabelOverlap) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisDataLabelOverlapOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisDataLabelOverlapOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisDataLabelOverlap) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisDataLabelOverlapPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDataLabelOverlapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataLabelOverlap)(nil)).Elem()
}

func (o AnalysisDataLabelOverlapPtrOutput) ToAnalysisDataLabelOverlapPtrOutput() AnalysisDataLabelOverlapPtrOutput {
	return o
}

func (o AnalysisDataLabelOverlapPtrOutput) ToAnalysisDataLabelOverlapPtrOutputWithContext(ctx context.Context) AnalysisDataLabelOverlapPtrOutput {
	return o
}

func (o AnalysisDataLabelOverlapPtrOutput) Elem() AnalysisDataLabelOverlapOutput {
	return o.ApplyT(func(v *AnalysisDataLabelOverlap) AnalysisDataLabelOverlap {
		if v != nil {
			return *v
		}
		var ret AnalysisDataLabelOverlap
		return ret
	}).(AnalysisDataLabelOverlapOutput)
}

func (o AnalysisDataLabelOverlapPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisDataLabelOverlapPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisDataLabelOverlap) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisDataLabelOverlapInput is an input type that accepts values of the AnalysisDataLabelOverlap enum
// A concrete instance of `AnalysisDataLabelOverlapInput` can be one of the following:
//
//	AnalysisDataLabelOverlapDisableOverlap
//	AnalysisDataLabelOverlapEnableOverlap
type AnalysisDataLabelOverlapInput interface {
	pulumi.Input

	ToAnalysisDataLabelOverlapOutput() AnalysisDataLabelOverlapOutput
	ToAnalysisDataLabelOverlapOutputWithContext(context.Context) AnalysisDataLabelOverlapOutput
}

var analysisDataLabelOverlapPtrType = reflect.TypeOf((**AnalysisDataLabelOverlap)(nil)).Elem()

type AnalysisDataLabelOverlapPtrInput interface {
	pulumi.Input

	ToAnalysisDataLabelOverlapPtrOutput() AnalysisDataLabelOverlapPtrOutput
	ToAnalysisDataLabelOverlapPtrOutputWithContext(context.Context) AnalysisDataLabelOverlapPtrOutput
}

type analysisDataLabelOverlapPtr string

func AnalysisDataLabelOverlapPtr(v string) AnalysisDataLabelOverlapPtrInput {
	return (*analysisDataLabelOverlapPtr)(&v)
}

func (*analysisDataLabelOverlapPtr) ElementType() reflect.Type {
	return analysisDataLabelOverlapPtrType
}

func (in *analysisDataLabelOverlapPtr) ToAnalysisDataLabelOverlapPtrOutput() AnalysisDataLabelOverlapPtrOutput {
	return pulumi.ToOutput(in).(AnalysisDataLabelOverlapPtrOutput)
}

func (in *analysisDataLabelOverlapPtr) ToAnalysisDataLabelOverlapPtrOutputWithContext(ctx context.Context) AnalysisDataLabelOverlapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisDataLabelOverlapPtrOutput)
}

type AnalysisDataLabelPosition string

const (
	AnalysisDataLabelPositionInside  = AnalysisDataLabelPosition("INSIDE")
	AnalysisDataLabelPositionOutside = AnalysisDataLabelPosition("OUTSIDE")
	AnalysisDataLabelPositionLeft    = AnalysisDataLabelPosition("LEFT")
	AnalysisDataLabelPositionTop     = AnalysisDataLabelPosition("TOP")
	AnalysisDataLabelPositionBottom  = AnalysisDataLabelPosition("BOTTOM")
	AnalysisDataLabelPositionRight   = AnalysisDataLabelPosition("RIGHT")
)

func (AnalysisDataLabelPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataLabelPosition)(nil)).Elem()
}

func (e AnalysisDataLabelPosition) ToAnalysisDataLabelPositionOutput() AnalysisDataLabelPositionOutput {
	return pulumi.ToOutput(e).(AnalysisDataLabelPositionOutput)
}

func (e AnalysisDataLabelPosition) ToAnalysisDataLabelPositionOutputWithContext(ctx context.Context) AnalysisDataLabelPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisDataLabelPositionOutput)
}

func (e AnalysisDataLabelPosition) ToAnalysisDataLabelPositionPtrOutput() AnalysisDataLabelPositionPtrOutput {
	return e.ToAnalysisDataLabelPositionPtrOutputWithContext(context.Background())
}

func (e AnalysisDataLabelPosition) ToAnalysisDataLabelPositionPtrOutputWithContext(ctx context.Context) AnalysisDataLabelPositionPtrOutput {
	return AnalysisDataLabelPosition(e).ToAnalysisDataLabelPositionOutputWithContext(ctx).ToAnalysisDataLabelPositionPtrOutputWithContext(ctx)
}

func (e AnalysisDataLabelPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisDataLabelPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisDataLabelPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisDataLabelPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisDataLabelPositionOutput struct{ *pulumi.OutputState }

func (AnalysisDataLabelPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDataLabelPosition)(nil)).Elem()
}

func (o AnalysisDataLabelPositionOutput) ToAnalysisDataLabelPositionOutput() AnalysisDataLabelPositionOutput {
	return o
}

func (o AnalysisDataLabelPositionOutput) ToAnalysisDataLabelPositionOutputWithContext(ctx context.Context) AnalysisDataLabelPositionOutput {
	return o
}

func (o AnalysisDataLabelPositionOutput) ToAnalysisDataLabelPositionPtrOutput() AnalysisDataLabelPositionPtrOutput {
	return o.ToAnalysisDataLabelPositionPtrOutputWithContext(context.Background())
}

func (o AnalysisDataLabelPositionOutput) ToAnalysisDataLabelPositionPtrOutputWithContext(ctx context.Context) AnalysisDataLabelPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDataLabelPosition) *AnalysisDataLabelPosition {
		return &v
	}).(AnalysisDataLabelPositionPtrOutput)
}

func (o AnalysisDataLabelPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisDataLabelPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisDataLabelPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisDataLabelPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisDataLabelPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisDataLabelPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisDataLabelPositionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDataLabelPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDataLabelPosition)(nil)).Elem()
}

func (o AnalysisDataLabelPositionPtrOutput) ToAnalysisDataLabelPositionPtrOutput() AnalysisDataLabelPositionPtrOutput {
	return o
}

func (o AnalysisDataLabelPositionPtrOutput) ToAnalysisDataLabelPositionPtrOutputWithContext(ctx context.Context) AnalysisDataLabelPositionPtrOutput {
	return o
}

func (o AnalysisDataLabelPositionPtrOutput) Elem() AnalysisDataLabelPositionOutput {
	return o.ApplyT(func(v *AnalysisDataLabelPosition) AnalysisDataLabelPosition {
		if v != nil {
			return *v
		}
		var ret AnalysisDataLabelPosition
		return ret
	}).(AnalysisDataLabelPositionOutput)
}

func (o AnalysisDataLabelPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisDataLabelPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisDataLabelPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisDataLabelPositionInput is an input type that accepts values of the AnalysisDataLabelPosition enum
// A concrete instance of `AnalysisDataLabelPositionInput` can be one of the following:
//
//	AnalysisDataLabelPositionInside
//	AnalysisDataLabelPositionOutside
//	AnalysisDataLabelPositionLeft
//	AnalysisDataLabelPositionTop
//	AnalysisDataLabelPositionBottom
//	AnalysisDataLabelPositionRight
type AnalysisDataLabelPositionInput interface {
	pulumi.Input

	ToAnalysisDataLabelPositionOutput() AnalysisDataLabelPositionOutput
	ToAnalysisDataLabelPositionOutputWithContext(context.Context) AnalysisDataLabelPositionOutput
}

var analysisDataLabelPositionPtrType = reflect.TypeOf((**AnalysisDataLabelPosition)(nil)).Elem()

type AnalysisDataLabelPositionPtrInput interface {
	pulumi.Input

	ToAnalysisDataLabelPositionPtrOutput() AnalysisDataLabelPositionPtrOutput
	ToAnalysisDataLabelPositionPtrOutputWithContext(context.Context) AnalysisDataLabelPositionPtrOutput
}

type analysisDataLabelPositionPtr string

func AnalysisDataLabelPositionPtr(v string) AnalysisDataLabelPositionPtrInput {
	return (*analysisDataLabelPositionPtr)(&v)
}

func (*analysisDataLabelPositionPtr) ElementType() reflect.Type {
	return analysisDataLabelPositionPtrType
}

func (in *analysisDataLabelPositionPtr) ToAnalysisDataLabelPositionPtrOutput() AnalysisDataLabelPositionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisDataLabelPositionPtrOutput)
}

func (in *analysisDataLabelPositionPtr) ToAnalysisDataLabelPositionPtrOutputWithContext(ctx context.Context) AnalysisDataLabelPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisDataLabelPositionPtrOutput)
}

type AnalysisDateAggregationFunction string

const (
	AnalysisDateAggregationFunctionCount         = AnalysisDateAggregationFunction("COUNT")
	AnalysisDateAggregationFunctionDistinctCount = AnalysisDateAggregationFunction("DISTINCT_COUNT")
	AnalysisDateAggregationFunctionMin           = AnalysisDateAggregationFunction("MIN")
	AnalysisDateAggregationFunctionMax           = AnalysisDateAggregationFunction("MAX")
)

func (AnalysisDateAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateAggregationFunction)(nil)).Elem()
}

func (e AnalysisDateAggregationFunction) ToAnalysisDateAggregationFunctionOutput() AnalysisDateAggregationFunctionOutput {
	return pulumi.ToOutput(e).(AnalysisDateAggregationFunctionOutput)
}

func (e AnalysisDateAggregationFunction) ToAnalysisDateAggregationFunctionOutputWithContext(ctx context.Context) AnalysisDateAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisDateAggregationFunctionOutput)
}

func (e AnalysisDateAggregationFunction) ToAnalysisDateAggregationFunctionPtrOutput() AnalysisDateAggregationFunctionPtrOutput {
	return e.ToAnalysisDateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e AnalysisDateAggregationFunction) ToAnalysisDateAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisDateAggregationFunctionPtrOutput {
	return AnalysisDateAggregationFunction(e).ToAnalysisDateAggregationFunctionOutputWithContext(ctx).ToAnalysisDateAggregationFunctionPtrOutputWithContext(ctx)
}

func (e AnalysisDateAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisDateAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisDateAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisDateAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisDateAggregationFunctionOutput struct{ *pulumi.OutputState }

func (AnalysisDateAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDateAggregationFunction)(nil)).Elem()
}

func (o AnalysisDateAggregationFunctionOutput) ToAnalysisDateAggregationFunctionOutput() AnalysisDateAggregationFunctionOutput {
	return o
}

func (o AnalysisDateAggregationFunctionOutput) ToAnalysisDateAggregationFunctionOutputWithContext(ctx context.Context) AnalysisDateAggregationFunctionOutput {
	return o
}

func (o AnalysisDateAggregationFunctionOutput) ToAnalysisDateAggregationFunctionPtrOutput() AnalysisDateAggregationFunctionPtrOutput {
	return o.ToAnalysisDateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o AnalysisDateAggregationFunctionOutput) ToAnalysisDateAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisDateAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDateAggregationFunction) *AnalysisDateAggregationFunction {
		return &v
	}).(AnalysisDateAggregationFunctionPtrOutput)
}

func (o AnalysisDateAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisDateAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisDateAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisDateAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisDateAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisDateAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisDateAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDateAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDateAggregationFunction)(nil)).Elem()
}

func (o AnalysisDateAggregationFunctionPtrOutput) ToAnalysisDateAggregationFunctionPtrOutput() AnalysisDateAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisDateAggregationFunctionPtrOutput) ToAnalysisDateAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisDateAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisDateAggregationFunctionPtrOutput) Elem() AnalysisDateAggregationFunctionOutput {
	return o.ApplyT(func(v *AnalysisDateAggregationFunction) AnalysisDateAggregationFunction {
		if v != nil {
			return *v
		}
		var ret AnalysisDateAggregationFunction
		return ret
	}).(AnalysisDateAggregationFunctionOutput)
}

func (o AnalysisDateAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisDateAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisDateAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisDateAggregationFunctionInput is an input type that accepts values of the AnalysisDateAggregationFunction enum
// A concrete instance of `AnalysisDateAggregationFunctionInput` can be one of the following:
//
//	AnalysisDateAggregationFunctionCount
//	AnalysisDateAggregationFunctionDistinctCount
//	AnalysisDateAggregationFunctionMin
//	AnalysisDateAggregationFunctionMax
type AnalysisDateAggregationFunctionInput interface {
	pulumi.Input

	ToAnalysisDateAggregationFunctionOutput() AnalysisDateAggregationFunctionOutput
	ToAnalysisDateAggregationFunctionOutputWithContext(context.Context) AnalysisDateAggregationFunctionOutput
}

var analysisDateAggregationFunctionPtrType = reflect.TypeOf((**AnalysisDateAggregationFunction)(nil)).Elem()

type AnalysisDateAggregationFunctionPtrInput interface {
	pulumi.Input

	ToAnalysisDateAggregationFunctionPtrOutput() AnalysisDateAggregationFunctionPtrOutput
	ToAnalysisDateAggregationFunctionPtrOutputWithContext(context.Context) AnalysisDateAggregationFunctionPtrOutput
}

type analysisDateAggregationFunctionPtr string

func AnalysisDateAggregationFunctionPtr(v string) AnalysisDateAggregationFunctionPtrInput {
	return (*analysisDateAggregationFunctionPtr)(&v)
}

func (*analysisDateAggregationFunctionPtr) ElementType() reflect.Type {
	return analysisDateAggregationFunctionPtrType
}

func (in *analysisDateAggregationFunctionPtr) ToAnalysisDateAggregationFunctionPtrOutput() AnalysisDateAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisDateAggregationFunctionPtrOutput)
}

func (in *analysisDateAggregationFunctionPtr) ToAnalysisDateAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisDateAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisDateAggregationFunctionPtrOutput)
}

type AnalysisDayOfTheWeek string

const (
	AnalysisDayOfTheWeekSunday    = AnalysisDayOfTheWeek("SUNDAY")
	AnalysisDayOfTheWeekMonday    = AnalysisDayOfTheWeek("MONDAY")
	AnalysisDayOfTheWeekTuesday   = AnalysisDayOfTheWeek("TUESDAY")
	AnalysisDayOfTheWeekWednesday = AnalysisDayOfTheWeek("WEDNESDAY")
	AnalysisDayOfTheWeekThursday  = AnalysisDayOfTheWeek("THURSDAY")
	AnalysisDayOfTheWeekFriday    = AnalysisDayOfTheWeek("FRIDAY")
	AnalysisDayOfTheWeekSaturday  = AnalysisDayOfTheWeek("SATURDAY")
)

func (AnalysisDayOfTheWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDayOfTheWeek)(nil)).Elem()
}

func (e AnalysisDayOfTheWeek) ToAnalysisDayOfTheWeekOutput() AnalysisDayOfTheWeekOutput {
	return pulumi.ToOutput(e).(AnalysisDayOfTheWeekOutput)
}

func (e AnalysisDayOfTheWeek) ToAnalysisDayOfTheWeekOutputWithContext(ctx context.Context) AnalysisDayOfTheWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisDayOfTheWeekOutput)
}

func (e AnalysisDayOfTheWeek) ToAnalysisDayOfTheWeekPtrOutput() AnalysisDayOfTheWeekPtrOutput {
	return e.ToAnalysisDayOfTheWeekPtrOutputWithContext(context.Background())
}

func (e AnalysisDayOfTheWeek) ToAnalysisDayOfTheWeekPtrOutputWithContext(ctx context.Context) AnalysisDayOfTheWeekPtrOutput {
	return AnalysisDayOfTheWeek(e).ToAnalysisDayOfTheWeekOutputWithContext(ctx).ToAnalysisDayOfTheWeekPtrOutputWithContext(ctx)
}

func (e AnalysisDayOfTheWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisDayOfTheWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisDayOfTheWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisDayOfTheWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisDayOfTheWeekOutput struct{ *pulumi.OutputState }

func (AnalysisDayOfTheWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisDayOfTheWeek)(nil)).Elem()
}

func (o AnalysisDayOfTheWeekOutput) ToAnalysisDayOfTheWeekOutput() AnalysisDayOfTheWeekOutput {
	return o
}

func (o AnalysisDayOfTheWeekOutput) ToAnalysisDayOfTheWeekOutputWithContext(ctx context.Context) AnalysisDayOfTheWeekOutput {
	return o
}

func (o AnalysisDayOfTheWeekOutput) ToAnalysisDayOfTheWeekPtrOutput() AnalysisDayOfTheWeekPtrOutput {
	return o.ToAnalysisDayOfTheWeekPtrOutputWithContext(context.Background())
}

func (o AnalysisDayOfTheWeekOutput) ToAnalysisDayOfTheWeekPtrOutputWithContext(ctx context.Context) AnalysisDayOfTheWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisDayOfTheWeek) *AnalysisDayOfTheWeek {
		return &v
	}).(AnalysisDayOfTheWeekPtrOutput)
}

func (o AnalysisDayOfTheWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisDayOfTheWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisDayOfTheWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisDayOfTheWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisDayOfTheWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisDayOfTheWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisDayOfTheWeekPtrOutput struct{ *pulumi.OutputState }

func (AnalysisDayOfTheWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisDayOfTheWeek)(nil)).Elem()
}

func (o AnalysisDayOfTheWeekPtrOutput) ToAnalysisDayOfTheWeekPtrOutput() AnalysisDayOfTheWeekPtrOutput {
	return o
}

func (o AnalysisDayOfTheWeekPtrOutput) ToAnalysisDayOfTheWeekPtrOutputWithContext(ctx context.Context) AnalysisDayOfTheWeekPtrOutput {
	return o
}

func (o AnalysisDayOfTheWeekPtrOutput) Elem() AnalysisDayOfTheWeekOutput {
	return o.ApplyT(func(v *AnalysisDayOfTheWeek) AnalysisDayOfTheWeek {
		if v != nil {
			return *v
		}
		var ret AnalysisDayOfTheWeek
		return ret
	}).(AnalysisDayOfTheWeekOutput)
}

func (o AnalysisDayOfTheWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisDayOfTheWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisDayOfTheWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisDayOfTheWeekInput is an input type that accepts values of the AnalysisDayOfTheWeek enum
// A concrete instance of `AnalysisDayOfTheWeekInput` can be one of the following:
//
//	AnalysisDayOfTheWeekSunday
//	AnalysisDayOfTheWeekMonday
//	AnalysisDayOfTheWeekTuesday
//	AnalysisDayOfTheWeekWednesday
//	AnalysisDayOfTheWeekThursday
//	AnalysisDayOfTheWeekFriday
//	AnalysisDayOfTheWeekSaturday
type AnalysisDayOfTheWeekInput interface {
	pulumi.Input

	ToAnalysisDayOfTheWeekOutput() AnalysisDayOfTheWeekOutput
	ToAnalysisDayOfTheWeekOutputWithContext(context.Context) AnalysisDayOfTheWeekOutput
}

var analysisDayOfTheWeekPtrType = reflect.TypeOf((**AnalysisDayOfTheWeek)(nil)).Elem()

type AnalysisDayOfTheWeekPtrInput interface {
	pulumi.Input

	ToAnalysisDayOfTheWeekPtrOutput() AnalysisDayOfTheWeekPtrOutput
	ToAnalysisDayOfTheWeekPtrOutputWithContext(context.Context) AnalysisDayOfTheWeekPtrOutput
}

type analysisDayOfTheWeekPtr string

func AnalysisDayOfTheWeekPtr(v string) AnalysisDayOfTheWeekPtrInput {
	return (*analysisDayOfTheWeekPtr)(&v)
}

func (*analysisDayOfTheWeekPtr) ElementType() reflect.Type {
	return analysisDayOfTheWeekPtrType
}

func (in *analysisDayOfTheWeekPtr) ToAnalysisDayOfTheWeekPtrOutput() AnalysisDayOfTheWeekPtrOutput {
	return pulumi.ToOutput(in).(AnalysisDayOfTheWeekPtrOutput)
}

func (in *analysisDayOfTheWeekPtr) ToAnalysisDayOfTheWeekPtrOutputWithContext(ctx context.Context) AnalysisDayOfTheWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisDayOfTheWeekPtrOutput)
}

type AnalysisErrorType string

const (
	AnalysisErrorTypeAccessDenied                 = AnalysisErrorType("ACCESS_DENIED")
	AnalysisErrorTypeSourceNotFound               = AnalysisErrorType("SOURCE_NOT_FOUND")
	AnalysisErrorTypeDataSetNotFound              = AnalysisErrorType("DATA_SET_NOT_FOUND")
	AnalysisErrorTypeInternalFailure              = AnalysisErrorType("INTERNAL_FAILURE")
	AnalysisErrorTypeParameterValueIncompatible   = AnalysisErrorType("PARAMETER_VALUE_INCOMPATIBLE")
	AnalysisErrorTypeParameterTypeInvalid         = AnalysisErrorType("PARAMETER_TYPE_INVALID")
	AnalysisErrorTypeParameterNotFound            = AnalysisErrorType("PARAMETER_NOT_FOUND")
	AnalysisErrorTypeColumnTypeMismatch           = AnalysisErrorType("COLUMN_TYPE_MISMATCH")
	AnalysisErrorTypeColumnGeographicRoleMismatch = AnalysisErrorType("COLUMN_GEOGRAPHIC_ROLE_MISMATCH")
	AnalysisErrorTypeColumnReplacementMissing     = AnalysisErrorType("COLUMN_REPLACEMENT_MISSING")
)

func (AnalysisErrorType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisErrorType)(nil)).Elem()
}

func (e AnalysisErrorType) ToAnalysisErrorTypeOutput() AnalysisErrorTypeOutput {
	return pulumi.ToOutput(e).(AnalysisErrorTypeOutput)
}

func (e AnalysisErrorType) ToAnalysisErrorTypeOutputWithContext(ctx context.Context) AnalysisErrorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisErrorTypeOutput)
}

func (e AnalysisErrorType) ToAnalysisErrorTypePtrOutput() AnalysisErrorTypePtrOutput {
	return e.ToAnalysisErrorTypePtrOutputWithContext(context.Background())
}

func (e AnalysisErrorType) ToAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisErrorTypePtrOutput {
	return AnalysisErrorType(e).ToAnalysisErrorTypeOutputWithContext(ctx).ToAnalysisErrorTypePtrOutputWithContext(ctx)
}

func (e AnalysisErrorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisErrorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisErrorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisErrorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisErrorTypeOutput struct{ *pulumi.OutputState }

func (AnalysisErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisErrorType)(nil)).Elem()
}

func (o AnalysisErrorTypeOutput) ToAnalysisErrorTypeOutput() AnalysisErrorTypeOutput {
	return o
}

func (o AnalysisErrorTypeOutput) ToAnalysisErrorTypeOutputWithContext(ctx context.Context) AnalysisErrorTypeOutput {
	return o
}

func (o AnalysisErrorTypeOutput) ToAnalysisErrorTypePtrOutput() AnalysisErrorTypePtrOutput {
	return o.ToAnalysisErrorTypePtrOutputWithContext(context.Background())
}

func (o AnalysisErrorTypeOutput) ToAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisErrorType) *AnalysisErrorType {
		return &v
	}).(AnalysisErrorTypePtrOutput)
}

func (o AnalysisErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisErrorTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisErrorType)(nil)).Elem()
}

func (o AnalysisErrorTypePtrOutput) ToAnalysisErrorTypePtrOutput() AnalysisErrorTypePtrOutput {
	return o
}

func (o AnalysisErrorTypePtrOutput) ToAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisErrorTypePtrOutput {
	return o
}

func (o AnalysisErrorTypePtrOutput) Elem() AnalysisErrorTypeOutput {
	return o.ApplyT(func(v *AnalysisErrorType) AnalysisErrorType {
		if v != nil {
			return *v
		}
		var ret AnalysisErrorType
		return ret
	}).(AnalysisErrorTypeOutput)
}

func (o AnalysisErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisErrorTypeInput is an input type that accepts values of the AnalysisErrorType enum
// A concrete instance of `AnalysisErrorTypeInput` can be one of the following:
//
//	AnalysisErrorTypeAccessDenied
//	AnalysisErrorTypeSourceNotFound
//	AnalysisErrorTypeDataSetNotFound
//	AnalysisErrorTypeInternalFailure
//	AnalysisErrorTypeParameterValueIncompatible
//	AnalysisErrorTypeParameterTypeInvalid
//	AnalysisErrorTypeParameterNotFound
//	AnalysisErrorTypeColumnTypeMismatch
//	AnalysisErrorTypeColumnGeographicRoleMismatch
//	AnalysisErrorTypeColumnReplacementMissing
type AnalysisErrorTypeInput interface {
	pulumi.Input

	ToAnalysisErrorTypeOutput() AnalysisErrorTypeOutput
	ToAnalysisErrorTypeOutputWithContext(context.Context) AnalysisErrorTypeOutput
}

var analysisErrorTypePtrType = reflect.TypeOf((**AnalysisErrorType)(nil)).Elem()

type AnalysisErrorTypePtrInput interface {
	pulumi.Input

	ToAnalysisErrorTypePtrOutput() AnalysisErrorTypePtrOutput
	ToAnalysisErrorTypePtrOutputWithContext(context.Context) AnalysisErrorTypePtrOutput
}

type analysisErrorTypePtr string

func AnalysisErrorTypePtr(v string) AnalysisErrorTypePtrInput {
	return (*analysisErrorTypePtr)(&v)
}

func (*analysisErrorTypePtr) ElementType() reflect.Type {
	return analysisErrorTypePtrType
}

func (in *analysisErrorTypePtr) ToAnalysisErrorTypePtrOutput() AnalysisErrorTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisErrorTypePtrOutput)
}

func (in *analysisErrorTypePtr) ToAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisErrorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisErrorTypePtrOutput)
}

type AnalysisFilterNullOption string

const (
	AnalysisFilterNullOptionAllValues    = AnalysisFilterNullOption("ALL_VALUES")
	AnalysisFilterNullOptionNullsOnly    = AnalysisFilterNullOption("NULLS_ONLY")
	AnalysisFilterNullOptionNonNullsOnly = AnalysisFilterNullOption("NON_NULLS_ONLY")
)

func (AnalysisFilterNullOption) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterNullOption)(nil)).Elem()
}

func (e AnalysisFilterNullOption) ToAnalysisFilterNullOptionOutput() AnalysisFilterNullOptionOutput {
	return pulumi.ToOutput(e).(AnalysisFilterNullOptionOutput)
}

func (e AnalysisFilterNullOption) ToAnalysisFilterNullOptionOutputWithContext(ctx context.Context) AnalysisFilterNullOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisFilterNullOptionOutput)
}

func (e AnalysisFilterNullOption) ToAnalysisFilterNullOptionPtrOutput() AnalysisFilterNullOptionPtrOutput {
	return e.ToAnalysisFilterNullOptionPtrOutputWithContext(context.Background())
}

func (e AnalysisFilterNullOption) ToAnalysisFilterNullOptionPtrOutputWithContext(ctx context.Context) AnalysisFilterNullOptionPtrOutput {
	return AnalysisFilterNullOption(e).ToAnalysisFilterNullOptionOutputWithContext(ctx).ToAnalysisFilterNullOptionPtrOutputWithContext(ctx)
}

func (e AnalysisFilterNullOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFilterNullOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFilterNullOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisFilterNullOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisFilterNullOptionOutput struct{ *pulumi.OutputState }

func (AnalysisFilterNullOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterNullOption)(nil)).Elem()
}

func (o AnalysisFilterNullOptionOutput) ToAnalysisFilterNullOptionOutput() AnalysisFilterNullOptionOutput {
	return o
}

func (o AnalysisFilterNullOptionOutput) ToAnalysisFilterNullOptionOutputWithContext(ctx context.Context) AnalysisFilterNullOptionOutput {
	return o
}

func (o AnalysisFilterNullOptionOutput) ToAnalysisFilterNullOptionPtrOutput() AnalysisFilterNullOptionPtrOutput {
	return o.ToAnalysisFilterNullOptionPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterNullOptionOutput) ToAnalysisFilterNullOptionPtrOutputWithContext(ctx context.Context) AnalysisFilterNullOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterNullOption) *AnalysisFilterNullOption {
		return &v
	}).(AnalysisFilterNullOptionPtrOutput)
}

func (o AnalysisFilterNullOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisFilterNullOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFilterNullOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisFilterNullOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterNullOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFilterNullOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisFilterNullOptionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterNullOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterNullOption)(nil)).Elem()
}

func (o AnalysisFilterNullOptionPtrOutput) ToAnalysisFilterNullOptionPtrOutput() AnalysisFilterNullOptionPtrOutput {
	return o
}

func (o AnalysisFilterNullOptionPtrOutput) ToAnalysisFilterNullOptionPtrOutputWithContext(ctx context.Context) AnalysisFilterNullOptionPtrOutput {
	return o
}

func (o AnalysisFilterNullOptionPtrOutput) Elem() AnalysisFilterNullOptionOutput {
	return o.ApplyT(func(v *AnalysisFilterNullOption) AnalysisFilterNullOption {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterNullOption
		return ret
	}).(AnalysisFilterNullOptionOutput)
}

func (o AnalysisFilterNullOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterNullOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisFilterNullOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisFilterNullOptionInput is an input type that accepts values of the AnalysisFilterNullOption enum
// A concrete instance of `AnalysisFilterNullOptionInput` can be one of the following:
//
//	AnalysisFilterNullOptionAllValues
//	AnalysisFilterNullOptionNullsOnly
//	AnalysisFilterNullOptionNonNullsOnly
type AnalysisFilterNullOptionInput interface {
	pulumi.Input

	ToAnalysisFilterNullOptionOutput() AnalysisFilterNullOptionOutput
	ToAnalysisFilterNullOptionOutputWithContext(context.Context) AnalysisFilterNullOptionOutput
}

var analysisFilterNullOptionPtrType = reflect.TypeOf((**AnalysisFilterNullOption)(nil)).Elem()

type AnalysisFilterNullOptionPtrInput interface {
	pulumi.Input

	ToAnalysisFilterNullOptionPtrOutput() AnalysisFilterNullOptionPtrOutput
	ToAnalysisFilterNullOptionPtrOutputWithContext(context.Context) AnalysisFilterNullOptionPtrOutput
}

type analysisFilterNullOptionPtr string

func AnalysisFilterNullOptionPtr(v string) AnalysisFilterNullOptionPtrInput {
	return (*analysisFilterNullOptionPtr)(&v)
}

func (*analysisFilterNullOptionPtr) ElementType() reflect.Type {
	return analysisFilterNullOptionPtrType
}

func (in *analysisFilterNullOptionPtr) ToAnalysisFilterNullOptionPtrOutput() AnalysisFilterNullOptionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisFilterNullOptionPtrOutput)
}

func (in *analysisFilterNullOptionPtr) ToAnalysisFilterNullOptionPtrOutputWithContext(ctx context.Context) AnalysisFilterNullOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisFilterNullOptionPtrOutput)
}

type AnalysisFilterVisualScope string

const (
	AnalysisFilterVisualScopeAllVisuals      = AnalysisFilterVisualScope("ALL_VISUALS")
	AnalysisFilterVisualScopeSelectedVisuals = AnalysisFilterVisualScope("SELECTED_VISUALS")
)

func (AnalysisFilterVisualScope) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterVisualScope)(nil)).Elem()
}

func (e AnalysisFilterVisualScope) ToAnalysisFilterVisualScopeOutput() AnalysisFilterVisualScopeOutput {
	return pulumi.ToOutput(e).(AnalysisFilterVisualScopeOutput)
}

func (e AnalysisFilterVisualScope) ToAnalysisFilterVisualScopeOutputWithContext(ctx context.Context) AnalysisFilterVisualScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisFilterVisualScopeOutput)
}

func (e AnalysisFilterVisualScope) ToAnalysisFilterVisualScopePtrOutput() AnalysisFilterVisualScopePtrOutput {
	return e.ToAnalysisFilterVisualScopePtrOutputWithContext(context.Background())
}

func (e AnalysisFilterVisualScope) ToAnalysisFilterVisualScopePtrOutputWithContext(ctx context.Context) AnalysisFilterVisualScopePtrOutput {
	return AnalysisFilterVisualScope(e).ToAnalysisFilterVisualScopeOutputWithContext(ctx).ToAnalysisFilterVisualScopePtrOutputWithContext(ctx)
}

func (e AnalysisFilterVisualScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFilterVisualScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFilterVisualScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisFilterVisualScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisFilterVisualScopeOutput struct{ *pulumi.OutputState }

func (AnalysisFilterVisualScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFilterVisualScope)(nil)).Elem()
}

func (o AnalysisFilterVisualScopeOutput) ToAnalysisFilterVisualScopeOutput() AnalysisFilterVisualScopeOutput {
	return o
}

func (o AnalysisFilterVisualScopeOutput) ToAnalysisFilterVisualScopeOutputWithContext(ctx context.Context) AnalysisFilterVisualScopeOutput {
	return o
}

func (o AnalysisFilterVisualScopeOutput) ToAnalysisFilterVisualScopePtrOutput() AnalysisFilterVisualScopePtrOutput {
	return o.ToAnalysisFilterVisualScopePtrOutputWithContext(context.Background())
}

func (o AnalysisFilterVisualScopeOutput) ToAnalysisFilterVisualScopePtrOutputWithContext(ctx context.Context) AnalysisFilterVisualScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFilterVisualScope) *AnalysisFilterVisualScope {
		return &v
	}).(AnalysisFilterVisualScopePtrOutput)
}

func (o AnalysisFilterVisualScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisFilterVisualScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFilterVisualScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisFilterVisualScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterVisualScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFilterVisualScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisFilterVisualScopePtrOutput struct{ *pulumi.OutputState }

func (AnalysisFilterVisualScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFilterVisualScope)(nil)).Elem()
}

func (o AnalysisFilterVisualScopePtrOutput) ToAnalysisFilterVisualScopePtrOutput() AnalysisFilterVisualScopePtrOutput {
	return o
}

func (o AnalysisFilterVisualScopePtrOutput) ToAnalysisFilterVisualScopePtrOutputWithContext(ctx context.Context) AnalysisFilterVisualScopePtrOutput {
	return o
}

func (o AnalysisFilterVisualScopePtrOutput) Elem() AnalysisFilterVisualScopeOutput {
	return o.ApplyT(func(v *AnalysisFilterVisualScope) AnalysisFilterVisualScope {
		if v != nil {
			return *v
		}
		var ret AnalysisFilterVisualScope
		return ret
	}).(AnalysisFilterVisualScopeOutput)
}

func (o AnalysisFilterVisualScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFilterVisualScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisFilterVisualScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisFilterVisualScopeInput is an input type that accepts values of the AnalysisFilterVisualScope enum
// A concrete instance of `AnalysisFilterVisualScopeInput` can be one of the following:
//
//	AnalysisFilterVisualScopeAllVisuals
//	AnalysisFilterVisualScopeSelectedVisuals
type AnalysisFilterVisualScopeInput interface {
	pulumi.Input

	ToAnalysisFilterVisualScopeOutput() AnalysisFilterVisualScopeOutput
	ToAnalysisFilterVisualScopeOutputWithContext(context.Context) AnalysisFilterVisualScopeOutput
}

var analysisFilterVisualScopePtrType = reflect.TypeOf((**AnalysisFilterVisualScope)(nil)).Elem()

type AnalysisFilterVisualScopePtrInput interface {
	pulumi.Input

	ToAnalysisFilterVisualScopePtrOutput() AnalysisFilterVisualScopePtrOutput
	ToAnalysisFilterVisualScopePtrOutputWithContext(context.Context) AnalysisFilterVisualScopePtrOutput
}

type analysisFilterVisualScopePtr string

func AnalysisFilterVisualScopePtr(v string) AnalysisFilterVisualScopePtrInput {
	return (*analysisFilterVisualScopePtr)(&v)
}

func (*analysisFilterVisualScopePtr) ElementType() reflect.Type {
	return analysisFilterVisualScopePtrType
}

func (in *analysisFilterVisualScopePtr) ToAnalysisFilterVisualScopePtrOutput() AnalysisFilterVisualScopePtrOutput {
	return pulumi.ToOutput(in).(AnalysisFilterVisualScopePtrOutput)
}

func (in *analysisFilterVisualScopePtr) ToAnalysisFilterVisualScopePtrOutputWithContext(ctx context.Context) AnalysisFilterVisualScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisFilterVisualScopePtrOutput)
}

type AnalysisFontDecoration string

const (
	AnalysisFontDecorationUnderline = AnalysisFontDecoration("UNDERLINE")
	AnalysisFontDecorationNone      = AnalysisFontDecoration("NONE")
)

func (AnalysisFontDecoration) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontDecoration)(nil)).Elem()
}

func (e AnalysisFontDecoration) ToAnalysisFontDecorationOutput() AnalysisFontDecorationOutput {
	return pulumi.ToOutput(e).(AnalysisFontDecorationOutput)
}

func (e AnalysisFontDecoration) ToAnalysisFontDecorationOutputWithContext(ctx context.Context) AnalysisFontDecorationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisFontDecorationOutput)
}

func (e AnalysisFontDecoration) ToAnalysisFontDecorationPtrOutput() AnalysisFontDecorationPtrOutput {
	return e.ToAnalysisFontDecorationPtrOutputWithContext(context.Background())
}

func (e AnalysisFontDecoration) ToAnalysisFontDecorationPtrOutputWithContext(ctx context.Context) AnalysisFontDecorationPtrOutput {
	return AnalysisFontDecoration(e).ToAnalysisFontDecorationOutputWithContext(ctx).ToAnalysisFontDecorationPtrOutputWithContext(ctx)
}

func (e AnalysisFontDecoration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFontDecoration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFontDecoration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisFontDecoration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisFontDecorationOutput struct{ *pulumi.OutputState }

func (AnalysisFontDecorationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontDecoration)(nil)).Elem()
}

func (o AnalysisFontDecorationOutput) ToAnalysisFontDecorationOutput() AnalysisFontDecorationOutput {
	return o
}

func (o AnalysisFontDecorationOutput) ToAnalysisFontDecorationOutputWithContext(ctx context.Context) AnalysisFontDecorationOutput {
	return o
}

func (o AnalysisFontDecorationOutput) ToAnalysisFontDecorationPtrOutput() AnalysisFontDecorationPtrOutput {
	return o.ToAnalysisFontDecorationPtrOutputWithContext(context.Background())
}

func (o AnalysisFontDecorationOutput) ToAnalysisFontDecorationPtrOutputWithContext(ctx context.Context) AnalysisFontDecorationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFontDecoration) *AnalysisFontDecoration {
		return &v
	}).(AnalysisFontDecorationPtrOutput)
}

func (o AnalysisFontDecorationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisFontDecorationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFontDecoration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisFontDecorationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFontDecorationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFontDecoration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisFontDecorationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisFontDecorationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFontDecoration)(nil)).Elem()
}

func (o AnalysisFontDecorationPtrOutput) ToAnalysisFontDecorationPtrOutput() AnalysisFontDecorationPtrOutput {
	return o
}

func (o AnalysisFontDecorationPtrOutput) ToAnalysisFontDecorationPtrOutputWithContext(ctx context.Context) AnalysisFontDecorationPtrOutput {
	return o
}

func (o AnalysisFontDecorationPtrOutput) Elem() AnalysisFontDecorationOutput {
	return o.ApplyT(func(v *AnalysisFontDecoration) AnalysisFontDecoration {
		if v != nil {
			return *v
		}
		var ret AnalysisFontDecoration
		return ret
	}).(AnalysisFontDecorationOutput)
}

func (o AnalysisFontDecorationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFontDecorationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisFontDecoration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisFontDecorationInput is an input type that accepts values of the AnalysisFontDecoration enum
// A concrete instance of `AnalysisFontDecorationInput` can be one of the following:
//
//	AnalysisFontDecorationUnderline
//	AnalysisFontDecorationNone
type AnalysisFontDecorationInput interface {
	pulumi.Input

	ToAnalysisFontDecorationOutput() AnalysisFontDecorationOutput
	ToAnalysisFontDecorationOutputWithContext(context.Context) AnalysisFontDecorationOutput
}

var analysisFontDecorationPtrType = reflect.TypeOf((**AnalysisFontDecoration)(nil)).Elem()

type AnalysisFontDecorationPtrInput interface {
	pulumi.Input

	ToAnalysisFontDecorationPtrOutput() AnalysisFontDecorationPtrOutput
	ToAnalysisFontDecorationPtrOutputWithContext(context.Context) AnalysisFontDecorationPtrOutput
}

type analysisFontDecorationPtr string

func AnalysisFontDecorationPtr(v string) AnalysisFontDecorationPtrInput {
	return (*analysisFontDecorationPtr)(&v)
}

func (*analysisFontDecorationPtr) ElementType() reflect.Type {
	return analysisFontDecorationPtrType
}

func (in *analysisFontDecorationPtr) ToAnalysisFontDecorationPtrOutput() AnalysisFontDecorationPtrOutput {
	return pulumi.ToOutput(in).(AnalysisFontDecorationPtrOutput)
}

func (in *analysisFontDecorationPtr) ToAnalysisFontDecorationPtrOutputWithContext(ctx context.Context) AnalysisFontDecorationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisFontDecorationPtrOutput)
}

type AnalysisFontStyle string

const (
	AnalysisFontStyleNormal = AnalysisFontStyle("NORMAL")
	AnalysisFontStyleItalic = AnalysisFontStyle("ITALIC")
)

func (AnalysisFontStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontStyle)(nil)).Elem()
}

func (e AnalysisFontStyle) ToAnalysisFontStyleOutput() AnalysisFontStyleOutput {
	return pulumi.ToOutput(e).(AnalysisFontStyleOutput)
}

func (e AnalysisFontStyle) ToAnalysisFontStyleOutputWithContext(ctx context.Context) AnalysisFontStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisFontStyleOutput)
}

func (e AnalysisFontStyle) ToAnalysisFontStylePtrOutput() AnalysisFontStylePtrOutput {
	return e.ToAnalysisFontStylePtrOutputWithContext(context.Background())
}

func (e AnalysisFontStyle) ToAnalysisFontStylePtrOutputWithContext(ctx context.Context) AnalysisFontStylePtrOutput {
	return AnalysisFontStyle(e).ToAnalysisFontStyleOutputWithContext(ctx).ToAnalysisFontStylePtrOutputWithContext(ctx)
}

func (e AnalysisFontStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFontStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFontStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisFontStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisFontStyleOutput struct{ *pulumi.OutputState }

func (AnalysisFontStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontStyle)(nil)).Elem()
}

func (o AnalysisFontStyleOutput) ToAnalysisFontStyleOutput() AnalysisFontStyleOutput {
	return o
}

func (o AnalysisFontStyleOutput) ToAnalysisFontStyleOutputWithContext(ctx context.Context) AnalysisFontStyleOutput {
	return o
}

func (o AnalysisFontStyleOutput) ToAnalysisFontStylePtrOutput() AnalysisFontStylePtrOutput {
	return o.ToAnalysisFontStylePtrOutputWithContext(context.Background())
}

func (o AnalysisFontStyleOutput) ToAnalysisFontStylePtrOutputWithContext(ctx context.Context) AnalysisFontStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFontStyle) *AnalysisFontStyle {
		return &v
	}).(AnalysisFontStylePtrOutput)
}

func (o AnalysisFontStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisFontStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFontStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisFontStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFontStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFontStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisFontStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisFontStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFontStyle)(nil)).Elem()
}

func (o AnalysisFontStylePtrOutput) ToAnalysisFontStylePtrOutput() AnalysisFontStylePtrOutput {
	return o
}

func (o AnalysisFontStylePtrOutput) ToAnalysisFontStylePtrOutputWithContext(ctx context.Context) AnalysisFontStylePtrOutput {
	return o
}

func (o AnalysisFontStylePtrOutput) Elem() AnalysisFontStyleOutput {
	return o.ApplyT(func(v *AnalysisFontStyle) AnalysisFontStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisFontStyle
		return ret
	}).(AnalysisFontStyleOutput)
}

func (o AnalysisFontStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFontStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisFontStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisFontStyleInput is an input type that accepts values of the AnalysisFontStyle enum
// A concrete instance of `AnalysisFontStyleInput` can be one of the following:
//
//	AnalysisFontStyleNormal
//	AnalysisFontStyleItalic
type AnalysisFontStyleInput interface {
	pulumi.Input

	ToAnalysisFontStyleOutput() AnalysisFontStyleOutput
	ToAnalysisFontStyleOutputWithContext(context.Context) AnalysisFontStyleOutput
}

var analysisFontStylePtrType = reflect.TypeOf((**AnalysisFontStyle)(nil)).Elem()

type AnalysisFontStylePtrInput interface {
	pulumi.Input

	ToAnalysisFontStylePtrOutput() AnalysisFontStylePtrOutput
	ToAnalysisFontStylePtrOutputWithContext(context.Context) AnalysisFontStylePtrOutput
}

type analysisFontStylePtr string

func AnalysisFontStylePtr(v string) AnalysisFontStylePtrInput {
	return (*analysisFontStylePtr)(&v)
}

func (*analysisFontStylePtr) ElementType() reflect.Type {
	return analysisFontStylePtrType
}

func (in *analysisFontStylePtr) ToAnalysisFontStylePtrOutput() AnalysisFontStylePtrOutput {
	return pulumi.ToOutput(in).(AnalysisFontStylePtrOutput)
}

func (in *analysisFontStylePtr) ToAnalysisFontStylePtrOutputWithContext(ctx context.Context) AnalysisFontStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisFontStylePtrOutput)
}

type AnalysisFontWeightName string

const (
	AnalysisFontWeightNameNormal = AnalysisFontWeightName("NORMAL")
	AnalysisFontWeightNameBold   = AnalysisFontWeightName("BOLD")
)

func (AnalysisFontWeightName) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontWeightName)(nil)).Elem()
}

func (e AnalysisFontWeightName) ToAnalysisFontWeightNameOutput() AnalysisFontWeightNameOutput {
	return pulumi.ToOutput(e).(AnalysisFontWeightNameOutput)
}

func (e AnalysisFontWeightName) ToAnalysisFontWeightNameOutputWithContext(ctx context.Context) AnalysisFontWeightNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisFontWeightNameOutput)
}

func (e AnalysisFontWeightName) ToAnalysisFontWeightNamePtrOutput() AnalysisFontWeightNamePtrOutput {
	return e.ToAnalysisFontWeightNamePtrOutputWithContext(context.Background())
}

func (e AnalysisFontWeightName) ToAnalysisFontWeightNamePtrOutputWithContext(ctx context.Context) AnalysisFontWeightNamePtrOutput {
	return AnalysisFontWeightName(e).ToAnalysisFontWeightNameOutputWithContext(ctx).ToAnalysisFontWeightNamePtrOutputWithContext(ctx)
}

func (e AnalysisFontWeightName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFontWeightName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFontWeightName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisFontWeightName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisFontWeightNameOutput struct{ *pulumi.OutputState }

func (AnalysisFontWeightNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFontWeightName)(nil)).Elem()
}

func (o AnalysisFontWeightNameOutput) ToAnalysisFontWeightNameOutput() AnalysisFontWeightNameOutput {
	return o
}

func (o AnalysisFontWeightNameOutput) ToAnalysisFontWeightNameOutputWithContext(ctx context.Context) AnalysisFontWeightNameOutput {
	return o
}

func (o AnalysisFontWeightNameOutput) ToAnalysisFontWeightNamePtrOutput() AnalysisFontWeightNamePtrOutput {
	return o.ToAnalysisFontWeightNamePtrOutputWithContext(context.Background())
}

func (o AnalysisFontWeightNameOutput) ToAnalysisFontWeightNamePtrOutputWithContext(ctx context.Context) AnalysisFontWeightNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFontWeightName) *AnalysisFontWeightName {
		return &v
	}).(AnalysisFontWeightNamePtrOutput)
}

func (o AnalysisFontWeightNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisFontWeightNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFontWeightName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisFontWeightNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFontWeightNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFontWeightName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisFontWeightNamePtrOutput struct{ *pulumi.OutputState }

func (AnalysisFontWeightNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFontWeightName)(nil)).Elem()
}

func (o AnalysisFontWeightNamePtrOutput) ToAnalysisFontWeightNamePtrOutput() AnalysisFontWeightNamePtrOutput {
	return o
}

func (o AnalysisFontWeightNamePtrOutput) ToAnalysisFontWeightNamePtrOutputWithContext(ctx context.Context) AnalysisFontWeightNamePtrOutput {
	return o
}

func (o AnalysisFontWeightNamePtrOutput) Elem() AnalysisFontWeightNameOutput {
	return o.ApplyT(func(v *AnalysisFontWeightName) AnalysisFontWeightName {
		if v != nil {
			return *v
		}
		var ret AnalysisFontWeightName
		return ret
	}).(AnalysisFontWeightNameOutput)
}

func (o AnalysisFontWeightNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFontWeightNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisFontWeightName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisFontWeightNameInput is an input type that accepts values of the AnalysisFontWeightName enum
// A concrete instance of `AnalysisFontWeightNameInput` can be one of the following:
//
//	AnalysisFontWeightNameNormal
//	AnalysisFontWeightNameBold
type AnalysisFontWeightNameInput interface {
	pulumi.Input

	ToAnalysisFontWeightNameOutput() AnalysisFontWeightNameOutput
	ToAnalysisFontWeightNameOutputWithContext(context.Context) AnalysisFontWeightNameOutput
}

var analysisFontWeightNamePtrType = reflect.TypeOf((**AnalysisFontWeightName)(nil)).Elem()

type AnalysisFontWeightNamePtrInput interface {
	pulumi.Input

	ToAnalysisFontWeightNamePtrOutput() AnalysisFontWeightNamePtrOutput
	ToAnalysisFontWeightNamePtrOutputWithContext(context.Context) AnalysisFontWeightNamePtrOutput
}

type analysisFontWeightNamePtr string

func AnalysisFontWeightNamePtr(v string) AnalysisFontWeightNamePtrInput {
	return (*analysisFontWeightNamePtr)(&v)
}

func (*analysisFontWeightNamePtr) ElementType() reflect.Type {
	return analysisFontWeightNamePtrType
}

func (in *analysisFontWeightNamePtr) ToAnalysisFontWeightNamePtrOutput() AnalysisFontWeightNamePtrOutput {
	return pulumi.ToOutput(in).(AnalysisFontWeightNamePtrOutput)
}

func (in *analysisFontWeightNamePtr) ToAnalysisFontWeightNamePtrOutputWithContext(ctx context.Context) AnalysisFontWeightNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisFontWeightNamePtrOutput)
}

type AnalysisForecastComputationSeasonality string

const (
	AnalysisForecastComputationSeasonalityAutomatic = AnalysisForecastComputationSeasonality("AUTOMATIC")
	AnalysisForecastComputationSeasonalityCustom    = AnalysisForecastComputationSeasonality("CUSTOM")
)

func (AnalysisForecastComputationSeasonality) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisForecastComputationSeasonality)(nil)).Elem()
}

func (e AnalysisForecastComputationSeasonality) ToAnalysisForecastComputationSeasonalityOutput() AnalysisForecastComputationSeasonalityOutput {
	return pulumi.ToOutput(e).(AnalysisForecastComputationSeasonalityOutput)
}

func (e AnalysisForecastComputationSeasonality) ToAnalysisForecastComputationSeasonalityOutputWithContext(ctx context.Context) AnalysisForecastComputationSeasonalityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisForecastComputationSeasonalityOutput)
}

func (e AnalysisForecastComputationSeasonality) ToAnalysisForecastComputationSeasonalityPtrOutput() AnalysisForecastComputationSeasonalityPtrOutput {
	return e.ToAnalysisForecastComputationSeasonalityPtrOutputWithContext(context.Background())
}

func (e AnalysisForecastComputationSeasonality) ToAnalysisForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) AnalysisForecastComputationSeasonalityPtrOutput {
	return AnalysisForecastComputationSeasonality(e).ToAnalysisForecastComputationSeasonalityOutputWithContext(ctx).ToAnalysisForecastComputationSeasonalityPtrOutputWithContext(ctx)
}

func (e AnalysisForecastComputationSeasonality) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisForecastComputationSeasonality) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisForecastComputationSeasonality) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisForecastComputationSeasonality) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisForecastComputationSeasonalityOutput struct{ *pulumi.OutputState }

func (AnalysisForecastComputationSeasonalityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisForecastComputationSeasonality)(nil)).Elem()
}

func (o AnalysisForecastComputationSeasonalityOutput) ToAnalysisForecastComputationSeasonalityOutput() AnalysisForecastComputationSeasonalityOutput {
	return o
}

func (o AnalysisForecastComputationSeasonalityOutput) ToAnalysisForecastComputationSeasonalityOutputWithContext(ctx context.Context) AnalysisForecastComputationSeasonalityOutput {
	return o
}

func (o AnalysisForecastComputationSeasonalityOutput) ToAnalysisForecastComputationSeasonalityPtrOutput() AnalysisForecastComputationSeasonalityPtrOutput {
	return o.ToAnalysisForecastComputationSeasonalityPtrOutputWithContext(context.Background())
}

func (o AnalysisForecastComputationSeasonalityOutput) ToAnalysisForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) AnalysisForecastComputationSeasonalityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisForecastComputationSeasonality) *AnalysisForecastComputationSeasonality {
		return &v
	}).(AnalysisForecastComputationSeasonalityPtrOutput)
}

func (o AnalysisForecastComputationSeasonalityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisForecastComputationSeasonalityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisForecastComputationSeasonality) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisForecastComputationSeasonalityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisForecastComputationSeasonalityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisForecastComputationSeasonality) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisForecastComputationSeasonalityPtrOutput struct{ *pulumi.OutputState }

func (AnalysisForecastComputationSeasonalityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisForecastComputationSeasonality)(nil)).Elem()
}

func (o AnalysisForecastComputationSeasonalityPtrOutput) ToAnalysisForecastComputationSeasonalityPtrOutput() AnalysisForecastComputationSeasonalityPtrOutput {
	return o
}

func (o AnalysisForecastComputationSeasonalityPtrOutput) ToAnalysisForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) AnalysisForecastComputationSeasonalityPtrOutput {
	return o
}

func (o AnalysisForecastComputationSeasonalityPtrOutput) Elem() AnalysisForecastComputationSeasonalityOutput {
	return o.ApplyT(func(v *AnalysisForecastComputationSeasonality) AnalysisForecastComputationSeasonality {
		if v != nil {
			return *v
		}
		var ret AnalysisForecastComputationSeasonality
		return ret
	}).(AnalysisForecastComputationSeasonalityOutput)
}

func (o AnalysisForecastComputationSeasonalityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisForecastComputationSeasonalityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisForecastComputationSeasonality) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisForecastComputationSeasonalityInput is an input type that accepts values of the AnalysisForecastComputationSeasonality enum
// A concrete instance of `AnalysisForecastComputationSeasonalityInput` can be one of the following:
//
//	AnalysisForecastComputationSeasonalityAutomatic
//	AnalysisForecastComputationSeasonalityCustom
type AnalysisForecastComputationSeasonalityInput interface {
	pulumi.Input

	ToAnalysisForecastComputationSeasonalityOutput() AnalysisForecastComputationSeasonalityOutput
	ToAnalysisForecastComputationSeasonalityOutputWithContext(context.Context) AnalysisForecastComputationSeasonalityOutput
}

var analysisForecastComputationSeasonalityPtrType = reflect.TypeOf((**AnalysisForecastComputationSeasonality)(nil)).Elem()

type AnalysisForecastComputationSeasonalityPtrInput interface {
	pulumi.Input

	ToAnalysisForecastComputationSeasonalityPtrOutput() AnalysisForecastComputationSeasonalityPtrOutput
	ToAnalysisForecastComputationSeasonalityPtrOutputWithContext(context.Context) AnalysisForecastComputationSeasonalityPtrOutput
}

type analysisForecastComputationSeasonalityPtr string

func AnalysisForecastComputationSeasonalityPtr(v string) AnalysisForecastComputationSeasonalityPtrInput {
	return (*analysisForecastComputationSeasonalityPtr)(&v)
}

func (*analysisForecastComputationSeasonalityPtr) ElementType() reflect.Type {
	return analysisForecastComputationSeasonalityPtrType
}

func (in *analysisForecastComputationSeasonalityPtr) ToAnalysisForecastComputationSeasonalityPtrOutput() AnalysisForecastComputationSeasonalityPtrOutput {
	return pulumi.ToOutput(in).(AnalysisForecastComputationSeasonalityPtrOutput)
}

func (in *analysisForecastComputationSeasonalityPtr) ToAnalysisForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) AnalysisForecastComputationSeasonalityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisForecastComputationSeasonalityPtrOutput)
}

type AnalysisFunnelChartMeasureDataLabelStyle string

const (
	AnalysisFunnelChartMeasureDataLabelStyleValueOnly                         = AnalysisFunnelChartMeasureDataLabelStyle("VALUE_ONLY")
	AnalysisFunnelChartMeasureDataLabelStylePercentageByFirstStage            = AnalysisFunnelChartMeasureDataLabelStyle("PERCENTAGE_BY_FIRST_STAGE")
	AnalysisFunnelChartMeasureDataLabelStylePercentageByPreviousStage         = AnalysisFunnelChartMeasureDataLabelStyle("PERCENTAGE_BY_PREVIOUS_STAGE")
	AnalysisFunnelChartMeasureDataLabelStyleValueAndPercentageByFirstStage    = AnalysisFunnelChartMeasureDataLabelStyle("VALUE_AND_PERCENTAGE_BY_FIRST_STAGE")
	AnalysisFunnelChartMeasureDataLabelStyleValueAndPercentageByPreviousStage = AnalysisFunnelChartMeasureDataLabelStyle("VALUE_AND_PERCENTAGE_BY_PREVIOUS_STAGE")
)

func (AnalysisFunnelChartMeasureDataLabelStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartMeasureDataLabelStyle)(nil)).Elem()
}

func (e AnalysisFunnelChartMeasureDataLabelStyle) ToAnalysisFunnelChartMeasureDataLabelStyleOutput() AnalysisFunnelChartMeasureDataLabelStyleOutput {
	return pulumi.ToOutput(e).(AnalysisFunnelChartMeasureDataLabelStyleOutput)
}

func (e AnalysisFunnelChartMeasureDataLabelStyle) ToAnalysisFunnelChartMeasureDataLabelStyleOutputWithContext(ctx context.Context) AnalysisFunnelChartMeasureDataLabelStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisFunnelChartMeasureDataLabelStyleOutput)
}

func (e AnalysisFunnelChartMeasureDataLabelStyle) ToAnalysisFunnelChartMeasureDataLabelStylePtrOutput() AnalysisFunnelChartMeasureDataLabelStylePtrOutput {
	return e.ToAnalysisFunnelChartMeasureDataLabelStylePtrOutputWithContext(context.Background())
}

func (e AnalysisFunnelChartMeasureDataLabelStyle) ToAnalysisFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) AnalysisFunnelChartMeasureDataLabelStylePtrOutput {
	return AnalysisFunnelChartMeasureDataLabelStyle(e).ToAnalysisFunnelChartMeasureDataLabelStyleOutputWithContext(ctx).ToAnalysisFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx)
}

func (e AnalysisFunnelChartMeasureDataLabelStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFunnelChartMeasureDataLabelStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisFunnelChartMeasureDataLabelStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisFunnelChartMeasureDataLabelStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisFunnelChartMeasureDataLabelStyleOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartMeasureDataLabelStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisFunnelChartMeasureDataLabelStyle)(nil)).Elem()
}

func (o AnalysisFunnelChartMeasureDataLabelStyleOutput) ToAnalysisFunnelChartMeasureDataLabelStyleOutput() AnalysisFunnelChartMeasureDataLabelStyleOutput {
	return o
}

func (o AnalysisFunnelChartMeasureDataLabelStyleOutput) ToAnalysisFunnelChartMeasureDataLabelStyleOutputWithContext(ctx context.Context) AnalysisFunnelChartMeasureDataLabelStyleOutput {
	return o
}

func (o AnalysisFunnelChartMeasureDataLabelStyleOutput) ToAnalysisFunnelChartMeasureDataLabelStylePtrOutput() AnalysisFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ToAnalysisFunnelChartMeasureDataLabelStylePtrOutputWithContext(context.Background())
}

func (o AnalysisFunnelChartMeasureDataLabelStyleOutput) ToAnalysisFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) AnalysisFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisFunnelChartMeasureDataLabelStyle) *AnalysisFunnelChartMeasureDataLabelStyle {
		return &v
	}).(AnalysisFunnelChartMeasureDataLabelStylePtrOutput)
}

func (o AnalysisFunnelChartMeasureDataLabelStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisFunnelChartMeasureDataLabelStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFunnelChartMeasureDataLabelStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisFunnelChartMeasureDataLabelStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFunnelChartMeasureDataLabelStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisFunnelChartMeasureDataLabelStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisFunnelChartMeasureDataLabelStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisFunnelChartMeasureDataLabelStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisFunnelChartMeasureDataLabelStyle)(nil)).Elem()
}

func (o AnalysisFunnelChartMeasureDataLabelStylePtrOutput) ToAnalysisFunnelChartMeasureDataLabelStylePtrOutput() AnalysisFunnelChartMeasureDataLabelStylePtrOutput {
	return o
}

func (o AnalysisFunnelChartMeasureDataLabelStylePtrOutput) ToAnalysisFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) AnalysisFunnelChartMeasureDataLabelStylePtrOutput {
	return o
}

func (o AnalysisFunnelChartMeasureDataLabelStylePtrOutput) Elem() AnalysisFunnelChartMeasureDataLabelStyleOutput {
	return o.ApplyT(func(v *AnalysisFunnelChartMeasureDataLabelStyle) AnalysisFunnelChartMeasureDataLabelStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisFunnelChartMeasureDataLabelStyle
		return ret
	}).(AnalysisFunnelChartMeasureDataLabelStyleOutput)
}

func (o AnalysisFunnelChartMeasureDataLabelStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisFunnelChartMeasureDataLabelStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisFunnelChartMeasureDataLabelStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisFunnelChartMeasureDataLabelStyleInput is an input type that accepts values of the AnalysisFunnelChartMeasureDataLabelStyle enum
// A concrete instance of `AnalysisFunnelChartMeasureDataLabelStyleInput` can be one of the following:
//
//	AnalysisFunnelChartMeasureDataLabelStyleValueOnly
//	AnalysisFunnelChartMeasureDataLabelStylePercentageByFirstStage
//	AnalysisFunnelChartMeasureDataLabelStylePercentageByPreviousStage
//	AnalysisFunnelChartMeasureDataLabelStyleValueAndPercentageByFirstStage
//	AnalysisFunnelChartMeasureDataLabelStyleValueAndPercentageByPreviousStage
type AnalysisFunnelChartMeasureDataLabelStyleInput interface {
	pulumi.Input

	ToAnalysisFunnelChartMeasureDataLabelStyleOutput() AnalysisFunnelChartMeasureDataLabelStyleOutput
	ToAnalysisFunnelChartMeasureDataLabelStyleOutputWithContext(context.Context) AnalysisFunnelChartMeasureDataLabelStyleOutput
}

var analysisFunnelChartMeasureDataLabelStylePtrType = reflect.TypeOf((**AnalysisFunnelChartMeasureDataLabelStyle)(nil)).Elem()

type AnalysisFunnelChartMeasureDataLabelStylePtrInput interface {
	pulumi.Input

	ToAnalysisFunnelChartMeasureDataLabelStylePtrOutput() AnalysisFunnelChartMeasureDataLabelStylePtrOutput
	ToAnalysisFunnelChartMeasureDataLabelStylePtrOutputWithContext(context.Context) AnalysisFunnelChartMeasureDataLabelStylePtrOutput
}

type analysisFunnelChartMeasureDataLabelStylePtr string

func AnalysisFunnelChartMeasureDataLabelStylePtr(v string) AnalysisFunnelChartMeasureDataLabelStylePtrInput {
	return (*analysisFunnelChartMeasureDataLabelStylePtr)(&v)
}

func (*analysisFunnelChartMeasureDataLabelStylePtr) ElementType() reflect.Type {
	return analysisFunnelChartMeasureDataLabelStylePtrType
}

func (in *analysisFunnelChartMeasureDataLabelStylePtr) ToAnalysisFunnelChartMeasureDataLabelStylePtrOutput() AnalysisFunnelChartMeasureDataLabelStylePtrOutput {
	return pulumi.ToOutput(in).(AnalysisFunnelChartMeasureDataLabelStylePtrOutput)
}

func (in *analysisFunnelChartMeasureDataLabelStylePtr) ToAnalysisFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) AnalysisFunnelChartMeasureDataLabelStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisFunnelChartMeasureDataLabelStylePtrOutput)
}

type AnalysisGeospatialSelectedPointStyle string

const (
	AnalysisGeospatialSelectedPointStylePoint   = AnalysisGeospatialSelectedPointStyle("POINT")
	AnalysisGeospatialSelectedPointStyleCluster = AnalysisGeospatialSelectedPointStyle("CLUSTER")
	AnalysisGeospatialSelectedPointStyleHeatmap = AnalysisGeospatialSelectedPointStyle("HEATMAP")
)

func (AnalysisGeospatialSelectedPointStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialSelectedPointStyle)(nil)).Elem()
}

func (e AnalysisGeospatialSelectedPointStyle) ToAnalysisGeospatialSelectedPointStyleOutput() AnalysisGeospatialSelectedPointStyleOutput {
	return pulumi.ToOutput(e).(AnalysisGeospatialSelectedPointStyleOutput)
}

func (e AnalysisGeospatialSelectedPointStyle) ToAnalysisGeospatialSelectedPointStyleOutputWithContext(ctx context.Context) AnalysisGeospatialSelectedPointStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisGeospatialSelectedPointStyleOutput)
}

func (e AnalysisGeospatialSelectedPointStyle) ToAnalysisGeospatialSelectedPointStylePtrOutput() AnalysisGeospatialSelectedPointStylePtrOutput {
	return e.ToAnalysisGeospatialSelectedPointStylePtrOutputWithContext(context.Background())
}

func (e AnalysisGeospatialSelectedPointStyle) ToAnalysisGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) AnalysisGeospatialSelectedPointStylePtrOutput {
	return AnalysisGeospatialSelectedPointStyle(e).ToAnalysisGeospatialSelectedPointStyleOutputWithContext(ctx).ToAnalysisGeospatialSelectedPointStylePtrOutputWithContext(ctx)
}

func (e AnalysisGeospatialSelectedPointStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisGeospatialSelectedPointStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisGeospatialSelectedPointStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisGeospatialSelectedPointStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisGeospatialSelectedPointStyleOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialSelectedPointStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisGeospatialSelectedPointStyle)(nil)).Elem()
}

func (o AnalysisGeospatialSelectedPointStyleOutput) ToAnalysisGeospatialSelectedPointStyleOutput() AnalysisGeospatialSelectedPointStyleOutput {
	return o
}

func (o AnalysisGeospatialSelectedPointStyleOutput) ToAnalysisGeospatialSelectedPointStyleOutputWithContext(ctx context.Context) AnalysisGeospatialSelectedPointStyleOutput {
	return o
}

func (o AnalysisGeospatialSelectedPointStyleOutput) ToAnalysisGeospatialSelectedPointStylePtrOutput() AnalysisGeospatialSelectedPointStylePtrOutput {
	return o.ToAnalysisGeospatialSelectedPointStylePtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialSelectedPointStyleOutput) ToAnalysisGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) AnalysisGeospatialSelectedPointStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisGeospatialSelectedPointStyle) *AnalysisGeospatialSelectedPointStyle {
		return &v
	}).(AnalysisGeospatialSelectedPointStylePtrOutput)
}

func (o AnalysisGeospatialSelectedPointStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisGeospatialSelectedPointStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisGeospatialSelectedPointStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisGeospatialSelectedPointStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialSelectedPointStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisGeospatialSelectedPointStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisGeospatialSelectedPointStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisGeospatialSelectedPointStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisGeospatialSelectedPointStyle)(nil)).Elem()
}

func (o AnalysisGeospatialSelectedPointStylePtrOutput) ToAnalysisGeospatialSelectedPointStylePtrOutput() AnalysisGeospatialSelectedPointStylePtrOutput {
	return o
}

func (o AnalysisGeospatialSelectedPointStylePtrOutput) ToAnalysisGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) AnalysisGeospatialSelectedPointStylePtrOutput {
	return o
}

func (o AnalysisGeospatialSelectedPointStylePtrOutput) Elem() AnalysisGeospatialSelectedPointStyleOutput {
	return o.ApplyT(func(v *AnalysisGeospatialSelectedPointStyle) AnalysisGeospatialSelectedPointStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisGeospatialSelectedPointStyle
		return ret
	}).(AnalysisGeospatialSelectedPointStyleOutput)
}

func (o AnalysisGeospatialSelectedPointStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisGeospatialSelectedPointStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisGeospatialSelectedPointStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisGeospatialSelectedPointStyleInput is an input type that accepts values of the AnalysisGeospatialSelectedPointStyle enum
// A concrete instance of `AnalysisGeospatialSelectedPointStyleInput` can be one of the following:
//
//	AnalysisGeospatialSelectedPointStylePoint
//	AnalysisGeospatialSelectedPointStyleCluster
//	AnalysisGeospatialSelectedPointStyleHeatmap
type AnalysisGeospatialSelectedPointStyleInput interface {
	pulumi.Input

	ToAnalysisGeospatialSelectedPointStyleOutput() AnalysisGeospatialSelectedPointStyleOutput
	ToAnalysisGeospatialSelectedPointStyleOutputWithContext(context.Context) AnalysisGeospatialSelectedPointStyleOutput
}

var analysisGeospatialSelectedPointStylePtrType = reflect.TypeOf((**AnalysisGeospatialSelectedPointStyle)(nil)).Elem()

type AnalysisGeospatialSelectedPointStylePtrInput interface {
	pulumi.Input

	ToAnalysisGeospatialSelectedPointStylePtrOutput() AnalysisGeospatialSelectedPointStylePtrOutput
	ToAnalysisGeospatialSelectedPointStylePtrOutputWithContext(context.Context) AnalysisGeospatialSelectedPointStylePtrOutput
}

type analysisGeospatialSelectedPointStylePtr string

func AnalysisGeospatialSelectedPointStylePtr(v string) AnalysisGeospatialSelectedPointStylePtrInput {
	return (*analysisGeospatialSelectedPointStylePtr)(&v)
}

func (*analysisGeospatialSelectedPointStylePtr) ElementType() reflect.Type {
	return analysisGeospatialSelectedPointStylePtrType
}

func (in *analysisGeospatialSelectedPointStylePtr) ToAnalysisGeospatialSelectedPointStylePtrOutput() AnalysisGeospatialSelectedPointStylePtrOutput {
	return pulumi.ToOutput(in).(AnalysisGeospatialSelectedPointStylePtrOutput)
}

func (in *analysisGeospatialSelectedPointStylePtr) ToAnalysisGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) AnalysisGeospatialSelectedPointStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisGeospatialSelectedPointStylePtrOutput)
}

type AnalysisHistogramBinType string

const (
	AnalysisHistogramBinTypeBinCount = AnalysisHistogramBinType("BIN_COUNT")
	AnalysisHistogramBinTypeBinWidth = AnalysisHistogramBinType("BIN_WIDTH")
)

func (AnalysisHistogramBinType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramBinType)(nil)).Elem()
}

func (e AnalysisHistogramBinType) ToAnalysisHistogramBinTypeOutput() AnalysisHistogramBinTypeOutput {
	return pulumi.ToOutput(e).(AnalysisHistogramBinTypeOutput)
}

func (e AnalysisHistogramBinType) ToAnalysisHistogramBinTypeOutputWithContext(ctx context.Context) AnalysisHistogramBinTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisHistogramBinTypeOutput)
}

func (e AnalysisHistogramBinType) ToAnalysisHistogramBinTypePtrOutput() AnalysisHistogramBinTypePtrOutput {
	return e.ToAnalysisHistogramBinTypePtrOutputWithContext(context.Background())
}

func (e AnalysisHistogramBinType) ToAnalysisHistogramBinTypePtrOutputWithContext(ctx context.Context) AnalysisHistogramBinTypePtrOutput {
	return AnalysisHistogramBinType(e).ToAnalysisHistogramBinTypeOutputWithContext(ctx).ToAnalysisHistogramBinTypePtrOutputWithContext(ctx)
}

func (e AnalysisHistogramBinType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisHistogramBinType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisHistogramBinType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisHistogramBinType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisHistogramBinTypeOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramBinTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHistogramBinType)(nil)).Elem()
}

func (o AnalysisHistogramBinTypeOutput) ToAnalysisHistogramBinTypeOutput() AnalysisHistogramBinTypeOutput {
	return o
}

func (o AnalysisHistogramBinTypeOutput) ToAnalysisHistogramBinTypeOutputWithContext(ctx context.Context) AnalysisHistogramBinTypeOutput {
	return o
}

func (o AnalysisHistogramBinTypeOutput) ToAnalysisHistogramBinTypePtrOutput() AnalysisHistogramBinTypePtrOutput {
	return o.ToAnalysisHistogramBinTypePtrOutputWithContext(context.Background())
}

func (o AnalysisHistogramBinTypeOutput) ToAnalysisHistogramBinTypePtrOutputWithContext(ctx context.Context) AnalysisHistogramBinTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHistogramBinType) *AnalysisHistogramBinType {
		return &v
	}).(AnalysisHistogramBinTypePtrOutput)
}

func (o AnalysisHistogramBinTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisHistogramBinTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisHistogramBinType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisHistogramBinTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisHistogramBinTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisHistogramBinType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisHistogramBinTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisHistogramBinTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHistogramBinType)(nil)).Elem()
}

func (o AnalysisHistogramBinTypePtrOutput) ToAnalysisHistogramBinTypePtrOutput() AnalysisHistogramBinTypePtrOutput {
	return o
}

func (o AnalysisHistogramBinTypePtrOutput) ToAnalysisHistogramBinTypePtrOutputWithContext(ctx context.Context) AnalysisHistogramBinTypePtrOutput {
	return o
}

func (o AnalysisHistogramBinTypePtrOutput) Elem() AnalysisHistogramBinTypeOutput {
	return o.ApplyT(func(v *AnalysisHistogramBinType) AnalysisHistogramBinType {
		if v != nil {
			return *v
		}
		var ret AnalysisHistogramBinType
		return ret
	}).(AnalysisHistogramBinTypeOutput)
}

func (o AnalysisHistogramBinTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisHistogramBinTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisHistogramBinType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisHistogramBinTypeInput is an input type that accepts values of the AnalysisHistogramBinType enum
// A concrete instance of `AnalysisHistogramBinTypeInput` can be one of the following:
//
//	AnalysisHistogramBinTypeBinCount
//	AnalysisHistogramBinTypeBinWidth
type AnalysisHistogramBinTypeInput interface {
	pulumi.Input

	ToAnalysisHistogramBinTypeOutput() AnalysisHistogramBinTypeOutput
	ToAnalysisHistogramBinTypeOutputWithContext(context.Context) AnalysisHistogramBinTypeOutput
}

var analysisHistogramBinTypePtrType = reflect.TypeOf((**AnalysisHistogramBinType)(nil)).Elem()

type AnalysisHistogramBinTypePtrInput interface {
	pulumi.Input

	ToAnalysisHistogramBinTypePtrOutput() AnalysisHistogramBinTypePtrOutput
	ToAnalysisHistogramBinTypePtrOutputWithContext(context.Context) AnalysisHistogramBinTypePtrOutput
}

type analysisHistogramBinTypePtr string

func AnalysisHistogramBinTypePtr(v string) AnalysisHistogramBinTypePtrInput {
	return (*analysisHistogramBinTypePtr)(&v)
}

func (*analysisHistogramBinTypePtr) ElementType() reflect.Type {
	return analysisHistogramBinTypePtrType
}

func (in *analysisHistogramBinTypePtr) ToAnalysisHistogramBinTypePtrOutput() AnalysisHistogramBinTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisHistogramBinTypePtrOutput)
}

func (in *analysisHistogramBinTypePtr) ToAnalysisHistogramBinTypePtrOutputWithContext(ctx context.Context) AnalysisHistogramBinTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisHistogramBinTypePtrOutput)
}

type AnalysisHorizontalTextAlignment string

const (
	AnalysisHorizontalTextAlignmentLeft   = AnalysisHorizontalTextAlignment("LEFT")
	AnalysisHorizontalTextAlignmentCenter = AnalysisHorizontalTextAlignment("CENTER")
	AnalysisHorizontalTextAlignmentRight  = AnalysisHorizontalTextAlignment("RIGHT")
	AnalysisHorizontalTextAlignmentAuto   = AnalysisHorizontalTextAlignment("AUTO")
)

func (AnalysisHorizontalTextAlignment) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHorizontalTextAlignment)(nil)).Elem()
}

func (e AnalysisHorizontalTextAlignment) ToAnalysisHorizontalTextAlignmentOutput() AnalysisHorizontalTextAlignmentOutput {
	return pulumi.ToOutput(e).(AnalysisHorizontalTextAlignmentOutput)
}

func (e AnalysisHorizontalTextAlignment) ToAnalysisHorizontalTextAlignmentOutputWithContext(ctx context.Context) AnalysisHorizontalTextAlignmentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisHorizontalTextAlignmentOutput)
}

func (e AnalysisHorizontalTextAlignment) ToAnalysisHorizontalTextAlignmentPtrOutput() AnalysisHorizontalTextAlignmentPtrOutput {
	return e.ToAnalysisHorizontalTextAlignmentPtrOutputWithContext(context.Background())
}

func (e AnalysisHorizontalTextAlignment) ToAnalysisHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) AnalysisHorizontalTextAlignmentPtrOutput {
	return AnalysisHorizontalTextAlignment(e).ToAnalysisHorizontalTextAlignmentOutputWithContext(ctx).ToAnalysisHorizontalTextAlignmentPtrOutputWithContext(ctx)
}

func (e AnalysisHorizontalTextAlignment) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisHorizontalTextAlignment) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisHorizontalTextAlignment) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisHorizontalTextAlignment) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisHorizontalTextAlignmentOutput struct{ *pulumi.OutputState }

func (AnalysisHorizontalTextAlignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisHorizontalTextAlignment)(nil)).Elem()
}

func (o AnalysisHorizontalTextAlignmentOutput) ToAnalysisHorizontalTextAlignmentOutput() AnalysisHorizontalTextAlignmentOutput {
	return o
}

func (o AnalysisHorizontalTextAlignmentOutput) ToAnalysisHorizontalTextAlignmentOutputWithContext(ctx context.Context) AnalysisHorizontalTextAlignmentOutput {
	return o
}

func (o AnalysisHorizontalTextAlignmentOutput) ToAnalysisHorizontalTextAlignmentPtrOutput() AnalysisHorizontalTextAlignmentPtrOutput {
	return o.ToAnalysisHorizontalTextAlignmentPtrOutputWithContext(context.Background())
}

func (o AnalysisHorizontalTextAlignmentOutput) ToAnalysisHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) AnalysisHorizontalTextAlignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisHorizontalTextAlignment) *AnalysisHorizontalTextAlignment {
		return &v
	}).(AnalysisHorizontalTextAlignmentPtrOutput)
}

func (o AnalysisHorizontalTextAlignmentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisHorizontalTextAlignmentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisHorizontalTextAlignment) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisHorizontalTextAlignmentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisHorizontalTextAlignmentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisHorizontalTextAlignment) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisHorizontalTextAlignmentPtrOutput struct{ *pulumi.OutputState }

func (AnalysisHorizontalTextAlignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisHorizontalTextAlignment)(nil)).Elem()
}

func (o AnalysisHorizontalTextAlignmentPtrOutput) ToAnalysisHorizontalTextAlignmentPtrOutput() AnalysisHorizontalTextAlignmentPtrOutput {
	return o
}

func (o AnalysisHorizontalTextAlignmentPtrOutput) ToAnalysisHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) AnalysisHorizontalTextAlignmentPtrOutput {
	return o
}

func (o AnalysisHorizontalTextAlignmentPtrOutput) Elem() AnalysisHorizontalTextAlignmentOutput {
	return o.ApplyT(func(v *AnalysisHorizontalTextAlignment) AnalysisHorizontalTextAlignment {
		if v != nil {
			return *v
		}
		var ret AnalysisHorizontalTextAlignment
		return ret
	}).(AnalysisHorizontalTextAlignmentOutput)
}

func (o AnalysisHorizontalTextAlignmentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisHorizontalTextAlignmentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisHorizontalTextAlignment) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisHorizontalTextAlignmentInput is an input type that accepts values of the AnalysisHorizontalTextAlignment enum
// A concrete instance of `AnalysisHorizontalTextAlignmentInput` can be one of the following:
//
//	AnalysisHorizontalTextAlignmentLeft
//	AnalysisHorizontalTextAlignmentCenter
//	AnalysisHorizontalTextAlignmentRight
//	AnalysisHorizontalTextAlignmentAuto
type AnalysisHorizontalTextAlignmentInput interface {
	pulumi.Input

	ToAnalysisHorizontalTextAlignmentOutput() AnalysisHorizontalTextAlignmentOutput
	ToAnalysisHorizontalTextAlignmentOutputWithContext(context.Context) AnalysisHorizontalTextAlignmentOutput
}

var analysisHorizontalTextAlignmentPtrType = reflect.TypeOf((**AnalysisHorizontalTextAlignment)(nil)).Elem()

type AnalysisHorizontalTextAlignmentPtrInput interface {
	pulumi.Input

	ToAnalysisHorizontalTextAlignmentPtrOutput() AnalysisHorizontalTextAlignmentPtrOutput
	ToAnalysisHorizontalTextAlignmentPtrOutputWithContext(context.Context) AnalysisHorizontalTextAlignmentPtrOutput
}

type analysisHorizontalTextAlignmentPtr string

func AnalysisHorizontalTextAlignmentPtr(v string) AnalysisHorizontalTextAlignmentPtrInput {
	return (*analysisHorizontalTextAlignmentPtr)(&v)
}

func (*analysisHorizontalTextAlignmentPtr) ElementType() reflect.Type {
	return analysisHorizontalTextAlignmentPtrType
}

func (in *analysisHorizontalTextAlignmentPtr) ToAnalysisHorizontalTextAlignmentPtrOutput() AnalysisHorizontalTextAlignmentPtrOutput {
	return pulumi.ToOutput(in).(AnalysisHorizontalTextAlignmentPtrOutput)
}

func (in *analysisHorizontalTextAlignmentPtr) ToAnalysisHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) AnalysisHorizontalTextAlignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisHorizontalTextAlignmentPtrOutput)
}

type AnalysisIcon string

const (
	AnalysisIconCaretUp        = AnalysisIcon("CARET_UP")
	AnalysisIconCaretDown      = AnalysisIcon("CARET_DOWN")
	AnalysisIconPlus           = AnalysisIcon("PLUS")
	AnalysisIconMinus          = AnalysisIcon("MINUS")
	AnalysisIconArrowUp        = AnalysisIcon("ARROW_UP")
	AnalysisIconArrowDown      = AnalysisIcon("ARROW_DOWN")
	AnalysisIconArrowLeft      = AnalysisIcon("ARROW_LEFT")
	AnalysisIconArrowUpLeft    = AnalysisIcon("ARROW_UP_LEFT")
	AnalysisIconArrowDownLeft  = AnalysisIcon("ARROW_DOWN_LEFT")
	AnalysisIconArrowRight     = AnalysisIcon("ARROW_RIGHT")
	AnalysisIconArrowUpRight   = AnalysisIcon("ARROW_UP_RIGHT")
	AnalysisIconArrowDownRight = AnalysisIcon("ARROW_DOWN_RIGHT")
	AnalysisIconFaceUp         = AnalysisIcon("FACE_UP")
	AnalysisIconFaceDown       = AnalysisIcon("FACE_DOWN")
	AnalysisIconFaceFlat       = AnalysisIcon("FACE_FLAT")
	AnalysisIconOneBar         = AnalysisIcon("ONE_BAR")
	AnalysisIconTwoBar         = AnalysisIcon("TWO_BAR")
	AnalysisIconThreeBar       = AnalysisIcon("THREE_BAR")
	AnalysisIconCircle         = AnalysisIcon("CIRCLE")
	AnalysisIconTriangle       = AnalysisIcon("TRIANGLE")
	AnalysisIconSquare         = AnalysisIcon("SQUARE")
	AnalysisIconFlag           = AnalysisIcon("FLAG")
	AnalysisIconThumbsUp       = AnalysisIcon("THUMBS_UP")
	AnalysisIconThumbsDown     = AnalysisIcon("THUMBS_DOWN")
	AnalysisIconCheckmark      = AnalysisIcon("CHECKMARK")
	AnalysisIconX              = AnalysisIcon("X")
)

func (AnalysisIcon) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIcon)(nil)).Elem()
}

func (e AnalysisIcon) ToAnalysisIconOutput() AnalysisIconOutput {
	return pulumi.ToOutput(e).(AnalysisIconOutput)
}

func (e AnalysisIcon) ToAnalysisIconOutputWithContext(ctx context.Context) AnalysisIconOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisIconOutput)
}

func (e AnalysisIcon) ToAnalysisIconPtrOutput() AnalysisIconPtrOutput {
	return e.ToAnalysisIconPtrOutputWithContext(context.Background())
}

func (e AnalysisIcon) ToAnalysisIconPtrOutputWithContext(ctx context.Context) AnalysisIconPtrOutput {
	return AnalysisIcon(e).ToAnalysisIconOutputWithContext(ctx).ToAnalysisIconPtrOutputWithContext(ctx)
}

func (e AnalysisIcon) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisIcon) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisIcon) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisIcon) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisIconOutput struct{ *pulumi.OutputState }

func (AnalysisIconOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisIcon)(nil)).Elem()
}

func (o AnalysisIconOutput) ToAnalysisIconOutput() AnalysisIconOutput {
	return o
}

func (o AnalysisIconOutput) ToAnalysisIconOutputWithContext(ctx context.Context) AnalysisIconOutput {
	return o
}

func (o AnalysisIconOutput) ToAnalysisIconPtrOutput() AnalysisIconPtrOutput {
	return o.ToAnalysisIconPtrOutputWithContext(context.Background())
}

func (o AnalysisIconOutput) ToAnalysisIconPtrOutputWithContext(ctx context.Context) AnalysisIconPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisIcon) *AnalysisIcon {
		return &v
	}).(AnalysisIconPtrOutput)
}

func (o AnalysisIconOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisIconOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisIcon) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisIconOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisIconOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisIcon) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisIconPtrOutput struct{ *pulumi.OutputState }

func (AnalysisIconPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisIcon)(nil)).Elem()
}

func (o AnalysisIconPtrOutput) ToAnalysisIconPtrOutput() AnalysisIconPtrOutput {
	return o
}

func (o AnalysisIconPtrOutput) ToAnalysisIconPtrOutputWithContext(ctx context.Context) AnalysisIconPtrOutput {
	return o
}

func (o AnalysisIconPtrOutput) Elem() AnalysisIconOutput {
	return o.ApplyT(func(v *AnalysisIcon) AnalysisIcon {
		if v != nil {
			return *v
		}
		var ret AnalysisIcon
		return ret
	}).(AnalysisIconOutput)
}

func (o AnalysisIconPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisIconPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisIcon) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisIconInput is an input type that accepts values of the AnalysisIcon enum
// A concrete instance of `AnalysisIconInput` can be one of the following:
//
//	AnalysisIconCaretUp
//	AnalysisIconCaretDown
//	AnalysisIconPlus
//	AnalysisIconMinus
//	AnalysisIconArrowUp
//	AnalysisIconArrowDown
//	AnalysisIconArrowLeft
//	AnalysisIconArrowUpLeft
//	AnalysisIconArrowDownLeft
//	AnalysisIconArrowRight
//	AnalysisIconArrowUpRight
//	AnalysisIconArrowDownRight
//	AnalysisIconFaceUp
//	AnalysisIconFaceDown
//	AnalysisIconFaceFlat
//	AnalysisIconOneBar
//	AnalysisIconTwoBar
//	AnalysisIconThreeBar
//	AnalysisIconCircle
//	AnalysisIconTriangle
//	AnalysisIconSquare
//	AnalysisIconFlag
//	AnalysisIconThumbsUp
//	AnalysisIconThumbsDown
//	AnalysisIconCheckmark
//	AnalysisIconX
type AnalysisIconInput interface {
	pulumi.Input

	ToAnalysisIconOutput() AnalysisIconOutput
	ToAnalysisIconOutputWithContext(context.Context) AnalysisIconOutput
}

var analysisIconPtrType = reflect.TypeOf((**AnalysisIcon)(nil)).Elem()

type AnalysisIconPtrInput interface {
	pulumi.Input

	ToAnalysisIconPtrOutput() AnalysisIconPtrOutput
	ToAnalysisIconPtrOutputWithContext(context.Context) AnalysisIconPtrOutput
}

type analysisIconPtr string

func AnalysisIconPtr(v string) AnalysisIconPtrInput {
	return (*analysisIconPtr)(&v)
}

func (*analysisIconPtr) ElementType() reflect.Type {
	return analysisIconPtrType
}

func (in *analysisIconPtr) ToAnalysisIconPtrOutput() AnalysisIconPtrOutput {
	return pulumi.ToOutput(in).(AnalysisIconPtrOutput)
}

func (in *analysisIconPtr) ToAnalysisIconPtrOutputWithContext(ctx context.Context) AnalysisIconPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisIconPtrOutput)
}

type AnalysisKpiSparklineType string

const (
	AnalysisKpiSparklineTypeLine = AnalysisKpiSparklineType("LINE")
	AnalysisKpiSparklineTypeArea = AnalysisKpiSparklineType("AREA")
)

func (AnalysisKpiSparklineType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKpiSparklineType)(nil)).Elem()
}

func (e AnalysisKpiSparklineType) ToAnalysisKpiSparklineTypeOutput() AnalysisKpiSparklineTypeOutput {
	return pulumi.ToOutput(e).(AnalysisKpiSparklineTypeOutput)
}

func (e AnalysisKpiSparklineType) ToAnalysisKpiSparklineTypeOutputWithContext(ctx context.Context) AnalysisKpiSparklineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisKpiSparklineTypeOutput)
}

func (e AnalysisKpiSparklineType) ToAnalysisKpiSparklineTypePtrOutput() AnalysisKpiSparklineTypePtrOutput {
	return e.ToAnalysisKpiSparklineTypePtrOutputWithContext(context.Background())
}

func (e AnalysisKpiSparklineType) ToAnalysisKpiSparklineTypePtrOutputWithContext(ctx context.Context) AnalysisKpiSparklineTypePtrOutput {
	return AnalysisKpiSparklineType(e).ToAnalysisKpiSparklineTypeOutputWithContext(ctx).ToAnalysisKpiSparklineTypePtrOutputWithContext(ctx)
}

func (e AnalysisKpiSparklineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisKpiSparklineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisKpiSparklineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisKpiSparklineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisKpiSparklineTypeOutput struct{ *pulumi.OutputState }

func (AnalysisKpiSparklineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKpiSparklineType)(nil)).Elem()
}

func (o AnalysisKpiSparklineTypeOutput) ToAnalysisKpiSparklineTypeOutput() AnalysisKpiSparklineTypeOutput {
	return o
}

func (o AnalysisKpiSparklineTypeOutput) ToAnalysisKpiSparklineTypeOutputWithContext(ctx context.Context) AnalysisKpiSparklineTypeOutput {
	return o
}

func (o AnalysisKpiSparklineTypeOutput) ToAnalysisKpiSparklineTypePtrOutput() AnalysisKpiSparklineTypePtrOutput {
	return o.ToAnalysisKpiSparklineTypePtrOutputWithContext(context.Background())
}

func (o AnalysisKpiSparklineTypeOutput) ToAnalysisKpiSparklineTypePtrOutputWithContext(ctx context.Context) AnalysisKpiSparklineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisKpiSparklineType) *AnalysisKpiSparklineType {
		return &v
	}).(AnalysisKpiSparklineTypePtrOutput)
}

func (o AnalysisKpiSparklineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisKpiSparklineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisKpiSparklineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisKpiSparklineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisKpiSparklineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisKpiSparklineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisKpiSparklineTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisKpiSparklineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKpiSparklineType)(nil)).Elem()
}

func (o AnalysisKpiSparklineTypePtrOutput) ToAnalysisKpiSparklineTypePtrOutput() AnalysisKpiSparklineTypePtrOutput {
	return o
}

func (o AnalysisKpiSparklineTypePtrOutput) ToAnalysisKpiSparklineTypePtrOutputWithContext(ctx context.Context) AnalysisKpiSparklineTypePtrOutput {
	return o
}

func (o AnalysisKpiSparklineTypePtrOutput) Elem() AnalysisKpiSparklineTypeOutput {
	return o.ApplyT(func(v *AnalysisKpiSparklineType) AnalysisKpiSparklineType {
		if v != nil {
			return *v
		}
		var ret AnalysisKpiSparklineType
		return ret
	}).(AnalysisKpiSparklineTypeOutput)
}

func (o AnalysisKpiSparklineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisKpiSparklineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisKpiSparklineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisKpiSparklineTypeInput is an input type that accepts values of the AnalysisKpiSparklineType enum
// A concrete instance of `AnalysisKpiSparklineTypeInput` can be one of the following:
//
//	AnalysisKpiSparklineTypeLine
//	AnalysisKpiSparklineTypeArea
type AnalysisKpiSparklineTypeInput interface {
	pulumi.Input

	ToAnalysisKpiSparklineTypeOutput() AnalysisKpiSparklineTypeOutput
	ToAnalysisKpiSparklineTypeOutputWithContext(context.Context) AnalysisKpiSparklineTypeOutput
}

var analysisKpiSparklineTypePtrType = reflect.TypeOf((**AnalysisKpiSparklineType)(nil)).Elem()

type AnalysisKpiSparklineTypePtrInput interface {
	pulumi.Input

	ToAnalysisKpiSparklineTypePtrOutput() AnalysisKpiSparklineTypePtrOutput
	ToAnalysisKpiSparklineTypePtrOutputWithContext(context.Context) AnalysisKpiSparklineTypePtrOutput
}

type analysisKpiSparklineTypePtr string

func AnalysisKpiSparklineTypePtr(v string) AnalysisKpiSparklineTypePtrInput {
	return (*analysisKpiSparklineTypePtr)(&v)
}

func (*analysisKpiSparklineTypePtr) ElementType() reflect.Type {
	return analysisKpiSparklineTypePtrType
}

func (in *analysisKpiSparklineTypePtr) ToAnalysisKpiSparklineTypePtrOutput() AnalysisKpiSparklineTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisKpiSparklineTypePtrOutput)
}

func (in *analysisKpiSparklineTypePtr) ToAnalysisKpiSparklineTypePtrOutputWithContext(ctx context.Context) AnalysisKpiSparklineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisKpiSparklineTypePtrOutput)
}

type AnalysisKpiVisualStandardLayoutType string

const (
	AnalysisKpiVisualStandardLayoutTypeClassic  = AnalysisKpiVisualStandardLayoutType("CLASSIC")
	AnalysisKpiVisualStandardLayoutTypeVertical = AnalysisKpiVisualStandardLayoutType("VERTICAL")
)

func (AnalysisKpiVisualStandardLayoutType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKpiVisualStandardLayoutType)(nil)).Elem()
}

func (e AnalysisKpiVisualStandardLayoutType) ToAnalysisKpiVisualStandardLayoutTypeOutput() AnalysisKpiVisualStandardLayoutTypeOutput {
	return pulumi.ToOutput(e).(AnalysisKpiVisualStandardLayoutTypeOutput)
}

func (e AnalysisKpiVisualStandardLayoutType) ToAnalysisKpiVisualStandardLayoutTypeOutputWithContext(ctx context.Context) AnalysisKpiVisualStandardLayoutTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisKpiVisualStandardLayoutTypeOutput)
}

func (e AnalysisKpiVisualStandardLayoutType) ToAnalysisKpiVisualStandardLayoutTypePtrOutput() AnalysisKpiVisualStandardLayoutTypePtrOutput {
	return e.ToAnalysisKpiVisualStandardLayoutTypePtrOutputWithContext(context.Background())
}

func (e AnalysisKpiVisualStandardLayoutType) ToAnalysisKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) AnalysisKpiVisualStandardLayoutTypePtrOutput {
	return AnalysisKpiVisualStandardLayoutType(e).ToAnalysisKpiVisualStandardLayoutTypeOutputWithContext(ctx).ToAnalysisKpiVisualStandardLayoutTypePtrOutputWithContext(ctx)
}

func (e AnalysisKpiVisualStandardLayoutType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisKpiVisualStandardLayoutType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisKpiVisualStandardLayoutType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisKpiVisualStandardLayoutType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisKpiVisualStandardLayoutTypeOutput struct{ *pulumi.OutputState }

func (AnalysisKpiVisualStandardLayoutTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisKpiVisualStandardLayoutType)(nil)).Elem()
}

func (o AnalysisKpiVisualStandardLayoutTypeOutput) ToAnalysisKpiVisualStandardLayoutTypeOutput() AnalysisKpiVisualStandardLayoutTypeOutput {
	return o
}

func (o AnalysisKpiVisualStandardLayoutTypeOutput) ToAnalysisKpiVisualStandardLayoutTypeOutputWithContext(ctx context.Context) AnalysisKpiVisualStandardLayoutTypeOutput {
	return o
}

func (o AnalysisKpiVisualStandardLayoutTypeOutput) ToAnalysisKpiVisualStandardLayoutTypePtrOutput() AnalysisKpiVisualStandardLayoutTypePtrOutput {
	return o.ToAnalysisKpiVisualStandardLayoutTypePtrOutputWithContext(context.Background())
}

func (o AnalysisKpiVisualStandardLayoutTypeOutput) ToAnalysisKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) AnalysisKpiVisualStandardLayoutTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisKpiVisualStandardLayoutType) *AnalysisKpiVisualStandardLayoutType {
		return &v
	}).(AnalysisKpiVisualStandardLayoutTypePtrOutput)
}

func (o AnalysisKpiVisualStandardLayoutTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisKpiVisualStandardLayoutTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisKpiVisualStandardLayoutType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisKpiVisualStandardLayoutTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisKpiVisualStandardLayoutTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisKpiVisualStandardLayoutType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisKpiVisualStandardLayoutTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisKpiVisualStandardLayoutTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisKpiVisualStandardLayoutType)(nil)).Elem()
}

func (o AnalysisKpiVisualStandardLayoutTypePtrOutput) ToAnalysisKpiVisualStandardLayoutTypePtrOutput() AnalysisKpiVisualStandardLayoutTypePtrOutput {
	return o
}

func (o AnalysisKpiVisualStandardLayoutTypePtrOutput) ToAnalysisKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) AnalysisKpiVisualStandardLayoutTypePtrOutput {
	return o
}

func (o AnalysisKpiVisualStandardLayoutTypePtrOutput) Elem() AnalysisKpiVisualStandardLayoutTypeOutput {
	return o.ApplyT(func(v *AnalysisKpiVisualStandardLayoutType) AnalysisKpiVisualStandardLayoutType {
		if v != nil {
			return *v
		}
		var ret AnalysisKpiVisualStandardLayoutType
		return ret
	}).(AnalysisKpiVisualStandardLayoutTypeOutput)
}

func (o AnalysisKpiVisualStandardLayoutTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisKpiVisualStandardLayoutTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisKpiVisualStandardLayoutType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisKpiVisualStandardLayoutTypeInput is an input type that accepts values of the AnalysisKpiVisualStandardLayoutType enum
// A concrete instance of `AnalysisKpiVisualStandardLayoutTypeInput` can be one of the following:
//
//	AnalysisKpiVisualStandardLayoutTypeClassic
//	AnalysisKpiVisualStandardLayoutTypeVertical
type AnalysisKpiVisualStandardLayoutTypeInput interface {
	pulumi.Input

	ToAnalysisKpiVisualStandardLayoutTypeOutput() AnalysisKpiVisualStandardLayoutTypeOutput
	ToAnalysisKpiVisualStandardLayoutTypeOutputWithContext(context.Context) AnalysisKpiVisualStandardLayoutTypeOutput
}

var analysisKpiVisualStandardLayoutTypePtrType = reflect.TypeOf((**AnalysisKpiVisualStandardLayoutType)(nil)).Elem()

type AnalysisKpiVisualStandardLayoutTypePtrInput interface {
	pulumi.Input

	ToAnalysisKpiVisualStandardLayoutTypePtrOutput() AnalysisKpiVisualStandardLayoutTypePtrOutput
	ToAnalysisKpiVisualStandardLayoutTypePtrOutputWithContext(context.Context) AnalysisKpiVisualStandardLayoutTypePtrOutput
}

type analysisKpiVisualStandardLayoutTypePtr string

func AnalysisKpiVisualStandardLayoutTypePtr(v string) AnalysisKpiVisualStandardLayoutTypePtrInput {
	return (*analysisKpiVisualStandardLayoutTypePtr)(&v)
}

func (*analysisKpiVisualStandardLayoutTypePtr) ElementType() reflect.Type {
	return analysisKpiVisualStandardLayoutTypePtrType
}

func (in *analysisKpiVisualStandardLayoutTypePtr) ToAnalysisKpiVisualStandardLayoutTypePtrOutput() AnalysisKpiVisualStandardLayoutTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisKpiVisualStandardLayoutTypePtrOutput)
}

func (in *analysisKpiVisualStandardLayoutTypePtr) ToAnalysisKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) AnalysisKpiVisualStandardLayoutTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisKpiVisualStandardLayoutTypePtrOutput)
}

type AnalysisLayoutElementType string

const (
	AnalysisLayoutElementTypeVisual           = AnalysisLayoutElementType("VISUAL")
	AnalysisLayoutElementTypeFilterControl    = AnalysisLayoutElementType("FILTER_CONTROL")
	AnalysisLayoutElementTypeParameterControl = AnalysisLayoutElementType("PARAMETER_CONTROL")
	AnalysisLayoutElementTypeTextBox          = AnalysisLayoutElementType("TEXT_BOX")
)

func (AnalysisLayoutElementType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLayoutElementType)(nil)).Elem()
}

func (e AnalysisLayoutElementType) ToAnalysisLayoutElementTypeOutput() AnalysisLayoutElementTypeOutput {
	return pulumi.ToOutput(e).(AnalysisLayoutElementTypeOutput)
}

func (e AnalysisLayoutElementType) ToAnalysisLayoutElementTypeOutputWithContext(ctx context.Context) AnalysisLayoutElementTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisLayoutElementTypeOutput)
}

func (e AnalysisLayoutElementType) ToAnalysisLayoutElementTypePtrOutput() AnalysisLayoutElementTypePtrOutput {
	return e.ToAnalysisLayoutElementTypePtrOutputWithContext(context.Background())
}

func (e AnalysisLayoutElementType) ToAnalysisLayoutElementTypePtrOutputWithContext(ctx context.Context) AnalysisLayoutElementTypePtrOutput {
	return AnalysisLayoutElementType(e).ToAnalysisLayoutElementTypeOutputWithContext(ctx).ToAnalysisLayoutElementTypePtrOutputWithContext(ctx)
}

func (e AnalysisLayoutElementType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLayoutElementType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLayoutElementType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisLayoutElementType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisLayoutElementTypeOutput struct{ *pulumi.OutputState }

func (AnalysisLayoutElementTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLayoutElementType)(nil)).Elem()
}

func (o AnalysisLayoutElementTypeOutput) ToAnalysisLayoutElementTypeOutput() AnalysisLayoutElementTypeOutput {
	return o
}

func (o AnalysisLayoutElementTypeOutput) ToAnalysisLayoutElementTypeOutputWithContext(ctx context.Context) AnalysisLayoutElementTypeOutput {
	return o
}

func (o AnalysisLayoutElementTypeOutput) ToAnalysisLayoutElementTypePtrOutput() AnalysisLayoutElementTypePtrOutput {
	return o.ToAnalysisLayoutElementTypePtrOutputWithContext(context.Background())
}

func (o AnalysisLayoutElementTypeOutput) ToAnalysisLayoutElementTypePtrOutputWithContext(ctx context.Context) AnalysisLayoutElementTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLayoutElementType) *AnalysisLayoutElementType {
		return &v
	}).(AnalysisLayoutElementTypePtrOutput)
}

func (o AnalysisLayoutElementTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisLayoutElementTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLayoutElementType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisLayoutElementTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLayoutElementTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLayoutElementType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisLayoutElementTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisLayoutElementTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLayoutElementType)(nil)).Elem()
}

func (o AnalysisLayoutElementTypePtrOutput) ToAnalysisLayoutElementTypePtrOutput() AnalysisLayoutElementTypePtrOutput {
	return o
}

func (o AnalysisLayoutElementTypePtrOutput) ToAnalysisLayoutElementTypePtrOutputWithContext(ctx context.Context) AnalysisLayoutElementTypePtrOutput {
	return o
}

func (o AnalysisLayoutElementTypePtrOutput) Elem() AnalysisLayoutElementTypeOutput {
	return o.ApplyT(func(v *AnalysisLayoutElementType) AnalysisLayoutElementType {
		if v != nil {
			return *v
		}
		var ret AnalysisLayoutElementType
		return ret
	}).(AnalysisLayoutElementTypeOutput)
}

func (o AnalysisLayoutElementTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLayoutElementTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisLayoutElementType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisLayoutElementTypeInput is an input type that accepts values of the AnalysisLayoutElementType enum
// A concrete instance of `AnalysisLayoutElementTypeInput` can be one of the following:
//
//	AnalysisLayoutElementTypeVisual
//	AnalysisLayoutElementTypeFilterControl
//	AnalysisLayoutElementTypeParameterControl
//	AnalysisLayoutElementTypeTextBox
type AnalysisLayoutElementTypeInput interface {
	pulumi.Input

	ToAnalysisLayoutElementTypeOutput() AnalysisLayoutElementTypeOutput
	ToAnalysisLayoutElementTypeOutputWithContext(context.Context) AnalysisLayoutElementTypeOutput
}

var analysisLayoutElementTypePtrType = reflect.TypeOf((**AnalysisLayoutElementType)(nil)).Elem()

type AnalysisLayoutElementTypePtrInput interface {
	pulumi.Input

	ToAnalysisLayoutElementTypePtrOutput() AnalysisLayoutElementTypePtrOutput
	ToAnalysisLayoutElementTypePtrOutputWithContext(context.Context) AnalysisLayoutElementTypePtrOutput
}

type analysisLayoutElementTypePtr string

func AnalysisLayoutElementTypePtr(v string) AnalysisLayoutElementTypePtrInput {
	return (*analysisLayoutElementTypePtr)(&v)
}

func (*analysisLayoutElementTypePtr) ElementType() reflect.Type {
	return analysisLayoutElementTypePtrType
}

func (in *analysisLayoutElementTypePtr) ToAnalysisLayoutElementTypePtrOutput() AnalysisLayoutElementTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisLayoutElementTypePtrOutput)
}

func (in *analysisLayoutElementTypePtr) ToAnalysisLayoutElementTypePtrOutputWithContext(ctx context.Context) AnalysisLayoutElementTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisLayoutElementTypePtrOutput)
}

type AnalysisLegendPosition string

const (
	AnalysisLegendPositionAuto   = AnalysisLegendPosition("AUTO")
	AnalysisLegendPositionRight  = AnalysisLegendPosition("RIGHT")
	AnalysisLegendPositionBottom = AnalysisLegendPosition("BOTTOM")
	AnalysisLegendPositionTop    = AnalysisLegendPosition("TOP")
)

func (AnalysisLegendPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLegendPosition)(nil)).Elem()
}

func (e AnalysisLegendPosition) ToAnalysisLegendPositionOutput() AnalysisLegendPositionOutput {
	return pulumi.ToOutput(e).(AnalysisLegendPositionOutput)
}

func (e AnalysisLegendPosition) ToAnalysisLegendPositionOutputWithContext(ctx context.Context) AnalysisLegendPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisLegendPositionOutput)
}

func (e AnalysisLegendPosition) ToAnalysisLegendPositionPtrOutput() AnalysisLegendPositionPtrOutput {
	return e.ToAnalysisLegendPositionPtrOutputWithContext(context.Background())
}

func (e AnalysisLegendPosition) ToAnalysisLegendPositionPtrOutputWithContext(ctx context.Context) AnalysisLegendPositionPtrOutput {
	return AnalysisLegendPosition(e).ToAnalysisLegendPositionOutputWithContext(ctx).ToAnalysisLegendPositionPtrOutputWithContext(ctx)
}

func (e AnalysisLegendPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLegendPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLegendPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisLegendPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisLegendPositionOutput struct{ *pulumi.OutputState }

func (AnalysisLegendPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLegendPosition)(nil)).Elem()
}

func (o AnalysisLegendPositionOutput) ToAnalysisLegendPositionOutput() AnalysisLegendPositionOutput {
	return o
}

func (o AnalysisLegendPositionOutput) ToAnalysisLegendPositionOutputWithContext(ctx context.Context) AnalysisLegendPositionOutput {
	return o
}

func (o AnalysisLegendPositionOutput) ToAnalysisLegendPositionPtrOutput() AnalysisLegendPositionPtrOutput {
	return o.ToAnalysisLegendPositionPtrOutputWithContext(context.Background())
}

func (o AnalysisLegendPositionOutput) ToAnalysisLegendPositionPtrOutputWithContext(ctx context.Context) AnalysisLegendPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLegendPosition) *AnalysisLegendPosition {
		return &v
	}).(AnalysisLegendPositionPtrOutput)
}

func (o AnalysisLegendPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisLegendPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLegendPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisLegendPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLegendPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLegendPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisLegendPositionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLegendPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLegendPosition)(nil)).Elem()
}

func (o AnalysisLegendPositionPtrOutput) ToAnalysisLegendPositionPtrOutput() AnalysisLegendPositionPtrOutput {
	return o
}

func (o AnalysisLegendPositionPtrOutput) ToAnalysisLegendPositionPtrOutputWithContext(ctx context.Context) AnalysisLegendPositionPtrOutput {
	return o
}

func (o AnalysisLegendPositionPtrOutput) Elem() AnalysisLegendPositionOutput {
	return o.ApplyT(func(v *AnalysisLegendPosition) AnalysisLegendPosition {
		if v != nil {
			return *v
		}
		var ret AnalysisLegendPosition
		return ret
	}).(AnalysisLegendPositionOutput)
}

func (o AnalysisLegendPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLegendPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisLegendPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisLegendPositionInput is an input type that accepts values of the AnalysisLegendPosition enum
// A concrete instance of `AnalysisLegendPositionInput` can be one of the following:
//
//	AnalysisLegendPositionAuto
//	AnalysisLegendPositionRight
//	AnalysisLegendPositionBottom
//	AnalysisLegendPositionTop
type AnalysisLegendPositionInput interface {
	pulumi.Input

	ToAnalysisLegendPositionOutput() AnalysisLegendPositionOutput
	ToAnalysisLegendPositionOutputWithContext(context.Context) AnalysisLegendPositionOutput
}

var analysisLegendPositionPtrType = reflect.TypeOf((**AnalysisLegendPosition)(nil)).Elem()

type AnalysisLegendPositionPtrInput interface {
	pulumi.Input

	ToAnalysisLegendPositionPtrOutput() AnalysisLegendPositionPtrOutput
	ToAnalysisLegendPositionPtrOutputWithContext(context.Context) AnalysisLegendPositionPtrOutput
}

type analysisLegendPositionPtr string

func AnalysisLegendPositionPtr(v string) AnalysisLegendPositionPtrInput {
	return (*analysisLegendPositionPtr)(&v)
}

func (*analysisLegendPositionPtr) ElementType() reflect.Type {
	return analysisLegendPositionPtrType
}

func (in *analysisLegendPositionPtr) ToAnalysisLegendPositionPtrOutput() AnalysisLegendPositionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisLegendPositionPtrOutput)
}

func (in *analysisLegendPositionPtr) ToAnalysisLegendPositionPtrOutputWithContext(ctx context.Context) AnalysisLegendPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisLegendPositionPtrOutput)
}

type AnalysisLineChartLineStyle string

const (
	AnalysisLineChartLineStyleSolid  = AnalysisLineChartLineStyle("SOLID")
	AnalysisLineChartLineStyleDotted = AnalysisLineChartLineStyle("DOTTED")
	AnalysisLineChartLineStyleDashed = AnalysisLineChartLineStyle("DASHED")
)

func (AnalysisLineChartLineStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartLineStyle)(nil)).Elem()
}

func (e AnalysisLineChartLineStyle) ToAnalysisLineChartLineStyleOutput() AnalysisLineChartLineStyleOutput {
	return pulumi.ToOutput(e).(AnalysisLineChartLineStyleOutput)
}

func (e AnalysisLineChartLineStyle) ToAnalysisLineChartLineStyleOutputWithContext(ctx context.Context) AnalysisLineChartLineStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisLineChartLineStyleOutput)
}

func (e AnalysisLineChartLineStyle) ToAnalysisLineChartLineStylePtrOutput() AnalysisLineChartLineStylePtrOutput {
	return e.ToAnalysisLineChartLineStylePtrOutputWithContext(context.Background())
}

func (e AnalysisLineChartLineStyle) ToAnalysisLineChartLineStylePtrOutputWithContext(ctx context.Context) AnalysisLineChartLineStylePtrOutput {
	return AnalysisLineChartLineStyle(e).ToAnalysisLineChartLineStyleOutputWithContext(ctx).ToAnalysisLineChartLineStylePtrOutputWithContext(ctx)
}

func (e AnalysisLineChartLineStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLineChartLineStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLineChartLineStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisLineChartLineStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisLineChartLineStyleOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartLineStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartLineStyle)(nil)).Elem()
}

func (o AnalysisLineChartLineStyleOutput) ToAnalysisLineChartLineStyleOutput() AnalysisLineChartLineStyleOutput {
	return o
}

func (o AnalysisLineChartLineStyleOutput) ToAnalysisLineChartLineStyleOutputWithContext(ctx context.Context) AnalysisLineChartLineStyleOutput {
	return o
}

func (o AnalysisLineChartLineStyleOutput) ToAnalysisLineChartLineStylePtrOutput() AnalysisLineChartLineStylePtrOutput {
	return o.ToAnalysisLineChartLineStylePtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartLineStyleOutput) ToAnalysisLineChartLineStylePtrOutputWithContext(ctx context.Context) AnalysisLineChartLineStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartLineStyle) *AnalysisLineChartLineStyle {
		return &v
	}).(AnalysisLineChartLineStylePtrOutput)
}

func (o AnalysisLineChartLineStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisLineChartLineStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLineChartLineStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisLineChartLineStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartLineStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLineChartLineStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisLineChartLineStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartLineStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartLineStyle)(nil)).Elem()
}

func (o AnalysisLineChartLineStylePtrOutput) ToAnalysisLineChartLineStylePtrOutput() AnalysisLineChartLineStylePtrOutput {
	return o
}

func (o AnalysisLineChartLineStylePtrOutput) ToAnalysisLineChartLineStylePtrOutputWithContext(ctx context.Context) AnalysisLineChartLineStylePtrOutput {
	return o
}

func (o AnalysisLineChartLineStylePtrOutput) Elem() AnalysisLineChartLineStyleOutput {
	return o.ApplyT(func(v *AnalysisLineChartLineStyle) AnalysisLineChartLineStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartLineStyle
		return ret
	}).(AnalysisLineChartLineStyleOutput)
}

func (o AnalysisLineChartLineStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartLineStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisLineChartLineStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisLineChartLineStyleInput is an input type that accepts values of the AnalysisLineChartLineStyle enum
// A concrete instance of `AnalysisLineChartLineStyleInput` can be one of the following:
//
//	AnalysisLineChartLineStyleSolid
//	AnalysisLineChartLineStyleDotted
//	AnalysisLineChartLineStyleDashed
type AnalysisLineChartLineStyleInput interface {
	pulumi.Input

	ToAnalysisLineChartLineStyleOutput() AnalysisLineChartLineStyleOutput
	ToAnalysisLineChartLineStyleOutputWithContext(context.Context) AnalysisLineChartLineStyleOutput
}

var analysisLineChartLineStylePtrType = reflect.TypeOf((**AnalysisLineChartLineStyle)(nil)).Elem()

type AnalysisLineChartLineStylePtrInput interface {
	pulumi.Input

	ToAnalysisLineChartLineStylePtrOutput() AnalysisLineChartLineStylePtrOutput
	ToAnalysisLineChartLineStylePtrOutputWithContext(context.Context) AnalysisLineChartLineStylePtrOutput
}

type analysisLineChartLineStylePtr string

func AnalysisLineChartLineStylePtr(v string) AnalysisLineChartLineStylePtrInput {
	return (*analysisLineChartLineStylePtr)(&v)
}

func (*analysisLineChartLineStylePtr) ElementType() reflect.Type {
	return analysisLineChartLineStylePtrType
}

func (in *analysisLineChartLineStylePtr) ToAnalysisLineChartLineStylePtrOutput() AnalysisLineChartLineStylePtrOutput {
	return pulumi.ToOutput(in).(AnalysisLineChartLineStylePtrOutput)
}

func (in *analysisLineChartLineStylePtr) ToAnalysisLineChartLineStylePtrOutputWithContext(ctx context.Context) AnalysisLineChartLineStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisLineChartLineStylePtrOutput)
}

type AnalysisLineChartMarkerShape string

const (
	AnalysisLineChartMarkerShapeCircle        = AnalysisLineChartMarkerShape("CIRCLE")
	AnalysisLineChartMarkerShapeTriangle      = AnalysisLineChartMarkerShape("TRIANGLE")
	AnalysisLineChartMarkerShapeSquare        = AnalysisLineChartMarkerShape("SQUARE")
	AnalysisLineChartMarkerShapeDiamond       = AnalysisLineChartMarkerShape("DIAMOND")
	AnalysisLineChartMarkerShapeRoundedSquare = AnalysisLineChartMarkerShape("ROUNDED_SQUARE")
)

func (AnalysisLineChartMarkerShape) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartMarkerShape)(nil)).Elem()
}

func (e AnalysisLineChartMarkerShape) ToAnalysisLineChartMarkerShapeOutput() AnalysisLineChartMarkerShapeOutput {
	return pulumi.ToOutput(e).(AnalysisLineChartMarkerShapeOutput)
}

func (e AnalysisLineChartMarkerShape) ToAnalysisLineChartMarkerShapeOutputWithContext(ctx context.Context) AnalysisLineChartMarkerShapeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisLineChartMarkerShapeOutput)
}

func (e AnalysisLineChartMarkerShape) ToAnalysisLineChartMarkerShapePtrOutput() AnalysisLineChartMarkerShapePtrOutput {
	return e.ToAnalysisLineChartMarkerShapePtrOutputWithContext(context.Background())
}

func (e AnalysisLineChartMarkerShape) ToAnalysisLineChartMarkerShapePtrOutputWithContext(ctx context.Context) AnalysisLineChartMarkerShapePtrOutput {
	return AnalysisLineChartMarkerShape(e).ToAnalysisLineChartMarkerShapeOutputWithContext(ctx).ToAnalysisLineChartMarkerShapePtrOutputWithContext(ctx)
}

func (e AnalysisLineChartMarkerShape) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLineChartMarkerShape) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLineChartMarkerShape) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisLineChartMarkerShape) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisLineChartMarkerShapeOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartMarkerShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartMarkerShape)(nil)).Elem()
}

func (o AnalysisLineChartMarkerShapeOutput) ToAnalysisLineChartMarkerShapeOutput() AnalysisLineChartMarkerShapeOutput {
	return o
}

func (o AnalysisLineChartMarkerShapeOutput) ToAnalysisLineChartMarkerShapeOutputWithContext(ctx context.Context) AnalysisLineChartMarkerShapeOutput {
	return o
}

func (o AnalysisLineChartMarkerShapeOutput) ToAnalysisLineChartMarkerShapePtrOutput() AnalysisLineChartMarkerShapePtrOutput {
	return o.ToAnalysisLineChartMarkerShapePtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartMarkerShapeOutput) ToAnalysisLineChartMarkerShapePtrOutputWithContext(ctx context.Context) AnalysisLineChartMarkerShapePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartMarkerShape) *AnalysisLineChartMarkerShape {
		return &v
	}).(AnalysisLineChartMarkerShapePtrOutput)
}

func (o AnalysisLineChartMarkerShapeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisLineChartMarkerShapeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLineChartMarkerShape) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisLineChartMarkerShapeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartMarkerShapeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLineChartMarkerShape) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisLineChartMarkerShapePtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartMarkerShapePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartMarkerShape)(nil)).Elem()
}

func (o AnalysisLineChartMarkerShapePtrOutput) ToAnalysisLineChartMarkerShapePtrOutput() AnalysisLineChartMarkerShapePtrOutput {
	return o
}

func (o AnalysisLineChartMarkerShapePtrOutput) ToAnalysisLineChartMarkerShapePtrOutputWithContext(ctx context.Context) AnalysisLineChartMarkerShapePtrOutput {
	return o
}

func (o AnalysisLineChartMarkerShapePtrOutput) Elem() AnalysisLineChartMarkerShapeOutput {
	return o.ApplyT(func(v *AnalysisLineChartMarkerShape) AnalysisLineChartMarkerShape {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartMarkerShape
		return ret
	}).(AnalysisLineChartMarkerShapeOutput)
}

func (o AnalysisLineChartMarkerShapePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartMarkerShapePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisLineChartMarkerShape) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisLineChartMarkerShapeInput is an input type that accepts values of the AnalysisLineChartMarkerShape enum
// A concrete instance of `AnalysisLineChartMarkerShapeInput` can be one of the following:
//
//	AnalysisLineChartMarkerShapeCircle
//	AnalysisLineChartMarkerShapeTriangle
//	AnalysisLineChartMarkerShapeSquare
//	AnalysisLineChartMarkerShapeDiamond
//	AnalysisLineChartMarkerShapeRoundedSquare
type AnalysisLineChartMarkerShapeInput interface {
	pulumi.Input

	ToAnalysisLineChartMarkerShapeOutput() AnalysisLineChartMarkerShapeOutput
	ToAnalysisLineChartMarkerShapeOutputWithContext(context.Context) AnalysisLineChartMarkerShapeOutput
}

var analysisLineChartMarkerShapePtrType = reflect.TypeOf((**AnalysisLineChartMarkerShape)(nil)).Elem()

type AnalysisLineChartMarkerShapePtrInput interface {
	pulumi.Input

	ToAnalysisLineChartMarkerShapePtrOutput() AnalysisLineChartMarkerShapePtrOutput
	ToAnalysisLineChartMarkerShapePtrOutputWithContext(context.Context) AnalysisLineChartMarkerShapePtrOutput
}

type analysisLineChartMarkerShapePtr string

func AnalysisLineChartMarkerShapePtr(v string) AnalysisLineChartMarkerShapePtrInput {
	return (*analysisLineChartMarkerShapePtr)(&v)
}

func (*analysisLineChartMarkerShapePtr) ElementType() reflect.Type {
	return analysisLineChartMarkerShapePtrType
}

func (in *analysisLineChartMarkerShapePtr) ToAnalysisLineChartMarkerShapePtrOutput() AnalysisLineChartMarkerShapePtrOutput {
	return pulumi.ToOutput(in).(AnalysisLineChartMarkerShapePtrOutput)
}

func (in *analysisLineChartMarkerShapePtr) ToAnalysisLineChartMarkerShapePtrOutputWithContext(ctx context.Context) AnalysisLineChartMarkerShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisLineChartMarkerShapePtrOutput)
}

type AnalysisLineChartType string

const (
	AnalysisLineChartTypeLine        = AnalysisLineChartType("LINE")
	AnalysisLineChartTypeArea        = AnalysisLineChartType("AREA")
	AnalysisLineChartTypeStackedArea = AnalysisLineChartType("STACKED_AREA")
)

func (AnalysisLineChartType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartType)(nil)).Elem()
}

func (e AnalysisLineChartType) ToAnalysisLineChartTypeOutput() AnalysisLineChartTypeOutput {
	return pulumi.ToOutput(e).(AnalysisLineChartTypeOutput)
}

func (e AnalysisLineChartType) ToAnalysisLineChartTypeOutputWithContext(ctx context.Context) AnalysisLineChartTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisLineChartTypeOutput)
}

func (e AnalysisLineChartType) ToAnalysisLineChartTypePtrOutput() AnalysisLineChartTypePtrOutput {
	return e.ToAnalysisLineChartTypePtrOutputWithContext(context.Background())
}

func (e AnalysisLineChartType) ToAnalysisLineChartTypePtrOutputWithContext(ctx context.Context) AnalysisLineChartTypePtrOutput {
	return AnalysisLineChartType(e).ToAnalysisLineChartTypeOutputWithContext(ctx).ToAnalysisLineChartTypePtrOutputWithContext(ctx)
}

func (e AnalysisLineChartType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLineChartType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLineChartType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisLineChartType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisLineChartTypeOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineChartType)(nil)).Elem()
}

func (o AnalysisLineChartTypeOutput) ToAnalysisLineChartTypeOutput() AnalysisLineChartTypeOutput {
	return o
}

func (o AnalysisLineChartTypeOutput) ToAnalysisLineChartTypeOutputWithContext(ctx context.Context) AnalysisLineChartTypeOutput {
	return o
}

func (o AnalysisLineChartTypeOutput) ToAnalysisLineChartTypePtrOutput() AnalysisLineChartTypePtrOutput {
	return o.ToAnalysisLineChartTypePtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartTypeOutput) ToAnalysisLineChartTypePtrOutputWithContext(ctx context.Context) AnalysisLineChartTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineChartType) *AnalysisLineChartType {
		return &v
	}).(AnalysisLineChartTypePtrOutput)
}

func (o AnalysisLineChartTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisLineChartTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLineChartType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisLineChartTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLineChartType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisLineChartTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineChartTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineChartType)(nil)).Elem()
}

func (o AnalysisLineChartTypePtrOutput) ToAnalysisLineChartTypePtrOutput() AnalysisLineChartTypePtrOutput {
	return o
}

func (o AnalysisLineChartTypePtrOutput) ToAnalysisLineChartTypePtrOutputWithContext(ctx context.Context) AnalysisLineChartTypePtrOutput {
	return o
}

func (o AnalysisLineChartTypePtrOutput) Elem() AnalysisLineChartTypeOutput {
	return o.ApplyT(func(v *AnalysisLineChartType) AnalysisLineChartType {
		if v != nil {
			return *v
		}
		var ret AnalysisLineChartType
		return ret
	}).(AnalysisLineChartTypeOutput)
}

func (o AnalysisLineChartTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLineChartTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisLineChartType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisLineChartTypeInput is an input type that accepts values of the AnalysisLineChartType enum
// A concrete instance of `AnalysisLineChartTypeInput` can be one of the following:
//
//	AnalysisLineChartTypeLine
//	AnalysisLineChartTypeArea
//	AnalysisLineChartTypeStackedArea
type AnalysisLineChartTypeInput interface {
	pulumi.Input

	ToAnalysisLineChartTypeOutput() AnalysisLineChartTypeOutput
	ToAnalysisLineChartTypeOutputWithContext(context.Context) AnalysisLineChartTypeOutput
}

var analysisLineChartTypePtrType = reflect.TypeOf((**AnalysisLineChartType)(nil)).Elem()

type AnalysisLineChartTypePtrInput interface {
	pulumi.Input

	ToAnalysisLineChartTypePtrOutput() AnalysisLineChartTypePtrOutput
	ToAnalysisLineChartTypePtrOutputWithContext(context.Context) AnalysisLineChartTypePtrOutput
}

type analysisLineChartTypePtr string

func AnalysisLineChartTypePtr(v string) AnalysisLineChartTypePtrInput {
	return (*analysisLineChartTypePtr)(&v)
}

func (*analysisLineChartTypePtr) ElementType() reflect.Type {
	return analysisLineChartTypePtrType
}

func (in *analysisLineChartTypePtr) ToAnalysisLineChartTypePtrOutput() AnalysisLineChartTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisLineChartTypePtrOutput)
}

func (in *analysisLineChartTypePtr) ToAnalysisLineChartTypePtrOutputWithContext(ctx context.Context) AnalysisLineChartTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisLineChartTypePtrOutput)
}

type AnalysisLineInterpolation string

const (
	AnalysisLineInterpolationLinear  = AnalysisLineInterpolation("LINEAR")
	AnalysisLineInterpolationSmooth  = AnalysisLineInterpolation("SMOOTH")
	AnalysisLineInterpolationStepped = AnalysisLineInterpolation("STEPPED")
)

func (AnalysisLineInterpolation) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineInterpolation)(nil)).Elem()
}

func (e AnalysisLineInterpolation) ToAnalysisLineInterpolationOutput() AnalysisLineInterpolationOutput {
	return pulumi.ToOutput(e).(AnalysisLineInterpolationOutput)
}

func (e AnalysisLineInterpolation) ToAnalysisLineInterpolationOutputWithContext(ctx context.Context) AnalysisLineInterpolationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisLineInterpolationOutput)
}

func (e AnalysisLineInterpolation) ToAnalysisLineInterpolationPtrOutput() AnalysisLineInterpolationPtrOutput {
	return e.ToAnalysisLineInterpolationPtrOutputWithContext(context.Background())
}

func (e AnalysisLineInterpolation) ToAnalysisLineInterpolationPtrOutputWithContext(ctx context.Context) AnalysisLineInterpolationPtrOutput {
	return AnalysisLineInterpolation(e).ToAnalysisLineInterpolationOutputWithContext(ctx).ToAnalysisLineInterpolationPtrOutputWithContext(ctx)
}

func (e AnalysisLineInterpolation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLineInterpolation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisLineInterpolation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisLineInterpolation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisLineInterpolationOutput struct{ *pulumi.OutputState }

func (AnalysisLineInterpolationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisLineInterpolation)(nil)).Elem()
}

func (o AnalysisLineInterpolationOutput) ToAnalysisLineInterpolationOutput() AnalysisLineInterpolationOutput {
	return o
}

func (o AnalysisLineInterpolationOutput) ToAnalysisLineInterpolationOutputWithContext(ctx context.Context) AnalysisLineInterpolationOutput {
	return o
}

func (o AnalysisLineInterpolationOutput) ToAnalysisLineInterpolationPtrOutput() AnalysisLineInterpolationPtrOutput {
	return o.ToAnalysisLineInterpolationPtrOutputWithContext(context.Background())
}

func (o AnalysisLineInterpolationOutput) ToAnalysisLineInterpolationPtrOutputWithContext(ctx context.Context) AnalysisLineInterpolationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisLineInterpolation) *AnalysisLineInterpolation {
		return &v
	}).(AnalysisLineInterpolationPtrOutput)
}

func (o AnalysisLineInterpolationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisLineInterpolationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLineInterpolation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisLineInterpolationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLineInterpolationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisLineInterpolation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisLineInterpolationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisLineInterpolationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisLineInterpolation)(nil)).Elem()
}

func (o AnalysisLineInterpolationPtrOutput) ToAnalysisLineInterpolationPtrOutput() AnalysisLineInterpolationPtrOutput {
	return o
}

func (o AnalysisLineInterpolationPtrOutput) ToAnalysisLineInterpolationPtrOutputWithContext(ctx context.Context) AnalysisLineInterpolationPtrOutput {
	return o
}

func (o AnalysisLineInterpolationPtrOutput) Elem() AnalysisLineInterpolationOutput {
	return o.ApplyT(func(v *AnalysisLineInterpolation) AnalysisLineInterpolation {
		if v != nil {
			return *v
		}
		var ret AnalysisLineInterpolation
		return ret
	}).(AnalysisLineInterpolationOutput)
}

func (o AnalysisLineInterpolationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisLineInterpolationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisLineInterpolation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisLineInterpolationInput is an input type that accepts values of the AnalysisLineInterpolation enum
// A concrete instance of `AnalysisLineInterpolationInput` can be one of the following:
//
//	AnalysisLineInterpolationLinear
//	AnalysisLineInterpolationSmooth
//	AnalysisLineInterpolationStepped
type AnalysisLineInterpolationInput interface {
	pulumi.Input

	ToAnalysisLineInterpolationOutput() AnalysisLineInterpolationOutput
	ToAnalysisLineInterpolationOutputWithContext(context.Context) AnalysisLineInterpolationOutput
}

var analysisLineInterpolationPtrType = reflect.TypeOf((**AnalysisLineInterpolation)(nil)).Elem()

type AnalysisLineInterpolationPtrInput interface {
	pulumi.Input

	ToAnalysisLineInterpolationPtrOutput() AnalysisLineInterpolationPtrOutput
	ToAnalysisLineInterpolationPtrOutputWithContext(context.Context) AnalysisLineInterpolationPtrOutput
}

type analysisLineInterpolationPtr string

func AnalysisLineInterpolationPtr(v string) AnalysisLineInterpolationPtrInput {
	return (*analysisLineInterpolationPtr)(&v)
}

func (*analysisLineInterpolationPtr) ElementType() reflect.Type {
	return analysisLineInterpolationPtrType
}

func (in *analysisLineInterpolationPtr) ToAnalysisLineInterpolationPtrOutput() AnalysisLineInterpolationPtrOutput {
	return pulumi.ToOutput(in).(AnalysisLineInterpolationPtrOutput)
}

func (in *analysisLineInterpolationPtr) ToAnalysisLineInterpolationPtrOutputWithContext(ctx context.Context) AnalysisLineInterpolationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisLineInterpolationPtrOutput)
}

type AnalysisMapZoomMode string

const (
	AnalysisMapZoomModeAuto   = AnalysisMapZoomMode("AUTO")
	AnalysisMapZoomModeManual = AnalysisMapZoomMode("MANUAL")
)

func (AnalysisMapZoomMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMapZoomMode)(nil)).Elem()
}

func (e AnalysisMapZoomMode) ToAnalysisMapZoomModeOutput() AnalysisMapZoomModeOutput {
	return pulumi.ToOutput(e).(AnalysisMapZoomModeOutput)
}

func (e AnalysisMapZoomMode) ToAnalysisMapZoomModeOutputWithContext(ctx context.Context) AnalysisMapZoomModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisMapZoomModeOutput)
}

func (e AnalysisMapZoomMode) ToAnalysisMapZoomModePtrOutput() AnalysisMapZoomModePtrOutput {
	return e.ToAnalysisMapZoomModePtrOutputWithContext(context.Background())
}

func (e AnalysisMapZoomMode) ToAnalysisMapZoomModePtrOutputWithContext(ctx context.Context) AnalysisMapZoomModePtrOutput {
	return AnalysisMapZoomMode(e).ToAnalysisMapZoomModeOutputWithContext(ctx).ToAnalysisMapZoomModePtrOutputWithContext(ctx)
}

func (e AnalysisMapZoomMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisMapZoomMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisMapZoomMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisMapZoomMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisMapZoomModeOutput struct{ *pulumi.OutputState }

func (AnalysisMapZoomModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMapZoomMode)(nil)).Elem()
}

func (o AnalysisMapZoomModeOutput) ToAnalysisMapZoomModeOutput() AnalysisMapZoomModeOutput {
	return o
}

func (o AnalysisMapZoomModeOutput) ToAnalysisMapZoomModeOutputWithContext(ctx context.Context) AnalysisMapZoomModeOutput {
	return o
}

func (o AnalysisMapZoomModeOutput) ToAnalysisMapZoomModePtrOutput() AnalysisMapZoomModePtrOutput {
	return o.ToAnalysisMapZoomModePtrOutputWithContext(context.Background())
}

func (o AnalysisMapZoomModeOutput) ToAnalysisMapZoomModePtrOutputWithContext(ctx context.Context) AnalysisMapZoomModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisMapZoomMode) *AnalysisMapZoomMode {
		return &v
	}).(AnalysisMapZoomModePtrOutput)
}

func (o AnalysisMapZoomModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisMapZoomModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisMapZoomMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisMapZoomModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisMapZoomModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisMapZoomMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisMapZoomModePtrOutput struct{ *pulumi.OutputState }

func (AnalysisMapZoomModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMapZoomMode)(nil)).Elem()
}

func (o AnalysisMapZoomModePtrOutput) ToAnalysisMapZoomModePtrOutput() AnalysisMapZoomModePtrOutput {
	return o
}

func (o AnalysisMapZoomModePtrOutput) ToAnalysisMapZoomModePtrOutputWithContext(ctx context.Context) AnalysisMapZoomModePtrOutput {
	return o
}

func (o AnalysisMapZoomModePtrOutput) Elem() AnalysisMapZoomModeOutput {
	return o.ApplyT(func(v *AnalysisMapZoomMode) AnalysisMapZoomMode {
		if v != nil {
			return *v
		}
		var ret AnalysisMapZoomMode
		return ret
	}).(AnalysisMapZoomModeOutput)
}

func (o AnalysisMapZoomModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisMapZoomModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisMapZoomMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisMapZoomModeInput is an input type that accepts values of the AnalysisMapZoomMode enum
// A concrete instance of `AnalysisMapZoomModeInput` can be one of the following:
//
//	AnalysisMapZoomModeAuto
//	AnalysisMapZoomModeManual
type AnalysisMapZoomModeInput interface {
	pulumi.Input

	ToAnalysisMapZoomModeOutput() AnalysisMapZoomModeOutput
	ToAnalysisMapZoomModeOutputWithContext(context.Context) AnalysisMapZoomModeOutput
}

var analysisMapZoomModePtrType = reflect.TypeOf((**AnalysisMapZoomMode)(nil)).Elem()

type AnalysisMapZoomModePtrInput interface {
	pulumi.Input

	ToAnalysisMapZoomModePtrOutput() AnalysisMapZoomModePtrOutput
	ToAnalysisMapZoomModePtrOutputWithContext(context.Context) AnalysisMapZoomModePtrOutput
}

type analysisMapZoomModePtr string

func AnalysisMapZoomModePtr(v string) AnalysisMapZoomModePtrInput {
	return (*analysisMapZoomModePtr)(&v)
}

func (*analysisMapZoomModePtr) ElementType() reflect.Type {
	return analysisMapZoomModePtrType
}

func (in *analysisMapZoomModePtr) ToAnalysisMapZoomModePtrOutput() AnalysisMapZoomModePtrOutput {
	return pulumi.ToOutput(in).(AnalysisMapZoomModePtrOutput)
}

func (in *analysisMapZoomModePtr) ToAnalysisMapZoomModePtrOutputWithContext(ctx context.Context) AnalysisMapZoomModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisMapZoomModePtrOutput)
}

type AnalysisMaximumMinimumComputationType string

const (
	AnalysisMaximumMinimumComputationTypeMaximum = AnalysisMaximumMinimumComputationType("MAXIMUM")
	AnalysisMaximumMinimumComputationTypeMinimum = AnalysisMaximumMinimumComputationType("MINIMUM")
)

func (AnalysisMaximumMinimumComputationType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMaximumMinimumComputationType)(nil)).Elem()
}

func (e AnalysisMaximumMinimumComputationType) ToAnalysisMaximumMinimumComputationTypeOutput() AnalysisMaximumMinimumComputationTypeOutput {
	return pulumi.ToOutput(e).(AnalysisMaximumMinimumComputationTypeOutput)
}

func (e AnalysisMaximumMinimumComputationType) ToAnalysisMaximumMinimumComputationTypeOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisMaximumMinimumComputationTypeOutput)
}

func (e AnalysisMaximumMinimumComputationType) ToAnalysisMaximumMinimumComputationTypePtrOutput() AnalysisMaximumMinimumComputationTypePtrOutput {
	return e.ToAnalysisMaximumMinimumComputationTypePtrOutputWithContext(context.Background())
}

func (e AnalysisMaximumMinimumComputationType) ToAnalysisMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationTypePtrOutput {
	return AnalysisMaximumMinimumComputationType(e).ToAnalysisMaximumMinimumComputationTypeOutputWithContext(ctx).ToAnalysisMaximumMinimumComputationTypePtrOutputWithContext(ctx)
}

func (e AnalysisMaximumMinimumComputationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisMaximumMinimumComputationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisMaximumMinimumComputationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisMaximumMinimumComputationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisMaximumMinimumComputationTypeOutput struct{ *pulumi.OutputState }

func (AnalysisMaximumMinimumComputationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMaximumMinimumComputationType)(nil)).Elem()
}

func (o AnalysisMaximumMinimumComputationTypeOutput) ToAnalysisMaximumMinimumComputationTypeOutput() AnalysisMaximumMinimumComputationTypeOutput {
	return o
}

func (o AnalysisMaximumMinimumComputationTypeOutput) ToAnalysisMaximumMinimumComputationTypeOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationTypeOutput {
	return o
}

func (o AnalysisMaximumMinimumComputationTypeOutput) ToAnalysisMaximumMinimumComputationTypePtrOutput() AnalysisMaximumMinimumComputationTypePtrOutput {
	return o.ToAnalysisMaximumMinimumComputationTypePtrOutputWithContext(context.Background())
}

func (o AnalysisMaximumMinimumComputationTypeOutput) ToAnalysisMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisMaximumMinimumComputationType) *AnalysisMaximumMinimumComputationType {
		return &v
	}).(AnalysisMaximumMinimumComputationTypePtrOutput)
}

func (o AnalysisMaximumMinimumComputationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisMaximumMinimumComputationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisMaximumMinimumComputationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisMaximumMinimumComputationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisMaximumMinimumComputationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisMaximumMinimumComputationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisMaximumMinimumComputationTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisMaximumMinimumComputationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMaximumMinimumComputationType)(nil)).Elem()
}

func (o AnalysisMaximumMinimumComputationTypePtrOutput) ToAnalysisMaximumMinimumComputationTypePtrOutput() AnalysisMaximumMinimumComputationTypePtrOutput {
	return o
}

func (o AnalysisMaximumMinimumComputationTypePtrOutput) ToAnalysisMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationTypePtrOutput {
	return o
}

func (o AnalysisMaximumMinimumComputationTypePtrOutput) Elem() AnalysisMaximumMinimumComputationTypeOutput {
	return o.ApplyT(func(v *AnalysisMaximumMinimumComputationType) AnalysisMaximumMinimumComputationType {
		if v != nil {
			return *v
		}
		var ret AnalysisMaximumMinimumComputationType
		return ret
	}).(AnalysisMaximumMinimumComputationTypeOutput)
}

func (o AnalysisMaximumMinimumComputationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisMaximumMinimumComputationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisMaximumMinimumComputationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisMaximumMinimumComputationTypeInput is an input type that accepts values of the AnalysisMaximumMinimumComputationType enum
// A concrete instance of `AnalysisMaximumMinimumComputationTypeInput` can be one of the following:
//
//	AnalysisMaximumMinimumComputationTypeMaximum
//	AnalysisMaximumMinimumComputationTypeMinimum
type AnalysisMaximumMinimumComputationTypeInput interface {
	pulumi.Input

	ToAnalysisMaximumMinimumComputationTypeOutput() AnalysisMaximumMinimumComputationTypeOutput
	ToAnalysisMaximumMinimumComputationTypeOutputWithContext(context.Context) AnalysisMaximumMinimumComputationTypeOutput
}

var analysisMaximumMinimumComputationTypePtrType = reflect.TypeOf((**AnalysisMaximumMinimumComputationType)(nil)).Elem()

type AnalysisMaximumMinimumComputationTypePtrInput interface {
	pulumi.Input

	ToAnalysisMaximumMinimumComputationTypePtrOutput() AnalysisMaximumMinimumComputationTypePtrOutput
	ToAnalysisMaximumMinimumComputationTypePtrOutputWithContext(context.Context) AnalysisMaximumMinimumComputationTypePtrOutput
}

type analysisMaximumMinimumComputationTypePtr string

func AnalysisMaximumMinimumComputationTypePtr(v string) AnalysisMaximumMinimumComputationTypePtrInput {
	return (*analysisMaximumMinimumComputationTypePtr)(&v)
}

func (*analysisMaximumMinimumComputationTypePtr) ElementType() reflect.Type {
	return analysisMaximumMinimumComputationTypePtrType
}

func (in *analysisMaximumMinimumComputationTypePtr) ToAnalysisMaximumMinimumComputationTypePtrOutput() AnalysisMaximumMinimumComputationTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisMaximumMinimumComputationTypePtrOutput)
}

func (in *analysisMaximumMinimumComputationTypePtr) ToAnalysisMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) AnalysisMaximumMinimumComputationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisMaximumMinimumComputationTypePtrOutput)
}

type AnalysisMissingDataTreatmentOption string

const (
	AnalysisMissingDataTreatmentOptionInterpolate = AnalysisMissingDataTreatmentOption("INTERPOLATE")
	AnalysisMissingDataTreatmentOptionShowAsZero  = AnalysisMissingDataTreatmentOption("SHOW_AS_ZERO")
	AnalysisMissingDataTreatmentOptionShowAsBlank = AnalysisMissingDataTreatmentOption("SHOW_AS_BLANK")
)

func (AnalysisMissingDataTreatmentOption) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMissingDataTreatmentOption)(nil)).Elem()
}

func (e AnalysisMissingDataTreatmentOption) ToAnalysisMissingDataTreatmentOptionOutput() AnalysisMissingDataTreatmentOptionOutput {
	return pulumi.ToOutput(e).(AnalysisMissingDataTreatmentOptionOutput)
}

func (e AnalysisMissingDataTreatmentOption) ToAnalysisMissingDataTreatmentOptionOutputWithContext(ctx context.Context) AnalysisMissingDataTreatmentOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisMissingDataTreatmentOptionOutput)
}

func (e AnalysisMissingDataTreatmentOption) ToAnalysisMissingDataTreatmentOptionPtrOutput() AnalysisMissingDataTreatmentOptionPtrOutput {
	return e.ToAnalysisMissingDataTreatmentOptionPtrOutputWithContext(context.Background())
}

func (e AnalysisMissingDataTreatmentOption) ToAnalysisMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) AnalysisMissingDataTreatmentOptionPtrOutput {
	return AnalysisMissingDataTreatmentOption(e).ToAnalysisMissingDataTreatmentOptionOutputWithContext(ctx).ToAnalysisMissingDataTreatmentOptionPtrOutputWithContext(ctx)
}

func (e AnalysisMissingDataTreatmentOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisMissingDataTreatmentOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisMissingDataTreatmentOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisMissingDataTreatmentOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisMissingDataTreatmentOptionOutput struct{ *pulumi.OutputState }

func (AnalysisMissingDataTreatmentOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisMissingDataTreatmentOption)(nil)).Elem()
}

func (o AnalysisMissingDataTreatmentOptionOutput) ToAnalysisMissingDataTreatmentOptionOutput() AnalysisMissingDataTreatmentOptionOutput {
	return o
}

func (o AnalysisMissingDataTreatmentOptionOutput) ToAnalysisMissingDataTreatmentOptionOutputWithContext(ctx context.Context) AnalysisMissingDataTreatmentOptionOutput {
	return o
}

func (o AnalysisMissingDataTreatmentOptionOutput) ToAnalysisMissingDataTreatmentOptionPtrOutput() AnalysisMissingDataTreatmentOptionPtrOutput {
	return o.ToAnalysisMissingDataTreatmentOptionPtrOutputWithContext(context.Background())
}

func (o AnalysisMissingDataTreatmentOptionOutput) ToAnalysisMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) AnalysisMissingDataTreatmentOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisMissingDataTreatmentOption) *AnalysisMissingDataTreatmentOption {
		return &v
	}).(AnalysisMissingDataTreatmentOptionPtrOutput)
}

func (o AnalysisMissingDataTreatmentOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisMissingDataTreatmentOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisMissingDataTreatmentOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisMissingDataTreatmentOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisMissingDataTreatmentOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisMissingDataTreatmentOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisMissingDataTreatmentOptionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisMissingDataTreatmentOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisMissingDataTreatmentOption)(nil)).Elem()
}

func (o AnalysisMissingDataTreatmentOptionPtrOutput) ToAnalysisMissingDataTreatmentOptionPtrOutput() AnalysisMissingDataTreatmentOptionPtrOutput {
	return o
}

func (o AnalysisMissingDataTreatmentOptionPtrOutput) ToAnalysisMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) AnalysisMissingDataTreatmentOptionPtrOutput {
	return o
}

func (o AnalysisMissingDataTreatmentOptionPtrOutput) Elem() AnalysisMissingDataTreatmentOptionOutput {
	return o.ApplyT(func(v *AnalysisMissingDataTreatmentOption) AnalysisMissingDataTreatmentOption {
		if v != nil {
			return *v
		}
		var ret AnalysisMissingDataTreatmentOption
		return ret
	}).(AnalysisMissingDataTreatmentOptionOutput)
}

func (o AnalysisMissingDataTreatmentOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisMissingDataTreatmentOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisMissingDataTreatmentOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisMissingDataTreatmentOptionInput is an input type that accepts values of the AnalysisMissingDataTreatmentOption enum
// A concrete instance of `AnalysisMissingDataTreatmentOptionInput` can be one of the following:
//
//	AnalysisMissingDataTreatmentOptionInterpolate
//	AnalysisMissingDataTreatmentOptionShowAsZero
//	AnalysisMissingDataTreatmentOptionShowAsBlank
type AnalysisMissingDataTreatmentOptionInput interface {
	pulumi.Input

	ToAnalysisMissingDataTreatmentOptionOutput() AnalysisMissingDataTreatmentOptionOutput
	ToAnalysisMissingDataTreatmentOptionOutputWithContext(context.Context) AnalysisMissingDataTreatmentOptionOutput
}

var analysisMissingDataTreatmentOptionPtrType = reflect.TypeOf((**AnalysisMissingDataTreatmentOption)(nil)).Elem()

type AnalysisMissingDataTreatmentOptionPtrInput interface {
	pulumi.Input

	ToAnalysisMissingDataTreatmentOptionPtrOutput() AnalysisMissingDataTreatmentOptionPtrOutput
	ToAnalysisMissingDataTreatmentOptionPtrOutputWithContext(context.Context) AnalysisMissingDataTreatmentOptionPtrOutput
}

type analysisMissingDataTreatmentOptionPtr string

func AnalysisMissingDataTreatmentOptionPtr(v string) AnalysisMissingDataTreatmentOptionPtrInput {
	return (*analysisMissingDataTreatmentOptionPtr)(&v)
}

func (*analysisMissingDataTreatmentOptionPtr) ElementType() reflect.Type {
	return analysisMissingDataTreatmentOptionPtrType
}

func (in *analysisMissingDataTreatmentOptionPtr) ToAnalysisMissingDataTreatmentOptionPtrOutput() AnalysisMissingDataTreatmentOptionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisMissingDataTreatmentOptionPtrOutput)
}

func (in *analysisMissingDataTreatmentOptionPtr) ToAnalysisMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) AnalysisMissingDataTreatmentOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisMissingDataTreatmentOptionPtrOutput)
}

type AnalysisNegativeValueDisplayMode string

const (
	AnalysisNegativeValueDisplayModePositive = AnalysisNegativeValueDisplayMode("POSITIVE")
	AnalysisNegativeValueDisplayModeNegative = AnalysisNegativeValueDisplayMode("NEGATIVE")
)

func (AnalysisNegativeValueDisplayMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNegativeValueDisplayMode)(nil)).Elem()
}

func (e AnalysisNegativeValueDisplayMode) ToAnalysisNegativeValueDisplayModeOutput() AnalysisNegativeValueDisplayModeOutput {
	return pulumi.ToOutput(e).(AnalysisNegativeValueDisplayModeOutput)
}

func (e AnalysisNegativeValueDisplayMode) ToAnalysisNegativeValueDisplayModeOutputWithContext(ctx context.Context) AnalysisNegativeValueDisplayModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisNegativeValueDisplayModeOutput)
}

func (e AnalysisNegativeValueDisplayMode) ToAnalysisNegativeValueDisplayModePtrOutput() AnalysisNegativeValueDisplayModePtrOutput {
	return e.ToAnalysisNegativeValueDisplayModePtrOutputWithContext(context.Background())
}

func (e AnalysisNegativeValueDisplayMode) ToAnalysisNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) AnalysisNegativeValueDisplayModePtrOutput {
	return AnalysisNegativeValueDisplayMode(e).ToAnalysisNegativeValueDisplayModeOutputWithContext(ctx).ToAnalysisNegativeValueDisplayModePtrOutputWithContext(ctx)
}

func (e AnalysisNegativeValueDisplayMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisNegativeValueDisplayMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisNegativeValueDisplayMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisNegativeValueDisplayMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisNegativeValueDisplayModeOutput struct{ *pulumi.OutputState }

func (AnalysisNegativeValueDisplayModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNegativeValueDisplayMode)(nil)).Elem()
}

func (o AnalysisNegativeValueDisplayModeOutput) ToAnalysisNegativeValueDisplayModeOutput() AnalysisNegativeValueDisplayModeOutput {
	return o
}

func (o AnalysisNegativeValueDisplayModeOutput) ToAnalysisNegativeValueDisplayModeOutputWithContext(ctx context.Context) AnalysisNegativeValueDisplayModeOutput {
	return o
}

func (o AnalysisNegativeValueDisplayModeOutput) ToAnalysisNegativeValueDisplayModePtrOutput() AnalysisNegativeValueDisplayModePtrOutput {
	return o.ToAnalysisNegativeValueDisplayModePtrOutputWithContext(context.Background())
}

func (o AnalysisNegativeValueDisplayModeOutput) ToAnalysisNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) AnalysisNegativeValueDisplayModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNegativeValueDisplayMode) *AnalysisNegativeValueDisplayMode {
		return &v
	}).(AnalysisNegativeValueDisplayModePtrOutput)
}

func (o AnalysisNegativeValueDisplayModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisNegativeValueDisplayModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisNegativeValueDisplayMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisNegativeValueDisplayModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisNegativeValueDisplayModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisNegativeValueDisplayMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisNegativeValueDisplayModePtrOutput struct{ *pulumi.OutputState }

func (AnalysisNegativeValueDisplayModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNegativeValueDisplayMode)(nil)).Elem()
}

func (o AnalysisNegativeValueDisplayModePtrOutput) ToAnalysisNegativeValueDisplayModePtrOutput() AnalysisNegativeValueDisplayModePtrOutput {
	return o
}

func (o AnalysisNegativeValueDisplayModePtrOutput) ToAnalysisNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) AnalysisNegativeValueDisplayModePtrOutput {
	return o
}

func (o AnalysisNegativeValueDisplayModePtrOutput) Elem() AnalysisNegativeValueDisplayModeOutput {
	return o.ApplyT(func(v *AnalysisNegativeValueDisplayMode) AnalysisNegativeValueDisplayMode {
		if v != nil {
			return *v
		}
		var ret AnalysisNegativeValueDisplayMode
		return ret
	}).(AnalysisNegativeValueDisplayModeOutput)
}

func (o AnalysisNegativeValueDisplayModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisNegativeValueDisplayModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisNegativeValueDisplayMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisNegativeValueDisplayModeInput is an input type that accepts values of the AnalysisNegativeValueDisplayMode enum
// A concrete instance of `AnalysisNegativeValueDisplayModeInput` can be one of the following:
//
//	AnalysisNegativeValueDisplayModePositive
//	AnalysisNegativeValueDisplayModeNegative
type AnalysisNegativeValueDisplayModeInput interface {
	pulumi.Input

	ToAnalysisNegativeValueDisplayModeOutput() AnalysisNegativeValueDisplayModeOutput
	ToAnalysisNegativeValueDisplayModeOutputWithContext(context.Context) AnalysisNegativeValueDisplayModeOutput
}

var analysisNegativeValueDisplayModePtrType = reflect.TypeOf((**AnalysisNegativeValueDisplayMode)(nil)).Elem()

type AnalysisNegativeValueDisplayModePtrInput interface {
	pulumi.Input

	ToAnalysisNegativeValueDisplayModePtrOutput() AnalysisNegativeValueDisplayModePtrOutput
	ToAnalysisNegativeValueDisplayModePtrOutputWithContext(context.Context) AnalysisNegativeValueDisplayModePtrOutput
}

type analysisNegativeValueDisplayModePtr string

func AnalysisNegativeValueDisplayModePtr(v string) AnalysisNegativeValueDisplayModePtrInput {
	return (*analysisNegativeValueDisplayModePtr)(&v)
}

func (*analysisNegativeValueDisplayModePtr) ElementType() reflect.Type {
	return analysisNegativeValueDisplayModePtrType
}

func (in *analysisNegativeValueDisplayModePtr) ToAnalysisNegativeValueDisplayModePtrOutput() AnalysisNegativeValueDisplayModePtrOutput {
	return pulumi.ToOutput(in).(AnalysisNegativeValueDisplayModePtrOutput)
}

func (in *analysisNegativeValueDisplayModePtr) ToAnalysisNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) AnalysisNegativeValueDisplayModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisNegativeValueDisplayModePtrOutput)
}

type AnalysisNumberScale string

const (
	AnalysisNumberScaleNone      = AnalysisNumberScale("NONE")
	AnalysisNumberScaleAuto      = AnalysisNumberScale("AUTO")
	AnalysisNumberScaleThousands = AnalysisNumberScale("THOUSANDS")
	AnalysisNumberScaleMillions  = AnalysisNumberScale("MILLIONS")
	AnalysisNumberScaleBillions  = AnalysisNumberScale("BILLIONS")
	AnalysisNumberScaleTrillions = AnalysisNumberScale("TRILLIONS")
)

func (AnalysisNumberScale) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumberScale)(nil)).Elem()
}

func (e AnalysisNumberScale) ToAnalysisNumberScaleOutput() AnalysisNumberScaleOutput {
	return pulumi.ToOutput(e).(AnalysisNumberScaleOutput)
}

func (e AnalysisNumberScale) ToAnalysisNumberScaleOutputWithContext(ctx context.Context) AnalysisNumberScaleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisNumberScaleOutput)
}

func (e AnalysisNumberScale) ToAnalysisNumberScalePtrOutput() AnalysisNumberScalePtrOutput {
	return e.ToAnalysisNumberScalePtrOutputWithContext(context.Background())
}

func (e AnalysisNumberScale) ToAnalysisNumberScalePtrOutputWithContext(ctx context.Context) AnalysisNumberScalePtrOutput {
	return AnalysisNumberScale(e).ToAnalysisNumberScaleOutputWithContext(ctx).ToAnalysisNumberScalePtrOutputWithContext(ctx)
}

func (e AnalysisNumberScale) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisNumberScale) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisNumberScale) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisNumberScale) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisNumberScaleOutput struct{ *pulumi.OutputState }

func (AnalysisNumberScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumberScale)(nil)).Elem()
}

func (o AnalysisNumberScaleOutput) ToAnalysisNumberScaleOutput() AnalysisNumberScaleOutput {
	return o
}

func (o AnalysisNumberScaleOutput) ToAnalysisNumberScaleOutputWithContext(ctx context.Context) AnalysisNumberScaleOutput {
	return o
}

func (o AnalysisNumberScaleOutput) ToAnalysisNumberScalePtrOutput() AnalysisNumberScalePtrOutput {
	return o.ToAnalysisNumberScalePtrOutputWithContext(context.Background())
}

func (o AnalysisNumberScaleOutput) ToAnalysisNumberScalePtrOutputWithContext(ctx context.Context) AnalysisNumberScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumberScale) *AnalysisNumberScale {
		return &v
	}).(AnalysisNumberScalePtrOutput)
}

func (o AnalysisNumberScaleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisNumberScaleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisNumberScale) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisNumberScaleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisNumberScaleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisNumberScale) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisNumberScalePtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumberScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumberScale)(nil)).Elem()
}

func (o AnalysisNumberScalePtrOutput) ToAnalysisNumberScalePtrOutput() AnalysisNumberScalePtrOutput {
	return o
}

func (o AnalysisNumberScalePtrOutput) ToAnalysisNumberScalePtrOutputWithContext(ctx context.Context) AnalysisNumberScalePtrOutput {
	return o
}

func (o AnalysisNumberScalePtrOutput) Elem() AnalysisNumberScaleOutput {
	return o.ApplyT(func(v *AnalysisNumberScale) AnalysisNumberScale {
		if v != nil {
			return *v
		}
		var ret AnalysisNumberScale
		return ret
	}).(AnalysisNumberScaleOutput)
}

func (o AnalysisNumberScalePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisNumberScalePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisNumberScale) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisNumberScaleInput is an input type that accepts values of the AnalysisNumberScale enum
// A concrete instance of `AnalysisNumberScaleInput` can be one of the following:
//
//	AnalysisNumberScaleNone
//	AnalysisNumberScaleAuto
//	AnalysisNumberScaleThousands
//	AnalysisNumberScaleMillions
//	AnalysisNumberScaleBillions
//	AnalysisNumberScaleTrillions
type AnalysisNumberScaleInput interface {
	pulumi.Input

	ToAnalysisNumberScaleOutput() AnalysisNumberScaleOutput
	ToAnalysisNumberScaleOutputWithContext(context.Context) AnalysisNumberScaleOutput
}

var analysisNumberScalePtrType = reflect.TypeOf((**AnalysisNumberScale)(nil)).Elem()

type AnalysisNumberScalePtrInput interface {
	pulumi.Input

	ToAnalysisNumberScalePtrOutput() AnalysisNumberScalePtrOutput
	ToAnalysisNumberScalePtrOutputWithContext(context.Context) AnalysisNumberScalePtrOutput
}

type analysisNumberScalePtr string

func AnalysisNumberScalePtr(v string) AnalysisNumberScalePtrInput {
	return (*analysisNumberScalePtr)(&v)
}

func (*analysisNumberScalePtr) ElementType() reflect.Type {
	return analysisNumberScalePtrType
}

func (in *analysisNumberScalePtr) ToAnalysisNumberScalePtrOutput() AnalysisNumberScalePtrOutput {
	return pulumi.ToOutput(in).(AnalysisNumberScalePtrOutput)
}

func (in *analysisNumberScalePtr) ToAnalysisNumberScalePtrOutputWithContext(ctx context.Context) AnalysisNumberScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisNumberScalePtrOutput)
}

type AnalysisNumericEqualityMatchOperator string

const (
	AnalysisNumericEqualityMatchOperatorEquals       = AnalysisNumericEqualityMatchOperator("EQUALS")
	AnalysisNumericEqualityMatchOperatorDoesNotEqual = AnalysisNumericEqualityMatchOperator("DOES_NOT_EQUAL")
)

func (AnalysisNumericEqualityMatchOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericEqualityMatchOperator)(nil)).Elem()
}

func (e AnalysisNumericEqualityMatchOperator) ToAnalysisNumericEqualityMatchOperatorOutput() AnalysisNumericEqualityMatchOperatorOutput {
	return pulumi.ToOutput(e).(AnalysisNumericEqualityMatchOperatorOutput)
}

func (e AnalysisNumericEqualityMatchOperator) ToAnalysisNumericEqualityMatchOperatorOutputWithContext(ctx context.Context) AnalysisNumericEqualityMatchOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisNumericEqualityMatchOperatorOutput)
}

func (e AnalysisNumericEqualityMatchOperator) ToAnalysisNumericEqualityMatchOperatorPtrOutput() AnalysisNumericEqualityMatchOperatorPtrOutput {
	return e.ToAnalysisNumericEqualityMatchOperatorPtrOutputWithContext(context.Background())
}

func (e AnalysisNumericEqualityMatchOperator) ToAnalysisNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityMatchOperatorPtrOutput {
	return AnalysisNumericEqualityMatchOperator(e).ToAnalysisNumericEqualityMatchOperatorOutputWithContext(ctx).ToAnalysisNumericEqualityMatchOperatorPtrOutputWithContext(ctx)
}

func (e AnalysisNumericEqualityMatchOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisNumericEqualityMatchOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisNumericEqualityMatchOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisNumericEqualityMatchOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisNumericEqualityMatchOperatorOutput struct{ *pulumi.OutputState }

func (AnalysisNumericEqualityMatchOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericEqualityMatchOperator)(nil)).Elem()
}

func (o AnalysisNumericEqualityMatchOperatorOutput) ToAnalysisNumericEqualityMatchOperatorOutput() AnalysisNumericEqualityMatchOperatorOutput {
	return o
}

func (o AnalysisNumericEqualityMatchOperatorOutput) ToAnalysisNumericEqualityMatchOperatorOutputWithContext(ctx context.Context) AnalysisNumericEqualityMatchOperatorOutput {
	return o
}

func (o AnalysisNumericEqualityMatchOperatorOutput) ToAnalysisNumericEqualityMatchOperatorPtrOutput() AnalysisNumericEqualityMatchOperatorPtrOutput {
	return o.ToAnalysisNumericEqualityMatchOperatorPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericEqualityMatchOperatorOutput) ToAnalysisNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityMatchOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericEqualityMatchOperator) *AnalysisNumericEqualityMatchOperator {
		return &v
	}).(AnalysisNumericEqualityMatchOperatorPtrOutput)
}

func (o AnalysisNumericEqualityMatchOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisNumericEqualityMatchOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisNumericEqualityMatchOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisNumericEqualityMatchOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericEqualityMatchOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisNumericEqualityMatchOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisNumericEqualityMatchOperatorPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericEqualityMatchOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericEqualityMatchOperator)(nil)).Elem()
}

func (o AnalysisNumericEqualityMatchOperatorPtrOutput) ToAnalysisNumericEqualityMatchOperatorPtrOutput() AnalysisNumericEqualityMatchOperatorPtrOutput {
	return o
}

func (o AnalysisNumericEqualityMatchOperatorPtrOutput) ToAnalysisNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityMatchOperatorPtrOutput {
	return o
}

func (o AnalysisNumericEqualityMatchOperatorPtrOutput) Elem() AnalysisNumericEqualityMatchOperatorOutput {
	return o.ApplyT(func(v *AnalysisNumericEqualityMatchOperator) AnalysisNumericEqualityMatchOperator {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericEqualityMatchOperator
		return ret
	}).(AnalysisNumericEqualityMatchOperatorOutput)
}

func (o AnalysisNumericEqualityMatchOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericEqualityMatchOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisNumericEqualityMatchOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisNumericEqualityMatchOperatorInput is an input type that accepts values of the AnalysisNumericEqualityMatchOperator enum
// A concrete instance of `AnalysisNumericEqualityMatchOperatorInput` can be one of the following:
//
//	AnalysisNumericEqualityMatchOperatorEquals
//	AnalysisNumericEqualityMatchOperatorDoesNotEqual
type AnalysisNumericEqualityMatchOperatorInput interface {
	pulumi.Input

	ToAnalysisNumericEqualityMatchOperatorOutput() AnalysisNumericEqualityMatchOperatorOutput
	ToAnalysisNumericEqualityMatchOperatorOutputWithContext(context.Context) AnalysisNumericEqualityMatchOperatorOutput
}

var analysisNumericEqualityMatchOperatorPtrType = reflect.TypeOf((**AnalysisNumericEqualityMatchOperator)(nil)).Elem()

type AnalysisNumericEqualityMatchOperatorPtrInput interface {
	pulumi.Input

	ToAnalysisNumericEqualityMatchOperatorPtrOutput() AnalysisNumericEqualityMatchOperatorPtrOutput
	ToAnalysisNumericEqualityMatchOperatorPtrOutputWithContext(context.Context) AnalysisNumericEqualityMatchOperatorPtrOutput
}

type analysisNumericEqualityMatchOperatorPtr string

func AnalysisNumericEqualityMatchOperatorPtr(v string) AnalysisNumericEqualityMatchOperatorPtrInput {
	return (*analysisNumericEqualityMatchOperatorPtr)(&v)
}

func (*analysisNumericEqualityMatchOperatorPtr) ElementType() reflect.Type {
	return analysisNumericEqualityMatchOperatorPtrType
}

func (in *analysisNumericEqualityMatchOperatorPtr) ToAnalysisNumericEqualityMatchOperatorPtrOutput() AnalysisNumericEqualityMatchOperatorPtrOutput {
	return pulumi.ToOutput(in).(AnalysisNumericEqualityMatchOperatorPtrOutput)
}

func (in *analysisNumericEqualityMatchOperatorPtr) ToAnalysisNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) AnalysisNumericEqualityMatchOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisNumericEqualityMatchOperatorPtrOutput)
}

type AnalysisNumericFilterSelectAllOptions string

const (
	AnalysisNumericFilterSelectAllOptionsFilterAllValues = AnalysisNumericFilterSelectAllOptions("FILTER_ALL_VALUES")
)

func (AnalysisNumericFilterSelectAllOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericFilterSelectAllOptions)(nil)).Elem()
}

func (e AnalysisNumericFilterSelectAllOptions) ToAnalysisNumericFilterSelectAllOptionsOutput() AnalysisNumericFilterSelectAllOptionsOutput {
	return pulumi.ToOutput(e).(AnalysisNumericFilterSelectAllOptionsOutput)
}

func (e AnalysisNumericFilterSelectAllOptions) ToAnalysisNumericFilterSelectAllOptionsOutputWithContext(ctx context.Context) AnalysisNumericFilterSelectAllOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisNumericFilterSelectAllOptionsOutput)
}

func (e AnalysisNumericFilterSelectAllOptions) ToAnalysisNumericFilterSelectAllOptionsPtrOutput() AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return e.ToAnalysisNumericFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (e AnalysisNumericFilterSelectAllOptions) ToAnalysisNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return AnalysisNumericFilterSelectAllOptions(e).ToAnalysisNumericFilterSelectAllOptionsOutputWithContext(ctx).ToAnalysisNumericFilterSelectAllOptionsPtrOutputWithContext(ctx)
}

func (e AnalysisNumericFilterSelectAllOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisNumericFilterSelectAllOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisNumericFilterSelectAllOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisNumericFilterSelectAllOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisNumericFilterSelectAllOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisNumericFilterSelectAllOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericFilterSelectAllOptions)(nil)).Elem()
}

func (o AnalysisNumericFilterSelectAllOptionsOutput) ToAnalysisNumericFilterSelectAllOptionsOutput() AnalysisNumericFilterSelectAllOptionsOutput {
	return o
}

func (o AnalysisNumericFilterSelectAllOptionsOutput) ToAnalysisNumericFilterSelectAllOptionsOutputWithContext(ctx context.Context) AnalysisNumericFilterSelectAllOptionsOutput {
	return o
}

func (o AnalysisNumericFilterSelectAllOptionsOutput) ToAnalysisNumericFilterSelectAllOptionsPtrOutput() AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return o.ToAnalysisNumericFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericFilterSelectAllOptionsOutput) ToAnalysisNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericFilterSelectAllOptions) *AnalysisNumericFilterSelectAllOptions {
		return &v
	}).(AnalysisNumericFilterSelectAllOptionsPtrOutput)
}

func (o AnalysisNumericFilterSelectAllOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisNumericFilterSelectAllOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisNumericFilterSelectAllOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisNumericFilterSelectAllOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericFilterSelectAllOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisNumericFilterSelectAllOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisNumericFilterSelectAllOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericFilterSelectAllOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericFilterSelectAllOptions)(nil)).Elem()
}

func (o AnalysisNumericFilterSelectAllOptionsPtrOutput) ToAnalysisNumericFilterSelectAllOptionsPtrOutput() AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return o
}

func (o AnalysisNumericFilterSelectAllOptionsPtrOutput) ToAnalysisNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return o
}

func (o AnalysisNumericFilterSelectAllOptionsPtrOutput) Elem() AnalysisNumericFilterSelectAllOptionsOutput {
	return o.ApplyT(func(v *AnalysisNumericFilterSelectAllOptions) AnalysisNumericFilterSelectAllOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericFilterSelectAllOptions
		return ret
	}).(AnalysisNumericFilterSelectAllOptionsOutput)
}

func (o AnalysisNumericFilterSelectAllOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericFilterSelectAllOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisNumericFilterSelectAllOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisNumericFilterSelectAllOptionsInput is an input type that accepts values of the AnalysisNumericFilterSelectAllOptions enum
// A concrete instance of `AnalysisNumericFilterSelectAllOptionsInput` can be one of the following:
//
//	AnalysisNumericFilterSelectAllOptionsFilterAllValues
type AnalysisNumericFilterSelectAllOptionsInput interface {
	pulumi.Input

	ToAnalysisNumericFilterSelectAllOptionsOutput() AnalysisNumericFilterSelectAllOptionsOutput
	ToAnalysisNumericFilterSelectAllOptionsOutputWithContext(context.Context) AnalysisNumericFilterSelectAllOptionsOutput
}

var analysisNumericFilterSelectAllOptionsPtrType = reflect.TypeOf((**AnalysisNumericFilterSelectAllOptions)(nil)).Elem()

type AnalysisNumericFilterSelectAllOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisNumericFilterSelectAllOptionsPtrOutput() AnalysisNumericFilterSelectAllOptionsPtrOutput
	ToAnalysisNumericFilterSelectAllOptionsPtrOutputWithContext(context.Context) AnalysisNumericFilterSelectAllOptionsPtrOutput
}

type analysisNumericFilterSelectAllOptionsPtr string

func AnalysisNumericFilterSelectAllOptionsPtr(v string) AnalysisNumericFilterSelectAllOptionsPtrInput {
	return (*analysisNumericFilterSelectAllOptionsPtr)(&v)
}

func (*analysisNumericFilterSelectAllOptionsPtr) ElementType() reflect.Type {
	return analysisNumericFilterSelectAllOptionsPtrType
}

func (in *analysisNumericFilterSelectAllOptionsPtr) ToAnalysisNumericFilterSelectAllOptionsPtrOutput() AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutput(in).(AnalysisNumericFilterSelectAllOptionsPtrOutput)
}

func (in *analysisNumericFilterSelectAllOptionsPtr) ToAnalysisNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) AnalysisNumericFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisNumericFilterSelectAllOptionsPtrOutput)
}

type AnalysisNumericSeparatorSymbol string

const (
	AnalysisNumericSeparatorSymbolComma = AnalysisNumericSeparatorSymbol("COMMA")
	AnalysisNumericSeparatorSymbolDot   = AnalysisNumericSeparatorSymbol("DOT")
	AnalysisNumericSeparatorSymbolSpace = AnalysisNumericSeparatorSymbol("SPACE")
)

func (AnalysisNumericSeparatorSymbol) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericSeparatorSymbol)(nil)).Elem()
}

func (e AnalysisNumericSeparatorSymbol) ToAnalysisNumericSeparatorSymbolOutput() AnalysisNumericSeparatorSymbolOutput {
	return pulumi.ToOutput(e).(AnalysisNumericSeparatorSymbolOutput)
}

func (e AnalysisNumericSeparatorSymbol) ToAnalysisNumericSeparatorSymbolOutputWithContext(ctx context.Context) AnalysisNumericSeparatorSymbolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisNumericSeparatorSymbolOutput)
}

func (e AnalysisNumericSeparatorSymbol) ToAnalysisNumericSeparatorSymbolPtrOutput() AnalysisNumericSeparatorSymbolPtrOutput {
	return e.ToAnalysisNumericSeparatorSymbolPtrOutputWithContext(context.Background())
}

func (e AnalysisNumericSeparatorSymbol) ToAnalysisNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) AnalysisNumericSeparatorSymbolPtrOutput {
	return AnalysisNumericSeparatorSymbol(e).ToAnalysisNumericSeparatorSymbolOutputWithContext(ctx).ToAnalysisNumericSeparatorSymbolPtrOutputWithContext(ctx)
}

func (e AnalysisNumericSeparatorSymbol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisNumericSeparatorSymbol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisNumericSeparatorSymbol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisNumericSeparatorSymbol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisNumericSeparatorSymbolOutput struct{ *pulumi.OutputState }

func (AnalysisNumericSeparatorSymbolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisNumericSeparatorSymbol)(nil)).Elem()
}

func (o AnalysisNumericSeparatorSymbolOutput) ToAnalysisNumericSeparatorSymbolOutput() AnalysisNumericSeparatorSymbolOutput {
	return o
}

func (o AnalysisNumericSeparatorSymbolOutput) ToAnalysisNumericSeparatorSymbolOutputWithContext(ctx context.Context) AnalysisNumericSeparatorSymbolOutput {
	return o
}

func (o AnalysisNumericSeparatorSymbolOutput) ToAnalysisNumericSeparatorSymbolPtrOutput() AnalysisNumericSeparatorSymbolPtrOutput {
	return o.ToAnalysisNumericSeparatorSymbolPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericSeparatorSymbolOutput) ToAnalysisNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) AnalysisNumericSeparatorSymbolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisNumericSeparatorSymbol) *AnalysisNumericSeparatorSymbol {
		return &v
	}).(AnalysisNumericSeparatorSymbolPtrOutput)
}

func (o AnalysisNumericSeparatorSymbolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisNumericSeparatorSymbolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisNumericSeparatorSymbol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisNumericSeparatorSymbolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericSeparatorSymbolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisNumericSeparatorSymbol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisNumericSeparatorSymbolPtrOutput struct{ *pulumi.OutputState }

func (AnalysisNumericSeparatorSymbolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisNumericSeparatorSymbol)(nil)).Elem()
}

func (o AnalysisNumericSeparatorSymbolPtrOutput) ToAnalysisNumericSeparatorSymbolPtrOutput() AnalysisNumericSeparatorSymbolPtrOutput {
	return o
}

func (o AnalysisNumericSeparatorSymbolPtrOutput) ToAnalysisNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) AnalysisNumericSeparatorSymbolPtrOutput {
	return o
}

func (o AnalysisNumericSeparatorSymbolPtrOutput) Elem() AnalysisNumericSeparatorSymbolOutput {
	return o.ApplyT(func(v *AnalysisNumericSeparatorSymbol) AnalysisNumericSeparatorSymbol {
		if v != nil {
			return *v
		}
		var ret AnalysisNumericSeparatorSymbol
		return ret
	}).(AnalysisNumericSeparatorSymbolOutput)
}

func (o AnalysisNumericSeparatorSymbolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisNumericSeparatorSymbolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisNumericSeparatorSymbol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisNumericSeparatorSymbolInput is an input type that accepts values of the AnalysisNumericSeparatorSymbol enum
// A concrete instance of `AnalysisNumericSeparatorSymbolInput` can be one of the following:
//
//	AnalysisNumericSeparatorSymbolComma
//	AnalysisNumericSeparatorSymbolDot
//	AnalysisNumericSeparatorSymbolSpace
type AnalysisNumericSeparatorSymbolInput interface {
	pulumi.Input

	ToAnalysisNumericSeparatorSymbolOutput() AnalysisNumericSeparatorSymbolOutput
	ToAnalysisNumericSeparatorSymbolOutputWithContext(context.Context) AnalysisNumericSeparatorSymbolOutput
}

var analysisNumericSeparatorSymbolPtrType = reflect.TypeOf((**AnalysisNumericSeparatorSymbol)(nil)).Elem()

type AnalysisNumericSeparatorSymbolPtrInput interface {
	pulumi.Input

	ToAnalysisNumericSeparatorSymbolPtrOutput() AnalysisNumericSeparatorSymbolPtrOutput
	ToAnalysisNumericSeparatorSymbolPtrOutputWithContext(context.Context) AnalysisNumericSeparatorSymbolPtrOutput
}

type analysisNumericSeparatorSymbolPtr string

func AnalysisNumericSeparatorSymbolPtr(v string) AnalysisNumericSeparatorSymbolPtrInput {
	return (*analysisNumericSeparatorSymbolPtr)(&v)
}

func (*analysisNumericSeparatorSymbolPtr) ElementType() reflect.Type {
	return analysisNumericSeparatorSymbolPtrType
}

func (in *analysisNumericSeparatorSymbolPtr) ToAnalysisNumericSeparatorSymbolPtrOutput() AnalysisNumericSeparatorSymbolPtrOutput {
	return pulumi.ToOutput(in).(AnalysisNumericSeparatorSymbolPtrOutput)
}

func (in *analysisNumericSeparatorSymbolPtr) ToAnalysisNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) AnalysisNumericSeparatorSymbolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisNumericSeparatorSymbolPtrOutput)
}

type AnalysisOtherCategories string

const (
	AnalysisOtherCategoriesInclude = AnalysisOtherCategories("INCLUDE")
	AnalysisOtherCategoriesExclude = AnalysisOtherCategories("EXCLUDE")
)

func (AnalysisOtherCategories) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisOtherCategories)(nil)).Elem()
}

func (e AnalysisOtherCategories) ToAnalysisOtherCategoriesOutput() AnalysisOtherCategoriesOutput {
	return pulumi.ToOutput(e).(AnalysisOtherCategoriesOutput)
}

func (e AnalysisOtherCategories) ToAnalysisOtherCategoriesOutputWithContext(ctx context.Context) AnalysisOtherCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisOtherCategoriesOutput)
}

func (e AnalysisOtherCategories) ToAnalysisOtherCategoriesPtrOutput() AnalysisOtherCategoriesPtrOutput {
	return e.ToAnalysisOtherCategoriesPtrOutputWithContext(context.Background())
}

func (e AnalysisOtherCategories) ToAnalysisOtherCategoriesPtrOutputWithContext(ctx context.Context) AnalysisOtherCategoriesPtrOutput {
	return AnalysisOtherCategories(e).ToAnalysisOtherCategoriesOutputWithContext(ctx).ToAnalysisOtherCategoriesPtrOutputWithContext(ctx)
}

func (e AnalysisOtherCategories) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisOtherCategories) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisOtherCategories) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisOtherCategories) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisOtherCategoriesOutput struct{ *pulumi.OutputState }

func (AnalysisOtherCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisOtherCategories)(nil)).Elem()
}

func (o AnalysisOtherCategoriesOutput) ToAnalysisOtherCategoriesOutput() AnalysisOtherCategoriesOutput {
	return o
}

func (o AnalysisOtherCategoriesOutput) ToAnalysisOtherCategoriesOutputWithContext(ctx context.Context) AnalysisOtherCategoriesOutput {
	return o
}

func (o AnalysisOtherCategoriesOutput) ToAnalysisOtherCategoriesPtrOutput() AnalysisOtherCategoriesPtrOutput {
	return o.ToAnalysisOtherCategoriesPtrOutputWithContext(context.Background())
}

func (o AnalysisOtherCategoriesOutput) ToAnalysisOtherCategoriesPtrOutputWithContext(ctx context.Context) AnalysisOtherCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisOtherCategories) *AnalysisOtherCategories {
		return &v
	}).(AnalysisOtherCategoriesPtrOutput)
}

func (o AnalysisOtherCategoriesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisOtherCategoriesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisOtherCategories) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisOtherCategoriesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisOtherCategoriesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisOtherCategories) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisOtherCategoriesPtrOutput struct{ *pulumi.OutputState }

func (AnalysisOtherCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisOtherCategories)(nil)).Elem()
}

func (o AnalysisOtherCategoriesPtrOutput) ToAnalysisOtherCategoriesPtrOutput() AnalysisOtherCategoriesPtrOutput {
	return o
}

func (o AnalysisOtherCategoriesPtrOutput) ToAnalysisOtherCategoriesPtrOutputWithContext(ctx context.Context) AnalysisOtherCategoriesPtrOutput {
	return o
}

func (o AnalysisOtherCategoriesPtrOutput) Elem() AnalysisOtherCategoriesOutput {
	return o.ApplyT(func(v *AnalysisOtherCategories) AnalysisOtherCategories {
		if v != nil {
			return *v
		}
		var ret AnalysisOtherCategories
		return ret
	}).(AnalysisOtherCategoriesOutput)
}

func (o AnalysisOtherCategoriesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisOtherCategoriesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisOtherCategories) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisOtherCategoriesInput is an input type that accepts values of the AnalysisOtherCategories enum
// A concrete instance of `AnalysisOtherCategoriesInput` can be one of the following:
//
//	AnalysisOtherCategoriesInclude
//	AnalysisOtherCategoriesExclude
type AnalysisOtherCategoriesInput interface {
	pulumi.Input

	ToAnalysisOtherCategoriesOutput() AnalysisOtherCategoriesOutput
	ToAnalysisOtherCategoriesOutputWithContext(context.Context) AnalysisOtherCategoriesOutput
}

var analysisOtherCategoriesPtrType = reflect.TypeOf((**AnalysisOtherCategories)(nil)).Elem()

type AnalysisOtherCategoriesPtrInput interface {
	pulumi.Input

	ToAnalysisOtherCategoriesPtrOutput() AnalysisOtherCategoriesPtrOutput
	ToAnalysisOtherCategoriesPtrOutputWithContext(context.Context) AnalysisOtherCategoriesPtrOutput
}

type analysisOtherCategoriesPtr string

func AnalysisOtherCategoriesPtr(v string) AnalysisOtherCategoriesPtrInput {
	return (*analysisOtherCategoriesPtr)(&v)
}

func (*analysisOtherCategoriesPtr) ElementType() reflect.Type {
	return analysisOtherCategoriesPtrType
}

func (in *analysisOtherCategoriesPtr) ToAnalysisOtherCategoriesPtrOutput() AnalysisOtherCategoriesPtrOutput {
	return pulumi.ToOutput(in).(AnalysisOtherCategoriesPtrOutput)
}

func (in *analysisOtherCategoriesPtr) ToAnalysisOtherCategoriesPtrOutputWithContext(ctx context.Context) AnalysisOtherCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisOtherCategoriesPtrOutput)
}

type AnalysisPanelBorderStyle string

const (
	AnalysisPanelBorderStyleSolid  = AnalysisPanelBorderStyle("SOLID")
	AnalysisPanelBorderStyleDashed = AnalysisPanelBorderStyle("DASHED")
	AnalysisPanelBorderStyleDotted = AnalysisPanelBorderStyle("DOTTED")
)

func (AnalysisPanelBorderStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPanelBorderStyle)(nil)).Elem()
}

func (e AnalysisPanelBorderStyle) ToAnalysisPanelBorderStyleOutput() AnalysisPanelBorderStyleOutput {
	return pulumi.ToOutput(e).(AnalysisPanelBorderStyleOutput)
}

func (e AnalysisPanelBorderStyle) ToAnalysisPanelBorderStyleOutputWithContext(ctx context.Context) AnalysisPanelBorderStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisPanelBorderStyleOutput)
}

func (e AnalysisPanelBorderStyle) ToAnalysisPanelBorderStylePtrOutput() AnalysisPanelBorderStylePtrOutput {
	return e.ToAnalysisPanelBorderStylePtrOutputWithContext(context.Background())
}

func (e AnalysisPanelBorderStyle) ToAnalysisPanelBorderStylePtrOutputWithContext(ctx context.Context) AnalysisPanelBorderStylePtrOutput {
	return AnalysisPanelBorderStyle(e).ToAnalysisPanelBorderStyleOutputWithContext(ctx).ToAnalysisPanelBorderStylePtrOutputWithContext(ctx)
}

func (e AnalysisPanelBorderStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPanelBorderStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPanelBorderStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisPanelBorderStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisPanelBorderStyleOutput struct{ *pulumi.OutputState }

func (AnalysisPanelBorderStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPanelBorderStyle)(nil)).Elem()
}

func (o AnalysisPanelBorderStyleOutput) ToAnalysisPanelBorderStyleOutput() AnalysisPanelBorderStyleOutput {
	return o
}

func (o AnalysisPanelBorderStyleOutput) ToAnalysisPanelBorderStyleOutputWithContext(ctx context.Context) AnalysisPanelBorderStyleOutput {
	return o
}

func (o AnalysisPanelBorderStyleOutput) ToAnalysisPanelBorderStylePtrOutput() AnalysisPanelBorderStylePtrOutput {
	return o.ToAnalysisPanelBorderStylePtrOutputWithContext(context.Background())
}

func (o AnalysisPanelBorderStyleOutput) ToAnalysisPanelBorderStylePtrOutputWithContext(ctx context.Context) AnalysisPanelBorderStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPanelBorderStyle) *AnalysisPanelBorderStyle {
		return &v
	}).(AnalysisPanelBorderStylePtrOutput)
}

func (o AnalysisPanelBorderStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisPanelBorderStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPanelBorderStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisPanelBorderStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPanelBorderStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPanelBorderStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisPanelBorderStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisPanelBorderStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPanelBorderStyle)(nil)).Elem()
}

func (o AnalysisPanelBorderStylePtrOutput) ToAnalysisPanelBorderStylePtrOutput() AnalysisPanelBorderStylePtrOutput {
	return o
}

func (o AnalysisPanelBorderStylePtrOutput) ToAnalysisPanelBorderStylePtrOutputWithContext(ctx context.Context) AnalysisPanelBorderStylePtrOutput {
	return o
}

func (o AnalysisPanelBorderStylePtrOutput) Elem() AnalysisPanelBorderStyleOutput {
	return o.ApplyT(func(v *AnalysisPanelBorderStyle) AnalysisPanelBorderStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisPanelBorderStyle
		return ret
	}).(AnalysisPanelBorderStyleOutput)
}

func (o AnalysisPanelBorderStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPanelBorderStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisPanelBorderStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisPanelBorderStyleInput is an input type that accepts values of the AnalysisPanelBorderStyle enum
// A concrete instance of `AnalysisPanelBorderStyleInput` can be one of the following:
//
//	AnalysisPanelBorderStyleSolid
//	AnalysisPanelBorderStyleDashed
//	AnalysisPanelBorderStyleDotted
type AnalysisPanelBorderStyleInput interface {
	pulumi.Input

	ToAnalysisPanelBorderStyleOutput() AnalysisPanelBorderStyleOutput
	ToAnalysisPanelBorderStyleOutputWithContext(context.Context) AnalysisPanelBorderStyleOutput
}

var analysisPanelBorderStylePtrType = reflect.TypeOf((**AnalysisPanelBorderStyle)(nil)).Elem()

type AnalysisPanelBorderStylePtrInput interface {
	pulumi.Input

	ToAnalysisPanelBorderStylePtrOutput() AnalysisPanelBorderStylePtrOutput
	ToAnalysisPanelBorderStylePtrOutputWithContext(context.Context) AnalysisPanelBorderStylePtrOutput
}

type analysisPanelBorderStylePtr string

func AnalysisPanelBorderStylePtr(v string) AnalysisPanelBorderStylePtrInput {
	return (*analysisPanelBorderStylePtr)(&v)
}

func (*analysisPanelBorderStylePtr) ElementType() reflect.Type {
	return analysisPanelBorderStylePtrType
}

func (in *analysisPanelBorderStylePtr) ToAnalysisPanelBorderStylePtrOutput() AnalysisPanelBorderStylePtrOutput {
	return pulumi.ToOutput(in).(AnalysisPanelBorderStylePtrOutput)
}

func (in *analysisPanelBorderStylePtr) ToAnalysisPanelBorderStylePtrOutputWithContext(ctx context.Context) AnalysisPanelBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisPanelBorderStylePtrOutput)
}

type AnalysisPaperOrientation string

const (
	AnalysisPaperOrientationPortrait  = AnalysisPaperOrientation("PORTRAIT")
	AnalysisPaperOrientationLandscape = AnalysisPaperOrientation("LANDSCAPE")
)

func (AnalysisPaperOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPaperOrientation)(nil)).Elem()
}

func (e AnalysisPaperOrientation) ToAnalysisPaperOrientationOutput() AnalysisPaperOrientationOutput {
	return pulumi.ToOutput(e).(AnalysisPaperOrientationOutput)
}

func (e AnalysisPaperOrientation) ToAnalysisPaperOrientationOutputWithContext(ctx context.Context) AnalysisPaperOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisPaperOrientationOutput)
}

func (e AnalysisPaperOrientation) ToAnalysisPaperOrientationPtrOutput() AnalysisPaperOrientationPtrOutput {
	return e.ToAnalysisPaperOrientationPtrOutputWithContext(context.Background())
}

func (e AnalysisPaperOrientation) ToAnalysisPaperOrientationPtrOutputWithContext(ctx context.Context) AnalysisPaperOrientationPtrOutput {
	return AnalysisPaperOrientation(e).ToAnalysisPaperOrientationOutputWithContext(ctx).ToAnalysisPaperOrientationPtrOutputWithContext(ctx)
}

func (e AnalysisPaperOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPaperOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPaperOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisPaperOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisPaperOrientationOutput struct{ *pulumi.OutputState }

func (AnalysisPaperOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPaperOrientation)(nil)).Elem()
}

func (o AnalysisPaperOrientationOutput) ToAnalysisPaperOrientationOutput() AnalysisPaperOrientationOutput {
	return o
}

func (o AnalysisPaperOrientationOutput) ToAnalysisPaperOrientationOutputWithContext(ctx context.Context) AnalysisPaperOrientationOutput {
	return o
}

func (o AnalysisPaperOrientationOutput) ToAnalysisPaperOrientationPtrOutput() AnalysisPaperOrientationPtrOutput {
	return o.ToAnalysisPaperOrientationPtrOutputWithContext(context.Background())
}

func (o AnalysisPaperOrientationOutput) ToAnalysisPaperOrientationPtrOutputWithContext(ctx context.Context) AnalysisPaperOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPaperOrientation) *AnalysisPaperOrientation {
		return &v
	}).(AnalysisPaperOrientationPtrOutput)
}

func (o AnalysisPaperOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisPaperOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPaperOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisPaperOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPaperOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPaperOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisPaperOrientationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPaperOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPaperOrientation)(nil)).Elem()
}

func (o AnalysisPaperOrientationPtrOutput) ToAnalysisPaperOrientationPtrOutput() AnalysisPaperOrientationPtrOutput {
	return o
}

func (o AnalysisPaperOrientationPtrOutput) ToAnalysisPaperOrientationPtrOutputWithContext(ctx context.Context) AnalysisPaperOrientationPtrOutput {
	return o
}

func (o AnalysisPaperOrientationPtrOutput) Elem() AnalysisPaperOrientationOutput {
	return o.ApplyT(func(v *AnalysisPaperOrientation) AnalysisPaperOrientation {
		if v != nil {
			return *v
		}
		var ret AnalysisPaperOrientation
		return ret
	}).(AnalysisPaperOrientationOutput)
}

func (o AnalysisPaperOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPaperOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisPaperOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisPaperOrientationInput is an input type that accepts values of the AnalysisPaperOrientation enum
// A concrete instance of `AnalysisPaperOrientationInput` can be one of the following:
//
//	AnalysisPaperOrientationPortrait
//	AnalysisPaperOrientationLandscape
type AnalysisPaperOrientationInput interface {
	pulumi.Input

	ToAnalysisPaperOrientationOutput() AnalysisPaperOrientationOutput
	ToAnalysisPaperOrientationOutputWithContext(context.Context) AnalysisPaperOrientationOutput
}

var analysisPaperOrientationPtrType = reflect.TypeOf((**AnalysisPaperOrientation)(nil)).Elem()

type AnalysisPaperOrientationPtrInput interface {
	pulumi.Input

	ToAnalysisPaperOrientationPtrOutput() AnalysisPaperOrientationPtrOutput
	ToAnalysisPaperOrientationPtrOutputWithContext(context.Context) AnalysisPaperOrientationPtrOutput
}

type analysisPaperOrientationPtr string

func AnalysisPaperOrientationPtr(v string) AnalysisPaperOrientationPtrInput {
	return (*analysisPaperOrientationPtr)(&v)
}

func (*analysisPaperOrientationPtr) ElementType() reflect.Type {
	return analysisPaperOrientationPtrType
}

func (in *analysisPaperOrientationPtr) ToAnalysisPaperOrientationPtrOutput() AnalysisPaperOrientationPtrOutput {
	return pulumi.ToOutput(in).(AnalysisPaperOrientationPtrOutput)
}

func (in *analysisPaperOrientationPtr) ToAnalysisPaperOrientationPtrOutputWithContext(ctx context.Context) AnalysisPaperOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisPaperOrientationPtrOutput)
}

type AnalysisPaperSize string

const (
	AnalysisPaperSizeUsLetter        = AnalysisPaperSize("US_LETTER")
	AnalysisPaperSizeUsLegal         = AnalysisPaperSize("US_LEGAL")
	AnalysisPaperSizeUsTabloidLedger = AnalysisPaperSize("US_TABLOID_LEDGER")
	AnalysisPaperSizeA0              = AnalysisPaperSize("A0")
	AnalysisPaperSizeA1              = AnalysisPaperSize("A1")
	AnalysisPaperSizeA2              = AnalysisPaperSize("A2")
	AnalysisPaperSizeA3              = AnalysisPaperSize("A3")
	AnalysisPaperSizeA4              = AnalysisPaperSize("A4")
	AnalysisPaperSizeA5              = AnalysisPaperSize("A5")
	AnalysisPaperSizeJisB4           = AnalysisPaperSize("JIS_B4")
	AnalysisPaperSizeJisB5           = AnalysisPaperSize("JIS_B5")
)

func (AnalysisPaperSize) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPaperSize)(nil)).Elem()
}

func (e AnalysisPaperSize) ToAnalysisPaperSizeOutput() AnalysisPaperSizeOutput {
	return pulumi.ToOutput(e).(AnalysisPaperSizeOutput)
}

func (e AnalysisPaperSize) ToAnalysisPaperSizeOutputWithContext(ctx context.Context) AnalysisPaperSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisPaperSizeOutput)
}

func (e AnalysisPaperSize) ToAnalysisPaperSizePtrOutput() AnalysisPaperSizePtrOutput {
	return e.ToAnalysisPaperSizePtrOutputWithContext(context.Background())
}

func (e AnalysisPaperSize) ToAnalysisPaperSizePtrOutputWithContext(ctx context.Context) AnalysisPaperSizePtrOutput {
	return AnalysisPaperSize(e).ToAnalysisPaperSizeOutputWithContext(ctx).ToAnalysisPaperSizePtrOutputWithContext(ctx)
}

func (e AnalysisPaperSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPaperSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPaperSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisPaperSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisPaperSizeOutput struct{ *pulumi.OutputState }

func (AnalysisPaperSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPaperSize)(nil)).Elem()
}

func (o AnalysisPaperSizeOutput) ToAnalysisPaperSizeOutput() AnalysisPaperSizeOutput {
	return o
}

func (o AnalysisPaperSizeOutput) ToAnalysisPaperSizeOutputWithContext(ctx context.Context) AnalysisPaperSizeOutput {
	return o
}

func (o AnalysisPaperSizeOutput) ToAnalysisPaperSizePtrOutput() AnalysisPaperSizePtrOutput {
	return o.ToAnalysisPaperSizePtrOutputWithContext(context.Background())
}

func (o AnalysisPaperSizeOutput) ToAnalysisPaperSizePtrOutputWithContext(ctx context.Context) AnalysisPaperSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPaperSize) *AnalysisPaperSize {
		return &v
	}).(AnalysisPaperSizePtrOutput)
}

func (o AnalysisPaperSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisPaperSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPaperSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisPaperSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPaperSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPaperSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisPaperSizePtrOutput struct{ *pulumi.OutputState }

func (AnalysisPaperSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPaperSize)(nil)).Elem()
}

func (o AnalysisPaperSizePtrOutput) ToAnalysisPaperSizePtrOutput() AnalysisPaperSizePtrOutput {
	return o
}

func (o AnalysisPaperSizePtrOutput) ToAnalysisPaperSizePtrOutputWithContext(ctx context.Context) AnalysisPaperSizePtrOutput {
	return o
}

func (o AnalysisPaperSizePtrOutput) Elem() AnalysisPaperSizeOutput {
	return o.ApplyT(func(v *AnalysisPaperSize) AnalysisPaperSize {
		if v != nil {
			return *v
		}
		var ret AnalysisPaperSize
		return ret
	}).(AnalysisPaperSizeOutput)
}

func (o AnalysisPaperSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPaperSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisPaperSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisPaperSizeInput is an input type that accepts values of the AnalysisPaperSize enum
// A concrete instance of `AnalysisPaperSizeInput` can be one of the following:
//
//	AnalysisPaperSizeUsLetter
//	AnalysisPaperSizeUsLegal
//	AnalysisPaperSizeUsTabloidLedger
//	AnalysisPaperSizeA0
//	AnalysisPaperSizeA1
//	AnalysisPaperSizeA2
//	AnalysisPaperSizeA3
//	AnalysisPaperSizeA4
//	AnalysisPaperSizeA5
//	AnalysisPaperSizeJisB4
//	AnalysisPaperSizeJisB5
type AnalysisPaperSizeInput interface {
	pulumi.Input

	ToAnalysisPaperSizeOutput() AnalysisPaperSizeOutput
	ToAnalysisPaperSizeOutputWithContext(context.Context) AnalysisPaperSizeOutput
}

var analysisPaperSizePtrType = reflect.TypeOf((**AnalysisPaperSize)(nil)).Elem()

type AnalysisPaperSizePtrInput interface {
	pulumi.Input

	ToAnalysisPaperSizePtrOutput() AnalysisPaperSizePtrOutput
	ToAnalysisPaperSizePtrOutputWithContext(context.Context) AnalysisPaperSizePtrOutput
}

type analysisPaperSizePtr string

func AnalysisPaperSizePtr(v string) AnalysisPaperSizePtrInput {
	return (*analysisPaperSizePtr)(&v)
}

func (*analysisPaperSizePtr) ElementType() reflect.Type {
	return analysisPaperSizePtrType
}

func (in *analysisPaperSizePtr) ToAnalysisPaperSizePtrOutput() AnalysisPaperSizePtrOutput {
	return pulumi.ToOutput(in).(AnalysisPaperSizePtrOutput)
}

func (in *analysisPaperSizePtr) ToAnalysisPaperSizePtrOutputWithContext(ctx context.Context) AnalysisPaperSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisPaperSizePtrOutput)
}

type AnalysisParameterValueType string

const (
	AnalysisParameterValueTypeMultiValued  = AnalysisParameterValueType("MULTI_VALUED")
	AnalysisParameterValueTypeSingleValued = AnalysisParameterValueType("SINGLE_VALUED")
)

func (AnalysisParameterValueType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterValueType)(nil)).Elem()
}

func (e AnalysisParameterValueType) ToAnalysisParameterValueTypeOutput() AnalysisParameterValueTypeOutput {
	return pulumi.ToOutput(e).(AnalysisParameterValueTypeOutput)
}

func (e AnalysisParameterValueType) ToAnalysisParameterValueTypeOutputWithContext(ctx context.Context) AnalysisParameterValueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisParameterValueTypeOutput)
}

func (e AnalysisParameterValueType) ToAnalysisParameterValueTypePtrOutput() AnalysisParameterValueTypePtrOutput {
	return e.ToAnalysisParameterValueTypePtrOutputWithContext(context.Background())
}

func (e AnalysisParameterValueType) ToAnalysisParameterValueTypePtrOutputWithContext(ctx context.Context) AnalysisParameterValueTypePtrOutput {
	return AnalysisParameterValueType(e).ToAnalysisParameterValueTypeOutputWithContext(ctx).ToAnalysisParameterValueTypePtrOutputWithContext(ctx)
}

func (e AnalysisParameterValueType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisParameterValueType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisParameterValueType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisParameterValueType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisParameterValueTypeOutput struct{ *pulumi.OutputState }

func (AnalysisParameterValueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisParameterValueType)(nil)).Elem()
}

func (o AnalysisParameterValueTypeOutput) ToAnalysisParameterValueTypeOutput() AnalysisParameterValueTypeOutput {
	return o
}

func (o AnalysisParameterValueTypeOutput) ToAnalysisParameterValueTypeOutputWithContext(ctx context.Context) AnalysisParameterValueTypeOutput {
	return o
}

func (o AnalysisParameterValueTypeOutput) ToAnalysisParameterValueTypePtrOutput() AnalysisParameterValueTypePtrOutput {
	return o.ToAnalysisParameterValueTypePtrOutputWithContext(context.Background())
}

func (o AnalysisParameterValueTypeOutput) ToAnalysisParameterValueTypePtrOutputWithContext(ctx context.Context) AnalysisParameterValueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisParameterValueType) *AnalysisParameterValueType {
		return &v
	}).(AnalysisParameterValueTypePtrOutput)
}

func (o AnalysisParameterValueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisParameterValueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisParameterValueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisParameterValueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisParameterValueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisParameterValueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisParameterValueTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisParameterValueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisParameterValueType)(nil)).Elem()
}

func (o AnalysisParameterValueTypePtrOutput) ToAnalysisParameterValueTypePtrOutput() AnalysisParameterValueTypePtrOutput {
	return o
}

func (o AnalysisParameterValueTypePtrOutput) ToAnalysisParameterValueTypePtrOutputWithContext(ctx context.Context) AnalysisParameterValueTypePtrOutput {
	return o
}

func (o AnalysisParameterValueTypePtrOutput) Elem() AnalysisParameterValueTypeOutput {
	return o.ApplyT(func(v *AnalysisParameterValueType) AnalysisParameterValueType {
		if v != nil {
			return *v
		}
		var ret AnalysisParameterValueType
		return ret
	}).(AnalysisParameterValueTypeOutput)
}

func (o AnalysisParameterValueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisParameterValueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisParameterValueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisParameterValueTypeInput is an input type that accepts values of the AnalysisParameterValueType enum
// A concrete instance of `AnalysisParameterValueTypeInput` can be one of the following:
//
//	AnalysisParameterValueTypeMultiValued
//	AnalysisParameterValueTypeSingleValued
type AnalysisParameterValueTypeInput interface {
	pulumi.Input

	ToAnalysisParameterValueTypeOutput() AnalysisParameterValueTypeOutput
	ToAnalysisParameterValueTypeOutputWithContext(context.Context) AnalysisParameterValueTypeOutput
}

var analysisParameterValueTypePtrType = reflect.TypeOf((**AnalysisParameterValueType)(nil)).Elem()

type AnalysisParameterValueTypePtrInput interface {
	pulumi.Input

	ToAnalysisParameterValueTypePtrOutput() AnalysisParameterValueTypePtrOutput
	ToAnalysisParameterValueTypePtrOutputWithContext(context.Context) AnalysisParameterValueTypePtrOutput
}

type analysisParameterValueTypePtr string

func AnalysisParameterValueTypePtr(v string) AnalysisParameterValueTypePtrInput {
	return (*analysisParameterValueTypePtr)(&v)
}

func (*analysisParameterValueTypePtr) ElementType() reflect.Type {
	return analysisParameterValueTypePtrType
}

func (in *analysisParameterValueTypePtr) ToAnalysisParameterValueTypePtrOutput() AnalysisParameterValueTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisParameterValueTypePtrOutput)
}

func (in *analysisParameterValueTypePtr) ToAnalysisParameterValueTypePtrOutputWithContext(ctx context.Context) AnalysisParameterValueTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisParameterValueTypePtrOutput)
}

type AnalysisPivotTableConditionalFormattingScopeRole string

const (
	AnalysisPivotTableConditionalFormattingScopeRoleField      = AnalysisPivotTableConditionalFormattingScopeRole("FIELD")
	AnalysisPivotTableConditionalFormattingScopeRoleFieldTotal = AnalysisPivotTableConditionalFormattingScopeRole("FIELD_TOTAL")
	AnalysisPivotTableConditionalFormattingScopeRoleGrandTotal = AnalysisPivotTableConditionalFormattingScopeRole("GRAND_TOTAL")
)

func (AnalysisPivotTableConditionalFormattingScopeRole) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableConditionalFormattingScopeRole)(nil)).Elem()
}

func (e AnalysisPivotTableConditionalFormattingScopeRole) ToAnalysisPivotTableConditionalFormattingScopeRoleOutput() AnalysisPivotTableConditionalFormattingScopeRoleOutput {
	return pulumi.ToOutput(e).(AnalysisPivotTableConditionalFormattingScopeRoleOutput)
}

func (e AnalysisPivotTableConditionalFormattingScopeRole) ToAnalysisPivotTableConditionalFormattingScopeRoleOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisPivotTableConditionalFormattingScopeRoleOutput)
}

func (e AnalysisPivotTableConditionalFormattingScopeRole) ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutput() AnalysisPivotTableConditionalFormattingScopeRolePtrOutput {
	return e.ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableConditionalFormattingScopeRole) ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopeRolePtrOutput {
	return AnalysisPivotTableConditionalFormattingScopeRole(e).ToAnalysisPivotTableConditionalFormattingScopeRoleOutputWithContext(ctx).ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx)
}

func (e AnalysisPivotTableConditionalFormattingScopeRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableConditionalFormattingScopeRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableConditionalFormattingScopeRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableConditionalFormattingScopeRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisPivotTableConditionalFormattingScopeRoleOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableConditionalFormattingScopeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableConditionalFormattingScopeRole)(nil)).Elem()
}

func (o AnalysisPivotTableConditionalFormattingScopeRoleOutput) ToAnalysisPivotTableConditionalFormattingScopeRoleOutput() AnalysisPivotTableConditionalFormattingScopeRoleOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingScopeRoleOutput) ToAnalysisPivotTableConditionalFormattingScopeRoleOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopeRoleOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingScopeRoleOutput) ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutput() AnalysisPivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableConditionalFormattingScopeRoleOutput) ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableConditionalFormattingScopeRole) *AnalysisPivotTableConditionalFormattingScopeRole {
		return &v
	}).(AnalysisPivotTableConditionalFormattingScopeRolePtrOutput)
}

func (o AnalysisPivotTableConditionalFormattingScopeRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisPivotTableConditionalFormattingScopeRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableConditionalFormattingScopeRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisPivotTableConditionalFormattingScopeRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableConditionalFormattingScopeRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableConditionalFormattingScopeRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisPivotTableConditionalFormattingScopeRolePtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableConditionalFormattingScopeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableConditionalFormattingScopeRole)(nil)).Elem()
}

func (o AnalysisPivotTableConditionalFormattingScopeRolePtrOutput) ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutput() AnalysisPivotTableConditionalFormattingScopeRolePtrOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingScopeRolePtrOutput) ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopeRolePtrOutput {
	return o
}

func (o AnalysisPivotTableConditionalFormattingScopeRolePtrOutput) Elem() AnalysisPivotTableConditionalFormattingScopeRoleOutput {
	return o.ApplyT(func(v *AnalysisPivotTableConditionalFormattingScopeRole) AnalysisPivotTableConditionalFormattingScopeRole {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableConditionalFormattingScopeRole
		return ret
	}).(AnalysisPivotTableConditionalFormattingScopeRoleOutput)
}

func (o AnalysisPivotTableConditionalFormattingScopeRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableConditionalFormattingScopeRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisPivotTableConditionalFormattingScopeRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisPivotTableConditionalFormattingScopeRoleInput is an input type that accepts values of the AnalysisPivotTableConditionalFormattingScopeRole enum
// A concrete instance of `AnalysisPivotTableConditionalFormattingScopeRoleInput` can be one of the following:
//
//	AnalysisPivotTableConditionalFormattingScopeRoleField
//	AnalysisPivotTableConditionalFormattingScopeRoleFieldTotal
//	AnalysisPivotTableConditionalFormattingScopeRoleGrandTotal
type AnalysisPivotTableConditionalFormattingScopeRoleInput interface {
	pulumi.Input

	ToAnalysisPivotTableConditionalFormattingScopeRoleOutput() AnalysisPivotTableConditionalFormattingScopeRoleOutput
	ToAnalysisPivotTableConditionalFormattingScopeRoleOutputWithContext(context.Context) AnalysisPivotTableConditionalFormattingScopeRoleOutput
}

var analysisPivotTableConditionalFormattingScopeRolePtrType = reflect.TypeOf((**AnalysisPivotTableConditionalFormattingScopeRole)(nil)).Elem()

type AnalysisPivotTableConditionalFormattingScopeRolePtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutput() AnalysisPivotTableConditionalFormattingScopeRolePtrOutput
	ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutputWithContext(context.Context) AnalysisPivotTableConditionalFormattingScopeRolePtrOutput
}

type analysisPivotTableConditionalFormattingScopeRolePtr string

func AnalysisPivotTableConditionalFormattingScopeRolePtr(v string) AnalysisPivotTableConditionalFormattingScopeRolePtrInput {
	return (*analysisPivotTableConditionalFormattingScopeRolePtr)(&v)
}

func (*analysisPivotTableConditionalFormattingScopeRolePtr) ElementType() reflect.Type {
	return analysisPivotTableConditionalFormattingScopeRolePtrType
}

func (in *analysisPivotTableConditionalFormattingScopeRolePtr) ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutput() AnalysisPivotTableConditionalFormattingScopeRolePtrOutput {
	return pulumi.ToOutput(in).(AnalysisPivotTableConditionalFormattingScopeRolePtrOutput)
}

func (in *analysisPivotTableConditionalFormattingScopeRolePtr) ToAnalysisPivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) AnalysisPivotTableConditionalFormattingScopeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisPivotTableConditionalFormattingScopeRolePtrOutput)
}

type AnalysisPivotTableDataPathType string

const (
	AnalysisPivotTableDataPathTypeHierarchyRowsLayoutColumn = AnalysisPivotTableDataPathType("HIERARCHY_ROWS_LAYOUT_COLUMN")
	AnalysisPivotTableDataPathTypeMultipleRowMetricsColumn  = AnalysisPivotTableDataPathType("MULTIPLE_ROW_METRICS_COLUMN")
	AnalysisPivotTableDataPathTypeEmptyColumnHeader         = AnalysisPivotTableDataPathType("EMPTY_COLUMN_HEADER")
	AnalysisPivotTableDataPathTypeCountMetricColumn         = AnalysisPivotTableDataPathType("COUNT_METRIC_COLUMN")
)

func (AnalysisPivotTableDataPathType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableDataPathType)(nil)).Elem()
}

func (e AnalysisPivotTableDataPathType) ToAnalysisPivotTableDataPathTypeOutput() AnalysisPivotTableDataPathTypeOutput {
	return pulumi.ToOutput(e).(AnalysisPivotTableDataPathTypeOutput)
}

func (e AnalysisPivotTableDataPathType) ToAnalysisPivotTableDataPathTypeOutputWithContext(ctx context.Context) AnalysisPivotTableDataPathTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisPivotTableDataPathTypeOutput)
}

func (e AnalysisPivotTableDataPathType) ToAnalysisPivotTableDataPathTypePtrOutput() AnalysisPivotTableDataPathTypePtrOutput {
	return e.ToAnalysisPivotTableDataPathTypePtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableDataPathType) ToAnalysisPivotTableDataPathTypePtrOutputWithContext(ctx context.Context) AnalysisPivotTableDataPathTypePtrOutput {
	return AnalysisPivotTableDataPathType(e).ToAnalysisPivotTableDataPathTypeOutputWithContext(ctx).ToAnalysisPivotTableDataPathTypePtrOutputWithContext(ctx)
}

func (e AnalysisPivotTableDataPathType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableDataPathType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableDataPathType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableDataPathType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisPivotTableDataPathTypeOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableDataPathTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableDataPathType)(nil)).Elem()
}

func (o AnalysisPivotTableDataPathTypeOutput) ToAnalysisPivotTableDataPathTypeOutput() AnalysisPivotTableDataPathTypeOutput {
	return o
}

func (o AnalysisPivotTableDataPathTypeOutput) ToAnalysisPivotTableDataPathTypeOutputWithContext(ctx context.Context) AnalysisPivotTableDataPathTypeOutput {
	return o
}

func (o AnalysisPivotTableDataPathTypeOutput) ToAnalysisPivotTableDataPathTypePtrOutput() AnalysisPivotTableDataPathTypePtrOutput {
	return o.ToAnalysisPivotTableDataPathTypePtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableDataPathTypeOutput) ToAnalysisPivotTableDataPathTypePtrOutputWithContext(ctx context.Context) AnalysisPivotTableDataPathTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableDataPathType) *AnalysisPivotTableDataPathType {
		return &v
	}).(AnalysisPivotTableDataPathTypePtrOutput)
}

func (o AnalysisPivotTableDataPathTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisPivotTableDataPathTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableDataPathType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisPivotTableDataPathTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableDataPathTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableDataPathType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisPivotTableDataPathTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableDataPathTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableDataPathType)(nil)).Elem()
}

func (o AnalysisPivotTableDataPathTypePtrOutput) ToAnalysisPivotTableDataPathTypePtrOutput() AnalysisPivotTableDataPathTypePtrOutput {
	return o
}

func (o AnalysisPivotTableDataPathTypePtrOutput) ToAnalysisPivotTableDataPathTypePtrOutputWithContext(ctx context.Context) AnalysisPivotTableDataPathTypePtrOutput {
	return o
}

func (o AnalysisPivotTableDataPathTypePtrOutput) Elem() AnalysisPivotTableDataPathTypeOutput {
	return o.ApplyT(func(v *AnalysisPivotTableDataPathType) AnalysisPivotTableDataPathType {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableDataPathType
		return ret
	}).(AnalysisPivotTableDataPathTypeOutput)
}

func (o AnalysisPivotTableDataPathTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableDataPathTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisPivotTableDataPathType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisPivotTableDataPathTypeInput is an input type that accepts values of the AnalysisPivotTableDataPathType enum
// A concrete instance of `AnalysisPivotTableDataPathTypeInput` can be one of the following:
//
//	AnalysisPivotTableDataPathTypeHierarchyRowsLayoutColumn
//	AnalysisPivotTableDataPathTypeMultipleRowMetricsColumn
//	AnalysisPivotTableDataPathTypeEmptyColumnHeader
//	AnalysisPivotTableDataPathTypeCountMetricColumn
type AnalysisPivotTableDataPathTypeInput interface {
	pulumi.Input

	ToAnalysisPivotTableDataPathTypeOutput() AnalysisPivotTableDataPathTypeOutput
	ToAnalysisPivotTableDataPathTypeOutputWithContext(context.Context) AnalysisPivotTableDataPathTypeOutput
}

var analysisPivotTableDataPathTypePtrType = reflect.TypeOf((**AnalysisPivotTableDataPathType)(nil)).Elem()

type AnalysisPivotTableDataPathTypePtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableDataPathTypePtrOutput() AnalysisPivotTableDataPathTypePtrOutput
	ToAnalysisPivotTableDataPathTypePtrOutputWithContext(context.Context) AnalysisPivotTableDataPathTypePtrOutput
}

type analysisPivotTableDataPathTypePtr string

func AnalysisPivotTableDataPathTypePtr(v string) AnalysisPivotTableDataPathTypePtrInput {
	return (*analysisPivotTableDataPathTypePtr)(&v)
}

func (*analysisPivotTableDataPathTypePtr) ElementType() reflect.Type {
	return analysisPivotTableDataPathTypePtrType
}

func (in *analysisPivotTableDataPathTypePtr) ToAnalysisPivotTableDataPathTypePtrOutput() AnalysisPivotTableDataPathTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisPivotTableDataPathTypePtrOutput)
}

func (in *analysisPivotTableDataPathTypePtr) ToAnalysisPivotTableDataPathTypePtrOutputWithContext(ctx context.Context) AnalysisPivotTableDataPathTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisPivotTableDataPathTypePtrOutput)
}

type AnalysisPivotTableFieldCollapseState string

const (
	AnalysisPivotTableFieldCollapseStateCollapsed = AnalysisPivotTableFieldCollapseState("COLLAPSED")
	AnalysisPivotTableFieldCollapseStateExpanded  = AnalysisPivotTableFieldCollapseState("EXPANDED")
)

func (AnalysisPivotTableFieldCollapseState) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableFieldCollapseState)(nil)).Elem()
}

func (e AnalysisPivotTableFieldCollapseState) ToAnalysisPivotTableFieldCollapseStateOutput() AnalysisPivotTableFieldCollapseStateOutput {
	return pulumi.ToOutput(e).(AnalysisPivotTableFieldCollapseStateOutput)
}

func (e AnalysisPivotTableFieldCollapseState) ToAnalysisPivotTableFieldCollapseStateOutputWithContext(ctx context.Context) AnalysisPivotTableFieldCollapseStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisPivotTableFieldCollapseStateOutput)
}

func (e AnalysisPivotTableFieldCollapseState) ToAnalysisPivotTableFieldCollapseStatePtrOutput() AnalysisPivotTableFieldCollapseStatePtrOutput {
	return e.ToAnalysisPivotTableFieldCollapseStatePtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableFieldCollapseState) ToAnalysisPivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldCollapseStatePtrOutput {
	return AnalysisPivotTableFieldCollapseState(e).ToAnalysisPivotTableFieldCollapseStateOutputWithContext(ctx).ToAnalysisPivotTableFieldCollapseStatePtrOutputWithContext(ctx)
}

func (e AnalysisPivotTableFieldCollapseState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableFieldCollapseState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableFieldCollapseState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableFieldCollapseState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisPivotTableFieldCollapseStateOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableFieldCollapseStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableFieldCollapseState)(nil)).Elem()
}

func (o AnalysisPivotTableFieldCollapseStateOutput) ToAnalysisPivotTableFieldCollapseStateOutput() AnalysisPivotTableFieldCollapseStateOutput {
	return o
}

func (o AnalysisPivotTableFieldCollapseStateOutput) ToAnalysisPivotTableFieldCollapseStateOutputWithContext(ctx context.Context) AnalysisPivotTableFieldCollapseStateOutput {
	return o
}

func (o AnalysisPivotTableFieldCollapseStateOutput) ToAnalysisPivotTableFieldCollapseStatePtrOutput() AnalysisPivotTableFieldCollapseStatePtrOutput {
	return o.ToAnalysisPivotTableFieldCollapseStatePtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableFieldCollapseStateOutput) ToAnalysisPivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldCollapseStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableFieldCollapseState) *AnalysisPivotTableFieldCollapseState {
		return &v
	}).(AnalysisPivotTableFieldCollapseStatePtrOutput)
}

func (o AnalysisPivotTableFieldCollapseStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisPivotTableFieldCollapseStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableFieldCollapseState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisPivotTableFieldCollapseStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableFieldCollapseStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableFieldCollapseState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisPivotTableFieldCollapseStatePtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableFieldCollapseStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableFieldCollapseState)(nil)).Elem()
}

func (o AnalysisPivotTableFieldCollapseStatePtrOutput) ToAnalysisPivotTableFieldCollapseStatePtrOutput() AnalysisPivotTableFieldCollapseStatePtrOutput {
	return o
}

func (o AnalysisPivotTableFieldCollapseStatePtrOutput) ToAnalysisPivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldCollapseStatePtrOutput {
	return o
}

func (o AnalysisPivotTableFieldCollapseStatePtrOutput) Elem() AnalysisPivotTableFieldCollapseStateOutput {
	return o.ApplyT(func(v *AnalysisPivotTableFieldCollapseState) AnalysisPivotTableFieldCollapseState {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableFieldCollapseState
		return ret
	}).(AnalysisPivotTableFieldCollapseStateOutput)
}

func (o AnalysisPivotTableFieldCollapseStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableFieldCollapseStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisPivotTableFieldCollapseState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisPivotTableFieldCollapseStateInput is an input type that accepts values of the AnalysisPivotTableFieldCollapseState enum
// A concrete instance of `AnalysisPivotTableFieldCollapseStateInput` can be one of the following:
//
//	AnalysisPivotTableFieldCollapseStateCollapsed
//	AnalysisPivotTableFieldCollapseStateExpanded
type AnalysisPivotTableFieldCollapseStateInput interface {
	pulumi.Input

	ToAnalysisPivotTableFieldCollapseStateOutput() AnalysisPivotTableFieldCollapseStateOutput
	ToAnalysisPivotTableFieldCollapseStateOutputWithContext(context.Context) AnalysisPivotTableFieldCollapseStateOutput
}

var analysisPivotTableFieldCollapseStatePtrType = reflect.TypeOf((**AnalysisPivotTableFieldCollapseState)(nil)).Elem()

type AnalysisPivotTableFieldCollapseStatePtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableFieldCollapseStatePtrOutput() AnalysisPivotTableFieldCollapseStatePtrOutput
	ToAnalysisPivotTableFieldCollapseStatePtrOutputWithContext(context.Context) AnalysisPivotTableFieldCollapseStatePtrOutput
}

type analysisPivotTableFieldCollapseStatePtr string

func AnalysisPivotTableFieldCollapseStatePtr(v string) AnalysisPivotTableFieldCollapseStatePtrInput {
	return (*analysisPivotTableFieldCollapseStatePtr)(&v)
}

func (*analysisPivotTableFieldCollapseStatePtr) ElementType() reflect.Type {
	return analysisPivotTableFieldCollapseStatePtrType
}

func (in *analysisPivotTableFieldCollapseStatePtr) ToAnalysisPivotTableFieldCollapseStatePtrOutput() AnalysisPivotTableFieldCollapseStatePtrOutput {
	return pulumi.ToOutput(in).(AnalysisPivotTableFieldCollapseStatePtrOutput)
}

func (in *analysisPivotTableFieldCollapseStatePtr) ToAnalysisPivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) AnalysisPivotTableFieldCollapseStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisPivotTableFieldCollapseStatePtrOutput)
}

type AnalysisPivotTableMetricPlacement string

const (
	AnalysisPivotTableMetricPlacementRow    = AnalysisPivotTableMetricPlacement("ROW")
	AnalysisPivotTableMetricPlacementColumn = AnalysisPivotTableMetricPlacement("COLUMN")
)

func (AnalysisPivotTableMetricPlacement) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableMetricPlacement)(nil)).Elem()
}

func (e AnalysisPivotTableMetricPlacement) ToAnalysisPivotTableMetricPlacementOutput() AnalysisPivotTableMetricPlacementOutput {
	return pulumi.ToOutput(e).(AnalysisPivotTableMetricPlacementOutput)
}

func (e AnalysisPivotTableMetricPlacement) ToAnalysisPivotTableMetricPlacementOutputWithContext(ctx context.Context) AnalysisPivotTableMetricPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisPivotTableMetricPlacementOutput)
}

func (e AnalysisPivotTableMetricPlacement) ToAnalysisPivotTableMetricPlacementPtrOutput() AnalysisPivotTableMetricPlacementPtrOutput {
	return e.ToAnalysisPivotTableMetricPlacementPtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableMetricPlacement) ToAnalysisPivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) AnalysisPivotTableMetricPlacementPtrOutput {
	return AnalysisPivotTableMetricPlacement(e).ToAnalysisPivotTableMetricPlacementOutputWithContext(ctx).ToAnalysisPivotTableMetricPlacementPtrOutputWithContext(ctx)
}

func (e AnalysisPivotTableMetricPlacement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableMetricPlacement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableMetricPlacement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableMetricPlacement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisPivotTableMetricPlacementOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableMetricPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableMetricPlacement)(nil)).Elem()
}

func (o AnalysisPivotTableMetricPlacementOutput) ToAnalysisPivotTableMetricPlacementOutput() AnalysisPivotTableMetricPlacementOutput {
	return o
}

func (o AnalysisPivotTableMetricPlacementOutput) ToAnalysisPivotTableMetricPlacementOutputWithContext(ctx context.Context) AnalysisPivotTableMetricPlacementOutput {
	return o
}

func (o AnalysisPivotTableMetricPlacementOutput) ToAnalysisPivotTableMetricPlacementPtrOutput() AnalysisPivotTableMetricPlacementPtrOutput {
	return o.ToAnalysisPivotTableMetricPlacementPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableMetricPlacementOutput) ToAnalysisPivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) AnalysisPivotTableMetricPlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableMetricPlacement) *AnalysisPivotTableMetricPlacement {
		return &v
	}).(AnalysisPivotTableMetricPlacementPtrOutput)
}

func (o AnalysisPivotTableMetricPlacementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisPivotTableMetricPlacementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableMetricPlacement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisPivotTableMetricPlacementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableMetricPlacementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableMetricPlacement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisPivotTableMetricPlacementPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableMetricPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableMetricPlacement)(nil)).Elem()
}

func (o AnalysisPivotTableMetricPlacementPtrOutput) ToAnalysisPivotTableMetricPlacementPtrOutput() AnalysisPivotTableMetricPlacementPtrOutput {
	return o
}

func (o AnalysisPivotTableMetricPlacementPtrOutput) ToAnalysisPivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) AnalysisPivotTableMetricPlacementPtrOutput {
	return o
}

func (o AnalysisPivotTableMetricPlacementPtrOutput) Elem() AnalysisPivotTableMetricPlacementOutput {
	return o.ApplyT(func(v *AnalysisPivotTableMetricPlacement) AnalysisPivotTableMetricPlacement {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableMetricPlacement
		return ret
	}).(AnalysisPivotTableMetricPlacementOutput)
}

func (o AnalysisPivotTableMetricPlacementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableMetricPlacementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisPivotTableMetricPlacement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisPivotTableMetricPlacementInput is an input type that accepts values of the AnalysisPivotTableMetricPlacement enum
// A concrete instance of `AnalysisPivotTableMetricPlacementInput` can be one of the following:
//
//	AnalysisPivotTableMetricPlacementRow
//	AnalysisPivotTableMetricPlacementColumn
type AnalysisPivotTableMetricPlacementInput interface {
	pulumi.Input

	ToAnalysisPivotTableMetricPlacementOutput() AnalysisPivotTableMetricPlacementOutput
	ToAnalysisPivotTableMetricPlacementOutputWithContext(context.Context) AnalysisPivotTableMetricPlacementOutput
}

var analysisPivotTableMetricPlacementPtrType = reflect.TypeOf((**AnalysisPivotTableMetricPlacement)(nil)).Elem()

type AnalysisPivotTableMetricPlacementPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableMetricPlacementPtrOutput() AnalysisPivotTableMetricPlacementPtrOutput
	ToAnalysisPivotTableMetricPlacementPtrOutputWithContext(context.Context) AnalysisPivotTableMetricPlacementPtrOutput
}

type analysisPivotTableMetricPlacementPtr string

func AnalysisPivotTableMetricPlacementPtr(v string) AnalysisPivotTableMetricPlacementPtrInput {
	return (*analysisPivotTableMetricPlacementPtr)(&v)
}

func (*analysisPivotTableMetricPlacementPtr) ElementType() reflect.Type {
	return analysisPivotTableMetricPlacementPtrType
}

func (in *analysisPivotTableMetricPlacementPtr) ToAnalysisPivotTableMetricPlacementPtrOutput() AnalysisPivotTableMetricPlacementPtrOutput {
	return pulumi.ToOutput(in).(AnalysisPivotTableMetricPlacementPtrOutput)
}

func (in *analysisPivotTableMetricPlacementPtr) ToAnalysisPivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) AnalysisPivotTableMetricPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisPivotTableMetricPlacementPtrOutput)
}

type AnalysisPivotTableRowsLayout string

const (
	AnalysisPivotTableRowsLayoutTabular   = AnalysisPivotTableRowsLayout("TABULAR")
	AnalysisPivotTableRowsLayoutHierarchy = AnalysisPivotTableRowsLayout("HIERARCHY")
)

func (AnalysisPivotTableRowsLayout) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableRowsLayout)(nil)).Elem()
}

func (e AnalysisPivotTableRowsLayout) ToAnalysisPivotTableRowsLayoutOutput() AnalysisPivotTableRowsLayoutOutput {
	return pulumi.ToOutput(e).(AnalysisPivotTableRowsLayoutOutput)
}

func (e AnalysisPivotTableRowsLayout) ToAnalysisPivotTableRowsLayoutOutputWithContext(ctx context.Context) AnalysisPivotTableRowsLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisPivotTableRowsLayoutOutput)
}

func (e AnalysisPivotTableRowsLayout) ToAnalysisPivotTableRowsLayoutPtrOutput() AnalysisPivotTableRowsLayoutPtrOutput {
	return e.ToAnalysisPivotTableRowsLayoutPtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableRowsLayout) ToAnalysisPivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) AnalysisPivotTableRowsLayoutPtrOutput {
	return AnalysisPivotTableRowsLayout(e).ToAnalysisPivotTableRowsLayoutOutputWithContext(ctx).ToAnalysisPivotTableRowsLayoutPtrOutputWithContext(ctx)
}

func (e AnalysisPivotTableRowsLayout) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableRowsLayout) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableRowsLayout) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableRowsLayout) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisPivotTableRowsLayoutOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableRowsLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableRowsLayout)(nil)).Elem()
}

func (o AnalysisPivotTableRowsLayoutOutput) ToAnalysisPivotTableRowsLayoutOutput() AnalysisPivotTableRowsLayoutOutput {
	return o
}

func (o AnalysisPivotTableRowsLayoutOutput) ToAnalysisPivotTableRowsLayoutOutputWithContext(ctx context.Context) AnalysisPivotTableRowsLayoutOutput {
	return o
}

func (o AnalysisPivotTableRowsLayoutOutput) ToAnalysisPivotTableRowsLayoutPtrOutput() AnalysisPivotTableRowsLayoutPtrOutput {
	return o.ToAnalysisPivotTableRowsLayoutPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableRowsLayoutOutput) ToAnalysisPivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) AnalysisPivotTableRowsLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableRowsLayout) *AnalysisPivotTableRowsLayout {
		return &v
	}).(AnalysisPivotTableRowsLayoutPtrOutput)
}

func (o AnalysisPivotTableRowsLayoutOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisPivotTableRowsLayoutOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableRowsLayout) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisPivotTableRowsLayoutOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableRowsLayoutOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableRowsLayout) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisPivotTableRowsLayoutPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableRowsLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableRowsLayout)(nil)).Elem()
}

func (o AnalysisPivotTableRowsLayoutPtrOutput) ToAnalysisPivotTableRowsLayoutPtrOutput() AnalysisPivotTableRowsLayoutPtrOutput {
	return o
}

func (o AnalysisPivotTableRowsLayoutPtrOutput) ToAnalysisPivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) AnalysisPivotTableRowsLayoutPtrOutput {
	return o
}

func (o AnalysisPivotTableRowsLayoutPtrOutput) Elem() AnalysisPivotTableRowsLayoutOutput {
	return o.ApplyT(func(v *AnalysisPivotTableRowsLayout) AnalysisPivotTableRowsLayout {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableRowsLayout
		return ret
	}).(AnalysisPivotTableRowsLayoutOutput)
}

func (o AnalysisPivotTableRowsLayoutPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableRowsLayoutPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisPivotTableRowsLayout) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisPivotTableRowsLayoutInput is an input type that accepts values of the AnalysisPivotTableRowsLayout enum
// A concrete instance of `AnalysisPivotTableRowsLayoutInput` can be one of the following:
//
//	AnalysisPivotTableRowsLayoutTabular
//	AnalysisPivotTableRowsLayoutHierarchy
type AnalysisPivotTableRowsLayoutInput interface {
	pulumi.Input

	ToAnalysisPivotTableRowsLayoutOutput() AnalysisPivotTableRowsLayoutOutput
	ToAnalysisPivotTableRowsLayoutOutputWithContext(context.Context) AnalysisPivotTableRowsLayoutOutput
}

var analysisPivotTableRowsLayoutPtrType = reflect.TypeOf((**AnalysisPivotTableRowsLayout)(nil)).Elem()

type AnalysisPivotTableRowsLayoutPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableRowsLayoutPtrOutput() AnalysisPivotTableRowsLayoutPtrOutput
	ToAnalysisPivotTableRowsLayoutPtrOutputWithContext(context.Context) AnalysisPivotTableRowsLayoutPtrOutput
}

type analysisPivotTableRowsLayoutPtr string

func AnalysisPivotTableRowsLayoutPtr(v string) AnalysisPivotTableRowsLayoutPtrInput {
	return (*analysisPivotTableRowsLayoutPtr)(&v)
}

func (*analysisPivotTableRowsLayoutPtr) ElementType() reflect.Type {
	return analysisPivotTableRowsLayoutPtrType
}

func (in *analysisPivotTableRowsLayoutPtr) ToAnalysisPivotTableRowsLayoutPtrOutput() AnalysisPivotTableRowsLayoutPtrOutput {
	return pulumi.ToOutput(in).(AnalysisPivotTableRowsLayoutPtrOutput)
}

func (in *analysisPivotTableRowsLayoutPtr) ToAnalysisPivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) AnalysisPivotTableRowsLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisPivotTableRowsLayoutPtrOutput)
}

type AnalysisPivotTableSubtotalLevel string

const (
	AnalysisPivotTableSubtotalLevelAll    = AnalysisPivotTableSubtotalLevel("ALL")
	AnalysisPivotTableSubtotalLevelCustom = AnalysisPivotTableSubtotalLevel("CUSTOM")
	AnalysisPivotTableSubtotalLevelLast   = AnalysisPivotTableSubtotalLevel("LAST")
)

func (AnalysisPivotTableSubtotalLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableSubtotalLevel)(nil)).Elem()
}

func (e AnalysisPivotTableSubtotalLevel) ToAnalysisPivotTableSubtotalLevelOutput() AnalysisPivotTableSubtotalLevelOutput {
	return pulumi.ToOutput(e).(AnalysisPivotTableSubtotalLevelOutput)
}

func (e AnalysisPivotTableSubtotalLevel) ToAnalysisPivotTableSubtotalLevelOutputWithContext(ctx context.Context) AnalysisPivotTableSubtotalLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisPivotTableSubtotalLevelOutput)
}

func (e AnalysisPivotTableSubtotalLevel) ToAnalysisPivotTableSubtotalLevelPtrOutput() AnalysisPivotTableSubtotalLevelPtrOutput {
	return e.ToAnalysisPivotTableSubtotalLevelPtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableSubtotalLevel) ToAnalysisPivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) AnalysisPivotTableSubtotalLevelPtrOutput {
	return AnalysisPivotTableSubtotalLevel(e).ToAnalysisPivotTableSubtotalLevelOutputWithContext(ctx).ToAnalysisPivotTableSubtotalLevelPtrOutputWithContext(ctx)
}

func (e AnalysisPivotTableSubtotalLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableSubtotalLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPivotTableSubtotalLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisPivotTableSubtotalLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisPivotTableSubtotalLevelOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableSubtotalLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPivotTableSubtotalLevel)(nil)).Elem()
}

func (o AnalysisPivotTableSubtotalLevelOutput) ToAnalysisPivotTableSubtotalLevelOutput() AnalysisPivotTableSubtotalLevelOutput {
	return o
}

func (o AnalysisPivotTableSubtotalLevelOutput) ToAnalysisPivotTableSubtotalLevelOutputWithContext(ctx context.Context) AnalysisPivotTableSubtotalLevelOutput {
	return o
}

func (o AnalysisPivotTableSubtotalLevelOutput) ToAnalysisPivotTableSubtotalLevelPtrOutput() AnalysisPivotTableSubtotalLevelPtrOutput {
	return o.ToAnalysisPivotTableSubtotalLevelPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableSubtotalLevelOutput) ToAnalysisPivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) AnalysisPivotTableSubtotalLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPivotTableSubtotalLevel) *AnalysisPivotTableSubtotalLevel {
		return &v
	}).(AnalysisPivotTableSubtotalLevelPtrOutput)
}

func (o AnalysisPivotTableSubtotalLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisPivotTableSubtotalLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableSubtotalLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisPivotTableSubtotalLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableSubtotalLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPivotTableSubtotalLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisPivotTableSubtotalLevelPtrOutput struct{ *pulumi.OutputState }

func (AnalysisPivotTableSubtotalLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPivotTableSubtotalLevel)(nil)).Elem()
}

func (o AnalysisPivotTableSubtotalLevelPtrOutput) ToAnalysisPivotTableSubtotalLevelPtrOutput() AnalysisPivotTableSubtotalLevelPtrOutput {
	return o
}

func (o AnalysisPivotTableSubtotalLevelPtrOutput) ToAnalysisPivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) AnalysisPivotTableSubtotalLevelPtrOutput {
	return o
}

func (o AnalysisPivotTableSubtotalLevelPtrOutput) Elem() AnalysisPivotTableSubtotalLevelOutput {
	return o.ApplyT(func(v *AnalysisPivotTableSubtotalLevel) AnalysisPivotTableSubtotalLevel {
		if v != nil {
			return *v
		}
		var ret AnalysisPivotTableSubtotalLevel
		return ret
	}).(AnalysisPivotTableSubtotalLevelOutput)
}

func (o AnalysisPivotTableSubtotalLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPivotTableSubtotalLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisPivotTableSubtotalLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisPivotTableSubtotalLevelInput is an input type that accepts values of the AnalysisPivotTableSubtotalLevel enum
// A concrete instance of `AnalysisPivotTableSubtotalLevelInput` can be one of the following:
//
//	AnalysisPivotTableSubtotalLevelAll
//	AnalysisPivotTableSubtotalLevelCustom
//	AnalysisPivotTableSubtotalLevelLast
type AnalysisPivotTableSubtotalLevelInput interface {
	pulumi.Input

	ToAnalysisPivotTableSubtotalLevelOutput() AnalysisPivotTableSubtotalLevelOutput
	ToAnalysisPivotTableSubtotalLevelOutputWithContext(context.Context) AnalysisPivotTableSubtotalLevelOutput
}

var analysisPivotTableSubtotalLevelPtrType = reflect.TypeOf((**AnalysisPivotTableSubtotalLevel)(nil)).Elem()

type AnalysisPivotTableSubtotalLevelPtrInput interface {
	pulumi.Input

	ToAnalysisPivotTableSubtotalLevelPtrOutput() AnalysisPivotTableSubtotalLevelPtrOutput
	ToAnalysisPivotTableSubtotalLevelPtrOutputWithContext(context.Context) AnalysisPivotTableSubtotalLevelPtrOutput
}

type analysisPivotTableSubtotalLevelPtr string

func AnalysisPivotTableSubtotalLevelPtr(v string) AnalysisPivotTableSubtotalLevelPtrInput {
	return (*analysisPivotTableSubtotalLevelPtr)(&v)
}

func (*analysisPivotTableSubtotalLevelPtr) ElementType() reflect.Type {
	return analysisPivotTableSubtotalLevelPtrType
}

func (in *analysisPivotTableSubtotalLevelPtr) ToAnalysisPivotTableSubtotalLevelPtrOutput() AnalysisPivotTableSubtotalLevelPtrOutput {
	return pulumi.ToOutput(in).(AnalysisPivotTableSubtotalLevelPtrOutput)
}

func (in *analysisPivotTableSubtotalLevelPtr) ToAnalysisPivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) AnalysisPivotTableSubtotalLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisPivotTableSubtotalLevelPtrOutput)
}

type AnalysisPrimaryValueDisplayType string

const (
	AnalysisPrimaryValueDisplayTypeHidden     = AnalysisPrimaryValueDisplayType("HIDDEN")
	AnalysisPrimaryValueDisplayTypeComparison = AnalysisPrimaryValueDisplayType("COMPARISON")
	AnalysisPrimaryValueDisplayTypeActual     = AnalysisPrimaryValueDisplayType("ACTUAL")
)

func (AnalysisPrimaryValueDisplayType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPrimaryValueDisplayType)(nil)).Elem()
}

func (e AnalysisPrimaryValueDisplayType) ToAnalysisPrimaryValueDisplayTypeOutput() AnalysisPrimaryValueDisplayTypeOutput {
	return pulumi.ToOutput(e).(AnalysisPrimaryValueDisplayTypeOutput)
}

func (e AnalysisPrimaryValueDisplayType) ToAnalysisPrimaryValueDisplayTypeOutputWithContext(ctx context.Context) AnalysisPrimaryValueDisplayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisPrimaryValueDisplayTypeOutput)
}

func (e AnalysisPrimaryValueDisplayType) ToAnalysisPrimaryValueDisplayTypePtrOutput() AnalysisPrimaryValueDisplayTypePtrOutput {
	return e.ToAnalysisPrimaryValueDisplayTypePtrOutputWithContext(context.Background())
}

func (e AnalysisPrimaryValueDisplayType) ToAnalysisPrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) AnalysisPrimaryValueDisplayTypePtrOutput {
	return AnalysisPrimaryValueDisplayType(e).ToAnalysisPrimaryValueDisplayTypeOutputWithContext(ctx).ToAnalysisPrimaryValueDisplayTypePtrOutputWithContext(ctx)
}

func (e AnalysisPrimaryValueDisplayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPrimaryValueDisplayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisPrimaryValueDisplayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisPrimaryValueDisplayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisPrimaryValueDisplayTypeOutput struct{ *pulumi.OutputState }

func (AnalysisPrimaryValueDisplayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisPrimaryValueDisplayType)(nil)).Elem()
}

func (o AnalysisPrimaryValueDisplayTypeOutput) ToAnalysisPrimaryValueDisplayTypeOutput() AnalysisPrimaryValueDisplayTypeOutput {
	return o
}

func (o AnalysisPrimaryValueDisplayTypeOutput) ToAnalysisPrimaryValueDisplayTypeOutputWithContext(ctx context.Context) AnalysisPrimaryValueDisplayTypeOutput {
	return o
}

func (o AnalysisPrimaryValueDisplayTypeOutput) ToAnalysisPrimaryValueDisplayTypePtrOutput() AnalysisPrimaryValueDisplayTypePtrOutput {
	return o.ToAnalysisPrimaryValueDisplayTypePtrOutputWithContext(context.Background())
}

func (o AnalysisPrimaryValueDisplayTypeOutput) ToAnalysisPrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) AnalysisPrimaryValueDisplayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisPrimaryValueDisplayType) *AnalysisPrimaryValueDisplayType {
		return &v
	}).(AnalysisPrimaryValueDisplayTypePtrOutput)
}

func (o AnalysisPrimaryValueDisplayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisPrimaryValueDisplayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPrimaryValueDisplayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisPrimaryValueDisplayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPrimaryValueDisplayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisPrimaryValueDisplayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisPrimaryValueDisplayTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisPrimaryValueDisplayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisPrimaryValueDisplayType)(nil)).Elem()
}

func (o AnalysisPrimaryValueDisplayTypePtrOutput) ToAnalysisPrimaryValueDisplayTypePtrOutput() AnalysisPrimaryValueDisplayTypePtrOutput {
	return o
}

func (o AnalysisPrimaryValueDisplayTypePtrOutput) ToAnalysisPrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) AnalysisPrimaryValueDisplayTypePtrOutput {
	return o
}

func (o AnalysisPrimaryValueDisplayTypePtrOutput) Elem() AnalysisPrimaryValueDisplayTypeOutput {
	return o.ApplyT(func(v *AnalysisPrimaryValueDisplayType) AnalysisPrimaryValueDisplayType {
		if v != nil {
			return *v
		}
		var ret AnalysisPrimaryValueDisplayType
		return ret
	}).(AnalysisPrimaryValueDisplayTypeOutput)
}

func (o AnalysisPrimaryValueDisplayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisPrimaryValueDisplayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisPrimaryValueDisplayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisPrimaryValueDisplayTypeInput is an input type that accepts values of the AnalysisPrimaryValueDisplayType enum
// A concrete instance of `AnalysisPrimaryValueDisplayTypeInput` can be one of the following:
//
//	AnalysisPrimaryValueDisplayTypeHidden
//	AnalysisPrimaryValueDisplayTypeComparison
//	AnalysisPrimaryValueDisplayTypeActual
type AnalysisPrimaryValueDisplayTypeInput interface {
	pulumi.Input

	ToAnalysisPrimaryValueDisplayTypeOutput() AnalysisPrimaryValueDisplayTypeOutput
	ToAnalysisPrimaryValueDisplayTypeOutputWithContext(context.Context) AnalysisPrimaryValueDisplayTypeOutput
}

var analysisPrimaryValueDisplayTypePtrType = reflect.TypeOf((**AnalysisPrimaryValueDisplayType)(nil)).Elem()

type AnalysisPrimaryValueDisplayTypePtrInput interface {
	pulumi.Input

	ToAnalysisPrimaryValueDisplayTypePtrOutput() AnalysisPrimaryValueDisplayTypePtrOutput
	ToAnalysisPrimaryValueDisplayTypePtrOutputWithContext(context.Context) AnalysisPrimaryValueDisplayTypePtrOutput
}

type analysisPrimaryValueDisplayTypePtr string

func AnalysisPrimaryValueDisplayTypePtr(v string) AnalysisPrimaryValueDisplayTypePtrInput {
	return (*analysisPrimaryValueDisplayTypePtr)(&v)
}

func (*analysisPrimaryValueDisplayTypePtr) ElementType() reflect.Type {
	return analysisPrimaryValueDisplayTypePtrType
}

func (in *analysisPrimaryValueDisplayTypePtr) ToAnalysisPrimaryValueDisplayTypePtrOutput() AnalysisPrimaryValueDisplayTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisPrimaryValueDisplayTypePtrOutput)
}

func (in *analysisPrimaryValueDisplayTypePtr) ToAnalysisPrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) AnalysisPrimaryValueDisplayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisPrimaryValueDisplayTypePtrOutput)
}

type AnalysisRadarChartAxesRangeScale string

const (
	AnalysisRadarChartAxesRangeScaleAuto        = AnalysisRadarChartAxesRangeScale("AUTO")
	AnalysisRadarChartAxesRangeScaleIndependent = AnalysisRadarChartAxesRangeScale("INDEPENDENT")
	AnalysisRadarChartAxesRangeScaleShared      = AnalysisRadarChartAxesRangeScale("SHARED")
)

func (AnalysisRadarChartAxesRangeScale) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartAxesRangeScale)(nil)).Elem()
}

func (e AnalysisRadarChartAxesRangeScale) ToAnalysisRadarChartAxesRangeScaleOutput() AnalysisRadarChartAxesRangeScaleOutput {
	return pulumi.ToOutput(e).(AnalysisRadarChartAxesRangeScaleOutput)
}

func (e AnalysisRadarChartAxesRangeScale) ToAnalysisRadarChartAxesRangeScaleOutputWithContext(ctx context.Context) AnalysisRadarChartAxesRangeScaleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisRadarChartAxesRangeScaleOutput)
}

func (e AnalysisRadarChartAxesRangeScale) ToAnalysisRadarChartAxesRangeScalePtrOutput() AnalysisRadarChartAxesRangeScalePtrOutput {
	return e.ToAnalysisRadarChartAxesRangeScalePtrOutputWithContext(context.Background())
}

func (e AnalysisRadarChartAxesRangeScale) ToAnalysisRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) AnalysisRadarChartAxesRangeScalePtrOutput {
	return AnalysisRadarChartAxesRangeScale(e).ToAnalysisRadarChartAxesRangeScaleOutputWithContext(ctx).ToAnalysisRadarChartAxesRangeScalePtrOutputWithContext(ctx)
}

func (e AnalysisRadarChartAxesRangeScale) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisRadarChartAxesRangeScale) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisRadarChartAxesRangeScale) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisRadarChartAxesRangeScale) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisRadarChartAxesRangeScaleOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartAxesRangeScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartAxesRangeScale)(nil)).Elem()
}

func (o AnalysisRadarChartAxesRangeScaleOutput) ToAnalysisRadarChartAxesRangeScaleOutput() AnalysisRadarChartAxesRangeScaleOutput {
	return o
}

func (o AnalysisRadarChartAxesRangeScaleOutput) ToAnalysisRadarChartAxesRangeScaleOutputWithContext(ctx context.Context) AnalysisRadarChartAxesRangeScaleOutput {
	return o
}

func (o AnalysisRadarChartAxesRangeScaleOutput) ToAnalysisRadarChartAxesRangeScalePtrOutput() AnalysisRadarChartAxesRangeScalePtrOutput {
	return o.ToAnalysisRadarChartAxesRangeScalePtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartAxesRangeScaleOutput) ToAnalysisRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) AnalysisRadarChartAxesRangeScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRadarChartAxesRangeScale) *AnalysisRadarChartAxesRangeScale {
		return &v
	}).(AnalysisRadarChartAxesRangeScalePtrOutput)
}

func (o AnalysisRadarChartAxesRangeScaleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisRadarChartAxesRangeScaleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisRadarChartAxesRangeScale) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisRadarChartAxesRangeScaleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartAxesRangeScaleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisRadarChartAxesRangeScale) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisRadarChartAxesRangeScalePtrOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartAxesRangeScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartAxesRangeScale)(nil)).Elem()
}

func (o AnalysisRadarChartAxesRangeScalePtrOutput) ToAnalysisRadarChartAxesRangeScalePtrOutput() AnalysisRadarChartAxesRangeScalePtrOutput {
	return o
}

func (o AnalysisRadarChartAxesRangeScalePtrOutput) ToAnalysisRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) AnalysisRadarChartAxesRangeScalePtrOutput {
	return o
}

func (o AnalysisRadarChartAxesRangeScalePtrOutput) Elem() AnalysisRadarChartAxesRangeScaleOutput {
	return o.ApplyT(func(v *AnalysisRadarChartAxesRangeScale) AnalysisRadarChartAxesRangeScale {
		if v != nil {
			return *v
		}
		var ret AnalysisRadarChartAxesRangeScale
		return ret
	}).(AnalysisRadarChartAxesRangeScaleOutput)
}

func (o AnalysisRadarChartAxesRangeScalePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartAxesRangeScalePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisRadarChartAxesRangeScale) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisRadarChartAxesRangeScaleInput is an input type that accepts values of the AnalysisRadarChartAxesRangeScale enum
// A concrete instance of `AnalysisRadarChartAxesRangeScaleInput` can be one of the following:
//
//	AnalysisRadarChartAxesRangeScaleAuto
//	AnalysisRadarChartAxesRangeScaleIndependent
//	AnalysisRadarChartAxesRangeScaleShared
type AnalysisRadarChartAxesRangeScaleInput interface {
	pulumi.Input

	ToAnalysisRadarChartAxesRangeScaleOutput() AnalysisRadarChartAxesRangeScaleOutput
	ToAnalysisRadarChartAxesRangeScaleOutputWithContext(context.Context) AnalysisRadarChartAxesRangeScaleOutput
}

var analysisRadarChartAxesRangeScalePtrType = reflect.TypeOf((**AnalysisRadarChartAxesRangeScale)(nil)).Elem()

type AnalysisRadarChartAxesRangeScalePtrInput interface {
	pulumi.Input

	ToAnalysisRadarChartAxesRangeScalePtrOutput() AnalysisRadarChartAxesRangeScalePtrOutput
	ToAnalysisRadarChartAxesRangeScalePtrOutputWithContext(context.Context) AnalysisRadarChartAxesRangeScalePtrOutput
}

type analysisRadarChartAxesRangeScalePtr string

func AnalysisRadarChartAxesRangeScalePtr(v string) AnalysisRadarChartAxesRangeScalePtrInput {
	return (*analysisRadarChartAxesRangeScalePtr)(&v)
}

func (*analysisRadarChartAxesRangeScalePtr) ElementType() reflect.Type {
	return analysisRadarChartAxesRangeScalePtrType
}

func (in *analysisRadarChartAxesRangeScalePtr) ToAnalysisRadarChartAxesRangeScalePtrOutput() AnalysisRadarChartAxesRangeScalePtrOutput {
	return pulumi.ToOutput(in).(AnalysisRadarChartAxesRangeScalePtrOutput)
}

func (in *analysisRadarChartAxesRangeScalePtr) ToAnalysisRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) AnalysisRadarChartAxesRangeScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisRadarChartAxesRangeScalePtrOutput)
}

type AnalysisRadarChartShape string

const (
	AnalysisRadarChartShapeCircle  = AnalysisRadarChartShape("CIRCLE")
	AnalysisRadarChartShapePolygon = AnalysisRadarChartShape("POLYGON")
)

func (AnalysisRadarChartShape) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartShape)(nil)).Elem()
}

func (e AnalysisRadarChartShape) ToAnalysisRadarChartShapeOutput() AnalysisRadarChartShapeOutput {
	return pulumi.ToOutput(e).(AnalysisRadarChartShapeOutput)
}

func (e AnalysisRadarChartShape) ToAnalysisRadarChartShapeOutputWithContext(ctx context.Context) AnalysisRadarChartShapeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisRadarChartShapeOutput)
}

func (e AnalysisRadarChartShape) ToAnalysisRadarChartShapePtrOutput() AnalysisRadarChartShapePtrOutput {
	return e.ToAnalysisRadarChartShapePtrOutputWithContext(context.Background())
}

func (e AnalysisRadarChartShape) ToAnalysisRadarChartShapePtrOutputWithContext(ctx context.Context) AnalysisRadarChartShapePtrOutput {
	return AnalysisRadarChartShape(e).ToAnalysisRadarChartShapeOutputWithContext(ctx).ToAnalysisRadarChartShapePtrOutputWithContext(ctx)
}

func (e AnalysisRadarChartShape) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisRadarChartShape) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisRadarChartShape) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisRadarChartShape) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisRadarChartShapeOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRadarChartShape)(nil)).Elem()
}

func (o AnalysisRadarChartShapeOutput) ToAnalysisRadarChartShapeOutput() AnalysisRadarChartShapeOutput {
	return o
}

func (o AnalysisRadarChartShapeOutput) ToAnalysisRadarChartShapeOutputWithContext(ctx context.Context) AnalysisRadarChartShapeOutput {
	return o
}

func (o AnalysisRadarChartShapeOutput) ToAnalysisRadarChartShapePtrOutput() AnalysisRadarChartShapePtrOutput {
	return o.ToAnalysisRadarChartShapePtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartShapeOutput) ToAnalysisRadarChartShapePtrOutputWithContext(ctx context.Context) AnalysisRadarChartShapePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRadarChartShape) *AnalysisRadarChartShape {
		return &v
	}).(AnalysisRadarChartShapePtrOutput)
}

func (o AnalysisRadarChartShapeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisRadarChartShapeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisRadarChartShape) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisRadarChartShapeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartShapeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisRadarChartShape) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisRadarChartShapePtrOutput struct{ *pulumi.OutputState }

func (AnalysisRadarChartShapePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRadarChartShape)(nil)).Elem()
}

func (o AnalysisRadarChartShapePtrOutput) ToAnalysisRadarChartShapePtrOutput() AnalysisRadarChartShapePtrOutput {
	return o
}

func (o AnalysisRadarChartShapePtrOutput) ToAnalysisRadarChartShapePtrOutputWithContext(ctx context.Context) AnalysisRadarChartShapePtrOutput {
	return o
}

func (o AnalysisRadarChartShapePtrOutput) Elem() AnalysisRadarChartShapeOutput {
	return o.ApplyT(func(v *AnalysisRadarChartShape) AnalysisRadarChartShape {
		if v != nil {
			return *v
		}
		var ret AnalysisRadarChartShape
		return ret
	}).(AnalysisRadarChartShapeOutput)
}

func (o AnalysisRadarChartShapePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisRadarChartShapePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisRadarChartShape) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisRadarChartShapeInput is an input type that accepts values of the AnalysisRadarChartShape enum
// A concrete instance of `AnalysisRadarChartShapeInput` can be one of the following:
//
//	AnalysisRadarChartShapeCircle
//	AnalysisRadarChartShapePolygon
type AnalysisRadarChartShapeInput interface {
	pulumi.Input

	ToAnalysisRadarChartShapeOutput() AnalysisRadarChartShapeOutput
	ToAnalysisRadarChartShapeOutputWithContext(context.Context) AnalysisRadarChartShapeOutput
}

var analysisRadarChartShapePtrType = reflect.TypeOf((**AnalysisRadarChartShape)(nil)).Elem()

type AnalysisRadarChartShapePtrInput interface {
	pulumi.Input

	ToAnalysisRadarChartShapePtrOutput() AnalysisRadarChartShapePtrOutput
	ToAnalysisRadarChartShapePtrOutputWithContext(context.Context) AnalysisRadarChartShapePtrOutput
}

type analysisRadarChartShapePtr string

func AnalysisRadarChartShapePtr(v string) AnalysisRadarChartShapePtrInput {
	return (*analysisRadarChartShapePtr)(&v)
}

func (*analysisRadarChartShapePtr) ElementType() reflect.Type {
	return analysisRadarChartShapePtrType
}

func (in *analysisRadarChartShapePtr) ToAnalysisRadarChartShapePtrOutput() AnalysisRadarChartShapePtrOutput {
	return pulumi.ToOutput(in).(AnalysisRadarChartShapePtrOutput)
}

func (in *analysisRadarChartShapePtr) ToAnalysisRadarChartShapePtrOutputWithContext(ctx context.Context) AnalysisRadarChartShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisRadarChartShapePtrOutput)
}

type AnalysisReferenceLineLabelHorizontalPosition string

const (
	AnalysisReferenceLineLabelHorizontalPositionLeft   = AnalysisReferenceLineLabelHorizontalPosition("LEFT")
	AnalysisReferenceLineLabelHorizontalPositionCenter = AnalysisReferenceLineLabelHorizontalPosition("CENTER")
	AnalysisReferenceLineLabelHorizontalPositionRight  = AnalysisReferenceLineLabelHorizontalPosition("RIGHT")
)

func (AnalysisReferenceLineLabelHorizontalPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineLabelHorizontalPosition)(nil)).Elem()
}

func (e AnalysisReferenceLineLabelHorizontalPosition) ToAnalysisReferenceLineLabelHorizontalPositionOutput() AnalysisReferenceLineLabelHorizontalPositionOutput {
	return pulumi.ToOutput(e).(AnalysisReferenceLineLabelHorizontalPositionOutput)
}

func (e AnalysisReferenceLineLabelHorizontalPosition) ToAnalysisReferenceLineLabelHorizontalPositionOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelHorizontalPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisReferenceLineLabelHorizontalPositionOutput)
}

func (e AnalysisReferenceLineLabelHorizontalPosition) ToAnalysisReferenceLineLabelHorizontalPositionPtrOutput() AnalysisReferenceLineLabelHorizontalPositionPtrOutput {
	return e.ToAnalysisReferenceLineLabelHorizontalPositionPtrOutputWithContext(context.Background())
}

func (e AnalysisReferenceLineLabelHorizontalPosition) ToAnalysisReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelHorizontalPositionPtrOutput {
	return AnalysisReferenceLineLabelHorizontalPosition(e).ToAnalysisReferenceLineLabelHorizontalPositionOutputWithContext(ctx).ToAnalysisReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx)
}

func (e AnalysisReferenceLineLabelHorizontalPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisReferenceLineLabelHorizontalPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisReferenceLineLabelHorizontalPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisReferenceLineLabelHorizontalPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisReferenceLineLabelHorizontalPositionOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineLabelHorizontalPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineLabelHorizontalPosition)(nil)).Elem()
}

func (o AnalysisReferenceLineLabelHorizontalPositionOutput) ToAnalysisReferenceLineLabelHorizontalPositionOutput() AnalysisReferenceLineLabelHorizontalPositionOutput {
	return o
}

func (o AnalysisReferenceLineLabelHorizontalPositionOutput) ToAnalysisReferenceLineLabelHorizontalPositionOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelHorizontalPositionOutput {
	return o
}

func (o AnalysisReferenceLineLabelHorizontalPositionOutput) ToAnalysisReferenceLineLabelHorizontalPositionPtrOutput() AnalysisReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ToAnalysisReferenceLineLabelHorizontalPositionPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineLabelHorizontalPositionOutput) ToAnalysisReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLineLabelHorizontalPosition) *AnalysisReferenceLineLabelHorizontalPosition {
		return &v
	}).(AnalysisReferenceLineLabelHorizontalPositionPtrOutput)
}

func (o AnalysisReferenceLineLabelHorizontalPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineLabelHorizontalPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisReferenceLineLabelHorizontalPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisReferenceLineLabelHorizontalPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineLabelHorizontalPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisReferenceLineLabelHorizontalPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisReferenceLineLabelHorizontalPositionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineLabelHorizontalPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineLabelHorizontalPosition)(nil)).Elem()
}

func (o AnalysisReferenceLineLabelHorizontalPositionPtrOutput) ToAnalysisReferenceLineLabelHorizontalPositionPtrOutput() AnalysisReferenceLineLabelHorizontalPositionPtrOutput {
	return o
}

func (o AnalysisReferenceLineLabelHorizontalPositionPtrOutput) ToAnalysisReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelHorizontalPositionPtrOutput {
	return o
}

func (o AnalysisReferenceLineLabelHorizontalPositionPtrOutput) Elem() AnalysisReferenceLineLabelHorizontalPositionOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineLabelHorizontalPosition) AnalysisReferenceLineLabelHorizontalPosition {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLineLabelHorizontalPosition
		return ret
	}).(AnalysisReferenceLineLabelHorizontalPositionOutput)
}

func (o AnalysisReferenceLineLabelHorizontalPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineLabelHorizontalPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisReferenceLineLabelHorizontalPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisReferenceLineLabelHorizontalPositionInput is an input type that accepts values of the AnalysisReferenceLineLabelHorizontalPosition enum
// A concrete instance of `AnalysisReferenceLineLabelHorizontalPositionInput` can be one of the following:
//
//	AnalysisReferenceLineLabelHorizontalPositionLeft
//	AnalysisReferenceLineLabelHorizontalPositionCenter
//	AnalysisReferenceLineLabelHorizontalPositionRight
type AnalysisReferenceLineLabelHorizontalPositionInput interface {
	pulumi.Input

	ToAnalysisReferenceLineLabelHorizontalPositionOutput() AnalysisReferenceLineLabelHorizontalPositionOutput
	ToAnalysisReferenceLineLabelHorizontalPositionOutputWithContext(context.Context) AnalysisReferenceLineLabelHorizontalPositionOutput
}

var analysisReferenceLineLabelHorizontalPositionPtrType = reflect.TypeOf((**AnalysisReferenceLineLabelHorizontalPosition)(nil)).Elem()

type AnalysisReferenceLineLabelHorizontalPositionPtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLineLabelHorizontalPositionPtrOutput() AnalysisReferenceLineLabelHorizontalPositionPtrOutput
	ToAnalysisReferenceLineLabelHorizontalPositionPtrOutputWithContext(context.Context) AnalysisReferenceLineLabelHorizontalPositionPtrOutput
}

type analysisReferenceLineLabelHorizontalPositionPtr string

func AnalysisReferenceLineLabelHorizontalPositionPtr(v string) AnalysisReferenceLineLabelHorizontalPositionPtrInput {
	return (*analysisReferenceLineLabelHorizontalPositionPtr)(&v)
}

func (*analysisReferenceLineLabelHorizontalPositionPtr) ElementType() reflect.Type {
	return analysisReferenceLineLabelHorizontalPositionPtrType
}

func (in *analysisReferenceLineLabelHorizontalPositionPtr) ToAnalysisReferenceLineLabelHorizontalPositionPtrOutput() AnalysisReferenceLineLabelHorizontalPositionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisReferenceLineLabelHorizontalPositionPtrOutput)
}

func (in *analysisReferenceLineLabelHorizontalPositionPtr) ToAnalysisReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelHorizontalPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisReferenceLineLabelHorizontalPositionPtrOutput)
}

type AnalysisReferenceLineLabelVerticalPosition string

const (
	AnalysisReferenceLineLabelVerticalPositionAbove = AnalysisReferenceLineLabelVerticalPosition("ABOVE")
	AnalysisReferenceLineLabelVerticalPositionBelow = AnalysisReferenceLineLabelVerticalPosition("BELOW")
)

func (AnalysisReferenceLineLabelVerticalPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineLabelVerticalPosition)(nil)).Elem()
}

func (e AnalysisReferenceLineLabelVerticalPosition) ToAnalysisReferenceLineLabelVerticalPositionOutput() AnalysisReferenceLineLabelVerticalPositionOutput {
	return pulumi.ToOutput(e).(AnalysisReferenceLineLabelVerticalPositionOutput)
}

func (e AnalysisReferenceLineLabelVerticalPosition) ToAnalysisReferenceLineLabelVerticalPositionOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelVerticalPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisReferenceLineLabelVerticalPositionOutput)
}

func (e AnalysisReferenceLineLabelVerticalPosition) ToAnalysisReferenceLineLabelVerticalPositionPtrOutput() AnalysisReferenceLineLabelVerticalPositionPtrOutput {
	return e.ToAnalysisReferenceLineLabelVerticalPositionPtrOutputWithContext(context.Background())
}

func (e AnalysisReferenceLineLabelVerticalPosition) ToAnalysisReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelVerticalPositionPtrOutput {
	return AnalysisReferenceLineLabelVerticalPosition(e).ToAnalysisReferenceLineLabelVerticalPositionOutputWithContext(ctx).ToAnalysisReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx)
}

func (e AnalysisReferenceLineLabelVerticalPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisReferenceLineLabelVerticalPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisReferenceLineLabelVerticalPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisReferenceLineLabelVerticalPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisReferenceLineLabelVerticalPositionOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineLabelVerticalPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineLabelVerticalPosition)(nil)).Elem()
}

func (o AnalysisReferenceLineLabelVerticalPositionOutput) ToAnalysisReferenceLineLabelVerticalPositionOutput() AnalysisReferenceLineLabelVerticalPositionOutput {
	return o
}

func (o AnalysisReferenceLineLabelVerticalPositionOutput) ToAnalysisReferenceLineLabelVerticalPositionOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelVerticalPositionOutput {
	return o
}

func (o AnalysisReferenceLineLabelVerticalPositionOutput) ToAnalysisReferenceLineLabelVerticalPositionPtrOutput() AnalysisReferenceLineLabelVerticalPositionPtrOutput {
	return o.ToAnalysisReferenceLineLabelVerticalPositionPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineLabelVerticalPositionOutput) ToAnalysisReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelVerticalPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLineLabelVerticalPosition) *AnalysisReferenceLineLabelVerticalPosition {
		return &v
	}).(AnalysisReferenceLineLabelVerticalPositionPtrOutput)
}

func (o AnalysisReferenceLineLabelVerticalPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineLabelVerticalPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisReferenceLineLabelVerticalPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisReferenceLineLabelVerticalPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineLabelVerticalPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisReferenceLineLabelVerticalPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisReferenceLineLabelVerticalPositionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineLabelVerticalPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineLabelVerticalPosition)(nil)).Elem()
}

func (o AnalysisReferenceLineLabelVerticalPositionPtrOutput) ToAnalysisReferenceLineLabelVerticalPositionPtrOutput() AnalysisReferenceLineLabelVerticalPositionPtrOutput {
	return o
}

func (o AnalysisReferenceLineLabelVerticalPositionPtrOutput) ToAnalysisReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelVerticalPositionPtrOutput {
	return o
}

func (o AnalysisReferenceLineLabelVerticalPositionPtrOutput) Elem() AnalysisReferenceLineLabelVerticalPositionOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineLabelVerticalPosition) AnalysisReferenceLineLabelVerticalPosition {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLineLabelVerticalPosition
		return ret
	}).(AnalysisReferenceLineLabelVerticalPositionOutput)
}

func (o AnalysisReferenceLineLabelVerticalPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineLabelVerticalPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisReferenceLineLabelVerticalPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisReferenceLineLabelVerticalPositionInput is an input type that accepts values of the AnalysisReferenceLineLabelVerticalPosition enum
// A concrete instance of `AnalysisReferenceLineLabelVerticalPositionInput` can be one of the following:
//
//	AnalysisReferenceLineLabelVerticalPositionAbove
//	AnalysisReferenceLineLabelVerticalPositionBelow
type AnalysisReferenceLineLabelVerticalPositionInput interface {
	pulumi.Input

	ToAnalysisReferenceLineLabelVerticalPositionOutput() AnalysisReferenceLineLabelVerticalPositionOutput
	ToAnalysisReferenceLineLabelVerticalPositionOutputWithContext(context.Context) AnalysisReferenceLineLabelVerticalPositionOutput
}

var analysisReferenceLineLabelVerticalPositionPtrType = reflect.TypeOf((**AnalysisReferenceLineLabelVerticalPosition)(nil)).Elem()

type AnalysisReferenceLineLabelVerticalPositionPtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLineLabelVerticalPositionPtrOutput() AnalysisReferenceLineLabelVerticalPositionPtrOutput
	ToAnalysisReferenceLineLabelVerticalPositionPtrOutputWithContext(context.Context) AnalysisReferenceLineLabelVerticalPositionPtrOutput
}

type analysisReferenceLineLabelVerticalPositionPtr string

func AnalysisReferenceLineLabelVerticalPositionPtr(v string) AnalysisReferenceLineLabelVerticalPositionPtrInput {
	return (*analysisReferenceLineLabelVerticalPositionPtr)(&v)
}

func (*analysisReferenceLineLabelVerticalPositionPtr) ElementType() reflect.Type {
	return analysisReferenceLineLabelVerticalPositionPtrType
}

func (in *analysisReferenceLineLabelVerticalPositionPtr) ToAnalysisReferenceLineLabelVerticalPositionPtrOutput() AnalysisReferenceLineLabelVerticalPositionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisReferenceLineLabelVerticalPositionPtrOutput)
}

func (in *analysisReferenceLineLabelVerticalPositionPtr) ToAnalysisReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineLabelVerticalPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisReferenceLineLabelVerticalPositionPtrOutput)
}

type AnalysisReferenceLinePatternType string

const (
	AnalysisReferenceLinePatternTypeSolid  = AnalysisReferenceLinePatternType("SOLID")
	AnalysisReferenceLinePatternTypeDashed = AnalysisReferenceLinePatternType("DASHED")
	AnalysisReferenceLinePatternTypeDotted = AnalysisReferenceLinePatternType("DOTTED")
)

func (AnalysisReferenceLinePatternType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLinePatternType)(nil)).Elem()
}

func (e AnalysisReferenceLinePatternType) ToAnalysisReferenceLinePatternTypeOutput() AnalysisReferenceLinePatternTypeOutput {
	return pulumi.ToOutput(e).(AnalysisReferenceLinePatternTypeOutput)
}

func (e AnalysisReferenceLinePatternType) ToAnalysisReferenceLinePatternTypeOutputWithContext(ctx context.Context) AnalysisReferenceLinePatternTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisReferenceLinePatternTypeOutput)
}

func (e AnalysisReferenceLinePatternType) ToAnalysisReferenceLinePatternTypePtrOutput() AnalysisReferenceLinePatternTypePtrOutput {
	return e.ToAnalysisReferenceLinePatternTypePtrOutputWithContext(context.Background())
}

func (e AnalysisReferenceLinePatternType) ToAnalysisReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) AnalysisReferenceLinePatternTypePtrOutput {
	return AnalysisReferenceLinePatternType(e).ToAnalysisReferenceLinePatternTypeOutputWithContext(ctx).ToAnalysisReferenceLinePatternTypePtrOutputWithContext(ctx)
}

func (e AnalysisReferenceLinePatternType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisReferenceLinePatternType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisReferenceLinePatternType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisReferenceLinePatternType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisReferenceLinePatternTypeOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLinePatternTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLinePatternType)(nil)).Elem()
}

func (o AnalysisReferenceLinePatternTypeOutput) ToAnalysisReferenceLinePatternTypeOutput() AnalysisReferenceLinePatternTypeOutput {
	return o
}

func (o AnalysisReferenceLinePatternTypeOutput) ToAnalysisReferenceLinePatternTypeOutputWithContext(ctx context.Context) AnalysisReferenceLinePatternTypeOutput {
	return o
}

func (o AnalysisReferenceLinePatternTypeOutput) ToAnalysisReferenceLinePatternTypePtrOutput() AnalysisReferenceLinePatternTypePtrOutput {
	return o.ToAnalysisReferenceLinePatternTypePtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLinePatternTypeOutput) ToAnalysisReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) AnalysisReferenceLinePatternTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLinePatternType) *AnalysisReferenceLinePatternType {
		return &v
	}).(AnalysisReferenceLinePatternTypePtrOutput)
}

func (o AnalysisReferenceLinePatternTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisReferenceLinePatternTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisReferenceLinePatternType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisReferenceLinePatternTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLinePatternTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisReferenceLinePatternType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisReferenceLinePatternTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLinePatternTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLinePatternType)(nil)).Elem()
}

func (o AnalysisReferenceLinePatternTypePtrOutput) ToAnalysisReferenceLinePatternTypePtrOutput() AnalysisReferenceLinePatternTypePtrOutput {
	return o
}

func (o AnalysisReferenceLinePatternTypePtrOutput) ToAnalysisReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) AnalysisReferenceLinePatternTypePtrOutput {
	return o
}

func (o AnalysisReferenceLinePatternTypePtrOutput) Elem() AnalysisReferenceLinePatternTypeOutput {
	return o.ApplyT(func(v *AnalysisReferenceLinePatternType) AnalysisReferenceLinePatternType {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLinePatternType
		return ret
	}).(AnalysisReferenceLinePatternTypeOutput)
}

func (o AnalysisReferenceLinePatternTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLinePatternTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisReferenceLinePatternType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisReferenceLinePatternTypeInput is an input type that accepts values of the AnalysisReferenceLinePatternType enum
// A concrete instance of `AnalysisReferenceLinePatternTypeInput` can be one of the following:
//
//	AnalysisReferenceLinePatternTypeSolid
//	AnalysisReferenceLinePatternTypeDashed
//	AnalysisReferenceLinePatternTypeDotted
type AnalysisReferenceLinePatternTypeInput interface {
	pulumi.Input

	ToAnalysisReferenceLinePatternTypeOutput() AnalysisReferenceLinePatternTypeOutput
	ToAnalysisReferenceLinePatternTypeOutputWithContext(context.Context) AnalysisReferenceLinePatternTypeOutput
}

var analysisReferenceLinePatternTypePtrType = reflect.TypeOf((**AnalysisReferenceLinePatternType)(nil)).Elem()

type AnalysisReferenceLinePatternTypePtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLinePatternTypePtrOutput() AnalysisReferenceLinePatternTypePtrOutput
	ToAnalysisReferenceLinePatternTypePtrOutputWithContext(context.Context) AnalysisReferenceLinePatternTypePtrOutput
}

type analysisReferenceLinePatternTypePtr string

func AnalysisReferenceLinePatternTypePtr(v string) AnalysisReferenceLinePatternTypePtrInput {
	return (*analysisReferenceLinePatternTypePtr)(&v)
}

func (*analysisReferenceLinePatternTypePtr) ElementType() reflect.Type {
	return analysisReferenceLinePatternTypePtrType
}

func (in *analysisReferenceLinePatternTypePtr) ToAnalysisReferenceLinePatternTypePtrOutput() AnalysisReferenceLinePatternTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisReferenceLinePatternTypePtrOutput)
}

func (in *analysisReferenceLinePatternTypePtr) ToAnalysisReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) AnalysisReferenceLinePatternTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisReferenceLinePatternTypePtrOutput)
}

type AnalysisReferenceLineSeriesType string

const (
	AnalysisReferenceLineSeriesTypeBar  = AnalysisReferenceLineSeriesType("BAR")
	AnalysisReferenceLineSeriesTypeLine = AnalysisReferenceLineSeriesType("LINE")
)

func (AnalysisReferenceLineSeriesType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineSeriesType)(nil)).Elem()
}

func (e AnalysisReferenceLineSeriesType) ToAnalysisReferenceLineSeriesTypeOutput() AnalysisReferenceLineSeriesTypeOutput {
	return pulumi.ToOutput(e).(AnalysisReferenceLineSeriesTypeOutput)
}

func (e AnalysisReferenceLineSeriesType) ToAnalysisReferenceLineSeriesTypeOutputWithContext(ctx context.Context) AnalysisReferenceLineSeriesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisReferenceLineSeriesTypeOutput)
}

func (e AnalysisReferenceLineSeriesType) ToAnalysisReferenceLineSeriesTypePtrOutput() AnalysisReferenceLineSeriesTypePtrOutput {
	return e.ToAnalysisReferenceLineSeriesTypePtrOutputWithContext(context.Background())
}

func (e AnalysisReferenceLineSeriesType) ToAnalysisReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) AnalysisReferenceLineSeriesTypePtrOutput {
	return AnalysisReferenceLineSeriesType(e).ToAnalysisReferenceLineSeriesTypeOutputWithContext(ctx).ToAnalysisReferenceLineSeriesTypePtrOutputWithContext(ctx)
}

func (e AnalysisReferenceLineSeriesType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisReferenceLineSeriesType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisReferenceLineSeriesType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisReferenceLineSeriesType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisReferenceLineSeriesTypeOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineSeriesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineSeriesType)(nil)).Elem()
}

func (o AnalysisReferenceLineSeriesTypeOutput) ToAnalysisReferenceLineSeriesTypeOutput() AnalysisReferenceLineSeriesTypeOutput {
	return o
}

func (o AnalysisReferenceLineSeriesTypeOutput) ToAnalysisReferenceLineSeriesTypeOutputWithContext(ctx context.Context) AnalysisReferenceLineSeriesTypeOutput {
	return o
}

func (o AnalysisReferenceLineSeriesTypeOutput) ToAnalysisReferenceLineSeriesTypePtrOutput() AnalysisReferenceLineSeriesTypePtrOutput {
	return o.ToAnalysisReferenceLineSeriesTypePtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineSeriesTypeOutput) ToAnalysisReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) AnalysisReferenceLineSeriesTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLineSeriesType) *AnalysisReferenceLineSeriesType {
		return &v
	}).(AnalysisReferenceLineSeriesTypePtrOutput)
}

func (o AnalysisReferenceLineSeriesTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineSeriesTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisReferenceLineSeriesType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisReferenceLineSeriesTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineSeriesTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisReferenceLineSeriesType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisReferenceLineSeriesTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineSeriesTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineSeriesType)(nil)).Elem()
}

func (o AnalysisReferenceLineSeriesTypePtrOutput) ToAnalysisReferenceLineSeriesTypePtrOutput() AnalysisReferenceLineSeriesTypePtrOutput {
	return o
}

func (o AnalysisReferenceLineSeriesTypePtrOutput) ToAnalysisReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) AnalysisReferenceLineSeriesTypePtrOutput {
	return o
}

func (o AnalysisReferenceLineSeriesTypePtrOutput) Elem() AnalysisReferenceLineSeriesTypeOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineSeriesType) AnalysisReferenceLineSeriesType {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLineSeriesType
		return ret
	}).(AnalysisReferenceLineSeriesTypeOutput)
}

func (o AnalysisReferenceLineSeriesTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineSeriesTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisReferenceLineSeriesType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisReferenceLineSeriesTypeInput is an input type that accepts values of the AnalysisReferenceLineSeriesType enum
// A concrete instance of `AnalysisReferenceLineSeriesTypeInput` can be one of the following:
//
//	AnalysisReferenceLineSeriesTypeBar
//	AnalysisReferenceLineSeriesTypeLine
type AnalysisReferenceLineSeriesTypeInput interface {
	pulumi.Input

	ToAnalysisReferenceLineSeriesTypeOutput() AnalysisReferenceLineSeriesTypeOutput
	ToAnalysisReferenceLineSeriesTypeOutputWithContext(context.Context) AnalysisReferenceLineSeriesTypeOutput
}

var analysisReferenceLineSeriesTypePtrType = reflect.TypeOf((**AnalysisReferenceLineSeriesType)(nil)).Elem()

type AnalysisReferenceLineSeriesTypePtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLineSeriesTypePtrOutput() AnalysisReferenceLineSeriesTypePtrOutput
	ToAnalysisReferenceLineSeriesTypePtrOutputWithContext(context.Context) AnalysisReferenceLineSeriesTypePtrOutput
}

type analysisReferenceLineSeriesTypePtr string

func AnalysisReferenceLineSeriesTypePtr(v string) AnalysisReferenceLineSeriesTypePtrInput {
	return (*analysisReferenceLineSeriesTypePtr)(&v)
}

func (*analysisReferenceLineSeriesTypePtr) ElementType() reflect.Type {
	return analysisReferenceLineSeriesTypePtrType
}

func (in *analysisReferenceLineSeriesTypePtr) ToAnalysisReferenceLineSeriesTypePtrOutput() AnalysisReferenceLineSeriesTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisReferenceLineSeriesTypePtrOutput)
}

func (in *analysisReferenceLineSeriesTypePtr) ToAnalysisReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) AnalysisReferenceLineSeriesTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisReferenceLineSeriesTypePtrOutput)
}

type AnalysisReferenceLineValueLabelRelativePosition string

const (
	AnalysisReferenceLineValueLabelRelativePositionBeforeCustomLabel = AnalysisReferenceLineValueLabelRelativePosition("BEFORE_CUSTOM_LABEL")
	AnalysisReferenceLineValueLabelRelativePositionAfterCustomLabel  = AnalysisReferenceLineValueLabelRelativePosition("AFTER_CUSTOM_LABEL")
)

func (AnalysisReferenceLineValueLabelRelativePosition) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineValueLabelRelativePosition)(nil)).Elem()
}

func (e AnalysisReferenceLineValueLabelRelativePosition) ToAnalysisReferenceLineValueLabelRelativePositionOutput() AnalysisReferenceLineValueLabelRelativePositionOutput {
	return pulumi.ToOutput(e).(AnalysisReferenceLineValueLabelRelativePositionOutput)
}

func (e AnalysisReferenceLineValueLabelRelativePosition) ToAnalysisReferenceLineValueLabelRelativePositionOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelRelativePositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisReferenceLineValueLabelRelativePositionOutput)
}

func (e AnalysisReferenceLineValueLabelRelativePosition) ToAnalysisReferenceLineValueLabelRelativePositionPtrOutput() AnalysisReferenceLineValueLabelRelativePositionPtrOutput {
	return e.ToAnalysisReferenceLineValueLabelRelativePositionPtrOutputWithContext(context.Background())
}

func (e AnalysisReferenceLineValueLabelRelativePosition) ToAnalysisReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelRelativePositionPtrOutput {
	return AnalysisReferenceLineValueLabelRelativePosition(e).ToAnalysisReferenceLineValueLabelRelativePositionOutputWithContext(ctx).ToAnalysisReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx)
}

func (e AnalysisReferenceLineValueLabelRelativePosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisReferenceLineValueLabelRelativePosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisReferenceLineValueLabelRelativePosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisReferenceLineValueLabelRelativePosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisReferenceLineValueLabelRelativePositionOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineValueLabelRelativePositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisReferenceLineValueLabelRelativePosition)(nil)).Elem()
}

func (o AnalysisReferenceLineValueLabelRelativePositionOutput) ToAnalysisReferenceLineValueLabelRelativePositionOutput() AnalysisReferenceLineValueLabelRelativePositionOutput {
	return o
}

func (o AnalysisReferenceLineValueLabelRelativePositionOutput) ToAnalysisReferenceLineValueLabelRelativePositionOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelRelativePositionOutput {
	return o
}

func (o AnalysisReferenceLineValueLabelRelativePositionOutput) ToAnalysisReferenceLineValueLabelRelativePositionPtrOutput() AnalysisReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ToAnalysisReferenceLineValueLabelRelativePositionPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineValueLabelRelativePositionOutput) ToAnalysisReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisReferenceLineValueLabelRelativePosition) *AnalysisReferenceLineValueLabelRelativePosition {
		return &v
	}).(AnalysisReferenceLineValueLabelRelativePositionPtrOutput)
}

func (o AnalysisReferenceLineValueLabelRelativePositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineValueLabelRelativePositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisReferenceLineValueLabelRelativePosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisReferenceLineValueLabelRelativePositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineValueLabelRelativePositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisReferenceLineValueLabelRelativePosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisReferenceLineValueLabelRelativePositionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisReferenceLineValueLabelRelativePositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisReferenceLineValueLabelRelativePosition)(nil)).Elem()
}

func (o AnalysisReferenceLineValueLabelRelativePositionPtrOutput) ToAnalysisReferenceLineValueLabelRelativePositionPtrOutput() AnalysisReferenceLineValueLabelRelativePositionPtrOutput {
	return o
}

func (o AnalysisReferenceLineValueLabelRelativePositionPtrOutput) ToAnalysisReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelRelativePositionPtrOutput {
	return o
}

func (o AnalysisReferenceLineValueLabelRelativePositionPtrOutput) Elem() AnalysisReferenceLineValueLabelRelativePositionOutput {
	return o.ApplyT(func(v *AnalysisReferenceLineValueLabelRelativePosition) AnalysisReferenceLineValueLabelRelativePosition {
		if v != nil {
			return *v
		}
		var ret AnalysisReferenceLineValueLabelRelativePosition
		return ret
	}).(AnalysisReferenceLineValueLabelRelativePositionOutput)
}

func (o AnalysisReferenceLineValueLabelRelativePositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisReferenceLineValueLabelRelativePositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisReferenceLineValueLabelRelativePosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisReferenceLineValueLabelRelativePositionInput is an input type that accepts values of the AnalysisReferenceLineValueLabelRelativePosition enum
// A concrete instance of `AnalysisReferenceLineValueLabelRelativePositionInput` can be one of the following:
//
//	AnalysisReferenceLineValueLabelRelativePositionBeforeCustomLabel
//	AnalysisReferenceLineValueLabelRelativePositionAfterCustomLabel
type AnalysisReferenceLineValueLabelRelativePositionInput interface {
	pulumi.Input

	ToAnalysisReferenceLineValueLabelRelativePositionOutput() AnalysisReferenceLineValueLabelRelativePositionOutput
	ToAnalysisReferenceLineValueLabelRelativePositionOutputWithContext(context.Context) AnalysisReferenceLineValueLabelRelativePositionOutput
}

var analysisReferenceLineValueLabelRelativePositionPtrType = reflect.TypeOf((**AnalysisReferenceLineValueLabelRelativePosition)(nil)).Elem()

type AnalysisReferenceLineValueLabelRelativePositionPtrInput interface {
	pulumi.Input

	ToAnalysisReferenceLineValueLabelRelativePositionPtrOutput() AnalysisReferenceLineValueLabelRelativePositionPtrOutput
	ToAnalysisReferenceLineValueLabelRelativePositionPtrOutputWithContext(context.Context) AnalysisReferenceLineValueLabelRelativePositionPtrOutput
}

type analysisReferenceLineValueLabelRelativePositionPtr string

func AnalysisReferenceLineValueLabelRelativePositionPtr(v string) AnalysisReferenceLineValueLabelRelativePositionPtrInput {
	return (*analysisReferenceLineValueLabelRelativePositionPtr)(&v)
}

func (*analysisReferenceLineValueLabelRelativePositionPtr) ElementType() reflect.Type {
	return analysisReferenceLineValueLabelRelativePositionPtrType
}

func (in *analysisReferenceLineValueLabelRelativePositionPtr) ToAnalysisReferenceLineValueLabelRelativePositionPtrOutput() AnalysisReferenceLineValueLabelRelativePositionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisReferenceLineValueLabelRelativePositionPtrOutput)
}

func (in *analysisReferenceLineValueLabelRelativePositionPtr) ToAnalysisReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) AnalysisReferenceLineValueLabelRelativePositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisReferenceLineValueLabelRelativePositionPtrOutput)
}

type AnalysisRelativeDateType string

const (
	AnalysisRelativeDateTypePrevious = AnalysisRelativeDateType("PREVIOUS")
	AnalysisRelativeDateTypeThis     = AnalysisRelativeDateType("THIS")
	AnalysisRelativeDateTypeLast     = AnalysisRelativeDateType("LAST")
	AnalysisRelativeDateTypeNow      = AnalysisRelativeDateType("NOW")
	AnalysisRelativeDateTypeNext     = AnalysisRelativeDateType("NEXT")
)

func (AnalysisRelativeDateType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRelativeDateType)(nil)).Elem()
}

func (e AnalysisRelativeDateType) ToAnalysisRelativeDateTypeOutput() AnalysisRelativeDateTypeOutput {
	return pulumi.ToOutput(e).(AnalysisRelativeDateTypeOutput)
}

func (e AnalysisRelativeDateType) ToAnalysisRelativeDateTypeOutputWithContext(ctx context.Context) AnalysisRelativeDateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisRelativeDateTypeOutput)
}

func (e AnalysisRelativeDateType) ToAnalysisRelativeDateTypePtrOutput() AnalysisRelativeDateTypePtrOutput {
	return e.ToAnalysisRelativeDateTypePtrOutputWithContext(context.Background())
}

func (e AnalysisRelativeDateType) ToAnalysisRelativeDateTypePtrOutputWithContext(ctx context.Context) AnalysisRelativeDateTypePtrOutput {
	return AnalysisRelativeDateType(e).ToAnalysisRelativeDateTypeOutputWithContext(ctx).ToAnalysisRelativeDateTypePtrOutputWithContext(ctx)
}

func (e AnalysisRelativeDateType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisRelativeDateType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisRelativeDateType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisRelativeDateType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisRelativeDateTypeOutput struct{ *pulumi.OutputState }

func (AnalysisRelativeDateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRelativeDateType)(nil)).Elem()
}

func (o AnalysisRelativeDateTypeOutput) ToAnalysisRelativeDateTypeOutput() AnalysisRelativeDateTypeOutput {
	return o
}

func (o AnalysisRelativeDateTypeOutput) ToAnalysisRelativeDateTypeOutputWithContext(ctx context.Context) AnalysisRelativeDateTypeOutput {
	return o
}

func (o AnalysisRelativeDateTypeOutput) ToAnalysisRelativeDateTypePtrOutput() AnalysisRelativeDateTypePtrOutput {
	return o.ToAnalysisRelativeDateTypePtrOutputWithContext(context.Background())
}

func (o AnalysisRelativeDateTypeOutput) ToAnalysisRelativeDateTypePtrOutputWithContext(ctx context.Context) AnalysisRelativeDateTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRelativeDateType) *AnalysisRelativeDateType {
		return &v
	}).(AnalysisRelativeDateTypePtrOutput)
}

func (o AnalysisRelativeDateTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisRelativeDateTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisRelativeDateType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisRelativeDateTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisRelativeDateTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisRelativeDateType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisRelativeDateTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisRelativeDateTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRelativeDateType)(nil)).Elem()
}

func (o AnalysisRelativeDateTypePtrOutput) ToAnalysisRelativeDateTypePtrOutput() AnalysisRelativeDateTypePtrOutput {
	return o
}

func (o AnalysisRelativeDateTypePtrOutput) ToAnalysisRelativeDateTypePtrOutputWithContext(ctx context.Context) AnalysisRelativeDateTypePtrOutput {
	return o
}

func (o AnalysisRelativeDateTypePtrOutput) Elem() AnalysisRelativeDateTypeOutput {
	return o.ApplyT(func(v *AnalysisRelativeDateType) AnalysisRelativeDateType {
		if v != nil {
			return *v
		}
		var ret AnalysisRelativeDateType
		return ret
	}).(AnalysisRelativeDateTypeOutput)
}

func (o AnalysisRelativeDateTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisRelativeDateTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisRelativeDateType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisRelativeDateTypeInput is an input type that accepts values of the AnalysisRelativeDateType enum
// A concrete instance of `AnalysisRelativeDateTypeInput` can be one of the following:
//
//	AnalysisRelativeDateTypePrevious
//	AnalysisRelativeDateTypeThis
//	AnalysisRelativeDateTypeLast
//	AnalysisRelativeDateTypeNow
//	AnalysisRelativeDateTypeNext
type AnalysisRelativeDateTypeInput interface {
	pulumi.Input

	ToAnalysisRelativeDateTypeOutput() AnalysisRelativeDateTypeOutput
	ToAnalysisRelativeDateTypeOutputWithContext(context.Context) AnalysisRelativeDateTypeOutput
}

var analysisRelativeDateTypePtrType = reflect.TypeOf((**AnalysisRelativeDateType)(nil)).Elem()

type AnalysisRelativeDateTypePtrInput interface {
	pulumi.Input

	ToAnalysisRelativeDateTypePtrOutput() AnalysisRelativeDateTypePtrOutput
	ToAnalysisRelativeDateTypePtrOutputWithContext(context.Context) AnalysisRelativeDateTypePtrOutput
}

type analysisRelativeDateTypePtr string

func AnalysisRelativeDateTypePtr(v string) AnalysisRelativeDateTypePtrInput {
	return (*analysisRelativeDateTypePtr)(&v)
}

func (*analysisRelativeDateTypePtr) ElementType() reflect.Type {
	return analysisRelativeDateTypePtrType
}

func (in *analysisRelativeDateTypePtr) ToAnalysisRelativeDateTypePtrOutput() AnalysisRelativeDateTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisRelativeDateTypePtrOutput)
}

func (in *analysisRelativeDateTypePtr) ToAnalysisRelativeDateTypePtrOutputWithContext(ctx context.Context) AnalysisRelativeDateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisRelativeDateTypePtrOutput)
}

type AnalysisRelativeFontSize string

const (
	AnalysisRelativeFontSizeExtraSmall = AnalysisRelativeFontSize("EXTRA_SMALL")
	AnalysisRelativeFontSizeSmall      = AnalysisRelativeFontSize("SMALL")
	AnalysisRelativeFontSizeMedium     = AnalysisRelativeFontSize("MEDIUM")
	AnalysisRelativeFontSizeLarge      = AnalysisRelativeFontSize("LARGE")
	AnalysisRelativeFontSizeExtraLarge = AnalysisRelativeFontSize("EXTRA_LARGE")
)

func (AnalysisRelativeFontSize) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRelativeFontSize)(nil)).Elem()
}

func (e AnalysisRelativeFontSize) ToAnalysisRelativeFontSizeOutput() AnalysisRelativeFontSizeOutput {
	return pulumi.ToOutput(e).(AnalysisRelativeFontSizeOutput)
}

func (e AnalysisRelativeFontSize) ToAnalysisRelativeFontSizeOutputWithContext(ctx context.Context) AnalysisRelativeFontSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisRelativeFontSizeOutput)
}

func (e AnalysisRelativeFontSize) ToAnalysisRelativeFontSizePtrOutput() AnalysisRelativeFontSizePtrOutput {
	return e.ToAnalysisRelativeFontSizePtrOutputWithContext(context.Background())
}

func (e AnalysisRelativeFontSize) ToAnalysisRelativeFontSizePtrOutputWithContext(ctx context.Context) AnalysisRelativeFontSizePtrOutput {
	return AnalysisRelativeFontSize(e).ToAnalysisRelativeFontSizeOutputWithContext(ctx).ToAnalysisRelativeFontSizePtrOutputWithContext(ctx)
}

func (e AnalysisRelativeFontSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisRelativeFontSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisRelativeFontSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisRelativeFontSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisRelativeFontSizeOutput struct{ *pulumi.OutputState }

func (AnalysisRelativeFontSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisRelativeFontSize)(nil)).Elem()
}

func (o AnalysisRelativeFontSizeOutput) ToAnalysisRelativeFontSizeOutput() AnalysisRelativeFontSizeOutput {
	return o
}

func (o AnalysisRelativeFontSizeOutput) ToAnalysisRelativeFontSizeOutputWithContext(ctx context.Context) AnalysisRelativeFontSizeOutput {
	return o
}

func (o AnalysisRelativeFontSizeOutput) ToAnalysisRelativeFontSizePtrOutput() AnalysisRelativeFontSizePtrOutput {
	return o.ToAnalysisRelativeFontSizePtrOutputWithContext(context.Background())
}

func (o AnalysisRelativeFontSizeOutput) ToAnalysisRelativeFontSizePtrOutputWithContext(ctx context.Context) AnalysisRelativeFontSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisRelativeFontSize) *AnalysisRelativeFontSize {
		return &v
	}).(AnalysisRelativeFontSizePtrOutput)
}

func (o AnalysisRelativeFontSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisRelativeFontSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisRelativeFontSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisRelativeFontSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisRelativeFontSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisRelativeFontSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisRelativeFontSizePtrOutput struct{ *pulumi.OutputState }

func (AnalysisRelativeFontSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisRelativeFontSize)(nil)).Elem()
}

func (o AnalysisRelativeFontSizePtrOutput) ToAnalysisRelativeFontSizePtrOutput() AnalysisRelativeFontSizePtrOutput {
	return o
}

func (o AnalysisRelativeFontSizePtrOutput) ToAnalysisRelativeFontSizePtrOutputWithContext(ctx context.Context) AnalysisRelativeFontSizePtrOutput {
	return o
}

func (o AnalysisRelativeFontSizePtrOutput) Elem() AnalysisRelativeFontSizeOutput {
	return o.ApplyT(func(v *AnalysisRelativeFontSize) AnalysisRelativeFontSize {
		if v != nil {
			return *v
		}
		var ret AnalysisRelativeFontSize
		return ret
	}).(AnalysisRelativeFontSizeOutput)
}

func (o AnalysisRelativeFontSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisRelativeFontSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisRelativeFontSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisRelativeFontSizeInput is an input type that accepts values of the AnalysisRelativeFontSize enum
// A concrete instance of `AnalysisRelativeFontSizeInput` can be one of the following:
//
//	AnalysisRelativeFontSizeExtraSmall
//	AnalysisRelativeFontSizeSmall
//	AnalysisRelativeFontSizeMedium
//	AnalysisRelativeFontSizeLarge
//	AnalysisRelativeFontSizeExtraLarge
type AnalysisRelativeFontSizeInput interface {
	pulumi.Input

	ToAnalysisRelativeFontSizeOutput() AnalysisRelativeFontSizeOutput
	ToAnalysisRelativeFontSizeOutputWithContext(context.Context) AnalysisRelativeFontSizeOutput
}

var analysisRelativeFontSizePtrType = reflect.TypeOf((**AnalysisRelativeFontSize)(nil)).Elem()

type AnalysisRelativeFontSizePtrInput interface {
	pulumi.Input

	ToAnalysisRelativeFontSizePtrOutput() AnalysisRelativeFontSizePtrOutput
	ToAnalysisRelativeFontSizePtrOutputWithContext(context.Context) AnalysisRelativeFontSizePtrOutput
}

type analysisRelativeFontSizePtr string

func AnalysisRelativeFontSizePtr(v string) AnalysisRelativeFontSizePtrInput {
	return (*analysisRelativeFontSizePtr)(&v)
}

func (*analysisRelativeFontSizePtr) ElementType() reflect.Type {
	return analysisRelativeFontSizePtrType
}

func (in *analysisRelativeFontSizePtr) ToAnalysisRelativeFontSizePtrOutput() AnalysisRelativeFontSizePtrOutput {
	return pulumi.ToOutput(in).(AnalysisRelativeFontSizePtrOutput)
}

func (in *analysisRelativeFontSizePtr) ToAnalysisRelativeFontSizePtrOutputWithContext(ctx context.Context) AnalysisRelativeFontSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisRelativeFontSizePtrOutput)
}

type AnalysisResizeOption string

const (
	AnalysisResizeOptionFixed      = AnalysisResizeOption("FIXED")
	AnalysisResizeOptionResponsive = AnalysisResizeOption("RESPONSIVE")
)

func (AnalysisResizeOption) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResizeOption)(nil)).Elem()
}

func (e AnalysisResizeOption) ToAnalysisResizeOptionOutput() AnalysisResizeOptionOutput {
	return pulumi.ToOutput(e).(AnalysisResizeOptionOutput)
}

func (e AnalysisResizeOption) ToAnalysisResizeOptionOutputWithContext(ctx context.Context) AnalysisResizeOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisResizeOptionOutput)
}

func (e AnalysisResizeOption) ToAnalysisResizeOptionPtrOutput() AnalysisResizeOptionPtrOutput {
	return e.ToAnalysisResizeOptionPtrOutputWithContext(context.Background())
}

func (e AnalysisResizeOption) ToAnalysisResizeOptionPtrOutputWithContext(ctx context.Context) AnalysisResizeOptionPtrOutput {
	return AnalysisResizeOption(e).ToAnalysisResizeOptionOutputWithContext(ctx).ToAnalysisResizeOptionPtrOutputWithContext(ctx)
}

func (e AnalysisResizeOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisResizeOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisResizeOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisResizeOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisResizeOptionOutput struct{ *pulumi.OutputState }

func (AnalysisResizeOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResizeOption)(nil)).Elem()
}

func (o AnalysisResizeOptionOutput) ToAnalysisResizeOptionOutput() AnalysisResizeOptionOutput {
	return o
}

func (o AnalysisResizeOptionOutput) ToAnalysisResizeOptionOutputWithContext(ctx context.Context) AnalysisResizeOptionOutput {
	return o
}

func (o AnalysisResizeOptionOutput) ToAnalysisResizeOptionPtrOutput() AnalysisResizeOptionPtrOutput {
	return o.ToAnalysisResizeOptionPtrOutputWithContext(context.Background())
}

func (o AnalysisResizeOptionOutput) ToAnalysisResizeOptionPtrOutputWithContext(ctx context.Context) AnalysisResizeOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisResizeOption) *AnalysisResizeOption {
		return &v
	}).(AnalysisResizeOptionPtrOutput)
}

func (o AnalysisResizeOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisResizeOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisResizeOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisResizeOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisResizeOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisResizeOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisResizeOptionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisResizeOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisResizeOption)(nil)).Elem()
}

func (o AnalysisResizeOptionPtrOutput) ToAnalysisResizeOptionPtrOutput() AnalysisResizeOptionPtrOutput {
	return o
}

func (o AnalysisResizeOptionPtrOutput) ToAnalysisResizeOptionPtrOutputWithContext(ctx context.Context) AnalysisResizeOptionPtrOutput {
	return o
}

func (o AnalysisResizeOptionPtrOutput) Elem() AnalysisResizeOptionOutput {
	return o.ApplyT(func(v *AnalysisResizeOption) AnalysisResizeOption {
		if v != nil {
			return *v
		}
		var ret AnalysisResizeOption
		return ret
	}).(AnalysisResizeOptionOutput)
}

func (o AnalysisResizeOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisResizeOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisResizeOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisResizeOptionInput is an input type that accepts values of the AnalysisResizeOption enum
// A concrete instance of `AnalysisResizeOptionInput` can be one of the following:
//
//	AnalysisResizeOptionFixed
//	AnalysisResizeOptionResponsive
type AnalysisResizeOptionInput interface {
	pulumi.Input

	ToAnalysisResizeOptionOutput() AnalysisResizeOptionOutput
	ToAnalysisResizeOptionOutputWithContext(context.Context) AnalysisResizeOptionOutput
}

var analysisResizeOptionPtrType = reflect.TypeOf((**AnalysisResizeOption)(nil)).Elem()

type AnalysisResizeOptionPtrInput interface {
	pulumi.Input

	ToAnalysisResizeOptionPtrOutput() AnalysisResizeOptionPtrOutput
	ToAnalysisResizeOptionPtrOutputWithContext(context.Context) AnalysisResizeOptionPtrOutput
}

type analysisResizeOptionPtr string

func AnalysisResizeOptionPtr(v string) AnalysisResizeOptionPtrInput {
	return (*analysisResizeOptionPtr)(&v)
}

func (*analysisResizeOptionPtr) ElementType() reflect.Type {
	return analysisResizeOptionPtrType
}

func (in *analysisResizeOptionPtr) ToAnalysisResizeOptionPtrOutput() AnalysisResizeOptionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisResizeOptionPtrOutput)
}

func (in *analysisResizeOptionPtr) ToAnalysisResizeOptionPtrOutputWithContext(ctx context.Context) AnalysisResizeOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisResizeOptionPtrOutput)
}

type AnalysisResourceStatus string

const (
	AnalysisResourceStatusCreationInProgress = AnalysisResourceStatus("CREATION_IN_PROGRESS")
	AnalysisResourceStatusCreationSuccessful = AnalysisResourceStatus("CREATION_SUCCESSFUL")
	AnalysisResourceStatusCreationFailed     = AnalysisResourceStatus("CREATION_FAILED")
	AnalysisResourceStatusUpdateInProgress   = AnalysisResourceStatus("UPDATE_IN_PROGRESS")
	AnalysisResourceStatusUpdateSuccessful   = AnalysisResourceStatus("UPDATE_SUCCESSFUL")
	AnalysisResourceStatusUpdateFailed       = AnalysisResourceStatus("UPDATE_FAILED")
	AnalysisResourceStatusDeleted            = AnalysisResourceStatus("DELETED")
)

func (AnalysisResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResourceStatus)(nil)).Elem()
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusOutput() AnalysisResourceStatusOutput {
	return pulumi.ToOutput(e).(AnalysisResourceStatusOutput)
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusOutputWithContext(ctx context.Context) AnalysisResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisResourceStatusOutput)
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return e.ToAnalysisResourceStatusPtrOutputWithContext(context.Background())
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return AnalysisResourceStatus(e).ToAnalysisResourceStatusOutputWithContext(ctx).ToAnalysisResourceStatusPtrOutputWithContext(ctx)
}

func (e AnalysisResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisResourceStatusOutput struct{ *pulumi.OutputState }

func (AnalysisResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResourceStatus)(nil)).Elem()
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusOutput() AnalysisResourceStatusOutput {
	return o
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusOutputWithContext(ctx context.Context) AnalysisResourceStatusOutput {
	return o
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return o.ToAnalysisResourceStatusPtrOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisResourceStatus) *AnalysisResourceStatus {
		return &v
	}).(AnalysisResourceStatusPtrOutput)
}

func (o AnalysisResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (AnalysisResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisResourceStatus)(nil)).Elem()
}

func (o AnalysisResourceStatusPtrOutput) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return o
}

func (o AnalysisResourceStatusPtrOutput) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return o
}

func (o AnalysisResourceStatusPtrOutput) Elem() AnalysisResourceStatusOutput {
	return o.ApplyT(func(v *AnalysisResourceStatus) AnalysisResourceStatus {
		if v != nil {
			return *v
		}
		var ret AnalysisResourceStatus
		return ret
	}).(AnalysisResourceStatusOutput)
}

func (o AnalysisResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisResourceStatusInput is an input type that accepts values of the AnalysisResourceStatus enum
// A concrete instance of `AnalysisResourceStatusInput` can be one of the following:
//
//	AnalysisResourceStatusCreationInProgress
//	AnalysisResourceStatusCreationSuccessful
//	AnalysisResourceStatusCreationFailed
//	AnalysisResourceStatusUpdateInProgress
//	AnalysisResourceStatusUpdateSuccessful
//	AnalysisResourceStatusUpdateFailed
//	AnalysisResourceStatusDeleted
type AnalysisResourceStatusInput interface {
	pulumi.Input

	ToAnalysisResourceStatusOutput() AnalysisResourceStatusOutput
	ToAnalysisResourceStatusOutputWithContext(context.Context) AnalysisResourceStatusOutput
}

var analysisResourceStatusPtrType = reflect.TypeOf((**AnalysisResourceStatus)(nil)).Elem()

type AnalysisResourceStatusPtrInput interface {
	pulumi.Input

	ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput
	ToAnalysisResourceStatusPtrOutputWithContext(context.Context) AnalysisResourceStatusPtrOutput
}

type analysisResourceStatusPtr string

func AnalysisResourceStatusPtr(v string) AnalysisResourceStatusPtrInput {
	return (*analysisResourceStatusPtr)(&v)
}

func (*analysisResourceStatusPtr) ElementType() reflect.Type {
	return analysisResourceStatusPtrType
}

func (in *analysisResourceStatusPtr) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(AnalysisResourceStatusPtrOutput)
}

func (in *analysisResourceStatusPtr) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisResourceStatusPtrOutput)
}

type AnalysisSectionPageBreakStatus string

const (
	AnalysisSectionPageBreakStatusEnabled  = AnalysisSectionPageBreakStatus("ENABLED")
	AnalysisSectionPageBreakStatusDisabled = AnalysisSectionPageBreakStatus("DISABLED")
)

func (AnalysisSectionPageBreakStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionPageBreakStatus)(nil)).Elem()
}

func (e AnalysisSectionPageBreakStatus) ToAnalysisSectionPageBreakStatusOutput() AnalysisSectionPageBreakStatusOutput {
	return pulumi.ToOutput(e).(AnalysisSectionPageBreakStatusOutput)
}

func (e AnalysisSectionPageBreakStatus) ToAnalysisSectionPageBreakStatusOutputWithContext(ctx context.Context) AnalysisSectionPageBreakStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSectionPageBreakStatusOutput)
}

func (e AnalysisSectionPageBreakStatus) ToAnalysisSectionPageBreakStatusPtrOutput() AnalysisSectionPageBreakStatusPtrOutput {
	return e.ToAnalysisSectionPageBreakStatusPtrOutputWithContext(context.Background())
}

func (e AnalysisSectionPageBreakStatus) ToAnalysisSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) AnalysisSectionPageBreakStatusPtrOutput {
	return AnalysisSectionPageBreakStatus(e).ToAnalysisSectionPageBreakStatusOutputWithContext(ctx).ToAnalysisSectionPageBreakStatusPtrOutputWithContext(ctx)
}

func (e AnalysisSectionPageBreakStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSectionPageBreakStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSectionPageBreakStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSectionPageBreakStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSectionPageBreakStatusOutput struct{ *pulumi.OutputState }

func (AnalysisSectionPageBreakStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSectionPageBreakStatus)(nil)).Elem()
}

func (o AnalysisSectionPageBreakStatusOutput) ToAnalysisSectionPageBreakStatusOutput() AnalysisSectionPageBreakStatusOutput {
	return o
}

func (o AnalysisSectionPageBreakStatusOutput) ToAnalysisSectionPageBreakStatusOutputWithContext(ctx context.Context) AnalysisSectionPageBreakStatusOutput {
	return o
}

func (o AnalysisSectionPageBreakStatusOutput) ToAnalysisSectionPageBreakStatusPtrOutput() AnalysisSectionPageBreakStatusPtrOutput {
	return o.ToAnalysisSectionPageBreakStatusPtrOutputWithContext(context.Background())
}

func (o AnalysisSectionPageBreakStatusOutput) ToAnalysisSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) AnalysisSectionPageBreakStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSectionPageBreakStatus) *AnalysisSectionPageBreakStatus {
		return &v
	}).(AnalysisSectionPageBreakStatusPtrOutput)
}

func (o AnalysisSectionPageBreakStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSectionPageBreakStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSectionPageBreakStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSectionPageBreakStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSectionPageBreakStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSectionPageBreakStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSectionPageBreakStatusPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSectionPageBreakStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSectionPageBreakStatus)(nil)).Elem()
}

func (o AnalysisSectionPageBreakStatusPtrOutput) ToAnalysisSectionPageBreakStatusPtrOutput() AnalysisSectionPageBreakStatusPtrOutput {
	return o
}

func (o AnalysisSectionPageBreakStatusPtrOutput) ToAnalysisSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) AnalysisSectionPageBreakStatusPtrOutput {
	return o
}

func (o AnalysisSectionPageBreakStatusPtrOutput) Elem() AnalysisSectionPageBreakStatusOutput {
	return o.ApplyT(func(v *AnalysisSectionPageBreakStatus) AnalysisSectionPageBreakStatus {
		if v != nil {
			return *v
		}
		var ret AnalysisSectionPageBreakStatus
		return ret
	}).(AnalysisSectionPageBreakStatusOutput)
}

func (o AnalysisSectionPageBreakStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSectionPageBreakStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSectionPageBreakStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSectionPageBreakStatusInput is an input type that accepts values of the AnalysisSectionPageBreakStatus enum
// A concrete instance of `AnalysisSectionPageBreakStatusInput` can be one of the following:
//
//	AnalysisSectionPageBreakStatusEnabled
//	AnalysisSectionPageBreakStatusDisabled
type AnalysisSectionPageBreakStatusInput interface {
	pulumi.Input

	ToAnalysisSectionPageBreakStatusOutput() AnalysisSectionPageBreakStatusOutput
	ToAnalysisSectionPageBreakStatusOutputWithContext(context.Context) AnalysisSectionPageBreakStatusOutput
}

var analysisSectionPageBreakStatusPtrType = reflect.TypeOf((**AnalysisSectionPageBreakStatus)(nil)).Elem()

type AnalysisSectionPageBreakStatusPtrInput interface {
	pulumi.Input

	ToAnalysisSectionPageBreakStatusPtrOutput() AnalysisSectionPageBreakStatusPtrOutput
	ToAnalysisSectionPageBreakStatusPtrOutputWithContext(context.Context) AnalysisSectionPageBreakStatusPtrOutput
}

type analysisSectionPageBreakStatusPtr string

func AnalysisSectionPageBreakStatusPtr(v string) AnalysisSectionPageBreakStatusPtrInput {
	return (*analysisSectionPageBreakStatusPtr)(&v)
}

func (*analysisSectionPageBreakStatusPtr) ElementType() reflect.Type {
	return analysisSectionPageBreakStatusPtrType
}

func (in *analysisSectionPageBreakStatusPtr) ToAnalysisSectionPageBreakStatusPtrOutput() AnalysisSectionPageBreakStatusPtrOutput {
	return pulumi.ToOutput(in).(AnalysisSectionPageBreakStatusPtrOutput)
}

func (in *analysisSectionPageBreakStatusPtr) ToAnalysisSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) AnalysisSectionPageBreakStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSectionPageBreakStatusPtrOutput)
}

type AnalysisSelectAllValueOptions string

const (
	AnalysisSelectAllValueOptionsAllValues = AnalysisSelectAllValueOptions("ALL_VALUES")
)

func (AnalysisSelectAllValueOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSelectAllValueOptions)(nil)).Elem()
}

func (e AnalysisSelectAllValueOptions) ToAnalysisSelectAllValueOptionsOutput() AnalysisSelectAllValueOptionsOutput {
	return pulumi.ToOutput(e).(AnalysisSelectAllValueOptionsOutput)
}

func (e AnalysisSelectAllValueOptions) ToAnalysisSelectAllValueOptionsOutputWithContext(ctx context.Context) AnalysisSelectAllValueOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSelectAllValueOptionsOutput)
}

func (e AnalysisSelectAllValueOptions) ToAnalysisSelectAllValueOptionsPtrOutput() AnalysisSelectAllValueOptionsPtrOutput {
	return e.ToAnalysisSelectAllValueOptionsPtrOutputWithContext(context.Background())
}

func (e AnalysisSelectAllValueOptions) ToAnalysisSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) AnalysisSelectAllValueOptionsPtrOutput {
	return AnalysisSelectAllValueOptions(e).ToAnalysisSelectAllValueOptionsOutputWithContext(ctx).ToAnalysisSelectAllValueOptionsPtrOutputWithContext(ctx)
}

func (e AnalysisSelectAllValueOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSelectAllValueOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSelectAllValueOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSelectAllValueOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSelectAllValueOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisSelectAllValueOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSelectAllValueOptions)(nil)).Elem()
}

func (o AnalysisSelectAllValueOptionsOutput) ToAnalysisSelectAllValueOptionsOutput() AnalysisSelectAllValueOptionsOutput {
	return o
}

func (o AnalysisSelectAllValueOptionsOutput) ToAnalysisSelectAllValueOptionsOutputWithContext(ctx context.Context) AnalysisSelectAllValueOptionsOutput {
	return o
}

func (o AnalysisSelectAllValueOptionsOutput) ToAnalysisSelectAllValueOptionsPtrOutput() AnalysisSelectAllValueOptionsPtrOutput {
	return o.ToAnalysisSelectAllValueOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisSelectAllValueOptionsOutput) ToAnalysisSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) AnalysisSelectAllValueOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSelectAllValueOptions) *AnalysisSelectAllValueOptions {
		return &v
	}).(AnalysisSelectAllValueOptionsPtrOutput)
}

func (o AnalysisSelectAllValueOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSelectAllValueOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSelectAllValueOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSelectAllValueOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSelectAllValueOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSelectAllValueOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSelectAllValueOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSelectAllValueOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSelectAllValueOptions)(nil)).Elem()
}

func (o AnalysisSelectAllValueOptionsPtrOutput) ToAnalysisSelectAllValueOptionsPtrOutput() AnalysisSelectAllValueOptionsPtrOutput {
	return o
}

func (o AnalysisSelectAllValueOptionsPtrOutput) ToAnalysisSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) AnalysisSelectAllValueOptionsPtrOutput {
	return o
}

func (o AnalysisSelectAllValueOptionsPtrOutput) Elem() AnalysisSelectAllValueOptionsOutput {
	return o.ApplyT(func(v *AnalysisSelectAllValueOptions) AnalysisSelectAllValueOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisSelectAllValueOptions
		return ret
	}).(AnalysisSelectAllValueOptionsOutput)
}

func (o AnalysisSelectAllValueOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSelectAllValueOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSelectAllValueOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSelectAllValueOptionsInput is an input type that accepts values of the AnalysisSelectAllValueOptions enum
// A concrete instance of `AnalysisSelectAllValueOptionsInput` can be one of the following:
//
//	AnalysisSelectAllValueOptionsAllValues
type AnalysisSelectAllValueOptionsInput interface {
	pulumi.Input

	ToAnalysisSelectAllValueOptionsOutput() AnalysisSelectAllValueOptionsOutput
	ToAnalysisSelectAllValueOptionsOutputWithContext(context.Context) AnalysisSelectAllValueOptionsOutput
}

var analysisSelectAllValueOptionsPtrType = reflect.TypeOf((**AnalysisSelectAllValueOptions)(nil)).Elem()

type AnalysisSelectAllValueOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisSelectAllValueOptionsPtrOutput() AnalysisSelectAllValueOptionsPtrOutput
	ToAnalysisSelectAllValueOptionsPtrOutputWithContext(context.Context) AnalysisSelectAllValueOptionsPtrOutput
}

type analysisSelectAllValueOptionsPtr string

func AnalysisSelectAllValueOptionsPtr(v string) AnalysisSelectAllValueOptionsPtrInput {
	return (*analysisSelectAllValueOptionsPtr)(&v)
}

func (*analysisSelectAllValueOptionsPtr) ElementType() reflect.Type {
	return analysisSelectAllValueOptionsPtrType
}

func (in *analysisSelectAllValueOptionsPtr) ToAnalysisSelectAllValueOptionsPtrOutput() AnalysisSelectAllValueOptionsPtrOutput {
	return pulumi.ToOutput(in).(AnalysisSelectAllValueOptionsPtrOutput)
}

func (in *analysisSelectAllValueOptionsPtr) ToAnalysisSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) AnalysisSelectAllValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSelectAllValueOptionsPtrOutput)
}

type AnalysisSelectedFieldOptions string

const (
	AnalysisSelectedFieldOptionsAllFields = AnalysisSelectedFieldOptions("ALL_FIELDS")
)

func (AnalysisSelectedFieldOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSelectedFieldOptions)(nil)).Elem()
}

func (e AnalysisSelectedFieldOptions) ToAnalysisSelectedFieldOptionsOutput() AnalysisSelectedFieldOptionsOutput {
	return pulumi.ToOutput(e).(AnalysisSelectedFieldOptionsOutput)
}

func (e AnalysisSelectedFieldOptions) ToAnalysisSelectedFieldOptionsOutputWithContext(ctx context.Context) AnalysisSelectedFieldOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSelectedFieldOptionsOutput)
}

func (e AnalysisSelectedFieldOptions) ToAnalysisSelectedFieldOptionsPtrOutput() AnalysisSelectedFieldOptionsPtrOutput {
	return e.ToAnalysisSelectedFieldOptionsPtrOutputWithContext(context.Background())
}

func (e AnalysisSelectedFieldOptions) ToAnalysisSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisSelectedFieldOptionsPtrOutput {
	return AnalysisSelectedFieldOptions(e).ToAnalysisSelectedFieldOptionsOutputWithContext(ctx).ToAnalysisSelectedFieldOptionsPtrOutputWithContext(ctx)
}

func (e AnalysisSelectedFieldOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSelectedFieldOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSelectedFieldOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSelectedFieldOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSelectedFieldOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisSelectedFieldOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSelectedFieldOptions)(nil)).Elem()
}

func (o AnalysisSelectedFieldOptionsOutput) ToAnalysisSelectedFieldOptionsOutput() AnalysisSelectedFieldOptionsOutput {
	return o
}

func (o AnalysisSelectedFieldOptionsOutput) ToAnalysisSelectedFieldOptionsOutputWithContext(ctx context.Context) AnalysisSelectedFieldOptionsOutput {
	return o
}

func (o AnalysisSelectedFieldOptionsOutput) ToAnalysisSelectedFieldOptionsPtrOutput() AnalysisSelectedFieldOptionsPtrOutput {
	return o.ToAnalysisSelectedFieldOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisSelectedFieldOptionsOutput) ToAnalysisSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisSelectedFieldOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSelectedFieldOptions) *AnalysisSelectedFieldOptions {
		return &v
	}).(AnalysisSelectedFieldOptionsPtrOutput)
}

func (o AnalysisSelectedFieldOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSelectedFieldOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSelectedFieldOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSelectedFieldOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSelectedFieldOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSelectedFieldOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSelectedFieldOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSelectedFieldOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSelectedFieldOptions)(nil)).Elem()
}

func (o AnalysisSelectedFieldOptionsPtrOutput) ToAnalysisSelectedFieldOptionsPtrOutput() AnalysisSelectedFieldOptionsPtrOutput {
	return o
}

func (o AnalysisSelectedFieldOptionsPtrOutput) ToAnalysisSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisSelectedFieldOptionsPtrOutput {
	return o
}

func (o AnalysisSelectedFieldOptionsPtrOutput) Elem() AnalysisSelectedFieldOptionsOutput {
	return o.ApplyT(func(v *AnalysisSelectedFieldOptions) AnalysisSelectedFieldOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisSelectedFieldOptions
		return ret
	}).(AnalysisSelectedFieldOptionsOutput)
}

func (o AnalysisSelectedFieldOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSelectedFieldOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSelectedFieldOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSelectedFieldOptionsInput is an input type that accepts values of the AnalysisSelectedFieldOptions enum
// A concrete instance of `AnalysisSelectedFieldOptionsInput` can be one of the following:
//
//	AnalysisSelectedFieldOptionsAllFields
type AnalysisSelectedFieldOptionsInput interface {
	pulumi.Input

	ToAnalysisSelectedFieldOptionsOutput() AnalysisSelectedFieldOptionsOutput
	ToAnalysisSelectedFieldOptionsOutputWithContext(context.Context) AnalysisSelectedFieldOptionsOutput
}

var analysisSelectedFieldOptionsPtrType = reflect.TypeOf((**AnalysisSelectedFieldOptions)(nil)).Elem()

type AnalysisSelectedFieldOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisSelectedFieldOptionsPtrOutput() AnalysisSelectedFieldOptionsPtrOutput
	ToAnalysisSelectedFieldOptionsPtrOutputWithContext(context.Context) AnalysisSelectedFieldOptionsPtrOutput
}

type analysisSelectedFieldOptionsPtr string

func AnalysisSelectedFieldOptionsPtr(v string) AnalysisSelectedFieldOptionsPtrInput {
	return (*analysisSelectedFieldOptionsPtr)(&v)
}

func (*analysisSelectedFieldOptionsPtr) ElementType() reflect.Type {
	return analysisSelectedFieldOptionsPtrType
}

func (in *analysisSelectedFieldOptionsPtr) ToAnalysisSelectedFieldOptionsPtrOutput() AnalysisSelectedFieldOptionsPtrOutput {
	return pulumi.ToOutput(in).(AnalysisSelectedFieldOptionsPtrOutput)
}

func (in *analysisSelectedFieldOptionsPtr) ToAnalysisSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) AnalysisSelectedFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSelectedFieldOptionsPtrOutput)
}

type AnalysisSelectedTooltipType string

const (
	AnalysisSelectedTooltipTypeBasic    = AnalysisSelectedTooltipType("BASIC")
	AnalysisSelectedTooltipTypeDetailed = AnalysisSelectedTooltipType("DETAILED")
)

func (AnalysisSelectedTooltipType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSelectedTooltipType)(nil)).Elem()
}

func (e AnalysisSelectedTooltipType) ToAnalysisSelectedTooltipTypeOutput() AnalysisSelectedTooltipTypeOutput {
	return pulumi.ToOutput(e).(AnalysisSelectedTooltipTypeOutput)
}

func (e AnalysisSelectedTooltipType) ToAnalysisSelectedTooltipTypeOutputWithContext(ctx context.Context) AnalysisSelectedTooltipTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSelectedTooltipTypeOutput)
}

func (e AnalysisSelectedTooltipType) ToAnalysisSelectedTooltipTypePtrOutput() AnalysisSelectedTooltipTypePtrOutput {
	return e.ToAnalysisSelectedTooltipTypePtrOutputWithContext(context.Background())
}

func (e AnalysisSelectedTooltipType) ToAnalysisSelectedTooltipTypePtrOutputWithContext(ctx context.Context) AnalysisSelectedTooltipTypePtrOutput {
	return AnalysisSelectedTooltipType(e).ToAnalysisSelectedTooltipTypeOutputWithContext(ctx).ToAnalysisSelectedTooltipTypePtrOutputWithContext(ctx)
}

func (e AnalysisSelectedTooltipType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSelectedTooltipType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSelectedTooltipType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSelectedTooltipType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSelectedTooltipTypeOutput struct{ *pulumi.OutputState }

func (AnalysisSelectedTooltipTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSelectedTooltipType)(nil)).Elem()
}

func (o AnalysisSelectedTooltipTypeOutput) ToAnalysisSelectedTooltipTypeOutput() AnalysisSelectedTooltipTypeOutput {
	return o
}

func (o AnalysisSelectedTooltipTypeOutput) ToAnalysisSelectedTooltipTypeOutputWithContext(ctx context.Context) AnalysisSelectedTooltipTypeOutput {
	return o
}

func (o AnalysisSelectedTooltipTypeOutput) ToAnalysisSelectedTooltipTypePtrOutput() AnalysisSelectedTooltipTypePtrOutput {
	return o.ToAnalysisSelectedTooltipTypePtrOutputWithContext(context.Background())
}

func (o AnalysisSelectedTooltipTypeOutput) ToAnalysisSelectedTooltipTypePtrOutputWithContext(ctx context.Context) AnalysisSelectedTooltipTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSelectedTooltipType) *AnalysisSelectedTooltipType {
		return &v
	}).(AnalysisSelectedTooltipTypePtrOutput)
}

func (o AnalysisSelectedTooltipTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSelectedTooltipTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSelectedTooltipType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSelectedTooltipTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSelectedTooltipTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSelectedTooltipType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSelectedTooltipTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisSelectedTooltipTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSelectedTooltipType)(nil)).Elem()
}

func (o AnalysisSelectedTooltipTypePtrOutput) ToAnalysisSelectedTooltipTypePtrOutput() AnalysisSelectedTooltipTypePtrOutput {
	return o
}

func (o AnalysisSelectedTooltipTypePtrOutput) ToAnalysisSelectedTooltipTypePtrOutputWithContext(ctx context.Context) AnalysisSelectedTooltipTypePtrOutput {
	return o
}

func (o AnalysisSelectedTooltipTypePtrOutput) Elem() AnalysisSelectedTooltipTypeOutput {
	return o.ApplyT(func(v *AnalysisSelectedTooltipType) AnalysisSelectedTooltipType {
		if v != nil {
			return *v
		}
		var ret AnalysisSelectedTooltipType
		return ret
	}).(AnalysisSelectedTooltipTypeOutput)
}

func (o AnalysisSelectedTooltipTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSelectedTooltipTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSelectedTooltipType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSelectedTooltipTypeInput is an input type that accepts values of the AnalysisSelectedTooltipType enum
// A concrete instance of `AnalysisSelectedTooltipTypeInput` can be one of the following:
//
//	AnalysisSelectedTooltipTypeBasic
//	AnalysisSelectedTooltipTypeDetailed
type AnalysisSelectedTooltipTypeInput interface {
	pulumi.Input

	ToAnalysisSelectedTooltipTypeOutput() AnalysisSelectedTooltipTypeOutput
	ToAnalysisSelectedTooltipTypeOutputWithContext(context.Context) AnalysisSelectedTooltipTypeOutput
}

var analysisSelectedTooltipTypePtrType = reflect.TypeOf((**AnalysisSelectedTooltipType)(nil)).Elem()

type AnalysisSelectedTooltipTypePtrInput interface {
	pulumi.Input

	ToAnalysisSelectedTooltipTypePtrOutput() AnalysisSelectedTooltipTypePtrOutput
	ToAnalysisSelectedTooltipTypePtrOutputWithContext(context.Context) AnalysisSelectedTooltipTypePtrOutput
}

type analysisSelectedTooltipTypePtr string

func AnalysisSelectedTooltipTypePtr(v string) AnalysisSelectedTooltipTypePtrInput {
	return (*analysisSelectedTooltipTypePtr)(&v)
}

func (*analysisSelectedTooltipTypePtr) ElementType() reflect.Type {
	return analysisSelectedTooltipTypePtrType
}

func (in *analysisSelectedTooltipTypePtr) ToAnalysisSelectedTooltipTypePtrOutput() AnalysisSelectedTooltipTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisSelectedTooltipTypePtrOutput)
}

func (in *analysisSelectedTooltipTypePtr) ToAnalysisSelectedTooltipTypePtrOutputWithContext(ctx context.Context) AnalysisSelectedTooltipTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSelectedTooltipTypePtrOutput)
}

type AnalysisSheetContentType string

const (
	AnalysisSheetContentTypePaginated   = AnalysisSheetContentType("PAGINATED")
	AnalysisSheetContentTypeInteractive = AnalysisSheetContentType("INTERACTIVE")
)

func (AnalysisSheetContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetContentType)(nil)).Elem()
}

func (e AnalysisSheetContentType) ToAnalysisSheetContentTypeOutput() AnalysisSheetContentTypeOutput {
	return pulumi.ToOutput(e).(AnalysisSheetContentTypeOutput)
}

func (e AnalysisSheetContentType) ToAnalysisSheetContentTypeOutputWithContext(ctx context.Context) AnalysisSheetContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSheetContentTypeOutput)
}

func (e AnalysisSheetContentType) ToAnalysisSheetContentTypePtrOutput() AnalysisSheetContentTypePtrOutput {
	return e.ToAnalysisSheetContentTypePtrOutputWithContext(context.Background())
}

func (e AnalysisSheetContentType) ToAnalysisSheetContentTypePtrOutputWithContext(ctx context.Context) AnalysisSheetContentTypePtrOutput {
	return AnalysisSheetContentType(e).ToAnalysisSheetContentTypeOutputWithContext(ctx).ToAnalysisSheetContentTypePtrOutputWithContext(ctx)
}

func (e AnalysisSheetContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSheetContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSheetContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSheetContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSheetContentTypeOutput struct{ *pulumi.OutputState }

func (AnalysisSheetContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetContentType)(nil)).Elem()
}

func (o AnalysisSheetContentTypeOutput) ToAnalysisSheetContentTypeOutput() AnalysisSheetContentTypeOutput {
	return o
}

func (o AnalysisSheetContentTypeOutput) ToAnalysisSheetContentTypeOutputWithContext(ctx context.Context) AnalysisSheetContentTypeOutput {
	return o
}

func (o AnalysisSheetContentTypeOutput) ToAnalysisSheetContentTypePtrOutput() AnalysisSheetContentTypePtrOutput {
	return o.ToAnalysisSheetContentTypePtrOutputWithContext(context.Background())
}

func (o AnalysisSheetContentTypeOutput) ToAnalysisSheetContentTypePtrOutputWithContext(ctx context.Context) AnalysisSheetContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSheetContentType) *AnalysisSheetContentType {
		return &v
	}).(AnalysisSheetContentTypePtrOutput)
}

func (o AnalysisSheetContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSheetContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSheetContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSheetContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSheetContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSheetContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSheetContentTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisSheetContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSheetContentType)(nil)).Elem()
}

func (o AnalysisSheetContentTypePtrOutput) ToAnalysisSheetContentTypePtrOutput() AnalysisSheetContentTypePtrOutput {
	return o
}

func (o AnalysisSheetContentTypePtrOutput) ToAnalysisSheetContentTypePtrOutputWithContext(ctx context.Context) AnalysisSheetContentTypePtrOutput {
	return o
}

func (o AnalysisSheetContentTypePtrOutput) Elem() AnalysisSheetContentTypeOutput {
	return o.ApplyT(func(v *AnalysisSheetContentType) AnalysisSheetContentType {
		if v != nil {
			return *v
		}
		var ret AnalysisSheetContentType
		return ret
	}).(AnalysisSheetContentTypeOutput)
}

func (o AnalysisSheetContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSheetContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSheetContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSheetContentTypeInput is an input type that accepts values of the AnalysisSheetContentType enum
// A concrete instance of `AnalysisSheetContentTypeInput` can be one of the following:
//
//	AnalysisSheetContentTypePaginated
//	AnalysisSheetContentTypeInteractive
type AnalysisSheetContentTypeInput interface {
	pulumi.Input

	ToAnalysisSheetContentTypeOutput() AnalysisSheetContentTypeOutput
	ToAnalysisSheetContentTypeOutputWithContext(context.Context) AnalysisSheetContentTypeOutput
}

var analysisSheetContentTypePtrType = reflect.TypeOf((**AnalysisSheetContentType)(nil)).Elem()

type AnalysisSheetContentTypePtrInput interface {
	pulumi.Input

	ToAnalysisSheetContentTypePtrOutput() AnalysisSheetContentTypePtrOutput
	ToAnalysisSheetContentTypePtrOutputWithContext(context.Context) AnalysisSheetContentTypePtrOutput
}

type analysisSheetContentTypePtr string

func AnalysisSheetContentTypePtr(v string) AnalysisSheetContentTypePtrInput {
	return (*analysisSheetContentTypePtr)(&v)
}

func (*analysisSheetContentTypePtr) ElementType() reflect.Type {
	return analysisSheetContentTypePtrType
}

func (in *analysisSheetContentTypePtr) ToAnalysisSheetContentTypePtrOutput() AnalysisSheetContentTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisSheetContentTypePtrOutput)
}

func (in *analysisSheetContentTypePtr) ToAnalysisSheetContentTypePtrOutputWithContext(ctx context.Context) AnalysisSheetContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSheetContentTypePtrOutput)
}

type AnalysisSheetControlDateTimePickerType string

const (
	AnalysisSheetControlDateTimePickerTypeSingleValued = AnalysisSheetControlDateTimePickerType("SINGLE_VALUED")
	AnalysisSheetControlDateTimePickerTypeDateRange    = AnalysisSheetControlDateTimePickerType("DATE_RANGE")
)

func (AnalysisSheetControlDateTimePickerType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetControlDateTimePickerType)(nil)).Elem()
}

func (e AnalysisSheetControlDateTimePickerType) ToAnalysisSheetControlDateTimePickerTypeOutput() AnalysisSheetControlDateTimePickerTypeOutput {
	return pulumi.ToOutput(e).(AnalysisSheetControlDateTimePickerTypeOutput)
}

func (e AnalysisSheetControlDateTimePickerType) ToAnalysisSheetControlDateTimePickerTypeOutputWithContext(ctx context.Context) AnalysisSheetControlDateTimePickerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSheetControlDateTimePickerTypeOutput)
}

func (e AnalysisSheetControlDateTimePickerType) ToAnalysisSheetControlDateTimePickerTypePtrOutput() AnalysisSheetControlDateTimePickerTypePtrOutput {
	return e.ToAnalysisSheetControlDateTimePickerTypePtrOutputWithContext(context.Background())
}

func (e AnalysisSheetControlDateTimePickerType) ToAnalysisSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlDateTimePickerTypePtrOutput {
	return AnalysisSheetControlDateTimePickerType(e).ToAnalysisSheetControlDateTimePickerTypeOutputWithContext(ctx).ToAnalysisSheetControlDateTimePickerTypePtrOutputWithContext(ctx)
}

func (e AnalysisSheetControlDateTimePickerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSheetControlDateTimePickerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSheetControlDateTimePickerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSheetControlDateTimePickerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSheetControlDateTimePickerTypeOutput struct{ *pulumi.OutputState }

func (AnalysisSheetControlDateTimePickerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetControlDateTimePickerType)(nil)).Elem()
}

func (o AnalysisSheetControlDateTimePickerTypeOutput) ToAnalysisSheetControlDateTimePickerTypeOutput() AnalysisSheetControlDateTimePickerTypeOutput {
	return o
}

func (o AnalysisSheetControlDateTimePickerTypeOutput) ToAnalysisSheetControlDateTimePickerTypeOutputWithContext(ctx context.Context) AnalysisSheetControlDateTimePickerTypeOutput {
	return o
}

func (o AnalysisSheetControlDateTimePickerTypeOutput) ToAnalysisSheetControlDateTimePickerTypePtrOutput() AnalysisSheetControlDateTimePickerTypePtrOutput {
	return o.ToAnalysisSheetControlDateTimePickerTypePtrOutputWithContext(context.Background())
}

func (o AnalysisSheetControlDateTimePickerTypeOutput) ToAnalysisSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlDateTimePickerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSheetControlDateTimePickerType) *AnalysisSheetControlDateTimePickerType {
		return &v
	}).(AnalysisSheetControlDateTimePickerTypePtrOutput)
}

func (o AnalysisSheetControlDateTimePickerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSheetControlDateTimePickerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSheetControlDateTimePickerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSheetControlDateTimePickerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSheetControlDateTimePickerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSheetControlDateTimePickerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSheetControlDateTimePickerTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisSheetControlDateTimePickerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSheetControlDateTimePickerType)(nil)).Elem()
}

func (o AnalysisSheetControlDateTimePickerTypePtrOutput) ToAnalysisSheetControlDateTimePickerTypePtrOutput() AnalysisSheetControlDateTimePickerTypePtrOutput {
	return o
}

func (o AnalysisSheetControlDateTimePickerTypePtrOutput) ToAnalysisSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlDateTimePickerTypePtrOutput {
	return o
}

func (o AnalysisSheetControlDateTimePickerTypePtrOutput) Elem() AnalysisSheetControlDateTimePickerTypeOutput {
	return o.ApplyT(func(v *AnalysisSheetControlDateTimePickerType) AnalysisSheetControlDateTimePickerType {
		if v != nil {
			return *v
		}
		var ret AnalysisSheetControlDateTimePickerType
		return ret
	}).(AnalysisSheetControlDateTimePickerTypeOutput)
}

func (o AnalysisSheetControlDateTimePickerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSheetControlDateTimePickerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSheetControlDateTimePickerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSheetControlDateTimePickerTypeInput is an input type that accepts values of the AnalysisSheetControlDateTimePickerType enum
// A concrete instance of `AnalysisSheetControlDateTimePickerTypeInput` can be one of the following:
//
//	AnalysisSheetControlDateTimePickerTypeSingleValued
//	AnalysisSheetControlDateTimePickerTypeDateRange
type AnalysisSheetControlDateTimePickerTypeInput interface {
	pulumi.Input

	ToAnalysisSheetControlDateTimePickerTypeOutput() AnalysisSheetControlDateTimePickerTypeOutput
	ToAnalysisSheetControlDateTimePickerTypeOutputWithContext(context.Context) AnalysisSheetControlDateTimePickerTypeOutput
}

var analysisSheetControlDateTimePickerTypePtrType = reflect.TypeOf((**AnalysisSheetControlDateTimePickerType)(nil)).Elem()

type AnalysisSheetControlDateTimePickerTypePtrInput interface {
	pulumi.Input

	ToAnalysisSheetControlDateTimePickerTypePtrOutput() AnalysisSheetControlDateTimePickerTypePtrOutput
	ToAnalysisSheetControlDateTimePickerTypePtrOutputWithContext(context.Context) AnalysisSheetControlDateTimePickerTypePtrOutput
}

type analysisSheetControlDateTimePickerTypePtr string

func AnalysisSheetControlDateTimePickerTypePtr(v string) AnalysisSheetControlDateTimePickerTypePtrInput {
	return (*analysisSheetControlDateTimePickerTypePtr)(&v)
}

func (*analysisSheetControlDateTimePickerTypePtr) ElementType() reflect.Type {
	return analysisSheetControlDateTimePickerTypePtrType
}

func (in *analysisSheetControlDateTimePickerTypePtr) ToAnalysisSheetControlDateTimePickerTypePtrOutput() AnalysisSheetControlDateTimePickerTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisSheetControlDateTimePickerTypePtrOutput)
}

func (in *analysisSheetControlDateTimePickerTypePtr) ToAnalysisSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlDateTimePickerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSheetControlDateTimePickerTypePtrOutput)
}

type AnalysisSheetControlListType string

const (
	AnalysisSheetControlListTypeMultiSelect  = AnalysisSheetControlListType("MULTI_SELECT")
	AnalysisSheetControlListTypeSingleSelect = AnalysisSheetControlListType("SINGLE_SELECT")
)

func (AnalysisSheetControlListType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetControlListType)(nil)).Elem()
}

func (e AnalysisSheetControlListType) ToAnalysisSheetControlListTypeOutput() AnalysisSheetControlListTypeOutput {
	return pulumi.ToOutput(e).(AnalysisSheetControlListTypeOutput)
}

func (e AnalysisSheetControlListType) ToAnalysisSheetControlListTypeOutputWithContext(ctx context.Context) AnalysisSheetControlListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSheetControlListTypeOutput)
}

func (e AnalysisSheetControlListType) ToAnalysisSheetControlListTypePtrOutput() AnalysisSheetControlListTypePtrOutput {
	return e.ToAnalysisSheetControlListTypePtrOutputWithContext(context.Background())
}

func (e AnalysisSheetControlListType) ToAnalysisSheetControlListTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlListTypePtrOutput {
	return AnalysisSheetControlListType(e).ToAnalysisSheetControlListTypeOutputWithContext(ctx).ToAnalysisSheetControlListTypePtrOutputWithContext(ctx)
}

func (e AnalysisSheetControlListType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSheetControlListType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSheetControlListType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSheetControlListType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSheetControlListTypeOutput struct{ *pulumi.OutputState }

func (AnalysisSheetControlListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetControlListType)(nil)).Elem()
}

func (o AnalysisSheetControlListTypeOutput) ToAnalysisSheetControlListTypeOutput() AnalysisSheetControlListTypeOutput {
	return o
}

func (o AnalysisSheetControlListTypeOutput) ToAnalysisSheetControlListTypeOutputWithContext(ctx context.Context) AnalysisSheetControlListTypeOutput {
	return o
}

func (o AnalysisSheetControlListTypeOutput) ToAnalysisSheetControlListTypePtrOutput() AnalysisSheetControlListTypePtrOutput {
	return o.ToAnalysisSheetControlListTypePtrOutputWithContext(context.Background())
}

func (o AnalysisSheetControlListTypeOutput) ToAnalysisSheetControlListTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlListTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSheetControlListType) *AnalysisSheetControlListType {
		return &v
	}).(AnalysisSheetControlListTypePtrOutput)
}

func (o AnalysisSheetControlListTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSheetControlListTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSheetControlListType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSheetControlListTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSheetControlListTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSheetControlListType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSheetControlListTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisSheetControlListTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSheetControlListType)(nil)).Elem()
}

func (o AnalysisSheetControlListTypePtrOutput) ToAnalysisSheetControlListTypePtrOutput() AnalysisSheetControlListTypePtrOutput {
	return o
}

func (o AnalysisSheetControlListTypePtrOutput) ToAnalysisSheetControlListTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlListTypePtrOutput {
	return o
}

func (o AnalysisSheetControlListTypePtrOutput) Elem() AnalysisSheetControlListTypeOutput {
	return o.ApplyT(func(v *AnalysisSheetControlListType) AnalysisSheetControlListType {
		if v != nil {
			return *v
		}
		var ret AnalysisSheetControlListType
		return ret
	}).(AnalysisSheetControlListTypeOutput)
}

func (o AnalysisSheetControlListTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSheetControlListTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSheetControlListType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSheetControlListTypeInput is an input type that accepts values of the AnalysisSheetControlListType enum
// A concrete instance of `AnalysisSheetControlListTypeInput` can be one of the following:
//
//	AnalysisSheetControlListTypeMultiSelect
//	AnalysisSheetControlListTypeSingleSelect
type AnalysisSheetControlListTypeInput interface {
	pulumi.Input

	ToAnalysisSheetControlListTypeOutput() AnalysisSheetControlListTypeOutput
	ToAnalysisSheetControlListTypeOutputWithContext(context.Context) AnalysisSheetControlListTypeOutput
}

var analysisSheetControlListTypePtrType = reflect.TypeOf((**AnalysisSheetControlListType)(nil)).Elem()

type AnalysisSheetControlListTypePtrInput interface {
	pulumi.Input

	ToAnalysisSheetControlListTypePtrOutput() AnalysisSheetControlListTypePtrOutput
	ToAnalysisSheetControlListTypePtrOutputWithContext(context.Context) AnalysisSheetControlListTypePtrOutput
}

type analysisSheetControlListTypePtr string

func AnalysisSheetControlListTypePtr(v string) AnalysisSheetControlListTypePtrInput {
	return (*analysisSheetControlListTypePtr)(&v)
}

func (*analysisSheetControlListTypePtr) ElementType() reflect.Type {
	return analysisSheetControlListTypePtrType
}

func (in *analysisSheetControlListTypePtr) ToAnalysisSheetControlListTypePtrOutput() AnalysisSheetControlListTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisSheetControlListTypePtrOutput)
}

func (in *analysisSheetControlListTypePtr) ToAnalysisSheetControlListTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlListTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSheetControlListTypePtrOutput)
}

type AnalysisSheetControlSliderType string

const (
	AnalysisSheetControlSliderTypeSinglePoint = AnalysisSheetControlSliderType("SINGLE_POINT")
	AnalysisSheetControlSliderTypeRange       = AnalysisSheetControlSliderType("RANGE")
)

func (AnalysisSheetControlSliderType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetControlSliderType)(nil)).Elem()
}

func (e AnalysisSheetControlSliderType) ToAnalysisSheetControlSliderTypeOutput() AnalysisSheetControlSliderTypeOutput {
	return pulumi.ToOutput(e).(AnalysisSheetControlSliderTypeOutput)
}

func (e AnalysisSheetControlSliderType) ToAnalysisSheetControlSliderTypeOutputWithContext(ctx context.Context) AnalysisSheetControlSliderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSheetControlSliderTypeOutput)
}

func (e AnalysisSheetControlSliderType) ToAnalysisSheetControlSliderTypePtrOutput() AnalysisSheetControlSliderTypePtrOutput {
	return e.ToAnalysisSheetControlSliderTypePtrOutputWithContext(context.Background())
}

func (e AnalysisSheetControlSliderType) ToAnalysisSheetControlSliderTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlSliderTypePtrOutput {
	return AnalysisSheetControlSliderType(e).ToAnalysisSheetControlSliderTypeOutputWithContext(ctx).ToAnalysisSheetControlSliderTypePtrOutputWithContext(ctx)
}

func (e AnalysisSheetControlSliderType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSheetControlSliderType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSheetControlSliderType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSheetControlSliderType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSheetControlSliderTypeOutput struct{ *pulumi.OutputState }

func (AnalysisSheetControlSliderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSheetControlSliderType)(nil)).Elem()
}

func (o AnalysisSheetControlSliderTypeOutput) ToAnalysisSheetControlSliderTypeOutput() AnalysisSheetControlSliderTypeOutput {
	return o
}

func (o AnalysisSheetControlSliderTypeOutput) ToAnalysisSheetControlSliderTypeOutputWithContext(ctx context.Context) AnalysisSheetControlSliderTypeOutput {
	return o
}

func (o AnalysisSheetControlSliderTypeOutput) ToAnalysisSheetControlSliderTypePtrOutput() AnalysisSheetControlSliderTypePtrOutput {
	return o.ToAnalysisSheetControlSliderTypePtrOutputWithContext(context.Background())
}

func (o AnalysisSheetControlSliderTypeOutput) ToAnalysisSheetControlSliderTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlSliderTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSheetControlSliderType) *AnalysisSheetControlSliderType {
		return &v
	}).(AnalysisSheetControlSliderTypePtrOutput)
}

func (o AnalysisSheetControlSliderTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSheetControlSliderTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSheetControlSliderType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSheetControlSliderTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSheetControlSliderTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSheetControlSliderType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSheetControlSliderTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisSheetControlSliderTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSheetControlSliderType)(nil)).Elem()
}

func (o AnalysisSheetControlSliderTypePtrOutput) ToAnalysisSheetControlSliderTypePtrOutput() AnalysisSheetControlSliderTypePtrOutput {
	return o
}

func (o AnalysisSheetControlSliderTypePtrOutput) ToAnalysisSheetControlSliderTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlSliderTypePtrOutput {
	return o
}

func (o AnalysisSheetControlSliderTypePtrOutput) Elem() AnalysisSheetControlSliderTypeOutput {
	return o.ApplyT(func(v *AnalysisSheetControlSliderType) AnalysisSheetControlSliderType {
		if v != nil {
			return *v
		}
		var ret AnalysisSheetControlSliderType
		return ret
	}).(AnalysisSheetControlSliderTypeOutput)
}

func (o AnalysisSheetControlSliderTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSheetControlSliderTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSheetControlSliderType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSheetControlSliderTypeInput is an input type that accepts values of the AnalysisSheetControlSliderType enum
// A concrete instance of `AnalysisSheetControlSliderTypeInput` can be one of the following:
//
//	AnalysisSheetControlSliderTypeSinglePoint
//	AnalysisSheetControlSliderTypeRange
type AnalysisSheetControlSliderTypeInput interface {
	pulumi.Input

	ToAnalysisSheetControlSliderTypeOutput() AnalysisSheetControlSliderTypeOutput
	ToAnalysisSheetControlSliderTypeOutputWithContext(context.Context) AnalysisSheetControlSliderTypeOutput
}

var analysisSheetControlSliderTypePtrType = reflect.TypeOf((**AnalysisSheetControlSliderType)(nil)).Elem()

type AnalysisSheetControlSliderTypePtrInput interface {
	pulumi.Input

	ToAnalysisSheetControlSliderTypePtrOutput() AnalysisSheetControlSliderTypePtrOutput
	ToAnalysisSheetControlSliderTypePtrOutputWithContext(context.Context) AnalysisSheetControlSliderTypePtrOutput
}

type analysisSheetControlSliderTypePtr string

func AnalysisSheetControlSliderTypePtr(v string) AnalysisSheetControlSliderTypePtrInput {
	return (*analysisSheetControlSliderTypePtr)(&v)
}

func (*analysisSheetControlSliderTypePtr) ElementType() reflect.Type {
	return analysisSheetControlSliderTypePtrType
}

func (in *analysisSheetControlSliderTypePtr) ToAnalysisSheetControlSliderTypePtrOutput() AnalysisSheetControlSliderTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisSheetControlSliderTypePtrOutput)
}

func (in *analysisSheetControlSliderTypePtr) ToAnalysisSheetControlSliderTypePtrOutputWithContext(ctx context.Context) AnalysisSheetControlSliderTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSheetControlSliderTypePtrOutput)
}

type AnalysisSimpleAttributeAggregationFunction string

const (
	AnalysisSimpleAttributeAggregationFunctionUniqueValue = AnalysisSimpleAttributeAggregationFunction("UNIQUE_VALUE")
)

func (AnalysisSimpleAttributeAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSimpleAttributeAggregationFunction)(nil)).Elem()
}

func (e AnalysisSimpleAttributeAggregationFunction) ToAnalysisSimpleAttributeAggregationFunctionOutput() AnalysisSimpleAttributeAggregationFunctionOutput {
	return pulumi.ToOutput(e).(AnalysisSimpleAttributeAggregationFunctionOutput)
}

func (e AnalysisSimpleAttributeAggregationFunction) ToAnalysisSimpleAttributeAggregationFunctionOutputWithContext(ctx context.Context) AnalysisSimpleAttributeAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSimpleAttributeAggregationFunctionOutput)
}

func (e AnalysisSimpleAttributeAggregationFunction) ToAnalysisSimpleAttributeAggregationFunctionPtrOutput() AnalysisSimpleAttributeAggregationFunctionPtrOutput {
	return e.ToAnalysisSimpleAttributeAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e AnalysisSimpleAttributeAggregationFunction) ToAnalysisSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleAttributeAggregationFunctionPtrOutput {
	return AnalysisSimpleAttributeAggregationFunction(e).ToAnalysisSimpleAttributeAggregationFunctionOutputWithContext(ctx).ToAnalysisSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx)
}

func (e AnalysisSimpleAttributeAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSimpleAttributeAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSimpleAttributeAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSimpleAttributeAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSimpleAttributeAggregationFunctionOutput struct{ *pulumi.OutputState }

func (AnalysisSimpleAttributeAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSimpleAttributeAggregationFunction)(nil)).Elem()
}

func (o AnalysisSimpleAttributeAggregationFunctionOutput) ToAnalysisSimpleAttributeAggregationFunctionOutput() AnalysisSimpleAttributeAggregationFunctionOutput {
	return o
}

func (o AnalysisSimpleAttributeAggregationFunctionOutput) ToAnalysisSimpleAttributeAggregationFunctionOutputWithContext(ctx context.Context) AnalysisSimpleAttributeAggregationFunctionOutput {
	return o
}

func (o AnalysisSimpleAttributeAggregationFunctionOutput) ToAnalysisSimpleAttributeAggregationFunctionPtrOutput() AnalysisSimpleAttributeAggregationFunctionPtrOutput {
	return o.ToAnalysisSimpleAttributeAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o AnalysisSimpleAttributeAggregationFunctionOutput) ToAnalysisSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleAttributeAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSimpleAttributeAggregationFunction) *AnalysisSimpleAttributeAggregationFunction {
		return &v
	}).(AnalysisSimpleAttributeAggregationFunctionPtrOutput)
}

func (o AnalysisSimpleAttributeAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSimpleAttributeAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSimpleAttributeAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSimpleAttributeAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSimpleAttributeAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSimpleAttributeAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSimpleAttributeAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSimpleAttributeAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSimpleAttributeAggregationFunction)(nil)).Elem()
}

func (o AnalysisSimpleAttributeAggregationFunctionPtrOutput) ToAnalysisSimpleAttributeAggregationFunctionPtrOutput() AnalysisSimpleAttributeAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisSimpleAttributeAggregationFunctionPtrOutput) ToAnalysisSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleAttributeAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisSimpleAttributeAggregationFunctionPtrOutput) Elem() AnalysisSimpleAttributeAggregationFunctionOutput {
	return o.ApplyT(func(v *AnalysisSimpleAttributeAggregationFunction) AnalysisSimpleAttributeAggregationFunction {
		if v != nil {
			return *v
		}
		var ret AnalysisSimpleAttributeAggregationFunction
		return ret
	}).(AnalysisSimpleAttributeAggregationFunctionOutput)
}

func (o AnalysisSimpleAttributeAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSimpleAttributeAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSimpleAttributeAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSimpleAttributeAggregationFunctionInput is an input type that accepts values of the AnalysisSimpleAttributeAggregationFunction enum
// A concrete instance of `AnalysisSimpleAttributeAggregationFunctionInput` can be one of the following:
//
//	AnalysisSimpleAttributeAggregationFunctionUniqueValue
type AnalysisSimpleAttributeAggregationFunctionInput interface {
	pulumi.Input

	ToAnalysisSimpleAttributeAggregationFunctionOutput() AnalysisSimpleAttributeAggregationFunctionOutput
	ToAnalysisSimpleAttributeAggregationFunctionOutputWithContext(context.Context) AnalysisSimpleAttributeAggregationFunctionOutput
}

var analysisSimpleAttributeAggregationFunctionPtrType = reflect.TypeOf((**AnalysisSimpleAttributeAggregationFunction)(nil)).Elem()

type AnalysisSimpleAttributeAggregationFunctionPtrInput interface {
	pulumi.Input

	ToAnalysisSimpleAttributeAggregationFunctionPtrOutput() AnalysisSimpleAttributeAggregationFunctionPtrOutput
	ToAnalysisSimpleAttributeAggregationFunctionPtrOutputWithContext(context.Context) AnalysisSimpleAttributeAggregationFunctionPtrOutput
}

type analysisSimpleAttributeAggregationFunctionPtr string

func AnalysisSimpleAttributeAggregationFunctionPtr(v string) AnalysisSimpleAttributeAggregationFunctionPtrInput {
	return (*analysisSimpleAttributeAggregationFunctionPtr)(&v)
}

func (*analysisSimpleAttributeAggregationFunctionPtr) ElementType() reflect.Type {
	return analysisSimpleAttributeAggregationFunctionPtrType
}

func (in *analysisSimpleAttributeAggregationFunctionPtr) ToAnalysisSimpleAttributeAggregationFunctionPtrOutput() AnalysisSimpleAttributeAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisSimpleAttributeAggregationFunctionPtrOutput)
}

func (in *analysisSimpleAttributeAggregationFunctionPtr) ToAnalysisSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleAttributeAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSimpleAttributeAggregationFunctionPtrOutput)
}

type AnalysisSimpleNumericalAggregationFunction string

const (
	AnalysisSimpleNumericalAggregationFunctionSum           = AnalysisSimpleNumericalAggregationFunction("SUM")
	AnalysisSimpleNumericalAggregationFunctionAverage       = AnalysisSimpleNumericalAggregationFunction("AVERAGE")
	AnalysisSimpleNumericalAggregationFunctionMin           = AnalysisSimpleNumericalAggregationFunction("MIN")
	AnalysisSimpleNumericalAggregationFunctionMax           = AnalysisSimpleNumericalAggregationFunction("MAX")
	AnalysisSimpleNumericalAggregationFunctionCount         = AnalysisSimpleNumericalAggregationFunction("COUNT")
	AnalysisSimpleNumericalAggregationFunctionDistinctCount = AnalysisSimpleNumericalAggregationFunction("DISTINCT_COUNT")
	AnalysisSimpleNumericalAggregationFunctionVar           = AnalysisSimpleNumericalAggregationFunction("VAR")
	AnalysisSimpleNumericalAggregationFunctionVarp          = AnalysisSimpleNumericalAggregationFunction("VARP")
	AnalysisSimpleNumericalAggregationFunctionStdev         = AnalysisSimpleNumericalAggregationFunction("STDEV")
	AnalysisSimpleNumericalAggregationFunctionStdevp        = AnalysisSimpleNumericalAggregationFunction("STDEVP")
	AnalysisSimpleNumericalAggregationFunctionMedian        = AnalysisSimpleNumericalAggregationFunction("MEDIAN")
)

func (AnalysisSimpleNumericalAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSimpleNumericalAggregationFunction)(nil)).Elem()
}

func (e AnalysisSimpleNumericalAggregationFunction) ToAnalysisSimpleNumericalAggregationFunctionOutput() AnalysisSimpleNumericalAggregationFunctionOutput {
	return pulumi.ToOutput(e).(AnalysisSimpleNumericalAggregationFunctionOutput)
}

func (e AnalysisSimpleNumericalAggregationFunction) ToAnalysisSimpleNumericalAggregationFunctionOutputWithContext(ctx context.Context) AnalysisSimpleNumericalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSimpleNumericalAggregationFunctionOutput)
}

func (e AnalysisSimpleNumericalAggregationFunction) ToAnalysisSimpleNumericalAggregationFunctionPtrOutput() AnalysisSimpleNumericalAggregationFunctionPtrOutput {
	return e.ToAnalysisSimpleNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e AnalysisSimpleNumericalAggregationFunction) ToAnalysisSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleNumericalAggregationFunctionPtrOutput {
	return AnalysisSimpleNumericalAggregationFunction(e).ToAnalysisSimpleNumericalAggregationFunctionOutputWithContext(ctx).ToAnalysisSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx)
}

func (e AnalysisSimpleNumericalAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSimpleNumericalAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSimpleNumericalAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSimpleNumericalAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSimpleNumericalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (AnalysisSimpleNumericalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSimpleNumericalAggregationFunction)(nil)).Elem()
}

func (o AnalysisSimpleNumericalAggregationFunctionOutput) ToAnalysisSimpleNumericalAggregationFunctionOutput() AnalysisSimpleNumericalAggregationFunctionOutput {
	return o
}

func (o AnalysisSimpleNumericalAggregationFunctionOutput) ToAnalysisSimpleNumericalAggregationFunctionOutputWithContext(ctx context.Context) AnalysisSimpleNumericalAggregationFunctionOutput {
	return o
}

func (o AnalysisSimpleNumericalAggregationFunctionOutput) ToAnalysisSimpleNumericalAggregationFunctionPtrOutput() AnalysisSimpleNumericalAggregationFunctionPtrOutput {
	return o.ToAnalysisSimpleNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o AnalysisSimpleNumericalAggregationFunctionOutput) ToAnalysisSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleNumericalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSimpleNumericalAggregationFunction) *AnalysisSimpleNumericalAggregationFunction {
		return &v
	}).(AnalysisSimpleNumericalAggregationFunctionPtrOutput)
}

func (o AnalysisSimpleNumericalAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSimpleNumericalAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSimpleNumericalAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSimpleNumericalAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSimpleNumericalAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSimpleNumericalAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSimpleNumericalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSimpleNumericalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSimpleNumericalAggregationFunction)(nil)).Elem()
}

func (o AnalysisSimpleNumericalAggregationFunctionPtrOutput) ToAnalysisSimpleNumericalAggregationFunctionPtrOutput() AnalysisSimpleNumericalAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisSimpleNumericalAggregationFunctionPtrOutput) ToAnalysisSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleNumericalAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisSimpleNumericalAggregationFunctionPtrOutput) Elem() AnalysisSimpleNumericalAggregationFunctionOutput {
	return o.ApplyT(func(v *AnalysisSimpleNumericalAggregationFunction) AnalysisSimpleNumericalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret AnalysisSimpleNumericalAggregationFunction
		return ret
	}).(AnalysisSimpleNumericalAggregationFunctionOutput)
}

func (o AnalysisSimpleNumericalAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSimpleNumericalAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSimpleNumericalAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSimpleNumericalAggregationFunctionInput is an input type that accepts values of the AnalysisSimpleNumericalAggregationFunction enum
// A concrete instance of `AnalysisSimpleNumericalAggregationFunctionInput` can be one of the following:
//
//	AnalysisSimpleNumericalAggregationFunctionSum
//	AnalysisSimpleNumericalAggregationFunctionAverage
//	AnalysisSimpleNumericalAggregationFunctionMin
//	AnalysisSimpleNumericalAggregationFunctionMax
//	AnalysisSimpleNumericalAggregationFunctionCount
//	AnalysisSimpleNumericalAggregationFunctionDistinctCount
//	AnalysisSimpleNumericalAggregationFunctionVar
//	AnalysisSimpleNumericalAggregationFunctionVarp
//	AnalysisSimpleNumericalAggregationFunctionStdev
//	AnalysisSimpleNumericalAggregationFunctionStdevp
//	AnalysisSimpleNumericalAggregationFunctionMedian
type AnalysisSimpleNumericalAggregationFunctionInput interface {
	pulumi.Input

	ToAnalysisSimpleNumericalAggregationFunctionOutput() AnalysisSimpleNumericalAggregationFunctionOutput
	ToAnalysisSimpleNumericalAggregationFunctionOutputWithContext(context.Context) AnalysisSimpleNumericalAggregationFunctionOutput
}

var analysisSimpleNumericalAggregationFunctionPtrType = reflect.TypeOf((**AnalysisSimpleNumericalAggregationFunction)(nil)).Elem()

type AnalysisSimpleNumericalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToAnalysisSimpleNumericalAggregationFunctionPtrOutput() AnalysisSimpleNumericalAggregationFunctionPtrOutput
	ToAnalysisSimpleNumericalAggregationFunctionPtrOutputWithContext(context.Context) AnalysisSimpleNumericalAggregationFunctionPtrOutput
}

type analysisSimpleNumericalAggregationFunctionPtr string

func AnalysisSimpleNumericalAggregationFunctionPtr(v string) AnalysisSimpleNumericalAggregationFunctionPtrInput {
	return (*analysisSimpleNumericalAggregationFunctionPtr)(&v)
}

func (*analysisSimpleNumericalAggregationFunctionPtr) ElementType() reflect.Type {
	return analysisSimpleNumericalAggregationFunctionPtrType
}

func (in *analysisSimpleNumericalAggregationFunctionPtr) ToAnalysisSimpleNumericalAggregationFunctionPtrOutput() AnalysisSimpleNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisSimpleNumericalAggregationFunctionPtrOutput)
}

func (in *analysisSimpleNumericalAggregationFunctionPtr) ToAnalysisSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSimpleNumericalAggregationFunctionPtrOutput)
}

type AnalysisSimpleTotalAggregationFunction string

const (
	AnalysisSimpleTotalAggregationFunctionDefault = AnalysisSimpleTotalAggregationFunction("DEFAULT")
	AnalysisSimpleTotalAggregationFunctionSum     = AnalysisSimpleTotalAggregationFunction("SUM")
	AnalysisSimpleTotalAggregationFunctionAverage = AnalysisSimpleTotalAggregationFunction("AVERAGE")
	AnalysisSimpleTotalAggregationFunctionMin     = AnalysisSimpleTotalAggregationFunction("MIN")
	AnalysisSimpleTotalAggregationFunctionMax     = AnalysisSimpleTotalAggregationFunction("MAX")
	AnalysisSimpleTotalAggregationFunctionNone    = AnalysisSimpleTotalAggregationFunction("NONE")
)

func (AnalysisSimpleTotalAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSimpleTotalAggregationFunction)(nil)).Elem()
}

func (e AnalysisSimpleTotalAggregationFunction) ToAnalysisSimpleTotalAggregationFunctionOutput() AnalysisSimpleTotalAggregationFunctionOutput {
	return pulumi.ToOutput(e).(AnalysisSimpleTotalAggregationFunctionOutput)
}

func (e AnalysisSimpleTotalAggregationFunction) ToAnalysisSimpleTotalAggregationFunctionOutputWithContext(ctx context.Context) AnalysisSimpleTotalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSimpleTotalAggregationFunctionOutput)
}

func (e AnalysisSimpleTotalAggregationFunction) ToAnalysisSimpleTotalAggregationFunctionPtrOutput() AnalysisSimpleTotalAggregationFunctionPtrOutput {
	return e.ToAnalysisSimpleTotalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e AnalysisSimpleTotalAggregationFunction) ToAnalysisSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleTotalAggregationFunctionPtrOutput {
	return AnalysisSimpleTotalAggregationFunction(e).ToAnalysisSimpleTotalAggregationFunctionOutputWithContext(ctx).ToAnalysisSimpleTotalAggregationFunctionPtrOutputWithContext(ctx)
}

func (e AnalysisSimpleTotalAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSimpleTotalAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSimpleTotalAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSimpleTotalAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSimpleTotalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (AnalysisSimpleTotalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSimpleTotalAggregationFunction)(nil)).Elem()
}

func (o AnalysisSimpleTotalAggregationFunctionOutput) ToAnalysisSimpleTotalAggregationFunctionOutput() AnalysisSimpleTotalAggregationFunctionOutput {
	return o
}

func (o AnalysisSimpleTotalAggregationFunctionOutput) ToAnalysisSimpleTotalAggregationFunctionOutputWithContext(ctx context.Context) AnalysisSimpleTotalAggregationFunctionOutput {
	return o
}

func (o AnalysisSimpleTotalAggregationFunctionOutput) ToAnalysisSimpleTotalAggregationFunctionPtrOutput() AnalysisSimpleTotalAggregationFunctionPtrOutput {
	return o.ToAnalysisSimpleTotalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o AnalysisSimpleTotalAggregationFunctionOutput) ToAnalysisSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleTotalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSimpleTotalAggregationFunction) *AnalysisSimpleTotalAggregationFunction {
		return &v
	}).(AnalysisSimpleTotalAggregationFunctionPtrOutput)
}

func (o AnalysisSimpleTotalAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSimpleTotalAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSimpleTotalAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSimpleTotalAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSimpleTotalAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSimpleTotalAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSimpleTotalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSimpleTotalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSimpleTotalAggregationFunction)(nil)).Elem()
}

func (o AnalysisSimpleTotalAggregationFunctionPtrOutput) ToAnalysisSimpleTotalAggregationFunctionPtrOutput() AnalysisSimpleTotalAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisSimpleTotalAggregationFunctionPtrOutput) ToAnalysisSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleTotalAggregationFunctionPtrOutput {
	return o
}

func (o AnalysisSimpleTotalAggregationFunctionPtrOutput) Elem() AnalysisSimpleTotalAggregationFunctionOutput {
	return o.ApplyT(func(v *AnalysisSimpleTotalAggregationFunction) AnalysisSimpleTotalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret AnalysisSimpleTotalAggregationFunction
		return ret
	}).(AnalysisSimpleTotalAggregationFunctionOutput)
}

func (o AnalysisSimpleTotalAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSimpleTotalAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSimpleTotalAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSimpleTotalAggregationFunctionInput is an input type that accepts values of the AnalysisSimpleTotalAggregationFunction enum
// A concrete instance of `AnalysisSimpleTotalAggregationFunctionInput` can be one of the following:
//
//	AnalysisSimpleTotalAggregationFunctionDefault
//	AnalysisSimpleTotalAggregationFunctionSum
//	AnalysisSimpleTotalAggregationFunctionAverage
//	AnalysisSimpleTotalAggregationFunctionMin
//	AnalysisSimpleTotalAggregationFunctionMax
//	AnalysisSimpleTotalAggregationFunctionNone
type AnalysisSimpleTotalAggregationFunctionInput interface {
	pulumi.Input

	ToAnalysisSimpleTotalAggregationFunctionOutput() AnalysisSimpleTotalAggregationFunctionOutput
	ToAnalysisSimpleTotalAggregationFunctionOutputWithContext(context.Context) AnalysisSimpleTotalAggregationFunctionOutput
}

var analysisSimpleTotalAggregationFunctionPtrType = reflect.TypeOf((**AnalysisSimpleTotalAggregationFunction)(nil)).Elem()

type AnalysisSimpleTotalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToAnalysisSimpleTotalAggregationFunctionPtrOutput() AnalysisSimpleTotalAggregationFunctionPtrOutput
	ToAnalysisSimpleTotalAggregationFunctionPtrOutputWithContext(context.Context) AnalysisSimpleTotalAggregationFunctionPtrOutput
}

type analysisSimpleTotalAggregationFunctionPtr string

func AnalysisSimpleTotalAggregationFunctionPtr(v string) AnalysisSimpleTotalAggregationFunctionPtrInput {
	return (*analysisSimpleTotalAggregationFunctionPtr)(&v)
}

func (*analysisSimpleTotalAggregationFunctionPtr) ElementType() reflect.Type {
	return analysisSimpleTotalAggregationFunctionPtrType
}

func (in *analysisSimpleTotalAggregationFunctionPtr) ToAnalysisSimpleTotalAggregationFunctionPtrOutput() AnalysisSimpleTotalAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisSimpleTotalAggregationFunctionPtrOutput)
}

func (in *analysisSimpleTotalAggregationFunctionPtr) ToAnalysisSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) AnalysisSimpleTotalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSimpleTotalAggregationFunctionPtrOutput)
}

type AnalysisSmallMultiplesAxisPlacement string

const (
	AnalysisSmallMultiplesAxisPlacementOutside = AnalysisSmallMultiplesAxisPlacement("OUTSIDE")
	AnalysisSmallMultiplesAxisPlacementInside  = AnalysisSmallMultiplesAxisPlacement("INSIDE")
)

func (AnalysisSmallMultiplesAxisPlacement) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSmallMultiplesAxisPlacement)(nil)).Elem()
}

func (e AnalysisSmallMultiplesAxisPlacement) ToAnalysisSmallMultiplesAxisPlacementOutput() AnalysisSmallMultiplesAxisPlacementOutput {
	return pulumi.ToOutput(e).(AnalysisSmallMultiplesAxisPlacementOutput)
}

func (e AnalysisSmallMultiplesAxisPlacement) ToAnalysisSmallMultiplesAxisPlacementOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSmallMultiplesAxisPlacementOutput)
}

func (e AnalysisSmallMultiplesAxisPlacement) ToAnalysisSmallMultiplesAxisPlacementPtrOutput() AnalysisSmallMultiplesAxisPlacementPtrOutput {
	return e.ToAnalysisSmallMultiplesAxisPlacementPtrOutputWithContext(context.Background())
}

func (e AnalysisSmallMultiplesAxisPlacement) ToAnalysisSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisPlacementPtrOutput {
	return AnalysisSmallMultiplesAxisPlacement(e).ToAnalysisSmallMultiplesAxisPlacementOutputWithContext(ctx).ToAnalysisSmallMultiplesAxisPlacementPtrOutputWithContext(ctx)
}

func (e AnalysisSmallMultiplesAxisPlacement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSmallMultiplesAxisPlacement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSmallMultiplesAxisPlacement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSmallMultiplesAxisPlacement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSmallMultiplesAxisPlacementOutput struct{ *pulumi.OutputState }

func (AnalysisSmallMultiplesAxisPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSmallMultiplesAxisPlacement)(nil)).Elem()
}

func (o AnalysisSmallMultiplesAxisPlacementOutput) ToAnalysisSmallMultiplesAxisPlacementOutput() AnalysisSmallMultiplesAxisPlacementOutput {
	return o
}

func (o AnalysisSmallMultiplesAxisPlacementOutput) ToAnalysisSmallMultiplesAxisPlacementOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisPlacementOutput {
	return o
}

func (o AnalysisSmallMultiplesAxisPlacementOutput) ToAnalysisSmallMultiplesAxisPlacementPtrOutput() AnalysisSmallMultiplesAxisPlacementPtrOutput {
	return o.ToAnalysisSmallMultiplesAxisPlacementPtrOutputWithContext(context.Background())
}

func (o AnalysisSmallMultiplesAxisPlacementOutput) ToAnalysisSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisPlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSmallMultiplesAxisPlacement) *AnalysisSmallMultiplesAxisPlacement {
		return &v
	}).(AnalysisSmallMultiplesAxisPlacementPtrOutput)
}

func (o AnalysisSmallMultiplesAxisPlacementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSmallMultiplesAxisPlacementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSmallMultiplesAxisPlacement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSmallMultiplesAxisPlacementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSmallMultiplesAxisPlacementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSmallMultiplesAxisPlacement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSmallMultiplesAxisPlacementPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSmallMultiplesAxisPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSmallMultiplesAxisPlacement)(nil)).Elem()
}

func (o AnalysisSmallMultiplesAxisPlacementPtrOutput) ToAnalysisSmallMultiplesAxisPlacementPtrOutput() AnalysisSmallMultiplesAxisPlacementPtrOutput {
	return o
}

func (o AnalysisSmallMultiplesAxisPlacementPtrOutput) ToAnalysisSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisPlacementPtrOutput {
	return o
}

func (o AnalysisSmallMultiplesAxisPlacementPtrOutput) Elem() AnalysisSmallMultiplesAxisPlacementOutput {
	return o.ApplyT(func(v *AnalysisSmallMultiplesAxisPlacement) AnalysisSmallMultiplesAxisPlacement {
		if v != nil {
			return *v
		}
		var ret AnalysisSmallMultiplesAxisPlacement
		return ret
	}).(AnalysisSmallMultiplesAxisPlacementOutput)
}

func (o AnalysisSmallMultiplesAxisPlacementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSmallMultiplesAxisPlacementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSmallMultiplesAxisPlacement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSmallMultiplesAxisPlacementInput is an input type that accepts values of the AnalysisSmallMultiplesAxisPlacement enum
// A concrete instance of `AnalysisSmallMultiplesAxisPlacementInput` can be one of the following:
//
//	AnalysisSmallMultiplesAxisPlacementOutside
//	AnalysisSmallMultiplesAxisPlacementInside
type AnalysisSmallMultiplesAxisPlacementInput interface {
	pulumi.Input

	ToAnalysisSmallMultiplesAxisPlacementOutput() AnalysisSmallMultiplesAxisPlacementOutput
	ToAnalysisSmallMultiplesAxisPlacementOutputWithContext(context.Context) AnalysisSmallMultiplesAxisPlacementOutput
}

var analysisSmallMultiplesAxisPlacementPtrType = reflect.TypeOf((**AnalysisSmallMultiplesAxisPlacement)(nil)).Elem()

type AnalysisSmallMultiplesAxisPlacementPtrInput interface {
	pulumi.Input

	ToAnalysisSmallMultiplesAxisPlacementPtrOutput() AnalysisSmallMultiplesAxisPlacementPtrOutput
	ToAnalysisSmallMultiplesAxisPlacementPtrOutputWithContext(context.Context) AnalysisSmallMultiplesAxisPlacementPtrOutput
}

type analysisSmallMultiplesAxisPlacementPtr string

func AnalysisSmallMultiplesAxisPlacementPtr(v string) AnalysisSmallMultiplesAxisPlacementPtrInput {
	return (*analysisSmallMultiplesAxisPlacementPtr)(&v)
}

func (*analysisSmallMultiplesAxisPlacementPtr) ElementType() reflect.Type {
	return analysisSmallMultiplesAxisPlacementPtrType
}

func (in *analysisSmallMultiplesAxisPlacementPtr) ToAnalysisSmallMultiplesAxisPlacementPtrOutput() AnalysisSmallMultiplesAxisPlacementPtrOutput {
	return pulumi.ToOutput(in).(AnalysisSmallMultiplesAxisPlacementPtrOutput)
}

func (in *analysisSmallMultiplesAxisPlacementPtr) ToAnalysisSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSmallMultiplesAxisPlacementPtrOutput)
}

type AnalysisSmallMultiplesAxisScale string

const (
	AnalysisSmallMultiplesAxisScaleShared      = AnalysisSmallMultiplesAxisScale("SHARED")
	AnalysisSmallMultiplesAxisScaleIndependent = AnalysisSmallMultiplesAxisScale("INDEPENDENT")
)

func (AnalysisSmallMultiplesAxisScale) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSmallMultiplesAxisScale)(nil)).Elem()
}

func (e AnalysisSmallMultiplesAxisScale) ToAnalysisSmallMultiplesAxisScaleOutput() AnalysisSmallMultiplesAxisScaleOutput {
	return pulumi.ToOutput(e).(AnalysisSmallMultiplesAxisScaleOutput)
}

func (e AnalysisSmallMultiplesAxisScale) ToAnalysisSmallMultiplesAxisScaleOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisScaleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSmallMultiplesAxisScaleOutput)
}

func (e AnalysisSmallMultiplesAxisScale) ToAnalysisSmallMultiplesAxisScalePtrOutput() AnalysisSmallMultiplesAxisScalePtrOutput {
	return e.ToAnalysisSmallMultiplesAxisScalePtrOutputWithContext(context.Background())
}

func (e AnalysisSmallMultiplesAxisScale) ToAnalysisSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisScalePtrOutput {
	return AnalysisSmallMultiplesAxisScale(e).ToAnalysisSmallMultiplesAxisScaleOutputWithContext(ctx).ToAnalysisSmallMultiplesAxisScalePtrOutputWithContext(ctx)
}

func (e AnalysisSmallMultiplesAxisScale) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSmallMultiplesAxisScale) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSmallMultiplesAxisScale) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSmallMultiplesAxisScale) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSmallMultiplesAxisScaleOutput struct{ *pulumi.OutputState }

func (AnalysisSmallMultiplesAxisScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSmallMultiplesAxisScale)(nil)).Elem()
}

func (o AnalysisSmallMultiplesAxisScaleOutput) ToAnalysisSmallMultiplesAxisScaleOutput() AnalysisSmallMultiplesAxisScaleOutput {
	return o
}

func (o AnalysisSmallMultiplesAxisScaleOutput) ToAnalysisSmallMultiplesAxisScaleOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisScaleOutput {
	return o
}

func (o AnalysisSmallMultiplesAxisScaleOutput) ToAnalysisSmallMultiplesAxisScalePtrOutput() AnalysisSmallMultiplesAxisScalePtrOutput {
	return o.ToAnalysisSmallMultiplesAxisScalePtrOutputWithContext(context.Background())
}

func (o AnalysisSmallMultiplesAxisScaleOutput) ToAnalysisSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSmallMultiplesAxisScale) *AnalysisSmallMultiplesAxisScale {
		return &v
	}).(AnalysisSmallMultiplesAxisScalePtrOutput)
}

func (o AnalysisSmallMultiplesAxisScaleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSmallMultiplesAxisScaleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSmallMultiplesAxisScale) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSmallMultiplesAxisScaleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSmallMultiplesAxisScaleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSmallMultiplesAxisScale) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSmallMultiplesAxisScalePtrOutput struct{ *pulumi.OutputState }

func (AnalysisSmallMultiplesAxisScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSmallMultiplesAxisScale)(nil)).Elem()
}

func (o AnalysisSmallMultiplesAxisScalePtrOutput) ToAnalysisSmallMultiplesAxisScalePtrOutput() AnalysisSmallMultiplesAxisScalePtrOutput {
	return o
}

func (o AnalysisSmallMultiplesAxisScalePtrOutput) ToAnalysisSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisScalePtrOutput {
	return o
}

func (o AnalysisSmallMultiplesAxisScalePtrOutput) Elem() AnalysisSmallMultiplesAxisScaleOutput {
	return o.ApplyT(func(v *AnalysisSmallMultiplesAxisScale) AnalysisSmallMultiplesAxisScale {
		if v != nil {
			return *v
		}
		var ret AnalysisSmallMultiplesAxisScale
		return ret
	}).(AnalysisSmallMultiplesAxisScaleOutput)
}

func (o AnalysisSmallMultiplesAxisScalePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSmallMultiplesAxisScalePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSmallMultiplesAxisScale) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSmallMultiplesAxisScaleInput is an input type that accepts values of the AnalysisSmallMultiplesAxisScale enum
// A concrete instance of `AnalysisSmallMultiplesAxisScaleInput` can be one of the following:
//
//	AnalysisSmallMultiplesAxisScaleShared
//	AnalysisSmallMultiplesAxisScaleIndependent
type AnalysisSmallMultiplesAxisScaleInput interface {
	pulumi.Input

	ToAnalysisSmallMultiplesAxisScaleOutput() AnalysisSmallMultiplesAxisScaleOutput
	ToAnalysisSmallMultiplesAxisScaleOutputWithContext(context.Context) AnalysisSmallMultiplesAxisScaleOutput
}

var analysisSmallMultiplesAxisScalePtrType = reflect.TypeOf((**AnalysisSmallMultiplesAxisScale)(nil)).Elem()

type AnalysisSmallMultiplesAxisScalePtrInput interface {
	pulumi.Input

	ToAnalysisSmallMultiplesAxisScalePtrOutput() AnalysisSmallMultiplesAxisScalePtrOutput
	ToAnalysisSmallMultiplesAxisScalePtrOutputWithContext(context.Context) AnalysisSmallMultiplesAxisScalePtrOutput
}

type analysisSmallMultiplesAxisScalePtr string

func AnalysisSmallMultiplesAxisScalePtr(v string) AnalysisSmallMultiplesAxisScalePtrInput {
	return (*analysisSmallMultiplesAxisScalePtr)(&v)
}

func (*analysisSmallMultiplesAxisScalePtr) ElementType() reflect.Type {
	return analysisSmallMultiplesAxisScalePtrType
}

func (in *analysisSmallMultiplesAxisScalePtr) ToAnalysisSmallMultiplesAxisScalePtrOutput() AnalysisSmallMultiplesAxisScalePtrOutput {
	return pulumi.ToOutput(in).(AnalysisSmallMultiplesAxisScalePtrOutput)
}

func (in *analysisSmallMultiplesAxisScalePtr) ToAnalysisSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) AnalysisSmallMultiplesAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSmallMultiplesAxisScalePtrOutput)
}

type AnalysisSortDirection string

const (
	AnalysisSortDirectionAsc  = AnalysisSortDirection("ASC")
	AnalysisSortDirectionDesc = AnalysisSortDirection("DESC")
)

func (AnalysisSortDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSortDirection)(nil)).Elem()
}

func (e AnalysisSortDirection) ToAnalysisSortDirectionOutput() AnalysisSortDirectionOutput {
	return pulumi.ToOutput(e).(AnalysisSortDirectionOutput)
}

func (e AnalysisSortDirection) ToAnalysisSortDirectionOutputWithContext(ctx context.Context) AnalysisSortDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSortDirectionOutput)
}

func (e AnalysisSortDirection) ToAnalysisSortDirectionPtrOutput() AnalysisSortDirectionPtrOutput {
	return e.ToAnalysisSortDirectionPtrOutputWithContext(context.Background())
}

func (e AnalysisSortDirection) ToAnalysisSortDirectionPtrOutputWithContext(ctx context.Context) AnalysisSortDirectionPtrOutput {
	return AnalysisSortDirection(e).ToAnalysisSortDirectionOutputWithContext(ctx).ToAnalysisSortDirectionPtrOutputWithContext(ctx)
}

func (e AnalysisSortDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSortDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSortDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSortDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSortDirectionOutput struct{ *pulumi.OutputState }

func (AnalysisSortDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSortDirection)(nil)).Elem()
}

func (o AnalysisSortDirectionOutput) ToAnalysisSortDirectionOutput() AnalysisSortDirectionOutput {
	return o
}

func (o AnalysisSortDirectionOutput) ToAnalysisSortDirectionOutputWithContext(ctx context.Context) AnalysisSortDirectionOutput {
	return o
}

func (o AnalysisSortDirectionOutput) ToAnalysisSortDirectionPtrOutput() AnalysisSortDirectionPtrOutput {
	return o.ToAnalysisSortDirectionPtrOutputWithContext(context.Background())
}

func (o AnalysisSortDirectionOutput) ToAnalysisSortDirectionPtrOutputWithContext(ctx context.Context) AnalysisSortDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSortDirection) *AnalysisSortDirection {
		return &v
	}).(AnalysisSortDirectionPtrOutput)
}

func (o AnalysisSortDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSortDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSortDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSortDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSortDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSortDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSortDirectionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisSortDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSortDirection)(nil)).Elem()
}

func (o AnalysisSortDirectionPtrOutput) ToAnalysisSortDirectionPtrOutput() AnalysisSortDirectionPtrOutput {
	return o
}

func (o AnalysisSortDirectionPtrOutput) ToAnalysisSortDirectionPtrOutputWithContext(ctx context.Context) AnalysisSortDirectionPtrOutput {
	return o
}

func (o AnalysisSortDirectionPtrOutput) Elem() AnalysisSortDirectionOutput {
	return o.ApplyT(func(v *AnalysisSortDirection) AnalysisSortDirection {
		if v != nil {
			return *v
		}
		var ret AnalysisSortDirection
		return ret
	}).(AnalysisSortDirectionOutput)
}

func (o AnalysisSortDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSortDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSortDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSortDirectionInput is an input type that accepts values of the AnalysisSortDirection enum
// A concrete instance of `AnalysisSortDirectionInput` can be one of the following:
//
//	AnalysisSortDirectionAsc
//	AnalysisSortDirectionDesc
type AnalysisSortDirectionInput interface {
	pulumi.Input

	ToAnalysisSortDirectionOutput() AnalysisSortDirectionOutput
	ToAnalysisSortDirectionOutputWithContext(context.Context) AnalysisSortDirectionOutput
}

var analysisSortDirectionPtrType = reflect.TypeOf((**AnalysisSortDirection)(nil)).Elem()

type AnalysisSortDirectionPtrInput interface {
	pulumi.Input

	ToAnalysisSortDirectionPtrOutput() AnalysisSortDirectionPtrOutput
	ToAnalysisSortDirectionPtrOutputWithContext(context.Context) AnalysisSortDirectionPtrOutput
}

type analysisSortDirectionPtr string

func AnalysisSortDirectionPtr(v string) AnalysisSortDirectionPtrInput {
	return (*analysisSortDirectionPtr)(&v)
}

func (*analysisSortDirectionPtr) ElementType() reflect.Type {
	return analysisSortDirectionPtrType
}

func (in *analysisSortDirectionPtr) ToAnalysisSortDirectionPtrOutput() AnalysisSortDirectionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisSortDirectionPtrOutput)
}

func (in *analysisSortDirectionPtr) ToAnalysisSortDirectionPtrOutputWithContext(ctx context.Context) AnalysisSortDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSortDirectionPtrOutput)
}

type AnalysisSpecialValue string

const (
	AnalysisSpecialValueEmpty = AnalysisSpecialValue("EMPTY")
	AnalysisSpecialValueNull  = AnalysisSpecialValue("NULL")
	AnalysisSpecialValueOther = AnalysisSpecialValue("OTHER")
)

func (AnalysisSpecialValue) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSpecialValue)(nil)).Elem()
}

func (e AnalysisSpecialValue) ToAnalysisSpecialValueOutput() AnalysisSpecialValueOutput {
	return pulumi.ToOutput(e).(AnalysisSpecialValueOutput)
}

func (e AnalysisSpecialValue) ToAnalysisSpecialValueOutputWithContext(ctx context.Context) AnalysisSpecialValueOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisSpecialValueOutput)
}

func (e AnalysisSpecialValue) ToAnalysisSpecialValuePtrOutput() AnalysisSpecialValuePtrOutput {
	return e.ToAnalysisSpecialValuePtrOutputWithContext(context.Background())
}

func (e AnalysisSpecialValue) ToAnalysisSpecialValuePtrOutputWithContext(ctx context.Context) AnalysisSpecialValuePtrOutput {
	return AnalysisSpecialValue(e).ToAnalysisSpecialValueOutputWithContext(ctx).ToAnalysisSpecialValuePtrOutputWithContext(ctx)
}

func (e AnalysisSpecialValue) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSpecialValue) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisSpecialValue) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisSpecialValue) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisSpecialValueOutput struct{ *pulumi.OutputState }

func (AnalysisSpecialValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisSpecialValue)(nil)).Elem()
}

func (o AnalysisSpecialValueOutput) ToAnalysisSpecialValueOutput() AnalysisSpecialValueOutput {
	return o
}

func (o AnalysisSpecialValueOutput) ToAnalysisSpecialValueOutputWithContext(ctx context.Context) AnalysisSpecialValueOutput {
	return o
}

func (o AnalysisSpecialValueOutput) ToAnalysisSpecialValuePtrOutput() AnalysisSpecialValuePtrOutput {
	return o.ToAnalysisSpecialValuePtrOutputWithContext(context.Background())
}

func (o AnalysisSpecialValueOutput) ToAnalysisSpecialValuePtrOutputWithContext(ctx context.Context) AnalysisSpecialValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisSpecialValue) *AnalysisSpecialValue {
		return &v
	}).(AnalysisSpecialValuePtrOutput)
}

func (o AnalysisSpecialValueOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisSpecialValueOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSpecialValue) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisSpecialValueOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSpecialValueOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisSpecialValue) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisSpecialValuePtrOutput struct{ *pulumi.OutputState }

func (AnalysisSpecialValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisSpecialValue)(nil)).Elem()
}

func (o AnalysisSpecialValuePtrOutput) ToAnalysisSpecialValuePtrOutput() AnalysisSpecialValuePtrOutput {
	return o
}

func (o AnalysisSpecialValuePtrOutput) ToAnalysisSpecialValuePtrOutputWithContext(ctx context.Context) AnalysisSpecialValuePtrOutput {
	return o
}

func (o AnalysisSpecialValuePtrOutput) Elem() AnalysisSpecialValueOutput {
	return o.ApplyT(func(v *AnalysisSpecialValue) AnalysisSpecialValue {
		if v != nil {
			return *v
		}
		var ret AnalysisSpecialValue
		return ret
	}).(AnalysisSpecialValueOutput)
}

func (o AnalysisSpecialValuePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisSpecialValuePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisSpecialValue) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisSpecialValueInput is an input type that accepts values of the AnalysisSpecialValue enum
// A concrete instance of `AnalysisSpecialValueInput` can be one of the following:
//
//	AnalysisSpecialValueEmpty
//	AnalysisSpecialValueNull
//	AnalysisSpecialValueOther
type AnalysisSpecialValueInput interface {
	pulumi.Input

	ToAnalysisSpecialValueOutput() AnalysisSpecialValueOutput
	ToAnalysisSpecialValueOutputWithContext(context.Context) AnalysisSpecialValueOutput
}

var analysisSpecialValuePtrType = reflect.TypeOf((**AnalysisSpecialValue)(nil)).Elem()

type AnalysisSpecialValuePtrInput interface {
	pulumi.Input

	ToAnalysisSpecialValuePtrOutput() AnalysisSpecialValuePtrOutput
	ToAnalysisSpecialValuePtrOutputWithContext(context.Context) AnalysisSpecialValuePtrOutput
}

type analysisSpecialValuePtr string

func AnalysisSpecialValuePtr(v string) AnalysisSpecialValuePtrInput {
	return (*analysisSpecialValuePtr)(&v)
}

func (*analysisSpecialValuePtr) ElementType() reflect.Type {
	return analysisSpecialValuePtrType
}

func (in *analysisSpecialValuePtr) ToAnalysisSpecialValuePtrOutput() AnalysisSpecialValuePtrOutput {
	return pulumi.ToOutput(in).(AnalysisSpecialValuePtrOutput)
}

func (in *analysisSpecialValuePtr) ToAnalysisSpecialValuePtrOutputWithContext(ctx context.Context) AnalysisSpecialValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisSpecialValuePtrOutput)
}

type AnalysisStyledCellType string

const (
	AnalysisStyledCellTypeTotal        = AnalysisStyledCellType("TOTAL")
	AnalysisStyledCellTypeMetricHeader = AnalysisStyledCellType("METRIC_HEADER")
	AnalysisStyledCellTypeValue        = AnalysisStyledCellType("VALUE")
)

func (AnalysisStyledCellType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStyledCellType)(nil)).Elem()
}

func (e AnalysisStyledCellType) ToAnalysisStyledCellTypeOutput() AnalysisStyledCellTypeOutput {
	return pulumi.ToOutput(e).(AnalysisStyledCellTypeOutput)
}

func (e AnalysisStyledCellType) ToAnalysisStyledCellTypeOutputWithContext(ctx context.Context) AnalysisStyledCellTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisStyledCellTypeOutput)
}

func (e AnalysisStyledCellType) ToAnalysisStyledCellTypePtrOutput() AnalysisStyledCellTypePtrOutput {
	return e.ToAnalysisStyledCellTypePtrOutputWithContext(context.Background())
}

func (e AnalysisStyledCellType) ToAnalysisStyledCellTypePtrOutputWithContext(ctx context.Context) AnalysisStyledCellTypePtrOutput {
	return AnalysisStyledCellType(e).ToAnalysisStyledCellTypeOutputWithContext(ctx).ToAnalysisStyledCellTypePtrOutputWithContext(ctx)
}

func (e AnalysisStyledCellType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisStyledCellType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisStyledCellType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisStyledCellType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisStyledCellTypeOutput struct{ *pulumi.OutputState }

func (AnalysisStyledCellTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisStyledCellType)(nil)).Elem()
}

func (o AnalysisStyledCellTypeOutput) ToAnalysisStyledCellTypeOutput() AnalysisStyledCellTypeOutput {
	return o
}

func (o AnalysisStyledCellTypeOutput) ToAnalysisStyledCellTypeOutputWithContext(ctx context.Context) AnalysisStyledCellTypeOutput {
	return o
}

func (o AnalysisStyledCellTypeOutput) ToAnalysisStyledCellTypePtrOutput() AnalysisStyledCellTypePtrOutput {
	return o.ToAnalysisStyledCellTypePtrOutputWithContext(context.Background())
}

func (o AnalysisStyledCellTypeOutput) ToAnalysisStyledCellTypePtrOutputWithContext(ctx context.Context) AnalysisStyledCellTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisStyledCellType) *AnalysisStyledCellType {
		return &v
	}).(AnalysisStyledCellTypePtrOutput)
}

func (o AnalysisStyledCellTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisStyledCellTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisStyledCellType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisStyledCellTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisStyledCellTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisStyledCellType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisStyledCellTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisStyledCellTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisStyledCellType)(nil)).Elem()
}

func (o AnalysisStyledCellTypePtrOutput) ToAnalysisStyledCellTypePtrOutput() AnalysisStyledCellTypePtrOutput {
	return o
}

func (o AnalysisStyledCellTypePtrOutput) ToAnalysisStyledCellTypePtrOutputWithContext(ctx context.Context) AnalysisStyledCellTypePtrOutput {
	return o
}

func (o AnalysisStyledCellTypePtrOutput) Elem() AnalysisStyledCellTypeOutput {
	return o.ApplyT(func(v *AnalysisStyledCellType) AnalysisStyledCellType {
		if v != nil {
			return *v
		}
		var ret AnalysisStyledCellType
		return ret
	}).(AnalysisStyledCellTypeOutput)
}

func (o AnalysisStyledCellTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisStyledCellTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisStyledCellType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisStyledCellTypeInput is an input type that accepts values of the AnalysisStyledCellType enum
// A concrete instance of `AnalysisStyledCellTypeInput` can be one of the following:
//
//	AnalysisStyledCellTypeTotal
//	AnalysisStyledCellTypeMetricHeader
//	AnalysisStyledCellTypeValue
type AnalysisStyledCellTypeInput interface {
	pulumi.Input

	ToAnalysisStyledCellTypeOutput() AnalysisStyledCellTypeOutput
	ToAnalysisStyledCellTypeOutputWithContext(context.Context) AnalysisStyledCellTypeOutput
}

var analysisStyledCellTypePtrType = reflect.TypeOf((**AnalysisStyledCellType)(nil)).Elem()

type AnalysisStyledCellTypePtrInput interface {
	pulumi.Input

	ToAnalysisStyledCellTypePtrOutput() AnalysisStyledCellTypePtrOutput
	ToAnalysisStyledCellTypePtrOutputWithContext(context.Context) AnalysisStyledCellTypePtrOutput
}

type analysisStyledCellTypePtr string

func AnalysisStyledCellTypePtr(v string) AnalysisStyledCellTypePtrInput {
	return (*analysisStyledCellTypePtr)(&v)
}

func (*analysisStyledCellTypePtr) ElementType() reflect.Type {
	return analysisStyledCellTypePtrType
}

func (in *analysisStyledCellTypePtr) ToAnalysisStyledCellTypePtrOutput() AnalysisStyledCellTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisStyledCellTypePtrOutput)
}

func (in *analysisStyledCellTypePtr) ToAnalysisStyledCellTypePtrOutputWithContext(ctx context.Context) AnalysisStyledCellTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisStyledCellTypePtrOutput)
}

type AnalysisTableBorderStyle string

const (
	AnalysisTableBorderStyleNone  = AnalysisTableBorderStyle("NONE")
	AnalysisTableBorderStyleSolid = AnalysisTableBorderStyle("SOLID")
)

func (AnalysisTableBorderStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableBorderStyle)(nil)).Elem()
}

func (e AnalysisTableBorderStyle) ToAnalysisTableBorderStyleOutput() AnalysisTableBorderStyleOutput {
	return pulumi.ToOutput(e).(AnalysisTableBorderStyleOutput)
}

func (e AnalysisTableBorderStyle) ToAnalysisTableBorderStyleOutputWithContext(ctx context.Context) AnalysisTableBorderStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTableBorderStyleOutput)
}

func (e AnalysisTableBorderStyle) ToAnalysisTableBorderStylePtrOutput() AnalysisTableBorderStylePtrOutput {
	return e.ToAnalysisTableBorderStylePtrOutputWithContext(context.Background())
}

func (e AnalysisTableBorderStyle) ToAnalysisTableBorderStylePtrOutputWithContext(ctx context.Context) AnalysisTableBorderStylePtrOutput {
	return AnalysisTableBorderStyle(e).ToAnalysisTableBorderStyleOutputWithContext(ctx).ToAnalysisTableBorderStylePtrOutputWithContext(ctx)
}

func (e AnalysisTableBorderStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableBorderStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableBorderStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTableBorderStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTableBorderStyleOutput struct{ *pulumi.OutputState }

func (AnalysisTableBorderStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableBorderStyle)(nil)).Elem()
}

func (o AnalysisTableBorderStyleOutput) ToAnalysisTableBorderStyleOutput() AnalysisTableBorderStyleOutput {
	return o
}

func (o AnalysisTableBorderStyleOutput) ToAnalysisTableBorderStyleOutputWithContext(ctx context.Context) AnalysisTableBorderStyleOutput {
	return o
}

func (o AnalysisTableBorderStyleOutput) ToAnalysisTableBorderStylePtrOutput() AnalysisTableBorderStylePtrOutput {
	return o.ToAnalysisTableBorderStylePtrOutputWithContext(context.Background())
}

func (o AnalysisTableBorderStyleOutput) ToAnalysisTableBorderStylePtrOutputWithContext(ctx context.Context) AnalysisTableBorderStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableBorderStyle) *AnalysisTableBorderStyle {
		return &v
	}).(AnalysisTableBorderStylePtrOutput)
}

func (o AnalysisTableBorderStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTableBorderStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableBorderStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTableBorderStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableBorderStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableBorderStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTableBorderStylePtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableBorderStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableBorderStyle)(nil)).Elem()
}

func (o AnalysisTableBorderStylePtrOutput) ToAnalysisTableBorderStylePtrOutput() AnalysisTableBorderStylePtrOutput {
	return o
}

func (o AnalysisTableBorderStylePtrOutput) ToAnalysisTableBorderStylePtrOutputWithContext(ctx context.Context) AnalysisTableBorderStylePtrOutput {
	return o
}

func (o AnalysisTableBorderStylePtrOutput) Elem() AnalysisTableBorderStyleOutput {
	return o.ApplyT(func(v *AnalysisTableBorderStyle) AnalysisTableBorderStyle {
		if v != nil {
			return *v
		}
		var ret AnalysisTableBorderStyle
		return ret
	}).(AnalysisTableBorderStyleOutput)
}

func (o AnalysisTableBorderStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableBorderStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTableBorderStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTableBorderStyleInput is an input type that accepts values of the AnalysisTableBorderStyle enum
// A concrete instance of `AnalysisTableBorderStyleInput` can be one of the following:
//
//	AnalysisTableBorderStyleNone
//	AnalysisTableBorderStyleSolid
type AnalysisTableBorderStyleInput interface {
	pulumi.Input

	ToAnalysisTableBorderStyleOutput() AnalysisTableBorderStyleOutput
	ToAnalysisTableBorderStyleOutputWithContext(context.Context) AnalysisTableBorderStyleOutput
}

var analysisTableBorderStylePtrType = reflect.TypeOf((**AnalysisTableBorderStyle)(nil)).Elem()

type AnalysisTableBorderStylePtrInput interface {
	pulumi.Input

	ToAnalysisTableBorderStylePtrOutput() AnalysisTableBorderStylePtrOutput
	ToAnalysisTableBorderStylePtrOutputWithContext(context.Context) AnalysisTableBorderStylePtrOutput
}

type analysisTableBorderStylePtr string

func AnalysisTableBorderStylePtr(v string) AnalysisTableBorderStylePtrInput {
	return (*analysisTableBorderStylePtr)(&v)
}

func (*analysisTableBorderStylePtr) ElementType() reflect.Type {
	return analysisTableBorderStylePtrType
}

func (in *analysisTableBorderStylePtr) ToAnalysisTableBorderStylePtrOutput() AnalysisTableBorderStylePtrOutput {
	return pulumi.ToOutput(in).(AnalysisTableBorderStylePtrOutput)
}

func (in *analysisTableBorderStylePtr) ToAnalysisTableBorderStylePtrOutputWithContext(ctx context.Context) AnalysisTableBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTableBorderStylePtrOutput)
}

type AnalysisTableCellImageScalingConfiguration string

const (
	AnalysisTableCellImageScalingConfigurationFitToCellHeight = AnalysisTableCellImageScalingConfiguration("FIT_TO_CELL_HEIGHT")
	AnalysisTableCellImageScalingConfigurationFitToCellWidth  = AnalysisTableCellImageScalingConfiguration("FIT_TO_CELL_WIDTH")
	AnalysisTableCellImageScalingConfigurationDoNotScale      = AnalysisTableCellImageScalingConfiguration("DO_NOT_SCALE")
)

func (AnalysisTableCellImageScalingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableCellImageScalingConfiguration)(nil)).Elem()
}

func (e AnalysisTableCellImageScalingConfiguration) ToAnalysisTableCellImageScalingConfigurationOutput() AnalysisTableCellImageScalingConfigurationOutput {
	return pulumi.ToOutput(e).(AnalysisTableCellImageScalingConfigurationOutput)
}

func (e AnalysisTableCellImageScalingConfiguration) ToAnalysisTableCellImageScalingConfigurationOutputWithContext(ctx context.Context) AnalysisTableCellImageScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTableCellImageScalingConfigurationOutput)
}

func (e AnalysisTableCellImageScalingConfiguration) ToAnalysisTableCellImageScalingConfigurationPtrOutput() AnalysisTableCellImageScalingConfigurationPtrOutput {
	return e.ToAnalysisTableCellImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (e AnalysisTableCellImageScalingConfiguration) ToAnalysisTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableCellImageScalingConfigurationPtrOutput {
	return AnalysisTableCellImageScalingConfiguration(e).ToAnalysisTableCellImageScalingConfigurationOutputWithContext(ctx).ToAnalysisTableCellImageScalingConfigurationPtrOutputWithContext(ctx)
}

func (e AnalysisTableCellImageScalingConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableCellImageScalingConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableCellImageScalingConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTableCellImageScalingConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTableCellImageScalingConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisTableCellImageScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableCellImageScalingConfiguration)(nil)).Elem()
}

func (o AnalysisTableCellImageScalingConfigurationOutput) ToAnalysisTableCellImageScalingConfigurationOutput() AnalysisTableCellImageScalingConfigurationOutput {
	return o
}

func (o AnalysisTableCellImageScalingConfigurationOutput) ToAnalysisTableCellImageScalingConfigurationOutputWithContext(ctx context.Context) AnalysisTableCellImageScalingConfigurationOutput {
	return o
}

func (o AnalysisTableCellImageScalingConfigurationOutput) ToAnalysisTableCellImageScalingConfigurationPtrOutput() AnalysisTableCellImageScalingConfigurationPtrOutput {
	return o.ToAnalysisTableCellImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisTableCellImageScalingConfigurationOutput) ToAnalysisTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableCellImageScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableCellImageScalingConfiguration) *AnalysisTableCellImageScalingConfiguration {
		return &v
	}).(AnalysisTableCellImageScalingConfigurationPtrOutput)
}

func (o AnalysisTableCellImageScalingConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTableCellImageScalingConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableCellImageScalingConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTableCellImageScalingConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableCellImageScalingConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableCellImageScalingConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTableCellImageScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableCellImageScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableCellImageScalingConfiguration)(nil)).Elem()
}

func (o AnalysisTableCellImageScalingConfigurationPtrOutput) ToAnalysisTableCellImageScalingConfigurationPtrOutput() AnalysisTableCellImageScalingConfigurationPtrOutput {
	return o
}

func (o AnalysisTableCellImageScalingConfigurationPtrOutput) ToAnalysisTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableCellImageScalingConfigurationPtrOutput {
	return o
}

func (o AnalysisTableCellImageScalingConfigurationPtrOutput) Elem() AnalysisTableCellImageScalingConfigurationOutput {
	return o.ApplyT(func(v *AnalysisTableCellImageScalingConfiguration) AnalysisTableCellImageScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisTableCellImageScalingConfiguration
		return ret
	}).(AnalysisTableCellImageScalingConfigurationOutput)
}

func (o AnalysisTableCellImageScalingConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableCellImageScalingConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTableCellImageScalingConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTableCellImageScalingConfigurationInput is an input type that accepts values of the AnalysisTableCellImageScalingConfiguration enum
// A concrete instance of `AnalysisTableCellImageScalingConfigurationInput` can be one of the following:
//
//	AnalysisTableCellImageScalingConfigurationFitToCellHeight
//	AnalysisTableCellImageScalingConfigurationFitToCellWidth
//	AnalysisTableCellImageScalingConfigurationDoNotScale
type AnalysisTableCellImageScalingConfigurationInput interface {
	pulumi.Input

	ToAnalysisTableCellImageScalingConfigurationOutput() AnalysisTableCellImageScalingConfigurationOutput
	ToAnalysisTableCellImageScalingConfigurationOutputWithContext(context.Context) AnalysisTableCellImageScalingConfigurationOutput
}

var analysisTableCellImageScalingConfigurationPtrType = reflect.TypeOf((**AnalysisTableCellImageScalingConfiguration)(nil)).Elem()

type AnalysisTableCellImageScalingConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisTableCellImageScalingConfigurationPtrOutput() AnalysisTableCellImageScalingConfigurationPtrOutput
	ToAnalysisTableCellImageScalingConfigurationPtrOutputWithContext(context.Context) AnalysisTableCellImageScalingConfigurationPtrOutput
}

type analysisTableCellImageScalingConfigurationPtr string

func AnalysisTableCellImageScalingConfigurationPtr(v string) AnalysisTableCellImageScalingConfigurationPtrInput {
	return (*analysisTableCellImageScalingConfigurationPtr)(&v)
}

func (*analysisTableCellImageScalingConfigurationPtr) ElementType() reflect.Type {
	return analysisTableCellImageScalingConfigurationPtrType
}

func (in *analysisTableCellImageScalingConfigurationPtr) ToAnalysisTableCellImageScalingConfigurationPtrOutput() AnalysisTableCellImageScalingConfigurationPtrOutput {
	return pulumi.ToOutput(in).(AnalysisTableCellImageScalingConfigurationPtrOutput)
}

func (in *analysisTableCellImageScalingConfigurationPtr) ToAnalysisTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) AnalysisTableCellImageScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTableCellImageScalingConfigurationPtrOutput)
}

type AnalysisTableFieldIconSetType string

const (
	AnalysisTableFieldIconSetTypeLink = AnalysisTableFieldIconSetType("LINK")
)

func (AnalysisTableFieldIconSetType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldIconSetType)(nil)).Elem()
}

func (e AnalysisTableFieldIconSetType) ToAnalysisTableFieldIconSetTypeOutput() AnalysisTableFieldIconSetTypeOutput {
	return pulumi.ToOutput(e).(AnalysisTableFieldIconSetTypeOutput)
}

func (e AnalysisTableFieldIconSetType) ToAnalysisTableFieldIconSetTypeOutputWithContext(ctx context.Context) AnalysisTableFieldIconSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTableFieldIconSetTypeOutput)
}

func (e AnalysisTableFieldIconSetType) ToAnalysisTableFieldIconSetTypePtrOutput() AnalysisTableFieldIconSetTypePtrOutput {
	return e.ToAnalysisTableFieldIconSetTypePtrOutputWithContext(context.Background())
}

func (e AnalysisTableFieldIconSetType) ToAnalysisTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) AnalysisTableFieldIconSetTypePtrOutput {
	return AnalysisTableFieldIconSetType(e).ToAnalysisTableFieldIconSetTypeOutputWithContext(ctx).ToAnalysisTableFieldIconSetTypePtrOutputWithContext(ctx)
}

func (e AnalysisTableFieldIconSetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableFieldIconSetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableFieldIconSetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTableFieldIconSetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTableFieldIconSetTypeOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldIconSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableFieldIconSetType)(nil)).Elem()
}

func (o AnalysisTableFieldIconSetTypeOutput) ToAnalysisTableFieldIconSetTypeOutput() AnalysisTableFieldIconSetTypeOutput {
	return o
}

func (o AnalysisTableFieldIconSetTypeOutput) ToAnalysisTableFieldIconSetTypeOutputWithContext(ctx context.Context) AnalysisTableFieldIconSetTypeOutput {
	return o
}

func (o AnalysisTableFieldIconSetTypeOutput) ToAnalysisTableFieldIconSetTypePtrOutput() AnalysisTableFieldIconSetTypePtrOutput {
	return o.ToAnalysisTableFieldIconSetTypePtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldIconSetTypeOutput) ToAnalysisTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) AnalysisTableFieldIconSetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableFieldIconSetType) *AnalysisTableFieldIconSetType {
		return &v
	}).(AnalysisTableFieldIconSetTypePtrOutput)
}

func (o AnalysisTableFieldIconSetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTableFieldIconSetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableFieldIconSetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTableFieldIconSetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldIconSetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableFieldIconSetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTableFieldIconSetTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableFieldIconSetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableFieldIconSetType)(nil)).Elem()
}

func (o AnalysisTableFieldIconSetTypePtrOutput) ToAnalysisTableFieldIconSetTypePtrOutput() AnalysisTableFieldIconSetTypePtrOutput {
	return o
}

func (o AnalysisTableFieldIconSetTypePtrOutput) ToAnalysisTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) AnalysisTableFieldIconSetTypePtrOutput {
	return o
}

func (o AnalysisTableFieldIconSetTypePtrOutput) Elem() AnalysisTableFieldIconSetTypeOutput {
	return o.ApplyT(func(v *AnalysisTableFieldIconSetType) AnalysisTableFieldIconSetType {
		if v != nil {
			return *v
		}
		var ret AnalysisTableFieldIconSetType
		return ret
	}).(AnalysisTableFieldIconSetTypeOutput)
}

func (o AnalysisTableFieldIconSetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableFieldIconSetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTableFieldIconSetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTableFieldIconSetTypeInput is an input type that accepts values of the AnalysisTableFieldIconSetType enum
// A concrete instance of `AnalysisTableFieldIconSetTypeInput` can be one of the following:
//
//	AnalysisTableFieldIconSetTypeLink
type AnalysisTableFieldIconSetTypeInput interface {
	pulumi.Input

	ToAnalysisTableFieldIconSetTypeOutput() AnalysisTableFieldIconSetTypeOutput
	ToAnalysisTableFieldIconSetTypeOutputWithContext(context.Context) AnalysisTableFieldIconSetTypeOutput
}

var analysisTableFieldIconSetTypePtrType = reflect.TypeOf((**AnalysisTableFieldIconSetType)(nil)).Elem()

type AnalysisTableFieldIconSetTypePtrInput interface {
	pulumi.Input

	ToAnalysisTableFieldIconSetTypePtrOutput() AnalysisTableFieldIconSetTypePtrOutput
	ToAnalysisTableFieldIconSetTypePtrOutputWithContext(context.Context) AnalysisTableFieldIconSetTypePtrOutput
}

type analysisTableFieldIconSetTypePtr string

func AnalysisTableFieldIconSetTypePtr(v string) AnalysisTableFieldIconSetTypePtrInput {
	return (*analysisTableFieldIconSetTypePtr)(&v)
}

func (*analysisTableFieldIconSetTypePtr) ElementType() reflect.Type {
	return analysisTableFieldIconSetTypePtrType
}

func (in *analysisTableFieldIconSetTypePtr) ToAnalysisTableFieldIconSetTypePtrOutput() AnalysisTableFieldIconSetTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisTableFieldIconSetTypePtrOutput)
}

func (in *analysisTableFieldIconSetTypePtr) ToAnalysisTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) AnalysisTableFieldIconSetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTableFieldIconSetTypePtrOutput)
}

type AnalysisTableOrientation string

const (
	AnalysisTableOrientationVertical   = AnalysisTableOrientation("VERTICAL")
	AnalysisTableOrientationHorizontal = AnalysisTableOrientation("HORIZONTAL")
)

func (AnalysisTableOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableOrientation)(nil)).Elem()
}

func (e AnalysisTableOrientation) ToAnalysisTableOrientationOutput() AnalysisTableOrientationOutput {
	return pulumi.ToOutput(e).(AnalysisTableOrientationOutput)
}

func (e AnalysisTableOrientation) ToAnalysisTableOrientationOutputWithContext(ctx context.Context) AnalysisTableOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTableOrientationOutput)
}

func (e AnalysisTableOrientation) ToAnalysisTableOrientationPtrOutput() AnalysisTableOrientationPtrOutput {
	return e.ToAnalysisTableOrientationPtrOutputWithContext(context.Background())
}

func (e AnalysisTableOrientation) ToAnalysisTableOrientationPtrOutputWithContext(ctx context.Context) AnalysisTableOrientationPtrOutput {
	return AnalysisTableOrientation(e).ToAnalysisTableOrientationOutputWithContext(ctx).ToAnalysisTableOrientationPtrOutputWithContext(ctx)
}

func (e AnalysisTableOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTableOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTableOrientationOutput struct{ *pulumi.OutputState }

func (AnalysisTableOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableOrientation)(nil)).Elem()
}

func (o AnalysisTableOrientationOutput) ToAnalysisTableOrientationOutput() AnalysisTableOrientationOutput {
	return o
}

func (o AnalysisTableOrientationOutput) ToAnalysisTableOrientationOutputWithContext(ctx context.Context) AnalysisTableOrientationOutput {
	return o
}

func (o AnalysisTableOrientationOutput) ToAnalysisTableOrientationPtrOutput() AnalysisTableOrientationPtrOutput {
	return o.ToAnalysisTableOrientationPtrOutputWithContext(context.Background())
}

func (o AnalysisTableOrientationOutput) ToAnalysisTableOrientationPtrOutputWithContext(ctx context.Context) AnalysisTableOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableOrientation) *AnalysisTableOrientation {
		return &v
	}).(AnalysisTableOrientationPtrOutput)
}

func (o AnalysisTableOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTableOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTableOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTableOrientationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableOrientation)(nil)).Elem()
}

func (o AnalysisTableOrientationPtrOutput) ToAnalysisTableOrientationPtrOutput() AnalysisTableOrientationPtrOutput {
	return o
}

func (o AnalysisTableOrientationPtrOutput) ToAnalysisTableOrientationPtrOutputWithContext(ctx context.Context) AnalysisTableOrientationPtrOutput {
	return o
}

func (o AnalysisTableOrientationPtrOutput) Elem() AnalysisTableOrientationOutput {
	return o.ApplyT(func(v *AnalysisTableOrientation) AnalysisTableOrientation {
		if v != nil {
			return *v
		}
		var ret AnalysisTableOrientation
		return ret
	}).(AnalysisTableOrientationOutput)
}

func (o AnalysisTableOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTableOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTableOrientationInput is an input type that accepts values of the AnalysisTableOrientation enum
// A concrete instance of `AnalysisTableOrientationInput` can be one of the following:
//
//	AnalysisTableOrientationVertical
//	AnalysisTableOrientationHorizontal
type AnalysisTableOrientationInput interface {
	pulumi.Input

	ToAnalysisTableOrientationOutput() AnalysisTableOrientationOutput
	ToAnalysisTableOrientationOutputWithContext(context.Context) AnalysisTableOrientationOutput
}

var analysisTableOrientationPtrType = reflect.TypeOf((**AnalysisTableOrientation)(nil)).Elem()

type AnalysisTableOrientationPtrInput interface {
	pulumi.Input

	ToAnalysisTableOrientationPtrOutput() AnalysisTableOrientationPtrOutput
	ToAnalysisTableOrientationPtrOutputWithContext(context.Context) AnalysisTableOrientationPtrOutput
}

type analysisTableOrientationPtr string

func AnalysisTableOrientationPtr(v string) AnalysisTableOrientationPtrInput {
	return (*analysisTableOrientationPtr)(&v)
}

func (*analysisTableOrientationPtr) ElementType() reflect.Type {
	return analysisTableOrientationPtrType
}

func (in *analysisTableOrientationPtr) ToAnalysisTableOrientationPtrOutput() AnalysisTableOrientationPtrOutput {
	return pulumi.ToOutput(in).(AnalysisTableOrientationPtrOutput)
}

func (in *analysisTableOrientationPtr) ToAnalysisTableOrientationPtrOutputWithContext(ctx context.Context) AnalysisTableOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTableOrientationPtrOutput)
}

type AnalysisTableTotalsPlacement string

const (
	AnalysisTableTotalsPlacementStart = AnalysisTableTotalsPlacement("START")
	AnalysisTableTotalsPlacementEnd   = AnalysisTableTotalsPlacement("END")
	AnalysisTableTotalsPlacementAuto  = AnalysisTableTotalsPlacement("AUTO")
)

func (AnalysisTableTotalsPlacement) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableTotalsPlacement)(nil)).Elem()
}

func (e AnalysisTableTotalsPlacement) ToAnalysisTableTotalsPlacementOutput() AnalysisTableTotalsPlacementOutput {
	return pulumi.ToOutput(e).(AnalysisTableTotalsPlacementOutput)
}

func (e AnalysisTableTotalsPlacement) ToAnalysisTableTotalsPlacementOutputWithContext(ctx context.Context) AnalysisTableTotalsPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTableTotalsPlacementOutput)
}

func (e AnalysisTableTotalsPlacement) ToAnalysisTableTotalsPlacementPtrOutput() AnalysisTableTotalsPlacementPtrOutput {
	return e.ToAnalysisTableTotalsPlacementPtrOutputWithContext(context.Background())
}

func (e AnalysisTableTotalsPlacement) ToAnalysisTableTotalsPlacementPtrOutputWithContext(ctx context.Context) AnalysisTableTotalsPlacementPtrOutput {
	return AnalysisTableTotalsPlacement(e).ToAnalysisTableTotalsPlacementOutputWithContext(ctx).ToAnalysisTableTotalsPlacementPtrOutputWithContext(ctx)
}

func (e AnalysisTableTotalsPlacement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableTotalsPlacement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableTotalsPlacement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTableTotalsPlacement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTableTotalsPlacementOutput struct{ *pulumi.OutputState }

func (AnalysisTableTotalsPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableTotalsPlacement)(nil)).Elem()
}

func (o AnalysisTableTotalsPlacementOutput) ToAnalysisTableTotalsPlacementOutput() AnalysisTableTotalsPlacementOutput {
	return o
}

func (o AnalysisTableTotalsPlacementOutput) ToAnalysisTableTotalsPlacementOutputWithContext(ctx context.Context) AnalysisTableTotalsPlacementOutput {
	return o
}

func (o AnalysisTableTotalsPlacementOutput) ToAnalysisTableTotalsPlacementPtrOutput() AnalysisTableTotalsPlacementPtrOutput {
	return o.ToAnalysisTableTotalsPlacementPtrOutputWithContext(context.Background())
}

func (o AnalysisTableTotalsPlacementOutput) ToAnalysisTableTotalsPlacementPtrOutputWithContext(ctx context.Context) AnalysisTableTotalsPlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableTotalsPlacement) *AnalysisTableTotalsPlacement {
		return &v
	}).(AnalysisTableTotalsPlacementPtrOutput)
}

func (o AnalysisTableTotalsPlacementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTableTotalsPlacementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableTotalsPlacement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTableTotalsPlacementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableTotalsPlacementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableTotalsPlacement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTableTotalsPlacementPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableTotalsPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableTotalsPlacement)(nil)).Elem()
}

func (o AnalysisTableTotalsPlacementPtrOutput) ToAnalysisTableTotalsPlacementPtrOutput() AnalysisTableTotalsPlacementPtrOutput {
	return o
}

func (o AnalysisTableTotalsPlacementPtrOutput) ToAnalysisTableTotalsPlacementPtrOutputWithContext(ctx context.Context) AnalysisTableTotalsPlacementPtrOutput {
	return o
}

func (o AnalysisTableTotalsPlacementPtrOutput) Elem() AnalysisTableTotalsPlacementOutput {
	return o.ApplyT(func(v *AnalysisTableTotalsPlacement) AnalysisTableTotalsPlacement {
		if v != nil {
			return *v
		}
		var ret AnalysisTableTotalsPlacement
		return ret
	}).(AnalysisTableTotalsPlacementOutput)
}

func (o AnalysisTableTotalsPlacementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableTotalsPlacementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTableTotalsPlacement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTableTotalsPlacementInput is an input type that accepts values of the AnalysisTableTotalsPlacement enum
// A concrete instance of `AnalysisTableTotalsPlacementInput` can be one of the following:
//
//	AnalysisTableTotalsPlacementStart
//	AnalysisTableTotalsPlacementEnd
//	AnalysisTableTotalsPlacementAuto
type AnalysisTableTotalsPlacementInput interface {
	pulumi.Input

	ToAnalysisTableTotalsPlacementOutput() AnalysisTableTotalsPlacementOutput
	ToAnalysisTableTotalsPlacementOutputWithContext(context.Context) AnalysisTableTotalsPlacementOutput
}

var analysisTableTotalsPlacementPtrType = reflect.TypeOf((**AnalysisTableTotalsPlacement)(nil)).Elem()

type AnalysisTableTotalsPlacementPtrInput interface {
	pulumi.Input

	ToAnalysisTableTotalsPlacementPtrOutput() AnalysisTableTotalsPlacementPtrOutput
	ToAnalysisTableTotalsPlacementPtrOutputWithContext(context.Context) AnalysisTableTotalsPlacementPtrOutput
}

type analysisTableTotalsPlacementPtr string

func AnalysisTableTotalsPlacementPtr(v string) AnalysisTableTotalsPlacementPtrInput {
	return (*analysisTableTotalsPlacementPtr)(&v)
}

func (*analysisTableTotalsPlacementPtr) ElementType() reflect.Type {
	return analysisTableTotalsPlacementPtrType
}

func (in *analysisTableTotalsPlacementPtr) ToAnalysisTableTotalsPlacementPtrOutput() AnalysisTableTotalsPlacementPtrOutput {
	return pulumi.ToOutput(in).(AnalysisTableTotalsPlacementPtrOutput)
}

func (in *analysisTableTotalsPlacementPtr) ToAnalysisTableTotalsPlacementPtrOutputWithContext(ctx context.Context) AnalysisTableTotalsPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTableTotalsPlacementPtrOutput)
}

type AnalysisTableTotalsScrollStatus string

const (
	AnalysisTableTotalsScrollStatusPinned   = AnalysisTableTotalsScrollStatus("PINNED")
	AnalysisTableTotalsScrollStatusScrolled = AnalysisTableTotalsScrollStatus("SCROLLED")
)

func (AnalysisTableTotalsScrollStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableTotalsScrollStatus)(nil)).Elem()
}

func (e AnalysisTableTotalsScrollStatus) ToAnalysisTableTotalsScrollStatusOutput() AnalysisTableTotalsScrollStatusOutput {
	return pulumi.ToOutput(e).(AnalysisTableTotalsScrollStatusOutput)
}

func (e AnalysisTableTotalsScrollStatus) ToAnalysisTableTotalsScrollStatusOutputWithContext(ctx context.Context) AnalysisTableTotalsScrollStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTableTotalsScrollStatusOutput)
}

func (e AnalysisTableTotalsScrollStatus) ToAnalysisTableTotalsScrollStatusPtrOutput() AnalysisTableTotalsScrollStatusPtrOutput {
	return e.ToAnalysisTableTotalsScrollStatusPtrOutputWithContext(context.Background())
}

func (e AnalysisTableTotalsScrollStatus) ToAnalysisTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) AnalysisTableTotalsScrollStatusPtrOutput {
	return AnalysisTableTotalsScrollStatus(e).ToAnalysisTableTotalsScrollStatusOutputWithContext(ctx).ToAnalysisTableTotalsScrollStatusPtrOutputWithContext(ctx)
}

func (e AnalysisTableTotalsScrollStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableTotalsScrollStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTableTotalsScrollStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTableTotalsScrollStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTableTotalsScrollStatusOutput struct{ *pulumi.OutputState }

func (AnalysisTableTotalsScrollStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTableTotalsScrollStatus)(nil)).Elem()
}

func (o AnalysisTableTotalsScrollStatusOutput) ToAnalysisTableTotalsScrollStatusOutput() AnalysisTableTotalsScrollStatusOutput {
	return o
}

func (o AnalysisTableTotalsScrollStatusOutput) ToAnalysisTableTotalsScrollStatusOutputWithContext(ctx context.Context) AnalysisTableTotalsScrollStatusOutput {
	return o
}

func (o AnalysisTableTotalsScrollStatusOutput) ToAnalysisTableTotalsScrollStatusPtrOutput() AnalysisTableTotalsScrollStatusPtrOutput {
	return o.ToAnalysisTableTotalsScrollStatusPtrOutputWithContext(context.Background())
}

func (o AnalysisTableTotalsScrollStatusOutput) ToAnalysisTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) AnalysisTableTotalsScrollStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTableTotalsScrollStatus) *AnalysisTableTotalsScrollStatus {
		return &v
	}).(AnalysisTableTotalsScrollStatusPtrOutput)
}

func (o AnalysisTableTotalsScrollStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTableTotalsScrollStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableTotalsScrollStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTableTotalsScrollStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableTotalsScrollStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTableTotalsScrollStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTableTotalsScrollStatusPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTableTotalsScrollStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTableTotalsScrollStatus)(nil)).Elem()
}

func (o AnalysisTableTotalsScrollStatusPtrOutput) ToAnalysisTableTotalsScrollStatusPtrOutput() AnalysisTableTotalsScrollStatusPtrOutput {
	return o
}

func (o AnalysisTableTotalsScrollStatusPtrOutput) ToAnalysisTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) AnalysisTableTotalsScrollStatusPtrOutput {
	return o
}

func (o AnalysisTableTotalsScrollStatusPtrOutput) Elem() AnalysisTableTotalsScrollStatusOutput {
	return o.ApplyT(func(v *AnalysisTableTotalsScrollStatus) AnalysisTableTotalsScrollStatus {
		if v != nil {
			return *v
		}
		var ret AnalysisTableTotalsScrollStatus
		return ret
	}).(AnalysisTableTotalsScrollStatusOutput)
}

func (o AnalysisTableTotalsScrollStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTableTotalsScrollStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTableTotalsScrollStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTableTotalsScrollStatusInput is an input type that accepts values of the AnalysisTableTotalsScrollStatus enum
// A concrete instance of `AnalysisTableTotalsScrollStatusInput` can be one of the following:
//
//	AnalysisTableTotalsScrollStatusPinned
//	AnalysisTableTotalsScrollStatusScrolled
type AnalysisTableTotalsScrollStatusInput interface {
	pulumi.Input

	ToAnalysisTableTotalsScrollStatusOutput() AnalysisTableTotalsScrollStatusOutput
	ToAnalysisTableTotalsScrollStatusOutputWithContext(context.Context) AnalysisTableTotalsScrollStatusOutput
}

var analysisTableTotalsScrollStatusPtrType = reflect.TypeOf((**AnalysisTableTotalsScrollStatus)(nil)).Elem()

type AnalysisTableTotalsScrollStatusPtrInput interface {
	pulumi.Input

	ToAnalysisTableTotalsScrollStatusPtrOutput() AnalysisTableTotalsScrollStatusPtrOutput
	ToAnalysisTableTotalsScrollStatusPtrOutputWithContext(context.Context) AnalysisTableTotalsScrollStatusPtrOutput
}

type analysisTableTotalsScrollStatusPtr string

func AnalysisTableTotalsScrollStatusPtr(v string) AnalysisTableTotalsScrollStatusPtrInput {
	return (*analysisTableTotalsScrollStatusPtr)(&v)
}

func (*analysisTableTotalsScrollStatusPtr) ElementType() reflect.Type {
	return analysisTableTotalsScrollStatusPtrType
}

func (in *analysisTableTotalsScrollStatusPtr) ToAnalysisTableTotalsScrollStatusPtrOutput() AnalysisTableTotalsScrollStatusPtrOutput {
	return pulumi.ToOutput(in).(AnalysisTableTotalsScrollStatusPtrOutput)
}

func (in *analysisTableTotalsScrollStatusPtr) ToAnalysisTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) AnalysisTableTotalsScrollStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTableTotalsScrollStatusPtrOutput)
}

type AnalysisTargetVisualOptions string

const (
	AnalysisTargetVisualOptionsAllVisuals = AnalysisTargetVisualOptions("ALL_VISUALS")
)

func (AnalysisTargetVisualOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTargetVisualOptions)(nil)).Elem()
}

func (e AnalysisTargetVisualOptions) ToAnalysisTargetVisualOptionsOutput() AnalysisTargetVisualOptionsOutput {
	return pulumi.ToOutput(e).(AnalysisTargetVisualOptionsOutput)
}

func (e AnalysisTargetVisualOptions) ToAnalysisTargetVisualOptionsOutputWithContext(ctx context.Context) AnalysisTargetVisualOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTargetVisualOptionsOutput)
}

func (e AnalysisTargetVisualOptions) ToAnalysisTargetVisualOptionsPtrOutput() AnalysisTargetVisualOptionsPtrOutput {
	return e.ToAnalysisTargetVisualOptionsPtrOutputWithContext(context.Background())
}

func (e AnalysisTargetVisualOptions) ToAnalysisTargetVisualOptionsPtrOutputWithContext(ctx context.Context) AnalysisTargetVisualOptionsPtrOutput {
	return AnalysisTargetVisualOptions(e).ToAnalysisTargetVisualOptionsOutputWithContext(ctx).ToAnalysisTargetVisualOptionsPtrOutputWithContext(ctx)
}

func (e AnalysisTargetVisualOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTargetVisualOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTargetVisualOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTargetVisualOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTargetVisualOptionsOutput struct{ *pulumi.OutputState }

func (AnalysisTargetVisualOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTargetVisualOptions)(nil)).Elem()
}

func (o AnalysisTargetVisualOptionsOutput) ToAnalysisTargetVisualOptionsOutput() AnalysisTargetVisualOptionsOutput {
	return o
}

func (o AnalysisTargetVisualOptionsOutput) ToAnalysisTargetVisualOptionsOutputWithContext(ctx context.Context) AnalysisTargetVisualOptionsOutput {
	return o
}

func (o AnalysisTargetVisualOptionsOutput) ToAnalysisTargetVisualOptionsPtrOutput() AnalysisTargetVisualOptionsPtrOutput {
	return o.ToAnalysisTargetVisualOptionsPtrOutputWithContext(context.Background())
}

func (o AnalysisTargetVisualOptionsOutput) ToAnalysisTargetVisualOptionsPtrOutputWithContext(ctx context.Context) AnalysisTargetVisualOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTargetVisualOptions) *AnalysisTargetVisualOptions {
		return &v
	}).(AnalysisTargetVisualOptionsPtrOutput)
}

func (o AnalysisTargetVisualOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTargetVisualOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTargetVisualOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTargetVisualOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTargetVisualOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTargetVisualOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTargetVisualOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTargetVisualOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTargetVisualOptions)(nil)).Elem()
}

func (o AnalysisTargetVisualOptionsPtrOutput) ToAnalysisTargetVisualOptionsPtrOutput() AnalysisTargetVisualOptionsPtrOutput {
	return o
}

func (o AnalysisTargetVisualOptionsPtrOutput) ToAnalysisTargetVisualOptionsPtrOutputWithContext(ctx context.Context) AnalysisTargetVisualOptionsPtrOutput {
	return o
}

func (o AnalysisTargetVisualOptionsPtrOutput) Elem() AnalysisTargetVisualOptionsOutput {
	return o.ApplyT(func(v *AnalysisTargetVisualOptions) AnalysisTargetVisualOptions {
		if v != nil {
			return *v
		}
		var ret AnalysisTargetVisualOptions
		return ret
	}).(AnalysisTargetVisualOptionsOutput)
}

func (o AnalysisTargetVisualOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTargetVisualOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTargetVisualOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTargetVisualOptionsInput is an input type that accepts values of the AnalysisTargetVisualOptions enum
// A concrete instance of `AnalysisTargetVisualOptionsInput` can be one of the following:
//
//	AnalysisTargetVisualOptionsAllVisuals
type AnalysisTargetVisualOptionsInput interface {
	pulumi.Input

	ToAnalysisTargetVisualOptionsOutput() AnalysisTargetVisualOptionsOutput
	ToAnalysisTargetVisualOptionsOutputWithContext(context.Context) AnalysisTargetVisualOptionsOutput
}

var analysisTargetVisualOptionsPtrType = reflect.TypeOf((**AnalysisTargetVisualOptions)(nil)).Elem()

type AnalysisTargetVisualOptionsPtrInput interface {
	pulumi.Input

	ToAnalysisTargetVisualOptionsPtrOutput() AnalysisTargetVisualOptionsPtrOutput
	ToAnalysisTargetVisualOptionsPtrOutputWithContext(context.Context) AnalysisTargetVisualOptionsPtrOutput
}

type analysisTargetVisualOptionsPtr string

func AnalysisTargetVisualOptionsPtr(v string) AnalysisTargetVisualOptionsPtrInput {
	return (*analysisTargetVisualOptionsPtr)(&v)
}

func (*analysisTargetVisualOptionsPtr) ElementType() reflect.Type {
	return analysisTargetVisualOptionsPtrType
}

func (in *analysisTargetVisualOptionsPtr) ToAnalysisTargetVisualOptionsPtrOutput() AnalysisTargetVisualOptionsPtrOutput {
	return pulumi.ToOutput(in).(AnalysisTargetVisualOptionsPtrOutput)
}

func (in *analysisTargetVisualOptionsPtr) ToAnalysisTargetVisualOptionsPtrOutputWithContext(ctx context.Context) AnalysisTargetVisualOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTargetVisualOptionsPtrOutput)
}

type AnalysisTextWrap string

const (
	AnalysisTextWrapNone = AnalysisTextWrap("NONE")
	AnalysisTextWrapWrap = AnalysisTextWrap("WRAP")
)

func (AnalysisTextWrap) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTextWrap)(nil)).Elem()
}

func (e AnalysisTextWrap) ToAnalysisTextWrapOutput() AnalysisTextWrapOutput {
	return pulumi.ToOutput(e).(AnalysisTextWrapOutput)
}

func (e AnalysisTextWrap) ToAnalysisTextWrapOutputWithContext(ctx context.Context) AnalysisTextWrapOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTextWrapOutput)
}

func (e AnalysisTextWrap) ToAnalysisTextWrapPtrOutput() AnalysisTextWrapPtrOutput {
	return e.ToAnalysisTextWrapPtrOutputWithContext(context.Background())
}

func (e AnalysisTextWrap) ToAnalysisTextWrapPtrOutputWithContext(ctx context.Context) AnalysisTextWrapPtrOutput {
	return AnalysisTextWrap(e).ToAnalysisTextWrapOutputWithContext(ctx).ToAnalysisTextWrapPtrOutputWithContext(ctx)
}

func (e AnalysisTextWrap) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTextWrap) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTextWrap) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTextWrap) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTextWrapOutput struct{ *pulumi.OutputState }

func (AnalysisTextWrapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTextWrap)(nil)).Elem()
}

func (o AnalysisTextWrapOutput) ToAnalysisTextWrapOutput() AnalysisTextWrapOutput {
	return o
}

func (o AnalysisTextWrapOutput) ToAnalysisTextWrapOutputWithContext(ctx context.Context) AnalysisTextWrapOutput {
	return o
}

func (o AnalysisTextWrapOutput) ToAnalysisTextWrapPtrOutput() AnalysisTextWrapPtrOutput {
	return o.ToAnalysisTextWrapPtrOutputWithContext(context.Background())
}

func (o AnalysisTextWrapOutput) ToAnalysisTextWrapPtrOutputWithContext(ctx context.Context) AnalysisTextWrapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTextWrap) *AnalysisTextWrap {
		return &v
	}).(AnalysisTextWrapPtrOutput)
}

func (o AnalysisTextWrapOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTextWrapOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTextWrap) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTextWrapOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTextWrapOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTextWrap) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTextWrapPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTextWrapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTextWrap)(nil)).Elem()
}

func (o AnalysisTextWrapPtrOutput) ToAnalysisTextWrapPtrOutput() AnalysisTextWrapPtrOutput {
	return o
}

func (o AnalysisTextWrapPtrOutput) ToAnalysisTextWrapPtrOutputWithContext(ctx context.Context) AnalysisTextWrapPtrOutput {
	return o
}

func (o AnalysisTextWrapPtrOutput) Elem() AnalysisTextWrapOutput {
	return o.ApplyT(func(v *AnalysisTextWrap) AnalysisTextWrap {
		if v != nil {
			return *v
		}
		var ret AnalysisTextWrap
		return ret
	}).(AnalysisTextWrapOutput)
}

func (o AnalysisTextWrapPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTextWrapPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTextWrap) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTextWrapInput is an input type that accepts values of the AnalysisTextWrap enum
// A concrete instance of `AnalysisTextWrapInput` can be one of the following:
//
//	AnalysisTextWrapNone
//	AnalysisTextWrapWrap
type AnalysisTextWrapInput interface {
	pulumi.Input

	ToAnalysisTextWrapOutput() AnalysisTextWrapOutput
	ToAnalysisTextWrapOutputWithContext(context.Context) AnalysisTextWrapOutput
}

var analysisTextWrapPtrType = reflect.TypeOf((**AnalysisTextWrap)(nil)).Elem()

type AnalysisTextWrapPtrInput interface {
	pulumi.Input

	ToAnalysisTextWrapPtrOutput() AnalysisTextWrapPtrOutput
	ToAnalysisTextWrapPtrOutputWithContext(context.Context) AnalysisTextWrapPtrOutput
}

type analysisTextWrapPtr string

func AnalysisTextWrapPtr(v string) AnalysisTextWrapPtrInput {
	return (*analysisTextWrapPtr)(&v)
}

func (*analysisTextWrapPtr) ElementType() reflect.Type {
	return analysisTextWrapPtrType
}

func (in *analysisTextWrapPtr) ToAnalysisTextWrapPtrOutput() AnalysisTextWrapPtrOutput {
	return pulumi.ToOutput(in).(AnalysisTextWrapPtrOutput)
}

func (in *analysisTextWrapPtr) ToAnalysisTextWrapPtrOutputWithContext(ctx context.Context) AnalysisTextWrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTextWrapPtrOutput)
}

type AnalysisTimeGranularity string

const (
	AnalysisTimeGranularityYear        = AnalysisTimeGranularity("YEAR")
	AnalysisTimeGranularityQuarter     = AnalysisTimeGranularity("QUARTER")
	AnalysisTimeGranularityMonth       = AnalysisTimeGranularity("MONTH")
	AnalysisTimeGranularityWeek        = AnalysisTimeGranularity("WEEK")
	AnalysisTimeGranularityDay         = AnalysisTimeGranularity("DAY")
	AnalysisTimeGranularityHour        = AnalysisTimeGranularity("HOUR")
	AnalysisTimeGranularityMinute      = AnalysisTimeGranularity("MINUTE")
	AnalysisTimeGranularitySecond      = AnalysisTimeGranularity("SECOND")
	AnalysisTimeGranularityMillisecond = AnalysisTimeGranularity("MILLISECOND")
)

func (AnalysisTimeGranularity) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeGranularity)(nil)).Elem()
}

func (e AnalysisTimeGranularity) ToAnalysisTimeGranularityOutput() AnalysisTimeGranularityOutput {
	return pulumi.ToOutput(e).(AnalysisTimeGranularityOutput)
}

func (e AnalysisTimeGranularity) ToAnalysisTimeGranularityOutputWithContext(ctx context.Context) AnalysisTimeGranularityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTimeGranularityOutput)
}

func (e AnalysisTimeGranularity) ToAnalysisTimeGranularityPtrOutput() AnalysisTimeGranularityPtrOutput {
	return e.ToAnalysisTimeGranularityPtrOutputWithContext(context.Background())
}

func (e AnalysisTimeGranularity) ToAnalysisTimeGranularityPtrOutputWithContext(ctx context.Context) AnalysisTimeGranularityPtrOutput {
	return AnalysisTimeGranularity(e).ToAnalysisTimeGranularityOutputWithContext(ctx).ToAnalysisTimeGranularityPtrOutputWithContext(ctx)
}

func (e AnalysisTimeGranularity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTimeGranularity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTimeGranularity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTimeGranularity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTimeGranularityOutput struct{ *pulumi.OutputState }

func (AnalysisTimeGranularityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTimeGranularity)(nil)).Elem()
}

func (o AnalysisTimeGranularityOutput) ToAnalysisTimeGranularityOutput() AnalysisTimeGranularityOutput {
	return o
}

func (o AnalysisTimeGranularityOutput) ToAnalysisTimeGranularityOutputWithContext(ctx context.Context) AnalysisTimeGranularityOutput {
	return o
}

func (o AnalysisTimeGranularityOutput) ToAnalysisTimeGranularityPtrOutput() AnalysisTimeGranularityPtrOutput {
	return o.ToAnalysisTimeGranularityPtrOutputWithContext(context.Background())
}

func (o AnalysisTimeGranularityOutput) ToAnalysisTimeGranularityPtrOutputWithContext(ctx context.Context) AnalysisTimeGranularityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTimeGranularity) *AnalysisTimeGranularity {
		return &v
	}).(AnalysisTimeGranularityPtrOutput)
}

func (o AnalysisTimeGranularityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTimeGranularityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTimeGranularity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTimeGranularityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTimeGranularityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTimeGranularity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTimeGranularityPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTimeGranularityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTimeGranularity)(nil)).Elem()
}

func (o AnalysisTimeGranularityPtrOutput) ToAnalysisTimeGranularityPtrOutput() AnalysisTimeGranularityPtrOutput {
	return o
}

func (o AnalysisTimeGranularityPtrOutput) ToAnalysisTimeGranularityPtrOutputWithContext(ctx context.Context) AnalysisTimeGranularityPtrOutput {
	return o
}

func (o AnalysisTimeGranularityPtrOutput) Elem() AnalysisTimeGranularityOutput {
	return o.ApplyT(func(v *AnalysisTimeGranularity) AnalysisTimeGranularity {
		if v != nil {
			return *v
		}
		var ret AnalysisTimeGranularity
		return ret
	}).(AnalysisTimeGranularityOutput)
}

func (o AnalysisTimeGranularityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTimeGranularityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTimeGranularity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTimeGranularityInput is an input type that accepts values of the AnalysisTimeGranularity enum
// A concrete instance of `AnalysisTimeGranularityInput` can be one of the following:
//
//	AnalysisTimeGranularityYear
//	AnalysisTimeGranularityQuarter
//	AnalysisTimeGranularityMonth
//	AnalysisTimeGranularityWeek
//	AnalysisTimeGranularityDay
//	AnalysisTimeGranularityHour
//	AnalysisTimeGranularityMinute
//	AnalysisTimeGranularitySecond
//	AnalysisTimeGranularityMillisecond
type AnalysisTimeGranularityInput interface {
	pulumi.Input

	ToAnalysisTimeGranularityOutput() AnalysisTimeGranularityOutput
	ToAnalysisTimeGranularityOutputWithContext(context.Context) AnalysisTimeGranularityOutput
}

var analysisTimeGranularityPtrType = reflect.TypeOf((**AnalysisTimeGranularity)(nil)).Elem()

type AnalysisTimeGranularityPtrInput interface {
	pulumi.Input

	ToAnalysisTimeGranularityPtrOutput() AnalysisTimeGranularityPtrOutput
	ToAnalysisTimeGranularityPtrOutputWithContext(context.Context) AnalysisTimeGranularityPtrOutput
}

type analysisTimeGranularityPtr string

func AnalysisTimeGranularityPtr(v string) AnalysisTimeGranularityPtrInput {
	return (*analysisTimeGranularityPtr)(&v)
}

func (*analysisTimeGranularityPtr) ElementType() reflect.Type {
	return analysisTimeGranularityPtrType
}

func (in *analysisTimeGranularityPtr) ToAnalysisTimeGranularityPtrOutput() AnalysisTimeGranularityPtrOutput {
	return pulumi.ToOutput(in).(AnalysisTimeGranularityPtrOutput)
}

func (in *analysisTimeGranularityPtr) ToAnalysisTimeGranularityPtrOutputWithContext(ctx context.Context) AnalysisTimeGranularityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTimeGranularityPtrOutput)
}

type AnalysisTooltipTitleType string

const (
	AnalysisTooltipTitleTypeNone         = AnalysisTooltipTitleType("NONE")
	AnalysisTooltipTitleTypePrimaryValue = AnalysisTooltipTitleType("PRIMARY_VALUE")
)

func (AnalysisTooltipTitleType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTooltipTitleType)(nil)).Elem()
}

func (e AnalysisTooltipTitleType) ToAnalysisTooltipTitleTypeOutput() AnalysisTooltipTitleTypeOutput {
	return pulumi.ToOutput(e).(AnalysisTooltipTitleTypeOutput)
}

func (e AnalysisTooltipTitleType) ToAnalysisTooltipTitleTypeOutputWithContext(ctx context.Context) AnalysisTooltipTitleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTooltipTitleTypeOutput)
}

func (e AnalysisTooltipTitleType) ToAnalysisTooltipTitleTypePtrOutput() AnalysisTooltipTitleTypePtrOutput {
	return e.ToAnalysisTooltipTitleTypePtrOutputWithContext(context.Background())
}

func (e AnalysisTooltipTitleType) ToAnalysisTooltipTitleTypePtrOutputWithContext(ctx context.Context) AnalysisTooltipTitleTypePtrOutput {
	return AnalysisTooltipTitleType(e).ToAnalysisTooltipTitleTypeOutputWithContext(ctx).ToAnalysisTooltipTitleTypePtrOutputWithContext(ctx)
}

func (e AnalysisTooltipTitleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTooltipTitleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTooltipTitleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTooltipTitleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTooltipTitleTypeOutput struct{ *pulumi.OutputState }

func (AnalysisTooltipTitleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTooltipTitleType)(nil)).Elem()
}

func (o AnalysisTooltipTitleTypeOutput) ToAnalysisTooltipTitleTypeOutput() AnalysisTooltipTitleTypeOutput {
	return o
}

func (o AnalysisTooltipTitleTypeOutput) ToAnalysisTooltipTitleTypeOutputWithContext(ctx context.Context) AnalysisTooltipTitleTypeOutput {
	return o
}

func (o AnalysisTooltipTitleTypeOutput) ToAnalysisTooltipTitleTypePtrOutput() AnalysisTooltipTitleTypePtrOutput {
	return o.ToAnalysisTooltipTitleTypePtrOutputWithContext(context.Background())
}

func (o AnalysisTooltipTitleTypeOutput) ToAnalysisTooltipTitleTypePtrOutputWithContext(ctx context.Context) AnalysisTooltipTitleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTooltipTitleType) *AnalysisTooltipTitleType {
		return &v
	}).(AnalysisTooltipTitleTypePtrOutput)
}

func (o AnalysisTooltipTitleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTooltipTitleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTooltipTitleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTooltipTitleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTooltipTitleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTooltipTitleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTooltipTitleTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisTooltipTitleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTooltipTitleType)(nil)).Elem()
}

func (o AnalysisTooltipTitleTypePtrOutput) ToAnalysisTooltipTitleTypePtrOutput() AnalysisTooltipTitleTypePtrOutput {
	return o
}

func (o AnalysisTooltipTitleTypePtrOutput) ToAnalysisTooltipTitleTypePtrOutputWithContext(ctx context.Context) AnalysisTooltipTitleTypePtrOutput {
	return o
}

func (o AnalysisTooltipTitleTypePtrOutput) Elem() AnalysisTooltipTitleTypeOutput {
	return o.ApplyT(func(v *AnalysisTooltipTitleType) AnalysisTooltipTitleType {
		if v != nil {
			return *v
		}
		var ret AnalysisTooltipTitleType
		return ret
	}).(AnalysisTooltipTitleTypeOutput)
}

func (o AnalysisTooltipTitleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTooltipTitleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTooltipTitleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTooltipTitleTypeInput is an input type that accepts values of the AnalysisTooltipTitleType enum
// A concrete instance of `AnalysisTooltipTitleTypeInput` can be one of the following:
//
//	AnalysisTooltipTitleTypeNone
//	AnalysisTooltipTitleTypePrimaryValue
type AnalysisTooltipTitleTypeInput interface {
	pulumi.Input

	ToAnalysisTooltipTitleTypeOutput() AnalysisTooltipTitleTypeOutput
	ToAnalysisTooltipTitleTypeOutputWithContext(context.Context) AnalysisTooltipTitleTypeOutput
}

var analysisTooltipTitleTypePtrType = reflect.TypeOf((**AnalysisTooltipTitleType)(nil)).Elem()

type AnalysisTooltipTitleTypePtrInput interface {
	pulumi.Input

	ToAnalysisTooltipTitleTypePtrOutput() AnalysisTooltipTitleTypePtrOutput
	ToAnalysisTooltipTitleTypePtrOutputWithContext(context.Context) AnalysisTooltipTitleTypePtrOutput
}

type analysisTooltipTitleTypePtr string

func AnalysisTooltipTitleTypePtr(v string) AnalysisTooltipTitleTypePtrInput {
	return (*analysisTooltipTitleTypePtr)(&v)
}

func (*analysisTooltipTitleTypePtr) ElementType() reflect.Type {
	return analysisTooltipTitleTypePtrType
}

func (in *analysisTooltipTitleTypePtr) ToAnalysisTooltipTitleTypePtrOutput() AnalysisTooltipTitleTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisTooltipTitleTypePtrOutput)
}

func (in *analysisTooltipTitleTypePtr) ToAnalysisTooltipTitleTypePtrOutputWithContext(ctx context.Context) AnalysisTooltipTitleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTooltipTitleTypePtrOutput)
}

type AnalysisTopBottomComputationType string

const (
	AnalysisTopBottomComputationTypeTop    = AnalysisTopBottomComputationType("TOP")
	AnalysisTopBottomComputationTypeBottom = AnalysisTopBottomComputationType("BOTTOM")
)

func (AnalysisTopBottomComputationType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTopBottomComputationType)(nil)).Elem()
}

func (e AnalysisTopBottomComputationType) ToAnalysisTopBottomComputationTypeOutput() AnalysisTopBottomComputationTypeOutput {
	return pulumi.ToOutput(e).(AnalysisTopBottomComputationTypeOutput)
}

func (e AnalysisTopBottomComputationType) ToAnalysisTopBottomComputationTypeOutputWithContext(ctx context.Context) AnalysisTopBottomComputationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTopBottomComputationTypeOutput)
}

func (e AnalysisTopBottomComputationType) ToAnalysisTopBottomComputationTypePtrOutput() AnalysisTopBottomComputationTypePtrOutput {
	return e.ToAnalysisTopBottomComputationTypePtrOutputWithContext(context.Background())
}

func (e AnalysisTopBottomComputationType) ToAnalysisTopBottomComputationTypePtrOutputWithContext(ctx context.Context) AnalysisTopBottomComputationTypePtrOutput {
	return AnalysisTopBottomComputationType(e).ToAnalysisTopBottomComputationTypeOutputWithContext(ctx).ToAnalysisTopBottomComputationTypePtrOutputWithContext(ctx)
}

func (e AnalysisTopBottomComputationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTopBottomComputationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTopBottomComputationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTopBottomComputationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTopBottomComputationTypeOutput struct{ *pulumi.OutputState }

func (AnalysisTopBottomComputationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTopBottomComputationType)(nil)).Elem()
}

func (o AnalysisTopBottomComputationTypeOutput) ToAnalysisTopBottomComputationTypeOutput() AnalysisTopBottomComputationTypeOutput {
	return o
}

func (o AnalysisTopBottomComputationTypeOutput) ToAnalysisTopBottomComputationTypeOutputWithContext(ctx context.Context) AnalysisTopBottomComputationTypeOutput {
	return o
}

func (o AnalysisTopBottomComputationTypeOutput) ToAnalysisTopBottomComputationTypePtrOutput() AnalysisTopBottomComputationTypePtrOutput {
	return o.ToAnalysisTopBottomComputationTypePtrOutputWithContext(context.Background())
}

func (o AnalysisTopBottomComputationTypeOutput) ToAnalysisTopBottomComputationTypePtrOutputWithContext(ctx context.Context) AnalysisTopBottomComputationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTopBottomComputationType) *AnalysisTopBottomComputationType {
		return &v
	}).(AnalysisTopBottomComputationTypePtrOutput)
}

func (o AnalysisTopBottomComputationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTopBottomComputationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTopBottomComputationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTopBottomComputationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTopBottomComputationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTopBottomComputationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTopBottomComputationTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisTopBottomComputationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTopBottomComputationType)(nil)).Elem()
}

func (o AnalysisTopBottomComputationTypePtrOutput) ToAnalysisTopBottomComputationTypePtrOutput() AnalysisTopBottomComputationTypePtrOutput {
	return o
}

func (o AnalysisTopBottomComputationTypePtrOutput) ToAnalysisTopBottomComputationTypePtrOutputWithContext(ctx context.Context) AnalysisTopBottomComputationTypePtrOutput {
	return o
}

func (o AnalysisTopBottomComputationTypePtrOutput) Elem() AnalysisTopBottomComputationTypeOutput {
	return o.ApplyT(func(v *AnalysisTopBottomComputationType) AnalysisTopBottomComputationType {
		if v != nil {
			return *v
		}
		var ret AnalysisTopBottomComputationType
		return ret
	}).(AnalysisTopBottomComputationTypeOutput)
}

func (o AnalysisTopBottomComputationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTopBottomComputationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTopBottomComputationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTopBottomComputationTypeInput is an input type that accepts values of the AnalysisTopBottomComputationType enum
// A concrete instance of `AnalysisTopBottomComputationTypeInput` can be one of the following:
//
//	AnalysisTopBottomComputationTypeTop
//	AnalysisTopBottomComputationTypeBottom
type AnalysisTopBottomComputationTypeInput interface {
	pulumi.Input

	ToAnalysisTopBottomComputationTypeOutput() AnalysisTopBottomComputationTypeOutput
	ToAnalysisTopBottomComputationTypeOutputWithContext(context.Context) AnalysisTopBottomComputationTypeOutput
}

var analysisTopBottomComputationTypePtrType = reflect.TypeOf((**AnalysisTopBottomComputationType)(nil)).Elem()

type AnalysisTopBottomComputationTypePtrInput interface {
	pulumi.Input

	ToAnalysisTopBottomComputationTypePtrOutput() AnalysisTopBottomComputationTypePtrOutput
	ToAnalysisTopBottomComputationTypePtrOutputWithContext(context.Context) AnalysisTopBottomComputationTypePtrOutput
}

type analysisTopBottomComputationTypePtr string

func AnalysisTopBottomComputationTypePtr(v string) AnalysisTopBottomComputationTypePtrInput {
	return (*analysisTopBottomComputationTypePtr)(&v)
}

func (*analysisTopBottomComputationTypePtr) ElementType() reflect.Type {
	return analysisTopBottomComputationTypePtrType
}

func (in *analysisTopBottomComputationTypePtr) ToAnalysisTopBottomComputationTypePtrOutput() AnalysisTopBottomComputationTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisTopBottomComputationTypePtrOutput)
}

func (in *analysisTopBottomComputationTypePtr) ToAnalysisTopBottomComputationTypePtrOutputWithContext(ctx context.Context) AnalysisTopBottomComputationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTopBottomComputationTypePtrOutput)
}

type AnalysisTopBottomSortOrder string

const (
	AnalysisTopBottomSortOrderPercentDifference  = AnalysisTopBottomSortOrder("PERCENT_DIFFERENCE")
	AnalysisTopBottomSortOrderAbsoluteDifference = AnalysisTopBottomSortOrder("ABSOLUTE_DIFFERENCE")
)

func (AnalysisTopBottomSortOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTopBottomSortOrder)(nil)).Elem()
}

func (e AnalysisTopBottomSortOrder) ToAnalysisTopBottomSortOrderOutput() AnalysisTopBottomSortOrderOutput {
	return pulumi.ToOutput(e).(AnalysisTopBottomSortOrderOutput)
}

func (e AnalysisTopBottomSortOrder) ToAnalysisTopBottomSortOrderOutputWithContext(ctx context.Context) AnalysisTopBottomSortOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisTopBottomSortOrderOutput)
}

func (e AnalysisTopBottomSortOrder) ToAnalysisTopBottomSortOrderPtrOutput() AnalysisTopBottomSortOrderPtrOutput {
	return e.ToAnalysisTopBottomSortOrderPtrOutputWithContext(context.Background())
}

func (e AnalysisTopBottomSortOrder) ToAnalysisTopBottomSortOrderPtrOutputWithContext(ctx context.Context) AnalysisTopBottomSortOrderPtrOutput {
	return AnalysisTopBottomSortOrder(e).ToAnalysisTopBottomSortOrderOutputWithContext(ctx).ToAnalysisTopBottomSortOrderPtrOutputWithContext(ctx)
}

func (e AnalysisTopBottomSortOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTopBottomSortOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisTopBottomSortOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisTopBottomSortOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisTopBottomSortOrderOutput struct{ *pulumi.OutputState }

func (AnalysisTopBottomSortOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisTopBottomSortOrder)(nil)).Elem()
}

func (o AnalysisTopBottomSortOrderOutput) ToAnalysisTopBottomSortOrderOutput() AnalysisTopBottomSortOrderOutput {
	return o
}

func (o AnalysisTopBottomSortOrderOutput) ToAnalysisTopBottomSortOrderOutputWithContext(ctx context.Context) AnalysisTopBottomSortOrderOutput {
	return o
}

func (o AnalysisTopBottomSortOrderOutput) ToAnalysisTopBottomSortOrderPtrOutput() AnalysisTopBottomSortOrderPtrOutput {
	return o.ToAnalysisTopBottomSortOrderPtrOutputWithContext(context.Background())
}

func (o AnalysisTopBottomSortOrderOutput) ToAnalysisTopBottomSortOrderPtrOutputWithContext(ctx context.Context) AnalysisTopBottomSortOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisTopBottomSortOrder) *AnalysisTopBottomSortOrder {
		return &v
	}).(AnalysisTopBottomSortOrderPtrOutput)
}

func (o AnalysisTopBottomSortOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisTopBottomSortOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTopBottomSortOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisTopBottomSortOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTopBottomSortOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisTopBottomSortOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisTopBottomSortOrderPtrOutput struct{ *pulumi.OutputState }

func (AnalysisTopBottomSortOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisTopBottomSortOrder)(nil)).Elem()
}

func (o AnalysisTopBottomSortOrderPtrOutput) ToAnalysisTopBottomSortOrderPtrOutput() AnalysisTopBottomSortOrderPtrOutput {
	return o
}

func (o AnalysisTopBottomSortOrderPtrOutput) ToAnalysisTopBottomSortOrderPtrOutputWithContext(ctx context.Context) AnalysisTopBottomSortOrderPtrOutput {
	return o
}

func (o AnalysisTopBottomSortOrderPtrOutput) Elem() AnalysisTopBottomSortOrderOutput {
	return o.ApplyT(func(v *AnalysisTopBottomSortOrder) AnalysisTopBottomSortOrder {
		if v != nil {
			return *v
		}
		var ret AnalysisTopBottomSortOrder
		return ret
	}).(AnalysisTopBottomSortOrderOutput)
}

func (o AnalysisTopBottomSortOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisTopBottomSortOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisTopBottomSortOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisTopBottomSortOrderInput is an input type that accepts values of the AnalysisTopBottomSortOrder enum
// A concrete instance of `AnalysisTopBottomSortOrderInput` can be one of the following:
//
//	AnalysisTopBottomSortOrderPercentDifference
//	AnalysisTopBottomSortOrderAbsoluteDifference
type AnalysisTopBottomSortOrderInput interface {
	pulumi.Input

	ToAnalysisTopBottomSortOrderOutput() AnalysisTopBottomSortOrderOutput
	ToAnalysisTopBottomSortOrderOutputWithContext(context.Context) AnalysisTopBottomSortOrderOutput
}

var analysisTopBottomSortOrderPtrType = reflect.TypeOf((**AnalysisTopBottomSortOrder)(nil)).Elem()

type AnalysisTopBottomSortOrderPtrInput interface {
	pulumi.Input

	ToAnalysisTopBottomSortOrderPtrOutput() AnalysisTopBottomSortOrderPtrOutput
	ToAnalysisTopBottomSortOrderPtrOutputWithContext(context.Context) AnalysisTopBottomSortOrderPtrOutput
}

type analysisTopBottomSortOrderPtr string

func AnalysisTopBottomSortOrderPtr(v string) AnalysisTopBottomSortOrderPtrInput {
	return (*analysisTopBottomSortOrderPtr)(&v)
}

func (*analysisTopBottomSortOrderPtr) ElementType() reflect.Type {
	return analysisTopBottomSortOrderPtrType
}

func (in *analysisTopBottomSortOrderPtr) ToAnalysisTopBottomSortOrderPtrOutput() AnalysisTopBottomSortOrderPtrOutput {
	return pulumi.ToOutput(in).(AnalysisTopBottomSortOrderPtrOutput)
}

func (in *analysisTopBottomSortOrderPtr) ToAnalysisTopBottomSortOrderPtrOutputWithContext(ctx context.Context) AnalysisTopBottomSortOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisTopBottomSortOrderPtrOutput)
}

type AnalysisUrlTargetConfiguration string

const (
	AnalysisUrlTargetConfigurationNewTab    = AnalysisUrlTargetConfiguration("NEW_TAB")
	AnalysisUrlTargetConfigurationNewWindow = AnalysisUrlTargetConfiguration("NEW_WINDOW")
	AnalysisUrlTargetConfigurationSameTab   = AnalysisUrlTargetConfiguration("SAME_TAB")
)

func (AnalysisUrlTargetConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisUrlTargetConfiguration)(nil)).Elem()
}

func (e AnalysisUrlTargetConfiguration) ToAnalysisUrlTargetConfigurationOutput() AnalysisUrlTargetConfigurationOutput {
	return pulumi.ToOutput(e).(AnalysisUrlTargetConfigurationOutput)
}

func (e AnalysisUrlTargetConfiguration) ToAnalysisUrlTargetConfigurationOutputWithContext(ctx context.Context) AnalysisUrlTargetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisUrlTargetConfigurationOutput)
}

func (e AnalysisUrlTargetConfiguration) ToAnalysisUrlTargetConfigurationPtrOutput() AnalysisUrlTargetConfigurationPtrOutput {
	return e.ToAnalysisUrlTargetConfigurationPtrOutputWithContext(context.Background())
}

func (e AnalysisUrlTargetConfiguration) ToAnalysisUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisUrlTargetConfigurationPtrOutput {
	return AnalysisUrlTargetConfiguration(e).ToAnalysisUrlTargetConfigurationOutputWithContext(ctx).ToAnalysisUrlTargetConfigurationPtrOutputWithContext(ctx)
}

func (e AnalysisUrlTargetConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisUrlTargetConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisUrlTargetConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisUrlTargetConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisUrlTargetConfigurationOutput struct{ *pulumi.OutputState }

func (AnalysisUrlTargetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisUrlTargetConfiguration)(nil)).Elem()
}

func (o AnalysisUrlTargetConfigurationOutput) ToAnalysisUrlTargetConfigurationOutput() AnalysisUrlTargetConfigurationOutput {
	return o
}

func (o AnalysisUrlTargetConfigurationOutput) ToAnalysisUrlTargetConfigurationOutputWithContext(ctx context.Context) AnalysisUrlTargetConfigurationOutput {
	return o
}

func (o AnalysisUrlTargetConfigurationOutput) ToAnalysisUrlTargetConfigurationPtrOutput() AnalysisUrlTargetConfigurationPtrOutput {
	return o.ToAnalysisUrlTargetConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalysisUrlTargetConfigurationOutput) ToAnalysisUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisUrlTargetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisUrlTargetConfiguration) *AnalysisUrlTargetConfiguration {
		return &v
	}).(AnalysisUrlTargetConfigurationPtrOutput)
}

func (o AnalysisUrlTargetConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisUrlTargetConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisUrlTargetConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisUrlTargetConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisUrlTargetConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisUrlTargetConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisUrlTargetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisUrlTargetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisUrlTargetConfiguration)(nil)).Elem()
}

func (o AnalysisUrlTargetConfigurationPtrOutput) ToAnalysisUrlTargetConfigurationPtrOutput() AnalysisUrlTargetConfigurationPtrOutput {
	return o
}

func (o AnalysisUrlTargetConfigurationPtrOutput) ToAnalysisUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisUrlTargetConfigurationPtrOutput {
	return o
}

func (o AnalysisUrlTargetConfigurationPtrOutput) Elem() AnalysisUrlTargetConfigurationOutput {
	return o.ApplyT(func(v *AnalysisUrlTargetConfiguration) AnalysisUrlTargetConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalysisUrlTargetConfiguration
		return ret
	}).(AnalysisUrlTargetConfigurationOutput)
}

func (o AnalysisUrlTargetConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisUrlTargetConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisUrlTargetConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisUrlTargetConfigurationInput is an input type that accepts values of the AnalysisUrlTargetConfiguration enum
// A concrete instance of `AnalysisUrlTargetConfigurationInput` can be one of the following:
//
//	AnalysisUrlTargetConfigurationNewTab
//	AnalysisUrlTargetConfigurationNewWindow
//	AnalysisUrlTargetConfigurationSameTab
type AnalysisUrlTargetConfigurationInput interface {
	pulumi.Input

	ToAnalysisUrlTargetConfigurationOutput() AnalysisUrlTargetConfigurationOutput
	ToAnalysisUrlTargetConfigurationOutputWithContext(context.Context) AnalysisUrlTargetConfigurationOutput
}

var analysisUrlTargetConfigurationPtrType = reflect.TypeOf((**AnalysisUrlTargetConfiguration)(nil)).Elem()

type AnalysisUrlTargetConfigurationPtrInput interface {
	pulumi.Input

	ToAnalysisUrlTargetConfigurationPtrOutput() AnalysisUrlTargetConfigurationPtrOutput
	ToAnalysisUrlTargetConfigurationPtrOutputWithContext(context.Context) AnalysisUrlTargetConfigurationPtrOutput
}

type analysisUrlTargetConfigurationPtr string

func AnalysisUrlTargetConfigurationPtr(v string) AnalysisUrlTargetConfigurationPtrInput {
	return (*analysisUrlTargetConfigurationPtr)(&v)
}

func (*analysisUrlTargetConfigurationPtr) ElementType() reflect.Type {
	return analysisUrlTargetConfigurationPtrType
}

func (in *analysisUrlTargetConfigurationPtr) ToAnalysisUrlTargetConfigurationPtrOutput() AnalysisUrlTargetConfigurationPtrOutput {
	return pulumi.ToOutput(in).(AnalysisUrlTargetConfigurationPtrOutput)
}

func (in *analysisUrlTargetConfigurationPtr) ToAnalysisUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) AnalysisUrlTargetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisUrlTargetConfigurationPtrOutput)
}

type AnalysisValidationStrategyMode string

const (
	AnalysisValidationStrategyModeStrict  = AnalysisValidationStrategyMode("STRICT")
	AnalysisValidationStrategyModeLenient = AnalysisValidationStrategyMode("LENIENT")
)

func (AnalysisValidationStrategyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisValidationStrategyMode)(nil)).Elem()
}

func (e AnalysisValidationStrategyMode) ToAnalysisValidationStrategyModeOutput() AnalysisValidationStrategyModeOutput {
	return pulumi.ToOutput(e).(AnalysisValidationStrategyModeOutput)
}

func (e AnalysisValidationStrategyMode) ToAnalysisValidationStrategyModeOutputWithContext(ctx context.Context) AnalysisValidationStrategyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisValidationStrategyModeOutput)
}

func (e AnalysisValidationStrategyMode) ToAnalysisValidationStrategyModePtrOutput() AnalysisValidationStrategyModePtrOutput {
	return e.ToAnalysisValidationStrategyModePtrOutputWithContext(context.Background())
}

func (e AnalysisValidationStrategyMode) ToAnalysisValidationStrategyModePtrOutputWithContext(ctx context.Context) AnalysisValidationStrategyModePtrOutput {
	return AnalysisValidationStrategyMode(e).ToAnalysisValidationStrategyModeOutputWithContext(ctx).ToAnalysisValidationStrategyModePtrOutputWithContext(ctx)
}

func (e AnalysisValidationStrategyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisValidationStrategyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisValidationStrategyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisValidationStrategyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisValidationStrategyModeOutput struct{ *pulumi.OutputState }

func (AnalysisValidationStrategyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisValidationStrategyMode)(nil)).Elem()
}

func (o AnalysisValidationStrategyModeOutput) ToAnalysisValidationStrategyModeOutput() AnalysisValidationStrategyModeOutput {
	return o
}

func (o AnalysisValidationStrategyModeOutput) ToAnalysisValidationStrategyModeOutputWithContext(ctx context.Context) AnalysisValidationStrategyModeOutput {
	return o
}

func (o AnalysisValidationStrategyModeOutput) ToAnalysisValidationStrategyModePtrOutput() AnalysisValidationStrategyModePtrOutput {
	return o.ToAnalysisValidationStrategyModePtrOutputWithContext(context.Background())
}

func (o AnalysisValidationStrategyModeOutput) ToAnalysisValidationStrategyModePtrOutputWithContext(ctx context.Context) AnalysisValidationStrategyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisValidationStrategyMode) *AnalysisValidationStrategyMode {
		return &v
	}).(AnalysisValidationStrategyModePtrOutput)
}

func (o AnalysisValidationStrategyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisValidationStrategyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisValidationStrategyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisValidationStrategyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisValidationStrategyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisValidationStrategyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisValidationStrategyModePtrOutput struct{ *pulumi.OutputState }

func (AnalysisValidationStrategyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisValidationStrategyMode)(nil)).Elem()
}

func (o AnalysisValidationStrategyModePtrOutput) ToAnalysisValidationStrategyModePtrOutput() AnalysisValidationStrategyModePtrOutput {
	return o
}

func (o AnalysisValidationStrategyModePtrOutput) ToAnalysisValidationStrategyModePtrOutputWithContext(ctx context.Context) AnalysisValidationStrategyModePtrOutput {
	return o
}

func (o AnalysisValidationStrategyModePtrOutput) Elem() AnalysisValidationStrategyModeOutput {
	return o.ApplyT(func(v *AnalysisValidationStrategyMode) AnalysisValidationStrategyMode {
		if v != nil {
			return *v
		}
		var ret AnalysisValidationStrategyMode
		return ret
	}).(AnalysisValidationStrategyModeOutput)
}

func (o AnalysisValidationStrategyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisValidationStrategyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisValidationStrategyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisValidationStrategyModeInput is an input type that accepts values of the AnalysisValidationStrategyMode enum
// A concrete instance of `AnalysisValidationStrategyModeInput` can be one of the following:
//
//	AnalysisValidationStrategyModeStrict
//	AnalysisValidationStrategyModeLenient
type AnalysisValidationStrategyModeInput interface {
	pulumi.Input

	ToAnalysisValidationStrategyModeOutput() AnalysisValidationStrategyModeOutput
	ToAnalysisValidationStrategyModeOutputWithContext(context.Context) AnalysisValidationStrategyModeOutput
}

var analysisValidationStrategyModePtrType = reflect.TypeOf((**AnalysisValidationStrategyMode)(nil)).Elem()

type AnalysisValidationStrategyModePtrInput interface {
	pulumi.Input

	ToAnalysisValidationStrategyModePtrOutput() AnalysisValidationStrategyModePtrOutput
	ToAnalysisValidationStrategyModePtrOutputWithContext(context.Context) AnalysisValidationStrategyModePtrOutput
}

type analysisValidationStrategyModePtr string

func AnalysisValidationStrategyModePtr(v string) AnalysisValidationStrategyModePtrInput {
	return (*analysisValidationStrategyModePtr)(&v)
}

func (*analysisValidationStrategyModePtr) ElementType() reflect.Type {
	return analysisValidationStrategyModePtrType
}

func (in *analysisValidationStrategyModePtr) ToAnalysisValidationStrategyModePtrOutput() AnalysisValidationStrategyModePtrOutput {
	return pulumi.ToOutput(in).(AnalysisValidationStrategyModePtrOutput)
}

func (in *analysisValidationStrategyModePtr) ToAnalysisValidationStrategyModePtrOutputWithContext(ctx context.Context) AnalysisValidationStrategyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisValidationStrategyModePtrOutput)
}

type AnalysisValueWhenUnsetOption string

const (
	AnalysisValueWhenUnsetOptionRecommendedValue = AnalysisValueWhenUnsetOption("RECOMMENDED_VALUE")
	AnalysisValueWhenUnsetOptionNull             = AnalysisValueWhenUnsetOption("NULL")
)

func (AnalysisValueWhenUnsetOption) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisValueWhenUnsetOption)(nil)).Elem()
}

func (e AnalysisValueWhenUnsetOption) ToAnalysisValueWhenUnsetOptionOutput() AnalysisValueWhenUnsetOptionOutput {
	return pulumi.ToOutput(e).(AnalysisValueWhenUnsetOptionOutput)
}

func (e AnalysisValueWhenUnsetOption) ToAnalysisValueWhenUnsetOptionOutputWithContext(ctx context.Context) AnalysisValueWhenUnsetOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisValueWhenUnsetOptionOutput)
}

func (e AnalysisValueWhenUnsetOption) ToAnalysisValueWhenUnsetOptionPtrOutput() AnalysisValueWhenUnsetOptionPtrOutput {
	return e.ToAnalysisValueWhenUnsetOptionPtrOutputWithContext(context.Background())
}

func (e AnalysisValueWhenUnsetOption) ToAnalysisValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) AnalysisValueWhenUnsetOptionPtrOutput {
	return AnalysisValueWhenUnsetOption(e).ToAnalysisValueWhenUnsetOptionOutputWithContext(ctx).ToAnalysisValueWhenUnsetOptionPtrOutputWithContext(ctx)
}

func (e AnalysisValueWhenUnsetOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisValueWhenUnsetOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisValueWhenUnsetOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisValueWhenUnsetOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisValueWhenUnsetOptionOutput struct{ *pulumi.OutputState }

func (AnalysisValueWhenUnsetOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisValueWhenUnsetOption)(nil)).Elem()
}

func (o AnalysisValueWhenUnsetOptionOutput) ToAnalysisValueWhenUnsetOptionOutput() AnalysisValueWhenUnsetOptionOutput {
	return o
}

func (o AnalysisValueWhenUnsetOptionOutput) ToAnalysisValueWhenUnsetOptionOutputWithContext(ctx context.Context) AnalysisValueWhenUnsetOptionOutput {
	return o
}

func (o AnalysisValueWhenUnsetOptionOutput) ToAnalysisValueWhenUnsetOptionPtrOutput() AnalysisValueWhenUnsetOptionPtrOutput {
	return o.ToAnalysisValueWhenUnsetOptionPtrOutputWithContext(context.Background())
}

func (o AnalysisValueWhenUnsetOptionOutput) ToAnalysisValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) AnalysisValueWhenUnsetOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisValueWhenUnsetOption) *AnalysisValueWhenUnsetOption {
		return &v
	}).(AnalysisValueWhenUnsetOptionPtrOutput)
}

func (o AnalysisValueWhenUnsetOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisValueWhenUnsetOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisValueWhenUnsetOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisValueWhenUnsetOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisValueWhenUnsetOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisValueWhenUnsetOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisValueWhenUnsetOptionPtrOutput struct{ *pulumi.OutputState }

func (AnalysisValueWhenUnsetOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisValueWhenUnsetOption)(nil)).Elem()
}

func (o AnalysisValueWhenUnsetOptionPtrOutput) ToAnalysisValueWhenUnsetOptionPtrOutput() AnalysisValueWhenUnsetOptionPtrOutput {
	return o
}

func (o AnalysisValueWhenUnsetOptionPtrOutput) ToAnalysisValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) AnalysisValueWhenUnsetOptionPtrOutput {
	return o
}

func (o AnalysisValueWhenUnsetOptionPtrOutput) Elem() AnalysisValueWhenUnsetOptionOutput {
	return o.ApplyT(func(v *AnalysisValueWhenUnsetOption) AnalysisValueWhenUnsetOption {
		if v != nil {
			return *v
		}
		var ret AnalysisValueWhenUnsetOption
		return ret
	}).(AnalysisValueWhenUnsetOptionOutput)
}

func (o AnalysisValueWhenUnsetOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisValueWhenUnsetOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisValueWhenUnsetOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisValueWhenUnsetOptionInput is an input type that accepts values of the AnalysisValueWhenUnsetOption enum
// A concrete instance of `AnalysisValueWhenUnsetOptionInput` can be one of the following:
//
//	AnalysisValueWhenUnsetOptionRecommendedValue
//	AnalysisValueWhenUnsetOptionNull
type AnalysisValueWhenUnsetOptionInput interface {
	pulumi.Input

	ToAnalysisValueWhenUnsetOptionOutput() AnalysisValueWhenUnsetOptionOutput
	ToAnalysisValueWhenUnsetOptionOutputWithContext(context.Context) AnalysisValueWhenUnsetOptionOutput
}

var analysisValueWhenUnsetOptionPtrType = reflect.TypeOf((**AnalysisValueWhenUnsetOption)(nil)).Elem()

type AnalysisValueWhenUnsetOptionPtrInput interface {
	pulumi.Input

	ToAnalysisValueWhenUnsetOptionPtrOutput() AnalysisValueWhenUnsetOptionPtrOutput
	ToAnalysisValueWhenUnsetOptionPtrOutputWithContext(context.Context) AnalysisValueWhenUnsetOptionPtrOutput
}

type analysisValueWhenUnsetOptionPtr string

func AnalysisValueWhenUnsetOptionPtr(v string) AnalysisValueWhenUnsetOptionPtrInput {
	return (*analysisValueWhenUnsetOptionPtr)(&v)
}

func (*analysisValueWhenUnsetOptionPtr) ElementType() reflect.Type {
	return analysisValueWhenUnsetOptionPtrType
}

func (in *analysisValueWhenUnsetOptionPtr) ToAnalysisValueWhenUnsetOptionPtrOutput() AnalysisValueWhenUnsetOptionPtrOutput {
	return pulumi.ToOutput(in).(AnalysisValueWhenUnsetOptionPtrOutput)
}

func (in *analysisValueWhenUnsetOptionPtr) ToAnalysisValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) AnalysisValueWhenUnsetOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisValueWhenUnsetOptionPtrOutput)
}

type AnalysisVerticalTextAlignment string

const (
	AnalysisVerticalTextAlignmentTop    = AnalysisVerticalTextAlignment("TOP")
	AnalysisVerticalTextAlignmentMiddle = AnalysisVerticalTextAlignment("MIDDLE")
	AnalysisVerticalTextAlignmentBottom = AnalysisVerticalTextAlignment("BOTTOM")
	AnalysisVerticalTextAlignmentAuto   = AnalysisVerticalTextAlignment("AUTO")
)

func (AnalysisVerticalTextAlignment) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVerticalTextAlignment)(nil)).Elem()
}

func (e AnalysisVerticalTextAlignment) ToAnalysisVerticalTextAlignmentOutput() AnalysisVerticalTextAlignmentOutput {
	return pulumi.ToOutput(e).(AnalysisVerticalTextAlignmentOutput)
}

func (e AnalysisVerticalTextAlignment) ToAnalysisVerticalTextAlignmentOutputWithContext(ctx context.Context) AnalysisVerticalTextAlignmentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisVerticalTextAlignmentOutput)
}

func (e AnalysisVerticalTextAlignment) ToAnalysisVerticalTextAlignmentPtrOutput() AnalysisVerticalTextAlignmentPtrOutput {
	return e.ToAnalysisVerticalTextAlignmentPtrOutputWithContext(context.Background())
}

func (e AnalysisVerticalTextAlignment) ToAnalysisVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) AnalysisVerticalTextAlignmentPtrOutput {
	return AnalysisVerticalTextAlignment(e).ToAnalysisVerticalTextAlignmentOutputWithContext(ctx).ToAnalysisVerticalTextAlignmentPtrOutputWithContext(ctx)
}

func (e AnalysisVerticalTextAlignment) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisVerticalTextAlignment) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisVerticalTextAlignment) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisVerticalTextAlignment) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisVerticalTextAlignmentOutput struct{ *pulumi.OutputState }

func (AnalysisVerticalTextAlignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVerticalTextAlignment)(nil)).Elem()
}

func (o AnalysisVerticalTextAlignmentOutput) ToAnalysisVerticalTextAlignmentOutput() AnalysisVerticalTextAlignmentOutput {
	return o
}

func (o AnalysisVerticalTextAlignmentOutput) ToAnalysisVerticalTextAlignmentOutputWithContext(ctx context.Context) AnalysisVerticalTextAlignmentOutput {
	return o
}

func (o AnalysisVerticalTextAlignmentOutput) ToAnalysisVerticalTextAlignmentPtrOutput() AnalysisVerticalTextAlignmentPtrOutput {
	return o.ToAnalysisVerticalTextAlignmentPtrOutputWithContext(context.Background())
}

func (o AnalysisVerticalTextAlignmentOutput) ToAnalysisVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) AnalysisVerticalTextAlignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisVerticalTextAlignment) *AnalysisVerticalTextAlignment {
		return &v
	}).(AnalysisVerticalTextAlignmentPtrOutput)
}

func (o AnalysisVerticalTextAlignmentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisVerticalTextAlignmentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisVerticalTextAlignment) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisVerticalTextAlignmentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisVerticalTextAlignmentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisVerticalTextAlignment) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisVerticalTextAlignmentPtrOutput struct{ *pulumi.OutputState }

func (AnalysisVerticalTextAlignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVerticalTextAlignment)(nil)).Elem()
}

func (o AnalysisVerticalTextAlignmentPtrOutput) ToAnalysisVerticalTextAlignmentPtrOutput() AnalysisVerticalTextAlignmentPtrOutput {
	return o
}

func (o AnalysisVerticalTextAlignmentPtrOutput) ToAnalysisVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) AnalysisVerticalTextAlignmentPtrOutput {
	return o
}

func (o AnalysisVerticalTextAlignmentPtrOutput) Elem() AnalysisVerticalTextAlignmentOutput {
	return o.ApplyT(func(v *AnalysisVerticalTextAlignment) AnalysisVerticalTextAlignment {
		if v != nil {
			return *v
		}
		var ret AnalysisVerticalTextAlignment
		return ret
	}).(AnalysisVerticalTextAlignmentOutput)
}

func (o AnalysisVerticalTextAlignmentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisVerticalTextAlignmentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisVerticalTextAlignment) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisVerticalTextAlignmentInput is an input type that accepts values of the AnalysisVerticalTextAlignment enum
// A concrete instance of `AnalysisVerticalTextAlignmentInput` can be one of the following:
//
//	AnalysisVerticalTextAlignmentTop
//	AnalysisVerticalTextAlignmentMiddle
//	AnalysisVerticalTextAlignmentBottom
//	AnalysisVerticalTextAlignmentAuto
type AnalysisVerticalTextAlignmentInput interface {
	pulumi.Input

	ToAnalysisVerticalTextAlignmentOutput() AnalysisVerticalTextAlignmentOutput
	ToAnalysisVerticalTextAlignmentOutputWithContext(context.Context) AnalysisVerticalTextAlignmentOutput
}

var analysisVerticalTextAlignmentPtrType = reflect.TypeOf((**AnalysisVerticalTextAlignment)(nil)).Elem()

type AnalysisVerticalTextAlignmentPtrInput interface {
	pulumi.Input

	ToAnalysisVerticalTextAlignmentPtrOutput() AnalysisVerticalTextAlignmentPtrOutput
	ToAnalysisVerticalTextAlignmentPtrOutputWithContext(context.Context) AnalysisVerticalTextAlignmentPtrOutput
}

type analysisVerticalTextAlignmentPtr string

func AnalysisVerticalTextAlignmentPtr(v string) AnalysisVerticalTextAlignmentPtrInput {
	return (*analysisVerticalTextAlignmentPtr)(&v)
}

func (*analysisVerticalTextAlignmentPtr) ElementType() reflect.Type {
	return analysisVerticalTextAlignmentPtrType
}

func (in *analysisVerticalTextAlignmentPtr) ToAnalysisVerticalTextAlignmentPtrOutput() AnalysisVerticalTextAlignmentPtrOutput {
	return pulumi.ToOutput(in).(AnalysisVerticalTextAlignmentPtrOutput)
}

func (in *analysisVerticalTextAlignmentPtr) ToAnalysisVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) AnalysisVerticalTextAlignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisVerticalTextAlignmentPtrOutput)
}

type AnalysisVisibility string

const (
	AnalysisVisibilityHidden  = AnalysisVisibility("HIDDEN")
	AnalysisVisibilityVisible = AnalysisVisibility("VISIBLE")
)

func (AnalysisVisibility) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisibility)(nil)).Elem()
}

func (e AnalysisVisibility) ToAnalysisVisibilityOutput() AnalysisVisibilityOutput {
	return pulumi.ToOutput(e).(AnalysisVisibilityOutput)
}

func (e AnalysisVisibility) ToAnalysisVisibilityOutputWithContext(ctx context.Context) AnalysisVisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisVisibilityOutput)
}

func (e AnalysisVisibility) ToAnalysisVisibilityPtrOutput() AnalysisVisibilityPtrOutput {
	return e.ToAnalysisVisibilityPtrOutputWithContext(context.Background())
}

func (e AnalysisVisibility) ToAnalysisVisibilityPtrOutputWithContext(ctx context.Context) AnalysisVisibilityPtrOutput {
	return AnalysisVisibility(e).ToAnalysisVisibilityOutputWithContext(ctx).ToAnalysisVisibilityPtrOutputWithContext(ctx)
}

func (e AnalysisVisibility) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisVisibility) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisVisibility) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisVisibility) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisVisibilityOutput struct{ *pulumi.OutputState }

func (AnalysisVisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisibility)(nil)).Elem()
}

func (o AnalysisVisibilityOutput) ToAnalysisVisibilityOutput() AnalysisVisibilityOutput {
	return o
}

func (o AnalysisVisibilityOutput) ToAnalysisVisibilityOutputWithContext(ctx context.Context) AnalysisVisibilityOutput {
	return o
}

func (o AnalysisVisibilityOutput) ToAnalysisVisibilityPtrOutput() AnalysisVisibilityPtrOutput {
	return o.ToAnalysisVisibilityPtrOutputWithContext(context.Background())
}

func (o AnalysisVisibilityOutput) ToAnalysisVisibilityPtrOutputWithContext(ctx context.Context) AnalysisVisibilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisVisibility) *AnalysisVisibility {
		return &v
	}).(AnalysisVisibilityPtrOutput)
}

func (o AnalysisVisibilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisVisibilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisVisibility) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisVisibilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisVisibilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisVisibility) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisVisibilityPtrOutput struct{ *pulumi.OutputState }

func (AnalysisVisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVisibility)(nil)).Elem()
}

func (o AnalysisVisibilityPtrOutput) ToAnalysisVisibilityPtrOutput() AnalysisVisibilityPtrOutput {
	return o
}

func (o AnalysisVisibilityPtrOutput) ToAnalysisVisibilityPtrOutputWithContext(ctx context.Context) AnalysisVisibilityPtrOutput {
	return o
}

func (o AnalysisVisibilityPtrOutput) Elem() AnalysisVisibilityOutput {
	return o.ApplyT(func(v *AnalysisVisibility) AnalysisVisibility {
		if v != nil {
			return *v
		}
		var ret AnalysisVisibility
		return ret
	}).(AnalysisVisibilityOutput)
}

func (o AnalysisVisibilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisVisibilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisVisibility) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisVisibilityInput is an input type that accepts values of the AnalysisVisibility enum
// A concrete instance of `AnalysisVisibilityInput` can be one of the following:
//
//	AnalysisVisibilityHidden
//	AnalysisVisibilityVisible
type AnalysisVisibilityInput interface {
	pulumi.Input

	ToAnalysisVisibilityOutput() AnalysisVisibilityOutput
	ToAnalysisVisibilityOutputWithContext(context.Context) AnalysisVisibilityOutput
}

var analysisVisibilityPtrType = reflect.TypeOf((**AnalysisVisibility)(nil)).Elem()

type AnalysisVisibilityPtrInput interface {
	pulumi.Input

	ToAnalysisVisibilityPtrOutput() AnalysisVisibilityPtrOutput
	ToAnalysisVisibilityPtrOutputWithContext(context.Context) AnalysisVisibilityPtrOutput
}

type analysisVisibilityPtr string

func AnalysisVisibilityPtr(v string) AnalysisVisibilityPtrInput {
	return (*analysisVisibilityPtr)(&v)
}

func (*analysisVisibilityPtr) ElementType() reflect.Type {
	return analysisVisibilityPtrType
}

func (in *analysisVisibilityPtr) ToAnalysisVisibilityPtrOutput() AnalysisVisibilityPtrOutput {
	return pulumi.ToOutput(in).(AnalysisVisibilityPtrOutput)
}

func (in *analysisVisibilityPtr) ToAnalysisVisibilityPtrOutputWithContext(ctx context.Context) AnalysisVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisVisibilityPtrOutput)
}

type AnalysisVisualCustomActionTrigger string

const (
	AnalysisVisualCustomActionTriggerDataPointClick = AnalysisVisualCustomActionTrigger("DATA_POINT_CLICK")
	AnalysisVisualCustomActionTriggerDataPointMenu  = AnalysisVisualCustomActionTrigger("DATA_POINT_MENU")
)

func (AnalysisVisualCustomActionTrigger) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualCustomActionTrigger)(nil)).Elem()
}

func (e AnalysisVisualCustomActionTrigger) ToAnalysisVisualCustomActionTriggerOutput() AnalysisVisualCustomActionTriggerOutput {
	return pulumi.ToOutput(e).(AnalysisVisualCustomActionTriggerOutput)
}

func (e AnalysisVisualCustomActionTrigger) ToAnalysisVisualCustomActionTriggerOutputWithContext(ctx context.Context) AnalysisVisualCustomActionTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisVisualCustomActionTriggerOutput)
}

func (e AnalysisVisualCustomActionTrigger) ToAnalysisVisualCustomActionTriggerPtrOutput() AnalysisVisualCustomActionTriggerPtrOutput {
	return e.ToAnalysisVisualCustomActionTriggerPtrOutputWithContext(context.Background())
}

func (e AnalysisVisualCustomActionTrigger) ToAnalysisVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) AnalysisVisualCustomActionTriggerPtrOutput {
	return AnalysisVisualCustomActionTrigger(e).ToAnalysisVisualCustomActionTriggerOutputWithContext(ctx).ToAnalysisVisualCustomActionTriggerPtrOutputWithContext(ctx)
}

func (e AnalysisVisualCustomActionTrigger) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisVisualCustomActionTrigger) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisVisualCustomActionTrigger) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisVisualCustomActionTrigger) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisVisualCustomActionTriggerOutput struct{ *pulumi.OutputState }

func (AnalysisVisualCustomActionTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisVisualCustomActionTrigger)(nil)).Elem()
}

func (o AnalysisVisualCustomActionTriggerOutput) ToAnalysisVisualCustomActionTriggerOutput() AnalysisVisualCustomActionTriggerOutput {
	return o
}

func (o AnalysisVisualCustomActionTriggerOutput) ToAnalysisVisualCustomActionTriggerOutputWithContext(ctx context.Context) AnalysisVisualCustomActionTriggerOutput {
	return o
}

func (o AnalysisVisualCustomActionTriggerOutput) ToAnalysisVisualCustomActionTriggerPtrOutput() AnalysisVisualCustomActionTriggerPtrOutput {
	return o.ToAnalysisVisualCustomActionTriggerPtrOutputWithContext(context.Background())
}

func (o AnalysisVisualCustomActionTriggerOutput) ToAnalysisVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) AnalysisVisualCustomActionTriggerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisVisualCustomActionTrigger) *AnalysisVisualCustomActionTrigger {
		return &v
	}).(AnalysisVisualCustomActionTriggerPtrOutput)
}

func (o AnalysisVisualCustomActionTriggerOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisVisualCustomActionTriggerOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisVisualCustomActionTrigger) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisVisualCustomActionTriggerOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisVisualCustomActionTriggerOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisVisualCustomActionTrigger) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisVisualCustomActionTriggerPtrOutput struct{ *pulumi.OutputState }

func (AnalysisVisualCustomActionTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisVisualCustomActionTrigger)(nil)).Elem()
}

func (o AnalysisVisualCustomActionTriggerPtrOutput) ToAnalysisVisualCustomActionTriggerPtrOutput() AnalysisVisualCustomActionTriggerPtrOutput {
	return o
}

func (o AnalysisVisualCustomActionTriggerPtrOutput) ToAnalysisVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) AnalysisVisualCustomActionTriggerPtrOutput {
	return o
}

func (o AnalysisVisualCustomActionTriggerPtrOutput) Elem() AnalysisVisualCustomActionTriggerOutput {
	return o.ApplyT(func(v *AnalysisVisualCustomActionTrigger) AnalysisVisualCustomActionTrigger {
		if v != nil {
			return *v
		}
		var ret AnalysisVisualCustomActionTrigger
		return ret
	}).(AnalysisVisualCustomActionTriggerOutput)
}

func (o AnalysisVisualCustomActionTriggerPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisVisualCustomActionTriggerPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisVisualCustomActionTrigger) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisVisualCustomActionTriggerInput is an input type that accepts values of the AnalysisVisualCustomActionTrigger enum
// A concrete instance of `AnalysisVisualCustomActionTriggerInput` can be one of the following:
//
//	AnalysisVisualCustomActionTriggerDataPointClick
//	AnalysisVisualCustomActionTriggerDataPointMenu
type AnalysisVisualCustomActionTriggerInput interface {
	pulumi.Input

	ToAnalysisVisualCustomActionTriggerOutput() AnalysisVisualCustomActionTriggerOutput
	ToAnalysisVisualCustomActionTriggerOutputWithContext(context.Context) AnalysisVisualCustomActionTriggerOutput
}

var analysisVisualCustomActionTriggerPtrType = reflect.TypeOf((**AnalysisVisualCustomActionTrigger)(nil)).Elem()

type AnalysisVisualCustomActionTriggerPtrInput interface {
	pulumi.Input

	ToAnalysisVisualCustomActionTriggerPtrOutput() AnalysisVisualCustomActionTriggerPtrOutput
	ToAnalysisVisualCustomActionTriggerPtrOutputWithContext(context.Context) AnalysisVisualCustomActionTriggerPtrOutput
}

type analysisVisualCustomActionTriggerPtr string

func AnalysisVisualCustomActionTriggerPtr(v string) AnalysisVisualCustomActionTriggerPtrInput {
	return (*analysisVisualCustomActionTriggerPtr)(&v)
}

func (*analysisVisualCustomActionTriggerPtr) ElementType() reflect.Type {
	return analysisVisualCustomActionTriggerPtrType
}

func (in *analysisVisualCustomActionTriggerPtr) ToAnalysisVisualCustomActionTriggerPtrOutput() AnalysisVisualCustomActionTriggerPtrOutput {
	return pulumi.ToOutput(in).(AnalysisVisualCustomActionTriggerPtrOutput)
}

func (in *analysisVisualCustomActionTriggerPtr) ToAnalysisVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) AnalysisVisualCustomActionTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisVisualCustomActionTriggerPtrOutput)
}

type AnalysisWidgetStatus string

const (
	AnalysisWidgetStatusEnabled  = AnalysisWidgetStatus("ENABLED")
	AnalysisWidgetStatusDisabled = AnalysisWidgetStatus("DISABLED")
)

func (AnalysisWidgetStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWidgetStatus)(nil)).Elem()
}

func (e AnalysisWidgetStatus) ToAnalysisWidgetStatusOutput() AnalysisWidgetStatusOutput {
	return pulumi.ToOutput(e).(AnalysisWidgetStatusOutput)
}

func (e AnalysisWidgetStatus) ToAnalysisWidgetStatusOutputWithContext(ctx context.Context) AnalysisWidgetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisWidgetStatusOutput)
}

func (e AnalysisWidgetStatus) ToAnalysisWidgetStatusPtrOutput() AnalysisWidgetStatusPtrOutput {
	return e.ToAnalysisWidgetStatusPtrOutputWithContext(context.Background())
}

func (e AnalysisWidgetStatus) ToAnalysisWidgetStatusPtrOutputWithContext(ctx context.Context) AnalysisWidgetStatusPtrOutput {
	return AnalysisWidgetStatus(e).ToAnalysisWidgetStatusOutputWithContext(ctx).ToAnalysisWidgetStatusPtrOutputWithContext(ctx)
}

func (e AnalysisWidgetStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWidgetStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWidgetStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisWidgetStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisWidgetStatusOutput struct{ *pulumi.OutputState }

func (AnalysisWidgetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWidgetStatus)(nil)).Elem()
}

func (o AnalysisWidgetStatusOutput) ToAnalysisWidgetStatusOutput() AnalysisWidgetStatusOutput {
	return o
}

func (o AnalysisWidgetStatusOutput) ToAnalysisWidgetStatusOutputWithContext(ctx context.Context) AnalysisWidgetStatusOutput {
	return o
}

func (o AnalysisWidgetStatusOutput) ToAnalysisWidgetStatusPtrOutput() AnalysisWidgetStatusPtrOutput {
	return o.ToAnalysisWidgetStatusPtrOutputWithContext(context.Background())
}

func (o AnalysisWidgetStatusOutput) ToAnalysisWidgetStatusPtrOutputWithContext(ctx context.Context) AnalysisWidgetStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWidgetStatus) *AnalysisWidgetStatus {
		return &v
	}).(AnalysisWidgetStatusPtrOutput)
}

func (o AnalysisWidgetStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisWidgetStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWidgetStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisWidgetStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWidgetStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWidgetStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisWidgetStatusPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWidgetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWidgetStatus)(nil)).Elem()
}

func (o AnalysisWidgetStatusPtrOutput) ToAnalysisWidgetStatusPtrOutput() AnalysisWidgetStatusPtrOutput {
	return o
}

func (o AnalysisWidgetStatusPtrOutput) ToAnalysisWidgetStatusPtrOutputWithContext(ctx context.Context) AnalysisWidgetStatusPtrOutput {
	return o
}

func (o AnalysisWidgetStatusPtrOutput) Elem() AnalysisWidgetStatusOutput {
	return o.ApplyT(func(v *AnalysisWidgetStatus) AnalysisWidgetStatus {
		if v != nil {
			return *v
		}
		var ret AnalysisWidgetStatus
		return ret
	}).(AnalysisWidgetStatusOutput)
}

func (o AnalysisWidgetStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWidgetStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisWidgetStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisWidgetStatusInput is an input type that accepts values of the AnalysisWidgetStatus enum
// A concrete instance of `AnalysisWidgetStatusInput` can be one of the following:
//
//	AnalysisWidgetStatusEnabled
//	AnalysisWidgetStatusDisabled
type AnalysisWidgetStatusInput interface {
	pulumi.Input

	ToAnalysisWidgetStatusOutput() AnalysisWidgetStatusOutput
	ToAnalysisWidgetStatusOutputWithContext(context.Context) AnalysisWidgetStatusOutput
}

var analysisWidgetStatusPtrType = reflect.TypeOf((**AnalysisWidgetStatus)(nil)).Elem()

type AnalysisWidgetStatusPtrInput interface {
	pulumi.Input

	ToAnalysisWidgetStatusPtrOutput() AnalysisWidgetStatusPtrOutput
	ToAnalysisWidgetStatusPtrOutputWithContext(context.Context) AnalysisWidgetStatusPtrOutput
}

type analysisWidgetStatusPtr string

func AnalysisWidgetStatusPtr(v string) AnalysisWidgetStatusPtrInput {
	return (*analysisWidgetStatusPtr)(&v)
}

func (*analysisWidgetStatusPtr) ElementType() reflect.Type {
	return analysisWidgetStatusPtrType
}

func (in *analysisWidgetStatusPtr) ToAnalysisWidgetStatusPtrOutput() AnalysisWidgetStatusPtrOutput {
	return pulumi.ToOutput(in).(AnalysisWidgetStatusPtrOutput)
}

func (in *analysisWidgetStatusPtr) ToAnalysisWidgetStatusPtrOutputWithContext(ctx context.Context) AnalysisWidgetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisWidgetStatusPtrOutput)
}

type AnalysisWordCloudCloudLayout string

const (
	AnalysisWordCloudCloudLayoutFluid  = AnalysisWordCloudCloudLayout("FLUID")
	AnalysisWordCloudCloudLayoutNormal = AnalysisWordCloudCloudLayout("NORMAL")
)

func (AnalysisWordCloudCloudLayout) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudCloudLayout)(nil)).Elem()
}

func (e AnalysisWordCloudCloudLayout) ToAnalysisWordCloudCloudLayoutOutput() AnalysisWordCloudCloudLayoutOutput {
	return pulumi.ToOutput(e).(AnalysisWordCloudCloudLayoutOutput)
}

func (e AnalysisWordCloudCloudLayout) ToAnalysisWordCloudCloudLayoutOutputWithContext(ctx context.Context) AnalysisWordCloudCloudLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisWordCloudCloudLayoutOutput)
}

func (e AnalysisWordCloudCloudLayout) ToAnalysisWordCloudCloudLayoutPtrOutput() AnalysisWordCloudCloudLayoutPtrOutput {
	return e.ToAnalysisWordCloudCloudLayoutPtrOutputWithContext(context.Background())
}

func (e AnalysisWordCloudCloudLayout) ToAnalysisWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) AnalysisWordCloudCloudLayoutPtrOutput {
	return AnalysisWordCloudCloudLayout(e).ToAnalysisWordCloudCloudLayoutOutputWithContext(ctx).ToAnalysisWordCloudCloudLayoutPtrOutputWithContext(ctx)
}

func (e AnalysisWordCloudCloudLayout) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWordCloudCloudLayout) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWordCloudCloudLayout) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisWordCloudCloudLayout) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisWordCloudCloudLayoutOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudCloudLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudCloudLayout)(nil)).Elem()
}

func (o AnalysisWordCloudCloudLayoutOutput) ToAnalysisWordCloudCloudLayoutOutput() AnalysisWordCloudCloudLayoutOutput {
	return o
}

func (o AnalysisWordCloudCloudLayoutOutput) ToAnalysisWordCloudCloudLayoutOutputWithContext(ctx context.Context) AnalysisWordCloudCloudLayoutOutput {
	return o
}

func (o AnalysisWordCloudCloudLayoutOutput) ToAnalysisWordCloudCloudLayoutPtrOutput() AnalysisWordCloudCloudLayoutPtrOutput {
	return o.ToAnalysisWordCloudCloudLayoutPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudCloudLayoutOutput) ToAnalysisWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) AnalysisWordCloudCloudLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudCloudLayout) *AnalysisWordCloudCloudLayout {
		return &v
	}).(AnalysisWordCloudCloudLayoutPtrOutput)
}

func (o AnalysisWordCloudCloudLayoutOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisWordCloudCloudLayoutOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWordCloudCloudLayout) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisWordCloudCloudLayoutOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudCloudLayoutOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWordCloudCloudLayout) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisWordCloudCloudLayoutPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudCloudLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudCloudLayout)(nil)).Elem()
}

func (o AnalysisWordCloudCloudLayoutPtrOutput) ToAnalysisWordCloudCloudLayoutPtrOutput() AnalysisWordCloudCloudLayoutPtrOutput {
	return o
}

func (o AnalysisWordCloudCloudLayoutPtrOutput) ToAnalysisWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) AnalysisWordCloudCloudLayoutPtrOutput {
	return o
}

func (o AnalysisWordCloudCloudLayoutPtrOutput) Elem() AnalysisWordCloudCloudLayoutOutput {
	return o.ApplyT(func(v *AnalysisWordCloudCloudLayout) AnalysisWordCloudCloudLayout {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudCloudLayout
		return ret
	}).(AnalysisWordCloudCloudLayoutOutput)
}

func (o AnalysisWordCloudCloudLayoutPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudCloudLayoutPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisWordCloudCloudLayout) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisWordCloudCloudLayoutInput is an input type that accepts values of the AnalysisWordCloudCloudLayout enum
// A concrete instance of `AnalysisWordCloudCloudLayoutInput` can be one of the following:
//
//	AnalysisWordCloudCloudLayoutFluid
//	AnalysisWordCloudCloudLayoutNormal
type AnalysisWordCloudCloudLayoutInput interface {
	pulumi.Input

	ToAnalysisWordCloudCloudLayoutOutput() AnalysisWordCloudCloudLayoutOutput
	ToAnalysisWordCloudCloudLayoutOutputWithContext(context.Context) AnalysisWordCloudCloudLayoutOutput
}

var analysisWordCloudCloudLayoutPtrType = reflect.TypeOf((**AnalysisWordCloudCloudLayout)(nil)).Elem()

type AnalysisWordCloudCloudLayoutPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudCloudLayoutPtrOutput() AnalysisWordCloudCloudLayoutPtrOutput
	ToAnalysisWordCloudCloudLayoutPtrOutputWithContext(context.Context) AnalysisWordCloudCloudLayoutPtrOutput
}

type analysisWordCloudCloudLayoutPtr string

func AnalysisWordCloudCloudLayoutPtr(v string) AnalysisWordCloudCloudLayoutPtrInput {
	return (*analysisWordCloudCloudLayoutPtr)(&v)
}

func (*analysisWordCloudCloudLayoutPtr) ElementType() reflect.Type {
	return analysisWordCloudCloudLayoutPtrType
}

func (in *analysisWordCloudCloudLayoutPtr) ToAnalysisWordCloudCloudLayoutPtrOutput() AnalysisWordCloudCloudLayoutPtrOutput {
	return pulumi.ToOutput(in).(AnalysisWordCloudCloudLayoutPtrOutput)
}

func (in *analysisWordCloudCloudLayoutPtr) ToAnalysisWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) AnalysisWordCloudCloudLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisWordCloudCloudLayoutPtrOutput)
}

type AnalysisWordCloudWordCasing string

const (
	AnalysisWordCloudWordCasingLowerCase    = AnalysisWordCloudWordCasing("LOWER_CASE")
	AnalysisWordCloudWordCasingExistingCase = AnalysisWordCloudWordCasing("EXISTING_CASE")
)

func (AnalysisWordCloudWordCasing) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudWordCasing)(nil)).Elem()
}

func (e AnalysisWordCloudWordCasing) ToAnalysisWordCloudWordCasingOutput() AnalysisWordCloudWordCasingOutput {
	return pulumi.ToOutput(e).(AnalysisWordCloudWordCasingOutput)
}

func (e AnalysisWordCloudWordCasing) ToAnalysisWordCloudWordCasingOutputWithContext(ctx context.Context) AnalysisWordCloudWordCasingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisWordCloudWordCasingOutput)
}

func (e AnalysisWordCloudWordCasing) ToAnalysisWordCloudWordCasingPtrOutput() AnalysisWordCloudWordCasingPtrOutput {
	return e.ToAnalysisWordCloudWordCasingPtrOutputWithContext(context.Background())
}

func (e AnalysisWordCloudWordCasing) ToAnalysisWordCloudWordCasingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordCasingPtrOutput {
	return AnalysisWordCloudWordCasing(e).ToAnalysisWordCloudWordCasingOutputWithContext(ctx).ToAnalysisWordCloudWordCasingPtrOutputWithContext(ctx)
}

func (e AnalysisWordCloudWordCasing) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWordCloudWordCasing) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWordCloudWordCasing) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisWordCloudWordCasing) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisWordCloudWordCasingOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudWordCasingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudWordCasing)(nil)).Elem()
}

func (o AnalysisWordCloudWordCasingOutput) ToAnalysisWordCloudWordCasingOutput() AnalysisWordCloudWordCasingOutput {
	return o
}

func (o AnalysisWordCloudWordCasingOutput) ToAnalysisWordCloudWordCasingOutputWithContext(ctx context.Context) AnalysisWordCloudWordCasingOutput {
	return o
}

func (o AnalysisWordCloudWordCasingOutput) ToAnalysisWordCloudWordCasingPtrOutput() AnalysisWordCloudWordCasingPtrOutput {
	return o.ToAnalysisWordCloudWordCasingPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordCasingOutput) ToAnalysisWordCloudWordCasingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordCasingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudWordCasing) *AnalysisWordCloudWordCasing {
		return &v
	}).(AnalysisWordCloudWordCasingPtrOutput)
}

func (o AnalysisWordCloudWordCasingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordCasingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWordCloudWordCasing) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisWordCloudWordCasingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordCasingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWordCloudWordCasing) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisWordCloudWordCasingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudWordCasingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudWordCasing)(nil)).Elem()
}

func (o AnalysisWordCloudWordCasingPtrOutput) ToAnalysisWordCloudWordCasingPtrOutput() AnalysisWordCloudWordCasingPtrOutput {
	return o
}

func (o AnalysisWordCloudWordCasingPtrOutput) ToAnalysisWordCloudWordCasingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordCasingPtrOutput {
	return o
}

func (o AnalysisWordCloudWordCasingPtrOutput) Elem() AnalysisWordCloudWordCasingOutput {
	return o.ApplyT(func(v *AnalysisWordCloudWordCasing) AnalysisWordCloudWordCasing {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudWordCasing
		return ret
	}).(AnalysisWordCloudWordCasingOutput)
}

func (o AnalysisWordCloudWordCasingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordCasingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisWordCloudWordCasing) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisWordCloudWordCasingInput is an input type that accepts values of the AnalysisWordCloudWordCasing enum
// A concrete instance of `AnalysisWordCloudWordCasingInput` can be one of the following:
//
//	AnalysisWordCloudWordCasingLowerCase
//	AnalysisWordCloudWordCasingExistingCase
type AnalysisWordCloudWordCasingInput interface {
	pulumi.Input

	ToAnalysisWordCloudWordCasingOutput() AnalysisWordCloudWordCasingOutput
	ToAnalysisWordCloudWordCasingOutputWithContext(context.Context) AnalysisWordCloudWordCasingOutput
}

var analysisWordCloudWordCasingPtrType = reflect.TypeOf((**AnalysisWordCloudWordCasing)(nil)).Elem()

type AnalysisWordCloudWordCasingPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudWordCasingPtrOutput() AnalysisWordCloudWordCasingPtrOutput
	ToAnalysisWordCloudWordCasingPtrOutputWithContext(context.Context) AnalysisWordCloudWordCasingPtrOutput
}

type analysisWordCloudWordCasingPtr string

func AnalysisWordCloudWordCasingPtr(v string) AnalysisWordCloudWordCasingPtrInput {
	return (*analysisWordCloudWordCasingPtr)(&v)
}

func (*analysisWordCloudWordCasingPtr) ElementType() reflect.Type {
	return analysisWordCloudWordCasingPtrType
}

func (in *analysisWordCloudWordCasingPtr) ToAnalysisWordCloudWordCasingPtrOutput() AnalysisWordCloudWordCasingPtrOutput {
	return pulumi.ToOutput(in).(AnalysisWordCloudWordCasingPtrOutput)
}

func (in *analysisWordCloudWordCasingPtr) ToAnalysisWordCloudWordCasingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordCasingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisWordCloudWordCasingPtrOutput)
}

type AnalysisWordCloudWordOrientation string

const (
	AnalysisWordCloudWordOrientationHorizontal            = AnalysisWordCloudWordOrientation("HORIZONTAL")
	AnalysisWordCloudWordOrientationHorizontalAndVertical = AnalysisWordCloudWordOrientation("HORIZONTAL_AND_VERTICAL")
)

func (AnalysisWordCloudWordOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudWordOrientation)(nil)).Elem()
}

func (e AnalysisWordCloudWordOrientation) ToAnalysisWordCloudWordOrientationOutput() AnalysisWordCloudWordOrientationOutput {
	return pulumi.ToOutput(e).(AnalysisWordCloudWordOrientationOutput)
}

func (e AnalysisWordCloudWordOrientation) ToAnalysisWordCloudWordOrientationOutputWithContext(ctx context.Context) AnalysisWordCloudWordOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisWordCloudWordOrientationOutput)
}

func (e AnalysisWordCloudWordOrientation) ToAnalysisWordCloudWordOrientationPtrOutput() AnalysisWordCloudWordOrientationPtrOutput {
	return e.ToAnalysisWordCloudWordOrientationPtrOutputWithContext(context.Background())
}

func (e AnalysisWordCloudWordOrientation) ToAnalysisWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordOrientationPtrOutput {
	return AnalysisWordCloudWordOrientation(e).ToAnalysisWordCloudWordOrientationOutputWithContext(ctx).ToAnalysisWordCloudWordOrientationPtrOutputWithContext(ctx)
}

func (e AnalysisWordCloudWordOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWordCloudWordOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWordCloudWordOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisWordCloudWordOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisWordCloudWordOrientationOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudWordOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudWordOrientation)(nil)).Elem()
}

func (o AnalysisWordCloudWordOrientationOutput) ToAnalysisWordCloudWordOrientationOutput() AnalysisWordCloudWordOrientationOutput {
	return o
}

func (o AnalysisWordCloudWordOrientationOutput) ToAnalysisWordCloudWordOrientationOutputWithContext(ctx context.Context) AnalysisWordCloudWordOrientationOutput {
	return o
}

func (o AnalysisWordCloudWordOrientationOutput) ToAnalysisWordCloudWordOrientationPtrOutput() AnalysisWordCloudWordOrientationPtrOutput {
	return o.ToAnalysisWordCloudWordOrientationPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordOrientationOutput) ToAnalysisWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudWordOrientation) *AnalysisWordCloudWordOrientation {
		return &v
	}).(AnalysisWordCloudWordOrientationPtrOutput)
}

func (o AnalysisWordCloudWordOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWordCloudWordOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisWordCloudWordOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWordCloudWordOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisWordCloudWordOrientationPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudWordOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudWordOrientation)(nil)).Elem()
}

func (o AnalysisWordCloudWordOrientationPtrOutput) ToAnalysisWordCloudWordOrientationPtrOutput() AnalysisWordCloudWordOrientationPtrOutput {
	return o
}

func (o AnalysisWordCloudWordOrientationPtrOutput) ToAnalysisWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordOrientationPtrOutput {
	return o
}

func (o AnalysisWordCloudWordOrientationPtrOutput) Elem() AnalysisWordCloudWordOrientationOutput {
	return o.ApplyT(func(v *AnalysisWordCloudWordOrientation) AnalysisWordCloudWordOrientation {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudWordOrientation
		return ret
	}).(AnalysisWordCloudWordOrientationOutput)
}

func (o AnalysisWordCloudWordOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisWordCloudWordOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisWordCloudWordOrientationInput is an input type that accepts values of the AnalysisWordCloudWordOrientation enum
// A concrete instance of `AnalysisWordCloudWordOrientationInput` can be one of the following:
//
//	AnalysisWordCloudWordOrientationHorizontal
//	AnalysisWordCloudWordOrientationHorizontalAndVertical
type AnalysisWordCloudWordOrientationInput interface {
	pulumi.Input

	ToAnalysisWordCloudWordOrientationOutput() AnalysisWordCloudWordOrientationOutput
	ToAnalysisWordCloudWordOrientationOutputWithContext(context.Context) AnalysisWordCloudWordOrientationOutput
}

var analysisWordCloudWordOrientationPtrType = reflect.TypeOf((**AnalysisWordCloudWordOrientation)(nil)).Elem()

type AnalysisWordCloudWordOrientationPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudWordOrientationPtrOutput() AnalysisWordCloudWordOrientationPtrOutput
	ToAnalysisWordCloudWordOrientationPtrOutputWithContext(context.Context) AnalysisWordCloudWordOrientationPtrOutput
}

type analysisWordCloudWordOrientationPtr string

func AnalysisWordCloudWordOrientationPtr(v string) AnalysisWordCloudWordOrientationPtrInput {
	return (*analysisWordCloudWordOrientationPtr)(&v)
}

func (*analysisWordCloudWordOrientationPtr) ElementType() reflect.Type {
	return analysisWordCloudWordOrientationPtrType
}

func (in *analysisWordCloudWordOrientationPtr) ToAnalysisWordCloudWordOrientationPtrOutput() AnalysisWordCloudWordOrientationPtrOutput {
	return pulumi.ToOutput(in).(AnalysisWordCloudWordOrientationPtrOutput)
}

func (in *analysisWordCloudWordOrientationPtr) ToAnalysisWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisWordCloudWordOrientationPtrOutput)
}

type AnalysisWordCloudWordPadding string

const (
	AnalysisWordCloudWordPaddingNone   = AnalysisWordCloudWordPadding("NONE")
	AnalysisWordCloudWordPaddingSmall  = AnalysisWordCloudWordPadding("SMALL")
	AnalysisWordCloudWordPaddingMedium = AnalysisWordCloudWordPadding("MEDIUM")
	AnalysisWordCloudWordPaddingLarge  = AnalysisWordCloudWordPadding("LARGE")
)

func (AnalysisWordCloudWordPadding) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudWordPadding)(nil)).Elem()
}

func (e AnalysisWordCloudWordPadding) ToAnalysisWordCloudWordPaddingOutput() AnalysisWordCloudWordPaddingOutput {
	return pulumi.ToOutput(e).(AnalysisWordCloudWordPaddingOutput)
}

func (e AnalysisWordCloudWordPadding) ToAnalysisWordCloudWordPaddingOutputWithContext(ctx context.Context) AnalysisWordCloudWordPaddingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisWordCloudWordPaddingOutput)
}

func (e AnalysisWordCloudWordPadding) ToAnalysisWordCloudWordPaddingPtrOutput() AnalysisWordCloudWordPaddingPtrOutput {
	return e.ToAnalysisWordCloudWordPaddingPtrOutputWithContext(context.Background())
}

func (e AnalysisWordCloudWordPadding) ToAnalysisWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordPaddingPtrOutput {
	return AnalysisWordCloudWordPadding(e).ToAnalysisWordCloudWordPaddingOutputWithContext(ctx).ToAnalysisWordCloudWordPaddingPtrOutputWithContext(ctx)
}

func (e AnalysisWordCloudWordPadding) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWordCloudWordPadding) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWordCloudWordPadding) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisWordCloudWordPadding) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisWordCloudWordPaddingOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudWordPaddingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudWordPadding)(nil)).Elem()
}

func (o AnalysisWordCloudWordPaddingOutput) ToAnalysisWordCloudWordPaddingOutput() AnalysisWordCloudWordPaddingOutput {
	return o
}

func (o AnalysisWordCloudWordPaddingOutput) ToAnalysisWordCloudWordPaddingOutputWithContext(ctx context.Context) AnalysisWordCloudWordPaddingOutput {
	return o
}

func (o AnalysisWordCloudWordPaddingOutput) ToAnalysisWordCloudWordPaddingPtrOutput() AnalysisWordCloudWordPaddingPtrOutput {
	return o.ToAnalysisWordCloudWordPaddingPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordPaddingOutput) ToAnalysisWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordPaddingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudWordPadding) *AnalysisWordCloudWordPadding {
		return &v
	}).(AnalysisWordCloudWordPaddingPtrOutput)
}

func (o AnalysisWordCloudWordPaddingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordPaddingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWordCloudWordPadding) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisWordCloudWordPaddingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordPaddingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWordCloudWordPadding) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisWordCloudWordPaddingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudWordPaddingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudWordPadding)(nil)).Elem()
}

func (o AnalysisWordCloudWordPaddingPtrOutput) ToAnalysisWordCloudWordPaddingPtrOutput() AnalysisWordCloudWordPaddingPtrOutput {
	return o
}

func (o AnalysisWordCloudWordPaddingPtrOutput) ToAnalysisWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordPaddingPtrOutput {
	return o
}

func (o AnalysisWordCloudWordPaddingPtrOutput) Elem() AnalysisWordCloudWordPaddingOutput {
	return o.ApplyT(func(v *AnalysisWordCloudWordPadding) AnalysisWordCloudWordPadding {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudWordPadding
		return ret
	}).(AnalysisWordCloudWordPaddingOutput)
}

func (o AnalysisWordCloudWordPaddingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordPaddingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisWordCloudWordPadding) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisWordCloudWordPaddingInput is an input type that accepts values of the AnalysisWordCloudWordPadding enum
// A concrete instance of `AnalysisWordCloudWordPaddingInput` can be one of the following:
//
//	AnalysisWordCloudWordPaddingNone
//	AnalysisWordCloudWordPaddingSmall
//	AnalysisWordCloudWordPaddingMedium
//	AnalysisWordCloudWordPaddingLarge
type AnalysisWordCloudWordPaddingInput interface {
	pulumi.Input

	ToAnalysisWordCloudWordPaddingOutput() AnalysisWordCloudWordPaddingOutput
	ToAnalysisWordCloudWordPaddingOutputWithContext(context.Context) AnalysisWordCloudWordPaddingOutput
}

var analysisWordCloudWordPaddingPtrType = reflect.TypeOf((**AnalysisWordCloudWordPadding)(nil)).Elem()

type AnalysisWordCloudWordPaddingPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudWordPaddingPtrOutput() AnalysisWordCloudWordPaddingPtrOutput
	ToAnalysisWordCloudWordPaddingPtrOutputWithContext(context.Context) AnalysisWordCloudWordPaddingPtrOutput
}

type analysisWordCloudWordPaddingPtr string

func AnalysisWordCloudWordPaddingPtr(v string) AnalysisWordCloudWordPaddingPtrInput {
	return (*analysisWordCloudWordPaddingPtr)(&v)
}

func (*analysisWordCloudWordPaddingPtr) ElementType() reflect.Type {
	return analysisWordCloudWordPaddingPtrType
}

func (in *analysisWordCloudWordPaddingPtr) ToAnalysisWordCloudWordPaddingPtrOutput() AnalysisWordCloudWordPaddingPtrOutput {
	return pulumi.ToOutput(in).(AnalysisWordCloudWordPaddingPtrOutput)
}

func (in *analysisWordCloudWordPaddingPtr) ToAnalysisWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordPaddingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisWordCloudWordPaddingPtrOutput)
}

type AnalysisWordCloudWordScaling string

const (
	AnalysisWordCloudWordScalingEmphasize = AnalysisWordCloudWordScaling("EMPHASIZE")
	AnalysisWordCloudWordScalingNormal    = AnalysisWordCloudWordScaling("NORMAL")
)

func (AnalysisWordCloudWordScaling) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudWordScaling)(nil)).Elem()
}

func (e AnalysisWordCloudWordScaling) ToAnalysisWordCloudWordScalingOutput() AnalysisWordCloudWordScalingOutput {
	return pulumi.ToOutput(e).(AnalysisWordCloudWordScalingOutput)
}

func (e AnalysisWordCloudWordScaling) ToAnalysisWordCloudWordScalingOutputWithContext(ctx context.Context) AnalysisWordCloudWordScalingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisWordCloudWordScalingOutput)
}

func (e AnalysisWordCloudWordScaling) ToAnalysisWordCloudWordScalingPtrOutput() AnalysisWordCloudWordScalingPtrOutput {
	return e.ToAnalysisWordCloudWordScalingPtrOutputWithContext(context.Background())
}

func (e AnalysisWordCloudWordScaling) ToAnalysisWordCloudWordScalingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordScalingPtrOutput {
	return AnalysisWordCloudWordScaling(e).ToAnalysisWordCloudWordScalingOutputWithContext(ctx).ToAnalysisWordCloudWordScalingPtrOutputWithContext(ctx)
}

func (e AnalysisWordCloudWordScaling) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWordCloudWordScaling) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisWordCloudWordScaling) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisWordCloudWordScaling) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisWordCloudWordScalingOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudWordScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisWordCloudWordScaling)(nil)).Elem()
}

func (o AnalysisWordCloudWordScalingOutput) ToAnalysisWordCloudWordScalingOutput() AnalysisWordCloudWordScalingOutput {
	return o
}

func (o AnalysisWordCloudWordScalingOutput) ToAnalysisWordCloudWordScalingOutputWithContext(ctx context.Context) AnalysisWordCloudWordScalingOutput {
	return o
}

func (o AnalysisWordCloudWordScalingOutput) ToAnalysisWordCloudWordScalingPtrOutput() AnalysisWordCloudWordScalingPtrOutput {
	return o.ToAnalysisWordCloudWordScalingPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordScalingOutput) ToAnalysisWordCloudWordScalingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisWordCloudWordScaling) *AnalysisWordCloudWordScaling {
		return &v
	}).(AnalysisWordCloudWordScalingPtrOutput)
}

func (o AnalysisWordCloudWordScalingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordScalingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWordCloudWordScaling) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisWordCloudWordScalingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordScalingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisWordCloudWordScaling) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisWordCloudWordScalingPtrOutput struct{ *pulumi.OutputState }

func (AnalysisWordCloudWordScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisWordCloudWordScaling)(nil)).Elem()
}

func (o AnalysisWordCloudWordScalingPtrOutput) ToAnalysisWordCloudWordScalingPtrOutput() AnalysisWordCloudWordScalingPtrOutput {
	return o
}

func (o AnalysisWordCloudWordScalingPtrOutput) ToAnalysisWordCloudWordScalingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordScalingPtrOutput {
	return o
}

func (o AnalysisWordCloudWordScalingPtrOutput) Elem() AnalysisWordCloudWordScalingOutput {
	return o.ApplyT(func(v *AnalysisWordCloudWordScaling) AnalysisWordCloudWordScaling {
		if v != nil {
			return *v
		}
		var ret AnalysisWordCloudWordScaling
		return ret
	}).(AnalysisWordCloudWordScalingOutput)
}

func (o AnalysisWordCloudWordScalingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisWordCloudWordScalingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisWordCloudWordScaling) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisWordCloudWordScalingInput is an input type that accepts values of the AnalysisWordCloudWordScaling enum
// A concrete instance of `AnalysisWordCloudWordScalingInput` can be one of the following:
//
//	AnalysisWordCloudWordScalingEmphasize
//	AnalysisWordCloudWordScalingNormal
type AnalysisWordCloudWordScalingInput interface {
	pulumi.Input

	ToAnalysisWordCloudWordScalingOutput() AnalysisWordCloudWordScalingOutput
	ToAnalysisWordCloudWordScalingOutputWithContext(context.Context) AnalysisWordCloudWordScalingOutput
}

var analysisWordCloudWordScalingPtrType = reflect.TypeOf((**AnalysisWordCloudWordScaling)(nil)).Elem()

type AnalysisWordCloudWordScalingPtrInput interface {
	pulumi.Input

	ToAnalysisWordCloudWordScalingPtrOutput() AnalysisWordCloudWordScalingPtrOutput
	ToAnalysisWordCloudWordScalingPtrOutputWithContext(context.Context) AnalysisWordCloudWordScalingPtrOutput
}

type analysisWordCloudWordScalingPtr string

func AnalysisWordCloudWordScalingPtr(v string) AnalysisWordCloudWordScalingPtrInput {
	return (*analysisWordCloudWordScalingPtr)(&v)
}

func (*analysisWordCloudWordScalingPtr) ElementType() reflect.Type {
	return analysisWordCloudWordScalingPtrType
}

func (in *analysisWordCloudWordScalingPtr) ToAnalysisWordCloudWordScalingPtrOutput() AnalysisWordCloudWordScalingPtrOutput {
	return pulumi.ToOutput(in).(AnalysisWordCloudWordScalingPtrOutput)
}

func (in *analysisWordCloudWordScalingPtr) ToAnalysisWordCloudWordScalingPtrOutputWithContext(ctx context.Context) AnalysisWordCloudWordScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisWordCloudWordScalingPtrOutput)
}

type DashboardAnchorOption string

const (
	DashboardAnchorOptionNow = DashboardAnchorOption("NOW")
)

func (DashboardAnchorOption) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAnchorOption)(nil)).Elem()
}

func (e DashboardAnchorOption) ToDashboardAnchorOptionOutput() DashboardAnchorOptionOutput {
	return pulumi.ToOutput(e).(DashboardAnchorOptionOutput)
}

func (e DashboardAnchorOption) ToDashboardAnchorOptionOutputWithContext(ctx context.Context) DashboardAnchorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardAnchorOptionOutput)
}

func (e DashboardAnchorOption) ToDashboardAnchorOptionPtrOutput() DashboardAnchorOptionPtrOutput {
	return e.ToDashboardAnchorOptionPtrOutputWithContext(context.Background())
}

func (e DashboardAnchorOption) ToDashboardAnchorOptionPtrOutputWithContext(ctx context.Context) DashboardAnchorOptionPtrOutput {
	return DashboardAnchorOption(e).ToDashboardAnchorOptionOutputWithContext(ctx).ToDashboardAnchorOptionPtrOutputWithContext(ctx)
}

func (e DashboardAnchorOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardAnchorOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardAnchorOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardAnchorOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardAnchorOptionOutput struct{ *pulumi.OutputState }

func (DashboardAnchorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAnchorOption)(nil)).Elem()
}

func (o DashboardAnchorOptionOutput) ToDashboardAnchorOptionOutput() DashboardAnchorOptionOutput {
	return o
}

func (o DashboardAnchorOptionOutput) ToDashboardAnchorOptionOutputWithContext(ctx context.Context) DashboardAnchorOptionOutput {
	return o
}

func (o DashboardAnchorOptionOutput) ToDashboardAnchorOptionPtrOutput() DashboardAnchorOptionPtrOutput {
	return o.ToDashboardAnchorOptionPtrOutputWithContext(context.Background())
}

func (o DashboardAnchorOptionOutput) ToDashboardAnchorOptionPtrOutputWithContext(ctx context.Context) DashboardAnchorOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAnchorOption) *DashboardAnchorOption {
		return &v
	}).(DashboardAnchorOptionPtrOutput)
}

func (o DashboardAnchorOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardAnchorOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardAnchorOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardAnchorOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardAnchorOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardAnchorOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardAnchorOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardAnchorOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAnchorOption)(nil)).Elem()
}

func (o DashboardAnchorOptionPtrOutput) ToDashboardAnchorOptionPtrOutput() DashboardAnchorOptionPtrOutput {
	return o
}

func (o DashboardAnchorOptionPtrOutput) ToDashboardAnchorOptionPtrOutputWithContext(ctx context.Context) DashboardAnchorOptionPtrOutput {
	return o
}

func (o DashboardAnchorOptionPtrOutput) Elem() DashboardAnchorOptionOutput {
	return o.ApplyT(func(v *DashboardAnchorOption) DashboardAnchorOption {
		if v != nil {
			return *v
		}
		var ret DashboardAnchorOption
		return ret
	}).(DashboardAnchorOptionOutput)
}

func (o DashboardAnchorOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardAnchorOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardAnchorOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardAnchorOptionInput is an input type that accepts values of the DashboardAnchorOption enum
// A concrete instance of `DashboardAnchorOptionInput` can be one of the following:
//
//	DashboardAnchorOptionNow
type DashboardAnchorOptionInput interface {
	pulumi.Input

	ToDashboardAnchorOptionOutput() DashboardAnchorOptionOutput
	ToDashboardAnchorOptionOutputWithContext(context.Context) DashboardAnchorOptionOutput
}

var dashboardAnchorOptionPtrType = reflect.TypeOf((**DashboardAnchorOption)(nil)).Elem()

type DashboardAnchorOptionPtrInput interface {
	pulumi.Input

	ToDashboardAnchorOptionPtrOutput() DashboardAnchorOptionPtrOutput
	ToDashboardAnchorOptionPtrOutputWithContext(context.Context) DashboardAnchorOptionPtrOutput
}

type dashboardAnchorOptionPtr string

func DashboardAnchorOptionPtr(v string) DashboardAnchorOptionPtrInput {
	return (*dashboardAnchorOptionPtr)(&v)
}

func (*dashboardAnchorOptionPtr) ElementType() reflect.Type {
	return dashboardAnchorOptionPtrType
}

func (in *dashboardAnchorOptionPtr) ToDashboardAnchorOptionPtrOutput() DashboardAnchorOptionPtrOutput {
	return pulumi.ToOutput(in).(DashboardAnchorOptionPtrOutput)
}

func (in *dashboardAnchorOptionPtr) ToDashboardAnchorOptionPtrOutputWithContext(ctx context.Context) DashboardAnchorOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardAnchorOptionPtrOutput)
}

type DashboardArcThickness string

const (
	DashboardArcThicknessSmall  = DashboardArcThickness("SMALL")
	DashboardArcThicknessMedium = DashboardArcThickness("MEDIUM")
	DashboardArcThicknessLarge  = DashboardArcThickness("LARGE")
	DashboardArcThicknessWhole  = DashboardArcThickness("WHOLE")
)

func (DashboardArcThickness) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcThickness)(nil)).Elem()
}

func (e DashboardArcThickness) ToDashboardArcThicknessOutput() DashboardArcThicknessOutput {
	return pulumi.ToOutput(e).(DashboardArcThicknessOutput)
}

func (e DashboardArcThickness) ToDashboardArcThicknessOutputWithContext(ctx context.Context) DashboardArcThicknessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardArcThicknessOutput)
}

func (e DashboardArcThickness) ToDashboardArcThicknessPtrOutput() DashboardArcThicknessPtrOutput {
	return e.ToDashboardArcThicknessPtrOutputWithContext(context.Background())
}

func (e DashboardArcThickness) ToDashboardArcThicknessPtrOutputWithContext(ctx context.Context) DashboardArcThicknessPtrOutput {
	return DashboardArcThickness(e).ToDashboardArcThicknessOutputWithContext(ctx).ToDashboardArcThicknessPtrOutputWithContext(ctx)
}

func (e DashboardArcThickness) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardArcThickness) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardArcThickness) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardArcThickness) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardArcThicknessOutput struct{ *pulumi.OutputState }

func (DashboardArcThicknessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcThickness)(nil)).Elem()
}

func (o DashboardArcThicknessOutput) ToDashboardArcThicknessOutput() DashboardArcThicknessOutput {
	return o
}

func (o DashboardArcThicknessOutput) ToDashboardArcThicknessOutputWithContext(ctx context.Context) DashboardArcThicknessOutput {
	return o
}

func (o DashboardArcThicknessOutput) ToDashboardArcThicknessPtrOutput() DashboardArcThicknessPtrOutput {
	return o.ToDashboardArcThicknessPtrOutputWithContext(context.Background())
}

func (o DashboardArcThicknessOutput) ToDashboardArcThicknessPtrOutputWithContext(ctx context.Context) DashboardArcThicknessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardArcThickness) *DashboardArcThickness {
		return &v
	}).(DashboardArcThicknessPtrOutput)
}

func (o DashboardArcThicknessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardArcThicknessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardArcThickness) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardArcThicknessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardArcThicknessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardArcThickness) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardArcThicknessPtrOutput struct{ *pulumi.OutputState }

func (DashboardArcThicknessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardArcThickness)(nil)).Elem()
}

func (o DashboardArcThicknessPtrOutput) ToDashboardArcThicknessPtrOutput() DashboardArcThicknessPtrOutput {
	return o
}

func (o DashboardArcThicknessPtrOutput) ToDashboardArcThicknessPtrOutputWithContext(ctx context.Context) DashboardArcThicknessPtrOutput {
	return o
}

func (o DashboardArcThicknessPtrOutput) Elem() DashboardArcThicknessOutput {
	return o.ApplyT(func(v *DashboardArcThickness) DashboardArcThickness {
		if v != nil {
			return *v
		}
		var ret DashboardArcThickness
		return ret
	}).(DashboardArcThicknessOutput)
}

func (o DashboardArcThicknessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardArcThicknessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardArcThickness) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardArcThicknessInput is an input type that accepts values of the DashboardArcThickness enum
// A concrete instance of `DashboardArcThicknessInput` can be one of the following:
//
//	DashboardArcThicknessSmall
//	DashboardArcThicknessMedium
//	DashboardArcThicknessLarge
//	DashboardArcThicknessWhole
type DashboardArcThicknessInput interface {
	pulumi.Input

	ToDashboardArcThicknessOutput() DashboardArcThicknessOutput
	ToDashboardArcThicknessOutputWithContext(context.Context) DashboardArcThicknessOutput
}

var dashboardArcThicknessPtrType = reflect.TypeOf((**DashboardArcThickness)(nil)).Elem()

type DashboardArcThicknessPtrInput interface {
	pulumi.Input

	ToDashboardArcThicknessPtrOutput() DashboardArcThicknessPtrOutput
	ToDashboardArcThicknessPtrOutputWithContext(context.Context) DashboardArcThicknessPtrOutput
}

type dashboardArcThicknessPtr string

func DashboardArcThicknessPtr(v string) DashboardArcThicknessPtrInput {
	return (*dashboardArcThicknessPtr)(&v)
}

func (*dashboardArcThicknessPtr) ElementType() reflect.Type {
	return dashboardArcThicknessPtrType
}

func (in *dashboardArcThicknessPtr) ToDashboardArcThicknessPtrOutput() DashboardArcThicknessPtrOutput {
	return pulumi.ToOutput(in).(DashboardArcThicknessPtrOutput)
}

func (in *dashboardArcThicknessPtr) ToDashboardArcThicknessPtrOutputWithContext(ctx context.Context) DashboardArcThicknessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardArcThicknessPtrOutput)
}

type DashboardArcThicknessOptions string

const (
	DashboardArcThicknessOptionsSmall  = DashboardArcThicknessOptions("SMALL")
	DashboardArcThicknessOptionsMedium = DashboardArcThicknessOptions("MEDIUM")
	DashboardArcThicknessOptionsLarge  = DashboardArcThicknessOptions("LARGE")
)

func (DashboardArcThicknessOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcThicknessOptions)(nil)).Elem()
}

func (e DashboardArcThicknessOptions) ToDashboardArcThicknessOptionsOutput() DashboardArcThicknessOptionsOutput {
	return pulumi.ToOutput(e).(DashboardArcThicknessOptionsOutput)
}

func (e DashboardArcThicknessOptions) ToDashboardArcThicknessOptionsOutputWithContext(ctx context.Context) DashboardArcThicknessOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardArcThicknessOptionsOutput)
}

func (e DashboardArcThicknessOptions) ToDashboardArcThicknessOptionsPtrOutput() DashboardArcThicknessOptionsPtrOutput {
	return e.ToDashboardArcThicknessOptionsPtrOutputWithContext(context.Background())
}

func (e DashboardArcThicknessOptions) ToDashboardArcThicknessOptionsPtrOutputWithContext(ctx context.Context) DashboardArcThicknessOptionsPtrOutput {
	return DashboardArcThicknessOptions(e).ToDashboardArcThicknessOptionsOutputWithContext(ctx).ToDashboardArcThicknessOptionsPtrOutputWithContext(ctx)
}

func (e DashboardArcThicknessOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardArcThicknessOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardArcThicknessOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardArcThicknessOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardArcThicknessOptionsOutput struct{ *pulumi.OutputState }

func (DashboardArcThicknessOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardArcThicknessOptions)(nil)).Elem()
}

func (o DashboardArcThicknessOptionsOutput) ToDashboardArcThicknessOptionsOutput() DashboardArcThicknessOptionsOutput {
	return o
}

func (o DashboardArcThicknessOptionsOutput) ToDashboardArcThicknessOptionsOutputWithContext(ctx context.Context) DashboardArcThicknessOptionsOutput {
	return o
}

func (o DashboardArcThicknessOptionsOutput) ToDashboardArcThicknessOptionsPtrOutput() DashboardArcThicknessOptionsPtrOutput {
	return o.ToDashboardArcThicknessOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardArcThicknessOptionsOutput) ToDashboardArcThicknessOptionsPtrOutputWithContext(ctx context.Context) DashboardArcThicknessOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardArcThicknessOptions) *DashboardArcThicknessOptions {
		return &v
	}).(DashboardArcThicknessOptionsPtrOutput)
}

func (o DashboardArcThicknessOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardArcThicknessOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardArcThicknessOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardArcThicknessOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardArcThicknessOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardArcThicknessOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardArcThicknessOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardArcThicknessOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardArcThicknessOptions)(nil)).Elem()
}

func (o DashboardArcThicknessOptionsPtrOutput) ToDashboardArcThicknessOptionsPtrOutput() DashboardArcThicknessOptionsPtrOutput {
	return o
}

func (o DashboardArcThicknessOptionsPtrOutput) ToDashboardArcThicknessOptionsPtrOutputWithContext(ctx context.Context) DashboardArcThicknessOptionsPtrOutput {
	return o
}

func (o DashboardArcThicknessOptionsPtrOutput) Elem() DashboardArcThicknessOptionsOutput {
	return o.ApplyT(func(v *DashboardArcThicknessOptions) DashboardArcThicknessOptions {
		if v != nil {
			return *v
		}
		var ret DashboardArcThicknessOptions
		return ret
	}).(DashboardArcThicknessOptionsOutput)
}

func (o DashboardArcThicknessOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardArcThicknessOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardArcThicknessOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardArcThicknessOptionsInput is an input type that accepts values of the DashboardArcThicknessOptions enum
// A concrete instance of `DashboardArcThicknessOptionsInput` can be one of the following:
//
//	DashboardArcThicknessOptionsSmall
//	DashboardArcThicknessOptionsMedium
//	DashboardArcThicknessOptionsLarge
type DashboardArcThicknessOptionsInput interface {
	pulumi.Input

	ToDashboardArcThicknessOptionsOutput() DashboardArcThicknessOptionsOutput
	ToDashboardArcThicknessOptionsOutputWithContext(context.Context) DashboardArcThicknessOptionsOutput
}

var dashboardArcThicknessOptionsPtrType = reflect.TypeOf((**DashboardArcThicknessOptions)(nil)).Elem()

type DashboardArcThicknessOptionsPtrInput interface {
	pulumi.Input

	ToDashboardArcThicknessOptionsPtrOutput() DashboardArcThicknessOptionsPtrOutput
	ToDashboardArcThicknessOptionsPtrOutputWithContext(context.Context) DashboardArcThicknessOptionsPtrOutput
}

type dashboardArcThicknessOptionsPtr string

func DashboardArcThicknessOptionsPtr(v string) DashboardArcThicknessOptionsPtrInput {
	return (*dashboardArcThicknessOptionsPtr)(&v)
}

func (*dashboardArcThicknessOptionsPtr) ElementType() reflect.Type {
	return dashboardArcThicknessOptionsPtrType
}

func (in *dashboardArcThicknessOptionsPtr) ToDashboardArcThicknessOptionsPtrOutput() DashboardArcThicknessOptionsPtrOutput {
	return pulumi.ToOutput(in).(DashboardArcThicknessOptionsPtrOutput)
}

func (in *dashboardArcThicknessOptionsPtr) ToDashboardArcThicknessOptionsPtrOutputWithContext(ctx context.Context) DashboardArcThicknessOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardArcThicknessOptionsPtrOutput)
}

type DashboardAxisBinding string

const (
	DashboardAxisBindingPrimaryYaxis   = DashboardAxisBinding("PRIMARY_YAXIS")
	DashboardAxisBindingSecondaryYaxis = DashboardAxisBinding("SECONDARY_YAXIS")
)

func (DashboardAxisBinding) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisBinding)(nil)).Elem()
}

func (e DashboardAxisBinding) ToDashboardAxisBindingOutput() DashboardAxisBindingOutput {
	return pulumi.ToOutput(e).(DashboardAxisBindingOutput)
}

func (e DashboardAxisBinding) ToDashboardAxisBindingOutputWithContext(ctx context.Context) DashboardAxisBindingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardAxisBindingOutput)
}

func (e DashboardAxisBinding) ToDashboardAxisBindingPtrOutput() DashboardAxisBindingPtrOutput {
	return e.ToDashboardAxisBindingPtrOutputWithContext(context.Background())
}

func (e DashboardAxisBinding) ToDashboardAxisBindingPtrOutputWithContext(ctx context.Context) DashboardAxisBindingPtrOutput {
	return DashboardAxisBinding(e).ToDashboardAxisBindingOutputWithContext(ctx).ToDashboardAxisBindingPtrOutputWithContext(ctx)
}

func (e DashboardAxisBinding) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardAxisBinding) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardAxisBinding) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardAxisBinding) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardAxisBindingOutput struct{ *pulumi.OutputState }

func (DashboardAxisBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardAxisBinding)(nil)).Elem()
}

func (o DashboardAxisBindingOutput) ToDashboardAxisBindingOutput() DashboardAxisBindingOutput {
	return o
}

func (o DashboardAxisBindingOutput) ToDashboardAxisBindingOutputWithContext(ctx context.Context) DashboardAxisBindingOutput {
	return o
}

func (o DashboardAxisBindingOutput) ToDashboardAxisBindingPtrOutput() DashboardAxisBindingPtrOutput {
	return o.ToDashboardAxisBindingPtrOutputWithContext(context.Background())
}

func (o DashboardAxisBindingOutput) ToDashboardAxisBindingPtrOutputWithContext(ctx context.Context) DashboardAxisBindingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardAxisBinding) *DashboardAxisBinding {
		return &v
	}).(DashboardAxisBindingPtrOutput)
}

func (o DashboardAxisBindingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardAxisBindingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardAxisBinding) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardAxisBindingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardAxisBindingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardAxisBinding) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardAxisBindingPtrOutput struct{ *pulumi.OutputState }

func (DashboardAxisBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardAxisBinding)(nil)).Elem()
}

func (o DashboardAxisBindingPtrOutput) ToDashboardAxisBindingPtrOutput() DashboardAxisBindingPtrOutput {
	return o
}

func (o DashboardAxisBindingPtrOutput) ToDashboardAxisBindingPtrOutputWithContext(ctx context.Context) DashboardAxisBindingPtrOutput {
	return o
}

func (o DashboardAxisBindingPtrOutput) Elem() DashboardAxisBindingOutput {
	return o.ApplyT(func(v *DashboardAxisBinding) DashboardAxisBinding {
		if v != nil {
			return *v
		}
		var ret DashboardAxisBinding
		return ret
	}).(DashboardAxisBindingOutput)
}

func (o DashboardAxisBindingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardAxisBindingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardAxisBinding) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardAxisBindingInput is an input type that accepts values of the DashboardAxisBinding enum
// A concrete instance of `DashboardAxisBindingInput` can be one of the following:
//
//	DashboardAxisBindingPrimaryYaxis
//	DashboardAxisBindingSecondaryYaxis
type DashboardAxisBindingInput interface {
	pulumi.Input

	ToDashboardAxisBindingOutput() DashboardAxisBindingOutput
	ToDashboardAxisBindingOutputWithContext(context.Context) DashboardAxisBindingOutput
}

var dashboardAxisBindingPtrType = reflect.TypeOf((**DashboardAxisBinding)(nil)).Elem()

type DashboardAxisBindingPtrInput interface {
	pulumi.Input

	ToDashboardAxisBindingPtrOutput() DashboardAxisBindingPtrOutput
	ToDashboardAxisBindingPtrOutputWithContext(context.Context) DashboardAxisBindingPtrOutput
}

type dashboardAxisBindingPtr string

func DashboardAxisBindingPtr(v string) DashboardAxisBindingPtrInput {
	return (*dashboardAxisBindingPtr)(&v)
}

func (*dashboardAxisBindingPtr) ElementType() reflect.Type {
	return dashboardAxisBindingPtrType
}

func (in *dashboardAxisBindingPtr) ToDashboardAxisBindingPtrOutput() DashboardAxisBindingPtrOutput {
	return pulumi.ToOutput(in).(DashboardAxisBindingPtrOutput)
}

func (in *dashboardAxisBindingPtr) ToDashboardAxisBindingPtrOutputWithContext(ctx context.Context) DashboardAxisBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardAxisBindingPtrOutput)
}

type DashboardBarChartOrientation string

const (
	DashboardBarChartOrientationHorizontal = DashboardBarChartOrientation("HORIZONTAL")
	DashboardBarChartOrientationVertical   = DashboardBarChartOrientation("VERTICAL")
)

func (DashboardBarChartOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartOrientation)(nil)).Elem()
}

func (e DashboardBarChartOrientation) ToDashboardBarChartOrientationOutput() DashboardBarChartOrientationOutput {
	return pulumi.ToOutput(e).(DashboardBarChartOrientationOutput)
}

func (e DashboardBarChartOrientation) ToDashboardBarChartOrientationOutputWithContext(ctx context.Context) DashboardBarChartOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardBarChartOrientationOutput)
}

func (e DashboardBarChartOrientation) ToDashboardBarChartOrientationPtrOutput() DashboardBarChartOrientationPtrOutput {
	return e.ToDashboardBarChartOrientationPtrOutputWithContext(context.Background())
}

func (e DashboardBarChartOrientation) ToDashboardBarChartOrientationPtrOutputWithContext(ctx context.Context) DashboardBarChartOrientationPtrOutput {
	return DashboardBarChartOrientation(e).ToDashboardBarChartOrientationOutputWithContext(ctx).ToDashboardBarChartOrientationPtrOutputWithContext(ctx)
}

func (e DashboardBarChartOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBarChartOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBarChartOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardBarChartOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardBarChartOrientationOutput struct{ *pulumi.OutputState }

func (DashboardBarChartOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarChartOrientation)(nil)).Elem()
}

func (o DashboardBarChartOrientationOutput) ToDashboardBarChartOrientationOutput() DashboardBarChartOrientationOutput {
	return o
}

func (o DashboardBarChartOrientationOutput) ToDashboardBarChartOrientationOutputWithContext(ctx context.Context) DashboardBarChartOrientationOutput {
	return o
}

func (o DashboardBarChartOrientationOutput) ToDashboardBarChartOrientationPtrOutput() DashboardBarChartOrientationPtrOutput {
	return o.ToDashboardBarChartOrientationPtrOutputWithContext(context.Background())
}

func (o DashboardBarChartOrientationOutput) ToDashboardBarChartOrientationPtrOutputWithContext(ctx context.Context) DashboardBarChartOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBarChartOrientation) *DashboardBarChartOrientation {
		return &v
	}).(DashboardBarChartOrientationPtrOutput)
}

func (o DashboardBarChartOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardBarChartOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBarChartOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardBarChartOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBarChartOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBarChartOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardBarChartOrientationPtrOutput struct{ *pulumi.OutputState }

func (DashboardBarChartOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarChartOrientation)(nil)).Elem()
}

func (o DashboardBarChartOrientationPtrOutput) ToDashboardBarChartOrientationPtrOutput() DashboardBarChartOrientationPtrOutput {
	return o
}

func (o DashboardBarChartOrientationPtrOutput) ToDashboardBarChartOrientationPtrOutputWithContext(ctx context.Context) DashboardBarChartOrientationPtrOutput {
	return o
}

func (o DashboardBarChartOrientationPtrOutput) Elem() DashboardBarChartOrientationOutput {
	return o.ApplyT(func(v *DashboardBarChartOrientation) DashboardBarChartOrientation {
		if v != nil {
			return *v
		}
		var ret DashboardBarChartOrientation
		return ret
	}).(DashboardBarChartOrientationOutput)
}

func (o DashboardBarChartOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBarChartOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardBarChartOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardBarChartOrientationInput is an input type that accepts values of the DashboardBarChartOrientation enum
// A concrete instance of `DashboardBarChartOrientationInput` can be one of the following:
//
//	DashboardBarChartOrientationHorizontal
//	DashboardBarChartOrientationVertical
type DashboardBarChartOrientationInput interface {
	pulumi.Input

	ToDashboardBarChartOrientationOutput() DashboardBarChartOrientationOutput
	ToDashboardBarChartOrientationOutputWithContext(context.Context) DashboardBarChartOrientationOutput
}

var dashboardBarChartOrientationPtrType = reflect.TypeOf((**DashboardBarChartOrientation)(nil)).Elem()

type DashboardBarChartOrientationPtrInput interface {
	pulumi.Input

	ToDashboardBarChartOrientationPtrOutput() DashboardBarChartOrientationPtrOutput
	ToDashboardBarChartOrientationPtrOutputWithContext(context.Context) DashboardBarChartOrientationPtrOutput
}

type dashboardBarChartOrientationPtr string

func DashboardBarChartOrientationPtr(v string) DashboardBarChartOrientationPtrInput {
	return (*dashboardBarChartOrientationPtr)(&v)
}

func (*dashboardBarChartOrientationPtr) ElementType() reflect.Type {
	return dashboardBarChartOrientationPtrType
}

func (in *dashboardBarChartOrientationPtr) ToDashboardBarChartOrientationPtrOutput() DashboardBarChartOrientationPtrOutput {
	return pulumi.ToOutput(in).(DashboardBarChartOrientationPtrOutput)
}

func (in *dashboardBarChartOrientationPtr) ToDashboardBarChartOrientationPtrOutputWithContext(ctx context.Context) DashboardBarChartOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardBarChartOrientationPtrOutput)
}

type DashboardBarsArrangement string

const (
	DashboardBarsArrangementClustered      = DashboardBarsArrangement("CLUSTERED")
	DashboardBarsArrangementStacked        = DashboardBarsArrangement("STACKED")
	DashboardBarsArrangementStackedPercent = DashboardBarsArrangement("STACKED_PERCENT")
)

func (DashboardBarsArrangement) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarsArrangement)(nil)).Elem()
}

func (e DashboardBarsArrangement) ToDashboardBarsArrangementOutput() DashboardBarsArrangementOutput {
	return pulumi.ToOutput(e).(DashboardBarsArrangementOutput)
}

func (e DashboardBarsArrangement) ToDashboardBarsArrangementOutputWithContext(ctx context.Context) DashboardBarsArrangementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardBarsArrangementOutput)
}

func (e DashboardBarsArrangement) ToDashboardBarsArrangementPtrOutput() DashboardBarsArrangementPtrOutput {
	return e.ToDashboardBarsArrangementPtrOutputWithContext(context.Background())
}

func (e DashboardBarsArrangement) ToDashboardBarsArrangementPtrOutputWithContext(ctx context.Context) DashboardBarsArrangementPtrOutput {
	return DashboardBarsArrangement(e).ToDashboardBarsArrangementOutputWithContext(ctx).ToDashboardBarsArrangementPtrOutputWithContext(ctx)
}

func (e DashboardBarsArrangement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBarsArrangement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBarsArrangement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardBarsArrangement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardBarsArrangementOutput struct{ *pulumi.OutputState }

func (DashboardBarsArrangementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBarsArrangement)(nil)).Elem()
}

func (o DashboardBarsArrangementOutput) ToDashboardBarsArrangementOutput() DashboardBarsArrangementOutput {
	return o
}

func (o DashboardBarsArrangementOutput) ToDashboardBarsArrangementOutputWithContext(ctx context.Context) DashboardBarsArrangementOutput {
	return o
}

func (o DashboardBarsArrangementOutput) ToDashboardBarsArrangementPtrOutput() DashboardBarsArrangementPtrOutput {
	return o.ToDashboardBarsArrangementPtrOutputWithContext(context.Background())
}

func (o DashboardBarsArrangementOutput) ToDashboardBarsArrangementPtrOutputWithContext(ctx context.Context) DashboardBarsArrangementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBarsArrangement) *DashboardBarsArrangement {
		return &v
	}).(DashboardBarsArrangementPtrOutput)
}

func (o DashboardBarsArrangementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardBarsArrangementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBarsArrangement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardBarsArrangementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBarsArrangementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBarsArrangement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardBarsArrangementPtrOutput struct{ *pulumi.OutputState }

func (DashboardBarsArrangementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBarsArrangement)(nil)).Elem()
}

func (o DashboardBarsArrangementPtrOutput) ToDashboardBarsArrangementPtrOutput() DashboardBarsArrangementPtrOutput {
	return o
}

func (o DashboardBarsArrangementPtrOutput) ToDashboardBarsArrangementPtrOutputWithContext(ctx context.Context) DashboardBarsArrangementPtrOutput {
	return o
}

func (o DashboardBarsArrangementPtrOutput) Elem() DashboardBarsArrangementOutput {
	return o.ApplyT(func(v *DashboardBarsArrangement) DashboardBarsArrangement {
		if v != nil {
			return *v
		}
		var ret DashboardBarsArrangement
		return ret
	}).(DashboardBarsArrangementOutput)
}

func (o DashboardBarsArrangementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBarsArrangementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardBarsArrangement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardBarsArrangementInput is an input type that accepts values of the DashboardBarsArrangement enum
// A concrete instance of `DashboardBarsArrangementInput` can be one of the following:
//
//	DashboardBarsArrangementClustered
//	DashboardBarsArrangementStacked
//	DashboardBarsArrangementStackedPercent
type DashboardBarsArrangementInput interface {
	pulumi.Input

	ToDashboardBarsArrangementOutput() DashboardBarsArrangementOutput
	ToDashboardBarsArrangementOutputWithContext(context.Context) DashboardBarsArrangementOutput
}

var dashboardBarsArrangementPtrType = reflect.TypeOf((**DashboardBarsArrangement)(nil)).Elem()

type DashboardBarsArrangementPtrInput interface {
	pulumi.Input

	ToDashboardBarsArrangementPtrOutput() DashboardBarsArrangementPtrOutput
	ToDashboardBarsArrangementPtrOutputWithContext(context.Context) DashboardBarsArrangementPtrOutput
}

type dashboardBarsArrangementPtr string

func DashboardBarsArrangementPtr(v string) DashboardBarsArrangementPtrInput {
	return (*dashboardBarsArrangementPtr)(&v)
}

func (*dashboardBarsArrangementPtr) ElementType() reflect.Type {
	return dashboardBarsArrangementPtrType
}

func (in *dashboardBarsArrangementPtr) ToDashboardBarsArrangementPtrOutput() DashboardBarsArrangementPtrOutput {
	return pulumi.ToOutput(in).(DashboardBarsArrangementPtrOutput)
}

func (in *dashboardBarsArrangementPtr) ToDashboardBarsArrangementPtrOutputWithContext(ctx context.Context) DashboardBarsArrangementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardBarsArrangementPtrOutput)
}

type DashboardBaseMapStyleType string

const (
	DashboardBaseMapStyleTypeLightGray = DashboardBaseMapStyleType("LIGHT_GRAY")
	DashboardBaseMapStyleTypeDarkGray  = DashboardBaseMapStyleType("DARK_GRAY")
	DashboardBaseMapStyleTypeStreet    = DashboardBaseMapStyleType("STREET")
	DashboardBaseMapStyleTypeImagery   = DashboardBaseMapStyleType("IMAGERY")
)

func (DashboardBaseMapStyleType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBaseMapStyleType)(nil)).Elem()
}

func (e DashboardBaseMapStyleType) ToDashboardBaseMapStyleTypeOutput() DashboardBaseMapStyleTypeOutput {
	return pulumi.ToOutput(e).(DashboardBaseMapStyleTypeOutput)
}

func (e DashboardBaseMapStyleType) ToDashboardBaseMapStyleTypeOutputWithContext(ctx context.Context) DashboardBaseMapStyleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardBaseMapStyleTypeOutput)
}

func (e DashboardBaseMapStyleType) ToDashboardBaseMapStyleTypePtrOutput() DashboardBaseMapStyleTypePtrOutput {
	return e.ToDashboardBaseMapStyleTypePtrOutputWithContext(context.Background())
}

func (e DashboardBaseMapStyleType) ToDashboardBaseMapStyleTypePtrOutputWithContext(ctx context.Context) DashboardBaseMapStyleTypePtrOutput {
	return DashboardBaseMapStyleType(e).ToDashboardBaseMapStyleTypeOutputWithContext(ctx).ToDashboardBaseMapStyleTypePtrOutputWithContext(ctx)
}

func (e DashboardBaseMapStyleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBaseMapStyleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBaseMapStyleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardBaseMapStyleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardBaseMapStyleTypeOutput struct{ *pulumi.OutputState }

func (DashboardBaseMapStyleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBaseMapStyleType)(nil)).Elem()
}

func (o DashboardBaseMapStyleTypeOutput) ToDashboardBaseMapStyleTypeOutput() DashboardBaseMapStyleTypeOutput {
	return o
}

func (o DashboardBaseMapStyleTypeOutput) ToDashboardBaseMapStyleTypeOutputWithContext(ctx context.Context) DashboardBaseMapStyleTypeOutput {
	return o
}

func (o DashboardBaseMapStyleTypeOutput) ToDashboardBaseMapStyleTypePtrOutput() DashboardBaseMapStyleTypePtrOutput {
	return o.ToDashboardBaseMapStyleTypePtrOutputWithContext(context.Background())
}

func (o DashboardBaseMapStyleTypeOutput) ToDashboardBaseMapStyleTypePtrOutputWithContext(ctx context.Context) DashboardBaseMapStyleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBaseMapStyleType) *DashboardBaseMapStyleType {
		return &v
	}).(DashboardBaseMapStyleTypePtrOutput)
}

func (o DashboardBaseMapStyleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardBaseMapStyleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBaseMapStyleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardBaseMapStyleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBaseMapStyleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBaseMapStyleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardBaseMapStyleTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardBaseMapStyleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBaseMapStyleType)(nil)).Elem()
}

func (o DashboardBaseMapStyleTypePtrOutput) ToDashboardBaseMapStyleTypePtrOutput() DashboardBaseMapStyleTypePtrOutput {
	return o
}

func (o DashboardBaseMapStyleTypePtrOutput) ToDashboardBaseMapStyleTypePtrOutputWithContext(ctx context.Context) DashboardBaseMapStyleTypePtrOutput {
	return o
}

func (o DashboardBaseMapStyleTypePtrOutput) Elem() DashboardBaseMapStyleTypeOutput {
	return o.ApplyT(func(v *DashboardBaseMapStyleType) DashboardBaseMapStyleType {
		if v != nil {
			return *v
		}
		var ret DashboardBaseMapStyleType
		return ret
	}).(DashboardBaseMapStyleTypeOutput)
}

func (o DashboardBaseMapStyleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBaseMapStyleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardBaseMapStyleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardBaseMapStyleTypeInput is an input type that accepts values of the DashboardBaseMapStyleType enum
// A concrete instance of `DashboardBaseMapStyleTypeInput` can be one of the following:
//
//	DashboardBaseMapStyleTypeLightGray
//	DashboardBaseMapStyleTypeDarkGray
//	DashboardBaseMapStyleTypeStreet
//	DashboardBaseMapStyleTypeImagery
type DashboardBaseMapStyleTypeInput interface {
	pulumi.Input

	ToDashboardBaseMapStyleTypeOutput() DashboardBaseMapStyleTypeOutput
	ToDashboardBaseMapStyleTypeOutputWithContext(context.Context) DashboardBaseMapStyleTypeOutput
}

var dashboardBaseMapStyleTypePtrType = reflect.TypeOf((**DashboardBaseMapStyleType)(nil)).Elem()

type DashboardBaseMapStyleTypePtrInput interface {
	pulumi.Input

	ToDashboardBaseMapStyleTypePtrOutput() DashboardBaseMapStyleTypePtrOutput
	ToDashboardBaseMapStyleTypePtrOutputWithContext(context.Context) DashboardBaseMapStyleTypePtrOutput
}

type dashboardBaseMapStyleTypePtr string

func DashboardBaseMapStyleTypePtr(v string) DashboardBaseMapStyleTypePtrInput {
	return (*dashboardBaseMapStyleTypePtr)(&v)
}

func (*dashboardBaseMapStyleTypePtr) ElementType() reflect.Type {
	return dashboardBaseMapStyleTypePtrType
}

func (in *dashboardBaseMapStyleTypePtr) ToDashboardBaseMapStyleTypePtrOutput() DashboardBaseMapStyleTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardBaseMapStyleTypePtrOutput)
}

func (in *dashboardBaseMapStyleTypePtr) ToDashboardBaseMapStyleTypePtrOutputWithContext(ctx context.Context) DashboardBaseMapStyleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardBaseMapStyleTypePtrOutput)
}

type DashboardBehavior string

const (
	DashboardBehaviorEnabled  = DashboardBehavior("ENABLED")
	DashboardBehaviorDisabled = DashboardBehavior("DISABLED")
)

func (DashboardBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBehavior)(nil)).Elem()
}

func (e DashboardBehavior) ToDashboardBehaviorOutput() DashboardBehaviorOutput {
	return pulumi.ToOutput(e).(DashboardBehaviorOutput)
}

func (e DashboardBehavior) ToDashboardBehaviorOutputWithContext(ctx context.Context) DashboardBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardBehaviorOutput)
}

func (e DashboardBehavior) ToDashboardBehaviorPtrOutput() DashboardBehaviorPtrOutput {
	return e.ToDashboardBehaviorPtrOutputWithContext(context.Background())
}

func (e DashboardBehavior) ToDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardBehaviorPtrOutput {
	return DashboardBehavior(e).ToDashboardBehaviorOutputWithContext(ctx).ToDashboardBehaviorPtrOutputWithContext(ctx)
}

func (e DashboardBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardBehaviorOutput struct{ *pulumi.OutputState }

func (DashboardBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBehavior)(nil)).Elem()
}

func (o DashboardBehaviorOutput) ToDashboardBehaviorOutput() DashboardBehaviorOutput {
	return o
}

func (o DashboardBehaviorOutput) ToDashboardBehaviorOutputWithContext(ctx context.Context) DashboardBehaviorOutput {
	return o
}

func (o DashboardBehaviorOutput) ToDashboardBehaviorPtrOutput() DashboardBehaviorPtrOutput {
	return o.ToDashboardBehaviorPtrOutputWithContext(context.Background())
}

func (o DashboardBehaviorOutput) ToDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBehavior) *DashboardBehavior {
		return &v
	}).(DashboardBehaviorPtrOutput)
}

func (o DashboardBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardBehaviorPtrOutput struct{ *pulumi.OutputState }

func (DashboardBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBehavior)(nil)).Elem()
}

func (o DashboardBehaviorPtrOutput) ToDashboardBehaviorPtrOutput() DashboardBehaviorPtrOutput {
	return o
}

func (o DashboardBehaviorPtrOutput) ToDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardBehaviorPtrOutput {
	return o
}

func (o DashboardBehaviorPtrOutput) Elem() DashboardBehaviorOutput {
	return o.ApplyT(func(v *DashboardBehavior) DashboardBehavior {
		if v != nil {
			return *v
		}
		var ret DashboardBehavior
		return ret
	}).(DashboardBehaviorOutput)
}

func (o DashboardBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardBehaviorInput is an input type that accepts values of the DashboardBehavior enum
// A concrete instance of `DashboardBehaviorInput` can be one of the following:
//
//	DashboardBehaviorEnabled
//	DashboardBehaviorDisabled
type DashboardBehaviorInput interface {
	pulumi.Input

	ToDashboardBehaviorOutput() DashboardBehaviorOutput
	ToDashboardBehaviorOutputWithContext(context.Context) DashboardBehaviorOutput
}

var dashboardBehaviorPtrType = reflect.TypeOf((**DashboardBehavior)(nil)).Elem()

type DashboardBehaviorPtrInput interface {
	pulumi.Input

	ToDashboardBehaviorPtrOutput() DashboardBehaviorPtrOutput
	ToDashboardBehaviorPtrOutputWithContext(context.Context) DashboardBehaviorPtrOutput
}

type dashboardBehaviorPtr string

func DashboardBehaviorPtr(v string) DashboardBehaviorPtrInput {
	return (*dashboardBehaviorPtr)(&v)
}

func (*dashboardBehaviorPtr) ElementType() reflect.Type {
	return dashboardBehaviorPtrType
}

func (in *dashboardBehaviorPtr) ToDashboardBehaviorPtrOutput() DashboardBehaviorPtrOutput {
	return pulumi.ToOutput(in).(DashboardBehaviorPtrOutput)
}

func (in *dashboardBehaviorPtr) ToDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardBehaviorPtrOutput)
}

type DashboardBoxPlotFillStyle string

const (
	DashboardBoxPlotFillStyleSolid       = DashboardBoxPlotFillStyle("SOLID")
	DashboardBoxPlotFillStyleTransparent = DashboardBoxPlotFillStyle("TRANSPARENT")
)

func (DashboardBoxPlotFillStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotFillStyle)(nil)).Elem()
}

func (e DashboardBoxPlotFillStyle) ToDashboardBoxPlotFillStyleOutput() DashboardBoxPlotFillStyleOutput {
	return pulumi.ToOutput(e).(DashboardBoxPlotFillStyleOutput)
}

func (e DashboardBoxPlotFillStyle) ToDashboardBoxPlotFillStyleOutputWithContext(ctx context.Context) DashboardBoxPlotFillStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardBoxPlotFillStyleOutput)
}

func (e DashboardBoxPlotFillStyle) ToDashboardBoxPlotFillStylePtrOutput() DashboardBoxPlotFillStylePtrOutput {
	return e.ToDashboardBoxPlotFillStylePtrOutputWithContext(context.Background())
}

func (e DashboardBoxPlotFillStyle) ToDashboardBoxPlotFillStylePtrOutputWithContext(ctx context.Context) DashboardBoxPlotFillStylePtrOutput {
	return DashboardBoxPlotFillStyle(e).ToDashboardBoxPlotFillStyleOutputWithContext(ctx).ToDashboardBoxPlotFillStylePtrOutputWithContext(ctx)
}

func (e DashboardBoxPlotFillStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBoxPlotFillStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardBoxPlotFillStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardBoxPlotFillStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardBoxPlotFillStyleOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotFillStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardBoxPlotFillStyle)(nil)).Elem()
}

func (o DashboardBoxPlotFillStyleOutput) ToDashboardBoxPlotFillStyleOutput() DashboardBoxPlotFillStyleOutput {
	return o
}

func (o DashboardBoxPlotFillStyleOutput) ToDashboardBoxPlotFillStyleOutputWithContext(ctx context.Context) DashboardBoxPlotFillStyleOutput {
	return o
}

func (o DashboardBoxPlotFillStyleOutput) ToDashboardBoxPlotFillStylePtrOutput() DashboardBoxPlotFillStylePtrOutput {
	return o.ToDashboardBoxPlotFillStylePtrOutputWithContext(context.Background())
}

func (o DashboardBoxPlotFillStyleOutput) ToDashboardBoxPlotFillStylePtrOutputWithContext(ctx context.Context) DashboardBoxPlotFillStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardBoxPlotFillStyle) *DashboardBoxPlotFillStyle {
		return &v
	}).(DashboardBoxPlotFillStylePtrOutput)
}

func (o DashboardBoxPlotFillStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardBoxPlotFillStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBoxPlotFillStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardBoxPlotFillStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBoxPlotFillStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardBoxPlotFillStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardBoxPlotFillStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardBoxPlotFillStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardBoxPlotFillStyle)(nil)).Elem()
}

func (o DashboardBoxPlotFillStylePtrOutput) ToDashboardBoxPlotFillStylePtrOutput() DashboardBoxPlotFillStylePtrOutput {
	return o
}

func (o DashboardBoxPlotFillStylePtrOutput) ToDashboardBoxPlotFillStylePtrOutputWithContext(ctx context.Context) DashboardBoxPlotFillStylePtrOutput {
	return o
}

func (o DashboardBoxPlotFillStylePtrOutput) Elem() DashboardBoxPlotFillStyleOutput {
	return o.ApplyT(func(v *DashboardBoxPlotFillStyle) DashboardBoxPlotFillStyle {
		if v != nil {
			return *v
		}
		var ret DashboardBoxPlotFillStyle
		return ret
	}).(DashboardBoxPlotFillStyleOutput)
}

func (o DashboardBoxPlotFillStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardBoxPlotFillStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardBoxPlotFillStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardBoxPlotFillStyleInput is an input type that accepts values of the DashboardBoxPlotFillStyle enum
// A concrete instance of `DashboardBoxPlotFillStyleInput` can be one of the following:
//
//	DashboardBoxPlotFillStyleSolid
//	DashboardBoxPlotFillStyleTransparent
type DashboardBoxPlotFillStyleInput interface {
	pulumi.Input

	ToDashboardBoxPlotFillStyleOutput() DashboardBoxPlotFillStyleOutput
	ToDashboardBoxPlotFillStyleOutputWithContext(context.Context) DashboardBoxPlotFillStyleOutput
}

var dashboardBoxPlotFillStylePtrType = reflect.TypeOf((**DashboardBoxPlotFillStyle)(nil)).Elem()

type DashboardBoxPlotFillStylePtrInput interface {
	pulumi.Input

	ToDashboardBoxPlotFillStylePtrOutput() DashboardBoxPlotFillStylePtrOutput
	ToDashboardBoxPlotFillStylePtrOutputWithContext(context.Context) DashboardBoxPlotFillStylePtrOutput
}

type dashboardBoxPlotFillStylePtr string

func DashboardBoxPlotFillStylePtr(v string) DashboardBoxPlotFillStylePtrInput {
	return (*dashboardBoxPlotFillStylePtr)(&v)
}

func (*dashboardBoxPlotFillStylePtr) ElementType() reflect.Type {
	return dashboardBoxPlotFillStylePtrType
}

func (in *dashboardBoxPlotFillStylePtr) ToDashboardBoxPlotFillStylePtrOutput() DashboardBoxPlotFillStylePtrOutput {
	return pulumi.ToOutput(in).(DashboardBoxPlotFillStylePtrOutput)
}

func (in *dashboardBoxPlotFillStylePtr) ToDashboardBoxPlotFillStylePtrOutputWithContext(ctx context.Context) DashboardBoxPlotFillStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardBoxPlotFillStylePtrOutput)
}

type DashboardCategoricalAggregationFunction string

const (
	DashboardCategoricalAggregationFunctionCount         = DashboardCategoricalAggregationFunction("COUNT")
	DashboardCategoricalAggregationFunctionDistinctCount = DashboardCategoricalAggregationFunction("DISTINCT_COUNT")
)

func (DashboardCategoricalAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoricalAggregationFunction)(nil)).Elem()
}

func (e DashboardCategoricalAggregationFunction) ToDashboardCategoricalAggregationFunctionOutput() DashboardCategoricalAggregationFunctionOutput {
	return pulumi.ToOutput(e).(DashboardCategoricalAggregationFunctionOutput)
}

func (e DashboardCategoricalAggregationFunction) ToDashboardCategoricalAggregationFunctionOutputWithContext(ctx context.Context) DashboardCategoricalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardCategoricalAggregationFunctionOutput)
}

func (e DashboardCategoricalAggregationFunction) ToDashboardCategoricalAggregationFunctionPtrOutput() DashboardCategoricalAggregationFunctionPtrOutput {
	return e.ToDashboardCategoricalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e DashboardCategoricalAggregationFunction) ToDashboardCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardCategoricalAggregationFunctionPtrOutput {
	return DashboardCategoricalAggregationFunction(e).ToDashboardCategoricalAggregationFunctionOutputWithContext(ctx).ToDashboardCategoricalAggregationFunctionPtrOutputWithContext(ctx)
}

func (e DashboardCategoricalAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCategoricalAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCategoricalAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardCategoricalAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardCategoricalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (DashboardCategoricalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoricalAggregationFunction)(nil)).Elem()
}

func (o DashboardCategoricalAggregationFunctionOutput) ToDashboardCategoricalAggregationFunctionOutput() DashboardCategoricalAggregationFunctionOutput {
	return o
}

func (o DashboardCategoricalAggregationFunctionOutput) ToDashboardCategoricalAggregationFunctionOutputWithContext(ctx context.Context) DashboardCategoricalAggregationFunctionOutput {
	return o
}

func (o DashboardCategoricalAggregationFunctionOutput) ToDashboardCategoricalAggregationFunctionPtrOutput() DashboardCategoricalAggregationFunctionPtrOutput {
	return o.ToDashboardCategoricalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o DashboardCategoricalAggregationFunctionOutput) ToDashboardCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardCategoricalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCategoricalAggregationFunction) *DashboardCategoricalAggregationFunction {
		return &v
	}).(DashboardCategoricalAggregationFunctionPtrOutput)
}

func (o DashboardCategoricalAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardCategoricalAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCategoricalAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardCategoricalAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCategoricalAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCategoricalAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardCategoricalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (DashboardCategoricalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoricalAggregationFunction)(nil)).Elem()
}

func (o DashboardCategoricalAggregationFunctionPtrOutput) ToDashboardCategoricalAggregationFunctionPtrOutput() DashboardCategoricalAggregationFunctionPtrOutput {
	return o
}

func (o DashboardCategoricalAggregationFunctionPtrOutput) ToDashboardCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardCategoricalAggregationFunctionPtrOutput {
	return o
}

func (o DashboardCategoricalAggregationFunctionPtrOutput) Elem() DashboardCategoricalAggregationFunctionOutput {
	return o.ApplyT(func(v *DashboardCategoricalAggregationFunction) DashboardCategoricalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret DashboardCategoricalAggregationFunction
		return ret
	}).(DashboardCategoricalAggregationFunctionOutput)
}

func (o DashboardCategoricalAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCategoricalAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardCategoricalAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardCategoricalAggregationFunctionInput is an input type that accepts values of the DashboardCategoricalAggregationFunction enum
// A concrete instance of `DashboardCategoricalAggregationFunctionInput` can be one of the following:
//
//	DashboardCategoricalAggregationFunctionCount
//	DashboardCategoricalAggregationFunctionDistinctCount
type DashboardCategoricalAggregationFunctionInput interface {
	pulumi.Input

	ToDashboardCategoricalAggregationFunctionOutput() DashboardCategoricalAggregationFunctionOutput
	ToDashboardCategoricalAggregationFunctionOutputWithContext(context.Context) DashboardCategoricalAggregationFunctionOutput
}

var dashboardCategoricalAggregationFunctionPtrType = reflect.TypeOf((**DashboardCategoricalAggregationFunction)(nil)).Elem()

type DashboardCategoricalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToDashboardCategoricalAggregationFunctionPtrOutput() DashboardCategoricalAggregationFunctionPtrOutput
	ToDashboardCategoricalAggregationFunctionPtrOutputWithContext(context.Context) DashboardCategoricalAggregationFunctionPtrOutput
}

type dashboardCategoricalAggregationFunctionPtr string

func DashboardCategoricalAggregationFunctionPtr(v string) DashboardCategoricalAggregationFunctionPtrInput {
	return (*dashboardCategoricalAggregationFunctionPtr)(&v)
}

func (*dashboardCategoricalAggregationFunctionPtr) ElementType() reflect.Type {
	return dashboardCategoricalAggregationFunctionPtrType
}

func (in *dashboardCategoricalAggregationFunctionPtr) ToDashboardCategoricalAggregationFunctionPtrOutput() DashboardCategoricalAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(DashboardCategoricalAggregationFunctionPtrOutput)
}

func (in *dashboardCategoricalAggregationFunctionPtr) ToDashboardCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardCategoricalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardCategoricalAggregationFunctionPtrOutput)
}

type DashboardCategoryFilterMatchOperator string

const (
	DashboardCategoryFilterMatchOperatorEquals         = DashboardCategoryFilterMatchOperator("EQUALS")
	DashboardCategoryFilterMatchOperatorDoesNotEqual   = DashboardCategoryFilterMatchOperator("DOES_NOT_EQUAL")
	DashboardCategoryFilterMatchOperatorContains       = DashboardCategoryFilterMatchOperator("CONTAINS")
	DashboardCategoryFilterMatchOperatorDoesNotContain = DashboardCategoryFilterMatchOperator("DOES_NOT_CONTAIN")
	DashboardCategoryFilterMatchOperatorStartsWith     = DashboardCategoryFilterMatchOperator("STARTS_WITH")
	DashboardCategoryFilterMatchOperatorEndsWith       = DashboardCategoryFilterMatchOperator("ENDS_WITH")
)

func (DashboardCategoryFilterMatchOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoryFilterMatchOperator)(nil)).Elem()
}

func (e DashboardCategoryFilterMatchOperator) ToDashboardCategoryFilterMatchOperatorOutput() DashboardCategoryFilterMatchOperatorOutput {
	return pulumi.ToOutput(e).(DashboardCategoryFilterMatchOperatorOutput)
}

func (e DashboardCategoryFilterMatchOperator) ToDashboardCategoryFilterMatchOperatorOutputWithContext(ctx context.Context) DashboardCategoryFilterMatchOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardCategoryFilterMatchOperatorOutput)
}

func (e DashboardCategoryFilterMatchOperator) ToDashboardCategoryFilterMatchOperatorPtrOutput() DashboardCategoryFilterMatchOperatorPtrOutput {
	return e.ToDashboardCategoryFilterMatchOperatorPtrOutputWithContext(context.Background())
}

func (e DashboardCategoryFilterMatchOperator) ToDashboardCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterMatchOperatorPtrOutput {
	return DashboardCategoryFilterMatchOperator(e).ToDashboardCategoryFilterMatchOperatorOutputWithContext(ctx).ToDashboardCategoryFilterMatchOperatorPtrOutputWithContext(ctx)
}

func (e DashboardCategoryFilterMatchOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCategoryFilterMatchOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCategoryFilterMatchOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardCategoryFilterMatchOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardCategoryFilterMatchOperatorOutput struct{ *pulumi.OutputState }

func (DashboardCategoryFilterMatchOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoryFilterMatchOperator)(nil)).Elem()
}

func (o DashboardCategoryFilterMatchOperatorOutput) ToDashboardCategoryFilterMatchOperatorOutput() DashboardCategoryFilterMatchOperatorOutput {
	return o
}

func (o DashboardCategoryFilterMatchOperatorOutput) ToDashboardCategoryFilterMatchOperatorOutputWithContext(ctx context.Context) DashboardCategoryFilterMatchOperatorOutput {
	return o
}

func (o DashboardCategoryFilterMatchOperatorOutput) ToDashboardCategoryFilterMatchOperatorPtrOutput() DashboardCategoryFilterMatchOperatorPtrOutput {
	return o.ToDashboardCategoryFilterMatchOperatorPtrOutputWithContext(context.Background())
}

func (o DashboardCategoryFilterMatchOperatorOutput) ToDashboardCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCategoryFilterMatchOperator) *DashboardCategoryFilterMatchOperator {
		return &v
	}).(DashboardCategoryFilterMatchOperatorPtrOutput)
}

func (o DashboardCategoryFilterMatchOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardCategoryFilterMatchOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCategoryFilterMatchOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardCategoryFilterMatchOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCategoryFilterMatchOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCategoryFilterMatchOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardCategoryFilterMatchOperatorPtrOutput struct{ *pulumi.OutputState }

func (DashboardCategoryFilterMatchOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoryFilterMatchOperator)(nil)).Elem()
}

func (o DashboardCategoryFilterMatchOperatorPtrOutput) ToDashboardCategoryFilterMatchOperatorPtrOutput() DashboardCategoryFilterMatchOperatorPtrOutput {
	return o
}

func (o DashboardCategoryFilterMatchOperatorPtrOutput) ToDashboardCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterMatchOperatorPtrOutput {
	return o
}

func (o DashboardCategoryFilterMatchOperatorPtrOutput) Elem() DashboardCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v *DashboardCategoryFilterMatchOperator) DashboardCategoryFilterMatchOperator {
		if v != nil {
			return *v
		}
		var ret DashboardCategoryFilterMatchOperator
		return ret
	}).(DashboardCategoryFilterMatchOperatorOutput)
}

func (o DashboardCategoryFilterMatchOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCategoryFilterMatchOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardCategoryFilterMatchOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardCategoryFilterMatchOperatorInput is an input type that accepts values of the DashboardCategoryFilterMatchOperator enum
// A concrete instance of `DashboardCategoryFilterMatchOperatorInput` can be one of the following:
//
//	DashboardCategoryFilterMatchOperatorEquals
//	DashboardCategoryFilterMatchOperatorDoesNotEqual
//	DashboardCategoryFilterMatchOperatorContains
//	DashboardCategoryFilterMatchOperatorDoesNotContain
//	DashboardCategoryFilterMatchOperatorStartsWith
//	DashboardCategoryFilterMatchOperatorEndsWith
type DashboardCategoryFilterMatchOperatorInput interface {
	pulumi.Input

	ToDashboardCategoryFilterMatchOperatorOutput() DashboardCategoryFilterMatchOperatorOutput
	ToDashboardCategoryFilterMatchOperatorOutputWithContext(context.Context) DashboardCategoryFilterMatchOperatorOutput
}

var dashboardCategoryFilterMatchOperatorPtrType = reflect.TypeOf((**DashboardCategoryFilterMatchOperator)(nil)).Elem()

type DashboardCategoryFilterMatchOperatorPtrInput interface {
	pulumi.Input

	ToDashboardCategoryFilterMatchOperatorPtrOutput() DashboardCategoryFilterMatchOperatorPtrOutput
	ToDashboardCategoryFilterMatchOperatorPtrOutputWithContext(context.Context) DashboardCategoryFilterMatchOperatorPtrOutput
}

type dashboardCategoryFilterMatchOperatorPtr string

func DashboardCategoryFilterMatchOperatorPtr(v string) DashboardCategoryFilterMatchOperatorPtrInput {
	return (*dashboardCategoryFilterMatchOperatorPtr)(&v)
}

func (*dashboardCategoryFilterMatchOperatorPtr) ElementType() reflect.Type {
	return dashboardCategoryFilterMatchOperatorPtrType
}

func (in *dashboardCategoryFilterMatchOperatorPtr) ToDashboardCategoryFilterMatchOperatorPtrOutput() DashboardCategoryFilterMatchOperatorPtrOutput {
	return pulumi.ToOutput(in).(DashboardCategoryFilterMatchOperatorPtrOutput)
}

func (in *dashboardCategoryFilterMatchOperatorPtr) ToDashboardCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterMatchOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardCategoryFilterMatchOperatorPtrOutput)
}

type DashboardCategoryFilterSelectAllOptions string

const (
	DashboardCategoryFilterSelectAllOptionsFilterAllValues = DashboardCategoryFilterSelectAllOptions("FILTER_ALL_VALUES")
)

func (DashboardCategoryFilterSelectAllOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoryFilterSelectAllOptions)(nil)).Elem()
}

func (e DashboardCategoryFilterSelectAllOptions) ToDashboardCategoryFilterSelectAllOptionsOutput() DashboardCategoryFilterSelectAllOptionsOutput {
	return pulumi.ToOutput(e).(DashboardCategoryFilterSelectAllOptionsOutput)
}

func (e DashboardCategoryFilterSelectAllOptions) ToDashboardCategoryFilterSelectAllOptionsOutputWithContext(ctx context.Context) DashboardCategoryFilterSelectAllOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardCategoryFilterSelectAllOptionsOutput)
}

func (e DashboardCategoryFilterSelectAllOptions) ToDashboardCategoryFilterSelectAllOptionsPtrOutput() DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return e.ToDashboardCategoryFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (e DashboardCategoryFilterSelectAllOptions) ToDashboardCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return DashboardCategoryFilterSelectAllOptions(e).ToDashboardCategoryFilterSelectAllOptionsOutputWithContext(ctx).ToDashboardCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx)
}

func (e DashboardCategoryFilterSelectAllOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCategoryFilterSelectAllOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCategoryFilterSelectAllOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardCategoryFilterSelectAllOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardCategoryFilterSelectAllOptionsOutput struct{ *pulumi.OutputState }

func (DashboardCategoryFilterSelectAllOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCategoryFilterSelectAllOptions)(nil)).Elem()
}

func (o DashboardCategoryFilterSelectAllOptionsOutput) ToDashboardCategoryFilterSelectAllOptionsOutput() DashboardCategoryFilterSelectAllOptionsOutput {
	return o
}

func (o DashboardCategoryFilterSelectAllOptionsOutput) ToDashboardCategoryFilterSelectAllOptionsOutputWithContext(ctx context.Context) DashboardCategoryFilterSelectAllOptionsOutput {
	return o
}

func (o DashboardCategoryFilterSelectAllOptionsOutput) ToDashboardCategoryFilterSelectAllOptionsPtrOutput() DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return o.ToDashboardCategoryFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardCategoryFilterSelectAllOptionsOutput) ToDashboardCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCategoryFilterSelectAllOptions) *DashboardCategoryFilterSelectAllOptions {
		return &v
	}).(DashboardCategoryFilterSelectAllOptionsPtrOutput)
}

func (o DashboardCategoryFilterSelectAllOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardCategoryFilterSelectAllOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCategoryFilterSelectAllOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardCategoryFilterSelectAllOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCategoryFilterSelectAllOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCategoryFilterSelectAllOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardCategoryFilterSelectAllOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardCategoryFilterSelectAllOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCategoryFilterSelectAllOptions)(nil)).Elem()
}

func (o DashboardCategoryFilterSelectAllOptionsPtrOutput) ToDashboardCategoryFilterSelectAllOptionsPtrOutput() DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return o
}

func (o DashboardCategoryFilterSelectAllOptionsPtrOutput) ToDashboardCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return o
}

func (o DashboardCategoryFilterSelectAllOptionsPtrOutput) Elem() DashboardCategoryFilterSelectAllOptionsOutput {
	return o.ApplyT(func(v *DashboardCategoryFilterSelectAllOptions) DashboardCategoryFilterSelectAllOptions {
		if v != nil {
			return *v
		}
		var ret DashboardCategoryFilterSelectAllOptions
		return ret
	}).(DashboardCategoryFilterSelectAllOptionsOutput)
}

func (o DashboardCategoryFilterSelectAllOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCategoryFilterSelectAllOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardCategoryFilterSelectAllOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardCategoryFilterSelectAllOptionsInput is an input type that accepts values of the DashboardCategoryFilterSelectAllOptions enum
// A concrete instance of `DashboardCategoryFilterSelectAllOptionsInput` can be one of the following:
//
//	DashboardCategoryFilterSelectAllOptionsFilterAllValues
type DashboardCategoryFilterSelectAllOptionsInput interface {
	pulumi.Input

	ToDashboardCategoryFilterSelectAllOptionsOutput() DashboardCategoryFilterSelectAllOptionsOutput
	ToDashboardCategoryFilterSelectAllOptionsOutputWithContext(context.Context) DashboardCategoryFilterSelectAllOptionsOutput
}

var dashboardCategoryFilterSelectAllOptionsPtrType = reflect.TypeOf((**DashboardCategoryFilterSelectAllOptions)(nil)).Elem()

type DashboardCategoryFilterSelectAllOptionsPtrInput interface {
	pulumi.Input

	ToDashboardCategoryFilterSelectAllOptionsPtrOutput() DashboardCategoryFilterSelectAllOptionsPtrOutput
	ToDashboardCategoryFilterSelectAllOptionsPtrOutputWithContext(context.Context) DashboardCategoryFilterSelectAllOptionsPtrOutput
}

type dashboardCategoryFilterSelectAllOptionsPtr string

func DashboardCategoryFilterSelectAllOptionsPtr(v string) DashboardCategoryFilterSelectAllOptionsPtrInput {
	return (*dashboardCategoryFilterSelectAllOptionsPtr)(&v)
}

func (*dashboardCategoryFilterSelectAllOptionsPtr) ElementType() reflect.Type {
	return dashboardCategoryFilterSelectAllOptionsPtrType
}

func (in *dashboardCategoryFilterSelectAllOptionsPtr) ToDashboardCategoryFilterSelectAllOptionsPtrOutput() DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutput(in).(DashboardCategoryFilterSelectAllOptionsPtrOutput)
}

func (in *dashboardCategoryFilterSelectAllOptionsPtr) ToDashboardCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardCategoryFilterSelectAllOptionsPtrOutput)
}

type DashboardColorFillType string

const (
	DashboardColorFillTypeDiscrete = DashboardColorFillType("DISCRETE")
	DashboardColorFillTypeGradient = DashboardColorFillType("GRADIENT")
)

func (DashboardColorFillType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColorFillType)(nil)).Elem()
}

func (e DashboardColorFillType) ToDashboardColorFillTypeOutput() DashboardColorFillTypeOutput {
	return pulumi.ToOutput(e).(DashboardColorFillTypeOutput)
}

func (e DashboardColorFillType) ToDashboardColorFillTypeOutputWithContext(ctx context.Context) DashboardColorFillTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardColorFillTypeOutput)
}

func (e DashboardColorFillType) ToDashboardColorFillTypePtrOutput() DashboardColorFillTypePtrOutput {
	return e.ToDashboardColorFillTypePtrOutputWithContext(context.Background())
}

func (e DashboardColorFillType) ToDashboardColorFillTypePtrOutputWithContext(ctx context.Context) DashboardColorFillTypePtrOutput {
	return DashboardColorFillType(e).ToDashboardColorFillTypeOutputWithContext(ctx).ToDashboardColorFillTypePtrOutputWithContext(ctx)
}

func (e DashboardColorFillType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardColorFillType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardColorFillType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardColorFillType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardColorFillTypeOutput struct{ *pulumi.OutputState }

func (DashboardColorFillTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColorFillType)(nil)).Elem()
}

func (o DashboardColorFillTypeOutput) ToDashboardColorFillTypeOutput() DashboardColorFillTypeOutput {
	return o
}

func (o DashboardColorFillTypeOutput) ToDashboardColorFillTypeOutputWithContext(ctx context.Context) DashboardColorFillTypeOutput {
	return o
}

func (o DashboardColorFillTypeOutput) ToDashboardColorFillTypePtrOutput() DashboardColorFillTypePtrOutput {
	return o.ToDashboardColorFillTypePtrOutputWithContext(context.Background())
}

func (o DashboardColorFillTypeOutput) ToDashboardColorFillTypePtrOutputWithContext(ctx context.Context) DashboardColorFillTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardColorFillType) *DashboardColorFillType {
		return &v
	}).(DashboardColorFillTypePtrOutput)
}

func (o DashboardColorFillTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardColorFillTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardColorFillType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardColorFillTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardColorFillTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardColorFillType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardColorFillTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardColorFillTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColorFillType)(nil)).Elem()
}

func (o DashboardColorFillTypePtrOutput) ToDashboardColorFillTypePtrOutput() DashboardColorFillTypePtrOutput {
	return o
}

func (o DashboardColorFillTypePtrOutput) ToDashboardColorFillTypePtrOutputWithContext(ctx context.Context) DashboardColorFillTypePtrOutput {
	return o
}

func (o DashboardColorFillTypePtrOutput) Elem() DashboardColorFillTypeOutput {
	return o.ApplyT(func(v *DashboardColorFillType) DashboardColorFillType {
		if v != nil {
			return *v
		}
		var ret DashboardColorFillType
		return ret
	}).(DashboardColorFillTypeOutput)
}

func (o DashboardColorFillTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardColorFillTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardColorFillType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardColorFillTypeInput is an input type that accepts values of the DashboardColorFillType enum
// A concrete instance of `DashboardColorFillTypeInput` can be one of the following:
//
//	DashboardColorFillTypeDiscrete
//	DashboardColorFillTypeGradient
type DashboardColorFillTypeInput interface {
	pulumi.Input

	ToDashboardColorFillTypeOutput() DashboardColorFillTypeOutput
	ToDashboardColorFillTypeOutputWithContext(context.Context) DashboardColorFillTypeOutput
}

var dashboardColorFillTypePtrType = reflect.TypeOf((**DashboardColorFillType)(nil)).Elem()

type DashboardColorFillTypePtrInput interface {
	pulumi.Input

	ToDashboardColorFillTypePtrOutput() DashboardColorFillTypePtrOutput
	ToDashboardColorFillTypePtrOutputWithContext(context.Context) DashboardColorFillTypePtrOutput
}

type dashboardColorFillTypePtr string

func DashboardColorFillTypePtr(v string) DashboardColorFillTypePtrInput {
	return (*dashboardColorFillTypePtr)(&v)
}

func (*dashboardColorFillTypePtr) ElementType() reflect.Type {
	return dashboardColorFillTypePtrType
}

func (in *dashboardColorFillTypePtr) ToDashboardColorFillTypePtrOutput() DashboardColorFillTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardColorFillTypePtrOutput)
}

func (in *dashboardColorFillTypePtr) ToDashboardColorFillTypePtrOutputWithContext(ctx context.Context) DashboardColorFillTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardColorFillTypePtrOutput)
}

type DashboardColumnRole string

const (
	DashboardColumnRoleDimension = DashboardColumnRole("DIMENSION")
	DashboardColumnRoleMeasure   = DashboardColumnRole("MEASURE")
)

func (DashboardColumnRole) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnRole)(nil)).Elem()
}

func (e DashboardColumnRole) ToDashboardColumnRoleOutput() DashboardColumnRoleOutput {
	return pulumi.ToOutput(e).(DashboardColumnRoleOutput)
}

func (e DashboardColumnRole) ToDashboardColumnRoleOutputWithContext(ctx context.Context) DashboardColumnRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardColumnRoleOutput)
}

func (e DashboardColumnRole) ToDashboardColumnRolePtrOutput() DashboardColumnRolePtrOutput {
	return e.ToDashboardColumnRolePtrOutputWithContext(context.Background())
}

func (e DashboardColumnRole) ToDashboardColumnRolePtrOutputWithContext(ctx context.Context) DashboardColumnRolePtrOutput {
	return DashboardColumnRole(e).ToDashboardColumnRoleOutputWithContext(ctx).ToDashboardColumnRolePtrOutputWithContext(ctx)
}

func (e DashboardColumnRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardColumnRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardColumnRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardColumnRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardColumnRoleOutput struct{ *pulumi.OutputState }

func (DashboardColumnRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnRole)(nil)).Elem()
}

func (o DashboardColumnRoleOutput) ToDashboardColumnRoleOutput() DashboardColumnRoleOutput {
	return o
}

func (o DashboardColumnRoleOutput) ToDashboardColumnRoleOutputWithContext(ctx context.Context) DashboardColumnRoleOutput {
	return o
}

func (o DashboardColumnRoleOutput) ToDashboardColumnRolePtrOutput() DashboardColumnRolePtrOutput {
	return o.ToDashboardColumnRolePtrOutputWithContext(context.Background())
}

func (o DashboardColumnRoleOutput) ToDashboardColumnRolePtrOutputWithContext(ctx context.Context) DashboardColumnRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardColumnRole) *DashboardColumnRole {
		return &v
	}).(DashboardColumnRolePtrOutput)
}

func (o DashboardColumnRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardColumnRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardColumnRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardColumnRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardColumnRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardColumnRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardColumnRolePtrOutput struct{ *pulumi.OutputState }

func (DashboardColumnRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColumnRole)(nil)).Elem()
}

func (o DashboardColumnRolePtrOutput) ToDashboardColumnRolePtrOutput() DashboardColumnRolePtrOutput {
	return o
}

func (o DashboardColumnRolePtrOutput) ToDashboardColumnRolePtrOutputWithContext(ctx context.Context) DashboardColumnRolePtrOutput {
	return o
}

func (o DashboardColumnRolePtrOutput) Elem() DashboardColumnRoleOutput {
	return o.ApplyT(func(v *DashboardColumnRole) DashboardColumnRole {
		if v != nil {
			return *v
		}
		var ret DashboardColumnRole
		return ret
	}).(DashboardColumnRoleOutput)
}

func (o DashboardColumnRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardColumnRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardColumnRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardColumnRoleInput is an input type that accepts values of the DashboardColumnRole enum
// A concrete instance of `DashboardColumnRoleInput` can be one of the following:
//
//	DashboardColumnRoleDimension
//	DashboardColumnRoleMeasure
type DashboardColumnRoleInput interface {
	pulumi.Input

	ToDashboardColumnRoleOutput() DashboardColumnRoleOutput
	ToDashboardColumnRoleOutputWithContext(context.Context) DashboardColumnRoleOutput
}

var dashboardColumnRolePtrType = reflect.TypeOf((**DashboardColumnRole)(nil)).Elem()

type DashboardColumnRolePtrInput interface {
	pulumi.Input

	ToDashboardColumnRolePtrOutput() DashboardColumnRolePtrOutput
	ToDashboardColumnRolePtrOutputWithContext(context.Context) DashboardColumnRolePtrOutput
}

type dashboardColumnRolePtr string

func DashboardColumnRolePtr(v string) DashboardColumnRolePtrInput {
	return (*dashboardColumnRolePtr)(&v)
}

func (*dashboardColumnRolePtr) ElementType() reflect.Type {
	return dashboardColumnRolePtrType
}

func (in *dashboardColumnRolePtr) ToDashboardColumnRolePtrOutput() DashboardColumnRolePtrOutput {
	return pulumi.ToOutput(in).(DashboardColumnRolePtrOutput)
}

func (in *dashboardColumnRolePtr) ToDashboardColumnRolePtrOutputWithContext(ctx context.Context) DashboardColumnRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardColumnRolePtrOutput)
}

type DashboardComparisonMethod string

const (
	DashboardComparisonMethodDifference        = DashboardComparisonMethod("DIFFERENCE")
	DashboardComparisonMethodPercentDifference = DashboardComparisonMethod("PERCENT_DIFFERENCE")
	DashboardComparisonMethodPercent           = DashboardComparisonMethod("PERCENT")
)

func (DashboardComparisonMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComparisonMethod)(nil)).Elem()
}

func (e DashboardComparisonMethod) ToDashboardComparisonMethodOutput() DashboardComparisonMethodOutput {
	return pulumi.ToOutput(e).(DashboardComparisonMethodOutput)
}

func (e DashboardComparisonMethod) ToDashboardComparisonMethodOutputWithContext(ctx context.Context) DashboardComparisonMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardComparisonMethodOutput)
}

func (e DashboardComparisonMethod) ToDashboardComparisonMethodPtrOutput() DashboardComparisonMethodPtrOutput {
	return e.ToDashboardComparisonMethodPtrOutputWithContext(context.Background())
}

func (e DashboardComparisonMethod) ToDashboardComparisonMethodPtrOutputWithContext(ctx context.Context) DashboardComparisonMethodPtrOutput {
	return DashboardComparisonMethod(e).ToDashboardComparisonMethodOutputWithContext(ctx).ToDashboardComparisonMethodPtrOutputWithContext(ctx)
}

func (e DashboardComparisonMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardComparisonMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardComparisonMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardComparisonMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardComparisonMethodOutput struct{ *pulumi.OutputState }

func (DashboardComparisonMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComparisonMethod)(nil)).Elem()
}

func (o DashboardComparisonMethodOutput) ToDashboardComparisonMethodOutput() DashboardComparisonMethodOutput {
	return o
}

func (o DashboardComparisonMethodOutput) ToDashboardComparisonMethodOutputWithContext(ctx context.Context) DashboardComparisonMethodOutput {
	return o
}

func (o DashboardComparisonMethodOutput) ToDashboardComparisonMethodPtrOutput() DashboardComparisonMethodPtrOutput {
	return o.ToDashboardComparisonMethodPtrOutputWithContext(context.Background())
}

func (o DashboardComparisonMethodOutput) ToDashboardComparisonMethodPtrOutputWithContext(ctx context.Context) DashboardComparisonMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardComparisonMethod) *DashboardComparisonMethod {
		return &v
	}).(DashboardComparisonMethodPtrOutput)
}

func (o DashboardComparisonMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardComparisonMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardComparisonMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardComparisonMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardComparisonMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardComparisonMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardComparisonMethodPtrOutput struct{ *pulumi.OutputState }

func (DashboardComparisonMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComparisonMethod)(nil)).Elem()
}

func (o DashboardComparisonMethodPtrOutput) ToDashboardComparisonMethodPtrOutput() DashboardComparisonMethodPtrOutput {
	return o
}

func (o DashboardComparisonMethodPtrOutput) ToDashboardComparisonMethodPtrOutputWithContext(ctx context.Context) DashboardComparisonMethodPtrOutput {
	return o
}

func (o DashboardComparisonMethodPtrOutput) Elem() DashboardComparisonMethodOutput {
	return o.ApplyT(func(v *DashboardComparisonMethod) DashboardComparisonMethod {
		if v != nil {
			return *v
		}
		var ret DashboardComparisonMethod
		return ret
	}).(DashboardComparisonMethodOutput)
}

func (o DashboardComparisonMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardComparisonMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardComparisonMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardComparisonMethodInput is an input type that accepts values of the DashboardComparisonMethod enum
// A concrete instance of `DashboardComparisonMethodInput` can be one of the following:
//
//	DashboardComparisonMethodDifference
//	DashboardComparisonMethodPercentDifference
//	DashboardComparisonMethodPercent
type DashboardComparisonMethodInput interface {
	pulumi.Input

	ToDashboardComparisonMethodOutput() DashboardComparisonMethodOutput
	ToDashboardComparisonMethodOutputWithContext(context.Context) DashboardComparisonMethodOutput
}

var dashboardComparisonMethodPtrType = reflect.TypeOf((**DashboardComparisonMethod)(nil)).Elem()

type DashboardComparisonMethodPtrInput interface {
	pulumi.Input

	ToDashboardComparisonMethodPtrOutput() DashboardComparisonMethodPtrOutput
	ToDashboardComparisonMethodPtrOutputWithContext(context.Context) DashboardComparisonMethodPtrOutput
}

type dashboardComparisonMethodPtr string

func DashboardComparisonMethodPtr(v string) DashboardComparisonMethodPtrInput {
	return (*dashboardComparisonMethodPtr)(&v)
}

func (*dashboardComparisonMethodPtr) ElementType() reflect.Type {
	return dashboardComparisonMethodPtrType
}

func (in *dashboardComparisonMethodPtr) ToDashboardComparisonMethodPtrOutput() DashboardComparisonMethodPtrOutput {
	return pulumi.ToOutput(in).(DashboardComparisonMethodPtrOutput)
}

func (in *dashboardComparisonMethodPtr) ToDashboardComparisonMethodPtrOutputWithContext(ctx context.Context) DashboardComparisonMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardComparisonMethodPtrOutput)
}

type DashboardConditionalFormattingIconDisplayOption string

const (
	DashboardConditionalFormattingIconDisplayOptionIconOnly = DashboardConditionalFormattingIconDisplayOption("ICON_ONLY")
)

func (DashboardConditionalFormattingIconDisplayOption) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingIconDisplayOption)(nil)).Elem()
}

func (e DashboardConditionalFormattingIconDisplayOption) ToDashboardConditionalFormattingIconDisplayOptionOutput() DashboardConditionalFormattingIconDisplayOptionOutput {
	return pulumi.ToOutput(e).(DashboardConditionalFormattingIconDisplayOptionOutput)
}

func (e DashboardConditionalFormattingIconDisplayOption) ToDashboardConditionalFormattingIconDisplayOptionOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardConditionalFormattingIconDisplayOptionOutput)
}

func (e DashboardConditionalFormattingIconDisplayOption) ToDashboardConditionalFormattingIconDisplayOptionPtrOutput() DashboardConditionalFormattingIconDisplayOptionPtrOutput {
	return e.ToDashboardConditionalFormattingIconDisplayOptionPtrOutputWithContext(context.Background())
}

func (e DashboardConditionalFormattingIconDisplayOption) ToDashboardConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayOptionPtrOutput {
	return DashboardConditionalFormattingIconDisplayOption(e).ToDashboardConditionalFormattingIconDisplayOptionOutputWithContext(ctx).ToDashboardConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx)
}

func (e DashboardConditionalFormattingIconDisplayOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardConditionalFormattingIconDisplayOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardConditionalFormattingIconDisplayOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardConditionalFormattingIconDisplayOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardConditionalFormattingIconDisplayOptionOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingIconDisplayOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingIconDisplayOption)(nil)).Elem()
}

func (o DashboardConditionalFormattingIconDisplayOptionOutput) ToDashboardConditionalFormattingIconDisplayOptionOutput() DashboardConditionalFormattingIconDisplayOptionOutput {
	return o
}

func (o DashboardConditionalFormattingIconDisplayOptionOutput) ToDashboardConditionalFormattingIconDisplayOptionOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayOptionOutput {
	return o
}

func (o DashboardConditionalFormattingIconDisplayOptionOutput) ToDashboardConditionalFormattingIconDisplayOptionPtrOutput() DashboardConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ToDashboardConditionalFormattingIconDisplayOptionPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconDisplayOptionOutput) ToDashboardConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardConditionalFormattingIconDisplayOption) *DashboardConditionalFormattingIconDisplayOption {
		return &v
	}).(DashboardConditionalFormattingIconDisplayOptionPtrOutput)
}

func (o DashboardConditionalFormattingIconDisplayOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconDisplayOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardConditionalFormattingIconDisplayOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardConditionalFormattingIconDisplayOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconDisplayOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardConditionalFormattingIconDisplayOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardConditionalFormattingIconDisplayOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingIconDisplayOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingIconDisplayOption)(nil)).Elem()
}

func (o DashboardConditionalFormattingIconDisplayOptionPtrOutput) ToDashboardConditionalFormattingIconDisplayOptionPtrOutput() DashboardConditionalFormattingIconDisplayOptionPtrOutput {
	return o
}

func (o DashboardConditionalFormattingIconDisplayOptionPtrOutput) ToDashboardConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayOptionPtrOutput {
	return o
}

func (o DashboardConditionalFormattingIconDisplayOptionPtrOutput) Elem() DashboardConditionalFormattingIconDisplayOptionOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingIconDisplayOption) DashboardConditionalFormattingIconDisplayOption {
		if v != nil {
			return *v
		}
		var ret DashboardConditionalFormattingIconDisplayOption
		return ret
	}).(DashboardConditionalFormattingIconDisplayOptionOutput)
}

func (o DashboardConditionalFormattingIconDisplayOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconDisplayOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardConditionalFormattingIconDisplayOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardConditionalFormattingIconDisplayOptionInput is an input type that accepts values of the DashboardConditionalFormattingIconDisplayOption enum
// A concrete instance of `DashboardConditionalFormattingIconDisplayOptionInput` can be one of the following:
//
//	DashboardConditionalFormattingIconDisplayOptionIconOnly
type DashboardConditionalFormattingIconDisplayOptionInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingIconDisplayOptionOutput() DashboardConditionalFormattingIconDisplayOptionOutput
	ToDashboardConditionalFormattingIconDisplayOptionOutputWithContext(context.Context) DashboardConditionalFormattingIconDisplayOptionOutput
}

var dashboardConditionalFormattingIconDisplayOptionPtrType = reflect.TypeOf((**DashboardConditionalFormattingIconDisplayOption)(nil)).Elem()

type DashboardConditionalFormattingIconDisplayOptionPtrInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingIconDisplayOptionPtrOutput() DashboardConditionalFormattingIconDisplayOptionPtrOutput
	ToDashboardConditionalFormattingIconDisplayOptionPtrOutputWithContext(context.Context) DashboardConditionalFormattingIconDisplayOptionPtrOutput
}

type dashboardConditionalFormattingIconDisplayOptionPtr string

func DashboardConditionalFormattingIconDisplayOptionPtr(v string) DashboardConditionalFormattingIconDisplayOptionPtrInput {
	return (*dashboardConditionalFormattingIconDisplayOptionPtr)(&v)
}

func (*dashboardConditionalFormattingIconDisplayOptionPtr) ElementType() reflect.Type {
	return dashboardConditionalFormattingIconDisplayOptionPtrType
}

func (in *dashboardConditionalFormattingIconDisplayOptionPtr) ToDashboardConditionalFormattingIconDisplayOptionPtrOutput() DashboardConditionalFormattingIconDisplayOptionPtrOutput {
	return pulumi.ToOutput(in).(DashboardConditionalFormattingIconDisplayOptionPtrOutput)
}

func (in *dashboardConditionalFormattingIconDisplayOptionPtr) ToDashboardConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardConditionalFormattingIconDisplayOptionPtrOutput)
}

type DashboardConditionalFormattingIconSetType string

const (
	DashboardConditionalFormattingIconSetTypePlusMinus        = DashboardConditionalFormattingIconSetType("PLUS_MINUS")
	DashboardConditionalFormattingIconSetTypeCheckX           = DashboardConditionalFormattingIconSetType("CHECK_X")
	DashboardConditionalFormattingIconSetTypeThreeColorArrow  = DashboardConditionalFormattingIconSetType("THREE_COLOR_ARROW")
	DashboardConditionalFormattingIconSetTypeThreeGrayArrow   = DashboardConditionalFormattingIconSetType("THREE_GRAY_ARROW")
	DashboardConditionalFormattingIconSetTypeCaretUpMinusDown = DashboardConditionalFormattingIconSetType("CARET_UP_MINUS_DOWN")
	DashboardConditionalFormattingIconSetTypeThreeShape       = DashboardConditionalFormattingIconSetType("THREE_SHAPE")
	DashboardConditionalFormattingIconSetTypeThreeCircle      = DashboardConditionalFormattingIconSetType("THREE_CIRCLE")
	DashboardConditionalFormattingIconSetTypeFlags            = DashboardConditionalFormattingIconSetType("FLAGS")
	DashboardConditionalFormattingIconSetTypeBars             = DashboardConditionalFormattingIconSetType("BARS")
	DashboardConditionalFormattingIconSetTypeFourColorArrow   = DashboardConditionalFormattingIconSetType("FOUR_COLOR_ARROW")
	DashboardConditionalFormattingIconSetTypeFourGrayArrow    = DashboardConditionalFormattingIconSetType("FOUR_GRAY_ARROW")
)

func (DashboardConditionalFormattingIconSetType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingIconSetType)(nil)).Elem()
}

func (e DashboardConditionalFormattingIconSetType) ToDashboardConditionalFormattingIconSetTypeOutput() DashboardConditionalFormattingIconSetTypeOutput {
	return pulumi.ToOutput(e).(DashboardConditionalFormattingIconSetTypeOutput)
}

func (e DashboardConditionalFormattingIconSetType) ToDashboardConditionalFormattingIconSetTypeOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardConditionalFormattingIconSetTypeOutput)
}

func (e DashboardConditionalFormattingIconSetType) ToDashboardConditionalFormattingIconSetTypePtrOutput() DashboardConditionalFormattingIconSetTypePtrOutput {
	return e.ToDashboardConditionalFormattingIconSetTypePtrOutputWithContext(context.Background())
}

func (e DashboardConditionalFormattingIconSetType) ToDashboardConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetTypePtrOutput {
	return DashboardConditionalFormattingIconSetType(e).ToDashboardConditionalFormattingIconSetTypeOutputWithContext(ctx).ToDashboardConditionalFormattingIconSetTypePtrOutputWithContext(ctx)
}

func (e DashboardConditionalFormattingIconSetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardConditionalFormattingIconSetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardConditionalFormattingIconSetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardConditionalFormattingIconSetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardConditionalFormattingIconSetTypeOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingIconSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingIconSetType)(nil)).Elem()
}

func (o DashboardConditionalFormattingIconSetTypeOutput) ToDashboardConditionalFormattingIconSetTypeOutput() DashboardConditionalFormattingIconSetTypeOutput {
	return o
}

func (o DashboardConditionalFormattingIconSetTypeOutput) ToDashboardConditionalFormattingIconSetTypeOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetTypeOutput {
	return o
}

func (o DashboardConditionalFormattingIconSetTypeOutput) ToDashboardConditionalFormattingIconSetTypePtrOutput() DashboardConditionalFormattingIconSetTypePtrOutput {
	return o.ToDashboardConditionalFormattingIconSetTypePtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconSetTypeOutput) ToDashboardConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardConditionalFormattingIconSetType) *DashboardConditionalFormattingIconSetType {
		return &v
	}).(DashboardConditionalFormattingIconSetTypePtrOutput)
}

func (o DashboardConditionalFormattingIconSetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconSetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardConditionalFormattingIconSetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardConditionalFormattingIconSetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconSetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardConditionalFormattingIconSetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardConditionalFormattingIconSetTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingIconSetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingIconSetType)(nil)).Elem()
}

func (o DashboardConditionalFormattingIconSetTypePtrOutput) ToDashboardConditionalFormattingIconSetTypePtrOutput() DashboardConditionalFormattingIconSetTypePtrOutput {
	return o
}

func (o DashboardConditionalFormattingIconSetTypePtrOutput) ToDashboardConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetTypePtrOutput {
	return o
}

func (o DashboardConditionalFormattingIconSetTypePtrOutput) Elem() DashboardConditionalFormattingIconSetTypeOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingIconSetType) DashboardConditionalFormattingIconSetType {
		if v != nil {
			return *v
		}
		var ret DashboardConditionalFormattingIconSetType
		return ret
	}).(DashboardConditionalFormattingIconSetTypeOutput)
}

func (o DashboardConditionalFormattingIconSetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconSetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardConditionalFormattingIconSetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardConditionalFormattingIconSetTypeInput is an input type that accepts values of the DashboardConditionalFormattingIconSetType enum
// A concrete instance of `DashboardConditionalFormattingIconSetTypeInput` can be one of the following:
//
//	DashboardConditionalFormattingIconSetTypePlusMinus
//	DashboardConditionalFormattingIconSetTypeCheckX
//	DashboardConditionalFormattingIconSetTypeThreeColorArrow
//	DashboardConditionalFormattingIconSetTypeThreeGrayArrow
//	DashboardConditionalFormattingIconSetTypeCaretUpMinusDown
//	DashboardConditionalFormattingIconSetTypeThreeShape
//	DashboardConditionalFormattingIconSetTypeThreeCircle
//	DashboardConditionalFormattingIconSetTypeFlags
//	DashboardConditionalFormattingIconSetTypeBars
//	DashboardConditionalFormattingIconSetTypeFourColorArrow
//	DashboardConditionalFormattingIconSetTypeFourGrayArrow
type DashboardConditionalFormattingIconSetTypeInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingIconSetTypeOutput() DashboardConditionalFormattingIconSetTypeOutput
	ToDashboardConditionalFormattingIconSetTypeOutputWithContext(context.Context) DashboardConditionalFormattingIconSetTypeOutput
}

var dashboardConditionalFormattingIconSetTypePtrType = reflect.TypeOf((**DashboardConditionalFormattingIconSetType)(nil)).Elem()

type DashboardConditionalFormattingIconSetTypePtrInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingIconSetTypePtrOutput() DashboardConditionalFormattingIconSetTypePtrOutput
	ToDashboardConditionalFormattingIconSetTypePtrOutputWithContext(context.Context) DashboardConditionalFormattingIconSetTypePtrOutput
}

type dashboardConditionalFormattingIconSetTypePtr string

func DashboardConditionalFormattingIconSetTypePtr(v string) DashboardConditionalFormattingIconSetTypePtrInput {
	return (*dashboardConditionalFormattingIconSetTypePtr)(&v)
}

func (*dashboardConditionalFormattingIconSetTypePtr) ElementType() reflect.Type {
	return dashboardConditionalFormattingIconSetTypePtrType
}

func (in *dashboardConditionalFormattingIconSetTypePtr) ToDashboardConditionalFormattingIconSetTypePtrOutput() DashboardConditionalFormattingIconSetTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardConditionalFormattingIconSetTypePtrOutput)
}

func (in *dashboardConditionalFormattingIconSetTypePtr) ToDashboardConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardConditionalFormattingIconSetTypePtrOutput)
}

type DashboardCrossDatasetTypes string

const (
	DashboardCrossDatasetTypesAllDatasets   = DashboardCrossDatasetTypes("ALL_DATASETS")
	DashboardCrossDatasetTypesSingleDataset = DashboardCrossDatasetTypes("SINGLE_DATASET")
)

func (DashboardCrossDatasetTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCrossDatasetTypes)(nil)).Elem()
}

func (e DashboardCrossDatasetTypes) ToDashboardCrossDatasetTypesOutput() DashboardCrossDatasetTypesOutput {
	return pulumi.ToOutput(e).(DashboardCrossDatasetTypesOutput)
}

func (e DashboardCrossDatasetTypes) ToDashboardCrossDatasetTypesOutputWithContext(ctx context.Context) DashboardCrossDatasetTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardCrossDatasetTypesOutput)
}

func (e DashboardCrossDatasetTypes) ToDashboardCrossDatasetTypesPtrOutput() DashboardCrossDatasetTypesPtrOutput {
	return e.ToDashboardCrossDatasetTypesPtrOutputWithContext(context.Background())
}

func (e DashboardCrossDatasetTypes) ToDashboardCrossDatasetTypesPtrOutputWithContext(ctx context.Context) DashboardCrossDatasetTypesPtrOutput {
	return DashboardCrossDatasetTypes(e).ToDashboardCrossDatasetTypesOutputWithContext(ctx).ToDashboardCrossDatasetTypesPtrOutputWithContext(ctx)
}

func (e DashboardCrossDatasetTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCrossDatasetTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCrossDatasetTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardCrossDatasetTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardCrossDatasetTypesOutput struct{ *pulumi.OutputState }

func (DashboardCrossDatasetTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCrossDatasetTypes)(nil)).Elem()
}

func (o DashboardCrossDatasetTypesOutput) ToDashboardCrossDatasetTypesOutput() DashboardCrossDatasetTypesOutput {
	return o
}

func (o DashboardCrossDatasetTypesOutput) ToDashboardCrossDatasetTypesOutputWithContext(ctx context.Context) DashboardCrossDatasetTypesOutput {
	return o
}

func (o DashboardCrossDatasetTypesOutput) ToDashboardCrossDatasetTypesPtrOutput() DashboardCrossDatasetTypesPtrOutput {
	return o.ToDashboardCrossDatasetTypesPtrOutputWithContext(context.Background())
}

func (o DashboardCrossDatasetTypesOutput) ToDashboardCrossDatasetTypesPtrOutputWithContext(ctx context.Context) DashboardCrossDatasetTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCrossDatasetTypes) *DashboardCrossDatasetTypes {
		return &v
	}).(DashboardCrossDatasetTypesPtrOutput)
}

func (o DashboardCrossDatasetTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardCrossDatasetTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCrossDatasetTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardCrossDatasetTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCrossDatasetTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCrossDatasetTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardCrossDatasetTypesPtrOutput struct{ *pulumi.OutputState }

func (DashboardCrossDatasetTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCrossDatasetTypes)(nil)).Elem()
}

func (o DashboardCrossDatasetTypesPtrOutput) ToDashboardCrossDatasetTypesPtrOutput() DashboardCrossDatasetTypesPtrOutput {
	return o
}

func (o DashboardCrossDatasetTypesPtrOutput) ToDashboardCrossDatasetTypesPtrOutputWithContext(ctx context.Context) DashboardCrossDatasetTypesPtrOutput {
	return o
}

func (o DashboardCrossDatasetTypesPtrOutput) Elem() DashboardCrossDatasetTypesOutput {
	return o.ApplyT(func(v *DashboardCrossDatasetTypes) DashboardCrossDatasetTypes {
		if v != nil {
			return *v
		}
		var ret DashboardCrossDatasetTypes
		return ret
	}).(DashboardCrossDatasetTypesOutput)
}

func (o DashboardCrossDatasetTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCrossDatasetTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardCrossDatasetTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardCrossDatasetTypesInput is an input type that accepts values of the DashboardCrossDatasetTypes enum
// A concrete instance of `DashboardCrossDatasetTypesInput` can be one of the following:
//
//	DashboardCrossDatasetTypesAllDatasets
//	DashboardCrossDatasetTypesSingleDataset
type DashboardCrossDatasetTypesInput interface {
	pulumi.Input

	ToDashboardCrossDatasetTypesOutput() DashboardCrossDatasetTypesOutput
	ToDashboardCrossDatasetTypesOutputWithContext(context.Context) DashboardCrossDatasetTypesOutput
}

var dashboardCrossDatasetTypesPtrType = reflect.TypeOf((**DashboardCrossDatasetTypes)(nil)).Elem()

type DashboardCrossDatasetTypesPtrInput interface {
	pulumi.Input

	ToDashboardCrossDatasetTypesPtrOutput() DashboardCrossDatasetTypesPtrOutput
	ToDashboardCrossDatasetTypesPtrOutputWithContext(context.Context) DashboardCrossDatasetTypesPtrOutput
}

type dashboardCrossDatasetTypesPtr string

func DashboardCrossDatasetTypesPtr(v string) DashboardCrossDatasetTypesPtrInput {
	return (*dashboardCrossDatasetTypesPtr)(&v)
}

func (*dashboardCrossDatasetTypesPtr) ElementType() reflect.Type {
	return dashboardCrossDatasetTypesPtrType
}

func (in *dashboardCrossDatasetTypesPtr) ToDashboardCrossDatasetTypesPtrOutput() DashboardCrossDatasetTypesPtrOutput {
	return pulumi.ToOutput(in).(DashboardCrossDatasetTypesPtrOutput)
}

func (in *dashboardCrossDatasetTypesPtr) ToDashboardCrossDatasetTypesPtrOutputWithContext(ctx context.Context) DashboardCrossDatasetTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardCrossDatasetTypesPtrOutput)
}

type DashboardCustomContentImageScalingConfiguration string

const (
	DashboardCustomContentImageScalingConfigurationFitToHeight   = DashboardCustomContentImageScalingConfiguration("FIT_TO_HEIGHT")
	DashboardCustomContentImageScalingConfigurationFitToWidth    = DashboardCustomContentImageScalingConfiguration("FIT_TO_WIDTH")
	DashboardCustomContentImageScalingConfigurationDoNotScale    = DashboardCustomContentImageScalingConfiguration("DO_NOT_SCALE")
	DashboardCustomContentImageScalingConfigurationScaleToVisual = DashboardCustomContentImageScalingConfiguration("SCALE_TO_VISUAL")
)

func (DashboardCustomContentImageScalingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomContentImageScalingConfiguration)(nil)).Elem()
}

func (e DashboardCustomContentImageScalingConfiguration) ToDashboardCustomContentImageScalingConfigurationOutput() DashboardCustomContentImageScalingConfigurationOutput {
	return pulumi.ToOutput(e).(DashboardCustomContentImageScalingConfigurationOutput)
}

func (e DashboardCustomContentImageScalingConfiguration) ToDashboardCustomContentImageScalingConfigurationOutputWithContext(ctx context.Context) DashboardCustomContentImageScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardCustomContentImageScalingConfigurationOutput)
}

func (e DashboardCustomContentImageScalingConfiguration) ToDashboardCustomContentImageScalingConfigurationPtrOutput() DashboardCustomContentImageScalingConfigurationPtrOutput {
	return e.ToDashboardCustomContentImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (e DashboardCustomContentImageScalingConfiguration) ToDashboardCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomContentImageScalingConfigurationPtrOutput {
	return DashboardCustomContentImageScalingConfiguration(e).ToDashboardCustomContentImageScalingConfigurationOutputWithContext(ctx).ToDashboardCustomContentImageScalingConfigurationPtrOutputWithContext(ctx)
}

func (e DashboardCustomContentImageScalingConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCustomContentImageScalingConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCustomContentImageScalingConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardCustomContentImageScalingConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardCustomContentImageScalingConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardCustomContentImageScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomContentImageScalingConfiguration)(nil)).Elem()
}

func (o DashboardCustomContentImageScalingConfigurationOutput) ToDashboardCustomContentImageScalingConfigurationOutput() DashboardCustomContentImageScalingConfigurationOutput {
	return o
}

func (o DashboardCustomContentImageScalingConfigurationOutput) ToDashboardCustomContentImageScalingConfigurationOutputWithContext(ctx context.Context) DashboardCustomContentImageScalingConfigurationOutput {
	return o
}

func (o DashboardCustomContentImageScalingConfigurationOutput) ToDashboardCustomContentImageScalingConfigurationPtrOutput() DashboardCustomContentImageScalingConfigurationPtrOutput {
	return o.ToDashboardCustomContentImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardCustomContentImageScalingConfigurationOutput) ToDashboardCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomContentImageScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomContentImageScalingConfiguration) *DashboardCustomContentImageScalingConfiguration {
		return &v
	}).(DashboardCustomContentImageScalingConfigurationPtrOutput)
}

func (o DashboardCustomContentImageScalingConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardCustomContentImageScalingConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCustomContentImageScalingConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardCustomContentImageScalingConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCustomContentImageScalingConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCustomContentImageScalingConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardCustomContentImageScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomContentImageScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomContentImageScalingConfiguration)(nil)).Elem()
}

func (o DashboardCustomContentImageScalingConfigurationPtrOutput) ToDashboardCustomContentImageScalingConfigurationPtrOutput() DashboardCustomContentImageScalingConfigurationPtrOutput {
	return o
}

func (o DashboardCustomContentImageScalingConfigurationPtrOutput) ToDashboardCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomContentImageScalingConfigurationPtrOutput {
	return o
}

func (o DashboardCustomContentImageScalingConfigurationPtrOutput) Elem() DashboardCustomContentImageScalingConfigurationOutput {
	return o.ApplyT(func(v *DashboardCustomContentImageScalingConfiguration) DashboardCustomContentImageScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardCustomContentImageScalingConfiguration
		return ret
	}).(DashboardCustomContentImageScalingConfigurationOutput)
}

func (o DashboardCustomContentImageScalingConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCustomContentImageScalingConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardCustomContentImageScalingConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardCustomContentImageScalingConfigurationInput is an input type that accepts values of the DashboardCustomContentImageScalingConfiguration enum
// A concrete instance of `DashboardCustomContentImageScalingConfigurationInput` can be one of the following:
//
//	DashboardCustomContentImageScalingConfigurationFitToHeight
//	DashboardCustomContentImageScalingConfigurationFitToWidth
//	DashboardCustomContentImageScalingConfigurationDoNotScale
//	DashboardCustomContentImageScalingConfigurationScaleToVisual
type DashboardCustomContentImageScalingConfigurationInput interface {
	pulumi.Input

	ToDashboardCustomContentImageScalingConfigurationOutput() DashboardCustomContentImageScalingConfigurationOutput
	ToDashboardCustomContentImageScalingConfigurationOutputWithContext(context.Context) DashboardCustomContentImageScalingConfigurationOutput
}

var dashboardCustomContentImageScalingConfigurationPtrType = reflect.TypeOf((**DashboardCustomContentImageScalingConfiguration)(nil)).Elem()

type DashboardCustomContentImageScalingConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardCustomContentImageScalingConfigurationPtrOutput() DashboardCustomContentImageScalingConfigurationPtrOutput
	ToDashboardCustomContentImageScalingConfigurationPtrOutputWithContext(context.Context) DashboardCustomContentImageScalingConfigurationPtrOutput
}

type dashboardCustomContentImageScalingConfigurationPtr string

func DashboardCustomContentImageScalingConfigurationPtr(v string) DashboardCustomContentImageScalingConfigurationPtrInput {
	return (*dashboardCustomContentImageScalingConfigurationPtr)(&v)
}

func (*dashboardCustomContentImageScalingConfigurationPtr) ElementType() reflect.Type {
	return dashboardCustomContentImageScalingConfigurationPtrType
}

func (in *dashboardCustomContentImageScalingConfigurationPtr) ToDashboardCustomContentImageScalingConfigurationPtrOutput() DashboardCustomContentImageScalingConfigurationPtrOutput {
	return pulumi.ToOutput(in).(DashboardCustomContentImageScalingConfigurationPtrOutput)
}

func (in *dashboardCustomContentImageScalingConfigurationPtr) ToDashboardCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomContentImageScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardCustomContentImageScalingConfigurationPtrOutput)
}

type DashboardCustomContentType string

const (
	DashboardCustomContentTypeImage                = DashboardCustomContentType("IMAGE")
	DashboardCustomContentTypeOtherEmbeddedContent = DashboardCustomContentType("OTHER_EMBEDDED_CONTENT")
)

func (DashboardCustomContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomContentType)(nil)).Elem()
}

func (e DashboardCustomContentType) ToDashboardCustomContentTypeOutput() DashboardCustomContentTypeOutput {
	return pulumi.ToOutput(e).(DashboardCustomContentTypeOutput)
}

func (e DashboardCustomContentType) ToDashboardCustomContentTypeOutputWithContext(ctx context.Context) DashboardCustomContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardCustomContentTypeOutput)
}

func (e DashboardCustomContentType) ToDashboardCustomContentTypePtrOutput() DashboardCustomContentTypePtrOutput {
	return e.ToDashboardCustomContentTypePtrOutputWithContext(context.Background())
}

func (e DashboardCustomContentType) ToDashboardCustomContentTypePtrOutputWithContext(ctx context.Context) DashboardCustomContentTypePtrOutput {
	return DashboardCustomContentType(e).ToDashboardCustomContentTypeOutputWithContext(ctx).ToDashboardCustomContentTypePtrOutputWithContext(ctx)
}

func (e DashboardCustomContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCustomContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardCustomContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardCustomContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardCustomContentTypeOutput struct{ *pulumi.OutputState }

func (DashboardCustomContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomContentType)(nil)).Elem()
}

func (o DashboardCustomContentTypeOutput) ToDashboardCustomContentTypeOutput() DashboardCustomContentTypeOutput {
	return o
}

func (o DashboardCustomContentTypeOutput) ToDashboardCustomContentTypeOutputWithContext(ctx context.Context) DashboardCustomContentTypeOutput {
	return o
}

func (o DashboardCustomContentTypeOutput) ToDashboardCustomContentTypePtrOutput() DashboardCustomContentTypePtrOutput {
	return o.ToDashboardCustomContentTypePtrOutputWithContext(context.Background())
}

func (o DashboardCustomContentTypeOutput) ToDashboardCustomContentTypePtrOutputWithContext(ctx context.Context) DashboardCustomContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomContentType) *DashboardCustomContentType {
		return &v
	}).(DashboardCustomContentTypePtrOutput)
}

func (o DashboardCustomContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardCustomContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCustomContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardCustomContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCustomContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardCustomContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardCustomContentTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomContentType)(nil)).Elem()
}

func (o DashboardCustomContentTypePtrOutput) ToDashboardCustomContentTypePtrOutput() DashboardCustomContentTypePtrOutput {
	return o
}

func (o DashboardCustomContentTypePtrOutput) ToDashboardCustomContentTypePtrOutputWithContext(ctx context.Context) DashboardCustomContentTypePtrOutput {
	return o
}

func (o DashboardCustomContentTypePtrOutput) Elem() DashboardCustomContentTypeOutput {
	return o.ApplyT(func(v *DashboardCustomContentType) DashboardCustomContentType {
		if v != nil {
			return *v
		}
		var ret DashboardCustomContentType
		return ret
	}).(DashboardCustomContentTypeOutput)
}

func (o DashboardCustomContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardCustomContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardCustomContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardCustomContentTypeInput is an input type that accepts values of the DashboardCustomContentType enum
// A concrete instance of `DashboardCustomContentTypeInput` can be one of the following:
//
//	DashboardCustomContentTypeImage
//	DashboardCustomContentTypeOtherEmbeddedContent
type DashboardCustomContentTypeInput interface {
	pulumi.Input

	ToDashboardCustomContentTypeOutput() DashboardCustomContentTypeOutput
	ToDashboardCustomContentTypeOutputWithContext(context.Context) DashboardCustomContentTypeOutput
}

var dashboardCustomContentTypePtrType = reflect.TypeOf((**DashboardCustomContentType)(nil)).Elem()

type DashboardCustomContentTypePtrInput interface {
	pulumi.Input

	ToDashboardCustomContentTypePtrOutput() DashboardCustomContentTypePtrOutput
	ToDashboardCustomContentTypePtrOutputWithContext(context.Context) DashboardCustomContentTypePtrOutput
}

type dashboardCustomContentTypePtr string

func DashboardCustomContentTypePtr(v string) DashboardCustomContentTypePtrInput {
	return (*dashboardCustomContentTypePtr)(&v)
}

func (*dashboardCustomContentTypePtr) ElementType() reflect.Type {
	return dashboardCustomContentTypePtrType
}

func (in *dashboardCustomContentTypePtr) ToDashboardCustomContentTypePtrOutput() DashboardCustomContentTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardCustomContentTypePtrOutput)
}

func (in *dashboardCustomContentTypePtr) ToDashboardCustomContentTypePtrOutputWithContext(ctx context.Context) DashboardCustomContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardCustomContentTypePtrOutput)
}

type DashboardDataLabelContent string

const (
	DashboardDataLabelContentValue           = DashboardDataLabelContent("VALUE")
	DashboardDataLabelContentPercent         = DashboardDataLabelContent("PERCENT")
	DashboardDataLabelContentValueAndPercent = DashboardDataLabelContent("VALUE_AND_PERCENT")
)

func (DashboardDataLabelContent) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataLabelContent)(nil)).Elem()
}

func (e DashboardDataLabelContent) ToDashboardDataLabelContentOutput() DashboardDataLabelContentOutput {
	return pulumi.ToOutput(e).(DashboardDataLabelContentOutput)
}

func (e DashboardDataLabelContent) ToDashboardDataLabelContentOutputWithContext(ctx context.Context) DashboardDataLabelContentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardDataLabelContentOutput)
}

func (e DashboardDataLabelContent) ToDashboardDataLabelContentPtrOutput() DashboardDataLabelContentPtrOutput {
	return e.ToDashboardDataLabelContentPtrOutputWithContext(context.Background())
}

func (e DashboardDataLabelContent) ToDashboardDataLabelContentPtrOutputWithContext(ctx context.Context) DashboardDataLabelContentPtrOutput {
	return DashboardDataLabelContent(e).ToDashboardDataLabelContentOutputWithContext(ctx).ToDashboardDataLabelContentPtrOutputWithContext(ctx)
}

func (e DashboardDataLabelContent) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDataLabelContent) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDataLabelContent) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardDataLabelContent) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardDataLabelContentOutput struct{ *pulumi.OutputState }

func (DashboardDataLabelContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataLabelContent)(nil)).Elem()
}

func (o DashboardDataLabelContentOutput) ToDashboardDataLabelContentOutput() DashboardDataLabelContentOutput {
	return o
}

func (o DashboardDataLabelContentOutput) ToDashboardDataLabelContentOutputWithContext(ctx context.Context) DashboardDataLabelContentOutput {
	return o
}

func (o DashboardDataLabelContentOutput) ToDashboardDataLabelContentPtrOutput() DashboardDataLabelContentPtrOutput {
	return o.ToDashboardDataLabelContentPtrOutputWithContext(context.Background())
}

func (o DashboardDataLabelContentOutput) ToDashboardDataLabelContentPtrOutputWithContext(ctx context.Context) DashboardDataLabelContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataLabelContent) *DashboardDataLabelContent {
		return &v
	}).(DashboardDataLabelContentPtrOutput)
}

func (o DashboardDataLabelContentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardDataLabelContentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDataLabelContent) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardDataLabelContentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDataLabelContentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDataLabelContent) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardDataLabelContentPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataLabelContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataLabelContent)(nil)).Elem()
}

func (o DashboardDataLabelContentPtrOutput) ToDashboardDataLabelContentPtrOutput() DashboardDataLabelContentPtrOutput {
	return o
}

func (o DashboardDataLabelContentPtrOutput) ToDashboardDataLabelContentPtrOutputWithContext(ctx context.Context) DashboardDataLabelContentPtrOutput {
	return o
}

func (o DashboardDataLabelContentPtrOutput) Elem() DashboardDataLabelContentOutput {
	return o.ApplyT(func(v *DashboardDataLabelContent) DashboardDataLabelContent {
		if v != nil {
			return *v
		}
		var ret DashboardDataLabelContent
		return ret
	}).(DashboardDataLabelContentOutput)
}

func (o DashboardDataLabelContentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDataLabelContentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardDataLabelContent) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardDataLabelContentInput is an input type that accepts values of the DashboardDataLabelContent enum
// A concrete instance of `DashboardDataLabelContentInput` can be one of the following:
//
//	DashboardDataLabelContentValue
//	DashboardDataLabelContentPercent
//	DashboardDataLabelContentValueAndPercent
type DashboardDataLabelContentInput interface {
	pulumi.Input

	ToDashboardDataLabelContentOutput() DashboardDataLabelContentOutput
	ToDashboardDataLabelContentOutputWithContext(context.Context) DashboardDataLabelContentOutput
}

var dashboardDataLabelContentPtrType = reflect.TypeOf((**DashboardDataLabelContent)(nil)).Elem()

type DashboardDataLabelContentPtrInput interface {
	pulumi.Input

	ToDashboardDataLabelContentPtrOutput() DashboardDataLabelContentPtrOutput
	ToDashboardDataLabelContentPtrOutputWithContext(context.Context) DashboardDataLabelContentPtrOutput
}

type dashboardDataLabelContentPtr string

func DashboardDataLabelContentPtr(v string) DashboardDataLabelContentPtrInput {
	return (*dashboardDataLabelContentPtr)(&v)
}

func (*dashboardDataLabelContentPtr) ElementType() reflect.Type {
	return dashboardDataLabelContentPtrType
}

func (in *dashboardDataLabelContentPtr) ToDashboardDataLabelContentPtrOutput() DashboardDataLabelContentPtrOutput {
	return pulumi.ToOutput(in).(DashboardDataLabelContentPtrOutput)
}

func (in *dashboardDataLabelContentPtr) ToDashboardDataLabelContentPtrOutputWithContext(ctx context.Context) DashboardDataLabelContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardDataLabelContentPtrOutput)
}

type DashboardDataLabelOverlap string

const (
	DashboardDataLabelOverlapDisableOverlap = DashboardDataLabelOverlap("DISABLE_OVERLAP")
	DashboardDataLabelOverlapEnableOverlap  = DashboardDataLabelOverlap("ENABLE_OVERLAP")
)

func (DashboardDataLabelOverlap) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataLabelOverlap)(nil)).Elem()
}

func (e DashboardDataLabelOverlap) ToDashboardDataLabelOverlapOutput() DashboardDataLabelOverlapOutput {
	return pulumi.ToOutput(e).(DashboardDataLabelOverlapOutput)
}

func (e DashboardDataLabelOverlap) ToDashboardDataLabelOverlapOutputWithContext(ctx context.Context) DashboardDataLabelOverlapOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardDataLabelOverlapOutput)
}

func (e DashboardDataLabelOverlap) ToDashboardDataLabelOverlapPtrOutput() DashboardDataLabelOverlapPtrOutput {
	return e.ToDashboardDataLabelOverlapPtrOutputWithContext(context.Background())
}

func (e DashboardDataLabelOverlap) ToDashboardDataLabelOverlapPtrOutputWithContext(ctx context.Context) DashboardDataLabelOverlapPtrOutput {
	return DashboardDataLabelOverlap(e).ToDashboardDataLabelOverlapOutputWithContext(ctx).ToDashboardDataLabelOverlapPtrOutputWithContext(ctx)
}

func (e DashboardDataLabelOverlap) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDataLabelOverlap) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDataLabelOverlap) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardDataLabelOverlap) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardDataLabelOverlapOutput struct{ *pulumi.OutputState }

func (DashboardDataLabelOverlapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataLabelOverlap)(nil)).Elem()
}

func (o DashboardDataLabelOverlapOutput) ToDashboardDataLabelOverlapOutput() DashboardDataLabelOverlapOutput {
	return o
}

func (o DashboardDataLabelOverlapOutput) ToDashboardDataLabelOverlapOutputWithContext(ctx context.Context) DashboardDataLabelOverlapOutput {
	return o
}

func (o DashboardDataLabelOverlapOutput) ToDashboardDataLabelOverlapPtrOutput() DashboardDataLabelOverlapPtrOutput {
	return o.ToDashboardDataLabelOverlapPtrOutputWithContext(context.Background())
}

func (o DashboardDataLabelOverlapOutput) ToDashboardDataLabelOverlapPtrOutputWithContext(ctx context.Context) DashboardDataLabelOverlapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataLabelOverlap) *DashboardDataLabelOverlap {
		return &v
	}).(DashboardDataLabelOverlapPtrOutput)
}

func (o DashboardDataLabelOverlapOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardDataLabelOverlapOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDataLabelOverlap) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardDataLabelOverlapOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDataLabelOverlapOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDataLabelOverlap) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardDataLabelOverlapPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataLabelOverlapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataLabelOverlap)(nil)).Elem()
}

func (o DashboardDataLabelOverlapPtrOutput) ToDashboardDataLabelOverlapPtrOutput() DashboardDataLabelOverlapPtrOutput {
	return o
}

func (o DashboardDataLabelOverlapPtrOutput) ToDashboardDataLabelOverlapPtrOutputWithContext(ctx context.Context) DashboardDataLabelOverlapPtrOutput {
	return o
}

func (o DashboardDataLabelOverlapPtrOutput) Elem() DashboardDataLabelOverlapOutput {
	return o.ApplyT(func(v *DashboardDataLabelOverlap) DashboardDataLabelOverlap {
		if v != nil {
			return *v
		}
		var ret DashboardDataLabelOverlap
		return ret
	}).(DashboardDataLabelOverlapOutput)
}

func (o DashboardDataLabelOverlapPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDataLabelOverlapPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardDataLabelOverlap) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardDataLabelOverlapInput is an input type that accepts values of the DashboardDataLabelOverlap enum
// A concrete instance of `DashboardDataLabelOverlapInput` can be one of the following:
//
//	DashboardDataLabelOverlapDisableOverlap
//	DashboardDataLabelOverlapEnableOverlap
type DashboardDataLabelOverlapInput interface {
	pulumi.Input

	ToDashboardDataLabelOverlapOutput() DashboardDataLabelOverlapOutput
	ToDashboardDataLabelOverlapOutputWithContext(context.Context) DashboardDataLabelOverlapOutput
}

var dashboardDataLabelOverlapPtrType = reflect.TypeOf((**DashboardDataLabelOverlap)(nil)).Elem()

type DashboardDataLabelOverlapPtrInput interface {
	pulumi.Input

	ToDashboardDataLabelOverlapPtrOutput() DashboardDataLabelOverlapPtrOutput
	ToDashboardDataLabelOverlapPtrOutputWithContext(context.Context) DashboardDataLabelOverlapPtrOutput
}

type dashboardDataLabelOverlapPtr string

func DashboardDataLabelOverlapPtr(v string) DashboardDataLabelOverlapPtrInput {
	return (*dashboardDataLabelOverlapPtr)(&v)
}

func (*dashboardDataLabelOverlapPtr) ElementType() reflect.Type {
	return dashboardDataLabelOverlapPtrType
}

func (in *dashboardDataLabelOverlapPtr) ToDashboardDataLabelOverlapPtrOutput() DashboardDataLabelOverlapPtrOutput {
	return pulumi.ToOutput(in).(DashboardDataLabelOverlapPtrOutput)
}

func (in *dashboardDataLabelOverlapPtr) ToDashboardDataLabelOverlapPtrOutputWithContext(ctx context.Context) DashboardDataLabelOverlapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardDataLabelOverlapPtrOutput)
}

type DashboardDataLabelPosition string

const (
	DashboardDataLabelPositionInside  = DashboardDataLabelPosition("INSIDE")
	DashboardDataLabelPositionOutside = DashboardDataLabelPosition("OUTSIDE")
	DashboardDataLabelPositionLeft    = DashboardDataLabelPosition("LEFT")
	DashboardDataLabelPositionTop     = DashboardDataLabelPosition("TOP")
	DashboardDataLabelPositionBottom  = DashboardDataLabelPosition("BOTTOM")
	DashboardDataLabelPositionRight   = DashboardDataLabelPosition("RIGHT")
)

func (DashboardDataLabelPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataLabelPosition)(nil)).Elem()
}

func (e DashboardDataLabelPosition) ToDashboardDataLabelPositionOutput() DashboardDataLabelPositionOutput {
	return pulumi.ToOutput(e).(DashboardDataLabelPositionOutput)
}

func (e DashboardDataLabelPosition) ToDashboardDataLabelPositionOutputWithContext(ctx context.Context) DashboardDataLabelPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardDataLabelPositionOutput)
}

func (e DashboardDataLabelPosition) ToDashboardDataLabelPositionPtrOutput() DashboardDataLabelPositionPtrOutput {
	return e.ToDashboardDataLabelPositionPtrOutputWithContext(context.Background())
}

func (e DashboardDataLabelPosition) ToDashboardDataLabelPositionPtrOutputWithContext(ctx context.Context) DashboardDataLabelPositionPtrOutput {
	return DashboardDataLabelPosition(e).ToDashboardDataLabelPositionOutputWithContext(ctx).ToDashboardDataLabelPositionPtrOutputWithContext(ctx)
}

func (e DashboardDataLabelPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDataLabelPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDataLabelPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardDataLabelPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardDataLabelPositionOutput struct{ *pulumi.OutputState }

func (DashboardDataLabelPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataLabelPosition)(nil)).Elem()
}

func (o DashboardDataLabelPositionOutput) ToDashboardDataLabelPositionOutput() DashboardDataLabelPositionOutput {
	return o
}

func (o DashboardDataLabelPositionOutput) ToDashboardDataLabelPositionOutputWithContext(ctx context.Context) DashboardDataLabelPositionOutput {
	return o
}

func (o DashboardDataLabelPositionOutput) ToDashboardDataLabelPositionPtrOutput() DashboardDataLabelPositionPtrOutput {
	return o.ToDashboardDataLabelPositionPtrOutputWithContext(context.Background())
}

func (o DashboardDataLabelPositionOutput) ToDashboardDataLabelPositionPtrOutputWithContext(ctx context.Context) DashboardDataLabelPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataLabelPosition) *DashboardDataLabelPosition {
		return &v
	}).(DashboardDataLabelPositionPtrOutput)
}

func (o DashboardDataLabelPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardDataLabelPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDataLabelPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardDataLabelPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDataLabelPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDataLabelPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardDataLabelPositionPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataLabelPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataLabelPosition)(nil)).Elem()
}

func (o DashboardDataLabelPositionPtrOutput) ToDashboardDataLabelPositionPtrOutput() DashboardDataLabelPositionPtrOutput {
	return o
}

func (o DashboardDataLabelPositionPtrOutput) ToDashboardDataLabelPositionPtrOutputWithContext(ctx context.Context) DashboardDataLabelPositionPtrOutput {
	return o
}

func (o DashboardDataLabelPositionPtrOutput) Elem() DashboardDataLabelPositionOutput {
	return o.ApplyT(func(v *DashboardDataLabelPosition) DashboardDataLabelPosition {
		if v != nil {
			return *v
		}
		var ret DashboardDataLabelPosition
		return ret
	}).(DashboardDataLabelPositionOutput)
}

func (o DashboardDataLabelPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDataLabelPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardDataLabelPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardDataLabelPositionInput is an input type that accepts values of the DashboardDataLabelPosition enum
// A concrete instance of `DashboardDataLabelPositionInput` can be one of the following:
//
//	DashboardDataLabelPositionInside
//	DashboardDataLabelPositionOutside
//	DashboardDataLabelPositionLeft
//	DashboardDataLabelPositionTop
//	DashboardDataLabelPositionBottom
//	DashboardDataLabelPositionRight
type DashboardDataLabelPositionInput interface {
	pulumi.Input

	ToDashboardDataLabelPositionOutput() DashboardDataLabelPositionOutput
	ToDashboardDataLabelPositionOutputWithContext(context.Context) DashboardDataLabelPositionOutput
}

var dashboardDataLabelPositionPtrType = reflect.TypeOf((**DashboardDataLabelPosition)(nil)).Elem()

type DashboardDataLabelPositionPtrInput interface {
	pulumi.Input

	ToDashboardDataLabelPositionPtrOutput() DashboardDataLabelPositionPtrOutput
	ToDashboardDataLabelPositionPtrOutputWithContext(context.Context) DashboardDataLabelPositionPtrOutput
}

type dashboardDataLabelPositionPtr string

func DashboardDataLabelPositionPtr(v string) DashboardDataLabelPositionPtrInput {
	return (*dashboardDataLabelPositionPtr)(&v)
}

func (*dashboardDataLabelPositionPtr) ElementType() reflect.Type {
	return dashboardDataLabelPositionPtrType
}

func (in *dashboardDataLabelPositionPtr) ToDashboardDataLabelPositionPtrOutput() DashboardDataLabelPositionPtrOutput {
	return pulumi.ToOutput(in).(DashboardDataLabelPositionPtrOutput)
}

func (in *dashboardDataLabelPositionPtr) ToDashboardDataLabelPositionPtrOutputWithContext(ctx context.Context) DashboardDataLabelPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardDataLabelPositionPtrOutput)
}

type DashboardDateAggregationFunction string

const (
	DashboardDateAggregationFunctionCount         = DashboardDateAggregationFunction("COUNT")
	DashboardDateAggregationFunctionDistinctCount = DashboardDateAggregationFunction("DISTINCT_COUNT")
	DashboardDateAggregationFunctionMin           = DashboardDateAggregationFunction("MIN")
	DashboardDateAggregationFunctionMax           = DashboardDateAggregationFunction("MAX")
)

func (DashboardDateAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateAggregationFunction)(nil)).Elem()
}

func (e DashboardDateAggregationFunction) ToDashboardDateAggregationFunctionOutput() DashboardDateAggregationFunctionOutput {
	return pulumi.ToOutput(e).(DashboardDateAggregationFunctionOutput)
}

func (e DashboardDateAggregationFunction) ToDashboardDateAggregationFunctionOutputWithContext(ctx context.Context) DashboardDateAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardDateAggregationFunctionOutput)
}

func (e DashboardDateAggregationFunction) ToDashboardDateAggregationFunctionPtrOutput() DashboardDateAggregationFunctionPtrOutput {
	return e.ToDashboardDateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e DashboardDateAggregationFunction) ToDashboardDateAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardDateAggregationFunctionPtrOutput {
	return DashboardDateAggregationFunction(e).ToDashboardDateAggregationFunctionOutputWithContext(ctx).ToDashboardDateAggregationFunctionPtrOutputWithContext(ctx)
}

func (e DashboardDateAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDateAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDateAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardDateAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardDateAggregationFunctionOutput struct{ *pulumi.OutputState }

func (DashboardDateAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateAggregationFunction)(nil)).Elem()
}

func (o DashboardDateAggregationFunctionOutput) ToDashboardDateAggregationFunctionOutput() DashboardDateAggregationFunctionOutput {
	return o
}

func (o DashboardDateAggregationFunctionOutput) ToDashboardDateAggregationFunctionOutputWithContext(ctx context.Context) DashboardDateAggregationFunctionOutput {
	return o
}

func (o DashboardDateAggregationFunctionOutput) ToDashboardDateAggregationFunctionPtrOutput() DashboardDateAggregationFunctionPtrOutput {
	return o.ToDashboardDateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o DashboardDateAggregationFunctionOutput) ToDashboardDateAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardDateAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDateAggregationFunction) *DashboardDateAggregationFunction {
		return &v
	}).(DashboardDateAggregationFunctionPtrOutput)
}

func (o DashboardDateAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardDateAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDateAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardDateAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDateAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDateAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardDateAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (DashboardDateAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateAggregationFunction)(nil)).Elem()
}

func (o DashboardDateAggregationFunctionPtrOutput) ToDashboardDateAggregationFunctionPtrOutput() DashboardDateAggregationFunctionPtrOutput {
	return o
}

func (o DashboardDateAggregationFunctionPtrOutput) ToDashboardDateAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardDateAggregationFunctionPtrOutput {
	return o
}

func (o DashboardDateAggregationFunctionPtrOutput) Elem() DashboardDateAggregationFunctionOutput {
	return o.ApplyT(func(v *DashboardDateAggregationFunction) DashboardDateAggregationFunction {
		if v != nil {
			return *v
		}
		var ret DashboardDateAggregationFunction
		return ret
	}).(DashboardDateAggregationFunctionOutput)
}

func (o DashboardDateAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDateAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardDateAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardDateAggregationFunctionInput is an input type that accepts values of the DashboardDateAggregationFunction enum
// A concrete instance of `DashboardDateAggregationFunctionInput` can be one of the following:
//
//	DashboardDateAggregationFunctionCount
//	DashboardDateAggregationFunctionDistinctCount
//	DashboardDateAggregationFunctionMin
//	DashboardDateAggregationFunctionMax
type DashboardDateAggregationFunctionInput interface {
	pulumi.Input

	ToDashboardDateAggregationFunctionOutput() DashboardDateAggregationFunctionOutput
	ToDashboardDateAggregationFunctionOutputWithContext(context.Context) DashboardDateAggregationFunctionOutput
}

var dashboardDateAggregationFunctionPtrType = reflect.TypeOf((**DashboardDateAggregationFunction)(nil)).Elem()

type DashboardDateAggregationFunctionPtrInput interface {
	pulumi.Input

	ToDashboardDateAggregationFunctionPtrOutput() DashboardDateAggregationFunctionPtrOutput
	ToDashboardDateAggregationFunctionPtrOutputWithContext(context.Context) DashboardDateAggregationFunctionPtrOutput
}

type dashboardDateAggregationFunctionPtr string

func DashboardDateAggregationFunctionPtr(v string) DashboardDateAggregationFunctionPtrInput {
	return (*dashboardDateAggregationFunctionPtr)(&v)
}

func (*dashboardDateAggregationFunctionPtr) ElementType() reflect.Type {
	return dashboardDateAggregationFunctionPtrType
}

func (in *dashboardDateAggregationFunctionPtr) ToDashboardDateAggregationFunctionPtrOutput() DashboardDateAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(DashboardDateAggregationFunctionPtrOutput)
}

func (in *dashboardDateAggregationFunctionPtr) ToDashboardDateAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardDateAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardDateAggregationFunctionPtrOutput)
}

type DashboardDayOfTheWeek string

const (
	DashboardDayOfTheWeekSunday    = DashboardDayOfTheWeek("SUNDAY")
	DashboardDayOfTheWeekMonday    = DashboardDayOfTheWeek("MONDAY")
	DashboardDayOfTheWeekTuesday   = DashboardDayOfTheWeek("TUESDAY")
	DashboardDayOfTheWeekWednesday = DashboardDayOfTheWeek("WEDNESDAY")
	DashboardDayOfTheWeekThursday  = DashboardDayOfTheWeek("THURSDAY")
	DashboardDayOfTheWeekFriday    = DashboardDayOfTheWeek("FRIDAY")
	DashboardDayOfTheWeekSaturday  = DashboardDayOfTheWeek("SATURDAY")
)

func (DashboardDayOfTheWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDayOfTheWeek)(nil)).Elem()
}

func (e DashboardDayOfTheWeek) ToDashboardDayOfTheWeekOutput() DashboardDayOfTheWeekOutput {
	return pulumi.ToOutput(e).(DashboardDayOfTheWeekOutput)
}

func (e DashboardDayOfTheWeek) ToDashboardDayOfTheWeekOutputWithContext(ctx context.Context) DashboardDayOfTheWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardDayOfTheWeekOutput)
}

func (e DashboardDayOfTheWeek) ToDashboardDayOfTheWeekPtrOutput() DashboardDayOfTheWeekPtrOutput {
	return e.ToDashboardDayOfTheWeekPtrOutputWithContext(context.Background())
}

func (e DashboardDayOfTheWeek) ToDashboardDayOfTheWeekPtrOutputWithContext(ctx context.Context) DashboardDayOfTheWeekPtrOutput {
	return DashboardDayOfTheWeek(e).ToDashboardDayOfTheWeekOutputWithContext(ctx).ToDashboardDayOfTheWeekPtrOutputWithContext(ctx)
}

func (e DashboardDayOfTheWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDayOfTheWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDayOfTheWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardDayOfTheWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardDayOfTheWeekOutput struct{ *pulumi.OutputState }

func (DashboardDayOfTheWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDayOfTheWeek)(nil)).Elem()
}

func (o DashboardDayOfTheWeekOutput) ToDashboardDayOfTheWeekOutput() DashboardDayOfTheWeekOutput {
	return o
}

func (o DashboardDayOfTheWeekOutput) ToDashboardDayOfTheWeekOutputWithContext(ctx context.Context) DashboardDayOfTheWeekOutput {
	return o
}

func (o DashboardDayOfTheWeekOutput) ToDashboardDayOfTheWeekPtrOutput() DashboardDayOfTheWeekPtrOutput {
	return o.ToDashboardDayOfTheWeekPtrOutputWithContext(context.Background())
}

func (o DashboardDayOfTheWeekOutput) ToDashboardDayOfTheWeekPtrOutputWithContext(ctx context.Context) DashboardDayOfTheWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDayOfTheWeek) *DashboardDayOfTheWeek {
		return &v
	}).(DashboardDayOfTheWeekPtrOutput)
}

func (o DashboardDayOfTheWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardDayOfTheWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDayOfTheWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardDayOfTheWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDayOfTheWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDayOfTheWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardDayOfTheWeekPtrOutput struct{ *pulumi.OutputState }

func (DashboardDayOfTheWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDayOfTheWeek)(nil)).Elem()
}

func (o DashboardDayOfTheWeekPtrOutput) ToDashboardDayOfTheWeekPtrOutput() DashboardDayOfTheWeekPtrOutput {
	return o
}

func (o DashboardDayOfTheWeekPtrOutput) ToDashboardDayOfTheWeekPtrOutputWithContext(ctx context.Context) DashboardDayOfTheWeekPtrOutput {
	return o
}

func (o DashboardDayOfTheWeekPtrOutput) Elem() DashboardDayOfTheWeekOutput {
	return o.ApplyT(func(v *DashboardDayOfTheWeek) DashboardDayOfTheWeek {
		if v != nil {
			return *v
		}
		var ret DashboardDayOfTheWeek
		return ret
	}).(DashboardDayOfTheWeekOutput)
}

func (o DashboardDayOfTheWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDayOfTheWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardDayOfTheWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardDayOfTheWeekInput is an input type that accepts values of the DashboardDayOfTheWeek enum
// A concrete instance of `DashboardDayOfTheWeekInput` can be one of the following:
//
//	DashboardDayOfTheWeekSunday
//	DashboardDayOfTheWeekMonday
//	DashboardDayOfTheWeekTuesday
//	DashboardDayOfTheWeekWednesday
//	DashboardDayOfTheWeekThursday
//	DashboardDayOfTheWeekFriday
//	DashboardDayOfTheWeekSaturday
type DashboardDayOfTheWeekInput interface {
	pulumi.Input

	ToDashboardDayOfTheWeekOutput() DashboardDayOfTheWeekOutput
	ToDashboardDayOfTheWeekOutputWithContext(context.Context) DashboardDayOfTheWeekOutput
}

var dashboardDayOfTheWeekPtrType = reflect.TypeOf((**DashboardDayOfTheWeek)(nil)).Elem()

type DashboardDayOfTheWeekPtrInput interface {
	pulumi.Input

	ToDashboardDayOfTheWeekPtrOutput() DashboardDayOfTheWeekPtrOutput
	ToDashboardDayOfTheWeekPtrOutputWithContext(context.Context) DashboardDayOfTheWeekPtrOutput
}

type dashboardDayOfTheWeekPtr string

func DashboardDayOfTheWeekPtr(v string) DashboardDayOfTheWeekPtrInput {
	return (*dashboardDayOfTheWeekPtr)(&v)
}

func (*dashboardDayOfTheWeekPtr) ElementType() reflect.Type {
	return dashboardDayOfTheWeekPtrType
}

func (in *dashboardDayOfTheWeekPtr) ToDashboardDayOfTheWeekPtrOutput() DashboardDayOfTheWeekPtrOutput {
	return pulumi.ToOutput(in).(DashboardDayOfTheWeekPtrOutput)
}

func (in *dashboardDayOfTheWeekPtr) ToDashboardDayOfTheWeekPtrOutputWithContext(ctx context.Context) DashboardDayOfTheWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardDayOfTheWeekPtrOutput)
}

type DashboardErrorType string

const (
	DashboardErrorTypeAccessDenied                 = DashboardErrorType("ACCESS_DENIED")
	DashboardErrorTypeSourceNotFound               = DashboardErrorType("SOURCE_NOT_FOUND")
	DashboardErrorTypeDataSetNotFound              = DashboardErrorType("DATA_SET_NOT_FOUND")
	DashboardErrorTypeInternalFailure              = DashboardErrorType("INTERNAL_FAILURE")
	DashboardErrorTypeParameterValueIncompatible   = DashboardErrorType("PARAMETER_VALUE_INCOMPATIBLE")
	DashboardErrorTypeParameterTypeInvalid         = DashboardErrorType("PARAMETER_TYPE_INVALID")
	DashboardErrorTypeParameterNotFound            = DashboardErrorType("PARAMETER_NOT_FOUND")
	DashboardErrorTypeColumnTypeMismatch           = DashboardErrorType("COLUMN_TYPE_MISMATCH")
	DashboardErrorTypeColumnGeographicRoleMismatch = DashboardErrorType("COLUMN_GEOGRAPHIC_ROLE_MISMATCH")
	DashboardErrorTypeColumnReplacementMissing     = DashboardErrorType("COLUMN_REPLACEMENT_MISSING")
)

type DashboardErrorTypeOutput struct{ *pulumi.OutputState }

func (DashboardErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardErrorType)(nil)).Elem()
}

func (o DashboardErrorTypeOutput) ToDashboardErrorTypeOutput() DashboardErrorTypeOutput {
	return o
}

func (o DashboardErrorTypeOutput) ToDashboardErrorTypeOutputWithContext(ctx context.Context) DashboardErrorTypeOutput {
	return o
}

func (o DashboardErrorTypeOutput) ToDashboardErrorTypePtrOutput() DashboardErrorTypePtrOutput {
	return o.ToDashboardErrorTypePtrOutputWithContext(context.Background())
}

func (o DashboardErrorTypeOutput) ToDashboardErrorTypePtrOutputWithContext(ctx context.Context) DashboardErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardErrorType) *DashboardErrorType {
		return &v
	}).(DashboardErrorTypePtrOutput)
}

func (o DashboardErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardErrorTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardErrorType)(nil)).Elem()
}

func (o DashboardErrorTypePtrOutput) ToDashboardErrorTypePtrOutput() DashboardErrorTypePtrOutput {
	return o
}

func (o DashboardErrorTypePtrOutput) ToDashboardErrorTypePtrOutputWithContext(ctx context.Context) DashboardErrorTypePtrOutput {
	return o
}

func (o DashboardErrorTypePtrOutput) Elem() DashboardErrorTypeOutput {
	return o.ApplyT(func(v *DashboardErrorType) DashboardErrorType {
		if v != nil {
			return *v
		}
		var ret DashboardErrorType
		return ret
	}).(DashboardErrorTypeOutput)
}

func (o DashboardErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardFilterNullOption string

const (
	DashboardFilterNullOptionAllValues    = DashboardFilterNullOption("ALL_VALUES")
	DashboardFilterNullOptionNullsOnly    = DashboardFilterNullOption("NULLS_ONLY")
	DashboardFilterNullOptionNonNullsOnly = DashboardFilterNullOption("NON_NULLS_ONLY")
)

func (DashboardFilterNullOption) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterNullOption)(nil)).Elem()
}

func (e DashboardFilterNullOption) ToDashboardFilterNullOptionOutput() DashboardFilterNullOptionOutput {
	return pulumi.ToOutput(e).(DashboardFilterNullOptionOutput)
}

func (e DashboardFilterNullOption) ToDashboardFilterNullOptionOutputWithContext(ctx context.Context) DashboardFilterNullOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardFilterNullOptionOutput)
}

func (e DashboardFilterNullOption) ToDashboardFilterNullOptionPtrOutput() DashboardFilterNullOptionPtrOutput {
	return e.ToDashboardFilterNullOptionPtrOutputWithContext(context.Background())
}

func (e DashboardFilterNullOption) ToDashboardFilterNullOptionPtrOutputWithContext(ctx context.Context) DashboardFilterNullOptionPtrOutput {
	return DashboardFilterNullOption(e).ToDashboardFilterNullOptionOutputWithContext(ctx).ToDashboardFilterNullOptionPtrOutputWithContext(ctx)
}

func (e DashboardFilterNullOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFilterNullOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFilterNullOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardFilterNullOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardFilterNullOptionOutput struct{ *pulumi.OutputState }

func (DashboardFilterNullOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterNullOption)(nil)).Elem()
}

func (o DashboardFilterNullOptionOutput) ToDashboardFilterNullOptionOutput() DashboardFilterNullOptionOutput {
	return o
}

func (o DashboardFilterNullOptionOutput) ToDashboardFilterNullOptionOutputWithContext(ctx context.Context) DashboardFilterNullOptionOutput {
	return o
}

func (o DashboardFilterNullOptionOutput) ToDashboardFilterNullOptionPtrOutput() DashboardFilterNullOptionPtrOutput {
	return o.ToDashboardFilterNullOptionPtrOutputWithContext(context.Background())
}

func (o DashboardFilterNullOptionOutput) ToDashboardFilterNullOptionPtrOutputWithContext(ctx context.Context) DashboardFilterNullOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterNullOption) *DashboardFilterNullOption {
		return &v
	}).(DashboardFilterNullOptionPtrOutput)
}

func (o DashboardFilterNullOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardFilterNullOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFilterNullOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardFilterNullOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFilterNullOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFilterNullOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardFilterNullOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterNullOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterNullOption)(nil)).Elem()
}

func (o DashboardFilterNullOptionPtrOutput) ToDashboardFilterNullOptionPtrOutput() DashboardFilterNullOptionPtrOutput {
	return o
}

func (o DashboardFilterNullOptionPtrOutput) ToDashboardFilterNullOptionPtrOutputWithContext(ctx context.Context) DashboardFilterNullOptionPtrOutput {
	return o
}

func (o DashboardFilterNullOptionPtrOutput) Elem() DashboardFilterNullOptionOutput {
	return o.ApplyT(func(v *DashboardFilterNullOption) DashboardFilterNullOption {
		if v != nil {
			return *v
		}
		var ret DashboardFilterNullOption
		return ret
	}).(DashboardFilterNullOptionOutput)
}

func (o DashboardFilterNullOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFilterNullOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardFilterNullOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardFilterNullOptionInput is an input type that accepts values of the DashboardFilterNullOption enum
// A concrete instance of `DashboardFilterNullOptionInput` can be one of the following:
//
//	DashboardFilterNullOptionAllValues
//	DashboardFilterNullOptionNullsOnly
//	DashboardFilterNullOptionNonNullsOnly
type DashboardFilterNullOptionInput interface {
	pulumi.Input

	ToDashboardFilterNullOptionOutput() DashboardFilterNullOptionOutput
	ToDashboardFilterNullOptionOutputWithContext(context.Context) DashboardFilterNullOptionOutput
}

var dashboardFilterNullOptionPtrType = reflect.TypeOf((**DashboardFilterNullOption)(nil)).Elem()

type DashboardFilterNullOptionPtrInput interface {
	pulumi.Input

	ToDashboardFilterNullOptionPtrOutput() DashboardFilterNullOptionPtrOutput
	ToDashboardFilterNullOptionPtrOutputWithContext(context.Context) DashboardFilterNullOptionPtrOutput
}

type dashboardFilterNullOptionPtr string

func DashboardFilterNullOptionPtr(v string) DashboardFilterNullOptionPtrInput {
	return (*dashboardFilterNullOptionPtr)(&v)
}

func (*dashboardFilterNullOptionPtr) ElementType() reflect.Type {
	return dashboardFilterNullOptionPtrType
}

func (in *dashboardFilterNullOptionPtr) ToDashboardFilterNullOptionPtrOutput() DashboardFilterNullOptionPtrOutput {
	return pulumi.ToOutput(in).(DashboardFilterNullOptionPtrOutput)
}

func (in *dashboardFilterNullOptionPtr) ToDashboardFilterNullOptionPtrOutputWithContext(ctx context.Context) DashboardFilterNullOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardFilterNullOptionPtrOutput)
}

type DashboardFilterVisualScope string

const (
	DashboardFilterVisualScopeAllVisuals      = DashboardFilterVisualScope("ALL_VISUALS")
	DashboardFilterVisualScopeSelectedVisuals = DashboardFilterVisualScope("SELECTED_VISUALS")
)

func (DashboardFilterVisualScope) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterVisualScope)(nil)).Elem()
}

func (e DashboardFilterVisualScope) ToDashboardFilterVisualScopeOutput() DashboardFilterVisualScopeOutput {
	return pulumi.ToOutput(e).(DashboardFilterVisualScopeOutput)
}

func (e DashboardFilterVisualScope) ToDashboardFilterVisualScopeOutputWithContext(ctx context.Context) DashboardFilterVisualScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardFilterVisualScopeOutput)
}

func (e DashboardFilterVisualScope) ToDashboardFilterVisualScopePtrOutput() DashboardFilterVisualScopePtrOutput {
	return e.ToDashboardFilterVisualScopePtrOutputWithContext(context.Background())
}

func (e DashboardFilterVisualScope) ToDashboardFilterVisualScopePtrOutputWithContext(ctx context.Context) DashboardFilterVisualScopePtrOutput {
	return DashboardFilterVisualScope(e).ToDashboardFilterVisualScopeOutputWithContext(ctx).ToDashboardFilterVisualScopePtrOutputWithContext(ctx)
}

func (e DashboardFilterVisualScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFilterVisualScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFilterVisualScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardFilterVisualScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardFilterVisualScopeOutput struct{ *pulumi.OutputState }

func (DashboardFilterVisualScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterVisualScope)(nil)).Elem()
}

func (o DashboardFilterVisualScopeOutput) ToDashboardFilterVisualScopeOutput() DashboardFilterVisualScopeOutput {
	return o
}

func (o DashboardFilterVisualScopeOutput) ToDashboardFilterVisualScopeOutputWithContext(ctx context.Context) DashboardFilterVisualScopeOutput {
	return o
}

func (o DashboardFilterVisualScopeOutput) ToDashboardFilterVisualScopePtrOutput() DashboardFilterVisualScopePtrOutput {
	return o.ToDashboardFilterVisualScopePtrOutputWithContext(context.Background())
}

func (o DashboardFilterVisualScopeOutput) ToDashboardFilterVisualScopePtrOutputWithContext(ctx context.Context) DashboardFilterVisualScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterVisualScope) *DashboardFilterVisualScope {
		return &v
	}).(DashboardFilterVisualScopePtrOutput)
}

func (o DashboardFilterVisualScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardFilterVisualScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFilterVisualScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardFilterVisualScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFilterVisualScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFilterVisualScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardFilterVisualScopePtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterVisualScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterVisualScope)(nil)).Elem()
}

func (o DashboardFilterVisualScopePtrOutput) ToDashboardFilterVisualScopePtrOutput() DashboardFilterVisualScopePtrOutput {
	return o
}

func (o DashboardFilterVisualScopePtrOutput) ToDashboardFilterVisualScopePtrOutputWithContext(ctx context.Context) DashboardFilterVisualScopePtrOutput {
	return o
}

func (o DashboardFilterVisualScopePtrOutput) Elem() DashboardFilterVisualScopeOutput {
	return o.ApplyT(func(v *DashboardFilterVisualScope) DashboardFilterVisualScope {
		if v != nil {
			return *v
		}
		var ret DashboardFilterVisualScope
		return ret
	}).(DashboardFilterVisualScopeOutput)
}

func (o DashboardFilterVisualScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFilterVisualScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardFilterVisualScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardFilterVisualScopeInput is an input type that accepts values of the DashboardFilterVisualScope enum
// A concrete instance of `DashboardFilterVisualScopeInput` can be one of the following:
//
//	DashboardFilterVisualScopeAllVisuals
//	DashboardFilterVisualScopeSelectedVisuals
type DashboardFilterVisualScopeInput interface {
	pulumi.Input

	ToDashboardFilterVisualScopeOutput() DashboardFilterVisualScopeOutput
	ToDashboardFilterVisualScopeOutputWithContext(context.Context) DashboardFilterVisualScopeOutput
}

var dashboardFilterVisualScopePtrType = reflect.TypeOf((**DashboardFilterVisualScope)(nil)).Elem()

type DashboardFilterVisualScopePtrInput interface {
	pulumi.Input

	ToDashboardFilterVisualScopePtrOutput() DashboardFilterVisualScopePtrOutput
	ToDashboardFilterVisualScopePtrOutputWithContext(context.Context) DashboardFilterVisualScopePtrOutput
}

type dashboardFilterVisualScopePtr string

func DashboardFilterVisualScopePtr(v string) DashboardFilterVisualScopePtrInput {
	return (*dashboardFilterVisualScopePtr)(&v)
}

func (*dashboardFilterVisualScopePtr) ElementType() reflect.Type {
	return dashboardFilterVisualScopePtrType
}

func (in *dashboardFilterVisualScopePtr) ToDashboardFilterVisualScopePtrOutput() DashboardFilterVisualScopePtrOutput {
	return pulumi.ToOutput(in).(DashboardFilterVisualScopePtrOutput)
}

func (in *dashboardFilterVisualScopePtr) ToDashboardFilterVisualScopePtrOutputWithContext(ctx context.Context) DashboardFilterVisualScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardFilterVisualScopePtrOutput)
}

type DashboardFontDecoration string

const (
	DashboardFontDecorationUnderline = DashboardFontDecoration("UNDERLINE")
	DashboardFontDecorationNone      = DashboardFontDecoration("NONE")
)

func (DashboardFontDecoration) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontDecoration)(nil)).Elem()
}

func (e DashboardFontDecoration) ToDashboardFontDecorationOutput() DashboardFontDecorationOutput {
	return pulumi.ToOutput(e).(DashboardFontDecorationOutput)
}

func (e DashboardFontDecoration) ToDashboardFontDecorationOutputWithContext(ctx context.Context) DashboardFontDecorationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardFontDecorationOutput)
}

func (e DashboardFontDecoration) ToDashboardFontDecorationPtrOutput() DashboardFontDecorationPtrOutput {
	return e.ToDashboardFontDecorationPtrOutputWithContext(context.Background())
}

func (e DashboardFontDecoration) ToDashboardFontDecorationPtrOutputWithContext(ctx context.Context) DashboardFontDecorationPtrOutput {
	return DashboardFontDecoration(e).ToDashboardFontDecorationOutputWithContext(ctx).ToDashboardFontDecorationPtrOutputWithContext(ctx)
}

func (e DashboardFontDecoration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFontDecoration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFontDecoration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardFontDecoration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardFontDecorationOutput struct{ *pulumi.OutputState }

func (DashboardFontDecorationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontDecoration)(nil)).Elem()
}

func (o DashboardFontDecorationOutput) ToDashboardFontDecorationOutput() DashboardFontDecorationOutput {
	return o
}

func (o DashboardFontDecorationOutput) ToDashboardFontDecorationOutputWithContext(ctx context.Context) DashboardFontDecorationOutput {
	return o
}

func (o DashboardFontDecorationOutput) ToDashboardFontDecorationPtrOutput() DashboardFontDecorationPtrOutput {
	return o.ToDashboardFontDecorationPtrOutputWithContext(context.Background())
}

func (o DashboardFontDecorationOutput) ToDashboardFontDecorationPtrOutputWithContext(ctx context.Context) DashboardFontDecorationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFontDecoration) *DashboardFontDecoration {
		return &v
	}).(DashboardFontDecorationPtrOutput)
}

func (o DashboardFontDecorationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardFontDecorationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFontDecoration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardFontDecorationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFontDecorationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFontDecoration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardFontDecorationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFontDecorationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFontDecoration)(nil)).Elem()
}

func (o DashboardFontDecorationPtrOutput) ToDashboardFontDecorationPtrOutput() DashboardFontDecorationPtrOutput {
	return o
}

func (o DashboardFontDecorationPtrOutput) ToDashboardFontDecorationPtrOutputWithContext(ctx context.Context) DashboardFontDecorationPtrOutput {
	return o
}

func (o DashboardFontDecorationPtrOutput) Elem() DashboardFontDecorationOutput {
	return o.ApplyT(func(v *DashboardFontDecoration) DashboardFontDecoration {
		if v != nil {
			return *v
		}
		var ret DashboardFontDecoration
		return ret
	}).(DashboardFontDecorationOutput)
}

func (o DashboardFontDecorationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFontDecorationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardFontDecoration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardFontDecorationInput is an input type that accepts values of the DashboardFontDecoration enum
// A concrete instance of `DashboardFontDecorationInput` can be one of the following:
//
//	DashboardFontDecorationUnderline
//	DashboardFontDecorationNone
type DashboardFontDecorationInput interface {
	pulumi.Input

	ToDashboardFontDecorationOutput() DashboardFontDecorationOutput
	ToDashboardFontDecorationOutputWithContext(context.Context) DashboardFontDecorationOutput
}

var dashboardFontDecorationPtrType = reflect.TypeOf((**DashboardFontDecoration)(nil)).Elem()

type DashboardFontDecorationPtrInput interface {
	pulumi.Input

	ToDashboardFontDecorationPtrOutput() DashboardFontDecorationPtrOutput
	ToDashboardFontDecorationPtrOutputWithContext(context.Context) DashboardFontDecorationPtrOutput
}

type dashboardFontDecorationPtr string

func DashboardFontDecorationPtr(v string) DashboardFontDecorationPtrInput {
	return (*dashboardFontDecorationPtr)(&v)
}

func (*dashboardFontDecorationPtr) ElementType() reflect.Type {
	return dashboardFontDecorationPtrType
}

func (in *dashboardFontDecorationPtr) ToDashboardFontDecorationPtrOutput() DashboardFontDecorationPtrOutput {
	return pulumi.ToOutput(in).(DashboardFontDecorationPtrOutput)
}

func (in *dashboardFontDecorationPtr) ToDashboardFontDecorationPtrOutputWithContext(ctx context.Context) DashboardFontDecorationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardFontDecorationPtrOutput)
}

type DashboardFontStyle string

const (
	DashboardFontStyleNormal = DashboardFontStyle("NORMAL")
	DashboardFontStyleItalic = DashboardFontStyle("ITALIC")
)

func (DashboardFontStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontStyle)(nil)).Elem()
}

func (e DashboardFontStyle) ToDashboardFontStyleOutput() DashboardFontStyleOutput {
	return pulumi.ToOutput(e).(DashboardFontStyleOutput)
}

func (e DashboardFontStyle) ToDashboardFontStyleOutputWithContext(ctx context.Context) DashboardFontStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardFontStyleOutput)
}

func (e DashboardFontStyle) ToDashboardFontStylePtrOutput() DashboardFontStylePtrOutput {
	return e.ToDashboardFontStylePtrOutputWithContext(context.Background())
}

func (e DashboardFontStyle) ToDashboardFontStylePtrOutputWithContext(ctx context.Context) DashboardFontStylePtrOutput {
	return DashboardFontStyle(e).ToDashboardFontStyleOutputWithContext(ctx).ToDashboardFontStylePtrOutputWithContext(ctx)
}

func (e DashboardFontStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFontStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFontStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardFontStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardFontStyleOutput struct{ *pulumi.OutputState }

func (DashboardFontStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontStyle)(nil)).Elem()
}

func (o DashboardFontStyleOutput) ToDashboardFontStyleOutput() DashboardFontStyleOutput {
	return o
}

func (o DashboardFontStyleOutput) ToDashboardFontStyleOutputWithContext(ctx context.Context) DashboardFontStyleOutput {
	return o
}

func (o DashboardFontStyleOutput) ToDashboardFontStylePtrOutput() DashboardFontStylePtrOutput {
	return o.ToDashboardFontStylePtrOutputWithContext(context.Background())
}

func (o DashboardFontStyleOutput) ToDashboardFontStylePtrOutputWithContext(ctx context.Context) DashboardFontStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFontStyle) *DashboardFontStyle {
		return &v
	}).(DashboardFontStylePtrOutput)
}

func (o DashboardFontStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardFontStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFontStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardFontStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFontStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFontStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardFontStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardFontStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFontStyle)(nil)).Elem()
}

func (o DashboardFontStylePtrOutput) ToDashboardFontStylePtrOutput() DashboardFontStylePtrOutput {
	return o
}

func (o DashboardFontStylePtrOutput) ToDashboardFontStylePtrOutputWithContext(ctx context.Context) DashboardFontStylePtrOutput {
	return o
}

func (o DashboardFontStylePtrOutput) Elem() DashboardFontStyleOutput {
	return o.ApplyT(func(v *DashboardFontStyle) DashboardFontStyle {
		if v != nil {
			return *v
		}
		var ret DashboardFontStyle
		return ret
	}).(DashboardFontStyleOutput)
}

func (o DashboardFontStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFontStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardFontStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardFontStyleInput is an input type that accepts values of the DashboardFontStyle enum
// A concrete instance of `DashboardFontStyleInput` can be one of the following:
//
//	DashboardFontStyleNormal
//	DashboardFontStyleItalic
type DashboardFontStyleInput interface {
	pulumi.Input

	ToDashboardFontStyleOutput() DashboardFontStyleOutput
	ToDashboardFontStyleOutputWithContext(context.Context) DashboardFontStyleOutput
}

var dashboardFontStylePtrType = reflect.TypeOf((**DashboardFontStyle)(nil)).Elem()

type DashboardFontStylePtrInput interface {
	pulumi.Input

	ToDashboardFontStylePtrOutput() DashboardFontStylePtrOutput
	ToDashboardFontStylePtrOutputWithContext(context.Context) DashboardFontStylePtrOutput
}

type dashboardFontStylePtr string

func DashboardFontStylePtr(v string) DashboardFontStylePtrInput {
	return (*dashboardFontStylePtr)(&v)
}

func (*dashboardFontStylePtr) ElementType() reflect.Type {
	return dashboardFontStylePtrType
}

func (in *dashboardFontStylePtr) ToDashboardFontStylePtrOutput() DashboardFontStylePtrOutput {
	return pulumi.ToOutput(in).(DashboardFontStylePtrOutput)
}

func (in *dashboardFontStylePtr) ToDashboardFontStylePtrOutputWithContext(ctx context.Context) DashboardFontStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardFontStylePtrOutput)
}

type DashboardFontWeightName string

const (
	DashboardFontWeightNameNormal = DashboardFontWeightName("NORMAL")
	DashboardFontWeightNameBold   = DashboardFontWeightName("BOLD")
)

func (DashboardFontWeightName) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontWeightName)(nil)).Elem()
}

func (e DashboardFontWeightName) ToDashboardFontWeightNameOutput() DashboardFontWeightNameOutput {
	return pulumi.ToOutput(e).(DashboardFontWeightNameOutput)
}

func (e DashboardFontWeightName) ToDashboardFontWeightNameOutputWithContext(ctx context.Context) DashboardFontWeightNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardFontWeightNameOutput)
}

func (e DashboardFontWeightName) ToDashboardFontWeightNamePtrOutput() DashboardFontWeightNamePtrOutput {
	return e.ToDashboardFontWeightNamePtrOutputWithContext(context.Background())
}

func (e DashboardFontWeightName) ToDashboardFontWeightNamePtrOutputWithContext(ctx context.Context) DashboardFontWeightNamePtrOutput {
	return DashboardFontWeightName(e).ToDashboardFontWeightNameOutputWithContext(ctx).ToDashboardFontWeightNamePtrOutputWithContext(ctx)
}

func (e DashboardFontWeightName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFontWeightName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFontWeightName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardFontWeightName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardFontWeightNameOutput struct{ *pulumi.OutputState }

func (DashboardFontWeightNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontWeightName)(nil)).Elem()
}

func (o DashboardFontWeightNameOutput) ToDashboardFontWeightNameOutput() DashboardFontWeightNameOutput {
	return o
}

func (o DashboardFontWeightNameOutput) ToDashboardFontWeightNameOutputWithContext(ctx context.Context) DashboardFontWeightNameOutput {
	return o
}

func (o DashboardFontWeightNameOutput) ToDashboardFontWeightNamePtrOutput() DashboardFontWeightNamePtrOutput {
	return o.ToDashboardFontWeightNamePtrOutputWithContext(context.Background())
}

func (o DashboardFontWeightNameOutput) ToDashboardFontWeightNamePtrOutputWithContext(ctx context.Context) DashboardFontWeightNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFontWeightName) *DashboardFontWeightName {
		return &v
	}).(DashboardFontWeightNamePtrOutput)
}

func (o DashboardFontWeightNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardFontWeightNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFontWeightName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardFontWeightNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFontWeightNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFontWeightName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardFontWeightNamePtrOutput struct{ *pulumi.OutputState }

func (DashboardFontWeightNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFontWeightName)(nil)).Elem()
}

func (o DashboardFontWeightNamePtrOutput) ToDashboardFontWeightNamePtrOutput() DashboardFontWeightNamePtrOutput {
	return o
}

func (o DashboardFontWeightNamePtrOutput) ToDashboardFontWeightNamePtrOutputWithContext(ctx context.Context) DashboardFontWeightNamePtrOutput {
	return o
}

func (o DashboardFontWeightNamePtrOutput) Elem() DashboardFontWeightNameOutput {
	return o.ApplyT(func(v *DashboardFontWeightName) DashboardFontWeightName {
		if v != nil {
			return *v
		}
		var ret DashboardFontWeightName
		return ret
	}).(DashboardFontWeightNameOutput)
}

func (o DashboardFontWeightNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFontWeightNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardFontWeightName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardFontWeightNameInput is an input type that accepts values of the DashboardFontWeightName enum
// A concrete instance of `DashboardFontWeightNameInput` can be one of the following:
//
//	DashboardFontWeightNameNormal
//	DashboardFontWeightNameBold
type DashboardFontWeightNameInput interface {
	pulumi.Input

	ToDashboardFontWeightNameOutput() DashboardFontWeightNameOutput
	ToDashboardFontWeightNameOutputWithContext(context.Context) DashboardFontWeightNameOutput
}

var dashboardFontWeightNamePtrType = reflect.TypeOf((**DashboardFontWeightName)(nil)).Elem()

type DashboardFontWeightNamePtrInput interface {
	pulumi.Input

	ToDashboardFontWeightNamePtrOutput() DashboardFontWeightNamePtrOutput
	ToDashboardFontWeightNamePtrOutputWithContext(context.Context) DashboardFontWeightNamePtrOutput
}

type dashboardFontWeightNamePtr string

func DashboardFontWeightNamePtr(v string) DashboardFontWeightNamePtrInput {
	return (*dashboardFontWeightNamePtr)(&v)
}

func (*dashboardFontWeightNamePtr) ElementType() reflect.Type {
	return dashboardFontWeightNamePtrType
}

func (in *dashboardFontWeightNamePtr) ToDashboardFontWeightNamePtrOutput() DashboardFontWeightNamePtrOutput {
	return pulumi.ToOutput(in).(DashboardFontWeightNamePtrOutput)
}

func (in *dashboardFontWeightNamePtr) ToDashboardFontWeightNamePtrOutputWithContext(ctx context.Context) DashboardFontWeightNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardFontWeightNamePtrOutput)
}

type DashboardForecastComputationSeasonality string

const (
	DashboardForecastComputationSeasonalityAutomatic = DashboardForecastComputationSeasonality("AUTOMATIC")
	DashboardForecastComputationSeasonalityCustom    = DashboardForecastComputationSeasonality("CUSTOM")
)

func (DashboardForecastComputationSeasonality) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardForecastComputationSeasonality)(nil)).Elem()
}

func (e DashboardForecastComputationSeasonality) ToDashboardForecastComputationSeasonalityOutput() DashboardForecastComputationSeasonalityOutput {
	return pulumi.ToOutput(e).(DashboardForecastComputationSeasonalityOutput)
}

func (e DashboardForecastComputationSeasonality) ToDashboardForecastComputationSeasonalityOutputWithContext(ctx context.Context) DashboardForecastComputationSeasonalityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardForecastComputationSeasonalityOutput)
}

func (e DashboardForecastComputationSeasonality) ToDashboardForecastComputationSeasonalityPtrOutput() DashboardForecastComputationSeasonalityPtrOutput {
	return e.ToDashboardForecastComputationSeasonalityPtrOutputWithContext(context.Background())
}

func (e DashboardForecastComputationSeasonality) ToDashboardForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) DashboardForecastComputationSeasonalityPtrOutput {
	return DashboardForecastComputationSeasonality(e).ToDashboardForecastComputationSeasonalityOutputWithContext(ctx).ToDashboardForecastComputationSeasonalityPtrOutputWithContext(ctx)
}

func (e DashboardForecastComputationSeasonality) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardForecastComputationSeasonality) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardForecastComputationSeasonality) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardForecastComputationSeasonality) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardForecastComputationSeasonalityOutput struct{ *pulumi.OutputState }

func (DashboardForecastComputationSeasonalityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardForecastComputationSeasonality)(nil)).Elem()
}

func (o DashboardForecastComputationSeasonalityOutput) ToDashboardForecastComputationSeasonalityOutput() DashboardForecastComputationSeasonalityOutput {
	return o
}

func (o DashboardForecastComputationSeasonalityOutput) ToDashboardForecastComputationSeasonalityOutputWithContext(ctx context.Context) DashboardForecastComputationSeasonalityOutput {
	return o
}

func (o DashboardForecastComputationSeasonalityOutput) ToDashboardForecastComputationSeasonalityPtrOutput() DashboardForecastComputationSeasonalityPtrOutput {
	return o.ToDashboardForecastComputationSeasonalityPtrOutputWithContext(context.Background())
}

func (o DashboardForecastComputationSeasonalityOutput) ToDashboardForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) DashboardForecastComputationSeasonalityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardForecastComputationSeasonality) *DashboardForecastComputationSeasonality {
		return &v
	}).(DashboardForecastComputationSeasonalityPtrOutput)
}

func (o DashboardForecastComputationSeasonalityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardForecastComputationSeasonalityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardForecastComputationSeasonality) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardForecastComputationSeasonalityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardForecastComputationSeasonalityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardForecastComputationSeasonality) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardForecastComputationSeasonalityPtrOutput struct{ *pulumi.OutputState }

func (DashboardForecastComputationSeasonalityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardForecastComputationSeasonality)(nil)).Elem()
}

func (o DashboardForecastComputationSeasonalityPtrOutput) ToDashboardForecastComputationSeasonalityPtrOutput() DashboardForecastComputationSeasonalityPtrOutput {
	return o
}

func (o DashboardForecastComputationSeasonalityPtrOutput) ToDashboardForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) DashboardForecastComputationSeasonalityPtrOutput {
	return o
}

func (o DashboardForecastComputationSeasonalityPtrOutput) Elem() DashboardForecastComputationSeasonalityOutput {
	return o.ApplyT(func(v *DashboardForecastComputationSeasonality) DashboardForecastComputationSeasonality {
		if v != nil {
			return *v
		}
		var ret DashboardForecastComputationSeasonality
		return ret
	}).(DashboardForecastComputationSeasonalityOutput)
}

func (o DashboardForecastComputationSeasonalityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardForecastComputationSeasonalityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardForecastComputationSeasonality) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardForecastComputationSeasonalityInput is an input type that accepts values of the DashboardForecastComputationSeasonality enum
// A concrete instance of `DashboardForecastComputationSeasonalityInput` can be one of the following:
//
//	DashboardForecastComputationSeasonalityAutomatic
//	DashboardForecastComputationSeasonalityCustom
type DashboardForecastComputationSeasonalityInput interface {
	pulumi.Input

	ToDashboardForecastComputationSeasonalityOutput() DashboardForecastComputationSeasonalityOutput
	ToDashboardForecastComputationSeasonalityOutputWithContext(context.Context) DashboardForecastComputationSeasonalityOutput
}

var dashboardForecastComputationSeasonalityPtrType = reflect.TypeOf((**DashboardForecastComputationSeasonality)(nil)).Elem()

type DashboardForecastComputationSeasonalityPtrInput interface {
	pulumi.Input

	ToDashboardForecastComputationSeasonalityPtrOutput() DashboardForecastComputationSeasonalityPtrOutput
	ToDashboardForecastComputationSeasonalityPtrOutputWithContext(context.Context) DashboardForecastComputationSeasonalityPtrOutput
}

type dashboardForecastComputationSeasonalityPtr string

func DashboardForecastComputationSeasonalityPtr(v string) DashboardForecastComputationSeasonalityPtrInput {
	return (*dashboardForecastComputationSeasonalityPtr)(&v)
}

func (*dashboardForecastComputationSeasonalityPtr) ElementType() reflect.Type {
	return dashboardForecastComputationSeasonalityPtrType
}

func (in *dashboardForecastComputationSeasonalityPtr) ToDashboardForecastComputationSeasonalityPtrOutput() DashboardForecastComputationSeasonalityPtrOutput {
	return pulumi.ToOutput(in).(DashboardForecastComputationSeasonalityPtrOutput)
}

func (in *dashboardForecastComputationSeasonalityPtr) ToDashboardForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) DashboardForecastComputationSeasonalityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardForecastComputationSeasonalityPtrOutput)
}

type DashboardFunnelChartMeasureDataLabelStyle string

const (
	DashboardFunnelChartMeasureDataLabelStyleValueOnly                         = DashboardFunnelChartMeasureDataLabelStyle("VALUE_ONLY")
	DashboardFunnelChartMeasureDataLabelStylePercentageByFirstStage            = DashboardFunnelChartMeasureDataLabelStyle("PERCENTAGE_BY_FIRST_STAGE")
	DashboardFunnelChartMeasureDataLabelStylePercentageByPreviousStage         = DashboardFunnelChartMeasureDataLabelStyle("PERCENTAGE_BY_PREVIOUS_STAGE")
	DashboardFunnelChartMeasureDataLabelStyleValueAndPercentageByFirstStage    = DashboardFunnelChartMeasureDataLabelStyle("VALUE_AND_PERCENTAGE_BY_FIRST_STAGE")
	DashboardFunnelChartMeasureDataLabelStyleValueAndPercentageByPreviousStage = DashboardFunnelChartMeasureDataLabelStyle("VALUE_AND_PERCENTAGE_BY_PREVIOUS_STAGE")
)

func (DashboardFunnelChartMeasureDataLabelStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartMeasureDataLabelStyle)(nil)).Elem()
}

func (e DashboardFunnelChartMeasureDataLabelStyle) ToDashboardFunnelChartMeasureDataLabelStyleOutput() DashboardFunnelChartMeasureDataLabelStyleOutput {
	return pulumi.ToOutput(e).(DashboardFunnelChartMeasureDataLabelStyleOutput)
}

func (e DashboardFunnelChartMeasureDataLabelStyle) ToDashboardFunnelChartMeasureDataLabelStyleOutputWithContext(ctx context.Context) DashboardFunnelChartMeasureDataLabelStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardFunnelChartMeasureDataLabelStyleOutput)
}

func (e DashboardFunnelChartMeasureDataLabelStyle) ToDashboardFunnelChartMeasureDataLabelStylePtrOutput() DashboardFunnelChartMeasureDataLabelStylePtrOutput {
	return e.ToDashboardFunnelChartMeasureDataLabelStylePtrOutputWithContext(context.Background())
}

func (e DashboardFunnelChartMeasureDataLabelStyle) ToDashboardFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) DashboardFunnelChartMeasureDataLabelStylePtrOutput {
	return DashboardFunnelChartMeasureDataLabelStyle(e).ToDashboardFunnelChartMeasureDataLabelStyleOutputWithContext(ctx).ToDashboardFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx)
}

func (e DashboardFunnelChartMeasureDataLabelStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFunnelChartMeasureDataLabelStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardFunnelChartMeasureDataLabelStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardFunnelChartMeasureDataLabelStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardFunnelChartMeasureDataLabelStyleOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartMeasureDataLabelStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartMeasureDataLabelStyle)(nil)).Elem()
}

func (o DashboardFunnelChartMeasureDataLabelStyleOutput) ToDashboardFunnelChartMeasureDataLabelStyleOutput() DashboardFunnelChartMeasureDataLabelStyleOutput {
	return o
}

func (o DashboardFunnelChartMeasureDataLabelStyleOutput) ToDashboardFunnelChartMeasureDataLabelStyleOutputWithContext(ctx context.Context) DashboardFunnelChartMeasureDataLabelStyleOutput {
	return o
}

func (o DashboardFunnelChartMeasureDataLabelStyleOutput) ToDashboardFunnelChartMeasureDataLabelStylePtrOutput() DashboardFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ToDashboardFunnelChartMeasureDataLabelStylePtrOutputWithContext(context.Background())
}

func (o DashboardFunnelChartMeasureDataLabelStyleOutput) ToDashboardFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) DashboardFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFunnelChartMeasureDataLabelStyle) *DashboardFunnelChartMeasureDataLabelStyle {
		return &v
	}).(DashboardFunnelChartMeasureDataLabelStylePtrOutput)
}

func (o DashboardFunnelChartMeasureDataLabelStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardFunnelChartMeasureDataLabelStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFunnelChartMeasureDataLabelStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardFunnelChartMeasureDataLabelStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFunnelChartMeasureDataLabelStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardFunnelChartMeasureDataLabelStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardFunnelChartMeasureDataLabelStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartMeasureDataLabelStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartMeasureDataLabelStyle)(nil)).Elem()
}

func (o DashboardFunnelChartMeasureDataLabelStylePtrOutput) ToDashboardFunnelChartMeasureDataLabelStylePtrOutput() DashboardFunnelChartMeasureDataLabelStylePtrOutput {
	return o
}

func (o DashboardFunnelChartMeasureDataLabelStylePtrOutput) ToDashboardFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) DashboardFunnelChartMeasureDataLabelStylePtrOutput {
	return o
}

func (o DashboardFunnelChartMeasureDataLabelStylePtrOutput) Elem() DashboardFunnelChartMeasureDataLabelStyleOutput {
	return o.ApplyT(func(v *DashboardFunnelChartMeasureDataLabelStyle) DashboardFunnelChartMeasureDataLabelStyle {
		if v != nil {
			return *v
		}
		var ret DashboardFunnelChartMeasureDataLabelStyle
		return ret
	}).(DashboardFunnelChartMeasureDataLabelStyleOutput)
}

func (o DashboardFunnelChartMeasureDataLabelStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardFunnelChartMeasureDataLabelStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardFunnelChartMeasureDataLabelStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardFunnelChartMeasureDataLabelStyleInput is an input type that accepts values of the DashboardFunnelChartMeasureDataLabelStyle enum
// A concrete instance of `DashboardFunnelChartMeasureDataLabelStyleInput` can be one of the following:
//
//	DashboardFunnelChartMeasureDataLabelStyleValueOnly
//	DashboardFunnelChartMeasureDataLabelStylePercentageByFirstStage
//	DashboardFunnelChartMeasureDataLabelStylePercentageByPreviousStage
//	DashboardFunnelChartMeasureDataLabelStyleValueAndPercentageByFirstStage
//	DashboardFunnelChartMeasureDataLabelStyleValueAndPercentageByPreviousStage
type DashboardFunnelChartMeasureDataLabelStyleInput interface {
	pulumi.Input

	ToDashboardFunnelChartMeasureDataLabelStyleOutput() DashboardFunnelChartMeasureDataLabelStyleOutput
	ToDashboardFunnelChartMeasureDataLabelStyleOutputWithContext(context.Context) DashboardFunnelChartMeasureDataLabelStyleOutput
}

var dashboardFunnelChartMeasureDataLabelStylePtrType = reflect.TypeOf((**DashboardFunnelChartMeasureDataLabelStyle)(nil)).Elem()

type DashboardFunnelChartMeasureDataLabelStylePtrInput interface {
	pulumi.Input

	ToDashboardFunnelChartMeasureDataLabelStylePtrOutput() DashboardFunnelChartMeasureDataLabelStylePtrOutput
	ToDashboardFunnelChartMeasureDataLabelStylePtrOutputWithContext(context.Context) DashboardFunnelChartMeasureDataLabelStylePtrOutput
}

type dashboardFunnelChartMeasureDataLabelStylePtr string

func DashboardFunnelChartMeasureDataLabelStylePtr(v string) DashboardFunnelChartMeasureDataLabelStylePtrInput {
	return (*dashboardFunnelChartMeasureDataLabelStylePtr)(&v)
}

func (*dashboardFunnelChartMeasureDataLabelStylePtr) ElementType() reflect.Type {
	return dashboardFunnelChartMeasureDataLabelStylePtrType
}

func (in *dashboardFunnelChartMeasureDataLabelStylePtr) ToDashboardFunnelChartMeasureDataLabelStylePtrOutput() DashboardFunnelChartMeasureDataLabelStylePtrOutput {
	return pulumi.ToOutput(in).(DashboardFunnelChartMeasureDataLabelStylePtrOutput)
}

func (in *dashboardFunnelChartMeasureDataLabelStylePtr) ToDashboardFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) DashboardFunnelChartMeasureDataLabelStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardFunnelChartMeasureDataLabelStylePtrOutput)
}

type DashboardGeospatialSelectedPointStyle string

const (
	DashboardGeospatialSelectedPointStylePoint   = DashboardGeospatialSelectedPointStyle("POINT")
	DashboardGeospatialSelectedPointStyleCluster = DashboardGeospatialSelectedPointStyle("CLUSTER")
	DashboardGeospatialSelectedPointStyleHeatmap = DashboardGeospatialSelectedPointStyle("HEATMAP")
)

func (DashboardGeospatialSelectedPointStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialSelectedPointStyle)(nil)).Elem()
}

func (e DashboardGeospatialSelectedPointStyle) ToDashboardGeospatialSelectedPointStyleOutput() DashboardGeospatialSelectedPointStyleOutput {
	return pulumi.ToOutput(e).(DashboardGeospatialSelectedPointStyleOutput)
}

func (e DashboardGeospatialSelectedPointStyle) ToDashboardGeospatialSelectedPointStyleOutputWithContext(ctx context.Context) DashboardGeospatialSelectedPointStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardGeospatialSelectedPointStyleOutput)
}

func (e DashboardGeospatialSelectedPointStyle) ToDashboardGeospatialSelectedPointStylePtrOutput() DashboardGeospatialSelectedPointStylePtrOutput {
	return e.ToDashboardGeospatialSelectedPointStylePtrOutputWithContext(context.Background())
}

func (e DashboardGeospatialSelectedPointStyle) ToDashboardGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) DashboardGeospatialSelectedPointStylePtrOutput {
	return DashboardGeospatialSelectedPointStyle(e).ToDashboardGeospatialSelectedPointStyleOutputWithContext(ctx).ToDashboardGeospatialSelectedPointStylePtrOutputWithContext(ctx)
}

func (e DashboardGeospatialSelectedPointStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardGeospatialSelectedPointStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardGeospatialSelectedPointStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardGeospatialSelectedPointStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardGeospatialSelectedPointStyleOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialSelectedPointStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialSelectedPointStyle)(nil)).Elem()
}

func (o DashboardGeospatialSelectedPointStyleOutput) ToDashboardGeospatialSelectedPointStyleOutput() DashboardGeospatialSelectedPointStyleOutput {
	return o
}

func (o DashboardGeospatialSelectedPointStyleOutput) ToDashboardGeospatialSelectedPointStyleOutputWithContext(ctx context.Context) DashboardGeospatialSelectedPointStyleOutput {
	return o
}

func (o DashboardGeospatialSelectedPointStyleOutput) ToDashboardGeospatialSelectedPointStylePtrOutput() DashboardGeospatialSelectedPointStylePtrOutput {
	return o.ToDashboardGeospatialSelectedPointStylePtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialSelectedPointStyleOutput) ToDashboardGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) DashboardGeospatialSelectedPointStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGeospatialSelectedPointStyle) *DashboardGeospatialSelectedPointStyle {
		return &v
	}).(DashboardGeospatialSelectedPointStylePtrOutput)
}

func (o DashboardGeospatialSelectedPointStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardGeospatialSelectedPointStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardGeospatialSelectedPointStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardGeospatialSelectedPointStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialSelectedPointStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardGeospatialSelectedPointStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardGeospatialSelectedPointStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialSelectedPointStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialSelectedPointStyle)(nil)).Elem()
}

func (o DashboardGeospatialSelectedPointStylePtrOutput) ToDashboardGeospatialSelectedPointStylePtrOutput() DashboardGeospatialSelectedPointStylePtrOutput {
	return o
}

func (o DashboardGeospatialSelectedPointStylePtrOutput) ToDashboardGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) DashboardGeospatialSelectedPointStylePtrOutput {
	return o
}

func (o DashboardGeospatialSelectedPointStylePtrOutput) Elem() DashboardGeospatialSelectedPointStyleOutput {
	return o.ApplyT(func(v *DashboardGeospatialSelectedPointStyle) DashboardGeospatialSelectedPointStyle {
		if v != nil {
			return *v
		}
		var ret DashboardGeospatialSelectedPointStyle
		return ret
	}).(DashboardGeospatialSelectedPointStyleOutput)
}

func (o DashboardGeospatialSelectedPointStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialSelectedPointStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardGeospatialSelectedPointStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardGeospatialSelectedPointStyleInput is an input type that accepts values of the DashboardGeospatialSelectedPointStyle enum
// A concrete instance of `DashboardGeospatialSelectedPointStyleInput` can be one of the following:
//
//	DashboardGeospatialSelectedPointStylePoint
//	DashboardGeospatialSelectedPointStyleCluster
//	DashboardGeospatialSelectedPointStyleHeatmap
type DashboardGeospatialSelectedPointStyleInput interface {
	pulumi.Input

	ToDashboardGeospatialSelectedPointStyleOutput() DashboardGeospatialSelectedPointStyleOutput
	ToDashboardGeospatialSelectedPointStyleOutputWithContext(context.Context) DashboardGeospatialSelectedPointStyleOutput
}

var dashboardGeospatialSelectedPointStylePtrType = reflect.TypeOf((**DashboardGeospatialSelectedPointStyle)(nil)).Elem()

type DashboardGeospatialSelectedPointStylePtrInput interface {
	pulumi.Input

	ToDashboardGeospatialSelectedPointStylePtrOutput() DashboardGeospatialSelectedPointStylePtrOutput
	ToDashboardGeospatialSelectedPointStylePtrOutputWithContext(context.Context) DashboardGeospatialSelectedPointStylePtrOutput
}

type dashboardGeospatialSelectedPointStylePtr string

func DashboardGeospatialSelectedPointStylePtr(v string) DashboardGeospatialSelectedPointStylePtrInput {
	return (*dashboardGeospatialSelectedPointStylePtr)(&v)
}

func (*dashboardGeospatialSelectedPointStylePtr) ElementType() reflect.Type {
	return dashboardGeospatialSelectedPointStylePtrType
}

func (in *dashboardGeospatialSelectedPointStylePtr) ToDashboardGeospatialSelectedPointStylePtrOutput() DashboardGeospatialSelectedPointStylePtrOutput {
	return pulumi.ToOutput(in).(DashboardGeospatialSelectedPointStylePtrOutput)
}

func (in *dashboardGeospatialSelectedPointStylePtr) ToDashboardGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) DashboardGeospatialSelectedPointStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardGeospatialSelectedPointStylePtrOutput)
}

type DashboardHistogramBinType string

const (
	DashboardHistogramBinTypeBinCount = DashboardHistogramBinType("BIN_COUNT")
	DashboardHistogramBinTypeBinWidth = DashboardHistogramBinType("BIN_WIDTH")
)

func (DashboardHistogramBinType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramBinType)(nil)).Elem()
}

func (e DashboardHistogramBinType) ToDashboardHistogramBinTypeOutput() DashboardHistogramBinTypeOutput {
	return pulumi.ToOutput(e).(DashboardHistogramBinTypeOutput)
}

func (e DashboardHistogramBinType) ToDashboardHistogramBinTypeOutputWithContext(ctx context.Context) DashboardHistogramBinTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardHistogramBinTypeOutput)
}

func (e DashboardHistogramBinType) ToDashboardHistogramBinTypePtrOutput() DashboardHistogramBinTypePtrOutput {
	return e.ToDashboardHistogramBinTypePtrOutputWithContext(context.Background())
}

func (e DashboardHistogramBinType) ToDashboardHistogramBinTypePtrOutputWithContext(ctx context.Context) DashboardHistogramBinTypePtrOutput {
	return DashboardHistogramBinType(e).ToDashboardHistogramBinTypeOutputWithContext(ctx).ToDashboardHistogramBinTypePtrOutputWithContext(ctx)
}

func (e DashboardHistogramBinType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardHistogramBinType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardHistogramBinType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardHistogramBinType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardHistogramBinTypeOutput struct{ *pulumi.OutputState }

func (DashboardHistogramBinTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramBinType)(nil)).Elem()
}

func (o DashboardHistogramBinTypeOutput) ToDashboardHistogramBinTypeOutput() DashboardHistogramBinTypeOutput {
	return o
}

func (o DashboardHistogramBinTypeOutput) ToDashboardHistogramBinTypeOutputWithContext(ctx context.Context) DashboardHistogramBinTypeOutput {
	return o
}

func (o DashboardHistogramBinTypeOutput) ToDashboardHistogramBinTypePtrOutput() DashboardHistogramBinTypePtrOutput {
	return o.ToDashboardHistogramBinTypePtrOutputWithContext(context.Background())
}

func (o DashboardHistogramBinTypeOutput) ToDashboardHistogramBinTypePtrOutputWithContext(ctx context.Context) DashboardHistogramBinTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHistogramBinType) *DashboardHistogramBinType {
		return &v
	}).(DashboardHistogramBinTypePtrOutput)
}

func (o DashboardHistogramBinTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardHistogramBinTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardHistogramBinType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardHistogramBinTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardHistogramBinTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardHistogramBinType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardHistogramBinTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardHistogramBinTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramBinType)(nil)).Elem()
}

func (o DashboardHistogramBinTypePtrOutput) ToDashboardHistogramBinTypePtrOutput() DashboardHistogramBinTypePtrOutput {
	return o
}

func (o DashboardHistogramBinTypePtrOutput) ToDashboardHistogramBinTypePtrOutputWithContext(ctx context.Context) DashboardHistogramBinTypePtrOutput {
	return o
}

func (o DashboardHistogramBinTypePtrOutput) Elem() DashboardHistogramBinTypeOutput {
	return o.ApplyT(func(v *DashboardHistogramBinType) DashboardHistogramBinType {
		if v != nil {
			return *v
		}
		var ret DashboardHistogramBinType
		return ret
	}).(DashboardHistogramBinTypeOutput)
}

func (o DashboardHistogramBinTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardHistogramBinTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardHistogramBinType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardHistogramBinTypeInput is an input type that accepts values of the DashboardHistogramBinType enum
// A concrete instance of `DashboardHistogramBinTypeInput` can be one of the following:
//
//	DashboardHistogramBinTypeBinCount
//	DashboardHistogramBinTypeBinWidth
type DashboardHistogramBinTypeInput interface {
	pulumi.Input

	ToDashboardHistogramBinTypeOutput() DashboardHistogramBinTypeOutput
	ToDashboardHistogramBinTypeOutputWithContext(context.Context) DashboardHistogramBinTypeOutput
}

var dashboardHistogramBinTypePtrType = reflect.TypeOf((**DashboardHistogramBinType)(nil)).Elem()

type DashboardHistogramBinTypePtrInput interface {
	pulumi.Input

	ToDashboardHistogramBinTypePtrOutput() DashboardHistogramBinTypePtrOutput
	ToDashboardHistogramBinTypePtrOutputWithContext(context.Context) DashboardHistogramBinTypePtrOutput
}

type dashboardHistogramBinTypePtr string

func DashboardHistogramBinTypePtr(v string) DashboardHistogramBinTypePtrInput {
	return (*dashboardHistogramBinTypePtr)(&v)
}

func (*dashboardHistogramBinTypePtr) ElementType() reflect.Type {
	return dashboardHistogramBinTypePtrType
}

func (in *dashboardHistogramBinTypePtr) ToDashboardHistogramBinTypePtrOutput() DashboardHistogramBinTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardHistogramBinTypePtrOutput)
}

func (in *dashboardHistogramBinTypePtr) ToDashboardHistogramBinTypePtrOutputWithContext(ctx context.Context) DashboardHistogramBinTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardHistogramBinTypePtrOutput)
}

type DashboardHorizontalTextAlignment string

const (
	DashboardHorizontalTextAlignmentLeft   = DashboardHorizontalTextAlignment("LEFT")
	DashboardHorizontalTextAlignmentCenter = DashboardHorizontalTextAlignment("CENTER")
	DashboardHorizontalTextAlignmentRight  = DashboardHorizontalTextAlignment("RIGHT")
	DashboardHorizontalTextAlignmentAuto   = DashboardHorizontalTextAlignment("AUTO")
)

func (DashboardHorizontalTextAlignment) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHorizontalTextAlignment)(nil)).Elem()
}

func (e DashboardHorizontalTextAlignment) ToDashboardHorizontalTextAlignmentOutput() DashboardHorizontalTextAlignmentOutput {
	return pulumi.ToOutput(e).(DashboardHorizontalTextAlignmentOutput)
}

func (e DashboardHorizontalTextAlignment) ToDashboardHorizontalTextAlignmentOutputWithContext(ctx context.Context) DashboardHorizontalTextAlignmentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardHorizontalTextAlignmentOutput)
}

func (e DashboardHorizontalTextAlignment) ToDashboardHorizontalTextAlignmentPtrOutput() DashboardHorizontalTextAlignmentPtrOutput {
	return e.ToDashboardHorizontalTextAlignmentPtrOutputWithContext(context.Background())
}

func (e DashboardHorizontalTextAlignment) ToDashboardHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) DashboardHorizontalTextAlignmentPtrOutput {
	return DashboardHorizontalTextAlignment(e).ToDashboardHorizontalTextAlignmentOutputWithContext(ctx).ToDashboardHorizontalTextAlignmentPtrOutputWithContext(ctx)
}

func (e DashboardHorizontalTextAlignment) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardHorizontalTextAlignment) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardHorizontalTextAlignment) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardHorizontalTextAlignment) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardHorizontalTextAlignmentOutput struct{ *pulumi.OutputState }

func (DashboardHorizontalTextAlignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHorizontalTextAlignment)(nil)).Elem()
}

func (o DashboardHorizontalTextAlignmentOutput) ToDashboardHorizontalTextAlignmentOutput() DashboardHorizontalTextAlignmentOutput {
	return o
}

func (o DashboardHorizontalTextAlignmentOutput) ToDashboardHorizontalTextAlignmentOutputWithContext(ctx context.Context) DashboardHorizontalTextAlignmentOutput {
	return o
}

func (o DashboardHorizontalTextAlignmentOutput) ToDashboardHorizontalTextAlignmentPtrOutput() DashboardHorizontalTextAlignmentPtrOutput {
	return o.ToDashboardHorizontalTextAlignmentPtrOutputWithContext(context.Background())
}

func (o DashboardHorizontalTextAlignmentOutput) ToDashboardHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) DashboardHorizontalTextAlignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHorizontalTextAlignment) *DashboardHorizontalTextAlignment {
		return &v
	}).(DashboardHorizontalTextAlignmentPtrOutput)
}

func (o DashboardHorizontalTextAlignmentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardHorizontalTextAlignmentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardHorizontalTextAlignment) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardHorizontalTextAlignmentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardHorizontalTextAlignmentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardHorizontalTextAlignment) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardHorizontalTextAlignmentPtrOutput struct{ *pulumi.OutputState }

func (DashboardHorizontalTextAlignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHorizontalTextAlignment)(nil)).Elem()
}

func (o DashboardHorizontalTextAlignmentPtrOutput) ToDashboardHorizontalTextAlignmentPtrOutput() DashboardHorizontalTextAlignmentPtrOutput {
	return o
}

func (o DashboardHorizontalTextAlignmentPtrOutput) ToDashboardHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) DashboardHorizontalTextAlignmentPtrOutput {
	return o
}

func (o DashboardHorizontalTextAlignmentPtrOutput) Elem() DashboardHorizontalTextAlignmentOutput {
	return o.ApplyT(func(v *DashboardHorizontalTextAlignment) DashboardHorizontalTextAlignment {
		if v != nil {
			return *v
		}
		var ret DashboardHorizontalTextAlignment
		return ret
	}).(DashboardHorizontalTextAlignmentOutput)
}

func (o DashboardHorizontalTextAlignmentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardHorizontalTextAlignmentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardHorizontalTextAlignment) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardHorizontalTextAlignmentInput is an input type that accepts values of the DashboardHorizontalTextAlignment enum
// A concrete instance of `DashboardHorizontalTextAlignmentInput` can be one of the following:
//
//	DashboardHorizontalTextAlignmentLeft
//	DashboardHorizontalTextAlignmentCenter
//	DashboardHorizontalTextAlignmentRight
//	DashboardHorizontalTextAlignmentAuto
type DashboardHorizontalTextAlignmentInput interface {
	pulumi.Input

	ToDashboardHorizontalTextAlignmentOutput() DashboardHorizontalTextAlignmentOutput
	ToDashboardHorizontalTextAlignmentOutputWithContext(context.Context) DashboardHorizontalTextAlignmentOutput
}

var dashboardHorizontalTextAlignmentPtrType = reflect.TypeOf((**DashboardHorizontalTextAlignment)(nil)).Elem()

type DashboardHorizontalTextAlignmentPtrInput interface {
	pulumi.Input

	ToDashboardHorizontalTextAlignmentPtrOutput() DashboardHorizontalTextAlignmentPtrOutput
	ToDashboardHorizontalTextAlignmentPtrOutputWithContext(context.Context) DashboardHorizontalTextAlignmentPtrOutput
}

type dashboardHorizontalTextAlignmentPtr string

func DashboardHorizontalTextAlignmentPtr(v string) DashboardHorizontalTextAlignmentPtrInput {
	return (*dashboardHorizontalTextAlignmentPtr)(&v)
}

func (*dashboardHorizontalTextAlignmentPtr) ElementType() reflect.Type {
	return dashboardHorizontalTextAlignmentPtrType
}

func (in *dashboardHorizontalTextAlignmentPtr) ToDashboardHorizontalTextAlignmentPtrOutput() DashboardHorizontalTextAlignmentPtrOutput {
	return pulumi.ToOutput(in).(DashboardHorizontalTextAlignmentPtrOutput)
}

func (in *dashboardHorizontalTextAlignmentPtr) ToDashboardHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) DashboardHorizontalTextAlignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardHorizontalTextAlignmentPtrOutput)
}

type DashboardIcon string

const (
	DashboardIconCaretUp        = DashboardIcon("CARET_UP")
	DashboardIconCaretDown      = DashboardIcon("CARET_DOWN")
	DashboardIconPlus           = DashboardIcon("PLUS")
	DashboardIconMinus          = DashboardIcon("MINUS")
	DashboardIconArrowUp        = DashboardIcon("ARROW_UP")
	DashboardIconArrowDown      = DashboardIcon("ARROW_DOWN")
	DashboardIconArrowLeft      = DashboardIcon("ARROW_LEFT")
	DashboardIconArrowUpLeft    = DashboardIcon("ARROW_UP_LEFT")
	DashboardIconArrowDownLeft  = DashboardIcon("ARROW_DOWN_LEFT")
	DashboardIconArrowRight     = DashboardIcon("ARROW_RIGHT")
	DashboardIconArrowUpRight   = DashboardIcon("ARROW_UP_RIGHT")
	DashboardIconArrowDownRight = DashboardIcon("ARROW_DOWN_RIGHT")
	DashboardIconFaceUp         = DashboardIcon("FACE_UP")
	DashboardIconFaceDown       = DashboardIcon("FACE_DOWN")
	DashboardIconFaceFlat       = DashboardIcon("FACE_FLAT")
	DashboardIconOneBar         = DashboardIcon("ONE_BAR")
	DashboardIconTwoBar         = DashboardIcon("TWO_BAR")
	DashboardIconThreeBar       = DashboardIcon("THREE_BAR")
	DashboardIconCircle         = DashboardIcon("CIRCLE")
	DashboardIconTriangle       = DashboardIcon("TRIANGLE")
	DashboardIconSquare         = DashboardIcon("SQUARE")
	DashboardIconFlag           = DashboardIcon("FLAG")
	DashboardIconThumbsUp       = DashboardIcon("THUMBS_UP")
	DashboardIconThumbsDown     = DashboardIcon("THUMBS_DOWN")
	DashboardIconCheckmark      = DashboardIcon("CHECKMARK")
	DashboardIconX              = DashboardIcon("X")
)

func (DashboardIcon) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIcon)(nil)).Elem()
}

func (e DashboardIcon) ToDashboardIconOutput() DashboardIconOutput {
	return pulumi.ToOutput(e).(DashboardIconOutput)
}

func (e DashboardIcon) ToDashboardIconOutputWithContext(ctx context.Context) DashboardIconOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardIconOutput)
}

func (e DashboardIcon) ToDashboardIconPtrOutput() DashboardIconPtrOutput {
	return e.ToDashboardIconPtrOutputWithContext(context.Background())
}

func (e DashboardIcon) ToDashboardIconPtrOutputWithContext(ctx context.Context) DashboardIconPtrOutput {
	return DashboardIcon(e).ToDashboardIconOutputWithContext(ctx).ToDashboardIconPtrOutputWithContext(ctx)
}

func (e DashboardIcon) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardIcon) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardIcon) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardIcon) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardIconOutput struct{ *pulumi.OutputState }

func (DashboardIconOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIcon)(nil)).Elem()
}

func (o DashboardIconOutput) ToDashboardIconOutput() DashboardIconOutput {
	return o
}

func (o DashboardIconOutput) ToDashboardIconOutputWithContext(ctx context.Context) DashboardIconOutput {
	return o
}

func (o DashboardIconOutput) ToDashboardIconPtrOutput() DashboardIconPtrOutput {
	return o.ToDashboardIconPtrOutputWithContext(context.Background())
}

func (o DashboardIconOutput) ToDashboardIconPtrOutputWithContext(ctx context.Context) DashboardIconPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardIcon) *DashboardIcon {
		return &v
	}).(DashboardIconPtrOutput)
}

func (o DashboardIconOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardIconOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardIcon) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardIconOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardIconOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardIcon) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardIconPtrOutput struct{ *pulumi.OutputState }

func (DashboardIconPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardIcon)(nil)).Elem()
}

func (o DashboardIconPtrOutput) ToDashboardIconPtrOutput() DashboardIconPtrOutput {
	return o
}

func (o DashboardIconPtrOutput) ToDashboardIconPtrOutputWithContext(ctx context.Context) DashboardIconPtrOutput {
	return o
}

func (o DashboardIconPtrOutput) Elem() DashboardIconOutput {
	return o.ApplyT(func(v *DashboardIcon) DashboardIcon {
		if v != nil {
			return *v
		}
		var ret DashboardIcon
		return ret
	}).(DashboardIconOutput)
}

func (o DashboardIconPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardIconPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardIcon) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardIconInput is an input type that accepts values of the DashboardIcon enum
// A concrete instance of `DashboardIconInput` can be one of the following:
//
//	DashboardIconCaretUp
//	DashboardIconCaretDown
//	DashboardIconPlus
//	DashboardIconMinus
//	DashboardIconArrowUp
//	DashboardIconArrowDown
//	DashboardIconArrowLeft
//	DashboardIconArrowUpLeft
//	DashboardIconArrowDownLeft
//	DashboardIconArrowRight
//	DashboardIconArrowUpRight
//	DashboardIconArrowDownRight
//	DashboardIconFaceUp
//	DashboardIconFaceDown
//	DashboardIconFaceFlat
//	DashboardIconOneBar
//	DashboardIconTwoBar
//	DashboardIconThreeBar
//	DashboardIconCircle
//	DashboardIconTriangle
//	DashboardIconSquare
//	DashboardIconFlag
//	DashboardIconThumbsUp
//	DashboardIconThumbsDown
//	DashboardIconCheckmark
//	DashboardIconX
type DashboardIconInput interface {
	pulumi.Input

	ToDashboardIconOutput() DashboardIconOutput
	ToDashboardIconOutputWithContext(context.Context) DashboardIconOutput
}

var dashboardIconPtrType = reflect.TypeOf((**DashboardIcon)(nil)).Elem()

type DashboardIconPtrInput interface {
	pulumi.Input

	ToDashboardIconPtrOutput() DashboardIconPtrOutput
	ToDashboardIconPtrOutputWithContext(context.Context) DashboardIconPtrOutput
}

type dashboardIconPtr string

func DashboardIconPtr(v string) DashboardIconPtrInput {
	return (*dashboardIconPtr)(&v)
}

func (*dashboardIconPtr) ElementType() reflect.Type {
	return dashboardIconPtrType
}

func (in *dashboardIconPtr) ToDashboardIconPtrOutput() DashboardIconPtrOutput {
	return pulumi.ToOutput(in).(DashboardIconPtrOutput)
}

func (in *dashboardIconPtr) ToDashboardIconPtrOutputWithContext(ctx context.Context) DashboardIconPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardIconPtrOutput)
}

type DashboardKpiSparklineType string

const (
	DashboardKpiSparklineTypeLine = DashboardKpiSparklineType("LINE")
	DashboardKpiSparklineTypeArea = DashboardKpiSparklineType("AREA")
)

func (DashboardKpiSparklineType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKpiSparklineType)(nil)).Elem()
}

func (e DashboardKpiSparklineType) ToDashboardKpiSparklineTypeOutput() DashboardKpiSparklineTypeOutput {
	return pulumi.ToOutput(e).(DashboardKpiSparklineTypeOutput)
}

func (e DashboardKpiSparklineType) ToDashboardKpiSparklineTypeOutputWithContext(ctx context.Context) DashboardKpiSparklineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardKpiSparklineTypeOutput)
}

func (e DashboardKpiSparklineType) ToDashboardKpiSparklineTypePtrOutput() DashboardKpiSparklineTypePtrOutput {
	return e.ToDashboardKpiSparklineTypePtrOutputWithContext(context.Background())
}

func (e DashboardKpiSparklineType) ToDashboardKpiSparklineTypePtrOutputWithContext(ctx context.Context) DashboardKpiSparklineTypePtrOutput {
	return DashboardKpiSparklineType(e).ToDashboardKpiSparklineTypeOutputWithContext(ctx).ToDashboardKpiSparklineTypePtrOutputWithContext(ctx)
}

func (e DashboardKpiSparklineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardKpiSparklineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardKpiSparklineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardKpiSparklineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardKpiSparklineTypeOutput struct{ *pulumi.OutputState }

func (DashboardKpiSparklineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKpiSparklineType)(nil)).Elem()
}

func (o DashboardKpiSparklineTypeOutput) ToDashboardKpiSparklineTypeOutput() DashboardKpiSparklineTypeOutput {
	return o
}

func (o DashboardKpiSparklineTypeOutput) ToDashboardKpiSparklineTypeOutputWithContext(ctx context.Context) DashboardKpiSparklineTypeOutput {
	return o
}

func (o DashboardKpiSparklineTypeOutput) ToDashboardKpiSparklineTypePtrOutput() DashboardKpiSparklineTypePtrOutput {
	return o.ToDashboardKpiSparklineTypePtrOutputWithContext(context.Background())
}

func (o DashboardKpiSparklineTypeOutput) ToDashboardKpiSparklineTypePtrOutputWithContext(ctx context.Context) DashboardKpiSparklineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardKpiSparklineType) *DashboardKpiSparklineType {
		return &v
	}).(DashboardKpiSparklineTypePtrOutput)
}

func (o DashboardKpiSparklineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardKpiSparklineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardKpiSparklineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardKpiSparklineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardKpiSparklineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardKpiSparklineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardKpiSparklineTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardKpiSparklineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKpiSparklineType)(nil)).Elem()
}

func (o DashboardKpiSparklineTypePtrOutput) ToDashboardKpiSparklineTypePtrOutput() DashboardKpiSparklineTypePtrOutput {
	return o
}

func (o DashboardKpiSparklineTypePtrOutput) ToDashboardKpiSparklineTypePtrOutputWithContext(ctx context.Context) DashboardKpiSparklineTypePtrOutput {
	return o
}

func (o DashboardKpiSparklineTypePtrOutput) Elem() DashboardKpiSparklineTypeOutput {
	return o.ApplyT(func(v *DashboardKpiSparklineType) DashboardKpiSparklineType {
		if v != nil {
			return *v
		}
		var ret DashboardKpiSparklineType
		return ret
	}).(DashboardKpiSparklineTypeOutput)
}

func (o DashboardKpiSparklineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardKpiSparklineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardKpiSparklineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardKpiSparklineTypeInput is an input type that accepts values of the DashboardKpiSparklineType enum
// A concrete instance of `DashboardKpiSparklineTypeInput` can be one of the following:
//
//	DashboardKpiSparklineTypeLine
//	DashboardKpiSparklineTypeArea
type DashboardKpiSparklineTypeInput interface {
	pulumi.Input

	ToDashboardKpiSparklineTypeOutput() DashboardKpiSparklineTypeOutput
	ToDashboardKpiSparklineTypeOutputWithContext(context.Context) DashboardKpiSparklineTypeOutput
}

var dashboardKpiSparklineTypePtrType = reflect.TypeOf((**DashboardKpiSparklineType)(nil)).Elem()

type DashboardKpiSparklineTypePtrInput interface {
	pulumi.Input

	ToDashboardKpiSparklineTypePtrOutput() DashboardKpiSparklineTypePtrOutput
	ToDashboardKpiSparklineTypePtrOutputWithContext(context.Context) DashboardKpiSparklineTypePtrOutput
}

type dashboardKpiSparklineTypePtr string

func DashboardKpiSparklineTypePtr(v string) DashboardKpiSparklineTypePtrInput {
	return (*dashboardKpiSparklineTypePtr)(&v)
}

func (*dashboardKpiSparklineTypePtr) ElementType() reflect.Type {
	return dashboardKpiSparklineTypePtrType
}

func (in *dashboardKpiSparklineTypePtr) ToDashboardKpiSparklineTypePtrOutput() DashboardKpiSparklineTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardKpiSparklineTypePtrOutput)
}

func (in *dashboardKpiSparklineTypePtr) ToDashboardKpiSparklineTypePtrOutputWithContext(ctx context.Context) DashboardKpiSparklineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardKpiSparklineTypePtrOutput)
}

type DashboardKpiVisualStandardLayoutType string

const (
	DashboardKpiVisualStandardLayoutTypeClassic  = DashboardKpiVisualStandardLayoutType("CLASSIC")
	DashboardKpiVisualStandardLayoutTypeVertical = DashboardKpiVisualStandardLayoutType("VERTICAL")
)

func (DashboardKpiVisualStandardLayoutType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKpiVisualStandardLayoutType)(nil)).Elem()
}

func (e DashboardKpiVisualStandardLayoutType) ToDashboardKpiVisualStandardLayoutTypeOutput() DashboardKpiVisualStandardLayoutTypeOutput {
	return pulumi.ToOutput(e).(DashboardKpiVisualStandardLayoutTypeOutput)
}

func (e DashboardKpiVisualStandardLayoutType) ToDashboardKpiVisualStandardLayoutTypeOutputWithContext(ctx context.Context) DashboardKpiVisualStandardLayoutTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardKpiVisualStandardLayoutTypeOutput)
}

func (e DashboardKpiVisualStandardLayoutType) ToDashboardKpiVisualStandardLayoutTypePtrOutput() DashboardKpiVisualStandardLayoutTypePtrOutput {
	return e.ToDashboardKpiVisualStandardLayoutTypePtrOutputWithContext(context.Background())
}

func (e DashboardKpiVisualStandardLayoutType) ToDashboardKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) DashboardKpiVisualStandardLayoutTypePtrOutput {
	return DashboardKpiVisualStandardLayoutType(e).ToDashboardKpiVisualStandardLayoutTypeOutputWithContext(ctx).ToDashboardKpiVisualStandardLayoutTypePtrOutputWithContext(ctx)
}

func (e DashboardKpiVisualStandardLayoutType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardKpiVisualStandardLayoutType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardKpiVisualStandardLayoutType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardKpiVisualStandardLayoutType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardKpiVisualStandardLayoutTypeOutput struct{ *pulumi.OutputState }

func (DashboardKpiVisualStandardLayoutTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKpiVisualStandardLayoutType)(nil)).Elem()
}

func (o DashboardKpiVisualStandardLayoutTypeOutput) ToDashboardKpiVisualStandardLayoutTypeOutput() DashboardKpiVisualStandardLayoutTypeOutput {
	return o
}

func (o DashboardKpiVisualStandardLayoutTypeOutput) ToDashboardKpiVisualStandardLayoutTypeOutputWithContext(ctx context.Context) DashboardKpiVisualStandardLayoutTypeOutput {
	return o
}

func (o DashboardKpiVisualStandardLayoutTypeOutput) ToDashboardKpiVisualStandardLayoutTypePtrOutput() DashboardKpiVisualStandardLayoutTypePtrOutput {
	return o.ToDashboardKpiVisualStandardLayoutTypePtrOutputWithContext(context.Background())
}

func (o DashboardKpiVisualStandardLayoutTypeOutput) ToDashboardKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) DashboardKpiVisualStandardLayoutTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardKpiVisualStandardLayoutType) *DashboardKpiVisualStandardLayoutType {
		return &v
	}).(DashboardKpiVisualStandardLayoutTypePtrOutput)
}

func (o DashboardKpiVisualStandardLayoutTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardKpiVisualStandardLayoutTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardKpiVisualStandardLayoutType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardKpiVisualStandardLayoutTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardKpiVisualStandardLayoutTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardKpiVisualStandardLayoutType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardKpiVisualStandardLayoutTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardKpiVisualStandardLayoutTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKpiVisualStandardLayoutType)(nil)).Elem()
}

func (o DashboardKpiVisualStandardLayoutTypePtrOutput) ToDashboardKpiVisualStandardLayoutTypePtrOutput() DashboardKpiVisualStandardLayoutTypePtrOutput {
	return o
}

func (o DashboardKpiVisualStandardLayoutTypePtrOutput) ToDashboardKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) DashboardKpiVisualStandardLayoutTypePtrOutput {
	return o
}

func (o DashboardKpiVisualStandardLayoutTypePtrOutput) Elem() DashboardKpiVisualStandardLayoutTypeOutput {
	return o.ApplyT(func(v *DashboardKpiVisualStandardLayoutType) DashboardKpiVisualStandardLayoutType {
		if v != nil {
			return *v
		}
		var ret DashboardKpiVisualStandardLayoutType
		return ret
	}).(DashboardKpiVisualStandardLayoutTypeOutput)
}

func (o DashboardKpiVisualStandardLayoutTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardKpiVisualStandardLayoutTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardKpiVisualStandardLayoutType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardKpiVisualStandardLayoutTypeInput is an input type that accepts values of the DashboardKpiVisualStandardLayoutType enum
// A concrete instance of `DashboardKpiVisualStandardLayoutTypeInput` can be one of the following:
//
//	DashboardKpiVisualStandardLayoutTypeClassic
//	DashboardKpiVisualStandardLayoutTypeVertical
type DashboardKpiVisualStandardLayoutTypeInput interface {
	pulumi.Input

	ToDashboardKpiVisualStandardLayoutTypeOutput() DashboardKpiVisualStandardLayoutTypeOutput
	ToDashboardKpiVisualStandardLayoutTypeOutputWithContext(context.Context) DashboardKpiVisualStandardLayoutTypeOutput
}

var dashboardKpiVisualStandardLayoutTypePtrType = reflect.TypeOf((**DashboardKpiVisualStandardLayoutType)(nil)).Elem()

type DashboardKpiVisualStandardLayoutTypePtrInput interface {
	pulumi.Input

	ToDashboardKpiVisualStandardLayoutTypePtrOutput() DashboardKpiVisualStandardLayoutTypePtrOutput
	ToDashboardKpiVisualStandardLayoutTypePtrOutputWithContext(context.Context) DashboardKpiVisualStandardLayoutTypePtrOutput
}

type dashboardKpiVisualStandardLayoutTypePtr string

func DashboardKpiVisualStandardLayoutTypePtr(v string) DashboardKpiVisualStandardLayoutTypePtrInput {
	return (*dashboardKpiVisualStandardLayoutTypePtr)(&v)
}

func (*dashboardKpiVisualStandardLayoutTypePtr) ElementType() reflect.Type {
	return dashboardKpiVisualStandardLayoutTypePtrType
}

func (in *dashboardKpiVisualStandardLayoutTypePtr) ToDashboardKpiVisualStandardLayoutTypePtrOutput() DashboardKpiVisualStandardLayoutTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardKpiVisualStandardLayoutTypePtrOutput)
}

func (in *dashboardKpiVisualStandardLayoutTypePtr) ToDashboardKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) DashboardKpiVisualStandardLayoutTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardKpiVisualStandardLayoutTypePtrOutput)
}

type DashboardLayoutElementType string

const (
	DashboardLayoutElementTypeVisual           = DashboardLayoutElementType("VISUAL")
	DashboardLayoutElementTypeFilterControl    = DashboardLayoutElementType("FILTER_CONTROL")
	DashboardLayoutElementTypeParameterControl = DashboardLayoutElementType("PARAMETER_CONTROL")
	DashboardLayoutElementTypeTextBox          = DashboardLayoutElementType("TEXT_BOX")
)

func (DashboardLayoutElementType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutElementType)(nil)).Elem()
}

func (e DashboardLayoutElementType) ToDashboardLayoutElementTypeOutput() DashboardLayoutElementTypeOutput {
	return pulumi.ToOutput(e).(DashboardLayoutElementTypeOutput)
}

func (e DashboardLayoutElementType) ToDashboardLayoutElementTypeOutputWithContext(ctx context.Context) DashboardLayoutElementTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardLayoutElementTypeOutput)
}

func (e DashboardLayoutElementType) ToDashboardLayoutElementTypePtrOutput() DashboardLayoutElementTypePtrOutput {
	return e.ToDashboardLayoutElementTypePtrOutputWithContext(context.Background())
}

func (e DashboardLayoutElementType) ToDashboardLayoutElementTypePtrOutputWithContext(ctx context.Context) DashboardLayoutElementTypePtrOutput {
	return DashboardLayoutElementType(e).ToDashboardLayoutElementTypeOutputWithContext(ctx).ToDashboardLayoutElementTypePtrOutputWithContext(ctx)
}

func (e DashboardLayoutElementType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLayoutElementType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLayoutElementType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardLayoutElementType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardLayoutElementTypeOutput struct{ *pulumi.OutputState }

func (DashboardLayoutElementTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutElementType)(nil)).Elem()
}

func (o DashboardLayoutElementTypeOutput) ToDashboardLayoutElementTypeOutput() DashboardLayoutElementTypeOutput {
	return o
}

func (o DashboardLayoutElementTypeOutput) ToDashboardLayoutElementTypeOutputWithContext(ctx context.Context) DashboardLayoutElementTypeOutput {
	return o
}

func (o DashboardLayoutElementTypeOutput) ToDashboardLayoutElementTypePtrOutput() DashboardLayoutElementTypePtrOutput {
	return o.ToDashboardLayoutElementTypePtrOutputWithContext(context.Background())
}

func (o DashboardLayoutElementTypeOutput) ToDashboardLayoutElementTypePtrOutputWithContext(ctx context.Context) DashboardLayoutElementTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLayoutElementType) *DashboardLayoutElementType {
		return &v
	}).(DashboardLayoutElementTypePtrOutput)
}

func (o DashboardLayoutElementTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardLayoutElementTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLayoutElementType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardLayoutElementTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLayoutElementTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLayoutElementType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardLayoutElementTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardLayoutElementTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLayoutElementType)(nil)).Elem()
}

func (o DashboardLayoutElementTypePtrOutput) ToDashboardLayoutElementTypePtrOutput() DashboardLayoutElementTypePtrOutput {
	return o
}

func (o DashboardLayoutElementTypePtrOutput) ToDashboardLayoutElementTypePtrOutputWithContext(ctx context.Context) DashboardLayoutElementTypePtrOutput {
	return o
}

func (o DashboardLayoutElementTypePtrOutput) Elem() DashboardLayoutElementTypeOutput {
	return o.ApplyT(func(v *DashboardLayoutElementType) DashboardLayoutElementType {
		if v != nil {
			return *v
		}
		var ret DashboardLayoutElementType
		return ret
	}).(DashboardLayoutElementTypeOutput)
}

func (o DashboardLayoutElementTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLayoutElementTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardLayoutElementType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardLayoutElementTypeInput is an input type that accepts values of the DashboardLayoutElementType enum
// A concrete instance of `DashboardLayoutElementTypeInput` can be one of the following:
//
//	DashboardLayoutElementTypeVisual
//	DashboardLayoutElementTypeFilterControl
//	DashboardLayoutElementTypeParameterControl
//	DashboardLayoutElementTypeTextBox
type DashboardLayoutElementTypeInput interface {
	pulumi.Input

	ToDashboardLayoutElementTypeOutput() DashboardLayoutElementTypeOutput
	ToDashboardLayoutElementTypeOutputWithContext(context.Context) DashboardLayoutElementTypeOutput
}

var dashboardLayoutElementTypePtrType = reflect.TypeOf((**DashboardLayoutElementType)(nil)).Elem()

type DashboardLayoutElementTypePtrInput interface {
	pulumi.Input

	ToDashboardLayoutElementTypePtrOutput() DashboardLayoutElementTypePtrOutput
	ToDashboardLayoutElementTypePtrOutputWithContext(context.Context) DashboardLayoutElementTypePtrOutput
}

type dashboardLayoutElementTypePtr string

func DashboardLayoutElementTypePtr(v string) DashboardLayoutElementTypePtrInput {
	return (*dashboardLayoutElementTypePtr)(&v)
}

func (*dashboardLayoutElementTypePtr) ElementType() reflect.Type {
	return dashboardLayoutElementTypePtrType
}

func (in *dashboardLayoutElementTypePtr) ToDashboardLayoutElementTypePtrOutput() DashboardLayoutElementTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardLayoutElementTypePtrOutput)
}

func (in *dashboardLayoutElementTypePtr) ToDashboardLayoutElementTypePtrOutputWithContext(ctx context.Context) DashboardLayoutElementTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardLayoutElementTypePtrOutput)
}

type DashboardLegendPosition string

const (
	DashboardLegendPositionAuto   = DashboardLegendPosition("AUTO")
	DashboardLegendPositionRight  = DashboardLegendPosition("RIGHT")
	DashboardLegendPositionBottom = DashboardLegendPosition("BOTTOM")
	DashboardLegendPositionTop    = DashboardLegendPosition("TOP")
)

func (DashboardLegendPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLegendPosition)(nil)).Elem()
}

func (e DashboardLegendPosition) ToDashboardLegendPositionOutput() DashboardLegendPositionOutput {
	return pulumi.ToOutput(e).(DashboardLegendPositionOutput)
}

func (e DashboardLegendPosition) ToDashboardLegendPositionOutputWithContext(ctx context.Context) DashboardLegendPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardLegendPositionOutput)
}

func (e DashboardLegendPosition) ToDashboardLegendPositionPtrOutput() DashboardLegendPositionPtrOutput {
	return e.ToDashboardLegendPositionPtrOutputWithContext(context.Background())
}

func (e DashboardLegendPosition) ToDashboardLegendPositionPtrOutputWithContext(ctx context.Context) DashboardLegendPositionPtrOutput {
	return DashboardLegendPosition(e).ToDashboardLegendPositionOutputWithContext(ctx).ToDashboardLegendPositionPtrOutputWithContext(ctx)
}

func (e DashboardLegendPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLegendPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLegendPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardLegendPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardLegendPositionOutput struct{ *pulumi.OutputState }

func (DashboardLegendPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLegendPosition)(nil)).Elem()
}

func (o DashboardLegendPositionOutput) ToDashboardLegendPositionOutput() DashboardLegendPositionOutput {
	return o
}

func (o DashboardLegendPositionOutput) ToDashboardLegendPositionOutputWithContext(ctx context.Context) DashboardLegendPositionOutput {
	return o
}

func (o DashboardLegendPositionOutput) ToDashboardLegendPositionPtrOutput() DashboardLegendPositionPtrOutput {
	return o.ToDashboardLegendPositionPtrOutputWithContext(context.Background())
}

func (o DashboardLegendPositionOutput) ToDashboardLegendPositionPtrOutputWithContext(ctx context.Context) DashboardLegendPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLegendPosition) *DashboardLegendPosition {
		return &v
	}).(DashboardLegendPositionPtrOutput)
}

func (o DashboardLegendPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardLegendPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLegendPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardLegendPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLegendPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLegendPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardLegendPositionPtrOutput struct{ *pulumi.OutputState }

func (DashboardLegendPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLegendPosition)(nil)).Elem()
}

func (o DashboardLegendPositionPtrOutput) ToDashboardLegendPositionPtrOutput() DashboardLegendPositionPtrOutput {
	return o
}

func (o DashboardLegendPositionPtrOutput) ToDashboardLegendPositionPtrOutputWithContext(ctx context.Context) DashboardLegendPositionPtrOutput {
	return o
}

func (o DashboardLegendPositionPtrOutput) Elem() DashboardLegendPositionOutput {
	return o.ApplyT(func(v *DashboardLegendPosition) DashboardLegendPosition {
		if v != nil {
			return *v
		}
		var ret DashboardLegendPosition
		return ret
	}).(DashboardLegendPositionOutput)
}

func (o DashboardLegendPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLegendPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardLegendPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardLegendPositionInput is an input type that accepts values of the DashboardLegendPosition enum
// A concrete instance of `DashboardLegendPositionInput` can be one of the following:
//
//	DashboardLegendPositionAuto
//	DashboardLegendPositionRight
//	DashboardLegendPositionBottom
//	DashboardLegendPositionTop
type DashboardLegendPositionInput interface {
	pulumi.Input

	ToDashboardLegendPositionOutput() DashboardLegendPositionOutput
	ToDashboardLegendPositionOutputWithContext(context.Context) DashboardLegendPositionOutput
}

var dashboardLegendPositionPtrType = reflect.TypeOf((**DashboardLegendPosition)(nil)).Elem()

type DashboardLegendPositionPtrInput interface {
	pulumi.Input

	ToDashboardLegendPositionPtrOutput() DashboardLegendPositionPtrOutput
	ToDashboardLegendPositionPtrOutputWithContext(context.Context) DashboardLegendPositionPtrOutput
}

type dashboardLegendPositionPtr string

func DashboardLegendPositionPtr(v string) DashboardLegendPositionPtrInput {
	return (*dashboardLegendPositionPtr)(&v)
}

func (*dashboardLegendPositionPtr) ElementType() reflect.Type {
	return dashboardLegendPositionPtrType
}

func (in *dashboardLegendPositionPtr) ToDashboardLegendPositionPtrOutput() DashboardLegendPositionPtrOutput {
	return pulumi.ToOutput(in).(DashboardLegendPositionPtrOutput)
}

func (in *dashboardLegendPositionPtr) ToDashboardLegendPositionPtrOutputWithContext(ctx context.Context) DashboardLegendPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardLegendPositionPtrOutput)
}

type DashboardLineChartLineStyle string

const (
	DashboardLineChartLineStyleSolid  = DashboardLineChartLineStyle("SOLID")
	DashboardLineChartLineStyleDotted = DashboardLineChartLineStyle("DOTTED")
	DashboardLineChartLineStyleDashed = DashboardLineChartLineStyle("DASHED")
)

func (DashboardLineChartLineStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartLineStyle)(nil)).Elem()
}

func (e DashboardLineChartLineStyle) ToDashboardLineChartLineStyleOutput() DashboardLineChartLineStyleOutput {
	return pulumi.ToOutput(e).(DashboardLineChartLineStyleOutput)
}

func (e DashboardLineChartLineStyle) ToDashboardLineChartLineStyleOutputWithContext(ctx context.Context) DashboardLineChartLineStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardLineChartLineStyleOutput)
}

func (e DashboardLineChartLineStyle) ToDashboardLineChartLineStylePtrOutput() DashboardLineChartLineStylePtrOutput {
	return e.ToDashboardLineChartLineStylePtrOutputWithContext(context.Background())
}

func (e DashboardLineChartLineStyle) ToDashboardLineChartLineStylePtrOutputWithContext(ctx context.Context) DashboardLineChartLineStylePtrOutput {
	return DashboardLineChartLineStyle(e).ToDashboardLineChartLineStyleOutputWithContext(ctx).ToDashboardLineChartLineStylePtrOutputWithContext(ctx)
}

func (e DashboardLineChartLineStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLineChartLineStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLineChartLineStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardLineChartLineStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardLineChartLineStyleOutput struct{ *pulumi.OutputState }

func (DashboardLineChartLineStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartLineStyle)(nil)).Elem()
}

func (o DashboardLineChartLineStyleOutput) ToDashboardLineChartLineStyleOutput() DashboardLineChartLineStyleOutput {
	return o
}

func (o DashboardLineChartLineStyleOutput) ToDashboardLineChartLineStyleOutputWithContext(ctx context.Context) DashboardLineChartLineStyleOutput {
	return o
}

func (o DashboardLineChartLineStyleOutput) ToDashboardLineChartLineStylePtrOutput() DashboardLineChartLineStylePtrOutput {
	return o.ToDashboardLineChartLineStylePtrOutputWithContext(context.Background())
}

func (o DashboardLineChartLineStyleOutput) ToDashboardLineChartLineStylePtrOutputWithContext(ctx context.Context) DashboardLineChartLineStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartLineStyle) *DashboardLineChartLineStyle {
		return &v
	}).(DashboardLineChartLineStylePtrOutput)
}

func (o DashboardLineChartLineStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardLineChartLineStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLineChartLineStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardLineChartLineStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartLineStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLineChartLineStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardLineChartLineStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartLineStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartLineStyle)(nil)).Elem()
}

func (o DashboardLineChartLineStylePtrOutput) ToDashboardLineChartLineStylePtrOutput() DashboardLineChartLineStylePtrOutput {
	return o
}

func (o DashboardLineChartLineStylePtrOutput) ToDashboardLineChartLineStylePtrOutputWithContext(ctx context.Context) DashboardLineChartLineStylePtrOutput {
	return o
}

func (o DashboardLineChartLineStylePtrOutput) Elem() DashboardLineChartLineStyleOutput {
	return o.ApplyT(func(v *DashboardLineChartLineStyle) DashboardLineChartLineStyle {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartLineStyle
		return ret
	}).(DashboardLineChartLineStyleOutput)
}

func (o DashboardLineChartLineStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartLineStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardLineChartLineStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardLineChartLineStyleInput is an input type that accepts values of the DashboardLineChartLineStyle enum
// A concrete instance of `DashboardLineChartLineStyleInput` can be one of the following:
//
//	DashboardLineChartLineStyleSolid
//	DashboardLineChartLineStyleDotted
//	DashboardLineChartLineStyleDashed
type DashboardLineChartLineStyleInput interface {
	pulumi.Input

	ToDashboardLineChartLineStyleOutput() DashboardLineChartLineStyleOutput
	ToDashboardLineChartLineStyleOutputWithContext(context.Context) DashboardLineChartLineStyleOutput
}

var dashboardLineChartLineStylePtrType = reflect.TypeOf((**DashboardLineChartLineStyle)(nil)).Elem()

type DashboardLineChartLineStylePtrInput interface {
	pulumi.Input

	ToDashboardLineChartLineStylePtrOutput() DashboardLineChartLineStylePtrOutput
	ToDashboardLineChartLineStylePtrOutputWithContext(context.Context) DashboardLineChartLineStylePtrOutput
}

type dashboardLineChartLineStylePtr string

func DashboardLineChartLineStylePtr(v string) DashboardLineChartLineStylePtrInput {
	return (*dashboardLineChartLineStylePtr)(&v)
}

func (*dashboardLineChartLineStylePtr) ElementType() reflect.Type {
	return dashboardLineChartLineStylePtrType
}

func (in *dashboardLineChartLineStylePtr) ToDashboardLineChartLineStylePtrOutput() DashboardLineChartLineStylePtrOutput {
	return pulumi.ToOutput(in).(DashboardLineChartLineStylePtrOutput)
}

func (in *dashboardLineChartLineStylePtr) ToDashboardLineChartLineStylePtrOutputWithContext(ctx context.Context) DashboardLineChartLineStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardLineChartLineStylePtrOutput)
}

type DashboardLineChartMarkerShape string

const (
	DashboardLineChartMarkerShapeCircle        = DashboardLineChartMarkerShape("CIRCLE")
	DashboardLineChartMarkerShapeTriangle      = DashboardLineChartMarkerShape("TRIANGLE")
	DashboardLineChartMarkerShapeSquare        = DashboardLineChartMarkerShape("SQUARE")
	DashboardLineChartMarkerShapeDiamond       = DashboardLineChartMarkerShape("DIAMOND")
	DashboardLineChartMarkerShapeRoundedSquare = DashboardLineChartMarkerShape("ROUNDED_SQUARE")
)

func (DashboardLineChartMarkerShape) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartMarkerShape)(nil)).Elem()
}

func (e DashboardLineChartMarkerShape) ToDashboardLineChartMarkerShapeOutput() DashboardLineChartMarkerShapeOutput {
	return pulumi.ToOutput(e).(DashboardLineChartMarkerShapeOutput)
}

func (e DashboardLineChartMarkerShape) ToDashboardLineChartMarkerShapeOutputWithContext(ctx context.Context) DashboardLineChartMarkerShapeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardLineChartMarkerShapeOutput)
}

func (e DashboardLineChartMarkerShape) ToDashboardLineChartMarkerShapePtrOutput() DashboardLineChartMarkerShapePtrOutput {
	return e.ToDashboardLineChartMarkerShapePtrOutputWithContext(context.Background())
}

func (e DashboardLineChartMarkerShape) ToDashboardLineChartMarkerShapePtrOutputWithContext(ctx context.Context) DashboardLineChartMarkerShapePtrOutput {
	return DashboardLineChartMarkerShape(e).ToDashboardLineChartMarkerShapeOutputWithContext(ctx).ToDashboardLineChartMarkerShapePtrOutputWithContext(ctx)
}

func (e DashboardLineChartMarkerShape) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLineChartMarkerShape) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLineChartMarkerShape) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardLineChartMarkerShape) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardLineChartMarkerShapeOutput struct{ *pulumi.OutputState }

func (DashboardLineChartMarkerShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartMarkerShape)(nil)).Elem()
}

func (o DashboardLineChartMarkerShapeOutput) ToDashboardLineChartMarkerShapeOutput() DashboardLineChartMarkerShapeOutput {
	return o
}

func (o DashboardLineChartMarkerShapeOutput) ToDashboardLineChartMarkerShapeOutputWithContext(ctx context.Context) DashboardLineChartMarkerShapeOutput {
	return o
}

func (o DashboardLineChartMarkerShapeOutput) ToDashboardLineChartMarkerShapePtrOutput() DashboardLineChartMarkerShapePtrOutput {
	return o.ToDashboardLineChartMarkerShapePtrOutputWithContext(context.Background())
}

func (o DashboardLineChartMarkerShapeOutput) ToDashboardLineChartMarkerShapePtrOutputWithContext(ctx context.Context) DashboardLineChartMarkerShapePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartMarkerShape) *DashboardLineChartMarkerShape {
		return &v
	}).(DashboardLineChartMarkerShapePtrOutput)
}

func (o DashboardLineChartMarkerShapeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardLineChartMarkerShapeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLineChartMarkerShape) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardLineChartMarkerShapeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartMarkerShapeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLineChartMarkerShape) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardLineChartMarkerShapePtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartMarkerShapePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartMarkerShape)(nil)).Elem()
}

func (o DashboardLineChartMarkerShapePtrOutput) ToDashboardLineChartMarkerShapePtrOutput() DashboardLineChartMarkerShapePtrOutput {
	return o
}

func (o DashboardLineChartMarkerShapePtrOutput) ToDashboardLineChartMarkerShapePtrOutputWithContext(ctx context.Context) DashboardLineChartMarkerShapePtrOutput {
	return o
}

func (o DashboardLineChartMarkerShapePtrOutput) Elem() DashboardLineChartMarkerShapeOutput {
	return o.ApplyT(func(v *DashboardLineChartMarkerShape) DashboardLineChartMarkerShape {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartMarkerShape
		return ret
	}).(DashboardLineChartMarkerShapeOutput)
}

func (o DashboardLineChartMarkerShapePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartMarkerShapePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardLineChartMarkerShape) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardLineChartMarkerShapeInput is an input type that accepts values of the DashboardLineChartMarkerShape enum
// A concrete instance of `DashboardLineChartMarkerShapeInput` can be one of the following:
//
//	DashboardLineChartMarkerShapeCircle
//	DashboardLineChartMarkerShapeTriangle
//	DashboardLineChartMarkerShapeSquare
//	DashboardLineChartMarkerShapeDiamond
//	DashboardLineChartMarkerShapeRoundedSquare
type DashboardLineChartMarkerShapeInput interface {
	pulumi.Input

	ToDashboardLineChartMarkerShapeOutput() DashboardLineChartMarkerShapeOutput
	ToDashboardLineChartMarkerShapeOutputWithContext(context.Context) DashboardLineChartMarkerShapeOutput
}

var dashboardLineChartMarkerShapePtrType = reflect.TypeOf((**DashboardLineChartMarkerShape)(nil)).Elem()

type DashboardLineChartMarkerShapePtrInput interface {
	pulumi.Input

	ToDashboardLineChartMarkerShapePtrOutput() DashboardLineChartMarkerShapePtrOutput
	ToDashboardLineChartMarkerShapePtrOutputWithContext(context.Context) DashboardLineChartMarkerShapePtrOutput
}

type dashboardLineChartMarkerShapePtr string

func DashboardLineChartMarkerShapePtr(v string) DashboardLineChartMarkerShapePtrInput {
	return (*dashboardLineChartMarkerShapePtr)(&v)
}

func (*dashboardLineChartMarkerShapePtr) ElementType() reflect.Type {
	return dashboardLineChartMarkerShapePtrType
}

func (in *dashboardLineChartMarkerShapePtr) ToDashboardLineChartMarkerShapePtrOutput() DashboardLineChartMarkerShapePtrOutput {
	return pulumi.ToOutput(in).(DashboardLineChartMarkerShapePtrOutput)
}

func (in *dashboardLineChartMarkerShapePtr) ToDashboardLineChartMarkerShapePtrOutputWithContext(ctx context.Context) DashboardLineChartMarkerShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardLineChartMarkerShapePtrOutput)
}

type DashboardLineChartType string

const (
	DashboardLineChartTypeLine        = DashboardLineChartType("LINE")
	DashboardLineChartTypeArea        = DashboardLineChartType("AREA")
	DashboardLineChartTypeStackedArea = DashboardLineChartType("STACKED_AREA")
)

func (DashboardLineChartType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartType)(nil)).Elem()
}

func (e DashboardLineChartType) ToDashboardLineChartTypeOutput() DashboardLineChartTypeOutput {
	return pulumi.ToOutput(e).(DashboardLineChartTypeOutput)
}

func (e DashboardLineChartType) ToDashboardLineChartTypeOutputWithContext(ctx context.Context) DashboardLineChartTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardLineChartTypeOutput)
}

func (e DashboardLineChartType) ToDashboardLineChartTypePtrOutput() DashboardLineChartTypePtrOutput {
	return e.ToDashboardLineChartTypePtrOutputWithContext(context.Background())
}

func (e DashboardLineChartType) ToDashboardLineChartTypePtrOutputWithContext(ctx context.Context) DashboardLineChartTypePtrOutput {
	return DashboardLineChartType(e).ToDashboardLineChartTypeOutputWithContext(ctx).ToDashboardLineChartTypePtrOutputWithContext(ctx)
}

func (e DashboardLineChartType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLineChartType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLineChartType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardLineChartType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardLineChartTypeOutput struct{ *pulumi.OutputState }

func (DashboardLineChartTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartType)(nil)).Elem()
}

func (o DashboardLineChartTypeOutput) ToDashboardLineChartTypeOutput() DashboardLineChartTypeOutput {
	return o
}

func (o DashboardLineChartTypeOutput) ToDashboardLineChartTypeOutputWithContext(ctx context.Context) DashboardLineChartTypeOutput {
	return o
}

func (o DashboardLineChartTypeOutput) ToDashboardLineChartTypePtrOutput() DashboardLineChartTypePtrOutput {
	return o.ToDashboardLineChartTypePtrOutputWithContext(context.Background())
}

func (o DashboardLineChartTypeOutput) ToDashboardLineChartTypePtrOutputWithContext(ctx context.Context) DashboardLineChartTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartType) *DashboardLineChartType {
		return &v
	}).(DashboardLineChartTypePtrOutput)
}

func (o DashboardLineChartTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardLineChartTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLineChartType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardLineChartTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLineChartType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardLineChartTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartType)(nil)).Elem()
}

func (o DashboardLineChartTypePtrOutput) ToDashboardLineChartTypePtrOutput() DashboardLineChartTypePtrOutput {
	return o
}

func (o DashboardLineChartTypePtrOutput) ToDashboardLineChartTypePtrOutputWithContext(ctx context.Context) DashboardLineChartTypePtrOutput {
	return o
}

func (o DashboardLineChartTypePtrOutput) Elem() DashboardLineChartTypeOutput {
	return o.ApplyT(func(v *DashboardLineChartType) DashboardLineChartType {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartType
		return ret
	}).(DashboardLineChartTypeOutput)
}

func (o DashboardLineChartTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardLineChartType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardLineChartTypeInput is an input type that accepts values of the DashboardLineChartType enum
// A concrete instance of `DashboardLineChartTypeInput` can be one of the following:
//
//	DashboardLineChartTypeLine
//	DashboardLineChartTypeArea
//	DashboardLineChartTypeStackedArea
type DashboardLineChartTypeInput interface {
	pulumi.Input

	ToDashboardLineChartTypeOutput() DashboardLineChartTypeOutput
	ToDashboardLineChartTypeOutputWithContext(context.Context) DashboardLineChartTypeOutput
}

var dashboardLineChartTypePtrType = reflect.TypeOf((**DashboardLineChartType)(nil)).Elem()

type DashboardLineChartTypePtrInput interface {
	pulumi.Input

	ToDashboardLineChartTypePtrOutput() DashboardLineChartTypePtrOutput
	ToDashboardLineChartTypePtrOutputWithContext(context.Context) DashboardLineChartTypePtrOutput
}

type dashboardLineChartTypePtr string

func DashboardLineChartTypePtr(v string) DashboardLineChartTypePtrInput {
	return (*dashboardLineChartTypePtr)(&v)
}

func (*dashboardLineChartTypePtr) ElementType() reflect.Type {
	return dashboardLineChartTypePtrType
}

func (in *dashboardLineChartTypePtr) ToDashboardLineChartTypePtrOutput() DashboardLineChartTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardLineChartTypePtrOutput)
}

func (in *dashboardLineChartTypePtr) ToDashboardLineChartTypePtrOutputWithContext(ctx context.Context) DashboardLineChartTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardLineChartTypePtrOutput)
}

type DashboardLineInterpolation string

const (
	DashboardLineInterpolationLinear  = DashboardLineInterpolation("LINEAR")
	DashboardLineInterpolationSmooth  = DashboardLineInterpolation("SMOOTH")
	DashboardLineInterpolationStepped = DashboardLineInterpolation("STEPPED")
)

func (DashboardLineInterpolation) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineInterpolation)(nil)).Elem()
}

func (e DashboardLineInterpolation) ToDashboardLineInterpolationOutput() DashboardLineInterpolationOutput {
	return pulumi.ToOutput(e).(DashboardLineInterpolationOutput)
}

func (e DashboardLineInterpolation) ToDashboardLineInterpolationOutputWithContext(ctx context.Context) DashboardLineInterpolationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardLineInterpolationOutput)
}

func (e DashboardLineInterpolation) ToDashboardLineInterpolationPtrOutput() DashboardLineInterpolationPtrOutput {
	return e.ToDashboardLineInterpolationPtrOutputWithContext(context.Background())
}

func (e DashboardLineInterpolation) ToDashboardLineInterpolationPtrOutputWithContext(ctx context.Context) DashboardLineInterpolationPtrOutput {
	return DashboardLineInterpolation(e).ToDashboardLineInterpolationOutputWithContext(ctx).ToDashboardLineInterpolationPtrOutputWithContext(ctx)
}

func (e DashboardLineInterpolation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLineInterpolation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardLineInterpolation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardLineInterpolation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardLineInterpolationOutput struct{ *pulumi.OutputState }

func (DashboardLineInterpolationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineInterpolation)(nil)).Elem()
}

func (o DashboardLineInterpolationOutput) ToDashboardLineInterpolationOutput() DashboardLineInterpolationOutput {
	return o
}

func (o DashboardLineInterpolationOutput) ToDashboardLineInterpolationOutputWithContext(ctx context.Context) DashboardLineInterpolationOutput {
	return o
}

func (o DashboardLineInterpolationOutput) ToDashboardLineInterpolationPtrOutput() DashboardLineInterpolationPtrOutput {
	return o.ToDashboardLineInterpolationPtrOutputWithContext(context.Background())
}

func (o DashboardLineInterpolationOutput) ToDashboardLineInterpolationPtrOutputWithContext(ctx context.Context) DashboardLineInterpolationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineInterpolation) *DashboardLineInterpolation {
		return &v
	}).(DashboardLineInterpolationPtrOutput)
}

func (o DashboardLineInterpolationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardLineInterpolationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLineInterpolation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardLineInterpolationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLineInterpolationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardLineInterpolation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardLineInterpolationPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineInterpolationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineInterpolation)(nil)).Elem()
}

func (o DashboardLineInterpolationPtrOutput) ToDashboardLineInterpolationPtrOutput() DashboardLineInterpolationPtrOutput {
	return o
}

func (o DashboardLineInterpolationPtrOutput) ToDashboardLineInterpolationPtrOutputWithContext(ctx context.Context) DashboardLineInterpolationPtrOutput {
	return o
}

func (o DashboardLineInterpolationPtrOutput) Elem() DashboardLineInterpolationOutput {
	return o.ApplyT(func(v *DashboardLineInterpolation) DashboardLineInterpolation {
		if v != nil {
			return *v
		}
		var ret DashboardLineInterpolation
		return ret
	}).(DashboardLineInterpolationOutput)
}

func (o DashboardLineInterpolationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardLineInterpolationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardLineInterpolation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardLineInterpolationInput is an input type that accepts values of the DashboardLineInterpolation enum
// A concrete instance of `DashboardLineInterpolationInput` can be one of the following:
//
//	DashboardLineInterpolationLinear
//	DashboardLineInterpolationSmooth
//	DashboardLineInterpolationStepped
type DashboardLineInterpolationInput interface {
	pulumi.Input

	ToDashboardLineInterpolationOutput() DashboardLineInterpolationOutput
	ToDashboardLineInterpolationOutputWithContext(context.Context) DashboardLineInterpolationOutput
}

var dashboardLineInterpolationPtrType = reflect.TypeOf((**DashboardLineInterpolation)(nil)).Elem()

type DashboardLineInterpolationPtrInput interface {
	pulumi.Input

	ToDashboardLineInterpolationPtrOutput() DashboardLineInterpolationPtrOutput
	ToDashboardLineInterpolationPtrOutputWithContext(context.Context) DashboardLineInterpolationPtrOutput
}

type dashboardLineInterpolationPtr string

func DashboardLineInterpolationPtr(v string) DashboardLineInterpolationPtrInput {
	return (*dashboardLineInterpolationPtr)(&v)
}

func (*dashboardLineInterpolationPtr) ElementType() reflect.Type {
	return dashboardLineInterpolationPtrType
}

func (in *dashboardLineInterpolationPtr) ToDashboardLineInterpolationPtrOutput() DashboardLineInterpolationPtrOutput {
	return pulumi.ToOutput(in).(DashboardLineInterpolationPtrOutput)
}

func (in *dashboardLineInterpolationPtr) ToDashboardLineInterpolationPtrOutputWithContext(ctx context.Context) DashboardLineInterpolationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardLineInterpolationPtrOutput)
}

type DashboardMapZoomMode string

const (
	DashboardMapZoomModeAuto   = DashboardMapZoomMode("AUTO")
	DashboardMapZoomModeManual = DashboardMapZoomMode("MANUAL")
)

func (DashboardMapZoomMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMapZoomMode)(nil)).Elem()
}

func (e DashboardMapZoomMode) ToDashboardMapZoomModeOutput() DashboardMapZoomModeOutput {
	return pulumi.ToOutput(e).(DashboardMapZoomModeOutput)
}

func (e DashboardMapZoomMode) ToDashboardMapZoomModeOutputWithContext(ctx context.Context) DashboardMapZoomModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardMapZoomModeOutput)
}

func (e DashboardMapZoomMode) ToDashboardMapZoomModePtrOutput() DashboardMapZoomModePtrOutput {
	return e.ToDashboardMapZoomModePtrOutputWithContext(context.Background())
}

func (e DashboardMapZoomMode) ToDashboardMapZoomModePtrOutputWithContext(ctx context.Context) DashboardMapZoomModePtrOutput {
	return DashboardMapZoomMode(e).ToDashboardMapZoomModeOutputWithContext(ctx).ToDashboardMapZoomModePtrOutputWithContext(ctx)
}

func (e DashboardMapZoomMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardMapZoomMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardMapZoomMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardMapZoomMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardMapZoomModeOutput struct{ *pulumi.OutputState }

func (DashboardMapZoomModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMapZoomMode)(nil)).Elem()
}

func (o DashboardMapZoomModeOutput) ToDashboardMapZoomModeOutput() DashboardMapZoomModeOutput {
	return o
}

func (o DashboardMapZoomModeOutput) ToDashboardMapZoomModeOutputWithContext(ctx context.Context) DashboardMapZoomModeOutput {
	return o
}

func (o DashboardMapZoomModeOutput) ToDashboardMapZoomModePtrOutput() DashboardMapZoomModePtrOutput {
	return o.ToDashboardMapZoomModePtrOutputWithContext(context.Background())
}

func (o DashboardMapZoomModeOutput) ToDashboardMapZoomModePtrOutputWithContext(ctx context.Context) DashboardMapZoomModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardMapZoomMode) *DashboardMapZoomMode {
		return &v
	}).(DashboardMapZoomModePtrOutput)
}

func (o DashboardMapZoomModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardMapZoomModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardMapZoomMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardMapZoomModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardMapZoomModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardMapZoomMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardMapZoomModePtrOutput struct{ *pulumi.OutputState }

func (DashboardMapZoomModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMapZoomMode)(nil)).Elem()
}

func (o DashboardMapZoomModePtrOutput) ToDashboardMapZoomModePtrOutput() DashboardMapZoomModePtrOutput {
	return o
}

func (o DashboardMapZoomModePtrOutput) ToDashboardMapZoomModePtrOutputWithContext(ctx context.Context) DashboardMapZoomModePtrOutput {
	return o
}

func (o DashboardMapZoomModePtrOutput) Elem() DashboardMapZoomModeOutput {
	return o.ApplyT(func(v *DashboardMapZoomMode) DashboardMapZoomMode {
		if v != nil {
			return *v
		}
		var ret DashboardMapZoomMode
		return ret
	}).(DashboardMapZoomModeOutput)
}

func (o DashboardMapZoomModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardMapZoomModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardMapZoomMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardMapZoomModeInput is an input type that accepts values of the DashboardMapZoomMode enum
// A concrete instance of `DashboardMapZoomModeInput` can be one of the following:
//
//	DashboardMapZoomModeAuto
//	DashboardMapZoomModeManual
type DashboardMapZoomModeInput interface {
	pulumi.Input

	ToDashboardMapZoomModeOutput() DashboardMapZoomModeOutput
	ToDashboardMapZoomModeOutputWithContext(context.Context) DashboardMapZoomModeOutput
}

var dashboardMapZoomModePtrType = reflect.TypeOf((**DashboardMapZoomMode)(nil)).Elem()

type DashboardMapZoomModePtrInput interface {
	pulumi.Input

	ToDashboardMapZoomModePtrOutput() DashboardMapZoomModePtrOutput
	ToDashboardMapZoomModePtrOutputWithContext(context.Context) DashboardMapZoomModePtrOutput
}

type dashboardMapZoomModePtr string

func DashboardMapZoomModePtr(v string) DashboardMapZoomModePtrInput {
	return (*dashboardMapZoomModePtr)(&v)
}

func (*dashboardMapZoomModePtr) ElementType() reflect.Type {
	return dashboardMapZoomModePtrType
}

func (in *dashboardMapZoomModePtr) ToDashboardMapZoomModePtrOutput() DashboardMapZoomModePtrOutput {
	return pulumi.ToOutput(in).(DashboardMapZoomModePtrOutput)
}

func (in *dashboardMapZoomModePtr) ToDashboardMapZoomModePtrOutputWithContext(ctx context.Context) DashboardMapZoomModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardMapZoomModePtrOutput)
}

type DashboardMaximumMinimumComputationType string

const (
	DashboardMaximumMinimumComputationTypeMaximum = DashboardMaximumMinimumComputationType("MAXIMUM")
	DashboardMaximumMinimumComputationTypeMinimum = DashboardMaximumMinimumComputationType("MINIMUM")
)

func (DashboardMaximumMinimumComputationType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMaximumMinimumComputationType)(nil)).Elem()
}

func (e DashboardMaximumMinimumComputationType) ToDashboardMaximumMinimumComputationTypeOutput() DashboardMaximumMinimumComputationTypeOutput {
	return pulumi.ToOutput(e).(DashboardMaximumMinimumComputationTypeOutput)
}

func (e DashboardMaximumMinimumComputationType) ToDashboardMaximumMinimumComputationTypeOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardMaximumMinimumComputationTypeOutput)
}

func (e DashboardMaximumMinimumComputationType) ToDashboardMaximumMinimumComputationTypePtrOutput() DashboardMaximumMinimumComputationTypePtrOutput {
	return e.ToDashboardMaximumMinimumComputationTypePtrOutputWithContext(context.Background())
}

func (e DashboardMaximumMinimumComputationType) ToDashboardMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationTypePtrOutput {
	return DashboardMaximumMinimumComputationType(e).ToDashboardMaximumMinimumComputationTypeOutputWithContext(ctx).ToDashboardMaximumMinimumComputationTypePtrOutputWithContext(ctx)
}

func (e DashboardMaximumMinimumComputationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardMaximumMinimumComputationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardMaximumMinimumComputationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardMaximumMinimumComputationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardMaximumMinimumComputationTypeOutput struct{ *pulumi.OutputState }

func (DashboardMaximumMinimumComputationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMaximumMinimumComputationType)(nil)).Elem()
}

func (o DashboardMaximumMinimumComputationTypeOutput) ToDashboardMaximumMinimumComputationTypeOutput() DashboardMaximumMinimumComputationTypeOutput {
	return o
}

func (o DashboardMaximumMinimumComputationTypeOutput) ToDashboardMaximumMinimumComputationTypeOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationTypeOutput {
	return o
}

func (o DashboardMaximumMinimumComputationTypeOutput) ToDashboardMaximumMinimumComputationTypePtrOutput() DashboardMaximumMinimumComputationTypePtrOutput {
	return o.ToDashboardMaximumMinimumComputationTypePtrOutputWithContext(context.Background())
}

func (o DashboardMaximumMinimumComputationTypeOutput) ToDashboardMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardMaximumMinimumComputationType) *DashboardMaximumMinimumComputationType {
		return &v
	}).(DashboardMaximumMinimumComputationTypePtrOutput)
}

func (o DashboardMaximumMinimumComputationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardMaximumMinimumComputationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardMaximumMinimumComputationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardMaximumMinimumComputationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardMaximumMinimumComputationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardMaximumMinimumComputationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardMaximumMinimumComputationTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardMaximumMinimumComputationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMaximumMinimumComputationType)(nil)).Elem()
}

func (o DashboardMaximumMinimumComputationTypePtrOutput) ToDashboardMaximumMinimumComputationTypePtrOutput() DashboardMaximumMinimumComputationTypePtrOutput {
	return o
}

func (o DashboardMaximumMinimumComputationTypePtrOutput) ToDashboardMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationTypePtrOutput {
	return o
}

func (o DashboardMaximumMinimumComputationTypePtrOutput) Elem() DashboardMaximumMinimumComputationTypeOutput {
	return o.ApplyT(func(v *DashboardMaximumMinimumComputationType) DashboardMaximumMinimumComputationType {
		if v != nil {
			return *v
		}
		var ret DashboardMaximumMinimumComputationType
		return ret
	}).(DashboardMaximumMinimumComputationTypeOutput)
}

func (o DashboardMaximumMinimumComputationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardMaximumMinimumComputationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardMaximumMinimumComputationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardMaximumMinimumComputationTypeInput is an input type that accepts values of the DashboardMaximumMinimumComputationType enum
// A concrete instance of `DashboardMaximumMinimumComputationTypeInput` can be one of the following:
//
//	DashboardMaximumMinimumComputationTypeMaximum
//	DashboardMaximumMinimumComputationTypeMinimum
type DashboardMaximumMinimumComputationTypeInput interface {
	pulumi.Input

	ToDashboardMaximumMinimumComputationTypeOutput() DashboardMaximumMinimumComputationTypeOutput
	ToDashboardMaximumMinimumComputationTypeOutputWithContext(context.Context) DashboardMaximumMinimumComputationTypeOutput
}

var dashboardMaximumMinimumComputationTypePtrType = reflect.TypeOf((**DashboardMaximumMinimumComputationType)(nil)).Elem()

type DashboardMaximumMinimumComputationTypePtrInput interface {
	pulumi.Input

	ToDashboardMaximumMinimumComputationTypePtrOutput() DashboardMaximumMinimumComputationTypePtrOutput
	ToDashboardMaximumMinimumComputationTypePtrOutputWithContext(context.Context) DashboardMaximumMinimumComputationTypePtrOutput
}

type dashboardMaximumMinimumComputationTypePtr string

func DashboardMaximumMinimumComputationTypePtr(v string) DashboardMaximumMinimumComputationTypePtrInput {
	return (*dashboardMaximumMinimumComputationTypePtr)(&v)
}

func (*dashboardMaximumMinimumComputationTypePtr) ElementType() reflect.Type {
	return dashboardMaximumMinimumComputationTypePtrType
}

func (in *dashboardMaximumMinimumComputationTypePtr) ToDashboardMaximumMinimumComputationTypePtrOutput() DashboardMaximumMinimumComputationTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardMaximumMinimumComputationTypePtrOutput)
}

func (in *dashboardMaximumMinimumComputationTypePtr) ToDashboardMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardMaximumMinimumComputationTypePtrOutput)
}

type DashboardMissingDataTreatmentOption string

const (
	DashboardMissingDataTreatmentOptionInterpolate = DashboardMissingDataTreatmentOption("INTERPOLATE")
	DashboardMissingDataTreatmentOptionShowAsZero  = DashboardMissingDataTreatmentOption("SHOW_AS_ZERO")
	DashboardMissingDataTreatmentOptionShowAsBlank = DashboardMissingDataTreatmentOption("SHOW_AS_BLANK")
)

func (DashboardMissingDataTreatmentOption) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMissingDataTreatmentOption)(nil)).Elem()
}

func (e DashboardMissingDataTreatmentOption) ToDashboardMissingDataTreatmentOptionOutput() DashboardMissingDataTreatmentOptionOutput {
	return pulumi.ToOutput(e).(DashboardMissingDataTreatmentOptionOutput)
}

func (e DashboardMissingDataTreatmentOption) ToDashboardMissingDataTreatmentOptionOutputWithContext(ctx context.Context) DashboardMissingDataTreatmentOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardMissingDataTreatmentOptionOutput)
}

func (e DashboardMissingDataTreatmentOption) ToDashboardMissingDataTreatmentOptionPtrOutput() DashboardMissingDataTreatmentOptionPtrOutput {
	return e.ToDashboardMissingDataTreatmentOptionPtrOutputWithContext(context.Background())
}

func (e DashboardMissingDataTreatmentOption) ToDashboardMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) DashboardMissingDataTreatmentOptionPtrOutput {
	return DashboardMissingDataTreatmentOption(e).ToDashboardMissingDataTreatmentOptionOutputWithContext(ctx).ToDashboardMissingDataTreatmentOptionPtrOutputWithContext(ctx)
}

func (e DashboardMissingDataTreatmentOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardMissingDataTreatmentOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardMissingDataTreatmentOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardMissingDataTreatmentOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardMissingDataTreatmentOptionOutput struct{ *pulumi.OutputState }

func (DashboardMissingDataTreatmentOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMissingDataTreatmentOption)(nil)).Elem()
}

func (o DashboardMissingDataTreatmentOptionOutput) ToDashboardMissingDataTreatmentOptionOutput() DashboardMissingDataTreatmentOptionOutput {
	return o
}

func (o DashboardMissingDataTreatmentOptionOutput) ToDashboardMissingDataTreatmentOptionOutputWithContext(ctx context.Context) DashboardMissingDataTreatmentOptionOutput {
	return o
}

func (o DashboardMissingDataTreatmentOptionOutput) ToDashboardMissingDataTreatmentOptionPtrOutput() DashboardMissingDataTreatmentOptionPtrOutput {
	return o.ToDashboardMissingDataTreatmentOptionPtrOutputWithContext(context.Background())
}

func (o DashboardMissingDataTreatmentOptionOutput) ToDashboardMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) DashboardMissingDataTreatmentOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardMissingDataTreatmentOption) *DashboardMissingDataTreatmentOption {
		return &v
	}).(DashboardMissingDataTreatmentOptionPtrOutput)
}

func (o DashboardMissingDataTreatmentOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardMissingDataTreatmentOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardMissingDataTreatmentOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardMissingDataTreatmentOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardMissingDataTreatmentOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardMissingDataTreatmentOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardMissingDataTreatmentOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardMissingDataTreatmentOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMissingDataTreatmentOption)(nil)).Elem()
}

func (o DashboardMissingDataTreatmentOptionPtrOutput) ToDashboardMissingDataTreatmentOptionPtrOutput() DashboardMissingDataTreatmentOptionPtrOutput {
	return o
}

func (o DashboardMissingDataTreatmentOptionPtrOutput) ToDashboardMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) DashboardMissingDataTreatmentOptionPtrOutput {
	return o
}

func (o DashboardMissingDataTreatmentOptionPtrOutput) Elem() DashboardMissingDataTreatmentOptionOutput {
	return o.ApplyT(func(v *DashboardMissingDataTreatmentOption) DashboardMissingDataTreatmentOption {
		if v != nil {
			return *v
		}
		var ret DashboardMissingDataTreatmentOption
		return ret
	}).(DashboardMissingDataTreatmentOptionOutput)
}

func (o DashboardMissingDataTreatmentOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardMissingDataTreatmentOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardMissingDataTreatmentOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardMissingDataTreatmentOptionInput is an input type that accepts values of the DashboardMissingDataTreatmentOption enum
// A concrete instance of `DashboardMissingDataTreatmentOptionInput` can be one of the following:
//
//	DashboardMissingDataTreatmentOptionInterpolate
//	DashboardMissingDataTreatmentOptionShowAsZero
//	DashboardMissingDataTreatmentOptionShowAsBlank
type DashboardMissingDataTreatmentOptionInput interface {
	pulumi.Input

	ToDashboardMissingDataTreatmentOptionOutput() DashboardMissingDataTreatmentOptionOutput
	ToDashboardMissingDataTreatmentOptionOutputWithContext(context.Context) DashboardMissingDataTreatmentOptionOutput
}

var dashboardMissingDataTreatmentOptionPtrType = reflect.TypeOf((**DashboardMissingDataTreatmentOption)(nil)).Elem()

type DashboardMissingDataTreatmentOptionPtrInput interface {
	pulumi.Input

	ToDashboardMissingDataTreatmentOptionPtrOutput() DashboardMissingDataTreatmentOptionPtrOutput
	ToDashboardMissingDataTreatmentOptionPtrOutputWithContext(context.Context) DashboardMissingDataTreatmentOptionPtrOutput
}

type dashboardMissingDataTreatmentOptionPtr string

func DashboardMissingDataTreatmentOptionPtr(v string) DashboardMissingDataTreatmentOptionPtrInput {
	return (*dashboardMissingDataTreatmentOptionPtr)(&v)
}

func (*dashboardMissingDataTreatmentOptionPtr) ElementType() reflect.Type {
	return dashboardMissingDataTreatmentOptionPtrType
}

func (in *dashboardMissingDataTreatmentOptionPtr) ToDashboardMissingDataTreatmentOptionPtrOutput() DashboardMissingDataTreatmentOptionPtrOutput {
	return pulumi.ToOutput(in).(DashboardMissingDataTreatmentOptionPtrOutput)
}

func (in *dashboardMissingDataTreatmentOptionPtr) ToDashboardMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) DashboardMissingDataTreatmentOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardMissingDataTreatmentOptionPtrOutput)
}

type DashboardNegativeValueDisplayMode string

const (
	DashboardNegativeValueDisplayModePositive = DashboardNegativeValueDisplayMode("POSITIVE")
	DashboardNegativeValueDisplayModeNegative = DashboardNegativeValueDisplayMode("NEGATIVE")
)

func (DashboardNegativeValueDisplayMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNegativeValueDisplayMode)(nil)).Elem()
}

func (e DashboardNegativeValueDisplayMode) ToDashboardNegativeValueDisplayModeOutput() DashboardNegativeValueDisplayModeOutput {
	return pulumi.ToOutput(e).(DashboardNegativeValueDisplayModeOutput)
}

func (e DashboardNegativeValueDisplayMode) ToDashboardNegativeValueDisplayModeOutputWithContext(ctx context.Context) DashboardNegativeValueDisplayModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardNegativeValueDisplayModeOutput)
}

func (e DashboardNegativeValueDisplayMode) ToDashboardNegativeValueDisplayModePtrOutput() DashboardNegativeValueDisplayModePtrOutput {
	return e.ToDashboardNegativeValueDisplayModePtrOutputWithContext(context.Background())
}

func (e DashboardNegativeValueDisplayMode) ToDashboardNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) DashboardNegativeValueDisplayModePtrOutput {
	return DashboardNegativeValueDisplayMode(e).ToDashboardNegativeValueDisplayModeOutputWithContext(ctx).ToDashboardNegativeValueDisplayModePtrOutputWithContext(ctx)
}

func (e DashboardNegativeValueDisplayMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardNegativeValueDisplayMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardNegativeValueDisplayMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardNegativeValueDisplayMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardNegativeValueDisplayModeOutput struct{ *pulumi.OutputState }

func (DashboardNegativeValueDisplayModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNegativeValueDisplayMode)(nil)).Elem()
}

func (o DashboardNegativeValueDisplayModeOutput) ToDashboardNegativeValueDisplayModeOutput() DashboardNegativeValueDisplayModeOutput {
	return o
}

func (o DashboardNegativeValueDisplayModeOutput) ToDashboardNegativeValueDisplayModeOutputWithContext(ctx context.Context) DashboardNegativeValueDisplayModeOutput {
	return o
}

func (o DashboardNegativeValueDisplayModeOutput) ToDashboardNegativeValueDisplayModePtrOutput() DashboardNegativeValueDisplayModePtrOutput {
	return o.ToDashboardNegativeValueDisplayModePtrOutputWithContext(context.Background())
}

func (o DashboardNegativeValueDisplayModeOutput) ToDashboardNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) DashboardNegativeValueDisplayModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNegativeValueDisplayMode) *DashboardNegativeValueDisplayMode {
		return &v
	}).(DashboardNegativeValueDisplayModePtrOutput)
}

func (o DashboardNegativeValueDisplayModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardNegativeValueDisplayModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardNegativeValueDisplayMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardNegativeValueDisplayModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardNegativeValueDisplayModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardNegativeValueDisplayMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardNegativeValueDisplayModePtrOutput struct{ *pulumi.OutputState }

func (DashboardNegativeValueDisplayModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNegativeValueDisplayMode)(nil)).Elem()
}

func (o DashboardNegativeValueDisplayModePtrOutput) ToDashboardNegativeValueDisplayModePtrOutput() DashboardNegativeValueDisplayModePtrOutput {
	return o
}

func (o DashboardNegativeValueDisplayModePtrOutput) ToDashboardNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) DashboardNegativeValueDisplayModePtrOutput {
	return o
}

func (o DashboardNegativeValueDisplayModePtrOutput) Elem() DashboardNegativeValueDisplayModeOutput {
	return o.ApplyT(func(v *DashboardNegativeValueDisplayMode) DashboardNegativeValueDisplayMode {
		if v != nil {
			return *v
		}
		var ret DashboardNegativeValueDisplayMode
		return ret
	}).(DashboardNegativeValueDisplayModeOutput)
}

func (o DashboardNegativeValueDisplayModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardNegativeValueDisplayModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardNegativeValueDisplayMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardNegativeValueDisplayModeInput is an input type that accepts values of the DashboardNegativeValueDisplayMode enum
// A concrete instance of `DashboardNegativeValueDisplayModeInput` can be one of the following:
//
//	DashboardNegativeValueDisplayModePositive
//	DashboardNegativeValueDisplayModeNegative
type DashboardNegativeValueDisplayModeInput interface {
	pulumi.Input

	ToDashboardNegativeValueDisplayModeOutput() DashboardNegativeValueDisplayModeOutput
	ToDashboardNegativeValueDisplayModeOutputWithContext(context.Context) DashboardNegativeValueDisplayModeOutput
}

var dashboardNegativeValueDisplayModePtrType = reflect.TypeOf((**DashboardNegativeValueDisplayMode)(nil)).Elem()

type DashboardNegativeValueDisplayModePtrInput interface {
	pulumi.Input

	ToDashboardNegativeValueDisplayModePtrOutput() DashboardNegativeValueDisplayModePtrOutput
	ToDashboardNegativeValueDisplayModePtrOutputWithContext(context.Context) DashboardNegativeValueDisplayModePtrOutput
}

type dashboardNegativeValueDisplayModePtr string

func DashboardNegativeValueDisplayModePtr(v string) DashboardNegativeValueDisplayModePtrInput {
	return (*dashboardNegativeValueDisplayModePtr)(&v)
}

func (*dashboardNegativeValueDisplayModePtr) ElementType() reflect.Type {
	return dashboardNegativeValueDisplayModePtrType
}

func (in *dashboardNegativeValueDisplayModePtr) ToDashboardNegativeValueDisplayModePtrOutput() DashboardNegativeValueDisplayModePtrOutput {
	return pulumi.ToOutput(in).(DashboardNegativeValueDisplayModePtrOutput)
}

func (in *dashboardNegativeValueDisplayModePtr) ToDashboardNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) DashboardNegativeValueDisplayModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardNegativeValueDisplayModePtrOutput)
}

type DashboardNumberScale string

const (
	DashboardNumberScaleNone      = DashboardNumberScale("NONE")
	DashboardNumberScaleAuto      = DashboardNumberScale("AUTO")
	DashboardNumberScaleThousands = DashboardNumberScale("THOUSANDS")
	DashboardNumberScaleMillions  = DashboardNumberScale("MILLIONS")
	DashboardNumberScaleBillions  = DashboardNumberScale("BILLIONS")
	DashboardNumberScaleTrillions = DashboardNumberScale("TRILLIONS")
)

func (DashboardNumberScale) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumberScale)(nil)).Elem()
}

func (e DashboardNumberScale) ToDashboardNumberScaleOutput() DashboardNumberScaleOutput {
	return pulumi.ToOutput(e).(DashboardNumberScaleOutput)
}

func (e DashboardNumberScale) ToDashboardNumberScaleOutputWithContext(ctx context.Context) DashboardNumberScaleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardNumberScaleOutput)
}

func (e DashboardNumberScale) ToDashboardNumberScalePtrOutput() DashboardNumberScalePtrOutput {
	return e.ToDashboardNumberScalePtrOutputWithContext(context.Background())
}

func (e DashboardNumberScale) ToDashboardNumberScalePtrOutputWithContext(ctx context.Context) DashboardNumberScalePtrOutput {
	return DashboardNumberScale(e).ToDashboardNumberScaleOutputWithContext(ctx).ToDashboardNumberScalePtrOutputWithContext(ctx)
}

func (e DashboardNumberScale) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardNumberScale) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardNumberScale) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardNumberScale) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardNumberScaleOutput struct{ *pulumi.OutputState }

func (DashboardNumberScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumberScale)(nil)).Elem()
}

func (o DashboardNumberScaleOutput) ToDashboardNumberScaleOutput() DashboardNumberScaleOutput {
	return o
}

func (o DashboardNumberScaleOutput) ToDashboardNumberScaleOutputWithContext(ctx context.Context) DashboardNumberScaleOutput {
	return o
}

func (o DashboardNumberScaleOutput) ToDashboardNumberScalePtrOutput() DashboardNumberScalePtrOutput {
	return o.ToDashboardNumberScalePtrOutputWithContext(context.Background())
}

func (o DashboardNumberScaleOutput) ToDashboardNumberScalePtrOutputWithContext(ctx context.Context) DashboardNumberScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumberScale) *DashboardNumberScale {
		return &v
	}).(DashboardNumberScalePtrOutput)
}

func (o DashboardNumberScaleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardNumberScaleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardNumberScale) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardNumberScaleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardNumberScaleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardNumberScale) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardNumberScalePtrOutput struct{ *pulumi.OutputState }

func (DashboardNumberScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumberScale)(nil)).Elem()
}

func (o DashboardNumberScalePtrOutput) ToDashboardNumberScalePtrOutput() DashboardNumberScalePtrOutput {
	return o
}

func (o DashboardNumberScalePtrOutput) ToDashboardNumberScalePtrOutputWithContext(ctx context.Context) DashboardNumberScalePtrOutput {
	return o
}

func (o DashboardNumberScalePtrOutput) Elem() DashboardNumberScaleOutput {
	return o.ApplyT(func(v *DashboardNumberScale) DashboardNumberScale {
		if v != nil {
			return *v
		}
		var ret DashboardNumberScale
		return ret
	}).(DashboardNumberScaleOutput)
}

func (o DashboardNumberScalePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardNumberScalePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardNumberScale) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardNumberScaleInput is an input type that accepts values of the DashboardNumberScale enum
// A concrete instance of `DashboardNumberScaleInput` can be one of the following:
//
//	DashboardNumberScaleNone
//	DashboardNumberScaleAuto
//	DashboardNumberScaleThousands
//	DashboardNumberScaleMillions
//	DashboardNumberScaleBillions
//	DashboardNumberScaleTrillions
type DashboardNumberScaleInput interface {
	pulumi.Input

	ToDashboardNumberScaleOutput() DashboardNumberScaleOutput
	ToDashboardNumberScaleOutputWithContext(context.Context) DashboardNumberScaleOutput
}

var dashboardNumberScalePtrType = reflect.TypeOf((**DashboardNumberScale)(nil)).Elem()

type DashboardNumberScalePtrInput interface {
	pulumi.Input

	ToDashboardNumberScalePtrOutput() DashboardNumberScalePtrOutput
	ToDashboardNumberScalePtrOutputWithContext(context.Context) DashboardNumberScalePtrOutput
}

type dashboardNumberScalePtr string

func DashboardNumberScalePtr(v string) DashboardNumberScalePtrInput {
	return (*dashboardNumberScalePtr)(&v)
}

func (*dashboardNumberScalePtr) ElementType() reflect.Type {
	return dashboardNumberScalePtrType
}

func (in *dashboardNumberScalePtr) ToDashboardNumberScalePtrOutput() DashboardNumberScalePtrOutput {
	return pulumi.ToOutput(in).(DashboardNumberScalePtrOutput)
}

func (in *dashboardNumberScalePtr) ToDashboardNumberScalePtrOutputWithContext(ctx context.Context) DashboardNumberScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardNumberScalePtrOutput)
}

type DashboardNumericEqualityMatchOperator string

const (
	DashboardNumericEqualityMatchOperatorEquals       = DashboardNumericEqualityMatchOperator("EQUALS")
	DashboardNumericEqualityMatchOperatorDoesNotEqual = DashboardNumericEqualityMatchOperator("DOES_NOT_EQUAL")
)

func (DashboardNumericEqualityMatchOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericEqualityMatchOperator)(nil)).Elem()
}

func (e DashboardNumericEqualityMatchOperator) ToDashboardNumericEqualityMatchOperatorOutput() DashboardNumericEqualityMatchOperatorOutput {
	return pulumi.ToOutput(e).(DashboardNumericEqualityMatchOperatorOutput)
}

func (e DashboardNumericEqualityMatchOperator) ToDashboardNumericEqualityMatchOperatorOutputWithContext(ctx context.Context) DashboardNumericEqualityMatchOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardNumericEqualityMatchOperatorOutput)
}

func (e DashboardNumericEqualityMatchOperator) ToDashboardNumericEqualityMatchOperatorPtrOutput() DashboardNumericEqualityMatchOperatorPtrOutput {
	return e.ToDashboardNumericEqualityMatchOperatorPtrOutputWithContext(context.Background())
}

func (e DashboardNumericEqualityMatchOperator) ToDashboardNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityMatchOperatorPtrOutput {
	return DashboardNumericEqualityMatchOperator(e).ToDashboardNumericEqualityMatchOperatorOutputWithContext(ctx).ToDashboardNumericEqualityMatchOperatorPtrOutputWithContext(ctx)
}

func (e DashboardNumericEqualityMatchOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardNumericEqualityMatchOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardNumericEqualityMatchOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardNumericEqualityMatchOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardNumericEqualityMatchOperatorOutput struct{ *pulumi.OutputState }

func (DashboardNumericEqualityMatchOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericEqualityMatchOperator)(nil)).Elem()
}

func (o DashboardNumericEqualityMatchOperatorOutput) ToDashboardNumericEqualityMatchOperatorOutput() DashboardNumericEqualityMatchOperatorOutput {
	return o
}

func (o DashboardNumericEqualityMatchOperatorOutput) ToDashboardNumericEqualityMatchOperatorOutputWithContext(ctx context.Context) DashboardNumericEqualityMatchOperatorOutput {
	return o
}

func (o DashboardNumericEqualityMatchOperatorOutput) ToDashboardNumericEqualityMatchOperatorPtrOutput() DashboardNumericEqualityMatchOperatorPtrOutput {
	return o.ToDashboardNumericEqualityMatchOperatorPtrOutputWithContext(context.Background())
}

func (o DashboardNumericEqualityMatchOperatorOutput) ToDashboardNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityMatchOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericEqualityMatchOperator) *DashboardNumericEqualityMatchOperator {
		return &v
	}).(DashboardNumericEqualityMatchOperatorPtrOutput)
}

func (o DashboardNumericEqualityMatchOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardNumericEqualityMatchOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardNumericEqualityMatchOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardNumericEqualityMatchOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardNumericEqualityMatchOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardNumericEqualityMatchOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardNumericEqualityMatchOperatorPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericEqualityMatchOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericEqualityMatchOperator)(nil)).Elem()
}

func (o DashboardNumericEqualityMatchOperatorPtrOutput) ToDashboardNumericEqualityMatchOperatorPtrOutput() DashboardNumericEqualityMatchOperatorPtrOutput {
	return o
}

func (o DashboardNumericEqualityMatchOperatorPtrOutput) ToDashboardNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityMatchOperatorPtrOutput {
	return o
}

func (o DashboardNumericEqualityMatchOperatorPtrOutput) Elem() DashboardNumericEqualityMatchOperatorOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityMatchOperator) DashboardNumericEqualityMatchOperator {
		if v != nil {
			return *v
		}
		var ret DashboardNumericEqualityMatchOperator
		return ret
	}).(DashboardNumericEqualityMatchOperatorOutput)
}

func (o DashboardNumericEqualityMatchOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardNumericEqualityMatchOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardNumericEqualityMatchOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardNumericEqualityMatchOperatorInput is an input type that accepts values of the DashboardNumericEqualityMatchOperator enum
// A concrete instance of `DashboardNumericEqualityMatchOperatorInput` can be one of the following:
//
//	DashboardNumericEqualityMatchOperatorEquals
//	DashboardNumericEqualityMatchOperatorDoesNotEqual
type DashboardNumericEqualityMatchOperatorInput interface {
	pulumi.Input

	ToDashboardNumericEqualityMatchOperatorOutput() DashboardNumericEqualityMatchOperatorOutput
	ToDashboardNumericEqualityMatchOperatorOutputWithContext(context.Context) DashboardNumericEqualityMatchOperatorOutput
}

var dashboardNumericEqualityMatchOperatorPtrType = reflect.TypeOf((**DashboardNumericEqualityMatchOperator)(nil)).Elem()

type DashboardNumericEqualityMatchOperatorPtrInput interface {
	pulumi.Input

	ToDashboardNumericEqualityMatchOperatorPtrOutput() DashboardNumericEqualityMatchOperatorPtrOutput
	ToDashboardNumericEqualityMatchOperatorPtrOutputWithContext(context.Context) DashboardNumericEqualityMatchOperatorPtrOutput
}

type dashboardNumericEqualityMatchOperatorPtr string

func DashboardNumericEqualityMatchOperatorPtr(v string) DashboardNumericEqualityMatchOperatorPtrInput {
	return (*dashboardNumericEqualityMatchOperatorPtr)(&v)
}

func (*dashboardNumericEqualityMatchOperatorPtr) ElementType() reflect.Type {
	return dashboardNumericEqualityMatchOperatorPtrType
}

func (in *dashboardNumericEqualityMatchOperatorPtr) ToDashboardNumericEqualityMatchOperatorPtrOutput() DashboardNumericEqualityMatchOperatorPtrOutput {
	return pulumi.ToOutput(in).(DashboardNumericEqualityMatchOperatorPtrOutput)
}

func (in *dashboardNumericEqualityMatchOperatorPtr) ToDashboardNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityMatchOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardNumericEqualityMatchOperatorPtrOutput)
}

type DashboardNumericFilterSelectAllOptions string

const (
	DashboardNumericFilterSelectAllOptionsFilterAllValues = DashboardNumericFilterSelectAllOptions("FILTER_ALL_VALUES")
)

func (DashboardNumericFilterSelectAllOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericFilterSelectAllOptions)(nil)).Elem()
}

func (e DashboardNumericFilterSelectAllOptions) ToDashboardNumericFilterSelectAllOptionsOutput() DashboardNumericFilterSelectAllOptionsOutput {
	return pulumi.ToOutput(e).(DashboardNumericFilterSelectAllOptionsOutput)
}

func (e DashboardNumericFilterSelectAllOptions) ToDashboardNumericFilterSelectAllOptionsOutputWithContext(ctx context.Context) DashboardNumericFilterSelectAllOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardNumericFilterSelectAllOptionsOutput)
}

func (e DashboardNumericFilterSelectAllOptions) ToDashboardNumericFilterSelectAllOptionsPtrOutput() DashboardNumericFilterSelectAllOptionsPtrOutput {
	return e.ToDashboardNumericFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (e DashboardNumericFilterSelectAllOptions) ToDashboardNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardNumericFilterSelectAllOptionsPtrOutput {
	return DashboardNumericFilterSelectAllOptions(e).ToDashboardNumericFilterSelectAllOptionsOutputWithContext(ctx).ToDashboardNumericFilterSelectAllOptionsPtrOutputWithContext(ctx)
}

func (e DashboardNumericFilterSelectAllOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardNumericFilterSelectAllOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardNumericFilterSelectAllOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardNumericFilterSelectAllOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardNumericFilterSelectAllOptionsOutput struct{ *pulumi.OutputState }

func (DashboardNumericFilterSelectAllOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericFilterSelectAllOptions)(nil)).Elem()
}

func (o DashboardNumericFilterSelectAllOptionsOutput) ToDashboardNumericFilterSelectAllOptionsOutput() DashboardNumericFilterSelectAllOptionsOutput {
	return o
}

func (o DashboardNumericFilterSelectAllOptionsOutput) ToDashboardNumericFilterSelectAllOptionsOutputWithContext(ctx context.Context) DashboardNumericFilterSelectAllOptionsOutput {
	return o
}

func (o DashboardNumericFilterSelectAllOptionsOutput) ToDashboardNumericFilterSelectAllOptionsPtrOutput() DashboardNumericFilterSelectAllOptionsPtrOutput {
	return o.ToDashboardNumericFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardNumericFilterSelectAllOptionsOutput) ToDashboardNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericFilterSelectAllOptions) *DashboardNumericFilterSelectAllOptions {
		return &v
	}).(DashboardNumericFilterSelectAllOptionsPtrOutput)
}

func (o DashboardNumericFilterSelectAllOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardNumericFilterSelectAllOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardNumericFilterSelectAllOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardNumericFilterSelectAllOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardNumericFilterSelectAllOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardNumericFilterSelectAllOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardNumericFilterSelectAllOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericFilterSelectAllOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericFilterSelectAllOptions)(nil)).Elem()
}

func (o DashboardNumericFilterSelectAllOptionsPtrOutput) ToDashboardNumericFilterSelectAllOptionsPtrOutput() DashboardNumericFilterSelectAllOptionsPtrOutput {
	return o
}

func (o DashboardNumericFilterSelectAllOptionsPtrOutput) ToDashboardNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardNumericFilterSelectAllOptionsPtrOutput {
	return o
}

func (o DashboardNumericFilterSelectAllOptionsPtrOutput) Elem() DashboardNumericFilterSelectAllOptionsOutput {
	return o.ApplyT(func(v *DashboardNumericFilterSelectAllOptions) DashboardNumericFilterSelectAllOptions {
		if v != nil {
			return *v
		}
		var ret DashboardNumericFilterSelectAllOptions
		return ret
	}).(DashboardNumericFilterSelectAllOptionsOutput)
}

func (o DashboardNumericFilterSelectAllOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardNumericFilterSelectAllOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardNumericFilterSelectAllOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardNumericFilterSelectAllOptionsInput is an input type that accepts values of the DashboardNumericFilterSelectAllOptions enum
// A concrete instance of `DashboardNumericFilterSelectAllOptionsInput` can be one of the following:
//
//	DashboardNumericFilterSelectAllOptionsFilterAllValues
type DashboardNumericFilterSelectAllOptionsInput interface {
	pulumi.Input

	ToDashboardNumericFilterSelectAllOptionsOutput() DashboardNumericFilterSelectAllOptionsOutput
	ToDashboardNumericFilterSelectAllOptionsOutputWithContext(context.Context) DashboardNumericFilterSelectAllOptionsOutput
}

var dashboardNumericFilterSelectAllOptionsPtrType = reflect.TypeOf((**DashboardNumericFilterSelectAllOptions)(nil)).Elem()

type DashboardNumericFilterSelectAllOptionsPtrInput interface {
	pulumi.Input

	ToDashboardNumericFilterSelectAllOptionsPtrOutput() DashboardNumericFilterSelectAllOptionsPtrOutput
	ToDashboardNumericFilterSelectAllOptionsPtrOutputWithContext(context.Context) DashboardNumericFilterSelectAllOptionsPtrOutput
}

type dashboardNumericFilterSelectAllOptionsPtr string

func DashboardNumericFilterSelectAllOptionsPtr(v string) DashboardNumericFilterSelectAllOptionsPtrInput {
	return (*dashboardNumericFilterSelectAllOptionsPtr)(&v)
}

func (*dashboardNumericFilterSelectAllOptionsPtr) ElementType() reflect.Type {
	return dashboardNumericFilterSelectAllOptionsPtrType
}

func (in *dashboardNumericFilterSelectAllOptionsPtr) ToDashboardNumericFilterSelectAllOptionsPtrOutput() DashboardNumericFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutput(in).(DashboardNumericFilterSelectAllOptionsPtrOutput)
}

func (in *dashboardNumericFilterSelectAllOptionsPtr) ToDashboardNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardNumericFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardNumericFilterSelectAllOptionsPtrOutput)
}

type DashboardNumericSeparatorSymbol string

const (
	DashboardNumericSeparatorSymbolComma = DashboardNumericSeparatorSymbol("COMMA")
	DashboardNumericSeparatorSymbolDot   = DashboardNumericSeparatorSymbol("DOT")
	DashboardNumericSeparatorSymbolSpace = DashboardNumericSeparatorSymbol("SPACE")
)

func (DashboardNumericSeparatorSymbol) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericSeparatorSymbol)(nil)).Elem()
}

func (e DashboardNumericSeparatorSymbol) ToDashboardNumericSeparatorSymbolOutput() DashboardNumericSeparatorSymbolOutput {
	return pulumi.ToOutput(e).(DashboardNumericSeparatorSymbolOutput)
}

func (e DashboardNumericSeparatorSymbol) ToDashboardNumericSeparatorSymbolOutputWithContext(ctx context.Context) DashboardNumericSeparatorSymbolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardNumericSeparatorSymbolOutput)
}

func (e DashboardNumericSeparatorSymbol) ToDashboardNumericSeparatorSymbolPtrOutput() DashboardNumericSeparatorSymbolPtrOutput {
	return e.ToDashboardNumericSeparatorSymbolPtrOutputWithContext(context.Background())
}

func (e DashboardNumericSeparatorSymbol) ToDashboardNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) DashboardNumericSeparatorSymbolPtrOutput {
	return DashboardNumericSeparatorSymbol(e).ToDashboardNumericSeparatorSymbolOutputWithContext(ctx).ToDashboardNumericSeparatorSymbolPtrOutputWithContext(ctx)
}

func (e DashboardNumericSeparatorSymbol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardNumericSeparatorSymbol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardNumericSeparatorSymbol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardNumericSeparatorSymbol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardNumericSeparatorSymbolOutput struct{ *pulumi.OutputState }

func (DashboardNumericSeparatorSymbolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericSeparatorSymbol)(nil)).Elem()
}

func (o DashboardNumericSeparatorSymbolOutput) ToDashboardNumericSeparatorSymbolOutput() DashboardNumericSeparatorSymbolOutput {
	return o
}

func (o DashboardNumericSeparatorSymbolOutput) ToDashboardNumericSeparatorSymbolOutputWithContext(ctx context.Context) DashboardNumericSeparatorSymbolOutput {
	return o
}

func (o DashboardNumericSeparatorSymbolOutput) ToDashboardNumericSeparatorSymbolPtrOutput() DashboardNumericSeparatorSymbolPtrOutput {
	return o.ToDashboardNumericSeparatorSymbolPtrOutputWithContext(context.Background())
}

func (o DashboardNumericSeparatorSymbolOutput) ToDashboardNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) DashboardNumericSeparatorSymbolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericSeparatorSymbol) *DashboardNumericSeparatorSymbol {
		return &v
	}).(DashboardNumericSeparatorSymbolPtrOutput)
}

func (o DashboardNumericSeparatorSymbolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardNumericSeparatorSymbolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardNumericSeparatorSymbol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardNumericSeparatorSymbolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardNumericSeparatorSymbolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardNumericSeparatorSymbol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardNumericSeparatorSymbolPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericSeparatorSymbolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericSeparatorSymbol)(nil)).Elem()
}

func (o DashboardNumericSeparatorSymbolPtrOutput) ToDashboardNumericSeparatorSymbolPtrOutput() DashboardNumericSeparatorSymbolPtrOutput {
	return o
}

func (o DashboardNumericSeparatorSymbolPtrOutput) ToDashboardNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) DashboardNumericSeparatorSymbolPtrOutput {
	return o
}

func (o DashboardNumericSeparatorSymbolPtrOutput) Elem() DashboardNumericSeparatorSymbolOutput {
	return o.ApplyT(func(v *DashboardNumericSeparatorSymbol) DashboardNumericSeparatorSymbol {
		if v != nil {
			return *v
		}
		var ret DashboardNumericSeparatorSymbol
		return ret
	}).(DashboardNumericSeparatorSymbolOutput)
}

func (o DashboardNumericSeparatorSymbolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardNumericSeparatorSymbolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardNumericSeparatorSymbol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardNumericSeparatorSymbolInput is an input type that accepts values of the DashboardNumericSeparatorSymbol enum
// A concrete instance of `DashboardNumericSeparatorSymbolInput` can be one of the following:
//
//	DashboardNumericSeparatorSymbolComma
//	DashboardNumericSeparatorSymbolDot
//	DashboardNumericSeparatorSymbolSpace
type DashboardNumericSeparatorSymbolInput interface {
	pulumi.Input

	ToDashboardNumericSeparatorSymbolOutput() DashboardNumericSeparatorSymbolOutput
	ToDashboardNumericSeparatorSymbolOutputWithContext(context.Context) DashboardNumericSeparatorSymbolOutput
}

var dashboardNumericSeparatorSymbolPtrType = reflect.TypeOf((**DashboardNumericSeparatorSymbol)(nil)).Elem()

type DashboardNumericSeparatorSymbolPtrInput interface {
	pulumi.Input

	ToDashboardNumericSeparatorSymbolPtrOutput() DashboardNumericSeparatorSymbolPtrOutput
	ToDashboardNumericSeparatorSymbolPtrOutputWithContext(context.Context) DashboardNumericSeparatorSymbolPtrOutput
}

type dashboardNumericSeparatorSymbolPtr string

func DashboardNumericSeparatorSymbolPtr(v string) DashboardNumericSeparatorSymbolPtrInput {
	return (*dashboardNumericSeparatorSymbolPtr)(&v)
}

func (*dashboardNumericSeparatorSymbolPtr) ElementType() reflect.Type {
	return dashboardNumericSeparatorSymbolPtrType
}

func (in *dashboardNumericSeparatorSymbolPtr) ToDashboardNumericSeparatorSymbolPtrOutput() DashboardNumericSeparatorSymbolPtrOutput {
	return pulumi.ToOutput(in).(DashboardNumericSeparatorSymbolPtrOutput)
}

func (in *dashboardNumericSeparatorSymbolPtr) ToDashboardNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) DashboardNumericSeparatorSymbolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardNumericSeparatorSymbolPtrOutput)
}

type DashboardOtherCategories string

const (
	DashboardOtherCategoriesInclude = DashboardOtherCategories("INCLUDE")
	DashboardOtherCategoriesExclude = DashboardOtherCategories("EXCLUDE")
)

func (DashboardOtherCategories) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardOtherCategories)(nil)).Elem()
}

func (e DashboardOtherCategories) ToDashboardOtherCategoriesOutput() DashboardOtherCategoriesOutput {
	return pulumi.ToOutput(e).(DashboardOtherCategoriesOutput)
}

func (e DashboardOtherCategories) ToDashboardOtherCategoriesOutputWithContext(ctx context.Context) DashboardOtherCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardOtherCategoriesOutput)
}

func (e DashboardOtherCategories) ToDashboardOtherCategoriesPtrOutput() DashboardOtherCategoriesPtrOutput {
	return e.ToDashboardOtherCategoriesPtrOutputWithContext(context.Background())
}

func (e DashboardOtherCategories) ToDashboardOtherCategoriesPtrOutputWithContext(ctx context.Context) DashboardOtherCategoriesPtrOutput {
	return DashboardOtherCategories(e).ToDashboardOtherCategoriesOutputWithContext(ctx).ToDashboardOtherCategoriesPtrOutputWithContext(ctx)
}

func (e DashboardOtherCategories) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardOtherCategories) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardOtherCategories) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardOtherCategories) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardOtherCategoriesOutput struct{ *pulumi.OutputState }

func (DashboardOtherCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardOtherCategories)(nil)).Elem()
}

func (o DashboardOtherCategoriesOutput) ToDashboardOtherCategoriesOutput() DashboardOtherCategoriesOutput {
	return o
}

func (o DashboardOtherCategoriesOutput) ToDashboardOtherCategoriesOutputWithContext(ctx context.Context) DashboardOtherCategoriesOutput {
	return o
}

func (o DashboardOtherCategoriesOutput) ToDashboardOtherCategoriesPtrOutput() DashboardOtherCategoriesPtrOutput {
	return o.ToDashboardOtherCategoriesPtrOutputWithContext(context.Background())
}

func (o DashboardOtherCategoriesOutput) ToDashboardOtherCategoriesPtrOutputWithContext(ctx context.Context) DashboardOtherCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardOtherCategories) *DashboardOtherCategories {
		return &v
	}).(DashboardOtherCategoriesPtrOutput)
}

func (o DashboardOtherCategoriesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardOtherCategoriesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardOtherCategories) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardOtherCategoriesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardOtherCategoriesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardOtherCategories) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardOtherCategoriesPtrOutput struct{ *pulumi.OutputState }

func (DashboardOtherCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardOtherCategories)(nil)).Elem()
}

func (o DashboardOtherCategoriesPtrOutput) ToDashboardOtherCategoriesPtrOutput() DashboardOtherCategoriesPtrOutput {
	return o
}

func (o DashboardOtherCategoriesPtrOutput) ToDashboardOtherCategoriesPtrOutputWithContext(ctx context.Context) DashboardOtherCategoriesPtrOutput {
	return o
}

func (o DashboardOtherCategoriesPtrOutput) Elem() DashboardOtherCategoriesOutput {
	return o.ApplyT(func(v *DashboardOtherCategories) DashboardOtherCategories {
		if v != nil {
			return *v
		}
		var ret DashboardOtherCategories
		return ret
	}).(DashboardOtherCategoriesOutput)
}

func (o DashboardOtherCategoriesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardOtherCategoriesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardOtherCategories) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardOtherCategoriesInput is an input type that accepts values of the DashboardOtherCategories enum
// A concrete instance of `DashboardOtherCategoriesInput` can be one of the following:
//
//	DashboardOtherCategoriesInclude
//	DashboardOtherCategoriesExclude
type DashboardOtherCategoriesInput interface {
	pulumi.Input

	ToDashboardOtherCategoriesOutput() DashboardOtherCategoriesOutput
	ToDashboardOtherCategoriesOutputWithContext(context.Context) DashboardOtherCategoriesOutput
}

var dashboardOtherCategoriesPtrType = reflect.TypeOf((**DashboardOtherCategories)(nil)).Elem()

type DashboardOtherCategoriesPtrInput interface {
	pulumi.Input

	ToDashboardOtherCategoriesPtrOutput() DashboardOtherCategoriesPtrOutput
	ToDashboardOtherCategoriesPtrOutputWithContext(context.Context) DashboardOtherCategoriesPtrOutput
}

type dashboardOtherCategoriesPtr string

func DashboardOtherCategoriesPtr(v string) DashboardOtherCategoriesPtrInput {
	return (*dashboardOtherCategoriesPtr)(&v)
}

func (*dashboardOtherCategoriesPtr) ElementType() reflect.Type {
	return dashboardOtherCategoriesPtrType
}

func (in *dashboardOtherCategoriesPtr) ToDashboardOtherCategoriesPtrOutput() DashboardOtherCategoriesPtrOutput {
	return pulumi.ToOutput(in).(DashboardOtherCategoriesPtrOutput)
}

func (in *dashboardOtherCategoriesPtr) ToDashboardOtherCategoriesPtrOutputWithContext(ctx context.Context) DashboardOtherCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardOtherCategoriesPtrOutput)
}

type DashboardPanelBorderStyle string

const (
	DashboardPanelBorderStyleSolid  = DashboardPanelBorderStyle("SOLID")
	DashboardPanelBorderStyleDashed = DashboardPanelBorderStyle("DASHED")
	DashboardPanelBorderStyleDotted = DashboardPanelBorderStyle("DOTTED")
)

func (DashboardPanelBorderStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelBorderStyle)(nil)).Elem()
}

func (e DashboardPanelBorderStyle) ToDashboardPanelBorderStyleOutput() DashboardPanelBorderStyleOutput {
	return pulumi.ToOutput(e).(DashboardPanelBorderStyleOutput)
}

func (e DashboardPanelBorderStyle) ToDashboardPanelBorderStyleOutputWithContext(ctx context.Context) DashboardPanelBorderStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardPanelBorderStyleOutput)
}

func (e DashboardPanelBorderStyle) ToDashboardPanelBorderStylePtrOutput() DashboardPanelBorderStylePtrOutput {
	return e.ToDashboardPanelBorderStylePtrOutputWithContext(context.Background())
}

func (e DashboardPanelBorderStyle) ToDashboardPanelBorderStylePtrOutputWithContext(ctx context.Context) DashboardPanelBorderStylePtrOutput {
	return DashboardPanelBorderStyle(e).ToDashboardPanelBorderStyleOutputWithContext(ctx).ToDashboardPanelBorderStylePtrOutputWithContext(ctx)
}

func (e DashboardPanelBorderStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPanelBorderStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPanelBorderStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardPanelBorderStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardPanelBorderStyleOutput struct{ *pulumi.OutputState }

func (DashboardPanelBorderStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelBorderStyle)(nil)).Elem()
}

func (o DashboardPanelBorderStyleOutput) ToDashboardPanelBorderStyleOutput() DashboardPanelBorderStyleOutput {
	return o
}

func (o DashboardPanelBorderStyleOutput) ToDashboardPanelBorderStyleOutputWithContext(ctx context.Context) DashboardPanelBorderStyleOutput {
	return o
}

func (o DashboardPanelBorderStyleOutput) ToDashboardPanelBorderStylePtrOutput() DashboardPanelBorderStylePtrOutput {
	return o.ToDashboardPanelBorderStylePtrOutputWithContext(context.Background())
}

func (o DashboardPanelBorderStyleOutput) ToDashboardPanelBorderStylePtrOutputWithContext(ctx context.Context) DashboardPanelBorderStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelBorderStyle) *DashboardPanelBorderStyle {
		return &v
	}).(DashboardPanelBorderStylePtrOutput)
}

func (o DashboardPanelBorderStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardPanelBorderStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPanelBorderStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardPanelBorderStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPanelBorderStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPanelBorderStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelBorderStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelBorderStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelBorderStyle)(nil)).Elem()
}

func (o DashboardPanelBorderStylePtrOutput) ToDashboardPanelBorderStylePtrOutput() DashboardPanelBorderStylePtrOutput {
	return o
}

func (o DashboardPanelBorderStylePtrOutput) ToDashboardPanelBorderStylePtrOutputWithContext(ctx context.Context) DashboardPanelBorderStylePtrOutput {
	return o
}

func (o DashboardPanelBorderStylePtrOutput) Elem() DashboardPanelBorderStyleOutput {
	return o.ApplyT(func(v *DashboardPanelBorderStyle) DashboardPanelBorderStyle {
		if v != nil {
			return *v
		}
		var ret DashboardPanelBorderStyle
		return ret
	}).(DashboardPanelBorderStyleOutput)
}

func (o DashboardPanelBorderStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPanelBorderStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardPanelBorderStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardPanelBorderStyleInput is an input type that accepts values of the DashboardPanelBorderStyle enum
// A concrete instance of `DashboardPanelBorderStyleInput` can be one of the following:
//
//	DashboardPanelBorderStyleSolid
//	DashboardPanelBorderStyleDashed
//	DashboardPanelBorderStyleDotted
type DashboardPanelBorderStyleInput interface {
	pulumi.Input

	ToDashboardPanelBorderStyleOutput() DashboardPanelBorderStyleOutput
	ToDashboardPanelBorderStyleOutputWithContext(context.Context) DashboardPanelBorderStyleOutput
}

var dashboardPanelBorderStylePtrType = reflect.TypeOf((**DashboardPanelBorderStyle)(nil)).Elem()

type DashboardPanelBorderStylePtrInput interface {
	pulumi.Input

	ToDashboardPanelBorderStylePtrOutput() DashboardPanelBorderStylePtrOutput
	ToDashboardPanelBorderStylePtrOutputWithContext(context.Context) DashboardPanelBorderStylePtrOutput
}

type dashboardPanelBorderStylePtr string

func DashboardPanelBorderStylePtr(v string) DashboardPanelBorderStylePtrInput {
	return (*dashboardPanelBorderStylePtr)(&v)
}

func (*dashboardPanelBorderStylePtr) ElementType() reflect.Type {
	return dashboardPanelBorderStylePtrType
}

func (in *dashboardPanelBorderStylePtr) ToDashboardPanelBorderStylePtrOutput() DashboardPanelBorderStylePtrOutput {
	return pulumi.ToOutput(in).(DashboardPanelBorderStylePtrOutput)
}

func (in *dashboardPanelBorderStylePtr) ToDashboardPanelBorderStylePtrOutputWithContext(ctx context.Context) DashboardPanelBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardPanelBorderStylePtrOutput)
}

type DashboardPaperOrientation string

const (
	DashboardPaperOrientationPortrait  = DashboardPaperOrientation("PORTRAIT")
	DashboardPaperOrientationLandscape = DashboardPaperOrientation("LANDSCAPE")
)

func (DashboardPaperOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPaperOrientation)(nil)).Elem()
}

func (e DashboardPaperOrientation) ToDashboardPaperOrientationOutput() DashboardPaperOrientationOutput {
	return pulumi.ToOutput(e).(DashboardPaperOrientationOutput)
}

func (e DashboardPaperOrientation) ToDashboardPaperOrientationOutputWithContext(ctx context.Context) DashboardPaperOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardPaperOrientationOutput)
}

func (e DashboardPaperOrientation) ToDashboardPaperOrientationPtrOutput() DashboardPaperOrientationPtrOutput {
	return e.ToDashboardPaperOrientationPtrOutputWithContext(context.Background())
}

func (e DashboardPaperOrientation) ToDashboardPaperOrientationPtrOutputWithContext(ctx context.Context) DashboardPaperOrientationPtrOutput {
	return DashboardPaperOrientation(e).ToDashboardPaperOrientationOutputWithContext(ctx).ToDashboardPaperOrientationPtrOutputWithContext(ctx)
}

func (e DashboardPaperOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPaperOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPaperOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardPaperOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardPaperOrientationOutput struct{ *pulumi.OutputState }

func (DashboardPaperOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPaperOrientation)(nil)).Elem()
}

func (o DashboardPaperOrientationOutput) ToDashboardPaperOrientationOutput() DashboardPaperOrientationOutput {
	return o
}

func (o DashboardPaperOrientationOutput) ToDashboardPaperOrientationOutputWithContext(ctx context.Context) DashboardPaperOrientationOutput {
	return o
}

func (o DashboardPaperOrientationOutput) ToDashboardPaperOrientationPtrOutput() DashboardPaperOrientationPtrOutput {
	return o.ToDashboardPaperOrientationPtrOutputWithContext(context.Background())
}

func (o DashboardPaperOrientationOutput) ToDashboardPaperOrientationPtrOutputWithContext(ctx context.Context) DashboardPaperOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPaperOrientation) *DashboardPaperOrientation {
		return &v
	}).(DashboardPaperOrientationPtrOutput)
}

func (o DashboardPaperOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardPaperOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPaperOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardPaperOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPaperOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPaperOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardPaperOrientationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPaperOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPaperOrientation)(nil)).Elem()
}

func (o DashboardPaperOrientationPtrOutput) ToDashboardPaperOrientationPtrOutput() DashboardPaperOrientationPtrOutput {
	return o
}

func (o DashboardPaperOrientationPtrOutput) ToDashboardPaperOrientationPtrOutputWithContext(ctx context.Context) DashboardPaperOrientationPtrOutput {
	return o
}

func (o DashboardPaperOrientationPtrOutput) Elem() DashboardPaperOrientationOutput {
	return o.ApplyT(func(v *DashboardPaperOrientation) DashboardPaperOrientation {
		if v != nil {
			return *v
		}
		var ret DashboardPaperOrientation
		return ret
	}).(DashboardPaperOrientationOutput)
}

func (o DashboardPaperOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPaperOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardPaperOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardPaperOrientationInput is an input type that accepts values of the DashboardPaperOrientation enum
// A concrete instance of `DashboardPaperOrientationInput` can be one of the following:
//
//	DashboardPaperOrientationPortrait
//	DashboardPaperOrientationLandscape
type DashboardPaperOrientationInput interface {
	pulumi.Input

	ToDashboardPaperOrientationOutput() DashboardPaperOrientationOutput
	ToDashboardPaperOrientationOutputWithContext(context.Context) DashboardPaperOrientationOutput
}

var dashboardPaperOrientationPtrType = reflect.TypeOf((**DashboardPaperOrientation)(nil)).Elem()

type DashboardPaperOrientationPtrInput interface {
	pulumi.Input

	ToDashboardPaperOrientationPtrOutput() DashboardPaperOrientationPtrOutput
	ToDashboardPaperOrientationPtrOutputWithContext(context.Context) DashboardPaperOrientationPtrOutput
}

type dashboardPaperOrientationPtr string

func DashboardPaperOrientationPtr(v string) DashboardPaperOrientationPtrInput {
	return (*dashboardPaperOrientationPtr)(&v)
}

func (*dashboardPaperOrientationPtr) ElementType() reflect.Type {
	return dashboardPaperOrientationPtrType
}

func (in *dashboardPaperOrientationPtr) ToDashboardPaperOrientationPtrOutput() DashboardPaperOrientationPtrOutput {
	return pulumi.ToOutput(in).(DashboardPaperOrientationPtrOutput)
}

func (in *dashboardPaperOrientationPtr) ToDashboardPaperOrientationPtrOutputWithContext(ctx context.Context) DashboardPaperOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardPaperOrientationPtrOutput)
}

type DashboardPaperSize string

const (
	DashboardPaperSizeUsLetter        = DashboardPaperSize("US_LETTER")
	DashboardPaperSizeUsLegal         = DashboardPaperSize("US_LEGAL")
	DashboardPaperSizeUsTabloidLedger = DashboardPaperSize("US_TABLOID_LEDGER")
	DashboardPaperSizeA0              = DashboardPaperSize("A0")
	DashboardPaperSizeA1              = DashboardPaperSize("A1")
	DashboardPaperSizeA2              = DashboardPaperSize("A2")
	DashboardPaperSizeA3              = DashboardPaperSize("A3")
	DashboardPaperSizeA4              = DashboardPaperSize("A4")
	DashboardPaperSizeA5              = DashboardPaperSize("A5")
	DashboardPaperSizeJisB4           = DashboardPaperSize("JIS_B4")
	DashboardPaperSizeJisB5           = DashboardPaperSize("JIS_B5")
)

func (DashboardPaperSize) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPaperSize)(nil)).Elem()
}

func (e DashboardPaperSize) ToDashboardPaperSizeOutput() DashboardPaperSizeOutput {
	return pulumi.ToOutput(e).(DashboardPaperSizeOutput)
}

func (e DashboardPaperSize) ToDashboardPaperSizeOutputWithContext(ctx context.Context) DashboardPaperSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardPaperSizeOutput)
}

func (e DashboardPaperSize) ToDashboardPaperSizePtrOutput() DashboardPaperSizePtrOutput {
	return e.ToDashboardPaperSizePtrOutputWithContext(context.Background())
}

func (e DashboardPaperSize) ToDashboardPaperSizePtrOutputWithContext(ctx context.Context) DashboardPaperSizePtrOutput {
	return DashboardPaperSize(e).ToDashboardPaperSizeOutputWithContext(ctx).ToDashboardPaperSizePtrOutputWithContext(ctx)
}

func (e DashboardPaperSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPaperSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPaperSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardPaperSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardPaperSizeOutput struct{ *pulumi.OutputState }

func (DashboardPaperSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPaperSize)(nil)).Elem()
}

func (o DashboardPaperSizeOutput) ToDashboardPaperSizeOutput() DashboardPaperSizeOutput {
	return o
}

func (o DashboardPaperSizeOutput) ToDashboardPaperSizeOutputWithContext(ctx context.Context) DashboardPaperSizeOutput {
	return o
}

func (o DashboardPaperSizeOutput) ToDashboardPaperSizePtrOutput() DashboardPaperSizePtrOutput {
	return o.ToDashboardPaperSizePtrOutputWithContext(context.Background())
}

func (o DashboardPaperSizeOutput) ToDashboardPaperSizePtrOutputWithContext(ctx context.Context) DashboardPaperSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPaperSize) *DashboardPaperSize {
		return &v
	}).(DashboardPaperSizePtrOutput)
}

func (o DashboardPaperSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardPaperSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPaperSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardPaperSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPaperSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPaperSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardPaperSizePtrOutput struct{ *pulumi.OutputState }

func (DashboardPaperSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPaperSize)(nil)).Elem()
}

func (o DashboardPaperSizePtrOutput) ToDashboardPaperSizePtrOutput() DashboardPaperSizePtrOutput {
	return o
}

func (o DashboardPaperSizePtrOutput) ToDashboardPaperSizePtrOutputWithContext(ctx context.Context) DashboardPaperSizePtrOutput {
	return o
}

func (o DashboardPaperSizePtrOutput) Elem() DashboardPaperSizeOutput {
	return o.ApplyT(func(v *DashboardPaperSize) DashboardPaperSize {
		if v != nil {
			return *v
		}
		var ret DashboardPaperSize
		return ret
	}).(DashboardPaperSizeOutput)
}

func (o DashboardPaperSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPaperSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardPaperSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardPaperSizeInput is an input type that accepts values of the DashboardPaperSize enum
// A concrete instance of `DashboardPaperSizeInput` can be one of the following:
//
//	DashboardPaperSizeUsLetter
//	DashboardPaperSizeUsLegal
//	DashboardPaperSizeUsTabloidLedger
//	DashboardPaperSizeA0
//	DashboardPaperSizeA1
//	DashboardPaperSizeA2
//	DashboardPaperSizeA3
//	DashboardPaperSizeA4
//	DashboardPaperSizeA5
//	DashboardPaperSizeJisB4
//	DashboardPaperSizeJisB5
type DashboardPaperSizeInput interface {
	pulumi.Input

	ToDashboardPaperSizeOutput() DashboardPaperSizeOutput
	ToDashboardPaperSizeOutputWithContext(context.Context) DashboardPaperSizeOutput
}

var dashboardPaperSizePtrType = reflect.TypeOf((**DashboardPaperSize)(nil)).Elem()

type DashboardPaperSizePtrInput interface {
	pulumi.Input

	ToDashboardPaperSizePtrOutput() DashboardPaperSizePtrOutput
	ToDashboardPaperSizePtrOutputWithContext(context.Context) DashboardPaperSizePtrOutput
}

type dashboardPaperSizePtr string

func DashboardPaperSizePtr(v string) DashboardPaperSizePtrInput {
	return (*dashboardPaperSizePtr)(&v)
}

func (*dashboardPaperSizePtr) ElementType() reflect.Type {
	return dashboardPaperSizePtrType
}

func (in *dashboardPaperSizePtr) ToDashboardPaperSizePtrOutput() DashboardPaperSizePtrOutput {
	return pulumi.ToOutput(in).(DashboardPaperSizePtrOutput)
}

func (in *dashboardPaperSizePtr) ToDashboardPaperSizePtrOutputWithContext(ctx context.Context) DashboardPaperSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardPaperSizePtrOutput)
}

type DashboardParameterValueType string

const (
	DashboardParameterValueTypeMultiValued  = DashboardParameterValueType("MULTI_VALUED")
	DashboardParameterValueTypeSingleValued = DashboardParameterValueType("SINGLE_VALUED")
)

func (DashboardParameterValueType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterValueType)(nil)).Elem()
}

func (e DashboardParameterValueType) ToDashboardParameterValueTypeOutput() DashboardParameterValueTypeOutput {
	return pulumi.ToOutput(e).(DashboardParameterValueTypeOutput)
}

func (e DashboardParameterValueType) ToDashboardParameterValueTypeOutputWithContext(ctx context.Context) DashboardParameterValueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardParameterValueTypeOutput)
}

func (e DashboardParameterValueType) ToDashboardParameterValueTypePtrOutput() DashboardParameterValueTypePtrOutput {
	return e.ToDashboardParameterValueTypePtrOutputWithContext(context.Background())
}

func (e DashboardParameterValueType) ToDashboardParameterValueTypePtrOutputWithContext(ctx context.Context) DashboardParameterValueTypePtrOutput {
	return DashboardParameterValueType(e).ToDashboardParameterValueTypeOutputWithContext(ctx).ToDashboardParameterValueTypePtrOutputWithContext(ctx)
}

func (e DashboardParameterValueType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardParameterValueType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardParameterValueType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardParameterValueType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardParameterValueTypeOutput struct{ *pulumi.OutputState }

func (DashboardParameterValueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterValueType)(nil)).Elem()
}

func (o DashboardParameterValueTypeOutput) ToDashboardParameterValueTypeOutput() DashboardParameterValueTypeOutput {
	return o
}

func (o DashboardParameterValueTypeOutput) ToDashboardParameterValueTypeOutputWithContext(ctx context.Context) DashboardParameterValueTypeOutput {
	return o
}

func (o DashboardParameterValueTypeOutput) ToDashboardParameterValueTypePtrOutput() DashboardParameterValueTypePtrOutput {
	return o.ToDashboardParameterValueTypePtrOutputWithContext(context.Background())
}

func (o DashboardParameterValueTypeOutput) ToDashboardParameterValueTypePtrOutputWithContext(ctx context.Context) DashboardParameterValueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardParameterValueType) *DashboardParameterValueType {
		return &v
	}).(DashboardParameterValueTypePtrOutput)
}

func (o DashboardParameterValueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardParameterValueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardParameterValueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardParameterValueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardParameterValueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardParameterValueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardParameterValueTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardParameterValueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterValueType)(nil)).Elem()
}

func (o DashboardParameterValueTypePtrOutput) ToDashboardParameterValueTypePtrOutput() DashboardParameterValueTypePtrOutput {
	return o
}

func (o DashboardParameterValueTypePtrOutput) ToDashboardParameterValueTypePtrOutputWithContext(ctx context.Context) DashboardParameterValueTypePtrOutput {
	return o
}

func (o DashboardParameterValueTypePtrOutput) Elem() DashboardParameterValueTypeOutput {
	return o.ApplyT(func(v *DashboardParameterValueType) DashboardParameterValueType {
		if v != nil {
			return *v
		}
		var ret DashboardParameterValueType
		return ret
	}).(DashboardParameterValueTypeOutput)
}

func (o DashboardParameterValueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardParameterValueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardParameterValueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardParameterValueTypeInput is an input type that accepts values of the DashboardParameterValueType enum
// A concrete instance of `DashboardParameterValueTypeInput` can be one of the following:
//
//	DashboardParameterValueTypeMultiValued
//	DashboardParameterValueTypeSingleValued
type DashboardParameterValueTypeInput interface {
	pulumi.Input

	ToDashboardParameterValueTypeOutput() DashboardParameterValueTypeOutput
	ToDashboardParameterValueTypeOutputWithContext(context.Context) DashboardParameterValueTypeOutput
}

var dashboardParameterValueTypePtrType = reflect.TypeOf((**DashboardParameterValueType)(nil)).Elem()

type DashboardParameterValueTypePtrInput interface {
	pulumi.Input

	ToDashboardParameterValueTypePtrOutput() DashboardParameterValueTypePtrOutput
	ToDashboardParameterValueTypePtrOutputWithContext(context.Context) DashboardParameterValueTypePtrOutput
}

type dashboardParameterValueTypePtr string

func DashboardParameterValueTypePtr(v string) DashboardParameterValueTypePtrInput {
	return (*dashboardParameterValueTypePtr)(&v)
}

func (*dashboardParameterValueTypePtr) ElementType() reflect.Type {
	return dashboardParameterValueTypePtrType
}

func (in *dashboardParameterValueTypePtr) ToDashboardParameterValueTypePtrOutput() DashboardParameterValueTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardParameterValueTypePtrOutput)
}

func (in *dashboardParameterValueTypePtr) ToDashboardParameterValueTypePtrOutputWithContext(ctx context.Context) DashboardParameterValueTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardParameterValueTypePtrOutput)
}

type DashboardPivotTableConditionalFormattingScopeRole string

const (
	DashboardPivotTableConditionalFormattingScopeRoleField      = DashboardPivotTableConditionalFormattingScopeRole("FIELD")
	DashboardPivotTableConditionalFormattingScopeRoleFieldTotal = DashboardPivotTableConditionalFormattingScopeRole("FIELD_TOTAL")
	DashboardPivotTableConditionalFormattingScopeRoleGrandTotal = DashboardPivotTableConditionalFormattingScopeRole("GRAND_TOTAL")
)

func (DashboardPivotTableConditionalFormattingScopeRole) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableConditionalFormattingScopeRole)(nil)).Elem()
}

func (e DashboardPivotTableConditionalFormattingScopeRole) ToDashboardPivotTableConditionalFormattingScopeRoleOutput() DashboardPivotTableConditionalFormattingScopeRoleOutput {
	return pulumi.ToOutput(e).(DashboardPivotTableConditionalFormattingScopeRoleOutput)
}

func (e DashboardPivotTableConditionalFormattingScopeRole) ToDashboardPivotTableConditionalFormattingScopeRoleOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardPivotTableConditionalFormattingScopeRoleOutput)
}

func (e DashboardPivotTableConditionalFormattingScopeRole) ToDashboardPivotTableConditionalFormattingScopeRolePtrOutput() DashboardPivotTableConditionalFormattingScopeRolePtrOutput {
	return e.ToDashboardPivotTableConditionalFormattingScopeRolePtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableConditionalFormattingScopeRole) ToDashboardPivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopeRolePtrOutput {
	return DashboardPivotTableConditionalFormattingScopeRole(e).ToDashboardPivotTableConditionalFormattingScopeRoleOutputWithContext(ctx).ToDashboardPivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx)
}

func (e DashboardPivotTableConditionalFormattingScopeRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableConditionalFormattingScopeRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableConditionalFormattingScopeRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableConditionalFormattingScopeRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardPivotTableConditionalFormattingScopeRoleOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableConditionalFormattingScopeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableConditionalFormattingScopeRole)(nil)).Elem()
}

func (o DashboardPivotTableConditionalFormattingScopeRoleOutput) ToDashboardPivotTableConditionalFormattingScopeRoleOutput() DashboardPivotTableConditionalFormattingScopeRoleOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingScopeRoleOutput) ToDashboardPivotTableConditionalFormattingScopeRoleOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopeRoleOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingScopeRoleOutput) ToDashboardPivotTableConditionalFormattingScopeRolePtrOutput() DashboardPivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ToDashboardPivotTableConditionalFormattingScopeRolePtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableConditionalFormattingScopeRoleOutput) ToDashboardPivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableConditionalFormattingScopeRole) *DashboardPivotTableConditionalFormattingScopeRole {
		return &v
	}).(DashboardPivotTableConditionalFormattingScopeRolePtrOutput)
}

func (o DashboardPivotTableConditionalFormattingScopeRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardPivotTableConditionalFormattingScopeRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableConditionalFormattingScopeRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardPivotTableConditionalFormattingScopeRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableConditionalFormattingScopeRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableConditionalFormattingScopeRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardPivotTableConditionalFormattingScopeRolePtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableConditionalFormattingScopeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableConditionalFormattingScopeRole)(nil)).Elem()
}

func (o DashboardPivotTableConditionalFormattingScopeRolePtrOutput) ToDashboardPivotTableConditionalFormattingScopeRolePtrOutput() DashboardPivotTableConditionalFormattingScopeRolePtrOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingScopeRolePtrOutput) ToDashboardPivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopeRolePtrOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingScopeRolePtrOutput) Elem() DashboardPivotTableConditionalFormattingScopeRoleOutput {
	return o.ApplyT(func(v *DashboardPivotTableConditionalFormattingScopeRole) DashboardPivotTableConditionalFormattingScopeRole {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableConditionalFormattingScopeRole
		return ret
	}).(DashboardPivotTableConditionalFormattingScopeRoleOutput)
}

func (o DashboardPivotTableConditionalFormattingScopeRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableConditionalFormattingScopeRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardPivotTableConditionalFormattingScopeRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardPivotTableConditionalFormattingScopeRoleInput is an input type that accepts values of the DashboardPivotTableConditionalFormattingScopeRole enum
// A concrete instance of `DashboardPivotTableConditionalFormattingScopeRoleInput` can be one of the following:
//
//	DashboardPivotTableConditionalFormattingScopeRoleField
//	DashboardPivotTableConditionalFormattingScopeRoleFieldTotal
//	DashboardPivotTableConditionalFormattingScopeRoleGrandTotal
type DashboardPivotTableConditionalFormattingScopeRoleInput interface {
	pulumi.Input

	ToDashboardPivotTableConditionalFormattingScopeRoleOutput() DashboardPivotTableConditionalFormattingScopeRoleOutput
	ToDashboardPivotTableConditionalFormattingScopeRoleOutputWithContext(context.Context) DashboardPivotTableConditionalFormattingScopeRoleOutput
}

var dashboardPivotTableConditionalFormattingScopeRolePtrType = reflect.TypeOf((**DashboardPivotTableConditionalFormattingScopeRole)(nil)).Elem()

type DashboardPivotTableConditionalFormattingScopeRolePtrInput interface {
	pulumi.Input

	ToDashboardPivotTableConditionalFormattingScopeRolePtrOutput() DashboardPivotTableConditionalFormattingScopeRolePtrOutput
	ToDashboardPivotTableConditionalFormattingScopeRolePtrOutputWithContext(context.Context) DashboardPivotTableConditionalFormattingScopeRolePtrOutput
}

type dashboardPivotTableConditionalFormattingScopeRolePtr string

func DashboardPivotTableConditionalFormattingScopeRolePtr(v string) DashboardPivotTableConditionalFormattingScopeRolePtrInput {
	return (*dashboardPivotTableConditionalFormattingScopeRolePtr)(&v)
}

func (*dashboardPivotTableConditionalFormattingScopeRolePtr) ElementType() reflect.Type {
	return dashboardPivotTableConditionalFormattingScopeRolePtrType
}

func (in *dashboardPivotTableConditionalFormattingScopeRolePtr) ToDashboardPivotTableConditionalFormattingScopeRolePtrOutput() DashboardPivotTableConditionalFormattingScopeRolePtrOutput {
	return pulumi.ToOutput(in).(DashboardPivotTableConditionalFormattingScopeRolePtrOutput)
}

func (in *dashboardPivotTableConditionalFormattingScopeRolePtr) ToDashboardPivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardPivotTableConditionalFormattingScopeRolePtrOutput)
}

type DashboardPivotTableDataPathType string

const (
	DashboardPivotTableDataPathTypeHierarchyRowsLayoutColumn = DashboardPivotTableDataPathType("HIERARCHY_ROWS_LAYOUT_COLUMN")
	DashboardPivotTableDataPathTypeMultipleRowMetricsColumn  = DashboardPivotTableDataPathType("MULTIPLE_ROW_METRICS_COLUMN")
	DashboardPivotTableDataPathTypeEmptyColumnHeader         = DashboardPivotTableDataPathType("EMPTY_COLUMN_HEADER")
	DashboardPivotTableDataPathTypeCountMetricColumn         = DashboardPivotTableDataPathType("COUNT_METRIC_COLUMN")
)

func (DashboardPivotTableDataPathType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableDataPathType)(nil)).Elem()
}

func (e DashboardPivotTableDataPathType) ToDashboardPivotTableDataPathTypeOutput() DashboardPivotTableDataPathTypeOutput {
	return pulumi.ToOutput(e).(DashboardPivotTableDataPathTypeOutput)
}

func (e DashboardPivotTableDataPathType) ToDashboardPivotTableDataPathTypeOutputWithContext(ctx context.Context) DashboardPivotTableDataPathTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardPivotTableDataPathTypeOutput)
}

func (e DashboardPivotTableDataPathType) ToDashboardPivotTableDataPathTypePtrOutput() DashboardPivotTableDataPathTypePtrOutput {
	return e.ToDashboardPivotTableDataPathTypePtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableDataPathType) ToDashboardPivotTableDataPathTypePtrOutputWithContext(ctx context.Context) DashboardPivotTableDataPathTypePtrOutput {
	return DashboardPivotTableDataPathType(e).ToDashboardPivotTableDataPathTypeOutputWithContext(ctx).ToDashboardPivotTableDataPathTypePtrOutputWithContext(ctx)
}

func (e DashboardPivotTableDataPathType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableDataPathType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableDataPathType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableDataPathType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardPivotTableDataPathTypeOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableDataPathTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableDataPathType)(nil)).Elem()
}

func (o DashboardPivotTableDataPathTypeOutput) ToDashboardPivotTableDataPathTypeOutput() DashboardPivotTableDataPathTypeOutput {
	return o
}

func (o DashboardPivotTableDataPathTypeOutput) ToDashboardPivotTableDataPathTypeOutputWithContext(ctx context.Context) DashboardPivotTableDataPathTypeOutput {
	return o
}

func (o DashboardPivotTableDataPathTypeOutput) ToDashboardPivotTableDataPathTypePtrOutput() DashboardPivotTableDataPathTypePtrOutput {
	return o.ToDashboardPivotTableDataPathTypePtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableDataPathTypeOutput) ToDashboardPivotTableDataPathTypePtrOutputWithContext(ctx context.Context) DashboardPivotTableDataPathTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableDataPathType) *DashboardPivotTableDataPathType {
		return &v
	}).(DashboardPivotTableDataPathTypePtrOutput)
}

func (o DashboardPivotTableDataPathTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardPivotTableDataPathTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableDataPathType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardPivotTableDataPathTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableDataPathTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableDataPathType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardPivotTableDataPathTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableDataPathTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableDataPathType)(nil)).Elem()
}

func (o DashboardPivotTableDataPathTypePtrOutput) ToDashboardPivotTableDataPathTypePtrOutput() DashboardPivotTableDataPathTypePtrOutput {
	return o
}

func (o DashboardPivotTableDataPathTypePtrOutput) ToDashboardPivotTableDataPathTypePtrOutputWithContext(ctx context.Context) DashboardPivotTableDataPathTypePtrOutput {
	return o
}

func (o DashboardPivotTableDataPathTypePtrOutput) Elem() DashboardPivotTableDataPathTypeOutput {
	return o.ApplyT(func(v *DashboardPivotTableDataPathType) DashboardPivotTableDataPathType {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableDataPathType
		return ret
	}).(DashboardPivotTableDataPathTypeOutput)
}

func (o DashboardPivotTableDataPathTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableDataPathTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardPivotTableDataPathType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardPivotTableDataPathTypeInput is an input type that accepts values of the DashboardPivotTableDataPathType enum
// A concrete instance of `DashboardPivotTableDataPathTypeInput` can be one of the following:
//
//	DashboardPivotTableDataPathTypeHierarchyRowsLayoutColumn
//	DashboardPivotTableDataPathTypeMultipleRowMetricsColumn
//	DashboardPivotTableDataPathTypeEmptyColumnHeader
//	DashboardPivotTableDataPathTypeCountMetricColumn
type DashboardPivotTableDataPathTypeInput interface {
	pulumi.Input

	ToDashboardPivotTableDataPathTypeOutput() DashboardPivotTableDataPathTypeOutput
	ToDashboardPivotTableDataPathTypeOutputWithContext(context.Context) DashboardPivotTableDataPathTypeOutput
}

var dashboardPivotTableDataPathTypePtrType = reflect.TypeOf((**DashboardPivotTableDataPathType)(nil)).Elem()

type DashboardPivotTableDataPathTypePtrInput interface {
	pulumi.Input

	ToDashboardPivotTableDataPathTypePtrOutput() DashboardPivotTableDataPathTypePtrOutput
	ToDashboardPivotTableDataPathTypePtrOutputWithContext(context.Context) DashboardPivotTableDataPathTypePtrOutput
}

type dashboardPivotTableDataPathTypePtr string

func DashboardPivotTableDataPathTypePtr(v string) DashboardPivotTableDataPathTypePtrInput {
	return (*dashboardPivotTableDataPathTypePtr)(&v)
}

func (*dashboardPivotTableDataPathTypePtr) ElementType() reflect.Type {
	return dashboardPivotTableDataPathTypePtrType
}

func (in *dashboardPivotTableDataPathTypePtr) ToDashboardPivotTableDataPathTypePtrOutput() DashboardPivotTableDataPathTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardPivotTableDataPathTypePtrOutput)
}

func (in *dashboardPivotTableDataPathTypePtr) ToDashboardPivotTableDataPathTypePtrOutputWithContext(ctx context.Context) DashboardPivotTableDataPathTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardPivotTableDataPathTypePtrOutput)
}

type DashboardPivotTableFieldCollapseState string

const (
	DashboardPivotTableFieldCollapseStateCollapsed = DashboardPivotTableFieldCollapseState("COLLAPSED")
	DashboardPivotTableFieldCollapseStateExpanded  = DashboardPivotTableFieldCollapseState("EXPANDED")
)

func (DashboardPivotTableFieldCollapseState) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableFieldCollapseState)(nil)).Elem()
}

func (e DashboardPivotTableFieldCollapseState) ToDashboardPivotTableFieldCollapseStateOutput() DashboardPivotTableFieldCollapseStateOutput {
	return pulumi.ToOutput(e).(DashboardPivotTableFieldCollapseStateOutput)
}

func (e DashboardPivotTableFieldCollapseState) ToDashboardPivotTableFieldCollapseStateOutputWithContext(ctx context.Context) DashboardPivotTableFieldCollapseStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardPivotTableFieldCollapseStateOutput)
}

func (e DashboardPivotTableFieldCollapseState) ToDashboardPivotTableFieldCollapseStatePtrOutput() DashboardPivotTableFieldCollapseStatePtrOutput {
	return e.ToDashboardPivotTableFieldCollapseStatePtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableFieldCollapseState) ToDashboardPivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldCollapseStatePtrOutput {
	return DashboardPivotTableFieldCollapseState(e).ToDashboardPivotTableFieldCollapseStateOutputWithContext(ctx).ToDashboardPivotTableFieldCollapseStatePtrOutputWithContext(ctx)
}

func (e DashboardPivotTableFieldCollapseState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableFieldCollapseState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableFieldCollapseState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableFieldCollapseState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardPivotTableFieldCollapseStateOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableFieldCollapseStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableFieldCollapseState)(nil)).Elem()
}

func (o DashboardPivotTableFieldCollapseStateOutput) ToDashboardPivotTableFieldCollapseStateOutput() DashboardPivotTableFieldCollapseStateOutput {
	return o
}

func (o DashboardPivotTableFieldCollapseStateOutput) ToDashboardPivotTableFieldCollapseStateOutputWithContext(ctx context.Context) DashboardPivotTableFieldCollapseStateOutput {
	return o
}

func (o DashboardPivotTableFieldCollapseStateOutput) ToDashboardPivotTableFieldCollapseStatePtrOutput() DashboardPivotTableFieldCollapseStatePtrOutput {
	return o.ToDashboardPivotTableFieldCollapseStatePtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableFieldCollapseStateOutput) ToDashboardPivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldCollapseStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableFieldCollapseState) *DashboardPivotTableFieldCollapseState {
		return &v
	}).(DashboardPivotTableFieldCollapseStatePtrOutput)
}

func (o DashboardPivotTableFieldCollapseStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardPivotTableFieldCollapseStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableFieldCollapseState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardPivotTableFieldCollapseStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableFieldCollapseStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableFieldCollapseState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardPivotTableFieldCollapseStatePtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableFieldCollapseStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableFieldCollapseState)(nil)).Elem()
}

func (o DashboardPivotTableFieldCollapseStatePtrOutput) ToDashboardPivotTableFieldCollapseStatePtrOutput() DashboardPivotTableFieldCollapseStatePtrOutput {
	return o
}

func (o DashboardPivotTableFieldCollapseStatePtrOutput) ToDashboardPivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldCollapseStatePtrOutput {
	return o
}

func (o DashboardPivotTableFieldCollapseStatePtrOutput) Elem() DashboardPivotTableFieldCollapseStateOutput {
	return o.ApplyT(func(v *DashboardPivotTableFieldCollapseState) DashboardPivotTableFieldCollapseState {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableFieldCollapseState
		return ret
	}).(DashboardPivotTableFieldCollapseStateOutput)
}

func (o DashboardPivotTableFieldCollapseStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableFieldCollapseStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardPivotTableFieldCollapseState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardPivotTableFieldCollapseStateInput is an input type that accepts values of the DashboardPivotTableFieldCollapseState enum
// A concrete instance of `DashboardPivotTableFieldCollapseStateInput` can be one of the following:
//
//	DashboardPivotTableFieldCollapseStateCollapsed
//	DashboardPivotTableFieldCollapseStateExpanded
type DashboardPivotTableFieldCollapseStateInput interface {
	pulumi.Input

	ToDashboardPivotTableFieldCollapseStateOutput() DashboardPivotTableFieldCollapseStateOutput
	ToDashboardPivotTableFieldCollapseStateOutputWithContext(context.Context) DashboardPivotTableFieldCollapseStateOutput
}

var dashboardPivotTableFieldCollapseStatePtrType = reflect.TypeOf((**DashboardPivotTableFieldCollapseState)(nil)).Elem()

type DashboardPivotTableFieldCollapseStatePtrInput interface {
	pulumi.Input

	ToDashboardPivotTableFieldCollapseStatePtrOutput() DashboardPivotTableFieldCollapseStatePtrOutput
	ToDashboardPivotTableFieldCollapseStatePtrOutputWithContext(context.Context) DashboardPivotTableFieldCollapseStatePtrOutput
}

type dashboardPivotTableFieldCollapseStatePtr string

func DashboardPivotTableFieldCollapseStatePtr(v string) DashboardPivotTableFieldCollapseStatePtrInput {
	return (*dashboardPivotTableFieldCollapseStatePtr)(&v)
}

func (*dashboardPivotTableFieldCollapseStatePtr) ElementType() reflect.Type {
	return dashboardPivotTableFieldCollapseStatePtrType
}

func (in *dashboardPivotTableFieldCollapseStatePtr) ToDashboardPivotTableFieldCollapseStatePtrOutput() DashboardPivotTableFieldCollapseStatePtrOutput {
	return pulumi.ToOutput(in).(DashboardPivotTableFieldCollapseStatePtrOutput)
}

func (in *dashboardPivotTableFieldCollapseStatePtr) ToDashboardPivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldCollapseStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardPivotTableFieldCollapseStatePtrOutput)
}

type DashboardPivotTableMetricPlacement string

const (
	DashboardPivotTableMetricPlacementRow    = DashboardPivotTableMetricPlacement("ROW")
	DashboardPivotTableMetricPlacementColumn = DashboardPivotTableMetricPlacement("COLUMN")
)

func (DashboardPivotTableMetricPlacement) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableMetricPlacement)(nil)).Elem()
}

func (e DashboardPivotTableMetricPlacement) ToDashboardPivotTableMetricPlacementOutput() DashboardPivotTableMetricPlacementOutput {
	return pulumi.ToOutput(e).(DashboardPivotTableMetricPlacementOutput)
}

func (e DashboardPivotTableMetricPlacement) ToDashboardPivotTableMetricPlacementOutputWithContext(ctx context.Context) DashboardPivotTableMetricPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardPivotTableMetricPlacementOutput)
}

func (e DashboardPivotTableMetricPlacement) ToDashboardPivotTableMetricPlacementPtrOutput() DashboardPivotTableMetricPlacementPtrOutput {
	return e.ToDashboardPivotTableMetricPlacementPtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableMetricPlacement) ToDashboardPivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) DashboardPivotTableMetricPlacementPtrOutput {
	return DashboardPivotTableMetricPlacement(e).ToDashboardPivotTableMetricPlacementOutputWithContext(ctx).ToDashboardPivotTableMetricPlacementPtrOutputWithContext(ctx)
}

func (e DashboardPivotTableMetricPlacement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableMetricPlacement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableMetricPlacement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableMetricPlacement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardPivotTableMetricPlacementOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableMetricPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableMetricPlacement)(nil)).Elem()
}

func (o DashboardPivotTableMetricPlacementOutput) ToDashboardPivotTableMetricPlacementOutput() DashboardPivotTableMetricPlacementOutput {
	return o
}

func (o DashboardPivotTableMetricPlacementOutput) ToDashboardPivotTableMetricPlacementOutputWithContext(ctx context.Context) DashboardPivotTableMetricPlacementOutput {
	return o
}

func (o DashboardPivotTableMetricPlacementOutput) ToDashboardPivotTableMetricPlacementPtrOutput() DashboardPivotTableMetricPlacementPtrOutput {
	return o.ToDashboardPivotTableMetricPlacementPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableMetricPlacementOutput) ToDashboardPivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) DashboardPivotTableMetricPlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableMetricPlacement) *DashboardPivotTableMetricPlacement {
		return &v
	}).(DashboardPivotTableMetricPlacementPtrOutput)
}

func (o DashboardPivotTableMetricPlacementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardPivotTableMetricPlacementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableMetricPlacement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardPivotTableMetricPlacementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableMetricPlacementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableMetricPlacement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardPivotTableMetricPlacementPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableMetricPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableMetricPlacement)(nil)).Elem()
}

func (o DashboardPivotTableMetricPlacementPtrOutput) ToDashboardPivotTableMetricPlacementPtrOutput() DashboardPivotTableMetricPlacementPtrOutput {
	return o
}

func (o DashboardPivotTableMetricPlacementPtrOutput) ToDashboardPivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) DashboardPivotTableMetricPlacementPtrOutput {
	return o
}

func (o DashboardPivotTableMetricPlacementPtrOutput) Elem() DashboardPivotTableMetricPlacementOutput {
	return o.ApplyT(func(v *DashboardPivotTableMetricPlacement) DashboardPivotTableMetricPlacement {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableMetricPlacement
		return ret
	}).(DashboardPivotTableMetricPlacementOutput)
}

func (o DashboardPivotTableMetricPlacementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableMetricPlacementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardPivotTableMetricPlacement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardPivotTableMetricPlacementInput is an input type that accepts values of the DashboardPivotTableMetricPlacement enum
// A concrete instance of `DashboardPivotTableMetricPlacementInput` can be one of the following:
//
//	DashboardPivotTableMetricPlacementRow
//	DashboardPivotTableMetricPlacementColumn
type DashboardPivotTableMetricPlacementInput interface {
	pulumi.Input

	ToDashboardPivotTableMetricPlacementOutput() DashboardPivotTableMetricPlacementOutput
	ToDashboardPivotTableMetricPlacementOutputWithContext(context.Context) DashboardPivotTableMetricPlacementOutput
}

var dashboardPivotTableMetricPlacementPtrType = reflect.TypeOf((**DashboardPivotTableMetricPlacement)(nil)).Elem()

type DashboardPivotTableMetricPlacementPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableMetricPlacementPtrOutput() DashboardPivotTableMetricPlacementPtrOutput
	ToDashboardPivotTableMetricPlacementPtrOutputWithContext(context.Context) DashboardPivotTableMetricPlacementPtrOutput
}

type dashboardPivotTableMetricPlacementPtr string

func DashboardPivotTableMetricPlacementPtr(v string) DashboardPivotTableMetricPlacementPtrInput {
	return (*dashboardPivotTableMetricPlacementPtr)(&v)
}

func (*dashboardPivotTableMetricPlacementPtr) ElementType() reflect.Type {
	return dashboardPivotTableMetricPlacementPtrType
}

func (in *dashboardPivotTableMetricPlacementPtr) ToDashboardPivotTableMetricPlacementPtrOutput() DashboardPivotTableMetricPlacementPtrOutput {
	return pulumi.ToOutput(in).(DashboardPivotTableMetricPlacementPtrOutput)
}

func (in *dashboardPivotTableMetricPlacementPtr) ToDashboardPivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) DashboardPivotTableMetricPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardPivotTableMetricPlacementPtrOutput)
}

type DashboardPivotTableRowsLayout string

const (
	DashboardPivotTableRowsLayoutTabular   = DashboardPivotTableRowsLayout("TABULAR")
	DashboardPivotTableRowsLayoutHierarchy = DashboardPivotTableRowsLayout("HIERARCHY")
)

func (DashboardPivotTableRowsLayout) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableRowsLayout)(nil)).Elem()
}

func (e DashboardPivotTableRowsLayout) ToDashboardPivotTableRowsLayoutOutput() DashboardPivotTableRowsLayoutOutput {
	return pulumi.ToOutput(e).(DashboardPivotTableRowsLayoutOutput)
}

func (e DashboardPivotTableRowsLayout) ToDashboardPivotTableRowsLayoutOutputWithContext(ctx context.Context) DashboardPivotTableRowsLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardPivotTableRowsLayoutOutput)
}

func (e DashboardPivotTableRowsLayout) ToDashboardPivotTableRowsLayoutPtrOutput() DashboardPivotTableRowsLayoutPtrOutput {
	return e.ToDashboardPivotTableRowsLayoutPtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableRowsLayout) ToDashboardPivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) DashboardPivotTableRowsLayoutPtrOutput {
	return DashboardPivotTableRowsLayout(e).ToDashboardPivotTableRowsLayoutOutputWithContext(ctx).ToDashboardPivotTableRowsLayoutPtrOutputWithContext(ctx)
}

func (e DashboardPivotTableRowsLayout) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableRowsLayout) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableRowsLayout) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableRowsLayout) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardPivotTableRowsLayoutOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableRowsLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableRowsLayout)(nil)).Elem()
}

func (o DashboardPivotTableRowsLayoutOutput) ToDashboardPivotTableRowsLayoutOutput() DashboardPivotTableRowsLayoutOutput {
	return o
}

func (o DashboardPivotTableRowsLayoutOutput) ToDashboardPivotTableRowsLayoutOutputWithContext(ctx context.Context) DashboardPivotTableRowsLayoutOutput {
	return o
}

func (o DashboardPivotTableRowsLayoutOutput) ToDashboardPivotTableRowsLayoutPtrOutput() DashboardPivotTableRowsLayoutPtrOutput {
	return o.ToDashboardPivotTableRowsLayoutPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableRowsLayoutOutput) ToDashboardPivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) DashboardPivotTableRowsLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableRowsLayout) *DashboardPivotTableRowsLayout {
		return &v
	}).(DashboardPivotTableRowsLayoutPtrOutput)
}

func (o DashboardPivotTableRowsLayoutOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardPivotTableRowsLayoutOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableRowsLayout) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardPivotTableRowsLayoutOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableRowsLayoutOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableRowsLayout) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardPivotTableRowsLayoutPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableRowsLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableRowsLayout)(nil)).Elem()
}

func (o DashboardPivotTableRowsLayoutPtrOutput) ToDashboardPivotTableRowsLayoutPtrOutput() DashboardPivotTableRowsLayoutPtrOutput {
	return o
}

func (o DashboardPivotTableRowsLayoutPtrOutput) ToDashboardPivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) DashboardPivotTableRowsLayoutPtrOutput {
	return o
}

func (o DashboardPivotTableRowsLayoutPtrOutput) Elem() DashboardPivotTableRowsLayoutOutput {
	return o.ApplyT(func(v *DashboardPivotTableRowsLayout) DashboardPivotTableRowsLayout {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableRowsLayout
		return ret
	}).(DashboardPivotTableRowsLayoutOutput)
}

func (o DashboardPivotTableRowsLayoutPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableRowsLayoutPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardPivotTableRowsLayout) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardPivotTableRowsLayoutInput is an input type that accepts values of the DashboardPivotTableRowsLayout enum
// A concrete instance of `DashboardPivotTableRowsLayoutInput` can be one of the following:
//
//	DashboardPivotTableRowsLayoutTabular
//	DashboardPivotTableRowsLayoutHierarchy
type DashboardPivotTableRowsLayoutInput interface {
	pulumi.Input

	ToDashboardPivotTableRowsLayoutOutput() DashboardPivotTableRowsLayoutOutput
	ToDashboardPivotTableRowsLayoutOutputWithContext(context.Context) DashboardPivotTableRowsLayoutOutput
}

var dashboardPivotTableRowsLayoutPtrType = reflect.TypeOf((**DashboardPivotTableRowsLayout)(nil)).Elem()

type DashboardPivotTableRowsLayoutPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableRowsLayoutPtrOutput() DashboardPivotTableRowsLayoutPtrOutput
	ToDashboardPivotTableRowsLayoutPtrOutputWithContext(context.Context) DashboardPivotTableRowsLayoutPtrOutput
}

type dashboardPivotTableRowsLayoutPtr string

func DashboardPivotTableRowsLayoutPtr(v string) DashboardPivotTableRowsLayoutPtrInput {
	return (*dashboardPivotTableRowsLayoutPtr)(&v)
}

func (*dashboardPivotTableRowsLayoutPtr) ElementType() reflect.Type {
	return dashboardPivotTableRowsLayoutPtrType
}

func (in *dashboardPivotTableRowsLayoutPtr) ToDashboardPivotTableRowsLayoutPtrOutput() DashboardPivotTableRowsLayoutPtrOutput {
	return pulumi.ToOutput(in).(DashboardPivotTableRowsLayoutPtrOutput)
}

func (in *dashboardPivotTableRowsLayoutPtr) ToDashboardPivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) DashboardPivotTableRowsLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardPivotTableRowsLayoutPtrOutput)
}

type DashboardPivotTableSubtotalLevel string

const (
	DashboardPivotTableSubtotalLevelAll    = DashboardPivotTableSubtotalLevel("ALL")
	DashboardPivotTableSubtotalLevelCustom = DashboardPivotTableSubtotalLevel("CUSTOM")
	DashboardPivotTableSubtotalLevelLast   = DashboardPivotTableSubtotalLevel("LAST")
)

func (DashboardPivotTableSubtotalLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableSubtotalLevel)(nil)).Elem()
}

func (e DashboardPivotTableSubtotalLevel) ToDashboardPivotTableSubtotalLevelOutput() DashboardPivotTableSubtotalLevelOutput {
	return pulumi.ToOutput(e).(DashboardPivotTableSubtotalLevelOutput)
}

func (e DashboardPivotTableSubtotalLevel) ToDashboardPivotTableSubtotalLevelOutputWithContext(ctx context.Context) DashboardPivotTableSubtotalLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardPivotTableSubtotalLevelOutput)
}

func (e DashboardPivotTableSubtotalLevel) ToDashboardPivotTableSubtotalLevelPtrOutput() DashboardPivotTableSubtotalLevelPtrOutput {
	return e.ToDashboardPivotTableSubtotalLevelPtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableSubtotalLevel) ToDashboardPivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) DashboardPivotTableSubtotalLevelPtrOutput {
	return DashboardPivotTableSubtotalLevel(e).ToDashboardPivotTableSubtotalLevelOutputWithContext(ctx).ToDashboardPivotTableSubtotalLevelPtrOutputWithContext(ctx)
}

func (e DashboardPivotTableSubtotalLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableSubtotalLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPivotTableSubtotalLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardPivotTableSubtotalLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardPivotTableSubtotalLevelOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableSubtotalLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableSubtotalLevel)(nil)).Elem()
}

func (o DashboardPivotTableSubtotalLevelOutput) ToDashboardPivotTableSubtotalLevelOutput() DashboardPivotTableSubtotalLevelOutput {
	return o
}

func (o DashboardPivotTableSubtotalLevelOutput) ToDashboardPivotTableSubtotalLevelOutputWithContext(ctx context.Context) DashboardPivotTableSubtotalLevelOutput {
	return o
}

func (o DashboardPivotTableSubtotalLevelOutput) ToDashboardPivotTableSubtotalLevelPtrOutput() DashboardPivotTableSubtotalLevelPtrOutput {
	return o.ToDashboardPivotTableSubtotalLevelPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableSubtotalLevelOutput) ToDashboardPivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) DashboardPivotTableSubtotalLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableSubtotalLevel) *DashboardPivotTableSubtotalLevel {
		return &v
	}).(DashboardPivotTableSubtotalLevelPtrOutput)
}

func (o DashboardPivotTableSubtotalLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardPivotTableSubtotalLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableSubtotalLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardPivotTableSubtotalLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableSubtotalLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPivotTableSubtotalLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardPivotTableSubtotalLevelPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableSubtotalLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableSubtotalLevel)(nil)).Elem()
}

func (o DashboardPivotTableSubtotalLevelPtrOutput) ToDashboardPivotTableSubtotalLevelPtrOutput() DashboardPivotTableSubtotalLevelPtrOutput {
	return o
}

func (o DashboardPivotTableSubtotalLevelPtrOutput) ToDashboardPivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) DashboardPivotTableSubtotalLevelPtrOutput {
	return o
}

func (o DashboardPivotTableSubtotalLevelPtrOutput) Elem() DashboardPivotTableSubtotalLevelOutput {
	return o.ApplyT(func(v *DashboardPivotTableSubtotalLevel) DashboardPivotTableSubtotalLevel {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableSubtotalLevel
		return ret
	}).(DashboardPivotTableSubtotalLevelOutput)
}

func (o DashboardPivotTableSubtotalLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableSubtotalLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardPivotTableSubtotalLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardPivotTableSubtotalLevelInput is an input type that accepts values of the DashboardPivotTableSubtotalLevel enum
// A concrete instance of `DashboardPivotTableSubtotalLevelInput` can be one of the following:
//
//	DashboardPivotTableSubtotalLevelAll
//	DashboardPivotTableSubtotalLevelCustom
//	DashboardPivotTableSubtotalLevelLast
type DashboardPivotTableSubtotalLevelInput interface {
	pulumi.Input

	ToDashboardPivotTableSubtotalLevelOutput() DashboardPivotTableSubtotalLevelOutput
	ToDashboardPivotTableSubtotalLevelOutputWithContext(context.Context) DashboardPivotTableSubtotalLevelOutput
}

var dashboardPivotTableSubtotalLevelPtrType = reflect.TypeOf((**DashboardPivotTableSubtotalLevel)(nil)).Elem()

type DashboardPivotTableSubtotalLevelPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableSubtotalLevelPtrOutput() DashboardPivotTableSubtotalLevelPtrOutput
	ToDashboardPivotTableSubtotalLevelPtrOutputWithContext(context.Context) DashboardPivotTableSubtotalLevelPtrOutput
}

type dashboardPivotTableSubtotalLevelPtr string

func DashboardPivotTableSubtotalLevelPtr(v string) DashboardPivotTableSubtotalLevelPtrInput {
	return (*dashboardPivotTableSubtotalLevelPtr)(&v)
}

func (*dashboardPivotTableSubtotalLevelPtr) ElementType() reflect.Type {
	return dashboardPivotTableSubtotalLevelPtrType
}

func (in *dashboardPivotTableSubtotalLevelPtr) ToDashboardPivotTableSubtotalLevelPtrOutput() DashboardPivotTableSubtotalLevelPtrOutput {
	return pulumi.ToOutput(in).(DashboardPivotTableSubtotalLevelPtrOutput)
}

func (in *dashboardPivotTableSubtotalLevelPtr) ToDashboardPivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) DashboardPivotTableSubtotalLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardPivotTableSubtotalLevelPtrOutput)
}

type DashboardPrimaryValueDisplayType string

const (
	DashboardPrimaryValueDisplayTypeHidden     = DashboardPrimaryValueDisplayType("HIDDEN")
	DashboardPrimaryValueDisplayTypeComparison = DashboardPrimaryValueDisplayType("COMPARISON")
	DashboardPrimaryValueDisplayTypeActual     = DashboardPrimaryValueDisplayType("ACTUAL")
)

func (DashboardPrimaryValueDisplayType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPrimaryValueDisplayType)(nil)).Elem()
}

func (e DashboardPrimaryValueDisplayType) ToDashboardPrimaryValueDisplayTypeOutput() DashboardPrimaryValueDisplayTypeOutput {
	return pulumi.ToOutput(e).(DashboardPrimaryValueDisplayTypeOutput)
}

func (e DashboardPrimaryValueDisplayType) ToDashboardPrimaryValueDisplayTypeOutputWithContext(ctx context.Context) DashboardPrimaryValueDisplayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardPrimaryValueDisplayTypeOutput)
}

func (e DashboardPrimaryValueDisplayType) ToDashboardPrimaryValueDisplayTypePtrOutput() DashboardPrimaryValueDisplayTypePtrOutput {
	return e.ToDashboardPrimaryValueDisplayTypePtrOutputWithContext(context.Background())
}

func (e DashboardPrimaryValueDisplayType) ToDashboardPrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) DashboardPrimaryValueDisplayTypePtrOutput {
	return DashboardPrimaryValueDisplayType(e).ToDashboardPrimaryValueDisplayTypeOutputWithContext(ctx).ToDashboardPrimaryValueDisplayTypePtrOutputWithContext(ctx)
}

func (e DashboardPrimaryValueDisplayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPrimaryValueDisplayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardPrimaryValueDisplayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardPrimaryValueDisplayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardPrimaryValueDisplayTypeOutput struct{ *pulumi.OutputState }

func (DashboardPrimaryValueDisplayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPrimaryValueDisplayType)(nil)).Elem()
}

func (o DashboardPrimaryValueDisplayTypeOutput) ToDashboardPrimaryValueDisplayTypeOutput() DashboardPrimaryValueDisplayTypeOutput {
	return o
}

func (o DashboardPrimaryValueDisplayTypeOutput) ToDashboardPrimaryValueDisplayTypeOutputWithContext(ctx context.Context) DashboardPrimaryValueDisplayTypeOutput {
	return o
}

func (o DashboardPrimaryValueDisplayTypeOutput) ToDashboardPrimaryValueDisplayTypePtrOutput() DashboardPrimaryValueDisplayTypePtrOutput {
	return o.ToDashboardPrimaryValueDisplayTypePtrOutputWithContext(context.Background())
}

func (o DashboardPrimaryValueDisplayTypeOutput) ToDashboardPrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) DashboardPrimaryValueDisplayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPrimaryValueDisplayType) *DashboardPrimaryValueDisplayType {
		return &v
	}).(DashboardPrimaryValueDisplayTypePtrOutput)
}

func (o DashboardPrimaryValueDisplayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardPrimaryValueDisplayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPrimaryValueDisplayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardPrimaryValueDisplayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPrimaryValueDisplayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardPrimaryValueDisplayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardPrimaryValueDisplayTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardPrimaryValueDisplayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPrimaryValueDisplayType)(nil)).Elem()
}

func (o DashboardPrimaryValueDisplayTypePtrOutput) ToDashboardPrimaryValueDisplayTypePtrOutput() DashboardPrimaryValueDisplayTypePtrOutput {
	return o
}

func (o DashboardPrimaryValueDisplayTypePtrOutput) ToDashboardPrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) DashboardPrimaryValueDisplayTypePtrOutput {
	return o
}

func (o DashboardPrimaryValueDisplayTypePtrOutput) Elem() DashboardPrimaryValueDisplayTypeOutput {
	return o.ApplyT(func(v *DashboardPrimaryValueDisplayType) DashboardPrimaryValueDisplayType {
		if v != nil {
			return *v
		}
		var ret DashboardPrimaryValueDisplayType
		return ret
	}).(DashboardPrimaryValueDisplayTypeOutput)
}

func (o DashboardPrimaryValueDisplayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardPrimaryValueDisplayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardPrimaryValueDisplayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardPrimaryValueDisplayTypeInput is an input type that accepts values of the DashboardPrimaryValueDisplayType enum
// A concrete instance of `DashboardPrimaryValueDisplayTypeInput` can be one of the following:
//
//	DashboardPrimaryValueDisplayTypeHidden
//	DashboardPrimaryValueDisplayTypeComparison
//	DashboardPrimaryValueDisplayTypeActual
type DashboardPrimaryValueDisplayTypeInput interface {
	pulumi.Input

	ToDashboardPrimaryValueDisplayTypeOutput() DashboardPrimaryValueDisplayTypeOutput
	ToDashboardPrimaryValueDisplayTypeOutputWithContext(context.Context) DashboardPrimaryValueDisplayTypeOutput
}

var dashboardPrimaryValueDisplayTypePtrType = reflect.TypeOf((**DashboardPrimaryValueDisplayType)(nil)).Elem()

type DashboardPrimaryValueDisplayTypePtrInput interface {
	pulumi.Input

	ToDashboardPrimaryValueDisplayTypePtrOutput() DashboardPrimaryValueDisplayTypePtrOutput
	ToDashboardPrimaryValueDisplayTypePtrOutputWithContext(context.Context) DashboardPrimaryValueDisplayTypePtrOutput
}

type dashboardPrimaryValueDisplayTypePtr string

func DashboardPrimaryValueDisplayTypePtr(v string) DashboardPrimaryValueDisplayTypePtrInput {
	return (*dashboardPrimaryValueDisplayTypePtr)(&v)
}

func (*dashboardPrimaryValueDisplayTypePtr) ElementType() reflect.Type {
	return dashboardPrimaryValueDisplayTypePtrType
}

func (in *dashboardPrimaryValueDisplayTypePtr) ToDashboardPrimaryValueDisplayTypePtrOutput() DashboardPrimaryValueDisplayTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardPrimaryValueDisplayTypePtrOutput)
}

func (in *dashboardPrimaryValueDisplayTypePtr) ToDashboardPrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) DashboardPrimaryValueDisplayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardPrimaryValueDisplayTypePtrOutput)
}

type DashboardRadarChartAxesRangeScale string

const (
	DashboardRadarChartAxesRangeScaleAuto        = DashboardRadarChartAxesRangeScale("AUTO")
	DashboardRadarChartAxesRangeScaleIndependent = DashboardRadarChartAxesRangeScale("INDEPENDENT")
	DashboardRadarChartAxesRangeScaleShared      = DashboardRadarChartAxesRangeScale("SHARED")
)

func (DashboardRadarChartAxesRangeScale) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartAxesRangeScale)(nil)).Elem()
}

func (e DashboardRadarChartAxesRangeScale) ToDashboardRadarChartAxesRangeScaleOutput() DashboardRadarChartAxesRangeScaleOutput {
	return pulumi.ToOutput(e).(DashboardRadarChartAxesRangeScaleOutput)
}

func (e DashboardRadarChartAxesRangeScale) ToDashboardRadarChartAxesRangeScaleOutputWithContext(ctx context.Context) DashboardRadarChartAxesRangeScaleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardRadarChartAxesRangeScaleOutput)
}

func (e DashboardRadarChartAxesRangeScale) ToDashboardRadarChartAxesRangeScalePtrOutput() DashboardRadarChartAxesRangeScalePtrOutput {
	return e.ToDashboardRadarChartAxesRangeScalePtrOutputWithContext(context.Background())
}

func (e DashboardRadarChartAxesRangeScale) ToDashboardRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) DashboardRadarChartAxesRangeScalePtrOutput {
	return DashboardRadarChartAxesRangeScale(e).ToDashboardRadarChartAxesRangeScaleOutputWithContext(ctx).ToDashboardRadarChartAxesRangeScalePtrOutputWithContext(ctx)
}

func (e DashboardRadarChartAxesRangeScale) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardRadarChartAxesRangeScale) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardRadarChartAxesRangeScale) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardRadarChartAxesRangeScale) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardRadarChartAxesRangeScaleOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartAxesRangeScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartAxesRangeScale)(nil)).Elem()
}

func (o DashboardRadarChartAxesRangeScaleOutput) ToDashboardRadarChartAxesRangeScaleOutput() DashboardRadarChartAxesRangeScaleOutput {
	return o
}

func (o DashboardRadarChartAxesRangeScaleOutput) ToDashboardRadarChartAxesRangeScaleOutputWithContext(ctx context.Context) DashboardRadarChartAxesRangeScaleOutput {
	return o
}

func (o DashboardRadarChartAxesRangeScaleOutput) ToDashboardRadarChartAxesRangeScalePtrOutput() DashboardRadarChartAxesRangeScalePtrOutput {
	return o.ToDashboardRadarChartAxesRangeScalePtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartAxesRangeScaleOutput) ToDashboardRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) DashboardRadarChartAxesRangeScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRadarChartAxesRangeScale) *DashboardRadarChartAxesRangeScale {
		return &v
	}).(DashboardRadarChartAxesRangeScalePtrOutput)
}

func (o DashboardRadarChartAxesRangeScaleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardRadarChartAxesRangeScaleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardRadarChartAxesRangeScale) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardRadarChartAxesRangeScaleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartAxesRangeScaleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardRadarChartAxesRangeScale) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardRadarChartAxesRangeScalePtrOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartAxesRangeScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartAxesRangeScale)(nil)).Elem()
}

func (o DashboardRadarChartAxesRangeScalePtrOutput) ToDashboardRadarChartAxesRangeScalePtrOutput() DashboardRadarChartAxesRangeScalePtrOutput {
	return o
}

func (o DashboardRadarChartAxesRangeScalePtrOutput) ToDashboardRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) DashboardRadarChartAxesRangeScalePtrOutput {
	return o
}

func (o DashboardRadarChartAxesRangeScalePtrOutput) Elem() DashboardRadarChartAxesRangeScaleOutput {
	return o.ApplyT(func(v *DashboardRadarChartAxesRangeScale) DashboardRadarChartAxesRangeScale {
		if v != nil {
			return *v
		}
		var ret DashboardRadarChartAxesRangeScale
		return ret
	}).(DashboardRadarChartAxesRangeScaleOutput)
}

func (o DashboardRadarChartAxesRangeScalePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartAxesRangeScalePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardRadarChartAxesRangeScale) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardRadarChartAxesRangeScaleInput is an input type that accepts values of the DashboardRadarChartAxesRangeScale enum
// A concrete instance of `DashboardRadarChartAxesRangeScaleInput` can be one of the following:
//
//	DashboardRadarChartAxesRangeScaleAuto
//	DashboardRadarChartAxesRangeScaleIndependent
//	DashboardRadarChartAxesRangeScaleShared
type DashboardRadarChartAxesRangeScaleInput interface {
	pulumi.Input

	ToDashboardRadarChartAxesRangeScaleOutput() DashboardRadarChartAxesRangeScaleOutput
	ToDashboardRadarChartAxesRangeScaleOutputWithContext(context.Context) DashboardRadarChartAxesRangeScaleOutput
}

var dashboardRadarChartAxesRangeScalePtrType = reflect.TypeOf((**DashboardRadarChartAxesRangeScale)(nil)).Elem()

type DashboardRadarChartAxesRangeScalePtrInput interface {
	pulumi.Input

	ToDashboardRadarChartAxesRangeScalePtrOutput() DashboardRadarChartAxesRangeScalePtrOutput
	ToDashboardRadarChartAxesRangeScalePtrOutputWithContext(context.Context) DashboardRadarChartAxesRangeScalePtrOutput
}

type dashboardRadarChartAxesRangeScalePtr string

func DashboardRadarChartAxesRangeScalePtr(v string) DashboardRadarChartAxesRangeScalePtrInput {
	return (*dashboardRadarChartAxesRangeScalePtr)(&v)
}

func (*dashboardRadarChartAxesRangeScalePtr) ElementType() reflect.Type {
	return dashboardRadarChartAxesRangeScalePtrType
}

func (in *dashboardRadarChartAxesRangeScalePtr) ToDashboardRadarChartAxesRangeScalePtrOutput() DashboardRadarChartAxesRangeScalePtrOutput {
	return pulumi.ToOutput(in).(DashboardRadarChartAxesRangeScalePtrOutput)
}

func (in *dashboardRadarChartAxesRangeScalePtr) ToDashboardRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) DashboardRadarChartAxesRangeScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardRadarChartAxesRangeScalePtrOutput)
}

type DashboardRadarChartShape string

const (
	DashboardRadarChartShapeCircle  = DashboardRadarChartShape("CIRCLE")
	DashboardRadarChartShapePolygon = DashboardRadarChartShape("POLYGON")
)

func (DashboardRadarChartShape) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartShape)(nil)).Elem()
}

func (e DashboardRadarChartShape) ToDashboardRadarChartShapeOutput() DashboardRadarChartShapeOutput {
	return pulumi.ToOutput(e).(DashboardRadarChartShapeOutput)
}

func (e DashboardRadarChartShape) ToDashboardRadarChartShapeOutputWithContext(ctx context.Context) DashboardRadarChartShapeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardRadarChartShapeOutput)
}

func (e DashboardRadarChartShape) ToDashboardRadarChartShapePtrOutput() DashboardRadarChartShapePtrOutput {
	return e.ToDashboardRadarChartShapePtrOutputWithContext(context.Background())
}

func (e DashboardRadarChartShape) ToDashboardRadarChartShapePtrOutputWithContext(ctx context.Context) DashboardRadarChartShapePtrOutput {
	return DashboardRadarChartShape(e).ToDashboardRadarChartShapeOutputWithContext(ctx).ToDashboardRadarChartShapePtrOutputWithContext(ctx)
}

func (e DashboardRadarChartShape) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardRadarChartShape) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardRadarChartShape) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardRadarChartShape) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardRadarChartShapeOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartShape)(nil)).Elem()
}

func (o DashboardRadarChartShapeOutput) ToDashboardRadarChartShapeOutput() DashboardRadarChartShapeOutput {
	return o
}

func (o DashboardRadarChartShapeOutput) ToDashboardRadarChartShapeOutputWithContext(ctx context.Context) DashboardRadarChartShapeOutput {
	return o
}

func (o DashboardRadarChartShapeOutput) ToDashboardRadarChartShapePtrOutput() DashboardRadarChartShapePtrOutput {
	return o.ToDashboardRadarChartShapePtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartShapeOutput) ToDashboardRadarChartShapePtrOutputWithContext(ctx context.Context) DashboardRadarChartShapePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRadarChartShape) *DashboardRadarChartShape {
		return &v
	}).(DashboardRadarChartShapePtrOutput)
}

func (o DashboardRadarChartShapeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardRadarChartShapeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardRadarChartShape) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardRadarChartShapeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartShapeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardRadarChartShape) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardRadarChartShapePtrOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartShapePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartShape)(nil)).Elem()
}

func (o DashboardRadarChartShapePtrOutput) ToDashboardRadarChartShapePtrOutput() DashboardRadarChartShapePtrOutput {
	return o
}

func (o DashboardRadarChartShapePtrOutput) ToDashboardRadarChartShapePtrOutputWithContext(ctx context.Context) DashboardRadarChartShapePtrOutput {
	return o
}

func (o DashboardRadarChartShapePtrOutput) Elem() DashboardRadarChartShapeOutput {
	return o.ApplyT(func(v *DashboardRadarChartShape) DashboardRadarChartShape {
		if v != nil {
			return *v
		}
		var ret DashboardRadarChartShape
		return ret
	}).(DashboardRadarChartShapeOutput)
}

func (o DashboardRadarChartShapePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartShapePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardRadarChartShape) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardRadarChartShapeInput is an input type that accepts values of the DashboardRadarChartShape enum
// A concrete instance of `DashboardRadarChartShapeInput` can be one of the following:
//
//	DashboardRadarChartShapeCircle
//	DashboardRadarChartShapePolygon
type DashboardRadarChartShapeInput interface {
	pulumi.Input

	ToDashboardRadarChartShapeOutput() DashboardRadarChartShapeOutput
	ToDashboardRadarChartShapeOutputWithContext(context.Context) DashboardRadarChartShapeOutput
}

var dashboardRadarChartShapePtrType = reflect.TypeOf((**DashboardRadarChartShape)(nil)).Elem()

type DashboardRadarChartShapePtrInput interface {
	pulumi.Input

	ToDashboardRadarChartShapePtrOutput() DashboardRadarChartShapePtrOutput
	ToDashboardRadarChartShapePtrOutputWithContext(context.Context) DashboardRadarChartShapePtrOutput
}

type dashboardRadarChartShapePtr string

func DashboardRadarChartShapePtr(v string) DashboardRadarChartShapePtrInput {
	return (*dashboardRadarChartShapePtr)(&v)
}

func (*dashboardRadarChartShapePtr) ElementType() reflect.Type {
	return dashboardRadarChartShapePtrType
}

func (in *dashboardRadarChartShapePtr) ToDashboardRadarChartShapePtrOutput() DashboardRadarChartShapePtrOutput {
	return pulumi.ToOutput(in).(DashboardRadarChartShapePtrOutput)
}

func (in *dashboardRadarChartShapePtr) ToDashboardRadarChartShapePtrOutputWithContext(ctx context.Context) DashboardRadarChartShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardRadarChartShapePtrOutput)
}

type DashboardReferenceLineLabelHorizontalPosition string

const (
	DashboardReferenceLineLabelHorizontalPositionLeft   = DashboardReferenceLineLabelHorizontalPosition("LEFT")
	DashboardReferenceLineLabelHorizontalPositionCenter = DashboardReferenceLineLabelHorizontalPosition("CENTER")
	DashboardReferenceLineLabelHorizontalPositionRight  = DashboardReferenceLineLabelHorizontalPosition("RIGHT")
)

func (DashboardReferenceLineLabelHorizontalPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineLabelHorizontalPosition)(nil)).Elem()
}

func (e DashboardReferenceLineLabelHorizontalPosition) ToDashboardReferenceLineLabelHorizontalPositionOutput() DashboardReferenceLineLabelHorizontalPositionOutput {
	return pulumi.ToOutput(e).(DashboardReferenceLineLabelHorizontalPositionOutput)
}

func (e DashboardReferenceLineLabelHorizontalPosition) ToDashboardReferenceLineLabelHorizontalPositionOutputWithContext(ctx context.Context) DashboardReferenceLineLabelHorizontalPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardReferenceLineLabelHorizontalPositionOutput)
}

func (e DashboardReferenceLineLabelHorizontalPosition) ToDashboardReferenceLineLabelHorizontalPositionPtrOutput() DashboardReferenceLineLabelHorizontalPositionPtrOutput {
	return e.ToDashboardReferenceLineLabelHorizontalPositionPtrOutputWithContext(context.Background())
}

func (e DashboardReferenceLineLabelHorizontalPosition) ToDashboardReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelHorizontalPositionPtrOutput {
	return DashboardReferenceLineLabelHorizontalPosition(e).ToDashboardReferenceLineLabelHorizontalPositionOutputWithContext(ctx).ToDashboardReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx)
}

func (e DashboardReferenceLineLabelHorizontalPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardReferenceLineLabelHorizontalPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardReferenceLineLabelHorizontalPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardReferenceLineLabelHorizontalPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardReferenceLineLabelHorizontalPositionOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineLabelHorizontalPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineLabelHorizontalPosition)(nil)).Elem()
}

func (o DashboardReferenceLineLabelHorizontalPositionOutput) ToDashboardReferenceLineLabelHorizontalPositionOutput() DashboardReferenceLineLabelHorizontalPositionOutput {
	return o
}

func (o DashboardReferenceLineLabelHorizontalPositionOutput) ToDashboardReferenceLineLabelHorizontalPositionOutputWithContext(ctx context.Context) DashboardReferenceLineLabelHorizontalPositionOutput {
	return o
}

func (o DashboardReferenceLineLabelHorizontalPositionOutput) ToDashboardReferenceLineLabelHorizontalPositionPtrOutput() DashboardReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ToDashboardReferenceLineLabelHorizontalPositionPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineLabelHorizontalPositionOutput) ToDashboardReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLineLabelHorizontalPosition) *DashboardReferenceLineLabelHorizontalPosition {
		return &v
	}).(DashboardReferenceLineLabelHorizontalPositionPtrOutput)
}

func (o DashboardReferenceLineLabelHorizontalPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardReferenceLineLabelHorizontalPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardReferenceLineLabelHorizontalPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardReferenceLineLabelHorizontalPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineLabelHorizontalPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardReferenceLineLabelHorizontalPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardReferenceLineLabelHorizontalPositionPtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineLabelHorizontalPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineLabelHorizontalPosition)(nil)).Elem()
}

func (o DashboardReferenceLineLabelHorizontalPositionPtrOutput) ToDashboardReferenceLineLabelHorizontalPositionPtrOutput() DashboardReferenceLineLabelHorizontalPositionPtrOutput {
	return o
}

func (o DashboardReferenceLineLabelHorizontalPositionPtrOutput) ToDashboardReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelHorizontalPositionPtrOutput {
	return o
}

func (o DashboardReferenceLineLabelHorizontalPositionPtrOutput) Elem() DashboardReferenceLineLabelHorizontalPositionOutput {
	return o.ApplyT(func(v *DashboardReferenceLineLabelHorizontalPosition) DashboardReferenceLineLabelHorizontalPosition {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLineLabelHorizontalPosition
		return ret
	}).(DashboardReferenceLineLabelHorizontalPositionOutput)
}

func (o DashboardReferenceLineLabelHorizontalPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineLabelHorizontalPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardReferenceLineLabelHorizontalPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardReferenceLineLabelHorizontalPositionInput is an input type that accepts values of the DashboardReferenceLineLabelHorizontalPosition enum
// A concrete instance of `DashboardReferenceLineLabelHorizontalPositionInput` can be one of the following:
//
//	DashboardReferenceLineLabelHorizontalPositionLeft
//	DashboardReferenceLineLabelHorizontalPositionCenter
//	DashboardReferenceLineLabelHorizontalPositionRight
type DashboardReferenceLineLabelHorizontalPositionInput interface {
	pulumi.Input

	ToDashboardReferenceLineLabelHorizontalPositionOutput() DashboardReferenceLineLabelHorizontalPositionOutput
	ToDashboardReferenceLineLabelHorizontalPositionOutputWithContext(context.Context) DashboardReferenceLineLabelHorizontalPositionOutput
}

var dashboardReferenceLineLabelHorizontalPositionPtrType = reflect.TypeOf((**DashboardReferenceLineLabelHorizontalPosition)(nil)).Elem()

type DashboardReferenceLineLabelHorizontalPositionPtrInput interface {
	pulumi.Input

	ToDashboardReferenceLineLabelHorizontalPositionPtrOutput() DashboardReferenceLineLabelHorizontalPositionPtrOutput
	ToDashboardReferenceLineLabelHorizontalPositionPtrOutputWithContext(context.Context) DashboardReferenceLineLabelHorizontalPositionPtrOutput
}

type dashboardReferenceLineLabelHorizontalPositionPtr string

func DashboardReferenceLineLabelHorizontalPositionPtr(v string) DashboardReferenceLineLabelHorizontalPositionPtrInput {
	return (*dashboardReferenceLineLabelHorizontalPositionPtr)(&v)
}

func (*dashboardReferenceLineLabelHorizontalPositionPtr) ElementType() reflect.Type {
	return dashboardReferenceLineLabelHorizontalPositionPtrType
}

func (in *dashboardReferenceLineLabelHorizontalPositionPtr) ToDashboardReferenceLineLabelHorizontalPositionPtrOutput() DashboardReferenceLineLabelHorizontalPositionPtrOutput {
	return pulumi.ToOutput(in).(DashboardReferenceLineLabelHorizontalPositionPtrOutput)
}

func (in *dashboardReferenceLineLabelHorizontalPositionPtr) ToDashboardReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelHorizontalPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardReferenceLineLabelHorizontalPositionPtrOutput)
}

type DashboardReferenceLineLabelVerticalPosition string

const (
	DashboardReferenceLineLabelVerticalPositionAbove = DashboardReferenceLineLabelVerticalPosition("ABOVE")
	DashboardReferenceLineLabelVerticalPositionBelow = DashboardReferenceLineLabelVerticalPosition("BELOW")
)

func (DashboardReferenceLineLabelVerticalPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineLabelVerticalPosition)(nil)).Elem()
}

func (e DashboardReferenceLineLabelVerticalPosition) ToDashboardReferenceLineLabelVerticalPositionOutput() DashboardReferenceLineLabelVerticalPositionOutput {
	return pulumi.ToOutput(e).(DashboardReferenceLineLabelVerticalPositionOutput)
}

func (e DashboardReferenceLineLabelVerticalPosition) ToDashboardReferenceLineLabelVerticalPositionOutputWithContext(ctx context.Context) DashboardReferenceLineLabelVerticalPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardReferenceLineLabelVerticalPositionOutput)
}

func (e DashboardReferenceLineLabelVerticalPosition) ToDashboardReferenceLineLabelVerticalPositionPtrOutput() DashboardReferenceLineLabelVerticalPositionPtrOutput {
	return e.ToDashboardReferenceLineLabelVerticalPositionPtrOutputWithContext(context.Background())
}

func (e DashboardReferenceLineLabelVerticalPosition) ToDashboardReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelVerticalPositionPtrOutput {
	return DashboardReferenceLineLabelVerticalPosition(e).ToDashboardReferenceLineLabelVerticalPositionOutputWithContext(ctx).ToDashboardReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx)
}

func (e DashboardReferenceLineLabelVerticalPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardReferenceLineLabelVerticalPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardReferenceLineLabelVerticalPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardReferenceLineLabelVerticalPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardReferenceLineLabelVerticalPositionOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineLabelVerticalPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineLabelVerticalPosition)(nil)).Elem()
}

func (o DashboardReferenceLineLabelVerticalPositionOutput) ToDashboardReferenceLineLabelVerticalPositionOutput() DashboardReferenceLineLabelVerticalPositionOutput {
	return o
}

func (o DashboardReferenceLineLabelVerticalPositionOutput) ToDashboardReferenceLineLabelVerticalPositionOutputWithContext(ctx context.Context) DashboardReferenceLineLabelVerticalPositionOutput {
	return o
}

func (o DashboardReferenceLineLabelVerticalPositionOutput) ToDashboardReferenceLineLabelVerticalPositionPtrOutput() DashboardReferenceLineLabelVerticalPositionPtrOutput {
	return o.ToDashboardReferenceLineLabelVerticalPositionPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineLabelVerticalPositionOutput) ToDashboardReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelVerticalPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLineLabelVerticalPosition) *DashboardReferenceLineLabelVerticalPosition {
		return &v
	}).(DashboardReferenceLineLabelVerticalPositionPtrOutput)
}

func (o DashboardReferenceLineLabelVerticalPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardReferenceLineLabelVerticalPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardReferenceLineLabelVerticalPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardReferenceLineLabelVerticalPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineLabelVerticalPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardReferenceLineLabelVerticalPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardReferenceLineLabelVerticalPositionPtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineLabelVerticalPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineLabelVerticalPosition)(nil)).Elem()
}

func (o DashboardReferenceLineLabelVerticalPositionPtrOutput) ToDashboardReferenceLineLabelVerticalPositionPtrOutput() DashboardReferenceLineLabelVerticalPositionPtrOutput {
	return o
}

func (o DashboardReferenceLineLabelVerticalPositionPtrOutput) ToDashboardReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelVerticalPositionPtrOutput {
	return o
}

func (o DashboardReferenceLineLabelVerticalPositionPtrOutput) Elem() DashboardReferenceLineLabelVerticalPositionOutput {
	return o.ApplyT(func(v *DashboardReferenceLineLabelVerticalPosition) DashboardReferenceLineLabelVerticalPosition {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLineLabelVerticalPosition
		return ret
	}).(DashboardReferenceLineLabelVerticalPositionOutput)
}

func (o DashboardReferenceLineLabelVerticalPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineLabelVerticalPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardReferenceLineLabelVerticalPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardReferenceLineLabelVerticalPositionInput is an input type that accepts values of the DashboardReferenceLineLabelVerticalPosition enum
// A concrete instance of `DashboardReferenceLineLabelVerticalPositionInput` can be one of the following:
//
//	DashboardReferenceLineLabelVerticalPositionAbove
//	DashboardReferenceLineLabelVerticalPositionBelow
type DashboardReferenceLineLabelVerticalPositionInput interface {
	pulumi.Input

	ToDashboardReferenceLineLabelVerticalPositionOutput() DashboardReferenceLineLabelVerticalPositionOutput
	ToDashboardReferenceLineLabelVerticalPositionOutputWithContext(context.Context) DashboardReferenceLineLabelVerticalPositionOutput
}

var dashboardReferenceLineLabelVerticalPositionPtrType = reflect.TypeOf((**DashboardReferenceLineLabelVerticalPosition)(nil)).Elem()

type DashboardReferenceLineLabelVerticalPositionPtrInput interface {
	pulumi.Input

	ToDashboardReferenceLineLabelVerticalPositionPtrOutput() DashboardReferenceLineLabelVerticalPositionPtrOutput
	ToDashboardReferenceLineLabelVerticalPositionPtrOutputWithContext(context.Context) DashboardReferenceLineLabelVerticalPositionPtrOutput
}

type dashboardReferenceLineLabelVerticalPositionPtr string

func DashboardReferenceLineLabelVerticalPositionPtr(v string) DashboardReferenceLineLabelVerticalPositionPtrInput {
	return (*dashboardReferenceLineLabelVerticalPositionPtr)(&v)
}

func (*dashboardReferenceLineLabelVerticalPositionPtr) ElementType() reflect.Type {
	return dashboardReferenceLineLabelVerticalPositionPtrType
}

func (in *dashboardReferenceLineLabelVerticalPositionPtr) ToDashboardReferenceLineLabelVerticalPositionPtrOutput() DashboardReferenceLineLabelVerticalPositionPtrOutput {
	return pulumi.ToOutput(in).(DashboardReferenceLineLabelVerticalPositionPtrOutput)
}

func (in *dashboardReferenceLineLabelVerticalPositionPtr) ToDashboardReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelVerticalPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardReferenceLineLabelVerticalPositionPtrOutput)
}

type DashboardReferenceLinePatternType string

const (
	DashboardReferenceLinePatternTypeSolid  = DashboardReferenceLinePatternType("SOLID")
	DashboardReferenceLinePatternTypeDashed = DashboardReferenceLinePatternType("DASHED")
	DashboardReferenceLinePatternTypeDotted = DashboardReferenceLinePatternType("DOTTED")
)

func (DashboardReferenceLinePatternType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLinePatternType)(nil)).Elem()
}

func (e DashboardReferenceLinePatternType) ToDashboardReferenceLinePatternTypeOutput() DashboardReferenceLinePatternTypeOutput {
	return pulumi.ToOutput(e).(DashboardReferenceLinePatternTypeOutput)
}

func (e DashboardReferenceLinePatternType) ToDashboardReferenceLinePatternTypeOutputWithContext(ctx context.Context) DashboardReferenceLinePatternTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardReferenceLinePatternTypeOutput)
}

func (e DashboardReferenceLinePatternType) ToDashboardReferenceLinePatternTypePtrOutput() DashboardReferenceLinePatternTypePtrOutput {
	return e.ToDashboardReferenceLinePatternTypePtrOutputWithContext(context.Background())
}

func (e DashboardReferenceLinePatternType) ToDashboardReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) DashboardReferenceLinePatternTypePtrOutput {
	return DashboardReferenceLinePatternType(e).ToDashboardReferenceLinePatternTypeOutputWithContext(ctx).ToDashboardReferenceLinePatternTypePtrOutputWithContext(ctx)
}

func (e DashboardReferenceLinePatternType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardReferenceLinePatternType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardReferenceLinePatternType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardReferenceLinePatternType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardReferenceLinePatternTypeOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLinePatternTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLinePatternType)(nil)).Elem()
}

func (o DashboardReferenceLinePatternTypeOutput) ToDashboardReferenceLinePatternTypeOutput() DashboardReferenceLinePatternTypeOutput {
	return o
}

func (o DashboardReferenceLinePatternTypeOutput) ToDashboardReferenceLinePatternTypeOutputWithContext(ctx context.Context) DashboardReferenceLinePatternTypeOutput {
	return o
}

func (o DashboardReferenceLinePatternTypeOutput) ToDashboardReferenceLinePatternTypePtrOutput() DashboardReferenceLinePatternTypePtrOutput {
	return o.ToDashboardReferenceLinePatternTypePtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLinePatternTypeOutput) ToDashboardReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) DashboardReferenceLinePatternTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLinePatternType) *DashboardReferenceLinePatternType {
		return &v
	}).(DashboardReferenceLinePatternTypePtrOutput)
}

func (o DashboardReferenceLinePatternTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardReferenceLinePatternTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardReferenceLinePatternType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardReferenceLinePatternTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLinePatternTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardReferenceLinePatternType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardReferenceLinePatternTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLinePatternTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLinePatternType)(nil)).Elem()
}

func (o DashboardReferenceLinePatternTypePtrOutput) ToDashboardReferenceLinePatternTypePtrOutput() DashboardReferenceLinePatternTypePtrOutput {
	return o
}

func (o DashboardReferenceLinePatternTypePtrOutput) ToDashboardReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) DashboardReferenceLinePatternTypePtrOutput {
	return o
}

func (o DashboardReferenceLinePatternTypePtrOutput) Elem() DashboardReferenceLinePatternTypeOutput {
	return o.ApplyT(func(v *DashboardReferenceLinePatternType) DashboardReferenceLinePatternType {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLinePatternType
		return ret
	}).(DashboardReferenceLinePatternTypeOutput)
}

func (o DashboardReferenceLinePatternTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLinePatternTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardReferenceLinePatternType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardReferenceLinePatternTypeInput is an input type that accepts values of the DashboardReferenceLinePatternType enum
// A concrete instance of `DashboardReferenceLinePatternTypeInput` can be one of the following:
//
//	DashboardReferenceLinePatternTypeSolid
//	DashboardReferenceLinePatternTypeDashed
//	DashboardReferenceLinePatternTypeDotted
type DashboardReferenceLinePatternTypeInput interface {
	pulumi.Input

	ToDashboardReferenceLinePatternTypeOutput() DashboardReferenceLinePatternTypeOutput
	ToDashboardReferenceLinePatternTypeOutputWithContext(context.Context) DashboardReferenceLinePatternTypeOutput
}

var dashboardReferenceLinePatternTypePtrType = reflect.TypeOf((**DashboardReferenceLinePatternType)(nil)).Elem()

type DashboardReferenceLinePatternTypePtrInput interface {
	pulumi.Input

	ToDashboardReferenceLinePatternTypePtrOutput() DashboardReferenceLinePatternTypePtrOutput
	ToDashboardReferenceLinePatternTypePtrOutputWithContext(context.Context) DashboardReferenceLinePatternTypePtrOutput
}

type dashboardReferenceLinePatternTypePtr string

func DashboardReferenceLinePatternTypePtr(v string) DashboardReferenceLinePatternTypePtrInput {
	return (*dashboardReferenceLinePatternTypePtr)(&v)
}

func (*dashboardReferenceLinePatternTypePtr) ElementType() reflect.Type {
	return dashboardReferenceLinePatternTypePtrType
}

func (in *dashboardReferenceLinePatternTypePtr) ToDashboardReferenceLinePatternTypePtrOutput() DashboardReferenceLinePatternTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardReferenceLinePatternTypePtrOutput)
}

func (in *dashboardReferenceLinePatternTypePtr) ToDashboardReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) DashboardReferenceLinePatternTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardReferenceLinePatternTypePtrOutput)
}

type DashboardReferenceLineSeriesType string

const (
	DashboardReferenceLineSeriesTypeBar  = DashboardReferenceLineSeriesType("BAR")
	DashboardReferenceLineSeriesTypeLine = DashboardReferenceLineSeriesType("LINE")
)

func (DashboardReferenceLineSeriesType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineSeriesType)(nil)).Elem()
}

func (e DashboardReferenceLineSeriesType) ToDashboardReferenceLineSeriesTypeOutput() DashboardReferenceLineSeriesTypeOutput {
	return pulumi.ToOutput(e).(DashboardReferenceLineSeriesTypeOutput)
}

func (e DashboardReferenceLineSeriesType) ToDashboardReferenceLineSeriesTypeOutputWithContext(ctx context.Context) DashboardReferenceLineSeriesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardReferenceLineSeriesTypeOutput)
}

func (e DashboardReferenceLineSeriesType) ToDashboardReferenceLineSeriesTypePtrOutput() DashboardReferenceLineSeriesTypePtrOutput {
	return e.ToDashboardReferenceLineSeriesTypePtrOutputWithContext(context.Background())
}

func (e DashboardReferenceLineSeriesType) ToDashboardReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) DashboardReferenceLineSeriesTypePtrOutput {
	return DashboardReferenceLineSeriesType(e).ToDashboardReferenceLineSeriesTypeOutputWithContext(ctx).ToDashboardReferenceLineSeriesTypePtrOutputWithContext(ctx)
}

func (e DashboardReferenceLineSeriesType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardReferenceLineSeriesType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardReferenceLineSeriesType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardReferenceLineSeriesType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardReferenceLineSeriesTypeOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineSeriesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineSeriesType)(nil)).Elem()
}

func (o DashboardReferenceLineSeriesTypeOutput) ToDashboardReferenceLineSeriesTypeOutput() DashboardReferenceLineSeriesTypeOutput {
	return o
}

func (o DashboardReferenceLineSeriesTypeOutput) ToDashboardReferenceLineSeriesTypeOutputWithContext(ctx context.Context) DashboardReferenceLineSeriesTypeOutput {
	return o
}

func (o DashboardReferenceLineSeriesTypeOutput) ToDashboardReferenceLineSeriesTypePtrOutput() DashboardReferenceLineSeriesTypePtrOutput {
	return o.ToDashboardReferenceLineSeriesTypePtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineSeriesTypeOutput) ToDashboardReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) DashboardReferenceLineSeriesTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLineSeriesType) *DashboardReferenceLineSeriesType {
		return &v
	}).(DashboardReferenceLineSeriesTypePtrOutput)
}

func (o DashboardReferenceLineSeriesTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardReferenceLineSeriesTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardReferenceLineSeriesType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardReferenceLineSeriesTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineSeriesTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardReferenceLineSeriesType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardReferenceLineSeriesTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineSeriesTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineSeriesType)(nil)).Elem()
}

func (o DashboardReferenceLineSeriesTypePtrOutput) ToDashboardReferenceLineSeriesTypePtrOutput() DashboardReferenceLineSeriesTypePtrOutput {
	return o
}

func (o DashboardReferenceLineSeriesTypePtrOutput) ToDashboardReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) DashboardReferenceLineSeriesTypePtrOutput {
	return o
}

func (o DashboardReferenceLineSeriesTypePtrOutput) Elem() DashboardReferenceLineSeriesTypeOutput {
	return o.ApplyT(func(v *DashboardReferenceLineSeriesType) DashboardReferenceLineSeriesType {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLineSeriesType
		return ret
	}).(DashboardReferenceLineSeriesTypeOutput)
}

func (o DashboardReferenceLineSeriesTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineSeriesTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardReferenceLineSeriesType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardReferenceLineSeriesTypeInput is an input type that accepts values of the DashboardReferenceLineSeriesType enum
// A concrete instance of `DashboardReferenceLineSeriesTypeInput` can be one of the following:
//
//	DashboardReferenceLineSeriesTypeBar
//	DashboardReferenceLineSeriesTypeLine
type DashboardReferenceLineSeriesTypeInput interface {
	pulumi.Input

	ToDashboardReferenceLineSeriesTypeOutput() DashboardReferenceLineSeriesTypeOutput
	ToDashboardReferenceLineSeriesTypeOutputWithContext(context.Context) DashboardReferenceLineSeriesTypeOutput
}

var dashboardReferenceLineSeriesTypePtrType = reflect.TypeOf((**DashboardReferenceLineSeriesType)(nil)).Elem()

type DashboardReferenceLineSeriesTypePtrInput interface {
	pulumi.Input

	ToDashboardReferenceLineSeriesTypePtrOutput() DashboardReferenceLineSeriesTypePtrOutput
	ToDashboardReferenceLineSeriesTypePtrOutputWithContext(context.Context) DashboardReferenceLineSeriesTypePtrOutput
}

type dashboardReferenceLineSeriesTypePtr string

func DashboardReferenceLineSeriesTypePtr(v string) DashboardReferenceLineSeriesTypePtrInput {
	return (*dashboardReferenceLineSeriesTypePtr)(&v)
}

func (*dashboardReferenceLineSeriesTypePtr) ElementType() reflect.Type {
	return dashboardReferenceLineSeriesTypePtrType
}

func (in *dashboardReferenceLineSeriesTypePtr) ToDashboardReferenceLineSeriesTypePtrOutput() DashboardReferenceLineSeriesTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardReferenceLineSeriesTypePtrOutput)
}

func (in *dashboardReferenceLineSeriesTypePtr) ToDashboardReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) DashboardReferenceLineSeriesTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardReferenceLineSeriesTypePtrOutput)
}

type DashboardReferenceLineValueLabelRelativePosition string

const (
	DashboardReferenceLineValueLabelRelativePositionBeforeCustomLabel = DashboardReferenceLineValueLabelRelativePosition("BEFORE_CUSTOM_LABEL")
	DashboardReferenceLineValueLabelRelativePositionAfterCustomLabel  = DashboardReferenceLineValueLabelRelativePosition("AFTER_CUSTOM_LABEL")
)

func (DashboardReferenceLineValueLabelRelativePosition) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineValueLabelRelativePosition)(nil)).Elem()
}

func (e DashboardReferenceLineValueLabelRelativePosition) ToDashboardReferenceLineValueLabelRelativePositionOutput() DashboardReferenceLineValueLabelRelativePositionOutput {
	return pulumi.ToOutput(e).(DashboardReferenceLineValueLabelRelativePositionOutput)
}

func (e DashboardReferenceLineValueLabelRelativePosition) ToDashboardReferenceLineValueLabelRelativePositionOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelRelativePositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardReferenceLineValueLabelRelativePositionOutput)
}

func (e DashboardReferenceLineValueLabelRelativePosition) ToDashboardReferenceLineValueLabelRelativePositionPtrOutput() DashboardReferenceLineValueLabelRelativePositionPtrOutput {
	return e.ToDashboardReferenceLineValueLabelRelativePositionPtrOutputWithContext(context.Background())
}

func (e DashboardReferenceLineValueLabelRelativePosition) ToDashboardReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelRelativePositionPtrOutput {
	return DashboardReferenceLineValueLabelRelativePosition(e).ToDashboardReferenceLineValueLabelRelativePositionOutputWithContext(ctx).ToDashboardReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx)
}

func (e DashboardReferenceLineValueLabelRelativePosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardReferenceLineValueLabelRelativePosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardReferenceLineValueLabelRelativePosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardReferenceLineValueLabelRelativePosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardReferenceLineValueLabelRelativePositionOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineValueLabelRelativePositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineValueLabelRelativePosition)(nil)).Elem()
}

func (o DashboardReferenceLineValueLabelRelativePositionOutput) ToDashboardReferenceLineValueLabelRelativePositionOutput() DashboardReferenceLineValueLabelRelativePositionOutput {
	return o
}

func (o DashboardReferenceLineValueLabelRelativePositionOutput) ToDashboardReferenceLineValueLabelRelativePositionOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelRelativePositionOutput {
	return o
}

func (o DashboardReferenceLineValueLabelRelativePositionOutput) ToDashboardReferenceLineValueLabelRelativePositionPtrOutput() DashboardReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ToDashboardReferenceLineValueLabelRelativePositionPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineValueLabelRelativePositionOutput) ToDashboardReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLineValueLabelRelativePosition) *DashboardReferenceLineValueLabelRelativePosition {
		return &v
	}).(DashboardReferenceLineValueLabelRelativePositionPtrOutput)
}

func (o DashboardReferenceLineValueLabelRelativePositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardReferenceLineValueLabelRelativePositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardReferenceLineValueLabelRelativePosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardReferenceLineValueLabelRelativePositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineValueLabelRelativePositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardReferenceLineValueLabelRelativePosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardReferenceLineValueLabelRelativePositionPtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineValueLabelRelativePositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineValueLabelRelativePosition)(nil)).Elem()
}

func (o DashboardReferenceLineValueLabelRelativePositionPtrOutput) ToDashboardReferenceLineValueLabelRelativePositionPtrOutput() DashboardReferenceLineValueLabelRelativePositionPtrOutput {
	return o
}

func (o DashboardReferenceLineValueLabelRelativePositionPtrOutput) ToDashboardReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelRelativePositionPtrOutput {
	return o
}

func (o DashboardReferenceLineValueLabelRelativePositionPtrOutput) Elem() DashboardReferenceLineValueLabelRelativePositionOutput {
	return o.ApplyT(func(v *DashboardReferenceLineValueLabelRelativePosition) DashboardReferenceLineValueLabelRelativePosition {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLineValueLabelRelativePosition
		return ret
	}).(DashboardReferenceLineValueLabelRelativePositionOutput)
}

func (o DashboardReferenceLineValueLabelRelativePositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineValueLabelRelativePositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardReferenceLineValueLabelRelativePosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardReferenceLineValueLabelRelativePositionInput is an input type that accepts values of the DashboardReferenceLineValueLabelRelativePosition enum
// A concrete instance of `DashboardReferenceLineValueLabelRelativePositionInput` can be one of the following:
//
//	DashboardReferenceLineValueLabelRelativePositionBeforeCustomLabel
//	DashboardReferenceLineValueLabelRelativePositionAfterCustomLabel
type DashboardReferenceLineValueLabelRelativePositionInput interface {
	pulumi.Input

	ToDashboardReferenceLineValueLabelRelativePositionOutput() DashboardReferenceLineValueLabelRelativePositionOutput
	ToDashboardReferenceLineValueLabelRelativePositionOutputWithContext(context.Context) DashboardReferenceLineValueLabelRelativePositionOutput
}

var dashboardReferenceLineValueLabelRelativePositionPtrType = reflect.TypeOf((**DashboardReferenceLineValueLabelRelativePosition)(nil)).Elem()

type DashboardReferenceLineValueLabelRelativePositionPtrInput interface {
	pulumi.Input

	ToDashboardReferenceLineValueLabelRelativePositionPtrOutput() DashboardReferenceLineValueLabelRelativePositionPtrOutput
	ToDashboardReferenceLineValueLabelRelativePositionPtrOutputWithContext(context.Context) DashboardReferenceLineValueLabelRelativePositionPtrOutput
}

type dashboardReferenceLineValueLabelRelativePositionPtr string

func DashboardReferenceLineValueLabelRelativePositionPtr(v string) DashboardReferenceLineValueLabelRelativePositionPtrInput {
	return (*dashboardReferenceLineValueLabelRelativePositionPtr)(&v)
}

func (*dashboardReferenceLineValueLabelRelativePositionPtr) ElementType() reflect.Type {
	return dashboardReferenceLineValueLabelRelativePositionPtrType
}

func (in *dashboardReferenceLineValueLabelRelativePositionPtr) ToDashboardReferenceLineValueLabelRelativePositionPtrOutput() DashboardReferenceLineValueLabelRelativePositionPtrOutput {
	return pulumi.ToOutput(in).(DashboardReferenceLineValueLabelRelativePositionPtrOutput)
}

func (in *dashboardReferenceLineValueLabelRelativePositionPtr) ToDashboardReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelRelativePositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardReferenceLineValueLabelRelativePositionPtrOutput)
}

type DashboardRelativeDateType string

const (
	DashboardRelativeDateTypePrevious = DashboardRelativeDateType("PREVIOUS")
	DashboardRelativeDateTypeThis     = DashboardRelativeDateType("THIS")
	DashboardRelativeDateTypeLast     = DashboardRelativeDateType("LAST")
	DashboardRelativeDateTypeNow      = DashboardRelativeDateType("NOW")
	DashboardRelativeDateTypeNext     = DashboardRelativeDateType("NEXT")
)

func (DashboardRelativeDateType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRelativeDateType)(nil)).Elem()
}

func (e DashboardRelativeDateType) ToDashboardRelativeDateTypeOutput() DashboardRelativeDateTypeOutput {
	return pulumi.ToOutput(e).(DashboardRelativeDateTypeOutput)
}

func (e DashboardRelativeDateType) ToDashboardRelativeDateTypeOutputWithContext(ctx context.Context) DashboardRelativeDateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardRelativeDateTypeOutput)
}

func (e DashboardRelativeDateType) ToDashboardRelativeDateTypePtrOutput() DashboardRelativeDateTypePtrOutput {
	return e.ToDashboardRelativeDateTypePtrOutputWithContext(context.Background())
}

func (e DashboardRelativeDateType) ToDashboardRelativeDateTypePtrOutputWithContext(ctx context.Context) DashboardRelativeDateTypePtrOutput {
	return DashboardRelativeDateType(e).ToDashboardRelativeDateTypeOutputWithContext(ctx).ToDashboardRelativeDateTypePtrOutputWithContext(ctx)
}

func (e DashboardRelativeDateType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardRelativeDateType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardRelativeDateType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardRelativeDateType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardRelativeDateTypeOutput struct{ *pulumi.OutputState }

func (DashboardRelativeDateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRelativeDateType)(nil)).Elem()
}

func (o DashboardRelativeDateTypeOutput) ToDashboardRelativeDateTypeOutput() DashboardRelativeDateTypeOutput {
	return o
}

func (o DashboardRelativeDateTypeOutput) ToDashboardRelativeDateTypeOutputWithContext(ctx context.Context) DashboardRelativeDateTypeOutput {
	return o
}

func (o DashboardRelativeDateTypeOutput) ToDashboardRelativeDateTypePtrOutput() DashboardRelativeDateTypePtrOutput {
	return o.ToDashboardRelativeDateTypePtrOutputWithContext(context.Background())
}

func (o DashboardRelativeDateTypeOutput) ToDashboardRelativeDateTypePtrOutputWithContext(ctx context.Context) DashboardRelativeDateTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRelativeDateType) *DashboardRelativeDateType {
		return &v
	}).(DashboardRelativeDateTypePtrOutput)
}

func (o DashboardRelativeDateTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardRelativeDateTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardRelativeDateType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardRelativeDateTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardRelativeDateTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardRelativeDateType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardRelativeDateTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardRelativeDateTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRelativeDateType)(nil)).Elem()
}

func (o DashboardRelativeDateTypePtrOutput) ToDashboardRelativeDateTypePtrOutput() DashboardRelativeDateTypePtrOutput {
	return o
}

func (o DashboardRelativeDateTypePtrOutput) ToDashboardRelativeDateTypePtrOutputWithContext(ctx context.Context) DashboardRelativeDateTypePtrOutput {
	return o
}

func (o DashboardRelativeDateTypePtrOutput) Elem() DashboardRelativeDateTypeOutput {
	return o.ApplyT(func(v *DashboardRelativeDateType) DashboardRelativeDateType {
		if v != nil {
			return *v
		}
		var ret DashboardRelativeDateType
		return ret
	}).(DashboardRelativeDateTypeOutput)
}

func (o DashboardRelativeDateTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardRelativeDateTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardRelativeDateType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardRelativeDateTypeInput is an input type that accepts values of the DashboardRelativeDateType enum
// A concrete instance of `DashboardRelativeDateTypeInput` can be one of the following:
//
//	DashboardRelativeDateTypePrevious
//	DashboardRelativeDateTypeThis
//	DashboardRelativeDateTypeLast
//	DashboardRelativeDateTypeNow
//	DashboardRelativeDateTypeNext
type DashboardRelativeDateTypeInput interface {
	pulumi.Input

	ToDashboardRelativeDateTypeOutput() DashboardRelativeDateTypeOutput
	ToDashboardRelativeDateTypeOutputWithContext(context.Context) DashboardRelativeDateTypeOutput
}

var dashboardRelativeDateTypePtrType = reflect.TypeOf((**DashboardRelativeDateType)(nil)).Elem()

type DashboardRelativeDateTypePtrInput interface {
	pulumi.Input

	ToDashboardRelativeDateTypePtrOutput() DashboardRelativeDateTypePtrOutput
	ToDashboardRelativeDateTypePtrOutputWithContext(context.Context) DashboardRelativeDateTypePtrOutput
}

type dashboardRelativeDateTypePtr string

func DashboardRelativeDateTypePtr(v string) DashboardRelativeDateTypePtrInput {
	return (*dashboardRelativeDateTypePtr)(&v)
}

func (*dashboardRelativeDateTypePtr) ElementType() reflect.Type {
	return dashboardRelativeDateTypePtrType
}

func (in *dashboardRelativeDateTypePtr) ToDashboardRelativeDateTypePtrOutput() DashboardRelativeDateTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardRelativeDateTypePtrOutput)
}

func (in *dashboardRelativeDateTypePtr) ToDashboardRelativeDateTypePtrOutputWithContext(ctx context.Context) DashboardRelativeDateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardRelativeDateTypePtrOutput)
}

type DashboardRelativeFontSize string

const (
	DashboardRelativeFontSizeExtraSmall = DashboardRelativeFontSize("EXTRA_SMALL")
	DashboardRelativeFontSizeSmall      = DashboardRelativeFontSize("SMALL")
	DashboardRelativeFontSizeMedium     = DashboardRelativeFontSize("MEDIUM")
	DashboardRelativeFontSizeLarge      = DashboardRelativeFontSize("LARGE")
	DashboardRelativeFontSizeExtraLarge = DashboardRelativeFontSize("EXTRA_LARGE")
)

func (DashboardRelativeFontSize) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRelativeFontSize)(nil)).Elem()
}

func (e DashboardRelativeFontSize) ToDashboardRelativeFontSizeOutput() DashboardRelativeFontSizeOutput {
	return pulumi.ToOutput(e).(DashboardRelativeFontSizeOutput)
}

func (e DashboardRelativeFontSize) ToDashboardRelativeFontSizeOutputWithContext(ctx context.Context) DashboardRelativeFontSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardRelativeFontSizeOutput)
}

func (e DashboardRelativeFontSize) ToDashboardRelativeFontSizePtrOutput() DashboardRelativeFontSizePtrOutput {
	return e.ToDashboardRelativeFontSizePtrOutputWithContext(context.Background())
}

func (e DashboardRelativeFontSize) ToDashboardRelativeFontSizePtrOutputWithContext(ctx context.Context) DashboardRelativeFontSizePtrOutput {
	return DashboardRelativeFontSize(e).ToDashboardRelativeFontSizeOutputWithContext(ctx).ToDashboardRelativeFontSizePtrOutputWithContext(ctx)
}

func (e DashboardRelativeFontSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardRelativeFontSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardRelativeFontSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardRelativeFontSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardRelativeFontSizeOutput struct{ *pulumi.OutputState }

func (DashboardRelativeFontSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRelativeFontSize)(nil)).Elem()
}

func (o DashboardRelativeFontSizeOutput) ToDashboardRelativeFontSizeOutput() DashboardRelativeFontSizeOutput {
	return o
}

func (o DashboardRelativeFontSizeOutput) ToDashboardRelativeFontSizeOutputWithContext(ctx context.Context) DashboardRelativeFontSizeOutput {
	return o
}

func (o DashboardRelativeFontSizeOutput) ToDashboardRelativeFontSizePtrOutput() DashboardRelativeFontSizePtrOutput {
	return o.ToDashboardRelativeFontSizePtrOutputWithContext(context.Background())
}

func (o DashboardRelativeFontSizeOutput) ToDashboardRelativeFontSizePtrOutputWithContext(ctx context.Context) DashboardRelativeFontSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRelativeFontSize) *DashboardRelativeFontSize {
		return &v
	}).(DashboardRelativeFontSizePtrOutput)
}

func (o DashboardRelativeFontSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardRelativeFontSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardRelativeFontSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardRelativeFontSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardRelativeFontSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardRelativeFontSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardRelativeFontSizePtrOutput struct{ *pulumi.OutputState }

func (DashboardRelativeFontSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRelativeFontSize)(nil)).Elem()
}

func (o DashboardRelativeFontSizePtrOutput) ToDashboardRelativeFontSizePtrOutput() DashboardRelativeFontSizePtrOutput {
	return o
}

func (o DashboardRelativeFontSizePtrOutput) ToDashboardRelativeFontSizePtrOutputWithContext(ctx context.Context) DashboardRelativeFontSizePtrOutput {
	return o
}

func (o DashboardRelativeFontSizePtrOutput) Elem() DashboardRelativeFontSizeOutput {
	return o.ApplyT(func(v *DashboardRelativeFontSize) DashboardRelativeFontSize {
		if v != nil {
			return *v
		}
		var ret DashboardRelativeFontSize
		return ret
	}).(DashboardRelativeFontSizeOutput)
}

func (o DashboardRelativeFontSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardRelativeFontSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardRelativeFontSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardRelativeFontSizeInput is an input type that accepts values of the DashboardRelativeFontSize enum
// A concrete instance of `DashboardRelativeFontSizeInput` can be one of the following:
//
//	DashboardRelativeFontSizeExtraSmall
//	DashboardRelativeFontSizeSmall
//	DashboardRelativeFontSizeMedium
//	DashboardRelativeFontSizeLarge
//	DashboardRelativeFontSizeExtraLarge
type DashboardRelativeFontSizeInput interface {
	pulumi.Input

	ToDashboardRelativeFontSizeOutput() DashboardRelativeFontSizeOutput
	ToDashboardRelativeFontSizeOutputWithContext(context.Context) DashboardRelativeFontSizeOutput
}

var dashboardRelativeFontSizePtrType = reflect.TypeOf((**DashboardRelativeFontSize)(nil)).Elem()

type DashboardRelativeFontSizePtrInput interface {
	pulumi.Input

	ToDashboardRelativeFontSizePtrOutput() DashboardRelativeFontSizePtrOutput
	ToDashboardRelativeFontSizePtrOutputWithContext(context.Context) DashboardRelativeFontSizePtrOutput
}

type dashboardRelativeFontSizePtr string

func DashboardRelativeFontSizePtr(v string) DashboardRelativeFontSizePtrInput {
	return (*dashboardRelativeFontSizePtr)(&v)
}

func (*dashboardRelativeFontSizePtr) ElementType() reflect.Type {
	return dashboardRelativeFontSizePtrType
}

func (in *dashboardRelativeFontSizePtr) ToDashboardRelativeFontSizePtrOutput() DashboardRelativeFontSizePtrOutput {
	return pulumi.ToOutput(in).(DashboardRelativeFontSizePtrOutput)
}

func (in *dashboardRelativeFontSizePtr) ToDashboardRelativeFontSizePtrOutputWithContext(ctx context.Context) DashboardRelativeFontSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardRelativeFontSizePtrOutput)
}

type DashboardResizeOption string

const (
	DashboardResizeOptionFixed      = DashboardResizeOption("FIXED")
	DashboardResizeOptionResponsive = DashboardResizeOption("RESPONSIVE")
)

func (DashboardResizeOption) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResizeOption)(nil)).Elem()
}

func (e DashboardResizeOption) ToDashboardResizeOptionOutput() DashboardResizeOptionOutput {
	return pulumi.ToOutput(e).(DashboardResizeOptionOutput)
}

func (e DashboardResizeOption) ToDashboardResizeOptionOutputWithContext(ctx context.Context) DashboardResizeOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardResizeOptionOutput)
}

func (e DashboardResizeOption) ToDashboardResizeOptionPtrOutput() DashboardResizeOptionPtrOutput {
	return e.ToDashboardResizeOptionPtrOutputWithContext(context.Background())
}

func (e DashboardResizeOption) ToDashboardResizeOptionPtrOutputWithContext(ctx context.Context) DashboardResizeOptionPtrOutput {
	return DashboardResizeOption(e).ToDashboardResizeOptionOutputWithContext(ctx).ToDashboardResizeOptionPtrOutputWithContext(ctx)
}

func (e DashboardResizeOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardResizeOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardResizeOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardResizeOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardResizeOptionOutput struct{ *pulumi.OutputState }

func (DashboardResizeOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResizeOption)(nil)).Elem()
}

func (o DashboardResizeOptionOutput) ToDashboardResizeOptionOutput() DashboardResizeOptionOutput {
	return o
}

func (o DashboardResizeOptionOutput) ToDashboardResizeOptionOutputWithContext(ctx context.Context) DashboardResizeOptionOutput {
	return o
}

func (o DashboardResizeOptionOutput) ToDashboardResizeOptionPtrOutput() DashboardResizeOptionPtrOutput {
	return o.ToDashboardResizeOptionPtrOutputWithContext(context.Background())
}

func (o DashboardResizeOptionOutput) ToDashboardResizeOptionPtrOutputWithContext(ctx context.Context) DashboardResizeOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardResizeOption) *DashboardResizeOption {
		return &v
	}).(DashboardResizeOptionPtrOutput)
}

func (o DashboardResizeOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardResizeOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardResizeOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardResizeOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardResizeOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardResizeOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardResizeOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardResizeOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardResizeOption)(nil)).Elem()
}

func (o DashboardResizeOptionPtrOutput) ToDashboardResizeOptionPtrOutput() DashboardResizeOptionPtrOutput {
	return o
}

func (o DashboardResizeOptionPtrOutput) ToDashboardResizeOptionPtrOutputWithContext(ctx context.Context) DashboardResizeOptionPtrOutput {
	return o
}

func (o DashboardResizeOptionPtrOutput) Elem() DashboardResizeOptionOutput {
	return o.ApplyT(func(v *DashboardResizeOption) DashboardResizeOption {
		if v != nil {
			return *v
		}
		var ret DashboardResizeOption
		return ret
	}).(DashboardResizeOptionOutput)
}

func (o DashboardResizeOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardResizeOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardResizeOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardResizeOptionInput is an input type that accepts values of the DashboardResizeOption enum
// A concrete instance of `DashboardResizeOptionInput` can be one of the following:
//
//	DashboardResizeOptionFixed
//	DashboardResizeOptionResponsive
type DashboardResizeOptionInput interface {
	pulumi.Input

	ToDashboardResizeOptionOutput() DashboardResizeOptionOutput
	ToDashboardResizeOptionOutputWithContext(context.Context) DashboardResizeOptionOutput
}

var dashboardResizeOptionPtrType = reflect.TypeOf((**DashboardResizeOption)(nil)).Elem()

type DashboardResizeOptionPtrInput interface {
	pulumi.Input

	ToDashboardResizeOptionPtrOutput() DashboardResizeOptionPtrOutput
	ToDashboardResizeOptionPtrOutputWithContext(context.Context) DashboardResizeOptionPtrOutput
}

type dashboardResizeOptionPtr string

func DashboardResizeOptionPtr(v string) DashboardResizeOptionPtrInput {
	return (*dashboardResizeOptionPtr)(&v)
}

func (*dashboardResizeOptionPtr) ElementType() reflect.Type {
	return dashboardResizeOptionPtrType
}

func (in *dashboardResizeOptionPtr) ToDashboardResizeOptionPtrOutput() DashboardResizeOptionPtrOutput {
	return pulumi.ToOutput(in).(DashboardResizeOptionPtrOutput)
}

func (in *dashboardResizeOptionPtr) ToDashboardResizeOptionPtrOutputWithContext(ctx context.Context) DashboardResizeOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardResizeOptionPtrOutput)
}

type DashboardResourceStatus string

const (
	DashboardResourceStatusCreationInProgress = DashboardResourceStatus("CREATION_IN_PROGRESS")
	DashboardResourceStatusCreationSuccessful = DashboardResourceStatus("CREATION_SUCCESSFUL")
	DashboardResourceStatusCreationFailed     = DashboardResourceStatus("CREATION_FAILED")
	DashboardResourceStatusUpdateInProgress   = DashboardResourceStatus("UPDATE_IN_PROGRESS")
	DashboardResourceStatusUpdateSuccessful   = DashboardResourceStatus("UPDATE_SUCCESSFUL")
	DashboardResourceStatusUpdateFailed       = DashboardResourceStatus("UPDATE_FAILED")
	DashboardResourceStatusDeleted            = DashboardResourceStatus("DELETED")
)

type DashboardResourceStatusOutput struct{ *pulumi.OutputState }

func (DashboardResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResourceStatus)(nil)).Elem()
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusOutput() DashboardResourceStatusOutput {
	return o
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusOutputWithContext(ctx context.Context) DashboardResourceStatusOutput {
	return o
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput {
	return o.ToDashboardResourceStatusPtrOutputWithContext(context.Background())
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusPtrOutputWithContext(ctx context.Context) DashboardResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardResourceStatus) *DashboardResourceStatus {
		return &v
	}).(DashboardResourceStatusPtrOutput)
}

func (o DashboardResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (DashboardResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardResourceStatus)(nil)).Elem()
}

func (o DashboardResourceStatusPtrOutput) ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput {
	return o
}

func (o DashboardResourceStatusPtrOutput) ToDashboardResourceStatusPtrOutputWithContext(ctx context.Context) DashboardResourceStatusPtrOutput {
	return o
}

func (o DashboardResourceStatusPtrOutput) Elem() DashboardResourceStatusOutput {
	return o.ApplyT(func(v *DashboardResourceStatus) DashboardResourceStatus {
		if v != nil {
			return *v
		}
		var ret DashboardResourceStatus
		return ret
	}).(DashboardResourceStatusOutput)
}

func (o DashboardResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSectionPageBreakStatus string

const (
	DashboardSectionPageBreakStatusEnabled  = DashboardSectionPageBreakStatus("ENABLED")
	DashboardSectionPageBreakStatusDisabled = DashboardSectionPageBreakStatus("DISABLED")
)

func (DashboardSectionPageBreakStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionPageBreakStatus)(nil)).Elem()
}

func (e DashboardSectionPageBreakStatus) ToDashboardSectionPageBreakStatusOutput() DashboardSectionPageBreakStatusOutput {
	return pulumi.ToOutput(e).(DashboardSectionPageBreakStatusOutput)
}

func (e DashboardSectionPageBreakStatus) ToDashboardSectionPageBreakStatusOutputWithContext(ctx context.Context) DashboardSectionPageBreakStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSectionPageBreakStatusOutput)
}

func (e DashboardSectionPageBreakStatus) ToDashboardSectionPageBreakStatusPtrOutput() DashboardSectionPageBreakStatusPtrOutput {
	return e.ToDashboardSectionPageBreakStatusPtrOutputWithContext(context.Background())
}

func (e DashboardSectionPageBreakStatus) ToDashboardSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) DashboardSectionPageBreakStatusPtrOutput {
	return DashboardSectionPageBreakStatus(e).ToDashboardSectionPageBreakStatusOutputWithContext(ctx).ToDashboardSectionPageBreakStatusPtrOutputWithContext(ctx)
}

func (e DashboardSectionPageBreakStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSectionPageBreakStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSectionPageBreakStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSectionPageBreakStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSectionPageBreakStatusOutput struct{ *pulumi.OutputState }

func (DashboardSectionPageBreakStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionPageBreakStatus)(nil)).Elem()
}

func (o DashboardSectionPageBreakStatusOutput) ToDashboardSectionPageBreakStatusOutput() DashboardSectionPageBreakStatusOutput {
	return o
}

func (o DashboardSectionPageBreakStatusOutput) ToDashboardSectionPageBreakStatusOutputWithContext(ctx context.Context) DashboardSectionPageBreakStatusOutput {
	return o
}

func (o DashboardSectionPageBreakStatusOutput) ToDashboardSectionPageBreakStatusPtrOutput() DashboardSectionPageBreakStatusPtrOutput {
	return o.ToDashboardSectionPageBreakStatusPtrOutputWithContext(context.Background())
}

func (o DashboardSectionPageBreakStatusOutput) ToDashboardSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) DashboardSectionPageBreakStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSectionPageBreakStatus) *DashboardSectionPageBreakStatus {
		return &v
	}).(DashboardSectionPageBreakStatusPtrOutput)
}

func (o DashboardSectionPageBreakStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSectionPageBreakStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSectionPageBreakStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSectionPageBreakStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSectionPageBreakStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSectionPageBreakStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSectionPageBreakStatusPtrOutput struct{ *pulumi.OutputState }

func (DashboardSectionPageBreakStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionPageBreakStatus)(nil)).Elem()
}

func (o DashboardSectionPageBreakStatusPtrOutput) ToDashboardSectionPageBreakStatusPtrOutput() DashboardSectionPageBreakStatusPtrOutput {
	return o
}

func (o DashboardSectionPageBreakStatusPtrOutput) ToDashboardSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) DashboardSectionPageBreakStatusPtrOutput {
	return o
}

func (o DashboardSectionPageBreakStatusPtrOutput) Elem() DashboardSectionPageBreakStatusOutput {
	return o.ApplyT(func(v *DashboardSectionPageBreakStatus) DashboardSectionPageBreakStatus {
		if v != nil {
			return *v
		}
		var ret DashboardSectionPageBreakStatus
		return ret
	}).(DashboardSectionPageBreakStatusOutput)
}

func (o DashboardSectionPageBreakStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSectionPageBreakStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSectionPageBreakStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSectionPageBreakStatusInput is an input type that accepts values of the DashboardSectionPageBreakStatus enum
// A concrete instance of `DashboardSectionPageBreakStatusInput` can be one of the following:
//
//	DashboardSectionPageBreakStatusEnabled
//	DashboardSectionPageBreakStatusDisabled
type DashboardSectionPageBreakStatusInput interface {
	pulumi.Input

	ToDashboardSectionPageBreakStatusOutput() DashboardSectionPageBreakStatusOutput
	ToDashboardSectionPageBreakStatusOutputWithContext(context.Context) DashboardSectionPageBreakStatusOutput
}

var dashboardSectionPageBreakStatusPtrType = reflect.TypeOf((**DashboardSectionPageBreakStatus)(nil)).Elem()

type DashboardSectionPageBreakStatusPtrInput interface {
	pulumi.Input

	ToDashboardSectionPageBreakStatusPtrOutput() DashboardSectionPageBreakStatusPtrOutput
	ToDashboardSectionPageBreakStatusPtrOutputWithContext(context.Context) DashboardSectionPageBreakStatusPtrOutput
}

type dashboardSectionPageBreakStatusPtr string

func DashboardSectionPageBreakStatusPtr(v string) DashboardSectionPageBreakStatusPtrInput {
	return (*dashboardSectionPageBreakStatusPtr)(&v)
}

func (*dashboardSectionPageBreakStatusPtr) ElementType() reflect.Type {
	return dashboardSectionPageBreakStatusPtrType
}

func (in *dashboardSectionPageBreakStatusPtr) ToDashboardSectionPageBreakStatusPtrOutput() DashboardSectionPageBreakStatusPtrOutput {
	return pulumi.ToOutput(in).(DashboardSectionPageBreakStatusPtrOutput)
}

func (in *dashboardSectionPageBreakStatusPtr) ToDashboardSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) DashboardSectionPageBreakStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSectionPageBreakStatusPtrOutput)
}

type DashboardSelectAllValueOptions string

const (
	DashboardSelectAllValueOptionsAllValues = DashboardSelectAllValueOptions("ALL_VALUES")
)

func (DashboardSelectAllValueOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSelectAllValueOptions)(nil)).Elem()
}

func (e DashboardSelectAllValueOptions) ToDashboardSelectAllValueOptionsOutput() DashboardSelectAllValueOptionsOutput {
	return pulumi.ToOutput(e).(DashboardSelectAllValueOptionsOutput)
}

func (e DashboardSelectAllValueOptions) ToDashboardSelectAllValueOptionsOutputWithContext(ctx context.Context) DashboardSelectAllValueOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSelectAllValueOptionsOutput)
}

func (e DashboardSelectAllValueOptions) ToDashboardSelectAllValueOptionsPtrOutput() DashboardSelectAllValueOptionsPtrOutput {
	return e.ToDashboardSelectAllValueOptionsPtrOutputWithContext(context.Background())
}

func (e DashboardSelectAllValueOptions) ToDashboardSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) DashboardSelectAllValueOptionsPtrOutput {
	return DashboardSelectAllValueOptions(e).ToDashboardSelectAllValueOptionsOutputWithContext(ctx).ToDashboardSelectAllValueOptionsPtrOutputWithContext(ctx)
}

func (e DashboardSelectAllValueOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSelectAllValueOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSelectAllValueOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSelectAllValueOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSelectAllValueOptionsOutput struct{ *pulumi.OutputState }

func (DashboardSelectAllValueOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSelectAllValueOptions)(nil)).Elem()
}

func (o DashboardSelectAllValueOptionsOutput) ToDashboardSelectAllValueOptionsOutput() DashboardSelectAllValueOptionsOutput {
	return o
}

func (o DashboardSelectAllValueOptionsOutput) ToDashboardSelectAllValueOptionsOutputWithContext(ctx context.Context) DashboardSelectAllValueOptionsOutput {
	return o
}

func (o DashboardSelectAllValueOptionsOutput) ToDashboardSelectAllValueOptionsPtrOutput() DashboardSelectAllValueOptionsPtrOutput {
	return o.ToDashboardSelectAllValueOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardSelectAllValueOptionsOutput) ToDashboardSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) DashboardSelectAllValueOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSelectAllValueOptions) *DashboardSelectAllValueOptions {
		return &v
	}).(DashboardSelectAllValueOptionsPtrOutput)
}

func (o DashboardSelectAllValueOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSelectAllValueOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSelectAllValueOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSelectAllValueOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSelectAllValueOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSelectAllValueOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSelectAllValueOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardSelectAllValueOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSelectAllValueOptions)(nil)).Elem()
}

func (o DashboardSelectAllValueOptionsPtrOutput) ToDashboardSelectAllValueOptionsPtrOutput() DashboardSelectAllValueOptionsPtrOutput {
	return o
}

func (o DashboardSelectAllValueOptionsPtrOutput) ToDashboardSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) DashboardSelectAllValueOptionsPtrOutput {
	return o
}

func (o DashboardSelectAllValueOptionsPtrOutput) Elem() DashboardSelectAllValueOptionsOutput {
	return o.ApplyT(func(v *DashboardSelectAllValueOptions) DashboardSelectAllValueOptions {
		if v != nil {
			return *v
		}
		var ret DashboardSelectAllValueOptions
		return ret
	}).(DashboardSelectAllValueOptionsOutput)
}

func (o DashboardSelectAllValueOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSelectAllValueOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSelectAllValueOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSelectAllValueOptionsInput is an input type that accepts values of the DashboardSelectAllValueOptions enum
// A concrete instance of `DashboardSelectAllValueOptionsInput` can be one of the following:
//
//	DashboardSelectAllValueOptionsAllValues
type DashboardSelectAllValueOptionsInput interface {
	pulumi.Input

	ToDashboardSelectAllValueOptionsOutput() DashboardSelectAllValueOptionsOutput
	ToDashboardSelectAllValueOptionsOutputWithContext(context.Context) DashboardSelectAllValueOptionsOutput
}

var dashboardSelectAllValueOptionsPtrType = reflect.TypeOf((**DashboardSelectAllValueOptions)(nil)).Elem()

type DashboardSelectAllValueOptionsPtrInput interface {
	pulumi.Input

	ToDashboardSelectAllValueOptionsPtrOutput() DashboardSelectAllValueOptionsPtrOutput
	ToDashboardSelectAllValueOptionsPtrOutputWithContext(context.Context) DashboardSelectAllValueOptionsPtrOutput
}

type dashboardSelectAllValueOptionsPtr string

func DashboardSelectAllValueOptionsPtr(v string) DashboardSelectAllValueOptionsPtrInput {
	return (*dashboardSelectAllValueOptionsPtr)(&v)
}

func (*dashboardSelectAllValueOptionsPtr) ElementType() reflect.Type {
	return dashboardSelectAllValueOptionsPtrType
}

func (in *dashboardSelectAllValueOptionsPtr) ToDashboardSelectAllValueOptionsPtrOutput() DashboardSelectAllValueOptionsPtrOutput {
	return pulumi.ToOutput(in).(DashboardSelectAllValueOptionsPtrOutput)
}

func (in *dashboardSelectAllValueOptionsPtr) ToDashboardSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) DashboardSelectAllValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSelectAllValueOptionsPtrOutput)
}

type DashboardSelectedFieldOptions string

const (
	DashboardSelectedFieldOptionsAllFields = DashboardSelectedFieldOptions("ALL_FIELDS")
)

func (DashboardSelectedFieldOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSelectedFieldOptions)(nil)).Elem()
}

func (e DashboardSelectedFieldOptions) ToDashboardSelectedFieldOptionsOutput() DashboardSelectedFieldOptionsOutput {
	return pulumi.ToOutput(e).(DashboardSelectedFieldOptionsOutput)
}

func (e DashboardSelectedFieldOptions) ToDashboardSelectedFieldOptionsOutputWithContext(ctx context.Context) DashboardSelectedFieldOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSelectedFieldOptionsOutput)
}

func (e DashboardSelectedFieldOptions) ToDashboardSelectedFieldOptionsPtrOutput() DashboardSelectedFieldOptionsPtrOutput {
	return e.ToDashboardSelectedFieldOptionsPtrOutputWithContext(context.Background())
}

func (e DashboardSelectedFieldOptions) ToDashboardSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardSelectedFieldOptionsPtrOutput {
	return DashboardSelectedFieldOptions(e).ToDashboardSelectedFieldOptionsOutputWithContext(ctx).ToDashboardSelectedFieldOptionsPtrOutputWithContext(ctx)
}

func (e DashboardSelectedFieldOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSelectedFieldOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSelectedFieldOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSelectedFieldOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSelectedFieldOptionsOutput struct{ *pulumi.OutputState }

func (DashboardSelectedFieldOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSelectedFieldOptions)(nil)).Elem()
}

func (o DashboardSelectedFieldOptionsOutput) ToDashboardSelectedFieldOptionsOutput() DashboardSelectedFieldOptionsOutput {
	return o
}

func (o DashboardSelectedFieldOptionsOutput) ToDashboardSelectedFieldOptionsOutputWithContext(ctx context.Context) DashboardSelectedFieldOptionsOutput {
	return o
}

func (o DashboardSelectedFieldOptionsOutput) ToDashboardSelectedFieldOptionsPtrOutput() DashboardSelectedFieldOptionsPtrOutput {
	return o.ToDashboardSelectedFieldOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardSelectedFieldOptionsOutput) ToDashboardSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardSelectedFieldOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSelectedFieldOptions) *DashboardSelectedFieldOptions {
		return &v
	}).(DashboardSelectedFieldOptionsPtrOutput)
}

func (o DashboardSelectedFieldOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSelectedFieldOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSelectedFieldOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSelectedFieldOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSelectedFieldOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSelectedFieldOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSelectedFieldOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardSelectedFieldOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSelectedFieldOptions)(nil)).Elem()
}

func (o DashboardSelectedFieldOptionsPtrOutput) ToDashboardSelectedFieldOptionsPtrOutput() DashboardSelectedFieldOptionsPtrOutput {
	return o
}

func (o DashboardSelectedFieldOptionsPtrOutput) ToDashboardSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardSelectedFieldOptionsPtrOutput {
	return o
}

func (o DashboardSelectedFieldOptionsPtrOutput) Elem() DashboardSelectedFieldOptionsOutput {
	return o.ApplyT(func(v *DashboardSelectedFieldOptions) DashboardSelectedFieldOptions {
		if v != nil {
			return *v
		}
		var ret DashboardSelectedFieldOptions
		return ret
	}).(DashboardSelectedFieldOptionsOutput)
}

func (o DashboardSelectedFieldOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSelectedFieldOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSelectedFieldOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSelectedFieldOptionsInput is an input type that accepts values of the DashboardSelectedFieldOptions enum
// A concrete instance of `DashboardSelectedFieldOptionsInput` can be one of the following:
//
//	DashboardSelectedFieldOptionsAllFields
type DashboardSelectedFieldOptionsInput interface {
	pulumi.Input

	ToDashboardSelectedFieldOptionsOutput() DashboardSelectedFieldOptionsOutput
	ToDashboardSelectedFieldOptionsOutputWithContext(context.Context) DashboardSelectedFieldOptionsOutput
}

var dashboardSelectedFieldOptionsPtrType = reflect.TypeOf((**DashboardSelectedFieldOptions)(nil)).Elem()

type DashboardSelectedFieldOptionsPtrInput interface {
	pulumi.Input

	ToDashboardSelectedFieldOptionsPtrOutput() DashboardSelectedFieldOptionsPtrOutput
	ToDashboardSelectedFieldOptionsPtrOutputWithContext(context.Context) DashboardSelectedFieldOptionsPtrOutput
}

type dashboardSelectedFieldOptionsPtr string

func DashboardSelectedFieldOptionsPtr(v string) DashboardSelectedFieldOptionsPtrInput {
	return (*dashboardSelectedFieldOptionsPtr)(&v)
}

func (*dashboardSelectedFieldOptionsPtr) ElementType() reflect.Type {
	return dashboardSelectedFieldOptionsPtrType
}

func (in *dashboardSelectedFieldOptionsPtr) ToDashboardSelectedFieldOptionsPtrOutput() DashboardSelectedFieldOptionsPtrOutput {
	return pulumi.ToOutput(in).(DashboardSelectedFieldOptionsPtrOutput)
}

func (in *dashboardSelectedFieldOptionsPtr) ToDashboardSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardSelectedFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSelectedFieldOptionsPtrOutput)
}

type DashboardSelectedTooltipType string

const (
	DashboardSelectedTooltipTypeBasic    = DashboardSelectedTooltipType("BASIC")
	DashboardSelectedTooltipTypeDetailed = DashboardSelectedTooltipType("DETAILED")
)

func (DashboardSelectedTooltipType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSelectedTooltipType)(nil)).Elem()
}

func (e DashboardSelectedTooltipType) ToDashboardSelectedTooltipTypeOutput() DashboardSelectedTooltipTypeOutput {
	return pulumi.ToOutput(e).(DashboardSelectedTooltipTypeOutput)
}

func (e DashboardSelectedTooltipType) ToDashboardSelectedTooltipTypeOutputWithContext(ctx context.Context) DashboardSelectedTooltipTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSelectedTooltipTypeOutput)
}

func (e DashboardSelectedTooltipType) ToDashboardSelectedTooltipTypePtrOutput() DashboardSelectedTooltipTypePtrOutput {
	return e.ToDashboardSelectedTooltipTypePtrOutputWithContext(context.Background())
}

func (e DashboardSelectedTooltipType) ToDashboardSelectedTooltipTypePtrOutputWithContext(ctx context.Context) DashboardSelectedTooltipTypePtrOutput {
	return DashboardSelectedTooltipType(e).ToDashboardSelectedTooltipTypeOutputWithContext(ctx).ToDashboardSelectedTooltipTypePtrOutputWithContext(ctx)
}

func (e DashboardSelectedTooltipType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSelectedTooltipType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSelectedTooltipType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSelectedTooltipType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSelectedTooltipTypeOutput struct{ *pulumi.OutputState }

func (DashboardSelectedTooltipTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSelectedTooltipType)(nil)).Elem()
}

func (o DashboardSelectedTooltipTypeOutput) ToDashboardSelectedTooltipTypeOutput() DashboardSelectedTooltipTypeOutput {
	return o
}

func (o DashboardSelectedTooltipTypeOutput) ToDashboardSelectedTooltipTypeOutputWithContext(ctx context.Context) DashboardSelectedTooltipTypeOutput {
	return o
}

func (o DashboardSelectedTooltipTypeOutput) ToDashboardSelectedTooltipTypePtrOutput() DashboardSelectedTooltipTypePtrOutput {
	return o.ToDashboardSelectedTooltipTypePtrOutputWithContext(context.Background())
}

func (o DashboardSelectedTooltipTypeOutput) ToDashboardSelectedTooltipTypePtrOutputWithContext(ctx context.Context) DashboardSelectedTooltipTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSelectedTooltipType) *DashboardSelectedTooltipType {
		return &v
	}).(DashboardSelectedTooltipTypePtrOutput)
}

func (o DashboardSelectedTooltipTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSelectedTooltipTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSelectedTooltipType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSelectedTooltipTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSelectedTooltipTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSelectedTooltipType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSelectedTooltipTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardSelectedTooltipTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSelectedTooltipType)(nil)).Elem()
}

func (o DashboardSelectedTooltipTypePtrOutput) ToDashboardSelectedTooltipTypePtrOutput() DashboardSelectedTooltipTypePtrOutput {
	return o
}

func (o DashboardSelectedTooltipTypePtrOutput) ToDashboardSelectedTooltipTypePtrOutputWithContext(ctx context.Context) DashboardSelectedTooltipTypePtrOutput {
	return o
}

func (o DashboardSelectedTooltipTypePtrOutput) Elem() DashboardSelectedTooltipTypeOutput {
	return o.ApplyT(func(v *DashboardSelectedTooltipType) DashboardSelectedTooltipType {
		if v != nil {
			return *v
		}
		var ret DashboardSelectedTooltipType
		return ret
	}).(DashboardSelectedTooltipTypeOutput)
}

func (o DashboardSelectedTooltipTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSelectedTooltipTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSelectedTooltipType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSelectedTooltipTypeInput is an input type that accepts values of the DashboardSelectedTooltipType enum
// A concrete instance of `DashboardSelectedTooltipTypeInput` can be one of the following:
//
//	DashboardSelectedTooltipTypeBasic
//	DashboardSelectedTooltipTypeDetailed
type DashboardSelectedTooltipTypeInput interface {
	pulumi.Input

	ToDashboardSelectedTooltipTypeOutput() DashboardSelectedTooltipTypeOutput
	ToDashboardSelectedTooltipTypeOutputWithContext(context.Context) DashboardSelectedTooltipTypeOutput
}

var dashboardSelectedTooltipTypePtrType = reflect.TypeOf((**DashboardSelectedTooltipType)(nil)).Elem()

type DashboardSelectedTooltipTypePtrInput interface {
	pulumi.Input

	ToDashboardSelectedTooltipTypePtrOutput() DashboardSelectedTooltipTypePtrOutput
	ToDashboardSelectedTooltipTypePtrOutputWithContext(context.Context) DashboardSelectedTooltipTypePtrOutput
}

type dashboardSelectedTooltipTypePtr string

func DashboardSelectedTooltipTypePtr(v string) DashboardSelectedTooltipTypePtrInput {
	return (*dashboardSelectedTooltipTypePtr)(&v)
}

func (*dashboardSelectedTooltipTypePtr) ElementType() reflect.Type {
	return dashboardSelectedTooltipTypePtrType
}

func (in *dashboardSelectedTooltipTypePtr) ToDashboardSelectedTooltipTypePtrOutput() DashboardSelectedTooltipTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardSelectedTooltipTypePtrOutput)
}

func (in *dashboardSelectedTooltipTypePtr) ToDashboardSelectedTooltipTypePtrOutputWithContext(ctx context.Context) DashboardSelectedTooltipTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSelectedTooltipTypePtrOutput)
}

type DashboardSheetContentType string

const (
	DashboardSheetContentTypePaginated   = DashboardSheetContentType("PAGINATED")
	DashboardSheetContentTypeInteractive = DashboardSheetContentType("INTERACTIVE")
)

func (DashboardSheetContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetContentType)(nil)).Elem()
}

func (e DashboardSheetContentType) ToDashboardSheetContentTypeOutput() DashboardSheetContentTypeOutput {
	return pulumi.ToOutput(e).(DashboardSheetContentTypeOutput)
}

func (e DashboardSheetContentType) ToDashboardSheetContentTypeOutputWithContext(ctx context.Context) DashboardSheetContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSheetContentTypeOutput)
}

func (e DashboardSheetContentType) ToDashboardSheetContentTypePtrOutput() DashboardSheetContentTypePtrOutput {
	return e.ToDashboardSheetContentTypePtrOutputWithContext(context.Background())
}

func (e DashboardSheetContentType) ToDashboardSheetContentTypePtrOutputWithContext(ctx context.Context) DashboardSheetContentTypePtrOutput {
	return DashboardSheetContentType(e).ToDashboardSheetContentTypeOutputWithContext(ctx).ToDashboardSheetContentTypePtrOutputWithContext(ctx)
}

func (e DashboardSheetContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSheetContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSheetContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSheetContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSheetContentTypeOutput struct{ *pulumi.OutputState }

func (DashboardSheetContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetContentType)(nil)).Elem()
}

func (o DashboardSheetContentTypeOutput) ToDashboardSheetContentTypeOutput() DashboardSheetContentTypeOutput {
	return o
}

func (o DashboardSheetContentTypeOutput) ToDashboardSheetContentTypeOutputWithContext(ctx context.Context) DashboardSheetContentTypeOutput {
	return o
}

func (o DashboardSheetContentTypeOutput) ToDashboardSheetContentTypePtrOutput() DashboardSheetContentTypePtrOutput {
	return o.ToDashboardSheetContentTypePtrOutputWithContext(context.Background())
}

func (o DashboardSheetContentTypeOutput) ToDashboardSheetContentTypePtrOutputWithContext(ctx context.Context) DashboardSheetContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSheetContentType) *DashboardSheetContentType {
		return &v
	}).(DashboardSheetContentTypePtrOutput)
}

func (o DashboardSheetContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSheetContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSheetContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSheetContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSheetContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSheetContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSheetContentTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardSheetContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSheetContentType)(nil)).Elem()
}

func (o DashboardSheetContentTypePtrOutput) ToDashboardSheetContentTypePtrOutput() DashboardSheetContentTypePtrOutput {
	return o
}

func (o DashboardSheetContentTypePtrOutput) ToDashboardSheetContentTypePtrOutputWithContext(ctx context.Context) DashboardSheetContentTypePtrOutput {
	return o
}

func (o DashboardSheetContentTypePtrOutput) Elem() DashboardSheetContentTypeOutput {
	return o.ApplyT(func(v *DashboardSheetContentType) DashboardSheetContentType {
		if v != nil {
			return *v
		}
		var ret DashboardSheetContentType
		return ret
	}).(DashboardSheetContentTypeOutput)
}

func (o DashboardSheetContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSheetContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSheetContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSheetContentTypeInput is an input type that accepts values of the DashboardSheetContentType enum
// A concrete instance of `DashboardSheetContentTypeInput` can be one of the following:
//
//	DashboardSheetContentTypePaginated
//	DashboardSheetContentTypeInteractive
type DashboardSheetContentTypeInput interface {
	pulumi.Input

	ToDashboardSheetContentTypeOutput() DashboardSheetContentTypeOutput
	ToDashboardSheetContentTypeOutputWithContext(context.Context) DashboardSheetContentTypeOutput
}

var dashboardSheetContentTypePtrType = reflect.TypeOf((**DashboardSheetContentType)(nil)).Elem()

type DashboardSheetContentTypePtrInput interface {
	pulumi.Input

	ToDashboardSheetContentTypePtrOutput() DashboardSheetContentTypePtrOutput
	ToDashboardSheetContentTypePtrOutputWithContext(context.Context) DashboardSheetContentTypePtrOutput
}

type dashboardSheetContentTypePtr string

func DashboardSheetContentTypePtr(v string) DashboardSheetContentTypePtrInput {
	return (*dashboardSheetContentTypePtr)(&v)
}

func (*dashboardSheetContentTypePtr) ElementType() reflect.Type {
	return dashboardSheetContentTypePtrType
}

func (in *dashboardSheetContentTypePtr) ToDashboardSheetContentTypePtrOutput() DashboardSheetContentTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardSheetContentTypePtrOutput)
}

func (in *dashboardSheetContentTypePtr) ToDashboardSheetContentTypePtrOutputWithContext(ctx context.Context) DashboardSheetContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSheetContentTypePtrOutput)
}

type DashboardSheetControlDateTimePickerType string

const (
	DashboardSheetControlDateTimePickerTypeSingleValued = DashboardSheetControlDateTimePickerType("SINGLE_VALUED")
	DashboardSheetControlDateTimePickerTypeDateRange    = DashboardSheetControlDateTimePickerType("DATE_RANGE")
)

func (DashboardSheetControlDateTimePickerType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlDateTimePickerType)(nil)).Elem()
}

func (e DashboardSheetControlDateTimePickerType) ToDashboardSheetControlDateTimePickerTypeOutput() DashboardSheetControlDateTimePickerTypeOutput {
	return pulumi.ToOutput(e).(DashboardSheetControlDateTimePickerTypeOutput)
}

func (e DashboardSheetControlDateTimePickerType) ToDashboardSheetControlDateTimePickerTypeOutputWithContext(ctx context.Context) DashboardSheetControlDateTimePickerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSheetControlDateTimePickerTypeOutput)
}

func (e DashboardSheetControlDateTimePickerType) ToDashboardSheetControlDateTimePickerTypePtrOutput() DashboardSheetControlDateTimePickerTypePtrOutput {
	return e.ToDashboardSheetControlDateTimePickerTypePtrOutputWithContext(context.Background())
}

func (e DashboardSheetControlDateTimePickerType) ToDashboardSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlDateTimePickerTypePtrOutput {
	return DashboardSheetControlDateTimePickerType(e).ToDashboardSheetControlDateTimePickerTypeOutputWithContext(ctx).ToDashboardSheetControlDateTimePickerTypePtrOutputWithContext(ctx)
}

func (e DashboardSheetControlDateTimePickerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSheetControlDateTimePickerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSheetControlDateTimePickerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSheetControlDateTimePickerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSheetControlDateTimePickerTypeOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlDateTimePickerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlDateTimePickerType)(nil)).Elem()
}

func (o DashboardSheetControlDateTimePickerTypeOutput) ToDashboardSheetControlDateTimePickerTypeOutput() DashboardSheetControlDateTimePickerTypeOutput {
	return o
}

func (o DashboardSheetControlDateTimePickerTypeOutput) ToDashboardSheetControlDateTimePickerTypeOutputWithContext(ctx context.Context) DashboardSheetControlDateTimePickerTypeOutput {
	return o
}

func (o DashboardSheetControlDateTimePickerTypeOutput) ToDashboardSheetControlDateTimePickerTypePtrOutput() DashboardSheetControlDateTimePickerTypePtrOutput {
	return o.ToDashboardSheetControlDateTimePickerTypePtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlDateTimePickerTypeOutput) ToDashboardSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlDateTimePickerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSheetControlDateTimePickerType) *DashboardSheetControlDateTimePickerType {
		return &v
	}).(DashboardSheetControlDateTimePickerTypePtrOutput)
}

func (o DashboardSheetControlDateTimePickerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSheetControlDateTimePickerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSheetControlDateTimePickerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSheetControlDateTimePickerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlDateTimePickerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSheetControlDateTimePickerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSheetControlDateTimePickerTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlDateTimePickerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSheetControlDateTimePickerType)(nil)).Elem()
}

func (o DashboardSheetControlDateTimePickerTypePtrOutput) ToDashboardSheetControlDateTimePickerTypePtrOutput() DashboardSheetControlDateTimePickerTypePtrOutput {
	return o
}

func (o DashboardSheetControlDateTimePickerTypePtrOutput) ToDashboardSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlDateTimePickerTypePtrOutput {
	return o
}

func (o DashboardSheetControlDateTimePickerTypePtrOutput) Elem() DashboardSheetControlDateTimePickerTypeOutput {
	return o.ApplyT(func(v *DashboardSheetControlDateTimePickerType) DashboardSheetControlDateTimePickerType {
		if v != nil {
			return *v
		}
		var ret DashboardSheetControlDateTimePickerType
		return ret
	}).(DashboardSheetControlDateTimePickerTypeOutput)
}

func (o DashboardSheetControlDateTimePickerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlDateTimePickerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSheetControlDateTimePickerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSheetControlDateTimePickerTypeInput is an input type that accepts values of the DashboardSheetControlDateTimePickerType enum
// A concrete instance of `DashboardSheetControlDateTimePickerTypeInput` can be one of the following:
//
//	DashboardSheetControlDateTimePickerTypeSingleValued
//	DashboardSheetControlDateTimePickerTypeDateRange
type DashboardSheetControlDateTimePickerTypeInput interface {
	pulumi.Input

	ToDashboardSheetControlDateTimePickerTypeOutput() DashboardSheetControlDateTimePickerTypeOutput
	ToDashboardSheetControlDateTimePickerTypeOutputWithContext(context.Context) DashboardSheetControlDateTimePickerTypeOutput
}

var dashboardSheetControlDateTimePickerTypePtrType = reflect.TypeOf((**DashboardSheetControlDateTimePickerType)(nil)).Elem()

type DashboardSheetControlDateTimePickerTypePtrInput interface {
	pulumi.Input

	ToDashboardSheetControlDateTimePickerTypePtrOutput() DashboardSheetControlDateTimePickerTypePtrOutput
	ToDashboardSheetControlDateTimePickerTypePtrOutputWithContext(context.Context) DashboardSheetControlDateTimePickerTypePtrOutput
}

type dashboardSheetControlDateTimePickerTypePtr string

func DashboardSheetControlDateTimePickerTypePtr(v string) DashboardSheetControlDateTimePickerTypePtrInput {
	return (*dashboardSheetControlDateTimePickerTypePtr)(&v)
}

func (*dashboardSheetControlDateTimePickerTypePtr) ElementType() reflect.Type {
	return dashboardSheetControlDateTimePickerTypePtrType
}

func (in *dashboardSheetControlDateTimePickerTypePtr) ToDashboardSheetControlDateTimePickerTypePtrOutput() DashboardSheetControlDateTimePickerTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardSheetControlDateTimePickerTypePtrOutput)
}

func (in *dashboardSheetControlDateTimePickerTypePtr) ToDashboardSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlDateTimePickerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSheetControlDateTimePickerTypePtrOutput)
}

type DashboardSheetControlListType string

const (
	DashboardSheetControlListTypeMultiSelect  = DashboardSheetControlListType("MULTI_SELECT")
	DashboardSheetControlListTypeSingleSelect = DashboardSheetControlListType("SINGLE_SELECT")
)

func (DashboardSheetControlListType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlListType)(nil)).Elem()
}

func (e DashboardSheetControlListType) ToDashboardSheetControlListTypeOutput() DashboardSheetControlListTypeOutput {
	return pulumi.ToOutput(e).(DashboardSheetControlListTypeOutput)
}

func (e DashboardSheetControlListType) ToDashboardSheetControlListTypeOutputWithContext(ctx context.Context) DashboardSheetControlListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSheetControlListTypeOutput)
}

func (e DashboardSheetControlListType) ToDashboardSheetControlListTypePtrOutput() DashboardSheetControlListTypePtrOutput {
	return e.ToDashboardSheetControlListTypePtrOutputWithContext(context.Background())
}

func (e DashboardSheetControlListType) ToDashboardSheetControlListTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlListTypePtrOutput {
	return DashboardSheetControlListType(e).ToDashboardSheetControlListTypeOutputWithContext(ctx).ToDashboardSheetControlListTypePtrOutputWithContext(ctx)
}

func (e DashboardSheetControlListType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSheetControlListType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSheetControlListType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSheetControlListType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSheetControlListTypeOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlListType)(nil)).Elem()
}

func (o DashboardSheetControlListTypeOutput) ToDashboardSheetControlListTypeOutput() DashboardSheetControlListTypeOutput {
	return o
}

func (o DashboardSheetControlListTypeOutput) ToDashboardSheetControlListTypeOutputWithContext(ctx context.Context) DashboardSheetControlListTypeOutput {
	return o
}

func (o DashboardSheetControlListTypeOutput) ToDashboardSheetControlListTypePtrOutput() DashboardSheetControlListTypePtrOutput {
	return o.ToDashboardSheetControlListTypePtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlListTypeOutput) ToDashboardSheetControlListTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlListTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSheetControlListType) *DashboardSheetControlListType {
		return &v
	}).(DashboardSheetControlListTypePtrOutput)
}

func (o DashboardSheetControlListTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSheetControlListTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSheetControlListType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSheetControlListTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlListTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSheetControlListType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSheetControlListTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlListTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSheetControlListType)(nil)).Elem()
}

func (o DashboardSheetControlListTypePtrOutput) ToDashboardSheetControlListTypePtrOutput() DashboardSheetControlListTypePtrOutput {
	return o
}

func (o DashboardSheetControlListTypePtrOutput) ToDashboardSheetControlListTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlListTypePtrOutput {
	return o
}

func (o DashboardSheetControlListTypePtrOutput) Elem() DashboardSheetControlListTypeOutput {
	return o.ApplyT(func(v *DashboardSheetControlListType) DashboardSheetControlListType {
		if v != nil {
			return *v
		}
		var ret DashboardSheetControlListType
		return ret
	}).(DashboardSheetControlListTypeOutput)
}

func (o DashboardSheetControlListTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlListTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSheetControlListType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSheetControlListTypeInput is an input type that accepts values of the DashboardSheetControlListType enum
// A concrete instance of `DashboardSheetControlListTypeInput` can be one of the following:
//
//	DashboardSheetControlListTypeMultiSelect
//	DashboardSheetControlListTypeSingleSelect
type DashboardSheetControlListTypeInput interface {
	pulumi.Input

	ToDashboardSheetControlListTypeOutput() DashboardSheetControlListTypeOutput
	ToDashboardSheetControlListTypeOutputWithContext(context.Context) DashboardSheetControlListTypeOutput
}

var dashboardSheetControlListTypePtrType = reflect.TypeOf((**DashboardSheetControlListType)(nil)).Elem()

type DashboardSheetControlListTypePtrInput interface {
	pulumi.Input

	ToDashboardSheetControlListTypePtrOutput() DashboardSheetControlListTypePtrOutput
	ToDashboardSheetControlListTypePtrOutputWithContext(context.Context) DashboardSheetControlListTypePtrOutput
}

type dashboardSheetControlListTypePtr string

func DashboardSheetControlListTypePtr(v string) DashboardSheetControlListTypePtrInput {
	return (*dashboardSheetControlListTypePtr)(&v)
}

func (*dashboardSheetControlListTypePtr) ElementType() reflect.Type {
	return dashboardSheetControlListTypePtrType
}

func (in *dashboardSheetControlListTypePtr) ToDashboardSheetControlListTypePtrOutput() DashboardSheetControlListTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardSheetControlListTypePtrOutput)
}

func (in *dashboardSheetControlListTypePtr) ToDashboardSheetControlListTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlListTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSheetControlListTypePtrOutput)
}

type DashboardSheetControlSliderType string

const (
	DashboardSheetControlSliderTypeSinglePoint = DashboardSheetControlSliderType("SINGLE_POINT")
	DashboardSheetControlSliderTypeRange       = DashboardSheetControlSliderType("RANGE")
)

func (DashboardSheetControlSliderType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlSliderType)(nil)).Elem()
}

func (e DashboardSheetControlSliderType) ToDashboardSheetControlSliderTypeOutput() DashboardSheetControlSliderTypeOutput {
	return pulumi.ToOutput(e).(DashboardSheetControlSliderTypeOutput)
}

func (e DashboardSheetControlSliderType) ToDashboardSheetControlSliderTypeOutputWithContext(ctx context.Context) DashboardSheetControlSliderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSheetControlSliderTypeOutput)
}

func (e DashboardSheetControlSliderType) ToDashboardSheetControlSliderTypePtrOutput() DashboardSheetControlSliderTypePtrOutput {
	return e.ToDashboardSheetControlSliderTypePtrOutputWithContext(context.Background())
}

func (e DashboardSheetControlSliderType) ToDashboardSheetControlSliderTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlSliderTypePtrOutput {
	return DashboardSheetControlSliderType(e).ToDashboardSheetControlSliderTypeOutputWithContext(ctx).ToDashboardSheetControlSliderTypePtrOutputWithContext(ctx)
}

func (e DashboardSheetControlSliderType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSheetControlSliderType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSheetControlSliderType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSheetControlSliderType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSheetControlSliderTypeOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlSliderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlSliderType)(nil)).Elem()
}

func (o DashboardSheetControlSliderTypeOutput) ToDashboardSheetControlSliderTypeOutput() DashboardSheetControlSliderTypeOutput {
	return o
}

func (o DashboardSheetControlSliderTypeOutput) ToDashboardSheetControlSliderTypeOutputWithContext(ctx context.Context) DashboardSheetControlSliderTypeOutput {
	return o
}

func (o DashboardSheetControlSliderTypeOutput) ToDashboardSheetControlSliderTypePtrOutput() DashboardSheetControlSliderTypePtrOutput {
	return o.ToDashboardSheetControlSliderTypePtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlSliderTypeOutput) ToDashboardSheetControlSliderTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlSliderTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSheetControlSliderType) *DashboardSheetControlSliderType {
		return &v
	}).(DashboardSheetControlSliderTypePtrOutput)
}

func (o DashboardSheetControlSliderTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSheetControlSliderTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSheetControlSliderType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSheetControlSliderTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlSliderTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSheetControlSliderType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSheetControlSliderTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlSliderTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSheetControlSliderType)(nil)).Elem()
}

func (o DashboardSheetControlSliderTypePtrOutput) ToDashboardSheetControlSliderTypePtrOutput() DashboardSheetControlSliderTypePtrOutput {
	return o
}

func (o DashboardSheetControlSliderTypePtrOutput) ToDashboardSheetControlSliderTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlSliderTypePtrOutput {
	return o
}

func (o DashboardSheetControlSliderTypePtrOutput) Elem() DashboardSheetControlSliderTypeOutput {
	return o.ApplyT(func(v *DashboardSheetControlSliderType) DashboardSheetControlSliderType {
		if v != nil {
			return *v
		}
		var ret DashboardSheetControlSliderType
		return ret
	}).(DashboardSheetControlSliderTypeOutput)
}

func (o DashboardSheetControlSliderTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlSliderTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSheetControlSliderType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSheetControlSliderTypeInput is an input type that accepts values of the DashboardSheetControlSliderType enum
// A concrete instance of `DashboardSheetControlSliderTypeInput` can be one of the following:
//
//	DashboardSheetControlSliderTypeSinglePoint
//	DashboardSheetControlSliderTypeRange
type DashboardSheetControlSliderTypeInput interface {
	pulumi.Input

	ToDashboardSheetControlSliderTypeOutput() DashboardSheetControlSliderTypeOutput
	ToDashboardSheetControlSliderTypeOutputWithContext(context.Context) DashboardSheetControlSliderTypeOutput
}

var dashboardSheetControlSliderTypePtrType = reflect.TypeOf((**DashboardSheetControlSliderType)(nil)).Elem()

type DashboardSheetControlSliderTypePtrInput interface {
	pulumi.Input

	ToDashboardSheetControlSliderTypePtrOutput() DashboardSheetControlSliderTypePtrOutput
	ToDashboardSheetControlSliderTypePtrOutputWithContext(context.Context) DashboardSheetControlSliderTypePtrOutput
}

type dashboardSheetControlSliderTypePtr string

func DashboardSheetControlSliderTypePtr(v string) DashboardSheetControlSliderTypePtrInput {
	return (*dashboardSheetControlSliderTypePtr)(&v)
}

func (*dashboardSheetControlSliderTypePtr) ElementType() reflect.Type {
	return dashboardSheetControlSliderTypePtrType
}

func (in *dashboardSheetControlSliderTypePtr) ToDashboardSheetControlSliderTypePtrOutput() DashboardSheetControlSliderTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardSheetControlSliderTypePtrOutput)
}

func (in *dashboardSheetControlSliderTypePtr) ToDashboardSheetControlSliderTypePtrOutputWithContext(ctx context.Context) DashboardSheetControlSliderTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSheetControlSliderTypePtrOutput)
}

type DashboardSimpleAttributeAggregationFunction string

const (
	DashboardSimpleAttributeAggregationFunctionUniqueValue = DashboardSimpleAttributeAggregationFunction("UNIQUE_VALUE")
)

func (DashboardSimpleAttributeAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSimpleAttributeAggregationFunction)(nil)).Elem()
}

func (e DashboardSimpleAttributeAggregationFunction) ToDashboardSimpleAttributeAggregationFunctionOutput() DashboardSimpleAttributeAggregationFunctionOutput {
	return pulumi.ToOutput(e).(DashboardSimpleAttributeAggregationFunctionOutput)
}

func (e DashboardSimpleAttributeAggregationFunction) ToDashboardSimpleAttributeAggregationFunctionOutputWithContext(ctx context.Context) DashboardSimpleAttributeAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSimpleAttributeAggregationFunctionOutput)
}

func (e DashboardSimpleAttributeAggregationFunction) ToDashboardSimpleAttributeAggregationFunctionPtrOutput() DashboardSimpleAttributeAggregationFunctionPtrOutput {
	return e.ToDashboardSimpleAttributeAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e DashboardSimpleAttributeAggregationFunction) ToDashboardSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleAttributeAggregationFunctionPtrOutput {
	return DashboardSimpleAttributeAggregationFunction(e).ToDashboardSimpleAttributeAggregationFunctionOutputWithContext(ctx).ToDashboardSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx)
}

func (e DashboardSimpleAttributeAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSimpleAttributeAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSimpleAttributeAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSimpleAttributeAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSimpleAttributeAggregationFunctionOutput struct{ *pulumi.OutputState }

func (DashboardSimpleAttributeAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSimpleAttributeAggregationFunction)(nil)).Elem()
}

func (o DashboardSimpleAttributeAggregationFunctionOutput) ToDashboardSimpleAttributeAggregationFunctionOutput() DashboardSimpleAttributeAggregationFunctionOutput {
	return o
}

func (o DashboardSimpleAttributeAggregationFunctionOutput) ToDashboardSimpleAttributeAggregationFunctionOutputWithContext(ctx context.Context) DashboardSimpleAttributeAggregationFunctionOutput {
	return o
}

func (o DashboardSimpleAttributeAggregationFunctionOutput) ToDashboardSimpleAttributeAggregationFunctionPtrOutput() DashboardSimpleAttributeAggregationFunctionPtrOutput {
	return o.ToDashboardSimpleAttributeAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o DashboardSimpleAttributeAggregationFunctionOutput) ToDashboardSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleAttributeAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSimpleAttributeAggregationFunction) *DashboardSimpleAttributeAggregationFunction {
		return &v
	}).(DashboardSimpleAttributeAggregationFunctionPtrOutput)
}

func (o DashboardSimpleAttributeAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSimpleAttributeAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSimpleAttributeAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSimpleAttributeAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSimpleAttributeAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSimpleAttributeAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSimpleAttributeAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (DashboardSimpleAttributeAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSimpleAttributeAggregationFunction)(nil)).Elem()
}

func (o DashboardSimpleAttributeAggregationFunctionPtrOutput) ToDashboardSimpleAttributeAggregationFunctionPtrOutput() DashboardSimpleAttributeAggregationFunctionPtrOutput {
	return o
}

func (o DashboardSimpleAttributeAggregationFunctionPtrOutput) ToDashboardSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleAttributeAggregationFunctionPtrOutput {
	return o
}

func (o DashboardSimpleAttributeAggregationFunctionPtrOutput) Elem() DashboardSimpleAttributeAggregationFunctionOutput {
	return o.ApplyT(func(v *DashboardSimpleAttributeAggregationFunction) DashboardSimpleAttributeAggregationFunction {
		if v != nil {
			return *v
		}
		var ret DashboardSimpleAttributeAggregationFunction
		return ret
	}).(DashboardSimpleAttributeAggregationFunctionOutput)
}

func (o DashboardSimpleAttributeAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSimpleAttributeAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSimpleAttributeAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSimpleAttributeAggregationFunctionInput is an input type that accepts values of the DashboardSimpleAttributeAggregationFunction enum
// A concrete instance of `DashboardSimpleAttributeAggregationFunctionInput` can be one of the following:
//
//	DashboardSimpleAttributeAggregationFunctionUniqueValue
type DashboardSimpleAttributeAggregationFunctionInput interface {
	pulumi.Input

	ToDashboardSimpleAttributeAggregationFunctionOutput() DashboardSimpleAttributeAggregationFunctionOutput
	ToDashboardSimpleAttributeAggregationFunctionOutputWithContext(context.Context) DashboardSimpleAttributeAggregationFunctionOutput
}

var dashboardSimpleAttributeAggregationFunctionPtrType = reflect.TypeOf((**DashboardSimpleAttributeAggregationFunction)(nil)).Elem()

type DashboardSimpleAttributeAggregationFunctionPtrInput interface {
	pulumi.Input

	ToDashboardSimpleAttributeAggregationFunctionPtrOutput() DashboardSimpleAttributeAggregationFunctionPtrOutput
	ToDashboardSimpleAttributeAggregationFunctionPtrOutputWithContext(context.Context) DashboardSimpleAttributeAggregationFunctionPtrOutput
}

type dashboardSimpleAttributeAggregationFunctionPtr string

func DashboardSimpleAttributeAggregationFunctionPtr(v string) DashboardSimpleAttributeAggregationFunctionPtrInput {
	return (*dashboardSimpleAttributeAggregationFunctionPtr)(&v)
}

func (*dashboardSimpleAttributeAggregationFunctionPtr) ElementType() reflect.Type {
	return dashboardSimpleAttributeAggregationFunctionPtrType
}

func (in *dashboardSimpleAttributeAggregationFunctionPtr) ToDashboardSimpleAttributeAggregationFunctionPtrOutput() DashboardSimpleAttributeAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(DashboardSimpleAttributeAggregationFunctionPtrOutput)
}

func (in *dashboardSimpleAttributeAggregationFunctionPtr) ToDashboardSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleAttributeAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSimpleAttributeAggregationFunctionPtrOutput)
}

type DashboardSimpleNumericalAggregationFunction string

const (
	DashboardSimpleNumericalAggregationFunctionSum           = DashboardSimpleNumericalAggregationFunction("SUM")
	DashboardSimpleNumericalAggregationFunctionAverage       = DashboardSimpleNumericalAggregationFunction("AVERAGE")
	DashboardSimpleNumericalAggregationFunctionMin           = DashboardSimpleNumericalAggregationFunction("MIN")
	DashboardSimpleNumericalAggregationFunctionMax           = DashboardSimpleNumericalAggregationFunction("MAX")
	DashboardSimpleNumericalAggregationFunctionCount         = DashboardSimpleNumericalAggregationFunction("COUNT")
	DashboardSimpleNumericalAggregationFunctionDistinctCount = DashboardSimpleNumericalAggregationFunction("DISTINCT_COUNT")
	DashboardSimpleNumericalAggregationFunctionVar           = DashboardSimpleNumericalAggregationFunction("VAR")
	DashboardSimpleNumericalAggregationFunctionVarp          = DashboardSimpleNumericalAggregationFunction("VARP")
	DashboardSimpleNumericalAggregationFunctionStdev         = DashboardSimpleNumericalAggregationFunction("STDEV")
	DashboardSimpleNumericalAggregationFunctionStdevp        = DashboardSimpleNumericalAggregationFunction("STDEVP")
	DashboardSimpleNumericalAggregationFunctionMedian        = DashboardSimpleNumericalAggregationFunction("MEDIAN")
)

func (DashboardSimpleNumericalAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSimpleNumericalAggregationFunction)(nil)).Elem()
}

func (e DashboardSimpleNumericalAggregationFunction) ToDashboardSimpleNumericalAggregationFunctionOutput() DashboardSimpleNumericalAggregationFunctionOutput {
	return pulumi.ToOutput(e).(DashboardSimpleNumericalAggregationFunctionOutput)
}

func (e DashboardSimpleNumericalAggregationFunction) ToDashboardSimpleNumericalAggregationFunctionOutputWithContext(ctx context.Context) DashboardSimpleNumericalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSimpleNumericalAggregationFunctionOutput)
}

func (e DashboardSimpleNumericalAggregationFunction) ToDashboardSimpleNumericalAggregationFunctionPtrOutput() DashboardSimpleNumericalAggregationFunctionPtrOutput {
	return e.ToDashboardSimpleNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e DashboardSimpleNumericalAggregationFunction) ToDashboardSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleNumericalAggregationFunctionPtrOutput {
	return DashboardSimpleNumericalAggregationFunction(e).ToDashboardSimpleNumericalAggregationFunctionOutputWithContext(ctx).ToDashboardSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx)
}

func (e DashboardSimpleNumericalAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSimpleNumericalAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSimpleNumericalAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSimpleNumericalAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSimpleNumericalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (DashboardSimpleNumericalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSimpleNumericalAggregationFunction)(nil)).Elem()
}

func (o DashboardSimpleNumericalAggregationFunctionOutput) ToDashboardSimpleNumericalAggregationFunctionOutput() DashboardSimpleNumericalAggregationFunctionOutput {
	return o
}

func (o DashboardSimpleNumericalAggregationFunctionOutput) ToDashboardSimpleNumericalAggregationFunctionOutputWithContext(ctx context.Context) DashboardSimpleNumericalAggregationFunctionOutput {
	return o
}

func (o DashboardSimpleNumericalAggregationFunctionOutput) ToDashboardSimpleNumericalAggregationFunctionPtrOutput() DashboardSimpleNumericalAggregationFunctionPtrOutput {
	return o.ToDashboardSimpleNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o DashboardSimpleNumericalAggregationFunctionOutput) ToDashboardSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleNumericalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSimpleNumericalAggregationFunction) *DashboardSimpleNumericalAggregationFunction {
		return &v
	}).(DashboardSimpleNumericalAggregationFunctionPtrOutput)
}

func (o DashboardSimpleNumericalAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSimpleNumericalAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSimpleNumericalAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSimpleNumericalAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSimpleNumericalAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSimpleNumericalAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSimpleNumericalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (DashboardSimpleNumericalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSimpleNumericalAggregationFunction)(nil)).Elem()
}

func (o DashboardSimpleNumericalAggregationFunctionPtrOutput) ToDashboardSimpleNumericalAggregationFunctionPtrOutput() DashboardSimpleNumericalAggregationFunctionPtrOutput {
	return o
}

func (o DashboardSimpleNumericalAggregationFunctionPtrOutput) ToDashboardSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleNumericalAggregationFunctionPtrOutput {
	return o
}

func (o DashboardSimpleNumericalAggregationFunctionPtrOutput) Elem() DashboardSimpleNumericalAggregationFunctionOutput {
	return o.ApplyT(func(v *DashboardSimpleNumericalAggregationFunction) DashboardSimpleNumericalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret DashboardSimpleNumericalAggregationFunction
		return ret
	}).(DashboardSimpleNumericalAggregationFunctionOutput)
}

func (o DashboardSimpleNumericalAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSimpleNumericalAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSimpleNumericalAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSimpleNumericalAggregationFunctionInput is an input type that accepts values of the DashboardSimpleNumericalAggregationFunction enum
// A concrete instance of `DashboardSimpleNumericalAggregationFunctionInput` can be one of the following:
//
//	DashboardSimpleNumericalAggregationFunctionSum
//	DashboardSimpleNumericalAggregationFunctionAverage
//	DashboardSimpleNumericalAggregationFunctionMin
//	DashboardSimpleNumericalAggregationFunctionMax
//	DashboardSimpleNumericalAggregationFunctionCount
//	DashboardSimpleNumericalAggregationFunctionDistinctCount
//	DashboardSimpleNumericalAggregationFunctionVar
//	DashboardSimpleNumericalAggregationFunctionVarp
//	DashboardSimpleNumericalAggregationFunctionStdev
//	DashboardSimpleNumericalAggregationFunctionStdevp
//	DashboardSimpleNumericalAggregationFunctionMedian
type DashboardSimpleNumericalAggregationFunctionInput interface {
	pulumi.Input

	ToDashboardSimpleNumericalAggregationFunctionOutput() DashboardSimpleNumericalAggregationFunctionOutput
	ToDashboardSimpleNumericalAggregationFunctionOutputWithContext(context.Context) DashboardSimpleNumericalAggregationFunctionOutput
}

var dashboardSimpleNumericalAggregationFunctionPtrType = reflect.TypeOf((**DashboardSimpleNumericalAggregationFunction)(nil)).Elem()

type DashboardSimpleNumericalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToDashboardSimpleNumericalAggregationFunctionPtrOutput() DashboardSimpleNumericalAggregationFunctionPtrOutput
	ToDashboardSimpleNumericalAggregationFunctionPtrOutputWithContext(context.Context) DashboardSimpleNumericalAggregationFunctionPtrOutput
}

type dashboardSimpleNumericalAggregationFunctionPtr string

func DashboardSimpleNumericalAggregationFunctionPtr(v string) DashboardSimpleNumericalAggregationFunctionPtrInput {
	return (*dashboardSimpleNumericalAggregationFunctionPtr)(&v)
}

func (*dashboardSimpleNumericalAggregationFunctionPtr) ElementType() reflect.Type {
	return dashboardSimpleNumericalAggregationFunctionPtrType
}

func (in *dashboardSimpleNumericalAggregationFunctionPtr) ToDashboardSimpleNumericalAggregationFunctionPtrOutput() DashboardSimpleNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(DashboardSimpleNumericalAggregationFunctionPtrOutput)
}

func (in *dashboardSimpleNumericalAggregationFunctionPtr) ToDashboardSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSimpleNumericalAggregationFunctionPtrOutput)
}

type DashboardSimpleTotalAggregationFunction string

const (
	DashboardSimpleTotalAggregationFunctionDefault = DashboardSimpleTotalAggregationFunction("DEFAULT")
	DashboardSimpleTotalAggregationFunctionSum     = DashboardSimpleTotalAggregationFunction("SUM")
	DashboardSimpleTotalAggregationFunctionAverage = DashboardSimpleTotalAggregationFunction("AVERAGE")
	DashboardSimpleTotalAggregationFunctionMin     = DashboardSimpleTotalAggregationFunction("MIN")
	DashboardSimpleTotalAggregationFunctionMax     = DashboardSimpleTotalAggregationFunction("MAX")
	DashboardSimpleTotalAggregationFunctionNone    = DashboardSimpleTotalAggregationFunction("NONE")
)

func (DashboardSimpleTotalAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSimpleTotalAggregationFunction)(nil)).Elem()
}

func (e DashboardSimpleTotalAggregationFunction) ToDashboardSimpleTotalAggregationFunctionOutput() DashboardSimpleTotalAggregationFunctionOutput {
	return pulumi.ToOutput(e).(DashboardSimpleTotalAggregationFunctionOutput)
}

func (e DashboardSimpleTotalAggregationFunction) ToDashboardSimpleTotalAggregationFunctionOutputWithContext(ctx context.Context) DashboardSimpleTotalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSimpleTotalAggregationFunctionOutput)
}

func (e DashboardSimpleTotalAggregationFunction) ToDashboardSimpleTotalAggregationFunctionPtrOutput() DashboardSimpleTotalAggregationFunctionPtrOutput {
	return e.ToDashboardSimpleTotalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e DashboardSimpleTotalAggregationFunction) ToDashboardSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleTotalAggregationFunctionPtrOutput {
	return DashboardSimpleTotalAggregationFunction(e).ToDashboardSimpleTotalAggregationFunctionOutputWithContext(ctx).ToDashboardSimpleTotalAggregationFunctionPtrOutputWithContext(ctx)
}

func (e DashboardSimpleTotalAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSimpleTotalAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSimpleTotalAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSimpleTotalAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSimpleTotalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (DashboardSimpleTotalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSimpleTotalAggregationFunction)(nil)).Elem()
}

func (o DashboardSimpleTotalAggregationFunctionOutput) ToDashboardSimpleTotalAggregationFunctionOutput() DashboardSimpleTotalAggregationFunctionOutput {
	return o
}

func (o DashboardSimpleTotalAggregationFunctionOutput) ToDashboardSimpleTotalAggregationFunctionOutputWithContext(ctx context.Context) DashboardSimpleTotalAggregationFunctionOutput {
	return o
}

func (o DashboardSimpleTotalAggregationFunctionOutput) ToDashboardSimpleTotalAggregationFunctionPtrOutput() DashboardSimpleTotalAggregationFunctionPtrOutput {
	return o.ToDashboardSimpleTotalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o DashboardSimpleTotalAggregationFunctionOutput) ToDashboardSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleTotalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSimpleTotalAggregationFunction) *DashboardSimpleTotalAggregationFunction {
		return &v
	}).(DashboardSimpleTotalAggregationFunctionPtrOutput)
}

func (o DashboardSimpleTotalAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSimpleTotalAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSimpleTotalAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSimpleTotalAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSimpleTotalAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSimpleTotalAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSimpleTotalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (DashboardSimpleTotalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSimpleTotalAggregationFunction)(nil)).Elem()
}

func (o DashboardSimpleTotalAggregationFunctionPtrOutput) ToDashboardSimpleTotalAggregationFunctionPtrOutput() DashboardSimpleTotalAggregationFunctionPtrOutput {
	return o
}

func (o DashboardSimpleTotalAggregationFunctionPtrOutput) ToDashboardSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleTotalAggregationFunctionPtrOutput {
	return o
}

func (o DashboardSimpleTotalAggregationFunctionPtrOutput) Elem() DashboardSimpleTotalAggregationFunctionOutput {
	return o.ApplyT(func(v *DashboardSimpleTotalAggregationFunction) DashboardSimpleTotalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret DashboardSimpleTotalAggregationFunction
		return ret
	}).(DashboardSimpleTotalAggregationFunctionOutput)
}

func (o DashboardSimpleTotalAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSimpleTotalAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSimpleTotalAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSimpleTotalAggregationFunctionInput is an input type that accepts values of the DashboardSimpleTotalAggregationFunction enum
// A concrete instance of `DashboardSimpleTotalAggregationFunctionInput` can be one of the following:
//
//	DashboardSimpleTotalAggregationFunctionDefault
//	DashboardSimpleTotalAggregationFunctionSum
//	DashboardSimpleTotalAggregationFunctionAverage
//	DashboardSimpleTotalAggregationFunctionMin
//	DashboardSimpleTotalAggregationFunctionMax
//	DashboardSimpleTotalAggregationFunctionNone
type DashboardSimpleTotalAggregationFunctionInput interface {
	pulumi.Input

	ToDashboardSimpleTotalAggregationFunctionOutput() DashboardSimpleTotalAggregationFunctionOutput
	ToDashboardSimpleTotalAggregationFunctionOutputWithContext(context.Context) DashboardSimpleTotalAggregationFunctionOutput
}

var dashboardSimpleTotalAggregationFunctionPtrType = reflect.TypeOf((**DashboardSimpleTotalAggregationFunction)(nil)).Elem()

type DashboardSimpleTotalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToDashboardSimpleTotalAggregationFunctionPtrOutput() DashboardSimpleTotalAggregationFunctionPtrOutput
	ToDashboardSimpleTotalAggregationFunctionPtrOutputWithContext(context.Context) DashboardSimpleTotalAggregationFunctionPtrOutput
}

type dashboardSimpleTotalAggregationFunctionPtr string

func DashboardSimpleTotalAggregationFunctionPtr(v string) DashboardSimpleTotalAggregationFunctionPtrInput {
	return (*dashboardSimpleTotalAggregationFunctionPtr)(&v)
}

func (*dashboardSimpleTotalAggregationFunctionPtr) ElementType() reflect.Type {
	return dashboardSimpleTotalAggregationFunctionPtrType
}

func (in *dashboardSimpleTotalAggregationFunctionPtr) ToDashboardSimpleTotalAggregationFunctionPtrOutput() DashboardSimpleTotalAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(DashboardSimpleTotalAggregationFunctionPtrOutput)
}

func (in *dashboardSimpleTotalAggregationFunctionPtr) ToDashboardSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardSimpleTotalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSimpleTotalAggregationFunctionPtrOutput)
}

type DashboardSmallMultiplesAxisPlacement string

const (
	DashboardSmallMultiplesAxisPlacementOutside = DashboardSmallMultiplesAxisPlacement("OUTSIDE")
	DashboardSmallMultiplesAxisPlacementInside  = DashboardSmallMultiplesAxisPlacement("INSIDE")
)

func (DashboardSmallMultiplesAxisPlacement) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSmallMultiplesAxisPlacement)(nil)).Elem()
}

func (e DashboardSmallMultiplesAxisPlacement) ToDashboardSmallMultiplesAxisPlacementOutput() DashboardSmallMultiplesAxisPlacementOutput {
	return pulumi.ToOutput(e).(DashboardSmallMultiplesAxisPlacementOutput)
}

func (e DashboardSmallMultiplesAxisPlacement) ToDashboardSmallMultiplesAxisPlacementOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSmallMultiplesAxisPlacementOutput)
}

func (e DashboardSmallMultiplesAxisPlacement) ToDashboardSmallMultiplesAxisPlacementPtrOutput() DashboardSmallMultiplesAxisPlacementPtrOutput {
	return e.ToDashboardSmallMultiplesAxisPlacementPtrOutputWithContext(context.Background())
}

func (e DashboardSmallMultiplesAxisPlacement) ToDashboardSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisPlacementPtrOutput {
	return DashboardSmallMultiplesAxisPlacement(e).ToDashboardSmallMultiplesAxisPlacementOutputWithContext(ctx).ToDashboardSmallMultiplesAxisPlacementPtrOutputWithContext(ctx)
}

func (e DashboardSmallMultiplesAxisPlacement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSmallMultiplesAxisPlacement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSmallMultiplesAxisPlacement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSmallMultiplesAxisPlacement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSmallMultiplesAxisPlacementOutput struct{ *pulumi.OutputState }

func (DashboardSmallMultiplesAxisPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSmallMultiplesAxisPlacement)(nil)).Elem()
}

func (o DashboardSmallMultiplesAxisPlacementOutput) ToDashboardSmallMultiplesAxisPlacementOutput() DashboardSmallMultiplesAxisPlacementOutput {
	return o
}

func (o DashboardSmallMultiplesAxisPlacementOutput) ToDashboardSmallMultiplesAxisPlacementOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisPlacementOutput {
	return o
}

func (o DashboardSmallMultiplesAxisPlacementOutput) ToDashboardSmallMultiplesAxisPlacementPtrOutput() DashboardSmallMultiplesAxisPlacementPtrOutput {
	return o.ToDashboardSmallMultiplesAxisPlacementPtrOutputWithContext(context.Background())
}

func (o DashboardSmallMultiplesAxisPlacementOutput) ToDashboardSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisPlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSmallMultiplesAxisPlacement) *DashboardSmallMultiplesAxisPlacement {
		return &v
	}).(DashboardSmallMultiplesAxisPlacementPtrOutput)
}

func (o DashboardSmallMultiplesAxisPlacementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSmallMultiplesAxisPlacementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSmallMultiplesAxisPlacement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSmallMultiplesAxisPlacementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSmallMultiplesAxisPlacementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSmallMultiplesAxisPlacement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSmallMultiplesAxisPlacementPtrOutput struct{ *pulumi.OutputState }

func (DashboardSmallMultiplesAxisPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSmallMultiplesAxisPlacement)(nil)).Elem()
}

func (o DashboardSmallMultiplesAxisPlacementPtrOutput) ToDashboardSmallMultiplesAxisPlacementPtrOutput() DashboardSmallMultiplesAxisPlacementPtrOutput {
	return o
}

func (o DashboardSmallMultiplesAxisPlacementPtrOutput) ToDashboardSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisPlacementPtrOutput {
	return o
}

func (o DashboardSmallMultiplesAxisPlacementPtrOutput) Elem() DashboardSmallMultiplesAxisPlacementOutput {
	return o.ApplyT(func(v *DashboardSmallMultiplesAxisPlacement) DashboardSmallMultiplesAxisPlacement {
		if v != nil {
			return *v
		}
		var ret DashboardSmallMultiplesAxisPlacement
		return ret
	}).(DashboardSmallMultiplesAxisPlacementOutput)
}

func (o DashboardSmallMultiplesAxisPlacementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSmallMultiplesAxisPlacementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSmallMultiplesAxisPlacement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSmallMultiplesAxisPlacementInput is an input type that accepts values of the DashboardSmallMultiplesAxisPlacement enum
// A concrete instance of `DashboardSmallMultiplesAxisPlacementInput` can be one of the following:
//
//	DashboardSmallMultiplesAxisPlacementOutside
//	DashboardSmallMultiplesAxisPlacementInside
type DashboardSmallMultiplesAxisPlacementInput interface {
	pulumi.Input

	ToDashboardSmallMultiplesAxisPlacementOutput() DashboardSmallMultiplesAxisPlacementOutput
	ToDashboardSmallMultiplesAxisPlacementOutputWithContext(context.Context) DashboardSmallMultiplesAxisPlacementOutput
}

var dashboardSmallMultiplesAxisPlacementPtrType = reflect.TypeOf((**DashboardSmallMultiplesAxisPlacement)(nil)).Elem()

type DashboardSmallMultiplesAxisPlacementPtrInput interface {
	pulumi.Input

	ToDashboardSmallMultiplesAxisPlacementPtrOutput() DashboardSmallMultiplesAxisPlacementPtrOutput
	ToDashboardSmallMultiplesAxisPlacementPtrOutputWithContext(context.Context) DashboardSmallMultiplesAxisPlacementPtrOutput
}

type dashboardSmallMultiplesAxisPlacementPtr string

func DashboardSmallMultiplesAxisPlacementPtr(v string) DashboardSmallMultiplesAxisPlacementPtrInput {
	return (*dashboardSmallMultiplesAxisPlacementPtr)(&v)
}

func (*dashboardSmallMultiplesAxisPlacementPtr) ElementType() reflect.Type {
	return dashboardSmallMultiplesAxisPlacementPtrType
}

func (in *dashboardSmallMultiplesAxisPlacementPtr) ToDashboardSmallMultiplesAxisPlacementPtrOutput() DashboardSmallMultiplesAxisPlacementPtrOutput {
	return pulumi.ToOutput(in).(DashboardSmallMultiplesAxisPlacementPtrOutput)
}

func (in *dashboardSmallMultiplesAxisPlacementPtr) ToDashboardSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSmallMultiplesAxisPlacementPtrOutput)
}

type DashboardSmallMultiplesAxisScale string

const (
	DashboardSmallMultiplesAxisScaleShared      = DashboardSmallMultiplesAxisScale("SHARED")
	DashboardSmallMultiplesAxisScaleIndependent = DashboardSmallMultiplesAxisScale("INDEPENDENT")
)

func (DashboardSmallMultiplesAxisScale) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSmallMultiplesAxisScale)(nil)).Elem()
}

func (e DashboardSmallMultiplesAxisScale) ToDashboardSmallMultiplesAxisScaleOutput() DashboardSmallMultiplesAxisScaleOutput {
	return pulumi.ToOutput(e).(DashboardSmallMultiplesAxisScaleOutput)
}

func (e DashboardSmallMultiplesAxisScale) ToDashboardSmallMultiplesAxisScaleOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisScaleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSmallMultiplesAxisScaleOutput)
}

func (e DashboardSmallMultiplesAxisScale) ToDashboardSmallMultiplesAxisScalePtrOutput() DashboardSmallMultiplesAxisScalePtrOutput {
	return e.ToDashboardSmallMultiplesAxisScalePtrOutputWithContext(context.Background())
}

func (e DashboardSmallMultiplesAxisScale) ToDashboardSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisScalePtrOutput {
	return DashboardSmallMultiplesAxisScale(e).ToDashboardSmallMultiplesAxisScaleOutputWithContext(ctx).ToDashboardSmallMultiplesAxisScalePtrOutputWithContext(ctx)
}

func (e DashboardSmallMultiplesAxisScale) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSmallMultiplesAxisScale) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSmallMultiplesAxisScale) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSmallMultiplesAxisScale) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSmallMultiplesAxisScaleOutput struct{ *pulumi.OutputState }

func (DashboardSmallMultiplesAxisScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSmallMultiplesAxisScale)(nil)).Elem()
}

func (o DashboardSmallMultiplesAxisScaleOutput) ToDashboardSmallMultiplesAxisScaleOutput() DashboardSmallMultiplesAxisScaleOutput {
	return o
}

func (o DashboardSmallMultiplesAxisScaleOutput) ToDashboardSmallMultiplesAxisScaleOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisScaleOutput {
	return o
}

func (o DashboardSmallMultiplesAxisScaleOutput) ToDashboardSmallMultiplesAxisScalePtrOutput() DashboardSmallMultiplesAxisScalePtrOutput {
	return o.ToDashboardSmallMultiplesAxisScalePtrOutputWithContext(context.Background())
}

func (o DashboardSmallMultiplesAxisScaleOutput) ToDashboardSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSmallMultiplesAxisScale) *DashboardSmallMultiplesAxisScale {
		return &v
	}).(DashboardSmallMultiplesAxisScalePtrOutput)
}

func (o DashboardSmallMultiplesAxisScaleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSmallMultiplesAxisScaleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSmallMultiplesAxisScale) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSmallMultiplesAxisScaleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSmallMultiplesAxisScaleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSmallMultiplesAxisScale) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSmallMultiplesAxisScalePtrOutput struct{ *pulumi.OutputState }

func (DashboardSmallMultiplesAxisScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSmallMultiplesAxisScale)(nil)).Elem()
}

func (o DashboardSmallMultiplesAxisScalePtrOutput) ToDashboardSmallMultiplesAxisScalePtrOutput() DashboardSmallMultiplesAxisScalePtrOutput {
	return o
}

func (o DashboardSmallMultiplesAxisScalePtrOutput) ToDashboardSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisScalePtrOutput {
	return o
}

func (o DashboardSmallMultiplesAxisScalePtrOutput) Elem() DashboardSmallMultiplesAxisScaleOutput {
	return o.ApplyT(func(v *DashboardSmallMultiplesAxisScale) DashboardSmallMultiplesAxisScale {
		if v != nil {
			return *v
		}
		var ret DashboardSmallMultiplesAxisScale
		return ret
	}).(DashboardSmallMultiplesAxisScaleOutput)
}

func (o DashboardSmallMultiplesAxisScalePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSmallMultiplesAxisScalePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSmallMultiplesAxisScale) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSmallMultiplesAxisScaleInput is an input type that accepts values of the DashboardSmallMultiplesAxisScale enum
// A concrete instance of `DashboardSmallMultiplesAxisScaleInput` can be one of the following:
//
//	DashboardSmallMultiplesAxisScaleShared
//	DashboardSmallMultiplesAxisScaleIndependent
type DashboardSmallMultiplesAxisScaleInput interface {
	pulumi.Input

	ToDashboardSmallMultiplesAxisScaleOutput() DashboardSmallMultiplesAxisScaleOutput
	ToDashboardSmallMultiplesAxisScaleOutputWithContext(context.Context) DashboardSmallMultiplesAxisScaleOutput
}

var dashboardSmallMultiplesAxisScalePtrType = reflect.TypeOf((**DashboardSmallMultiplesAxisScale)(nil)).Elem()

type DashboardSmallMultiplesAxisScalePtrInput interface {
	pulumi.Input

	ToDashboardSmallMultiplesAxisScalePtrOutput() DashboardSmallMultiplesAxisScalePtrOutput
	ToDashboardSmallMultiplesAxisScalePtrOutputWithContext(context.Context) DashboardSmallMultiplesAxisScalePtrOutput
}

type dashboardSmallMultiplesAxisScalePtr string

func DashboardSmallMultiplesAxisScalePtr(v string) DashboardSmallMultiplesAxisScalePtrInput {
	return (*dashboardSmallMultiplesAxisScalePtr)(&v)
}

func (*dashboardSmallMultiplesAxisScalePtr) ElementType() reflect.Type {
	return dashboardSmallMultiplesAxisScalePtrType
}

func (in *dashboardSmallMultiplesAxisScalePtr) ToDashboardSmallMultiplesAxisScalePtrOutput() DashboardSmallMultiplesAxisScalePtrOutput {
	return pulumi.ToOutput(in).(DashboardSmallMultiplesAxisScalePtrOutput)
}

func (in *dashboardSmallMultiplesAxisScalePtr) ToDashboardSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSmallMultiplesAxisScalePtrOutput)
}

type DashboardSortDirection string

const (
	DashboardSortDirectionAsc  = DashboardSortDirection("ASC")
	DashboardSortDirectionDesc = DashboardSortDirection("DESC")
)

func (DashboardSortDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSortDirection)(nil)).Elem()
}

func (e DashboardSortDirection) ToDashboardSortDirectionOutput() DashboardSortDirectionOutput {
	return pulumi.ToOutput(e).(DashboardSortDirectionOutput)
}

func (e DashboardSortDirection) ToDashboardSortDirectionOutputWithContext(ctx context.Context) DashboardSortDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSortDirectionOutput)
}

func (e DashboardSortDirection) ToDashboardSortDirectionPtrOutput() DashboardSortDirectionPtrOutput {
	return e.ToDashboardSortDirectionPtrOutputWithContext(context.Background())
}

func (e DashboardSortDirection) ToDashboardSortDirectionPtrOutputWithContext(ctx context.Context) DashboardSortDirectionPtrOutput {
	return DashboardSortDirection(e).ToDashboardSortDirectionOutputWithContext(ctx).ToDashboardSortDirectionPtrOutputWithContext(ctx)
}

func (e DashboardSortDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSortDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSortDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSortDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSortDirectionOutput struct{ *pulumi.OutputState }

func (DashboardSortDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSortDirection)(nil)).Elem()
}

func (o DashboardSortDirectionOutput) ToDashboardSortDirectionOutput() DashboardSortDirectionOutput {
	return o
}

func (o DashboardSortDirectionOutput) ToDashboardSortDirectionOutputWithContext(ctx context.Context) DashboardSortDirectionOutput {
	return o
}

func (o DashboardSortDirectionOutput) ToDashboardSortDirectionPtrOutput() DashboardSortDirectionPtrOutput {
	return o.ToDashboardSortDirectionPtrOutputWithContext(context.Background())
}

func (o DashboardSortDirectionOutput) ToDashboardSortDirectionPtrOutputWithContext(ctx context.Context) DashboardSortDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSortDirection) *DashboardSortDirection {
		return &v
	}).(DashboardSortDirectionPtrOutput)
}

func (o DashboardSortDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSortDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSortDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSortDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSortDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSortDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSortDirectionPtrOutput struct{ *pulumi.OutputState }

func (DashboardSortDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSortDirection)(nil)).Elem()
}

func (o DashboardSortDirectionPtrOutput) ToDashboardSortDirectionPtrOutput() DashboardSortDirectionPtrOutput {
	return o
}

func (o DashboardSortDirectionPtrOutput) ToDashboardSortDirectionPtrOutputWithContext(ctx context.Context) DashboardSortDirectionPtrOutput {
	return o
}

func (o DashboardSortDirectionPtrOutput) Elem() DashboardSortDirectionOutput {
	return o.ApplyT(func(v *DashboardSortDirection) DashboardSortDirection {
		if v != nil {
			return *v
		}
		var ret DashboardSortDirection
		return ret
	}).(DashboardSortDirectionOutput)
}

func (o DashboardSortDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSortDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSortDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSortDirectionInput is an input type that accepts values of the DashboardSortDirection enum
// A concrete instance of `DashboardSortDirectionInput` can be one of the following:
//
//	DashboardSortDirectionAsc
//	DashboardSortDirectionDesc
type DashboardSortDirectionInput interface {
	pulumi.Input

	ToDashboardSortDirectionOutput() DashboardSortDirectionOutput
	ToDashboardSortDirectionOutputWithContext(context.Context) DashboardSortDirectionOutput
}

var dashboardSortDirectionPtrType = reflect.TypeOf((**DashboardSortDirection)(nil)).Elem()

type DashboardSortDirectionPtrInput interface {
	pulumi.Input

	ToDashboardSortDirectionPtrOutput() DashboardSortDirectionPtrOutput
	ToDashboardSortDirectionPtrOutputWithContext(context.Context) DashboardSortDirectionPtrOutput
}

type dashboardSortDirectionPtr string

func DashboardSortDirectionPtr(v string) DashboardSortDirectionPtrInput {
	return (*dashboardSortDirectionPtr)(&v)
}

func (*dashboardSortDirectionPtr) ElementType() reflect.Type {
	return dashboardSortDirectionPtrType
}

func (in *dashboardSortDirectionPtr) ToDashboardSortDirectionPtrOutput() DashboardSortDirectionPtrOutput {
	return pulumi.ToOutput(in).(DashboardSortDirectionPtrOutput)
}

func (in *dashboardSortDirectionPtr) ToDashboardSortDirectionPtrOutputWithContext(ctx context.Context) DashboardSortDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSortDirectionPtrOutput)
}

type DashboardSpecialValue string

const (
	DashboardSpecialValueEmpty = DashboardSpecialValue("EMPTY")
	DashboardSpecialValueNull  = DashboardSpecialValue("NULL")
	DashboardSpecialValueOther = DashboardSpecialValue("OTHER")
)

func (DashboardSpecialValue) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSpecialValue)(nil)).Elem()
}

func (e DashboardSpecialValue) ToDashboardSpecialValueOutput() DashboardSpecialValueOutput {
	return pulumi.ToOutput(e).(DashboardSpecialValueOutput)
}

func (e DashboardSpecialValue) ToDashboardSpecialValueOutputWithContext(ctx context.Context) DashboardSpecialValueOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardSpecialValueOutput)
}

func (e DashboardSpecialValue) ToDashboardSpecialValuePtrOutput() DashboardSpecialValuePtrOutput {
	return e.ToDashboardSpecialValuePtrOutputWithContext(context.Background())
}

func (e DashboardSpecialValue) ToDashboardSpecialValuePtrOutputWithContext(ctx context.Context) DashboardSpecialValuePtrOutput {
	return DashboardSpecialValue(e).ToDashboardSpecialValueOutputWithContext(ctx).ToDashboardSpecialValuePtrOutputWithContext(ctx)
}

func (e DashboardSpecialValue) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSpecialValue) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardSpecialValue) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardSpecialValue) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardSpecialValueOutput struct{ *pulumi.OutputState }

func (DashboardSpecialValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSpecialValue)(nil)).Elem()
}

func (o DashboardSpecialValueOutput) ToDashboardSpecialValueOutput() DashboardSpecialValueOutput {
	return o
}

func (o DashboardSpecialValueOutput) ToDashboardSpecialValueOutputWithContext(ctx context.Context) DashboardSpecialValueOutput {
	return o
}

func (o DashboardSpecialValueOutput) ToDashboardSpecialValuePtrOutput() DashboardSpecialValuePtrOutput {
	return o.ToDashboardSpecialValuePtrOutputWithContext(context.Background())
}

func (o DashboardSpecialValueOutput) ToDashboardSpecialValuePtrOutputWithContext(ctx context.Context) DashboardSpecialValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSpecialValue) *DashboardSpecialValue {
		return &v
	}).(DashboardSpecialValuePtrOutput)
}

func (o DashboardSpecialValueOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardSpecialValueOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSpecialValue) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardSpecialValueOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSpecialValueOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardSpecialValue) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardSpecialValuePtrOutput struct{ *pulumi.OutputState }

func (DashboardSpecialValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSpecialValue)(nil)).Elem()
}

func (o DashboardSpecialValuePtrOutput) ToDashboardSpecialValuePtrOutput() DashboardSpecialValuePtrOutput {
	return o
}

func (o DashboardSpecialValuePtrOutput) ToDashboardSpecialValuePtrOutputWithContext(ctx context.Context) DashboardSpecialValuePtrOutput {
	return o
}

func (o DashboardSpecialValuePtrOutput) Elem() DashboardSpecialValueOutput {
	return o.ApplyT(func(v *DashboardSpecialValue) DashboardSpecialValue {
		if v != nil {
			return *v
		}
		var ret DashboardSpecialValue
		return ret
	}).(DashboardSpecialValueOutput)
}

func (o DashboardSpecialValuePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardSpecialValuePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardSpecialValue) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardSpecialValueInput is an input type that accepts values of the DashboardSpecialValue enum
// A concrete instance of `DashboardSpecialValueInput` can be one of the following:
//
//	DashboardSpecialValueEmpty
//	DashboardSpecialValueNull
//	DashboardSpecialValueOther
type DashboardSpecialValueInput interface {
	pulumi.Input

	ToDashboardSpecialValueOutput() DashboardSpecialValueOutput
	ToDashboardSpecialValueOutputWithContext(context.Context) DashboardSpecialValueOutput
}

var dashboardSpecialValuePtrType = reflect.TypeOf((**DashboardSpecialValue)(nil)).Elem()

type DashboardSpecialValuePtrInput interface {
	pulumi.Input

	ToDashboardSpecialValuePtrOutput() DashboardSpecialValuePtrOutput
	ToDashboardSpecialValuePtrOutputWithContext(context.Context) DashboardSpecialValuePtrOutput
}

type dashboardSpecialValuePtr string

func DashboardSpecialValuePtr(v string) DashboardSpecialValuePtrInput {
	return (*dashboardSpecialValuePtr)(&v)
}

func (*dashboardSpecialValuePtr) ElementType() reflect.Type {
	return dashboardSpecialValuePtrType
}

func (in *dashboardSpecialValuePtr) ToDashboardSpecialValuePtrOutput() DashboardSpecialValuePtrOutput {
	return pulumi.ToOutput(in).(DashboardSpecialValuePtrOutput)
}

func (in *dashboardSpecialValuePtr) ToDashboardSpecialValuePtrOutputWithContext(ctx context.Context) DashboardSpecialValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardSpecialValuePtrOutput)
}

type DashboardStyledCellType string

const (
	DashboardStyledCellTypeTotal        = DashboardStyledCellType("TOTAL")
	DashboardStyledCellTypeMetricHeader = DashboardStyledCellType("METRIC_HEADER")
	DashboardStyledCellTypeValue        = DashboardStyledCellType("VALUE")
)

func (DashboardStyledCellType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStyledCellType)(nil)).Elem()
}

func (e DashboardStyledCellType) ToDashboardStyledCellTypeOutput() DashboardStyledCellTypeOutput {
	return pulumi.ToOutput(e).(DashboardStyledCellTypeOutput)
}

func (e DashboardStyledCellType) ToDashboardStyledCellTypeOutputWithContext(ctx context.Context) DashboardStyledCellTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardStyledCellTypeOutput)
}

func (e DashboardStyledCellType) ToDashboardStyledCellTypePtrOutput() DashboardStyledCellTypePtrOutput {
	return e.ToDashboardStyledCellTypePtrOutputWithContext(context.Background())
}

func (e DashboardStyledCellType) ToDashboardStyledCellTypePtrOutputWithContext(ctx context.Context) DashboardStyledCellTypePtrOutput {
	return DashboardStyledCellType(e).ToDashboardStyledCellTypeOutputWithContext(ctx).ToDashboardStyledCellTypePtrOutputWithContext(ctx)
}

func (e DashboardStyledCellType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardStyledCellType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardStyledCellType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardStyledCellType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardStyledCellTypeOutput struct{ *pulumi.OutputState }

func (DashboardStyledCellTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStyledCellType)(nil)).Elem()
}

func (o DashboardStyledCellTypeOutput) ToDashboardStyledCellTypeOutput() DashboardStyledCellTypeOutput {
	return o
}

func (o DashboardStyledCellTypeOutput) ToDashboardStyledCellTypeOutputWithContext(ctx context.Context) DashboardStyledCellTypeOutput {
	return o
}

func (o DashboardStyledCellTypeOutput) ToDashboardStyledCellTypePtrOutput() DashboardStyledCellTypePtrOutput {
	return o.ToDashboardStyledCellTypePtrOutputWithContext(context.Background())
}

func (o DashboardStyledCellTypeOutput) ToDashboardStyledCellTypePtrOutputWithContext(ctx context.Context) DashboardStyledCellTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardStyledCellType) *DashboardStyledCellType {
		return &v
	}).(DashboardStyledCellTypePtrOutput)
}

func (o DashboardStyledCellTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardStyledCellTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardStyledCellType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardStyledCellTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardStyledCellTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardStyledCellType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardStyledCellTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardStyledCellTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardStyledCellType)(nil)).Elem()
}

func (o DashboardStyledCellTypePtrOutput) ToDashboardStyledCellTypePtrOutput() DashboardStyledCellTypePtrOutput {
	return o
}

func (o DashboardStyledCellTypePtrOutput) ToDashboardStyledCellTypePtrOutputWithContext(ctx context.Context) DashboardStyledCellTypePtrOutput {
	return o
}

func (o DashboardStyledCellTypePtrOutput) Elem() DashboardStyledCellTypeOutput {
	return o.ApplyT(func(v *DashboardStyledCellType) DashboardStyledCellType {
		if v != nil {
			return *v
		}
		var ret DashboardStyledCellType
		return ret
	}).(DashboardStyledCellTypeOutput)
}

func (o DashboardStyledCellTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardStyledCellTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardStyledCellType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardStyledCellTypeInput is an input type that accepts values of the DashboardStyledCellType enum
// A concrete instance of `DashboardStyledCellTypeInput` can be one of the following:
//
//	DashboardStyledCellTypeTotal
//	DashboardStyledCellTypeMetricHeader
//	DashboardStyledCellTypeValue
type DashboardStyledCellTypeInput interface {
	pulumi.Input

	ToDashboardStyledCellTypeOutput() DashboardStyledCellTypeOutput
	ToDashboardStyledCellTypeOutputWithContext(context.Context) DashboardStyledCellTypeOutput
}

var dashboardStyledCellTypePtrType = reflect.TypeOf((**DashboardStyledCellType)(nil)).Elem()

type DashboardStyledCellTypePtrInput interface {
	pulumi.Input

	ToDashboardStyledCellTypePtrOutput() DashboardStyledCellTypePtrOutput
	ToDashboardStyledCellTypePtrOutputWithContext(context.Context) DashboardStyledCellTypePtrOutput
}

type dashboardStyledCellTypePtr string

func DashboardStyledCellTypePtr(v string) DashboardStyledCellTypePtrInput {
	return (*dashboardStyledCellTypePtr)(&v)
}

func (*dashboardStyledCellTypePtr) ElementType() reflect.Type {
	return dashboardStyledCellTypePtrType
}

func (in *dashboardStyledCellTypePtr) ToDashboardStyledCellTypePtrOutput() DashboardStyledCellTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardStyledCellTypePtrOutput)
}

func (in *dashboardStyledCellTypePtr) ToDashboardStyledCellTypePtrOutputWithContext(ctx context.Context) DashboardStyledCellTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardStyledCellTypePtrOutput)
}

type DashboardTableBorderStyle string

const (
	DashboardTableBorderStyleNone  = DashboardTableBorderStyle("NONE")
	DashboardTableBorderStyleSolid = DashboardTableBorderStyle("SOLID")
)

func (DashboardTableBorderStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableBorderStyle)(nil)).Elem()
}

func (e DashboardTableBorderStyle) ToDashboardTableBorderStyleOutput() DashboardTableBorderStyleOutput {
	return pulumi.ToOutput(e).(DashboardTableBorderStyleOutput)
}

func (e DashboardTableBorderStyle) ToDashboardTableBorderStyleOutputWithContext(ctx context.Context) DashboardTableBorderStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTableBorderStyleOutput)
}

func (e DashboardTableBorderStyle) ToDashboardTableBorderStylePtrOutput() DashboardTableBorderStylePtrOutput {
	return e.ToDashboardTableBorderStylePtrOutputWithContext(context.Background())
}

func (e DashboardTableBorderStyle) ToDashboardTableBorderStylePtrOutputWithContext(ctx context.Context) DashboardTableBorderStylePtrOutput {
	return DashboardTableBorderStyle(e).ToDashboardTableBorderStyleOutputWithContext(ctx).ToDashboardTableBorderStylePtrOutputWithContext(ctx)
}

func (e DashboardTableBorderStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableBorderStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableBorderStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTableBorderStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTableBorderStyleOutput struct{ *pulumi.OutputState }

func (DashboardTableBorderStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableBorderStyle)(nil)).Elem()
}

func (o DashboardTableBorderStyleOutput) ToDashboardTableBorderStyleOutput() DashboardTableBorderStyleOutput {
	return o
}

func (o DashboardTableBorderStyleOutput) ToDashboardTableBorderStyleOutputWithContext(ctx context.Context) DashboardTableBorderStyleOutput {
	return o
}

func (o DashboardTableBorderStyleOutput) ToDashboardTableBorderStylePtrOutput() DashboardTableBorderStylePtrOutput {
	return o.ToDashboardTableBorderStylePtrOutputWithContext(context.Background())
}

func (o DashboardTableBorderStyleOutput) ToDashboardTableBorderStylePtrOutputWithContext(ctx context.Context) DashboardTableBorderStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableBorderStyle) *DashboardTableBorderStyle {
		return &v
	}).(DashboardTableBorderStylePtrOutput)
}

func (o DashboardTableBorderStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTableBorderStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableBorderStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTableBorderStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableBorderStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableBorderStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTableBorderStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardTableBorderStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableBorderStyle)(nil)).Elem()
}

func (o DashboardTableBorderStylePtrOutput) ToDashboardTableBorderStylePtrOutput() DashboardTableBorderStylePtrOutput {
	return o
}

func (o DashboardTableBorderStylePtrOutput) ToDashboardTableBorderStylePtrOutputWithContext(ctx context.Context) DashboardTableBorderStylePtrOutput {
	return o
}

func (o DashboardTableBorderStylePtrOutput) Elem() DashboardTableBorderStyleOutput {
	return o.ApplyT(func(v *DashboardTableBorderStyle) DashboardTableBorderStyle {
		if v != nil {
			return *v
		}
		var ret DashboardTableBorderStyle
		return ret
	}).(DashboardTableBorderStyleOutput)
}

func (o DashboardTableBorderStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableBorderStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTableBorderStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTableBorderStyleInput is an input type that accepts values of the DashboardTableBorderStyle enum
// A concrete instance of `DashboardTableBorderStyleInput` can be one of the following:
//
//	DashboardTableBorderStyleNone
//	DashboardTableBorderStyleSolid
type DashboardTableBorderStyleInput interface {
	pulumi.Input

	ToDashboardTableBorderStyleOutput() DashboardTableBorderStyleOutput
	ToDashboardTableBorderStyleOutputWithContext(context.Context) DashboardTableBorderStyleOutput
}

var dashboardTableBorderStylePtrType = reflect.TypeOf((**DashboardTableBorderStyle)(nil)).Elem()

type DashboardTableBorderStylePtrInput interface {
	pulumi.Input

	ToDashboardTableBorderStylePtrOutput() DashboardTableBorderStylePtrOutput
	ToDashboardTableBorderStylePtrOutputWithContext(context.Context) DashboardTableBorderStylePtrOutput
}

type dashboardTableBorderStylePtr string

func DashboardTableBorderStylePtr(v string) DashboardTableBorderStylePtrInput {
	return (*dashboardTableBorderStylePtr)(&v)
}

func (*dashboardTableBorderStylePtr) ElementType() reflect.Type {
	return dashboardTableBorderStylePtrType
}

func (in *dashboardTableBorderStylePtr) ToDashboardTableBorderStylePtrOutput() DashboardTableBorderStylePtrOutput {
	return pulumi.ToOutput(in).(DashboardTableBorderStylePtrOutput)
}

func (in *dashboardTableBorderStylePtr) ToDashboardTableBorderStylePtrOutputWithContext(ctx context.Context) DashboardTableBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTableBorderStylePtrOutput)
}

type DashboardTableCellImageScalingConfiguration string

const (
	DashboardTableCellImageScalingConfigurationFitToCellHeight = DashboardTableCellImageScalingConfiguration("FIT_TO_CELL_HEIGHT")
	DashboardTableCellImageScalingConfigurationFitToCellWidth  = DashboardTableCellImageScalingConfiguration("FIT_TO_CELL_WIDTH")
	DashboardTableCellImageScalingConfigurationDoNotScale      = DashboardTableCellImageScalingConfiguration("DO_NOT_SCALE")
)

func (DashboardTableCellImageScalingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableCellImageScalingConfiguration)(nil)).Elem()
}

func (e DashboardTableCellImageScalingConfiguration) ToDashboardTableCellImageScalingConfigurationOutput() DashboardTableCellImageScalingConfigurationOutput {
	return pulumi.ToOutput(e).(DashboardTableCellImageScalingConfigurationOutput)
}

func (e DashboardTableCellImageScalingConfiguration) ToDashboardTableCellImageScalingConfigurationOutputWithContext(ctx context.Context) DashboardTableCellImageScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTableCellImageScalingConfigurationOutput)
}

func (e DashboardTableCellImageScalingConfiguration) ToDashboardTableCellImageScalingConfigurationPtrOutput() DashboardTableCellImageScalingConfigurationPtrOutput {
	return e.ToDashboardTableCellImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (e DashboardTableCellImageScalingConfiguration) ToDashboardTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableCellImageScalingConfigurationPtrOutput {
	return DashboardTableCellImageScalingConfiguration(e).ToDashboardTableCellImageScalingConfigurationOutputWithContext(ctx).ToDashboardTableCellImageScalingConfigurationPtrOutputWithContext(ctx)
}

func (e DashboardTableCellImageScalingConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableCellImageScalingConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableCellImageScalingConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTableCellImageScalingConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTableCellImageScalingConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardTableCellImageScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableCellImageScalingConfiguration)(nil)).Elem()
}

func (o DashboardTableCellImageScalingConfigurationOutput) ToDashboardTableCellImageScalingConfigurationOutput() DashboardTableCellImageScalingConfigurationOutput {
	return o
}

func (o DashboardTableCellImageScalingConfigurationOutput) ToDashboardTableCellImageScalingConfigurationOutputWithContext(ctx context.Context) DashboardTableCellImageScalingConfigurationOutput {
	return o
}

func (o DashboardTableCellImageScalingConfigurationOutput) ToDashboardTableCellImageScalingConfigurationPtrOutput() DashboardTableCellImageScalingConfigurationPtrOutput {
	return o.ToDashboardTableCellImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardTableCellImageScalingConfigurationOutput) ToDashboardTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableCellImageScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableCellImageScalingConfiguration) *DashboardTableCellImageScalingConfiguration {
		return &v
	}).(DashboardTableCellImageScalingConfigurationPtrOutput)
}

func (o DashboardTableCellImageScalingConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTableCellImageScalingConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableCellImageScalingConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTableCellImageScalingConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableCellImageScalingConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableCellImageScalingConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTableCellImageScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableCellImageScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableCellImageScalingConfiguration)(nil)).Elem()
}

func (o DashboardTableCellImageScalingConfigurationPtrOutput) ToDashboardTableCellImageScalingConfigurationPtrOutput() DashboardTableCellImageScalingConfigurationPtrOutput {
	return o
}

func (o DashboardTableCellImageScalingConfigurationPtrOutput) ToDashboardTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableCellImageScalingConfigurationPtrOutput {
	return o
}

func (o DashboardTableCellImageScalingConfigurationPtrOutput) Elem() DashboardTableCellImageScalingConfigurationOutput {
	return o.ApplyT(func(v *DashboardTableCellImageScalingConfiguration) DashboardTableCellImageScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardTableCellImageScalingConfiguration
		return ret
	}).(DashboardTableCellImageScalingConfigurationOutput)
}

func (o DashboardTableCellImageScalingConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableCellImageScalingConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTableCellImageScalingConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTableCellImageScalingConfigurationInput is an input type that accepts values of the DashboardTableCellImageScalingConfiguration enum
// A concrete instance of `DashboardTableCellImageScalingConfigurationInput` can be one of the following:
//
//	DashboardTableCellImageScalingConfigurationFitToCellHeight
//	DashboardTableCellImageScalingConfigurationFitToCellWidth
//	DashboardTableCellImageScalingConfigurationDoNotScale
type DashboardTableCellImageScalingConfigurationInput interface {
	pulumi.Input

	ToDashboardTableCellImageScalingConfigurationOutput() DashboardTableCellImageScalingConfigurationOutput
	ToDashboardTableCellImageScalingConfigurationOutputWithContext(context.Context) DashboardTableCellImageScalingConfigurationOutput
}

var dashboardTableCellImageScalingConfigurationPtrType = reflect.TypeOf((**DashboardTableCellImageScalingConfiguration)(nil)).Elem()

type DashboardTableCellImageScalingConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardTableCellImageScalingConfigurationPtrOutput() DashboardTableCellImageScalingConfigurationPtrOutput
	ToDashboardTableCellImageScalingConfigurationPtrOutputWithContext(context.Context) DashboardTableCellImageScalingConfigurationPtrOutput
}

type dashboardTableCellImageScalingConfigurationPtr string

func DashboardTableCellImageScalingConfigurationPtr(v string) DashboardTableCellImageScalingConfigurationPtrInput {
	return (*dashboardTableCellImageScalingConfigurationPtr)(&v)
}

func (*dashboardTableCellImageScalingConfigurationPtr) ElementType() reflect.Type {
	return dashboardTableCellImageScalingConfigurationPtrType
}

func (in *dashboardTableCellImageScalingConfigurationPtr) ToDashboardTableCellImageScalingConfigurationPtrOutput() DashboardTableCellImageScalingConfigurationPtrOutput {
	return pulumi.ToOutput(in).(DashboardTableCellImageScalingConfigurationPtrOutput)
}

func (in *dashboardTableCellImageScalingConfigurationPtr) ToDashboardTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableCellImageScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTableCellImageScalingConfigurationPtrOutput)
}

type DashboardTableFieldIconSetType string

const (
	DashboardTableFieldIconSetTypeLink = DashboardTableFieldIconSetType("LINK")
)

func (DashboardTableFieldIconSetType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldIconSetType)(nil)).Elem()
}

func (e DashboardTableFieldIconSetType) ToDashboardTableFieldIconSetTypeOutput() DashboardTableFieldIconSetTypeOutput {
	return pulumi.ToOutput(e).(DashboardTableFieldIconSetTypeOutput)
}

func (e DashboardTableFieldIconSetType) ToDashboardTableFieldIconSetTypeOutputWithContext(ctx context.Context) DashboardTableFieldIconSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTableFieldIconSetTypeOutput)
}

func (e DashboardTableFieldIconSetType) ToDashboardTableFieldIconSetTypePtrOutput() DashboardTableFieldIconSetTypePtrOutput {
	return e.ToDashboardTableFieldIconSetTypePtrOutputWithContext(context.Background())
}

func (e DashboardTableFieldIconSetType) ToDashboardTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) DashboardTableFieldIconSetTypePtrOutput {
	return DashboardTableFieldIconSetType(e).ToDashboardTableFieldIconSetTypeOutputWithContext(ctx).ToDashboardTableFieldIconSetTypePtrOutputWithContext(ctx)
}

func (e DashboardTableFieldIconSetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableFieldIconSetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableFieldIconSetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTableFieldIconSetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTableFieldIconSetTypeOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldIconSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldIconSetType)(nil)).Elem()
}

func (o DashboardTableFieldIconSetTypeOutput) ToDashboardTableFieldIconSetTypeOutput() DashboardTableFieldIconSetTypeOutput {
	return o
}

func (o DashboardTableFieldIconSetTypeOutput) ToDashboardTableFieldIconSetTypeOutputWithContext(ctx context.Context) DashboardTableFieldIconSetTypeOutput {
	return o
}

func (o DashboardTableFieldIconSetTypeOutput) ToDashboardTableFieldIconSetTypePtrOutput() DashboardTableFieldIconSetTypePtrOutput {
	return o.ToDashboardTableFieldIconSetTypePtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldIconSetTypeOutput) ToDashboardTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) DashboardTableFieldIconSetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableFieldIconSetType) *DashboardTableFieldIconSetType {
		return &v
	}).(DashboardTableFieldIconSetTypePtrOutput)
}

func (o DashboardTableFieldIconSetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTableFieldIconSetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableFieldIconSetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTableFieldIconSetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldIconSetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableFieldIconSetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTableFieldIconSetTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldIconSetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldIconSetType)(nil)).Elem()
}

func (o DashboardTableFieldIconSetTypePtrOutput) ToDashboardTableFieldIconSetTypePtrOutput() DashboardTableFieldIconSetTypePtrOutput {
	return o
}

func (o DashboardTableFieldIconSetTypePtrOutput) ToDashboardTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) DashboardTableFieldIconSetTypePtrOutput {
	return o
}

func (o DashboardTableFieldIconSetTypePtrOutput) Elem() DashboardTableFieldIconSetTypeOutput {
	return o.ApplyT(func(v *DashboardTableFieldIconSetType) DashboardTableFieldIconSetType {
		if v != nil {
			return *v
		}
		var ret DashboardTableFieldIconSetType
		return ret
	}).(DashboardTableFieldIconSetTypeOutput)
}

func (o DashboardTableFieldIconSetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldIconSetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTableFieldIconSetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTableFieldIconSetTypeInput is an input type that accepts values of the DashboardTableFieldIconSetType enum
// A concrete instance of `DashboardTableFieldIconSetTypeInput` can be one of the following:
//
//	DashboardTableFieldIconSetTypeLink
type DashboardTableFieldIconSetTypeInput interface {
	pulumi.Input

	ToDashboardTableFieldIconSetTypeOutput() DashboardTableFieldIconSetTypeOutput
	ToDashboardTableFieldIconSetTypeOutputWithContext(context.Context) DashboardTableFieldIconSetTypeOutput
}

var dashboardTableFieldIconSetTypePtrType = reflect.TypeOf((**DashboardTableFieldIconSetType)(nil)).Elem()

type DashboardTableFieldIconSetTypePtrInput interface {
	pulumi.Input

	ToDashboardTableFieldIconSetTypePtrOutput() DashboardTableFieldIconSetTypePtrOutput
	ToDashboardTableFieldIconSetTypePtrOutputWithContext(context.Context) DashboardTableFieldIconSetTypePtrOutput
}

type dashboardTableFieldIconSetTypePtr string

func DashboardTableFieldIconSetTypePtr(v string) DashboardTableFieldIconSetTypePtrInput {
	return (*dashboardTableFieldIconSetTypePtr)(&v)
}

func (*dashboardTableFieldIconSetTypePtr) ElementType() reflect.Type {
	return dashboardTableFieldIconSetTypePtrType
}

func (in *dashboardTableFieldIconSetTypePtr) ToDashboardTableFieldIconSetTypePtrOutput() DashboardTableFieldIconSetTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardTableFieldIconSetTypePtrOutput)
}

func (in *dashboardTableFieldIconSetTypePtr) ToDashboardTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) DashboardTableFieldIconSetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTableFieldIconSetTypePtrOutput)
}

type DashboardTableOrientation string

const (
	DashboardTableOrientationVertical   = DashboardTableOrientation("VERTICAL")
	DashboardTableOrientationHorizontal = DashboardTableOrientation("HORIZONTAL")
)

func (DashboardTableOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableOrientation)(nil)).Elem()
}

func (e DashboardTableOrientation) ToDashboardTableOrientationOutput() DashboardTableOrientationOutput {
	return pulumi.ToOutput(e).(DashboardTableOrientationOutput)
}

func (e DashboardTableOrientation) ToDashboardTableOrientationOutputWithContext(ctx context.Context) DashboardTableOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTableOrientationOutput)
}

func (e DashboardTableOrientation) ToDashboardTableOrientationPtrOutput() DashboardTableOrientationPtrOutput {
	return e.ToDashboardTableOrientationPtrOutputWithContext(context.Background())
}

func (e DashboardTableOrientation) ToDashboardTableOrientationPtrOutputWithContext(ctx context.Context) DashboardTableOrientationPtrOutput {
	return DashboardTableOrientation(e).ToDashboardTableOrientationOutputWithContext(ctx).ToDashboardTableOrientationPtrOutputWithContext(ctx)
}

func (e DashboardTableOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTableOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTableOrientationOutput struct{ *pulumi.OutputState }

func (DashboardTableOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableOrientation)(nil)).Elem()
}

func (o DashboardTableOrientationOutput) ToDashboardTableOrientationOutput() DashboardTableOrientationOutput {
	return o
}

func (o DashboardTableOrientationOutput) ToDashboardTableOrientationOutputWithContext(ctx context.Context) DashboardTableOrientationOutput {
	return o
}

func (o DashboardTableOrientationOutput) ToDashboardTableOrientationPtrOutput() DashboardTableOrientationPtrOutput {
	return o.ToDashboardTableOrientationPtrOutputWithContext(context.Background())
}

func (o DashboardTableOrientationOutput) ToDashboardTableOrientationPtrOutputWithContext(ctx context.Context) DashboardTableOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableOrientation) *DashboardTableOrientation {
		return &v
	}).(DashboardTableOrientationPtrOutput)
}

func (o DashboardTableOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTableOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTableOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTableOrientationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableOrientation)(nil)).Elem()
}

func (o DashboardTableOrientationPtrOutput) ToDashboardTableOrientationPtrOutput() DashboardTableOrientationPtrOutput {
	return o
}

func (o DashboardTableOrientationPtrOutput) ToDashboardTableOrientationPtrOutputWithContext(ctx context.Context) DashboardTableOrientationPtrOutput {
	return o
}

func (o DashboardTableOrientationPtrOutput) Elem() DashboardTableOrientationOutput {
	return o.ApplyT(func(v *DashboardTableOrientation) DashboardTableOrientation {
		if v != nil {
			return *v
		}
		var ret DashboardTableOrientation
		return ret
	}).(DashboardTableOrientationOutput)
}

func (o DashboardTableOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTableOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTableOrientationInput is an input type that accepts values of the DashboardTableOrientation enum
// A concrete instance of `DashboardTableOrientationInput` can be one of the following:
//
//	DashboardTableOrientationVertical
//	DashboardTableOrientationHorizontal
type DashboardTableOrientationInput interface {
	pulumi.Input

	ToDashboardTableOrientationOutput() DashboardTableOrientationOutput
	ToDashboardTableOrientationOutputWithContext(context.Context) DashboardTableOrientationOutput
}

var dashboardTableOrientationPtrType = reflect.TypeOf((**DashboardTableOrientation)(nil)).Elem()

type DashboardTableOrientationPtrInput interface {
	pulumi.Input

	ToDashboardTableOrientationPtrOutput() DashboardTableOrientationPtrOutput
	ToDashboardTableOrientationPtrOutputWithContext(context.Context) DashboardTableOrientationPtrOutput
}

type dashboardTableOrientationPtr string

func DashboardTableOrientationPtr(v string) DashboardTableOrientationPtrInput {
	return (*dashboardTableOrientationPtr)(&v)
}

func (*dashboardTableOrientationPtr) ElementType() reflect.Type {
	return dashboardTableOrientationPtrType
}

func (in *dashboardTableOrientationPtr) ToDashboardTableOrientationPtrOutput() DashboardTableOrientationPtrOutput {
	return pulumi.ToOutput(in).(DashboardTableOrientationPtrOutput)
}

func (in *dashboardTableOrientationPtr) ToDashboardTableOrientationPtrOutputWithContext(ctx context.Context) DashboardTableOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTableOrientationPtrOutput)
}

type DashboardTableTotalsPlacement string

const (
	DashboardTableTotalsPlacementStart = DashboardTableTotalsPlacement("START")
	DashboardTableTotalsPlacementEnd   = DashboardTableTotalsPlacement("END")
	DashboardTableTotalsPlacementAuto  = DashboardTableTotalsPlacement("AUTO")
)

func (DashboardTableTotalsPlacement) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableTotalsPlacement)(nil)).Elem()
}

func (e DashboardTableTotalsPlacement) ToDashboardTableTotalsPlacementOutput() DashboardTableTotalsPlacementOutput {
	return pulumi.ToOutput(e).(DashboardTableTotalsPlacementOutput)
}

func (e DashboardTableTotalsPlacement) ToDashboardTableTotalsPlacementOutputWithContext(ctx context.Context) DashboardTableTotalsPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTableTotalsPlacementOutput)
}

func (e DashboardTableTotalsPlacement) ToDashboardTableTotalsPlacementPtrOutput() DashboardTableTotalsPlacementPtrOutput {
	return e.ToDashboardTableTotalsPlacementPtrOutputWithContext(context.Background())
}

func (e DashboardTableTotalsPlacement) ToDashboardTableTotalsPlacementPtrOutputWithContext(ctx context.Context) DashboardTableTotalsPlacementPtrOutput {
	return DashboardTableTotalsPlacement(e).ToDashboardTableTotalsPlacementOutputWithContext(ctx).ToDashboardTableTotalsPlacementPtrOutputWithContext(ctx)
}

func (e DashboardTableTotalsPlacement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableTotalsPlacement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableTotalsPlacement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTableTotalsPlacement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTableTotalsPlacementOutput struct{ *pulumi.OutputState }

func (DashboardTableTotalsPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableTotalsPlacement)(nil)).Elem()
}

func (o DashboardTableTotalsPlacementOutput) ToDashboardTableTotalsPlacementOutput() DashboardTableTotalsPlacementOutput {
	return o
}

func (o DashboardTableTotalsPlacementOutput) ToDashboardTableTotalsPlacementOutputWithContext(ctx context.Context) DashboardTableTotalsPlacementOutput {
	return o
}

func (o DashboardTableTotalsPlacementOutput) ToDashboardTableTotalsPlacementPtrOutput() DashboardTableTotalsPlacementPtrOutput {
	return o.ToDashboardTableTotalsPlacementPtrOutputWithContext(context.Background())
}

func (o DashboardTableTotalsPlacementOutput) ToDashboardTableTotalsPlacementPtrOutputWithContext(ctx context.Context) DashboardTableTotalsPlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableTotalsPlacement) *DashboardTableTotalsPlacement {
		return &v
	}).(DashboardTableTotalsPlacementPtrOutput)
}

func (o DashboardTableTotalsPlacementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTableTotalsPlacementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableTotalsPlacement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTableTotalsPlacementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableTotalsPlacementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableTotalsPlacement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTableTotalsPlacementPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableTotalsPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableTotalsPlacement)(nil)).Elem()
}

func (o DashboardTableTotalsPlacementPtrOutput) ToDashboardTableTotalsPlacementPtrOutput() DashboardTableTotalsPlacementPtrOutput {
	return o
}

func (o DashboardTableTotalsPlacementPtrOutput) ToDashboardTableTotalsPlacementPtrOutputWithContext(ctx context.Context) DashboardTableTotalsPlacementPtrOutput {
	return o
}

func (o DashboardTableTotalsPlacementPtrOutput) Elem() DashboardTableTotalsPlacementOutput {
	return o.ApplyT(func(v *DashboardTableTotalsPlacement) DashboardTableTotalsPlacement {
		if v != nil {
			return *v
		}
		var ret DashboardTableTotalsPlacement
		return ret
	}).(DashboardTableTotalsPlacementOutput)
}

func (o DashboardTableTotalsPlacementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableTotalsPlacementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTableTotalsPlacement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTableTotalsPlacementInput is an input type that accepts values of the DashboardTableTotalsPlacement enum
// A concrete instance of `DashboardTableTotalsPlacementInput` can be one of the following:
//
//	DashboardTableTotalsPlacementStart
//	DashboardTableTotalsPlacementEnd
//	DashboardTableTotalsPlacementAuto
type DashboardTableTotalsPlacementInput interface {
	pulumi.Input

	ToDashboardTableTotalsPlacementOutput() DashboardTableTotalsPlacementOutput
	ToDashboardTableTotalsPlacementOutputWithContext(context.Context) DashboardTableTotalsPlacementOutput
}

var dashboardTableTotalsPlacementPtrType = reflect.TypeOf((**DashboardTableTotalsPlacement)(nil)).Elem()

type DashboardTableTotalsPlacementPtrInput interface {
	pulumi.Input

	ToDashboardTableTotalsPlacementPtrOutput() DashboardTableTotalsPlacementPtrOutput
	ToDashboardTableTotalsPlacementPtrOutputWithContext(context.Context) DashboardTableTotalsPlacementPtrOutput
}

type dashboardTableTotalsPlacementPtr string

func DashboardTableTotalsPlacementPtr(v string) DashboardTableTotalsPlacementPtrInput {
	return (*dashboardTableTotalsPlacementPtr)(&v)
}

func (*dashboardTableTotalsPlacementPtr) ElementType() reflect.Type {
	return dashboardTableTotalsPlacementPtrType
}

func (in *dashboardTableTotalsPlacementPtr) ToDashboardTableTotalsPlacementPtrOutput() DashboardTableTotalsPlacementPtrOutput {
	return pulumi.ToOutput(in).(DashboardTableTotalsPlacementPtrOutput)
}

func (in *dashboardTableTotalsPlacementPtr) ToDashboardTableTotalsPlacementPtrOutputWithContext(ctx context.Context) DashboardTableTotalsPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTableTotalsPlacementPtrOutput)
}

type DashboardTableTotalsScrollStatus string

const (
	DashboardTableTotalsScrollStatusPinned   = DashboardTableTotalsScrollStatus("PINNED")
	DashboardTableTotalsScrollStatusScrolled = DashboardTableTotalsScrollStatus("SCROLLED")
)

func (DashboardTableTotalsScrollStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableTotalsScrollStatus)(nil)).Elem()
}

func (e DashboardTableTotalsScrollStatus) ToDashboardTableTotalsScrollStatusOutput() DashboardTableTotalsScrollStatusOutput {
	return pulumi.ToOutput(e).(DashboardTableTotalsScrollStatusOutput)
}

func (e DashboardTableTotalsScrollStatus) ToDashboardTableTotalsScrollStatusOutputWithContext(ctx context.Context) DashboardTableTotalsScrollStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTableTotalsScrollStatusOutput)
}

func (e DashboardTableTotalsScrollStatus) ToDashboardTableTotalsScrollStatusPtrOutput() DashboardTableTotalsScrollStatusPtrOutput {
	return e.ToDashboardTableTotalsScrollStatusPtrOutputWithContext(context.Background())
}

func (e DashboardTableTotalsScrollStatus) ToDashboardTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) DashboardTableTotalsScrollStatusPtrOutput {
	return DashboardTableTotalsScrollStatus(e).ToDashboardTableTotalsScrollStatusOutputWithContext(ctx).ToDashboardTableTotalsScrollStatusPtrOutputWithContext(ctx)
}

func (e DashboardTableTotalsScrollStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableTotalsScrollStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTableTotalsScrollStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTableTotalsScrollStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTableTotalsScrollStatusOutput struct{ *pulumi.OutputState }

func (DashboardTableTotalsScrollStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableTotalsScrollStatus)(nil)).Elem()
}

func (o DashboardTableTotalsScrollStatusOutput) ToDashboardTableTotalsScrollStatusOutput() DashboardTableTotalsScrollStatusOutput {
	return o
}

func (o DashboardTableTotalsScrollStatusOutput) ToDashboardTableTotalsScrollStatusOutputWithContext(ctx context.Context) DashboardTableTotalsScrollStatusOutput {
	return o
}

func (o DashboardTableTotalsScrollStatusOutput) ToDashboardTableTotalsScrollStatusPtrOutput() DashboardTableTotalsScrollStatusPtrOutput {
	return o.ToDashboardTableTotalsScrollStatusPtrOutputWithContext(context.Background())
}

func (o DashboardTableTotalsScrollStatusOutput) ToDashboardTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) DashboardTableTotalsScrollStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableTotalsScrollStatus) *DashboardTableTotalsScrollStatus {
		return &v
	}).(DashboardTableTotalsScrollStatusPtrOutput)
}

func (o DashboardTableTotalsScrollStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTableTotalsScrollStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableTotalsScrollStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTableTotalsScrollStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableTotalsScrollStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTableTotalsScrollStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTableTotalsScrollStatusPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableTotalsScrollStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableTotalsScrollStatus)(nil)).Elem()
}

func (o DashboardTableTotalsScrollStatusPtrOutput) ToDashboardTableTotalsScrollStatusPtrOutput() DashboardTableTotalsScrollStatusPtrOutput {
	return o
}

func (o DashboardTableTotalsScrollStatusPtrOutput) ToDashboardTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) DashboardTableTotalsScrollStatusPtrOutput {
	return o
}

func (o DashboardTableTotalsScrollStatusPtrOutput) Elem() DashboardTableTotalsScrollStatusOutput {
	return o.ApplyT(func(v *DashboardTableTotalsScrollStatus) DashboardTableTotalsScrollStatus {
		if v != nil {
			return *v
		}
		var ret DashboardTableTotalsScrollStatus
		return ret
	}).(DashboardTableTotalsScrollStatusOutput)
}

func (o DashboardTableTotalsScrollStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTableTotalsScrollStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTableTotalsScrollStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTableTotalsScrollStatusInput is an input type that accepts values of the DashboardTableTotalsScrollStatus enum
// A concrete instance of `DashboardTableTotalsScrollStatusInput` can be one of the following:
//
//	DashboardTableTotalsScrollStatusPinned
//	DashboardTableTotalsScrollStatusScrolled
type DashboardTableTotalsScrollStatusInput interface {
	pulumi.Input

	ToDashboardTableTotalsScrollStatusOutput() DashboardTableTotalsScrollStatusOutput
	ToDashboardTableTotalsScrollStatusOutputWithContext(context.Context) DashboardTableTotalsScrollStatusOutput
}

var dashboardTableTotalsScrollStatusPtrType = reflect.TypeOf((**DashboardTableTotalsScrollStatus)(nil)).Elem()

type DashboardTableTotalsScrollStatusPtrInput interface {
	pulumi.Input

	ToDashboardTableTotalsScrollStatusPtrOutput() DashboardTableTotalsScrollStatusPtrOutput
	ToDashboardTableTotalsScrollStatusPtrOutputWithContext(context.Context) DashboardTableTotalsScrollStatusPtrOutput
}

type dashboardTableTotalsScrollStatusPtr string

func DashboardTableTotalsScrollStatusPtr(v string) DashboardTableTotalsScrollStatusPtrInput {
	return (*dashboardTableTotalsScrollStatusPtr)(&v)
}

func (*dashboardTableTotalsScrollStatusPtr) ElementType() reflect.Type {
	return dashboardTableTotalsScrollStatusPtrType
}

func (in *dashboardTableTotalsScrollStatusPtr) ToDashboardTableTotalsScrollStatusPtrOutput() DashboardTableTotalsScrollStatusPtrOutput {
	return pulumi.ToOutput(in).(DashboardTableTotalsScrollStatusPtrOutput)
}

func (in *dashboardTableTotalsScrollStatusPtr) ToDashboardTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) DashboardTableTotalsScrollStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTableTotalsScrollStatusPtrOutput)
}

type DashboardTargetVisualOptions string

const (
	DashboardTargetVisualOptionsAllVisuals = DashboardTargetVisualOptions("ALL_VISUALS")
)

func (DashboardTargetVisualOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTargetVisualOptions)(nil)).Elem()
}

func (e DashboardTargetVisualOptions) ToDashboardTargetVisualOptionsOutput() DashboardTargetVisualOptionsOutput {
	return pulumi.ToOutput(e).(DashboardTargetVisualOptionsOutput)
}

func (e DashboardTargetVisualOptions) ToDashboardTargetVisualOptionsOutputWithContext(ctx context.Context) DashboardTargetVisualOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTargetVisualOptionsOutput)
}

func (e DashboardTargetVisualOptions) ToDashboardTargetVisualOptionsPtrOutput() DashboardTargetVisualOptionsPtrOutput {
	return e.ToDashboardTargetVisualOptionsPtrOutputWithContext(context.Background())
}

func (e DashboardTargetVisualOptions) ToDashboardTargetVisualOptionsPtrOutputWithContext(ctx context.Context) DashboardTargetVisualOptionsPtrOutput {
	return DashboardTargetVisualOptions(e).ToDashboardTargetVisualOptionsOutputWithContext(ctx).ToDashboardTargetVisualOptionsPtrOutputWithContext(ctx)
}

func (e DashboardTargetVisualOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTargetVisualOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTargetVisualOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTargetVisualOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTargetVisualOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTargetVisualOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTargetVisualOptions)(nil)).Elem()
}

func (o DashboardTargetVisualOptionsOutput) ToDashboardTargetVisualOptionsOutput() DashboardTargetVisualOptionsOutput {
	return o
}

func (o DashboardTargetVisualOptionsOutput) ToDashboardTargetVisualOptionsOutputWithContext(ctx context.Context) DashboardTargetVisualOptionsOutput {
	return o
}

func (o DashboardTargetVisualOptionsOutput) ToDashboardTargetVisualOptionsPtrOutput() DashboardTargetVisualOptionsPtrOutput {
	return o.ToDashboardTargetVisualOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTargetVisualOptionsOutput) ToDashboardTargetVisualOptionsPtrOutputWithContext(ctx context.Context) DashboardTargetVisualOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTargetVisualOptions) *DashboardTargetVisualOptions {
		return &v
	}).(DashboardTargetVisualOptionsPtrOutput)
}

func (o DashboardTargetVisualOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTargetVisualOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTargetVisualOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTargetVisualOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTargetVisualOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTargetVisualOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTargetVisualOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTargetVisualOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTargetVisualOptions)(nil)).Elem()
}

func (o DashboardTargetVisualOptionsPtrOutput) ToDashboardTargetVisualOptionsPtrOutput() DashboardTargetVisualOptionsPtrOutput {
	return o
}

func (o DashboardTargetVisualOptionsPtrOutput) ToDashboardTargetVisualOptionsPtrOutputWithContext(ctx context.Context) DashboardTargetVisualOptionsPtrOutput {
	return o
}

func (o DashboardTargetVisualOptionsPtrOutput) Elem() DashboardTargetVisualOptionsOutput {
	return o.ApplyT(func(v *DashboardTargetVisualOptions) DashboardTargetVisualOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTargetVisualOptions
		return ret
	}).(DashboardTargetVisualOptionsOutput)
}

func (o DashboardTargetVisualOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTargetVisualOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTargetVisualOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTargetVisualOptionsInput is an input type that accepts values of the DashboardTargetVisualOptions enum
// A concrete instance of `DashboardTargetVisualOptionsInput` can be one of the following:
//
//	DashboardTargetVisualOptionsAllVisuals
type DashboardTargetVisualOptionsInput interface {
	pulumi.Input

	ToDashboardTargetVisualOptionsOutput() DashboardTargetVisualOptionsOutput
	ToDashboardTargetVisualOptionsOutputWithContext(context.Context) DashboardTargetVisualOptionsOutput
}

var dashboardTargetVisualOptionsPtrType = reflect.TypeOf((**DashboardTargetVisualOptions)(nil)).Elem()

type DashboardTargetVisualOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTargetVisualOptionsPtrOutput() DashboardTargetVisualOptionsPtrOutput
	ToDashboardTargetVisualOptionsPtrOutputWithContext(context.Context) DashboardTargetVisualOptionsPtrOutput
}

type dashboardTargetVisualOptionsPtr string

func DashboardTargetVisualOptionsPtr(v string) DashboardTargetVisualOptionsPtrInput {
	return (*dashboardTargetVisualOptionsPtr)(&v)
}

func (*dashboardTargetVisualOptionsPtr) ElementType() reflect.Type {
	return dashboardTargetVisualOptionsPtrType
}

func (in *dashboardTargetVisualOptionsPtr) ToDashboardTargetVisualOptionsPtrOutput() DashboardTargetVisualOptionsPtrOutput {
	return pulumi.ToOutput(in).(DashboardTargetVisualOptionsPtrOutput)
}

func (in *dashboardTargetVisualOptionsPtr) ToDashboardTargetVisualOptionsPtrOutputWithContext(ctx context.Context) DashboardTargetVisualOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTargetVisualOptionsPtrOutput)
}

type DashboardTextWrap string

const (
	DashboardTextWrapNone = DashboardTextWrap("NONE")
	DashboardTextWrapWrap = DashboardTextWrap("WRAP")
)

func (DashboardTextWrap) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTextWrap)(nil)).Elem()
}

func (e DashboardTextWrap) ToDashboardTextWrapOutput() DashboardTextWrapOutput {
	return pulumi.ToOutput(e).(DashboardTextWrapOutput)
}

func (e DashboardTextWrap) ToDashboardTextWrapOutputWithContext(ctx context.Context) DashboardTextWrapOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTextWrapOutput)
}

func (e DashboardTextWrap) ToDashboardTextWrapPtrOutput() DashboardTextWrapPtrOutput {
	return e.ToDashboardTextWrapPtrOutputWithContext(context.Background())
}

func (e DashboardTextWrap) ToDashboardTextWrapPtrOutputWithContext(ctx context.Context) DashboardTextWrapPtrOutput {
	return DashboardTextWrap(e).ToDashboardTextWrapOutputWithContext(ctx).ToDashboardTextWrapPtrOutputWithContext(ctx)
}

func (e DashboardTextWrap) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTextWrap) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTextWrap) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTextWrap) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTextWrapOutput struct{ *pulumi.OutputState }

func (DashboardTextWrapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTextWrap)(nil)).Elem()
}

func (o DashboardTextWrapOutput) ToDashboardTextWrapOutput() DashboardTextWrapOutput {
	return o
}

func (o DashboardTextWrapOutput) ToDashboardTextWrapOutputWithContext(ctx context.Context) DashboardTextWrapOutput {
	return o
}

func (o DashboardTextWrapOutput) ToDashboardTextWrapPtrOutput() DashboardTextWrapPtrOutput {
	return o.ToDashboardTextWrapPtrOutputWithContext(context.Background())
}

func (o DashboardTextWrapOutput) ToDashboardTextWrapPtrOutputWithContext(ctx context.Context) DashboardTextWrapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTextWrap) *DashboardTextWrap {
		return &v
	}).(DashboardTextWrapPtrOutput)
}

func (o DashboardTextWrapOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTextWrapOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTextWrap) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTextWrapOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTextWrapOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTextWrap) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTextWrapPtrOutput struct{ *pulumi.OutputState }

func (DashboardTextWrapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTextWrap)(nil)).Elem()
}

func (o DashboardTextWrapPtrOutput) ToDashboardTextWrapPtrOutput() DashboardTextWrapPtrOutput {
	return o
}

func (o DashboardTextWrapPtrOutput) ToDashboardTextWrapPtrOutputWithContext(ctx context.Context) DashboardTextWrapPtrOutput {
	return o
}

func (o DashboardTextWrapPtrOutput) Elem() DashboardTextWrapOutput {
	return o.ApplyT(func(v *DashboardTextWrap) DashboardTextWrap {
		if v != nil {
			return *v
		}
		var ret DashboardTextWrap
		return ret
	}).(DashboardTextWrapOutput)
}

func (o DashboardTextWrapPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTextWrapPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTextWrap) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTextWrapInput is an input type that accepts values of the DashboardTextWrap enum
// A concrete instance of `DashboardTextWrapInput` can be one of the following:
//
//	DashboardTextWrapNone
//	DashboardTextWrapWrap
type DashboardTextWrapInput interface {
	pulumi.Input

	ToDashboardTextWrapOutput() DashboardTextWrapOutput
	ToDashboardTextWrapOutputWithContext(context.Context) DashboardTextWrapOutput
}

var dashboardTextWrapPtrType = reflect.TypeOf((**DashboardTextWrap)(nil)).Elem()

type DashboardTextWrapPtrInput interface {
	pulumi.Input

	ToDashboardTextWrapPtrOutput() DashboardTextWrapPtrOutput
	ToDashboardTextWrapPtrOutputWithContext(context.Context) DashboardTextWrapPtrOutput
}

type dashboardTextWrapPtr string

func DashboardTextWrapPtr(v string) DashboardTextWrapPtrInput {
	return (*dashboardTextWrapPtr)(&v)
}

func (*dashboardTextWrapPtr) ElementType() reflect.Type {
	return dashboardTextWrapPtrType
}

func (in *dashboardTextWrapPtr) ToDashboardTextWrapPtrOutput() DashboardTextWrapPtrOutput {
	return pulumi.ToOutput(in).(DashboardTextWrapPtrOutput)
}

func (in *dashboardTextWrapPtr) ToDashboardTextWrapPtrOutputWithContext(ctx context.Context) DashboardTextWrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTextWrapPtrOutput)
}

type DashboardTimeGranularity string

const (
	DashboardTimeGranularityYear        = DashboardTimeGranularity("YEAR")
	DashboardTimeGranularityQuarter     = DashboardTimeGranularity("QUARTER")
	DashboardTimeGranularityMonth       = DashboardTimeGranularity("MONTH")
	DashboardTimeGranularityWeek        = DashboardTimeGranularity("WEEK")
	DashboardTimeGranularityDay         = DashboardTimeGranularity("DAY")
	DashboardTimeGranularityHour        = DashboardTimeGranularity("HOUR")
	DashboardTimeGranularityMinute      = DashboardTimeGranularity("MINUTE")
	DashboardTimeGranularitySecond      = DashboardTimeGranularity("SECOND")
	DashboardTimeGranularityMillisecond = DashboardTimeGranularity("MILLISECOND")
)

func (DashboardTimeGranularity) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeGranularity)(nil)).Elem()
}

func (e DashboardTimeGranularity) ToDashboardTimeGranularityOutput() DashboardTimeGranularityOutput {
	return pulumi.ToOutput(e).(DashboardTimeGranularityOutput)
}

func (e DashboardTimeGranularity) ToDashboardTimeGranularityOutputWithContext(ctx context.Context) DashboardTimeGranularityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTimeGranularityOutput)
}

func (e DashboardTimeGranularity) ToDashboardTimeGranularityPtrOutput() DashboardTimeGranularityPtrOutput {
	return e.ToDashboardTimeGranularityPtrOutputWithContext(context.Background())
}

func (e DashboardTimeGranularity) ToDashboardTimeGranularityPtrOutputWithContext(ctx context.Context) DashboardTimeGranularityPtrOutput {
	return DashboardTimeGranularity(e).ToDashboardTimeGranularityOutputWithContext(ctx).ToDashboardTimeGranularityPtrOutputWithContext(ctx)
}

func (e DashboardTimeGranularity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTimeGranularity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTimeGranularity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTimeGranularity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTimeGranularityOutput struct{ *pulumi.OutputState }

func (DashboardTimeGranularityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeGranularity)(nil)).Elem()
}

func (o DashboardTimeGranularityOutput) ToDashboardTimeGranularityOutput() DashboardTimeGranularityOutput {
	return o
}

func (o DashboardTimeGranularityOutput) ToDashboardTimeGranularityOutputWithContext(ctx context.Context) DashboardTimeGranularityOutput {
	return o
}

func (o DashboardTimeGranularityOutput) ToDashboardTimeGranularityPtrOutput() DashboardTimeGranularityPtrOutput {
	return o.ToDashboardTimeGranularityPtrOutputWithContext(context.Background())
}

func (o DashboardTimeGranularityOutput) ToDashboardTimeGranularityPtrOutputWithContext(ctx context.Context) DashboardTimeGranularityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeGranularity) *DashboardTimeGranularity {
		return &v
	}).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardTimeGranularityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTimeGranularityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTimeGranularity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTimeGranularityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTimeGranularityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTimeGranularity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeGranularityPtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeGranularityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeGranularity)(nil)).Elem()
}

func (o DashboardTimeGranularityPtrOutput) ToDashboardTimeGranularityPtrOutput() DashboardTimeGranularityPtrOutput {
	return o
}

func (o DashboardTimeGranularityPtrOutput) ToDashboardTimeGranularityPtrOutputWithContext(ctx context.Context) DashboardTimeGranularityPtrOutput {
	return o
}

func (o DashboardTimeGranularityPtrOutput) Elem() DashboardTimeGranularityOutput {
	return o.ApplyT(func(v *DashboardTimeGranularity) DashboardTimeGranularity {
		if v != nil {
			return *v
		}
		var ret DashboardTimeGranularity
		return ret
	}).(DashboardTimeGranularityOutput)
}

func (o DashboardTimeGranularityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTimeGranularityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTimeGranularity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTimeGranularityInput is an input type that accepts values of the DashboardTimeGranularity enum
// A concrete instance of `DashboardTimeGranularityInput` can be one of the following:
//
//	DashboardTimeGranularityYear
//	DashboardTimeGranularityQuarter
//	DashboardTimeGranularityMonth
//	DashboardTimeGranularityWeek
//	DashboardTimeGranularityDay
//	DashboardTimeGranularityHour
//	DashboardTimeGranularityMinute
//	DashboardTimeGranularitySecond
//	DashboardTimeGranularityMillisecond
type DashboardTimeGranularityInput interface {
	pulumi.Input

	ToDashboardTimeGranularityOutput() DashboardTimeGranularityOutput
	ToDashboardTimeGranularityOutputWithContext(context.Context) DashboardTimeGranularityOutput
}

var dashboardTimeGranularityPtrType = reflect.TypeOf((**DashboardTimeGranularity)(nil)).Elem()

type DashboardTimeGranularityPtrInput interface {
	pulumi.Input

	ToDashboardTimeGranularityPtrOutput() DashboardTimeGranularityPtrOutput
	ToDashboardTimeGranularityPtrOutputWithContext(context.Context) DashboardTimeGranularityPtrOutput
}

type dashboardTimeGranularityPtr string

func DashboardTimeGranularityPtr(v string) DashboardTimeGranularityPtrInput {
	return (*dashboardTimeGranularityPtr)(&v)
}

func (*dashboardTimeGranularityPtr) ElementType() reflect.Type {
	return dashboardTimeGranularityPtrType
}

func (in *dashboardTimeGranularityPtr) ToDashboardTimeGranularityPtrOutput() DashboardTimeGranularityPtrOutput {
	return pulumi.ToOutput(in).(DashboardTimeGranularityPtrOutput)
}

func (in *dashboardTimeGranularityPtr) ToDashboardTimeGranularityPtrOutputWithContext(ctx context.Context) DashboardTimeGranularityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTimeGranularityPtrOutput)
}

type DashboardTooltipTitleType string

const (
	DashboardTooltipTitleTypeNone         = DashboardTooltipTitleType("NONE")
	DashboardTooltipTitleTypePrimaryValue = DashboardTooltipTitleType("PRIMARY_VALUE")
)

func (DashboardTooltipTitleType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTooltipTitleType)(nil)).Elem()
}

func (e DashboardTooltipTitleType) ToDashboardTooltipTitleTypeOutput() DashboardTooltipTitleTypeOutput {
	return pulumi.ToOutput(e).(DashboardTooltipTitleTypeOutput)
}

func (e DashboardTooltipTitleType) ToDashboardTooltipTitleTypeOutputWithContext(ctx context.Context) DashboardTooltipTitleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTooltipTitleTypeOutput)
}

func (e DashboardTooltipTitleType) ToDashboardTooltipTitleTypePtrOutput() DashboardTooltipTitleTypePtrOutput {
	return e.ToDashboardTooltipTitleTypePtrOutputWithContext(context.Background())
}

func (e DashboardTooltipTitleType) ToDashboardTooltipTitleTypePtrOutputWithContext(ctx context.Context) DashboardTooltipTitleTypePtrOutput {
	return DashboardTooltipTitleType(e).ToDashboardTooltipTitleTypeOutputWithContext(ctx).ToDashboardTooltipTitleTypePtrOutputWithContext(ctx)
}

func (e DashboardTooltipTitleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTooltipTitleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTooltipTitleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTooltipTitleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTooltipTitleTypeOutput struct{ *pulumi.OutputState }

func (DashboardTooltipTitleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTooltipTitleType)(nil)).Elem()
}

func (o DashboardTooltipTitleTypeOutput) ToDashboardTooltipTitleTypeOutput() DashboardTooltipTitleTypeOutput {
	return o
}

func (o DashboardTooltipTitleTypeOutput) ToDashboardTooltipTitleTypeOutputWithContext(ctx context.Context) DashboardTooltipTitleTypeOutput {
	return o
}

func (o DashboardTooltipTitleTypeOutput) ToDashboardTooltipTitleTypePtrOutput() DashboardTooltipTitleTypePtrOutput {
	return o.ToDashboardTooltipTitleTypePtrOutputWithContext(context.Background())
}

func (o DashboardTooltipTitleTypeOutput) ToDashboardTooltipTitleTypePtrOutputWithContext(ctx context.Context) DashboardTooltipTitleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTooltipTitleType) *DashboardTooltipTitleType {
		return &v
	}).(DashboardTooltipTitleTypePtrOutput)
}

func (o DashboardTooltipTitleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTooltipTitleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTooltipTitleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTooltipTitleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTooltipTitleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTooltipTitleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTooltipTitleTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardTooltipTitleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTooltipTitleType)(nil)).Elem()
}

func (o DashboardTooltipTitleTypePtrOutput) ToDashboardTooltipTitleTypePtrOutput() DashboardTooltipTitleTypePtrOutput {
	return o
}

func (o DashboardTooltipTitleTypePtrOutput) ToDashboardTooltipTitleTypePtrOutputWithContext(ctx context.Context) DashboardTooltipTitleTypePtrOutput {
	return o
}

func (o DashboardTooltipTitleTypePtrOutput) Elem() DashboardTooltipTitleTypeOutput {
	return o.ApplyT(func(v *DashboardTooltipTitleType) DashboardTooltipTitleType {
		if v != nil {
			return *v
		}
		var ret DashboardTooltipTitleType
		return ret
	}).(DashboardTooltipTitleTypeOutput)
}

func (o DashboardTooltipTitleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTooltipTitleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTooltipTitleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTooltipTitleTypeInput is an input type that accepts values of the DashboardTooltipTitleType enum
// A concrete instance of `DashboardTooltipTitleTypeInput` can be one of the following:
//
//	DashboardTooltipTitleTypeNone
//	DashboardTooltipTitleTypePrimaryValue
type DashboardTooltipTitleTypeInput interface {
	pulumi.Input

	ToDashboardTooltipTitleTypeOutput() DashboardTooltipTitleTypeOutput
	ToDashboardTooltipTitleTypeOutputWithContext(context.Context) DashboardTooltipTitleTypeOutput
}

var dashboardTooltipTitleTypePtrType = reflect.TypeOf((**DashboardTooltipTitleType)(nil)).Elem()

type DashboardTooltipTitleTypePtrInput interface {
	pulumi.Input

	ToDashboardTooltipTitleTypePtrOutput() DashboardTooltipTitleTypePtrOutput
	ToDashboardTooltipTitleTypePtrOutputWithContext(context.Context) DashboardTooltipTitleTypePtrOutput
}

type dashboardTooltipTitleTypePtr string

func DashboardTooltipTitleTypePtr(v string) DashboardTooltipTitleTypePtrInput {
	return (*dashboardTooltipTitleTypePtr)(&v)
}

func (*dashboardTooltipTitleTypePtr) ElementType() reflect.Type {
	return dashboardTooltipTitleTypePtrType
}

func (in *dashboardTooltipTitleTypePtr) ToDashboardTooltipTitleTypePtrOutput() DashboardTooltipTitleTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardTooltipTitleTypePtrOutput)
}

func (in *dashboardTooltipTitleTypePtr) ToDashboardTooltipTitleTypePtrOutputWithContext(ctx context.Context) DashboardTooltipTitleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTooltipTitleTypePtrOutput)
}

type DashboardTopBottomComputationType string

const (
	DashboardTopBottomComputationTypeTop    = DashboardTopBottomComputationType("TOP")
	DashboardTopBottomComputationTypeBottom = DashboardTopBottomComputationType("BOTTOM")
)

func (DashboardTopBottomComputationType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopBottomComputationType)(nil)).Elem()
}

func (e DashboardTopBottomComputationType) ToDashboardTopBottomComputationTypeOutput() DashboardTopBottomComputationTypeOutput {
	return pulumi.ToOutput(e).(DashboardTopBottomComputationTypeOutput)
}

func (e DashboardTopBottomComputationType) ToDashboardTopBottomComputationTypeOutputWithContext(ctx context.Context) DashboardTopBottomComputationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTopBottomComputationTypeOutput)
}

func (e DashboardTopBottomComputationType) ToDashboardTopBottomComputationTypePtrOutput() DashboardTopBottomComputationTypePtrOutput {
	return e.ToDashboardTopBottomComputationTypePtrOutputWithContext(context.Background())
}

func (e DashboardTopBottomComputationType) ToDashboardTopBottomComputationTypePtrOutputWithContext(ctx context.Context) DashboardTopBottomComputationTypePtrOutput {
	return DashboardTopBottomComputationType(e).ToDashboardTopBottomComputationTypeOutputWithContext(ctx).ToDashboardTopBottomComputationTypePtrOutputWithContext(ctx)
}

func (e DashboardTopBottomComputationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTopBottomComputationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTopBottomComputationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTopBottomComputationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTopBottomComputationTypeOutput struct{ *pulumi.OutputState }

func (DashboardTopBottomComputationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopBottomComputationType)(nil)).Elem()
}

func (o DashboardTopBottomComputationTypeOutput) ToDashboardTopBottomComputationTypeOutput() DashboardTopBottomComputationTypeOutput {
	return o
}

func (o DashboardTopBottomComputationTypeOutput) ToDashboardTopBottomComputationTypeOutputWithContext(ctx context.Context) DashboardTopBottomComputationTypeOutput {
	return o
}

func (o DashboardTopBottomComputationTypeOutput) ToDashboardTopBottomComputationTypePtrOutput() DashboardTopBottomComputationTypePtrOutput {
	return o.ToDashboardTopBottomComputationTypePtrOutputWithContext(context.Background())
}

func (o DashboardTopBottomComputationTypeOutput) ToDashboardTopBottomComputationTypePtrOutputWithContext(ctx context.Context) DashboardTopBottomComputationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTopBottomComputationType) *DashboardTopBottomComputationType {
		return &v
	}).(DashboardTopBottomComputationTypePtrOutput)
}

func (o DashboardTopBottomComputationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTopBottomComputationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTopBottomComputationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTopBottomComputationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTopBottomComputationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTopBottomComputationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTopBottomComputationTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardTopBottomComputationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopBottomComputationType)(nil)).Elem()
}

func (o DashboardTopBottomComputationTypePtrOutput) ToDashboardTopBottomComputationTypePtrOutput() DashboardTopBottomComputationTypePtrOutput {
	return o
}

func (o DashboardTopBottomComputationTypePtrOutput) ToDashboardTopBottomComputationTypePtrOutputWithContext(ctx context.Context) DashboardTopBottomComputationTypePtrOutput {
	return o
}

func (o DashboardTopBottomComputationTypePtrOutput) Elem() DashboardTopBottomComputationTypeOutput {
	return o.ApplyT(func(v *DashboardTopBottomComputationType) DashboardTopBottomComputationType {
		if v != nil {
			return *v
		}
		var ret DashboardTopBottomComputationType
		return ret
	}).(DashboardTopBottomComputationTypeOutput)
}

func (o DashboardTopBottomComputationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTopBottomComputationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTopBottomComputationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTopBottomComputationTypeInput is an input type that accepts values of the DashboardTopBottomComputationType enum
// A concrete instance of `DashboardTopBottomComputationTypeInput` can be one of the following:
//
//	DashboardTopBottomComputationTypeTop
//	DashboardTopBottomComputationTypeBottom
type DashboardTopBottomComputationTypeInput interface {
	pulumi.Input

	ToDashboardTopBottomComputationTypeOutput() DashboardTopBottomComputationTypeOutput
	ToDashboardTopBottomComputationTypeOutputWithContext(context.Context) DashboardTopBottomComputationTypeOutput
}

var dashboardTopBottomComputationTypePtrType = reflect.TypeOf((**DashboardTopBottomComputationType)(nil)).Elem()

type DashboardTopBottomComputationTypePtrInput interface {
	pulumi.Input

	ToDashboardTopBottomComputationTypePtrOutput() DashboardTopBottomComputationTypePtrOutput
	ToDashboardTopBottomComputationTypePtrOutputWithContext(context.Context) DashboardTopBottomComputationTypePtrOutput
}

type dashboardTopBottomComputationTypePtr string

func DashboardTopBottomComputationTypePtr(v string) DashboardTopBottomComputationTypePtrInput {
	return (*dashboardTopBottomComputationTypePtr)(&v)
}

func (*dashboardTopBottomComputationTypePtr) ElementType() reflect.Type {
	return dashboardTopBottomComputationTypePtrType
}

func (in *dashboardTopBottomComputationTypePtr) ToDashboardTopBottomComputationTypePtrOutput() DashboardTopBottomComputationTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardTopBottomComputationTypePtrOutput)
}

func (in *dashboardTopBottomComputationTypePtr) ToDashboardTopBottomComputationTypePtrOutputWithContext(ctx context.Context) DashboardTopBottomComputationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTopBottomComputationTypePtrOutput)
}

type DashboardTopBottomSortOrder string

const (
	DashboardTopBottomSortOrderPercentDifference  = DashboardTopBottomSortOrder("PERCENT_DIFFERENCE")
	DashboardTopBottomSortOrderAbsoluteDifference = DashboardTopBottomSortOrder("ABSOLUTE_DIFFERENCE")
)

func (DashboardTopBottomSortOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopBottomSortOrder)(nil)).Elem()
}

func (e DashboardTopBottomSortOrder) ToDashboardTopBottomSortOrderOutput() DashboardTopBottomSortOrderOutput {
	return pulumi.ToOutput(e).(DashboardTopBottomSortOrderOutput)
}

func (e DashboardTopBottomSortOrder) ToDashboardTopBottomSortOrderOutputWithContext(ctx context.Context) DashboardTopBottomSortOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardTopBottomSortOrderOutput)
}

func (e DashboardTopBottomSortOrder) ToDashboardTopBottomSortOrderPtrOutput() DashboardTopBottomSortOrderPtrOutput {
	return e.ToDashboardTopBottomSortOrderPtrOutputWithContext(context.Background())
}

func (e DashboardTopBottomSortOrder) ToDashboardTopBottomSortOrderPtrOutputWithContext(ctx context.Context) DashboardTopBottomSortOrderPtrOutput {
	return DashboardTopBottomSortOrder(e).ToDashboardTopBottomSortOrderOutputWithContext(ctx).ToDashboardTopBottomSortOrderPtrOutputWithContext(ctx)
}

func (e DashboardTopBottomSortOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTopBottomSortOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardTopBottomSortOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardTopBottomSortOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardTopBottomSortOrderOutput struct{ *pulumi.OutputState }

func (DashboardTopBottomSortOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopBottomSortOrder)(nil)).Elem()
}

func (o DashboardTopBottomSortOrderOutput) ToDashboardTopBottomSortOrderOutput() DashboardTopBottomSortOrderOutput {
	return o
}

func (o DashboardTopBottomSortOrderOutput) ToDashboardTopBottomSortOrderOutputWithContext(ctx context.Context) DashboardTopBottomSortOrderOutput {
	return o
}

func (o DashboardTopBottomSortOrderOutput) ToDashboardTopBottomSortOrderPtrOutput() DashboardTopBottomSortOrderPtrOutput {
	return o.ToDashboardTopBottomSortOrderPtrOutputWithContext(context.Background())
}

func (o DashboardTopBottomSortOrderOutput) ToDashboardTopBottomSortOrderPtrOutputWithContext(ctx context.Context) DashboardTopBottomSortOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTopBottomSortOrder) *DashboardTopBottomSortOrder {
		return &v
	}).(DashboardTopBottomSortOrderPtrOutput)
}

func (o DashboardTopBottomSortOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardTopBottomSortOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTopBottomSortOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardTopBottomSortOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTopBottomSortOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardTopBottomSortOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardTopBottomSortOrderPtrOutput struct{ *pulumi.OutputState }

func (DashboardTopBottomSortOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopBottomSortOrder)(nil)).Elem()
}

func (o DashboardTopBottomSortOrderPtrOutput) ToDashboardTopBottomSortOrderPtrOutput() DashboardTopBottomSortOrderPtrOutput {
	return o
}

func (o DashboardTopBottomSortOrderPtrOutput) ToDashboardTopBottomSortOrderPtrOutputWithContext(ctx context.Context) DashboardTopBottomSortOrderPtrOutput {
	return o
}

func (o DashboardTopBottomSortOrderPtrOutput) Elem() DashboardTopBottomSortOrderOutput {
	return o.ApplyT(func(v *DashboardTopBottomSortOrder) DashboardTopBottomSortOrder {
		if v != nil {
			return *v
		}
		var ret DashboardTopBottomSortOrder
		return ret
	}).(DashboardTopBottomSortOrderOutput)
}

func (o DashboardTopBottomSortOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardTopBottomSortOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardTopBottomSortOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardTopBottomSortOrderInput is an input type that accepts values of the DashboardTopBottomSortOrder enum
// A concrete instance of `DashboardTopBottomSortOrderInput` can be one of the following:
//
//	DashboardTopBottomSortOrderPercentDifference
//	DashboardTopBottomSortOrderAbsoluteDifference
type DashboardTopBottomSortOrderInput interface {
	pulumi.Input

	ToDashboardTopBottomSortOrderOutput() DashboardTopBottomSortOrderOutput
	ToDashboardTopBottomSortOrderOutputWithContext(context.Context) DashboardTopBottomSortOrderOutput
}

var dashboardTopBottomSortOrderPtrType = reflect.TypeOf((**DashboardTopBottomSortOrder)(nil)).Elem()

type DashboardTopBottomSortOrderPtrInput interface {
	pulumi.Input

	ToDashboardTopBottomSortOrderPtrOutput() DashboardTopBottomSortOrderPtrOutput
	ToDashboardTopBottomSortOrderPtrOutputWithContext(context.Context) DashboardTopBottomSortOrderPtrOutput
}

type dashboardTopBottomSortOrderPtr string

func DashboardTopBottomSortOrderPtr(v string) DashboardTopBottomSortOrderPtrInput {
	return (*dashboardTopBottomSortOrderPtr)(&v)
}

func (*dashboardTopBottomSortOrderPtr) ElementType() reflect.Type {
	return dashboardTopBottomSortOrderPtrType
}

func (in *dashboardTopBottomSortOrderPtr) ToDashboardTopBottomSortOrderPtrOutput() DashboardTopBottomSortOrderPtrOutput {
	return pulumi.ToOutput(in).(DashboardTopBottomSortOrderPtrOutput)
}

func (in *dashboardTopBottomSortOrderPtr) ToDashboardTopBottomSortOrderPtrOutputWithContext(ctx context.Context) DashboardTopBottomSortOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardTopBottomSortOrderPtrOutput)
}

type DashboardUiState string

const (
	DashboardUiStateExpanded  = DashboardUiState("EXPANDED")
	DashboardUiStateCollapsed = DashboardUiState("COLLAPSED")
)

func (DashboardUiState) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardUiState)(nil)).Elem()
}

func (e DashboardUiState) ToDashboardUiStateOutput() DashboardUiStateOutput {
	return pulumi.ToOutput(e).(DashboardUiStateOutput)
}

func (e DashboardUiState) ToDashboardUiStateOutputWithContext(ctx context.Context) DashboardUiStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardUiStateOutput)
}

func (e DashboardUiState) ToDashboardUiStatePtrOutput() DashboardUiStatePtrOutput {
	return e.ToDashboardUiStatePtrOutputWithContext(context.Background())
}

func (e DashboardUiState) ToDashboardUiStatePtrOutputWithContext(ctx context.Context) DashboardUiStatePtrOutput {
	return DashboardUiState(e).ToDashboardUiStateOutputWithContext(ctx).ToDashboardUiStatePtrOutputWithContext(ctx)
}

func (e DashboardUiState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardUiState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardUiState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardUiState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardUiStateOutput struct{ *pulumi.OutputState }

func (DashboardUiStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardUiState)(nil)).Elem()
}

func (o DashboardUiStateOutput) ToDashboardUiStateOutput() DashboardUiStateOutput {
	return o
}

func (o DashboardUiStateOutput) ToDashboardUiStateOutputWithContext(ctx context.Context) DashboardUiStateOutput {
	return o
}

func (o DashboardUiStateOutput) ToDashboardUiStatePtrOutput() DashboardUiStatePtrOutput {
	return o.ToDashboardUiStatePtrOutputWithContext(context.Background())
}

func (o DashboardUiStateOutput) ToDashboardUiStatePtrOutputWithContext(ctx context.Context) DashboardUiStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardUiState) *DashboardUiState {
		return &v
	}).(DashboardUiStatePtrOutput)
}

func (o DashboardUiStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardUiStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardUiState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardUiStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardUiStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardUiState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardUiStatePtrOutput struct{ *pulumi.OutputState }

func (DashboardUiStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardUiState)(nil)).Elem()
}

func (o DashboardUiStatePtrOutput) ToDashboardUiStatePtrOutput() DashboardUiStatePtrOutput {
	return o
}

func (o DashboardUiStatePtrOutput) ToDashboardUiStatePtrOutputWithContext(ctx context.Context) DashboardUiStatePtrOutput {
	return o
}

func (o DashboardUiStatePtrOutput) Elem() DashboardUiStateOutput {
	return o.ApplyT(func(v *DashboardUiState) DashboardUiState {
		if v != nil {
			return *v
		}
		var ret DashboardUiState
		return ret
	}).(DashboardUiStateOutput)
}

func (o DashboardUiStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardUiStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardUiState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardUiStateInput is an input type that accepts values of the DashboardUiState enum
// A concrete instance of `DashboardUiStateInput` can be one of the following:
//
//	DashboardUiStateExpanded
//	DashboardUiStateCollapsed
type DashboardUiStateInput interface {
	pulumi.Input

	ToDashboardUiStateOutput() DashboardUiStateOutput
	ToDashboardUiStateOutputWithContext(context.Context) DashboardUiStateOutput
}

var dashboardUiStatePtrType = reflect.TypeOf((**DashboardUiState)(nil)).Elem()

type DashboardUiStatePtrInput interface {
	pulumi.Input

	ToDashboardUiStatePtrOutput() DashboardUiStatePtrOutput
	ToDashboardUiStatePtrOutputWithContext(context.Context) DashboardUiStatePtrOutput
}

type dashboardUiStatePtr string

func DashboardUiStatePtr(v string) DashboardUiStatePtrInput {
	return (*dashboardUiStatePtr)(&v)
}

func (*dashboardUiStatePtr) ElementType() reflect.Type {
	return dashboardUiStatePtrType
}

func (in *dashboardUiStatePtr) ToDashboardUiStatePtrOutput() DashboardUiStatePtrOutput {
	return pulumi.ToOutput(in).(DashboardUiStatePtrOutput)
}

func (in *dashboardUiStatePtr) ToDashboardUiStatePtrOutputWithContext(ctx context.Context) DashboardUiStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardUiStatePtrOutput)
}

type DashboardUrlTargetConfiguration string

const (
	DashboardUrlTargetConfigurationNewTab    = DashboardUrlTargetConfiguration("NEW_TAB")
	DashboardUrlTargetConfigurationNewWindow = DashboardUrlTargetConfiguration("NEW_WINDOW")
	DashboardUrlTargetConfigurationSameTab   = DashboardUrlTargetConfiguration("SAME_TAB")
)

func (DashboardUrlTargetConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardUrlTargetConfiguration)(nil)).Elem()
}

func (e DashboardUrlTargetConfiguration) ToDashboardUrlTargetConfigurationOutput() DashboardUrlTargetConfigurationOutput {
	return pulumi.ToOutput(e).(DashboardUrlTargetConfigurationOutput)
}

func (e DashboardUrlTargetConfiguration) ToDashboardUrlTargetConfigurationOutputWithContext(ctx context.Context) DashboardUrlTargetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardUrlTargetConfigurationOutput)
}

func (e DashboardUrlTargetConfiguration) ToDashboardUrlTargetConfigurationPtrOutput() DashboardUrlTargetConfigurationPtrOutput {
	return e.ToDashboardUrlTargetConfigurationPtrOutputWithContext(context.Background())
}

func (e DashboardUrlTargetConfiguration) ToDashboardUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) DashboardUrlTargetConfigurationPtrOutput {
	return DashboardUrlTargetConfiguration(e).ToDashboardUrlTargetConfigurationOutputWithContext(ctx).ToDashboardUrlTargetConfigurationPtrOutputWithContext(ctx)
}

func (e DashboardUrlTargetConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardUrlTargetConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardUrlTargetConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardUrlTargetConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardUrlTargetConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardUrlTargetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardUrlTargetConfiguration)(nil)).Elem()
}

func (o DashboardUrlTargetConfigurationOutput) ToDashboardUrlTargetConfigurationOutput() DashboardUrlTargetConfigurationOutput {
	return o
}

func (o DashboardUrlTargetConfigurationOutput) ToDashboardUrlTargetConfigurationOutputWithContext(ctx context.Context) DashboardUrlTargetConfigurationOutput {
	return o
}

func (o DashboardUrlTargetConfigurationOutput) ToDashboardUrlTargetConfigurationPtrOutput() DashboardUrlTargetConfigurationPtrOutput {
	return o.ToDashboardUrlTargetConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardUrlTargetConfigurationOutput) ToDashboardUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) DashboardUrlTargetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardUrlTargetConfiguration) *DashboardUrlTargetConfiguration {
		return &v
	}).(DashboardUrlTargetConfigurationPtrOutput)
}

func (o DashboardUrlTargetConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardUrlTargetConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardUrlTargetConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardUrlTargetConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardUrlTargetConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardUrlTargetConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardUrlTargetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardUrlTargetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardUrlTargetConfiguration)(nil)).Elem()
}

func (o DashboardUrlTargetConfigurationPtrOutput) ToDashboardUrlTargetConfigurationPtrOutput() DashboardUrlTargetConfigurationPtrOutput {
	return o
}

func (o DashboardUrlTargetConfigurationPtrOutput) ToDashboardUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) DashboardUrlTargetConfigurationPtrOutput {
	return o
}

func (o DashboardUrlTargetConfigurationPtrOutput) Elem() DashboardUrlTargetConfigurationOutput {
	return o.ApplyT(func(v *DashboardUrlTargetConfiguration) DashboardUrlTargetConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardUrlTargetConfiguration
		return ret
	}).(DashboardUrlTargetConfigurationOutput)
}

func (o DashboardUrlTargetConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardUrlTargetConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardUrlTargetConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardUrlTargetConfigurationInput is an input type that accepts values of the DashboardUrlTargetConfiguration enum
// A concrete instance of `DashboardUrlTargetConfigurationInput` can be one of the following:
//
//	DashboardUrlTargetConfigurationNewTab
//	DashboardUrlTargetConfigurationNewWindow
//	DashboardUrlTargetConfigurationSameTab
type DashboardUrlTargetConfigurationInput interface {
	pulumi.Input

	ToDashboardUrlTargetConfigurationOutput() DashboardUrlTargetConfigurationOutput
	ToDashboardUrlTargetConfigurationOutputWithContext(context.Context) DashboardUrlTargetConfigurationOutput
}

var dashboardUrlTargetConfigurationPtrType = reflect.TypeOf((**DashboardUrlTargetConfiguration)(nil)).Elem()

type DashboardUrlTargetConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardUrlTargetConfigurationPtrOutput() DashboardUrlTargetConfigurationPtrOutput
	ToDashboardUrlTargetConfigurationPtrOutputWithContext(context.Context) DashboardUrlTargetConfigurationPtrOutput
}

type dashboardUrlTargetConfigurationPtr string

func DashboardUrlTargetConfigurationPtr(v string) DashboardUrlTargetConfigurationPtrInput {
	return (*dashboardUrlTargetConfigurationPtr)(&v)
}

func (*dashboardUrlTargetConfigurationPtr) ElementType() reflect.Type {
	return dashboardUrlTargetConfigurationPtrType
}

func (in *dashboardUrlTargetConfigurationPtr) ToDashboardUrlTargetConfigurationPtrOutput() DashboardUrlTargetConfigurationPtrOutput {
	return pulumi.ToOutput(in).(DashboardUrlTargetConfigurationPtrOutput)
}

func (in *dashboardUrlTargetConfigurationPtr) ToDashboardUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) DashboardUrlTargetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardUrlTargetConfigurationPtrOutput)
}

type DashboardValidationStrategyMode string

const (
	DashboardValidationStrategyModeStrict  = DashboardValidationStrategyMode("STRICT")
	DashboardValidationStrategyModeLenient = DashboardValidationStrategyMode("LENIENT")
)

func (DashboardValidationStrategyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardValidationStrategyMode)(nil)).Elem()
}

func (e DashboardValidationStrategyMode) ToDashboardValidationStrategyModeOutput() DashboardValidationStrategyModeOutput {
	return pulumi.ToOutput(e).(DashboardValidationStrategyModeOutput)
}

func (e DashboardValidationStrategyMode) ToDashboardValidationStrategyModeOutputWithContext(ctx context.Context) DashboardValidationStrategyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardValidationStrategyModeOutput)
}

func (e DashboardValidationStrategyMode) ToDashboardValidationStrategyModePtrOutput() DashboardValidationStrategyModePtrOutput {
	return e.ToDashboardValidationStrategyModePtrOutputWithContext(context.Background())
}

func (e DashboardValidationStrategyMode) ToDashboardValidationStrategyModePtrOutputWithContext(ctx context.Context) DashboardValidationStrategyModePtrOutput {
	return DashboardValidationStrategyMode(e).ToDashboardValidationStrategyModeOutputWithContext(ctx).ToDashboardValidationStrategyModePtrOutputWithContext(ctx)
}

func (e DashboardValidationStrategyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardValidationStrategyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardValidationStrategyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardValidationStrategyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardValidationStrategyModeOutput struct{ *pulumi.OutputState }

func (DashboardValidationStrategyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardValidationStrategyMode)(nil)).Elem()
}

func (o DashboardValidationStrategyModeOutput) ToDashboardValidationStrategyModeOutput() DashboardValidationStrategyModeOutput {
	return o
}

func (o DashboardValidationStrategyModeOutput) ToDashboardValidationStrategyModeOutputWithContext(ctx context.Context) DashboardValidationStrategyModeOutput {
	return o
}

func (o DashboardValidationStrategyModeOutput) ToDashboardValidationStrategyModePtrOutput() DashboardValidationStrategyModePtrOutput {
	return o.ToDashboardValidationStrategyModePtrOutputWithContext(context.Background())
}

func (o DashboardValidationStrategyModeOutput) ToDashboardValidationStrategyModePtrOutputWithContext(ctx context.Context) DashboardValidationStrategyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardValidationStrategyMode) *DashboardValidationStrategyMode {
		return &v
	}).(DashboardValidationStrategyModePtrOutput)
}

func (o DashboardValidationStrategyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardValidationStrategyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardValidationStrategyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardValidationStrategyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardValidationStrategyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardValidationStrategyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardValidationStrategyModePtrOutput struct{ *pulumi.OutputState }

func (DashboardValidationStrategyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardValidationStrategyMode)(nil)).Elem()
}

func (o DashboardValidationStrategyModePtrOutput) ToDashboardValidationStrategyModePtrOutput() DashboardValidationStrategyModePtrOutput {
	return o
}

func (o DashboardValidationStrategyModePtrOutput) ToDashboardValidationStrategyModePtrOutputWithContext(ctx context.Context) DashboardValidationStrategyModePtrOutput {
	return o
}

func (o DashboardValidationStrategyModePtrOutput) Elem() DashboardValidationStrategyModeOutput {
	return o.ApplyT(func(v *DashboardValidationStrategyMode) DashboardValidationStrategyMode {
		if v != nil {
			return *v
		}
		var ret DashboardValidationStrategyMode
		return ret
	}).(DashboardValidationStrategyModeOutput)
}

func (o DashboardValidationStrategyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardValidationStrategyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardValidationStrategyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardValidationStrategyModeInput is an input type that accepts values of the DashboardValidationStrategyMode enum
// A concrete instance of `DashboardValidationStrategyModeInput` can be one of the following:
//
//	DashboardValidationStrategyModeStrict
//	DashboardValidationStrategyModeLenient
type DashboardValidationStrategyModeInput interface {
	pulumi.Input

	ToDashboardValidationStrategyModeOutput() DashboardValidationStrategyModeOutput
	ToDashboardValidationStrategyModeOutputWithContext(context.Context) DashboardValidationStrategyModeOutput
}

var dashboardValidationStrategyModePtrType = reflect.TypeOf((**DashboardValidationStrategyMode)(nil)).Elem()

type DashboardValidationStrategyModePtrInput interface {
	pulumi.Input

	ToDashboardValidationStrategyModePtrOutput() DashboardValidationStrategyModePtrOutput
	ToDashboardValidationStrategyModePtrOutputWithContext(context.Context) DashboardValidationStrategyModePtrOutput
}

type dashboardValidationStrategyModePtr string

func DashboardValidationStrategyModePtr(v string) DashboardValidationStrategyModePtrInput {
	return (*dashboardValidationStrategyModePtr)(&v)
}

func (*dashboardValidationStrategyModePtr) ElementType() reflect.Type {
	return dashboardValidationStrategyModePtrType
}

func (in *dashboardValidationStrategyModePtr) ToDashboardValidationStrategyModePtrOutput() DashboardValidationStrategyModePtrOutput {
	return pulumi.ToOutput(in).(DashboardValidationStrategyModePtrOutput)
}

func (in *dashboardValidationStrategyModePtr) ToDashboardValidationStrategyModePtrOutputWithContext(ctx context.Context) DashboardValidationStrategyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardValidationStrategyModePtrOutput)
}

type DashboardValueWhenUnsetOption string

const (
	DashboardValueWhenUnsetOptionRecommendedValue = DashboardValueWhenUnsetOption("RECOMMENDED_VALUE")
	DashboardValueWhenUnsetOptionNull             = DashboardValueWhenUnsetOption("NULL")
)

func (DashboardValueWhenUnsetOption) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardValueWhenUnsetOption)(nil)).Elem()
}

func (e DashboardValueWhenUnsetOption) ToDashboardValueWhenUnsetOptionOutput() DashboardValueWhenUnsetOptionOutput {
	return pulumi.ToOutput(e).(DashboardValueWhenUnsetOptionOutput)
}

func (e DashboardValueWhenUnsetOption) ToDashboardValueWhenUnsetOptionOutputWithContext(ctx context.Context) DashboardValueWhenUnsetOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardValueWhenUnsetOptionOutput)
}

func (e DashboardValueWhenUnsetOption) ToDashboardValueWhenUnsetOptionPtrOutput() DashboardValueWhenUnsetOptionPtrOutput {
	return e.ToDashboardValueWhenUnsetOptionPtrOutputWithContext(context.Background())
}

func (e DashboardValueWhenUnsetOption) ToDashboardValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) DashboardValueWhenUnsetOptionPtrOutput {
	return DashboardValueWhenUnsetOption(e).ToDashboardValueWhenUnsetOptionOutputWithContext(ctx).ToDashboardValueWhenUnsetOptionPtrOutputWithContext(ctx)
}

func (e DashboardValueWhenUnsetOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardValueWhenUnsetOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardValueWhenUnsetOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardValueWhenUnsetOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardValueWhenUnsetOptionOutput struct{ *pulumi.OutputState }

func (DashboardValueWhenUnsetOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardValueWhenUnsetOption)(nil)).Elem()
}

func (o DashboardValueWhenUnsetOptionOutput) ToDashboardValueWhenUnsetOptionOutput() DashboardValueWhenUnsetOptionOutput {
	return o
}

func (o DashboardValueWhenUnsetOptionOutput) ToDashboardValueWhenUnsetOptionOutputWithContext(ctx context.Context) DashboardValueWhenUnsetOptionOutput {
	return o
}

func (o DashboardValueWhenUnsetOptionOutput) ToDashboardValueWhenUnsetOptionPtrOutput() DashboardValueWhenUnsetOptionPtrOutput {
	return o.ToDashboardValueWhenUnsetOptionPtrOutputWithContext(context.Background())
}

func (o DashboardValueWhenUnsetOptionOutput) ToDashboardValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) DashboardValueWhenUnsetOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardValueWhenUnsetOption) *DashboardValueWhenUnsetOption {
		return &v
	}).(DashboardValueWhenUnsetOptionPtrOutput)
}

func (o DashboardValueWhenUnsetOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardValueWhenUnsetOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardValueWhenUnsetOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardValueWhenUnsetOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardValueWhenUnsetOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardValueWhenUnsetOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardValueWhenUnsetOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardValueWhenUnsetOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardValueWhenUnsetOption)(nil)).Elem()
}

func (o DashboardValueWhenUnsetOptionPtrOutput) ToDashboardValueWhenUnsetOptionPtrOutput() DashboardValueWhenUnsetOptionPtrOutput {
	return o
}

func (o DashboardValueWhenUnsetOptionPtrOutput) ToDashboardValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) DashboardValueWhenUnsetOptionPtrOutput {
	return o
}

func (o DashboardValueWhenUnsetOptionPtrOutput) Elem() DashboardValueWhenUnsetOptionOutput {
	return o.ApplyT(func(v *DashboardValueWhenUnsetOption) DashboardValueWhenUnsetOption {
		if v != nil {
			return *v
		}
		var ret DashboardValueWhenUnsetOption
		return ret
	}).(DashboardValueWhenUnsetOptionOutput)
}

func (o DashboardValueWhenUnsetOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardValueWhenUnsetOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardValueWhenUnsetOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardValueWhenUnsetOptionInput is an input type that accepts values of the DashboardValueWhenUnsetOption enum
// A concrete instance of `DashboardValueWhenUnsetOptionInput` can be one of the following:
//
//	DashboardValueWhenUnsetOptionRecommendedValue
//	DashboardValueWhenUnsetOptionNull
type DashboardValueWhenUnsetOptionInput interface {
	pulumi.Input

	ToDashboardValueWhenUnsetOptionOutput() DashboardValueWhenUnsetOptionOutput
	ToDashboardValueWhenUnsetOptionOutputWithContext(context.Context) DashboardValueWhenUnsetOptionOutput
}

var dashboardValueWhenUnsetOptionPtrType = reflect.TypeOf((**DashboardValueWhenUnsetOption)(nil)).Elem()

type DashboardValueWhenUnsetOptionPtrInput interface {
	pulumi.Input

	ToDashboardValueWhenUnsetOptionPtrOutput() DashboardValueWhenUnsetOptionPtrOutput
	ToDashboardValueWhenUnsetOptionPtrOutputWithContext(context.Context) DashboardValueWhenUnsetOptionPtrOutput
}

type dashboardValueWhenUnsetOptionPtr string

func DashboardValueWhenUnsetOptionPtr(v string) DashboardValueWhenUnsetOptionPtrInput {
	return (*dashboardValueWhenUnsetOptionPtr)(&v)
}

func (*dashboardValueWhenUnsetOptionPtr) ElementType() reflect.Type {
	return dashboardValueWhenUnsetOptionPtrType
}

func (in *dashboardValueWhenUnsetOptionPtr) ToDashboardValueWhenUnsetOptionPtrOutput() DashboardValueWhenUnsetOptionPtrOutput {
	return pulumi.ToOutput(in).(DashboardValueWhenUnsetOptionPtrOutput)
}

func (in *dashboardValueWhenUnsetOptionPtr) ToDashboardValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) DashboardValueWhenUnsetOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardValueWhenUnsetOptionPtrOutput)
}

type DashboardVerticalTextAlignment string

const (
	DashboardVerticalTextAlignmentTop    = DashboardVerticalTextAlignment("TOP")
	DashboardVerticalTextAlignmentMiddle = DashboardVerticalTextAlignment("MIDDLE")
	DashboardVerticalTextAlignmentBottom = DashboardVerticalTextAlignment("BOTTOM")
	DashboardVerticalTextAlignmentAuto   = DashboardVerticalTextAlignment("AUTO")
)

func (DashboardVerticalTextAlignment) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVerticalTextAlignment)(nil)).Elem()
}

func (e DashboardVerticalTextAlignment) ToDashboardVerticalTextAlignmentOutput() DashboardVerticalTextAlignmentOutput {
	return pulumi.ToOutput(e).(DashboardVerticalTextAlignmentOutput)
}

func (e DashboardVerticalTextAlignment) ToDashboardVerticalTextAlignmentOutputWithContext(ctx context.Context) DashboardVerticalTextAlignmentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardVerticalTextAlignmentOutput)
}

func (e DashboardVerticalTextAlignment) ToDashboardVerticalTextAlignmentPtrOutput() DashboardVerticalTextAlignmentPtrOutput {
	return e.ToDashboardVerticalTextAlignmentPtrOutputWithContext(context.Background())
}

func (e DashboardVerticalTextAlignment) ToDashboardVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) DashboardVerticalTextAlignmentPtrOutput {
	return DashboardVerticalTextAlignment(e).ToDashboardVerticalTextAlignmentOutputWithContext(ctx).ToDashboardVerticalTextAlignmentPtrOutputWithContext(ctx)
}

func (e DashboardVerticalTextAlignment) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardVerticalTextAlignment) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardVerticalTextAlignment) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardVerticalTextAlignment) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardVerticalTextAlignmentOutput struct{ *pulumi.OutputState }

func (DashboardVerticalTextAlignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVerticalTextAlignment)(nil)).Elem()
}

func (o DashboardVerticalTextAlignmentOutput) ToDashboardVerticalTextAlignmentOutput() DashboardVerticalTextAlignmentOutput {
	return o
}

func (o DashboardVerticalTextAlignmentOutput) ToDashboardVerticalTextAlignmentOutputWithContext(ctx context.Context) DashboardVerticalTextAlignmentOutput {
	return o
}

func (o DashboardVerticalTextAlignmentOutput) ToDashboardVerticalTextAlignmentPtrOutput() DashboardVerticalTextAlignmentPtrOutput {
	return o.ToDashboardVerticalTextAlignmentPtrOutputWithContext(context.Background())
}

func (o DashboardVerticalTextAlignmentOutput) ToDashboardVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) DashboardVerticalTextAlignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVerticalTextAlignment) *DashboardVerticalTextAlignment {
		return &v
	}).(DashboardVerticalTextAlignmentPtrOutput)
}

func (o DashboardVerticalTextAlignmentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardVerticalTextAlignmentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardVerticalTextAlignment) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardVerticalTextAlignmentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardVerticalTextAlignmentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardVerticalTextAlignment) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardVerticalTextAlignmentPtrOutput struct{ *pulumi.OutputState }

func (DashboardVerticalTextAlignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVerticalTextAlignment)(nil)).Elem()
}

func (o DashboardVerticalTextAlignmentPtrOutput) ToDashboardVerticalTextAlignmentPtrOutput() DashboardVerticalTextAlignmentPtrOutput {
	return o
}

func (o DashboardVerticalTextAlignmentPtrOutput) ToDashboardVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) DashboardVerticalTextAlignmentPtrOutput {
	return o
}

func (o DashboardVerticalTextAlignmentPtrOutput) Elem() DashboardVerticalTextAlignmentOutput {
	return o.ApplyT(func(v *DashboardVerticalTextAlignment) DashboardVerticalTextAlignment {
		if v != nil {
			return *v
		}
		var ret DashboardVerticalTextAlignment
		return ret
	}).(DashboardVerticalTextAlignmentOutput)
}

func (o DashboardVerticalTextAlignmentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardVerticalTextAlignmentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardVerticalTextAlignment) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardVerticalTextAlignmentInput is an input type that accepts values of the DashboardVerticalTextAlignment enum
// A concrete instance of `DashboardVerticalTextAlignmentInput` can be one of the following:
//
//	DashboardVerticalTextAlignmentTop
//	DashboardVerticalTextAlignmentMiddle
//	DashboardVerticalTextAlignmentBottom
//	DashboardVerticalTextAlignmentAuto
type DashboardVerticalTextAlignmentInput interface {
	pulumi.Input

	ToDashboardVerticalTextAlignmentOutput() DashboardVerticalTextAlignmentOutput
	ToDashboardVerticalTextAlignmentOutputWithContext(context.Context) DashboardVerticalTextAlignmentOutput
}

var dashboardVerticalTextAlignmentPtrType = reflect.TypeOf((**DashboardVerticalTextAlignment)(nil)).Elem()

type DashboardVerticalTextAlignmentPtrInput interface {
	pulumi.Input

	ToDashboardVerticalTextAlignmentPtrOutput() DashboardVerticalTextAlignmentPtrOutput
	ToDashboardVerticalTextAlignmentPtrOutputWithContext(context.Context) DashboardVerticalTextAlignmentPtrOutput
}

type dashboardVerticalTextAlignmentPtr string

func DashboardVerticalTextAlignmentPtr(v string) DashboardVerticalTextAlignmentPtrInput {
	return (*dashboardVerticalTextAlignmentPtr)(&v)
}

func (*dashboardVerticalTextAlignmentPtr) ElementType() reflect.Type {
	return dashboardVerticalTextAlignmentPtrType
}

func (in *dashboardVerticalTextAlignmentPtr) ToDashboardVerticalTextAlignmentPtrOutput() DashboardVerticalTextAlignmentPtrOutput {
	return pulumi.ToOutput(in).(DashboardVerticalTextAlignmentPtrOutput)
}

func (in *dashboardVerticalTextAlignmentPtr) ToDashboardVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) DashboardVerticalTextAlignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardVerticalTextAlignmentPtrOutput)
}

type DashboardVisibility string

const (
	DashboardVisibilityHidden  = DashboardVisibility("HIDDEN")
	DashboardVisibilityVisible = DashboardVisibility("VISIBLE")
)

func (DashboardVisibility) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisibility)(nil)).Elem()
}

func (e DashboardVisibility) ToDashboardVisibilityOutput() DashboardVisibilityOutput {
	return pulumi.ToOutput(e).(DashboardVisibilityOutput)
}

func (e DashboardVisibility) ToDashboardVisibilityOutputWithContext(ctx context.Context) DashboardVisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardVisibilityOutput)
}

func (e DashboardVisibility) ToDashboardVisibilityPtrOutput() DashboardVisibilityPtrOutput {
	return e.ToDashboardVisibilityPtrOutputWithContext(context.Background())
}

func (e DashboardVisibility) ToDashboardVisibilityPtrOutputWithContext(ctx context.Context) DashboardVisibilityPtrOutput {
	return DashboardVisibility(e).ToDashboardVisibilityOutputWithContext(ctx).ToDashboardVisibilityPtrOutputWithContext(ctx)
}

func (e DashboardVisibility) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardVisibility) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardVisibility) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardVisibility) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardVisibilityOutput struct{ *pulumi.OutputState }

func (DashboardVisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisibility)(nil)).Elem()
}

func (o DashboardVisibilityOutput) ToDashboardVisibilityOutput() DashboardVisibilityOutput {
	return o
}

func (o DashboardVisibilityOutput) ToDashboardVisibilityOutputWithContext(ctx context.Context) DashboardVisibilityOutput {
	return o
}

func (o DashboardVisibilityOutput) ToDashboardVisibilityPtrOutput() DashboardVisibilityPtrOutput {
	return o.ToDashboardVisibilityPtrOutputWithContext(context.Background())
}

func (o DashboardVisibilityOutput) ToDashboardVisibilityPtrOutputWithContext(ctx context.Context) DashboardVisibilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVisibility) *DashboardVisibility {
		return &v
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardVisibilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardVisibilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardVisibility) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardVisibilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardVisibilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardVisibility) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardVisibilityPtrOutput struct{ *pulumi.OutputState }

func (DashboardVisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisibility)(nil)).Elem()
}

func (o DashboardVisibilityPtrOutput) ToDashboardVisibilityPtrOutput() DashboardVisibilityPtrOutput {
	return o
}

func (o DashboardVisibilityPtrOutput) ToDashboardVisibilityPtrOutputWithContext(ctx context.Context) DashboardVisibilityPtrOutput {
	return o
}

func (o DashboardVisibilityPtrOutput) Elem() DashboardVisibilityOutput {
	return o.ApplyT(func(v *DashboardVisibility) DashboardVisibility {
		if v != nil {
			return *v
		}
		var ret DashboardVisibility
		return ret
	}).(DashboardVisibilityOutput)
}

func (o DashboardVisibilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardVisibilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardVisibility) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardVisibilityInput is an input type that accepts values of the DashboardVisibility enum
// A concrete instance of `DashboardVisibilityInput` can be one of the following:
//
//	DashboardVisibilityHidden
//	DashboardVisibilityVisible
type DashboardVisibilityInput interface {
	pulumi.Input

	ToDashboardVisibilityOutput() DashboardVisibilityOutput
	ToDashboardVisibilityOutputWithContext(context.Context) DashboardVisibilityOutput
}

var dashboardVisibilityPtrType = reflect.TypeOf((**DashboardVisibility)(nil)).Elem()

type DashboardVisibilityPtrInput interface {
	pulumi.Input

	ToDashboardVisibilityPtrOutput() DashboardVisibilityPtrOutput
	ToDashboardVisibilityPtrOutputWithContext(context.Context) DashboardVisibilityPtrOutput
}

type dashboardVisibilityPtr string

func DashboardVisibilityPtr(v string) DashboardVisibilityPtrInput {
	return (*dashboardVisibilityPtr)(&v)
}

func (*dashboardVisibilityPtr) ElementType() reflect.Type {
	return dashboardVisibilityPtrType
}

func (in *dashboardVisibilityPtr) ToDashboardVisibilityPtrOutput() DashboardVisibilityPtrOutput {
	return pulumi.ToOutput(in).(DashboardVisibilityPtrOutput)
}

func (in *dashboardVisibilityPtr) ToDashboardVisibilityPtrOutputWithContext(ctx context.Context) DashboardVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardVisibilityPtrOutput)
}

type DashboardVisualCustomActionTrigger string

const (
	DashboardVisualCustomActionTriggerDataPointClick = DashboardVisualCustomActionTrigger("DATA_POINT_CLICK")
	DashboardVisualCustomActionTriggerDataPointMenu  = DashboardVisualCustomActionTrigger("DATA_POINT_MENU")
)

func (DashboardVisualCustomActionTrigger) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualCustomActionTrigger)(nil)).Elem()
}

func (e DashboardVisualCustomActionTrigger) ToDashboardVisualCustomActionTriggerOutput() DashboardVisualCustomActionTriggerOutput {
	return pulumi.ToOutput(e).(DashboardVisualCustomActionTriggerOutput)
}

func (e DashboardVisualCustomActionTrigger) ToDashboardVisualCustomActionTriggerOutputWithContext(ctx context.Context) DashboardVisualCustomActionTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardVisualCustomActionTriggerOutput)
}

func (e DashboardVisualCustomActionTrigger) ToDashboardVisualCustomActionTriggerPtrOutput() DashboardVisualCustomActionTriggerPtrOutput {
	return e.ToDashboardVisualCustomActionTriggerPtrOutputWithContext(context.Background())
}

func (e DashboardVisualCustomActionTrigger) ToDashboardVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) DashboardVisualCustomActionTriggerPtrOutput {
	return DashboardVisualCustomActionTrigger(e).ToDashboardVisualCustomActionTriggerOutputWithContext(ctx).ToDashboardVisualCustomActionTriggerPtrOutputWithContext(ctx)
}

func (e DashboardVisualCustomActionTrigger) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardVisualCustomActionTrigger) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardVisualCustomActionTrigger) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardVisualCustomActionTrigger) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardVisualCustomActionTriggerOutput struct{ *pulumi.OutputState }

func (DashboardVisualCustomActionTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualCustomActionTrigger)(nil)).Elem()
}

func (o DashboardVisualCustomActionTriggerOutput) ToDashboardVisualCustomActionTriggerOutput() DashboardVisualCustomActionTriggerOutput {
	return o
}

func (o DashboardVisualCustomActionTriggerOutput) ToDashboardVisualCustomActionTriggerOutputWithContext(ctx context.Context) DashboardVisualCustomActionTriggerOutput {
	return o
}

func (o DashboardVisualCustomActionTriggerOutput) ToDashboardVisualCustomActionTriggerPtrOutput() DashboardVisualCustomActionTriggerPtrOutput {
	return o.ToDashboardVisualCustomActionTriggerPtrOutputWithContext(context.Background())
}

func (o DashboardVisualCustomActionTriggerOutput) ToDashboardVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) DashboardVisualCustomActionTriggerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVisualCustomActionTrigger) *DashboardVisualCustomActionTrigger {
		return &v
	}).(DashboardVisualCustomActionTriggerPtrOutput)
}

func (o DashboardVisualCustomActionTriggerOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardVisualCustomActionTriggerOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardVisualCustomActionTrigger) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardVisualCustomActionTriggerOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardVisualCustomActionTriggerOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardVisualCustomActionTrigger) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardVisualCustomActionTriggerPtrOutput struct{ *pulumi.OutputState }

func (DashboardVisualCustomActionTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualCustomActionTrigger)(nil)).Elem()
}

func (o DashboardVisualCustomActionTriggerPtrOutput) ToDashboardVisualCustomActionTriggerPtrOutput() DashboardVisualCustomActionTriggerPtrOutput {
	return o
}

func (o DashboardVisualCustomActionTriggerPtrOutput) ToDashboardVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) DashboardVisualCustomActionTriggerPtrOutput {
	return o
}

func (o DashboardVisualCustomActionTriggerPtrOutput) Elem() DashboardVisualCustomActionTriggerOutput {
	return o.ApplyT(func(v *DashboardVisualCustomActionTrigger) DashboardVisualCustomActionTrigger {
		if v != nil {
			return *v
		}
		var ret DashboardVisualCustomActionTrigger
		return ret
	}).(DashboardVisualCustomActionTriggerOutput)
}

func (o DashboardVisualCustomActionTriggerPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardVisualCustomActionTriggerPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardVisualCustomActionTrigger) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardVisualCustomActionTriggerInput is an input type that accepts values of the DashboardVisualCustomActionTrigger enum
// A concrete instance of `DashboardVisualCustomActionTriggerInput` can be one of the following:
//
//	DashboardVisualCustomActionTriggerDataPointClick
//	DashboardVisualCustomActionTriggerDataPointMenu
type DashboardVisualCustomActionTriggerInput interface {
	pulumi.Input

	ToDashboardVisualCustomActionTriggerOutput() DashboardVisualCustomActionTriggerOutput
	ToDashboardVisualCustomActionTriggerOutputWithContext(context.Context) DashboardVisualCustomActionTriggerOutput
}

var dashboardVisualCustomActionTriggerPtrType = reflect.TypeOf((**DashboardVisualCustomActionTrigger)(nil)).Elem()

type DashboardVisualCustomActionTriggerPtrInput interface {
	pulumi.Input

	ToDashboardVisualCustomActionTriggerPtrOutput() DashboardVisualCustomActionTriggerPtrOutput
	ToDashboardVisualCustomActionTriggerPtrOutputWithContext(context.Context) DashboardVisualCustomActionTriggerPtrOutput
}

type dashboardVisualCustomActionTriggerPtr string

func DashboardVisualCustomActionTriggerPtr(v string) DashboardVisualCustomActionTriggerPtrInput {
	return (*dashboardVisualCustomActionTriggerPtr)(&v)
}

func (*dashboardVisualCustomActionTriggerPtr) ElementType() reflect.Type {
	return dashboardVisualCustomActionTriggerPtrType
}

func (in *dashboardVisualCustomActionTriggerPtr) ToDashboardVisualCustomActionTriggerPtrOutput() DashboardVisualCustomActionTriggerPtrOutput {
	return pulumi.ToOutput(in).(DashboardVisualCustomActionTriggerPtrOutput)
}

func (in *dashboardVisualCustomActionTriggerPtr) ToDashboardVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) DashboardVisualCustomActionTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardVisualCustomActionTriggerPtrOutput)
}

type DashboardWidgetStatus string

const (
	DashboardWidgetStatusEnabled  = DashboardWidgetStatus("ENABLED")
	DashboardWidgetStatusDisabled = DashboardWidgetStatus("DISABLED")
)

func (DashboardWidgetStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWidgetStatus)(nil)).Elem()
}

func (e DashboardWidgetStatus) ToDashboardWidgetStatusOutput() DashboardWidgetStatusOutput {
	return pulumi.ToOutput(e).(DashboardWidgetStatusOutput)
}

func (e DashboardWidgetStatus) ToDashboardWidgetStatusOutputWithContext(ctx context.Context) DashboardWidgetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardWidgetStatusOutput)
}

func (e DashboardWidgetStatus) ToDashboardWidgetStatusPtrOutput() DashboardWidgetStatusPtrOutput {
	return e.ToDashboardWidgetStatusPtrOutputWithContext(context.Background())
}

func (e DashboardWidgetStatus) ToDashboardWidgetStatusPtrOutputWithContext(ctx context.Context) DashboardWidgetStatusPtrOutput {
	return DashboardWidgetStatus(e).ToDashboardWidgetStatusOutputWithContext(ctx).ToDashboardWidgetStatusPtrOutputWithContext(ctx)
}

func (e DashboardWidgetStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWidgetStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWidgetStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardWidgetStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardWidgetStatusOutput struct{ *pulumi.OutputState }

func (DashboardWidgetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWidgetStatus)(nil)).Elem()
}

func (o DashboardWidgetStatusOutput) ToDashboardWidgetStatusOutput() DashboardWidgetStatusOutput {
	return o
}

func (o DashboardWidgetStatusOutput) ToDashboardWidgetStatusOutputWithContext(ctx context.Context) DashboardWidgetStatusOutput {
	return o
}

func (o DashboardWidgetStatusOutput) ToDashboardWidgetStatusPtrOutput() DashboardWidgetStatusPtrOutput {
	return o.ToDashboardWidgetStatusPtrOutputWithContext(context.Background())
}

func (o DashboardWidgetStatusOutput) ToDashboardWidgetStatusPtrOutputWithContext(ctx context.Context) DashboardWidgetStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWidgetStatus) *DashboardWidgetStatus {
		return &v
	}).(DashboardWidgetStatusPtrOutput)
}

func (o DashboardWidgetStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardWidgetStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWidgetStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardWidgetStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWidgetStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWidgetStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardWidgetStatusPtrOutput struct{ *pulumi.OutputState }

func (DashboardWidgetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWidgetStatus)(nil)).Elem()
}

func (o DashboardWidgetStatusPtrOutput) ToDashboardWidgetStatusPtrOutput() DashboardWidgetStatusPtrOutput {
	return o
}

func (o DashboardWidgetStatusPtrOutput) ToDashboardWidgetStatusPtrOutputWithContext(ctx context.Context) DashboardWidgetStatusPtrOutput {
	return o
}

func (o DashboardWidgetStatusPtrOutput) Elem() DashboardWidgetStatusOutput {
	return o.ApplyT(func(v *DashboardWidgetStatus) DashboardWidgetStatus {
		if v != nil {
			return *v
		}
		var ret DashboardWidgetStatus
		return ret
	}).(DashboardWidgetStatusOutput)
}

func (o DashboardWidgetStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWidgetStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardWidgetStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardWidgetStatusInput is an input type that accepts values of the DashboardWidgetStatus enum
// A concrete instance of `DashboardWidgetStatusInput` can be one of the following:
//
//	DashboardWidgetStatusEnabled
//	DashboardWidgetStatusDisabled
type DashboardWidgetStatusInput interface {
	pulumi.Input

	ToDashboardWidgetStatusOutput() DashboardWidgetStatusOutput
	ToDashboardWidgetStatusOutputWithContext(context.Context) DashboardWidgetStatusOutput
}

var dashboardWidgetStatusPtrType = reflect.TypeOf((**DashboardWidgetStatus)(nil)).Elem()

type DashboardWidgetStatusPtrInput interface {
	pulumi.Input

	ToDashboardWidgetStatusPtrOutput() DashboardWidgetStatusPtrOutput
	ToDashboardWidgetStatusPtrOutputWithContext(context.Context) DashboardWidgetStatusPtrOutput
}

type dashboardWidgetStatusPtr string

func DashboardWidgetStatusPtr(v string) DashboardWidgetStatusPtrInput {
	return (*dashboardWidgetStatusPtr)(&v)
}

func (*dashboardWidgetStatusPtr) ElementType() reflect.Type {
	return dashboardWidgetStatusPtrType
}

func (in *dashboardWidgetStatusPtr) ToDashboardWidgetStatusPtrOutput() DashboardWidgetStatusPtrOutput {
	return pulumi.ToOutput(in).(DashboardWidgetStatusPtrOutput)
}

func (in *dashboardWidgetStatusPtr) ToDashboardWidgetStatusPtrOutputWithContext(ctx context.Context) DashboardWidgetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardWidgetStatusPtrOutput)
}

type DashboardWordCloudCloudLayout string

const (
	DashboardWordCloudCloudLayoutFluid  = DashboardWordCloudCloudLayout("FLUID")
	DashboardWordCloudCloudLayoutNormal = DashboardWordCloudCloudLayout("NORMAL")
)

func (DashboardWordCloudCloudLayout) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudCloudLayout)(nil)).Elem()
}

func (e DashboardWordCloudCloudLayout) ToDashboardWordCloudCloudLayoutOutput() DashboardWordCloudCloudLayoutOutput {
	return pulumi.ToOutput(e).(DashboardWordCloudCloudLayoutOutput)
}

func (e DashboardWordCloudCloudLayout) ToDashboardWordCloudCloudLayoutOutputWithContext(ctx context.Context) DashboardWordCloudCloudLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardWordCloudCloudLayoutOutput)
}

func (e DashboardWordCloudCloudLayout) ToDashboardWordCloudCloudLayoutPtrOutput() DashboardWordCloudCloudLayoutPtrOutput {
	return e.ToDashboardWordCloudCloudLayoutPtrOutputWithContext(context.Background())
}

func (e DashboardWordCloudCloudLayout) ToDashboardWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) DashboardWordCloudCloudLayoutPtrOutput {
	return DashboardWordCloudCloudLayout(e).ToDashboardWordCloudCloudLayoutOutputWithContext(ctx).ToDashboardWordCloudCloudLayoutPtrOutputWithContext(ctx)
}

func (e DashboardWordCloudCloudLayout) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWordCloudCloudLayout) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWordCloudCloudLayout) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardWordCloudCloudLayout) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardWordCloudCloudLayoutOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudCloudLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudCloudLayout)(nil)).Elem()
}

func (o DashboardWordCloudCloudLayoutOutput) ToDashboardWordCloudCloudLayoutOutput() DashboardWordCloudCloudLayoutOutput {
	return o
}

func (o DashboardWordCloudCloudLayoutOutput) ToDashboardWordCloudCloudLayoutOutputWithContext(ctx context.Context) DashboardWordCloudCloudLayoutOutput {
	return o
}

func (o DashboardWordCloudCloudLayoutOutput) ToDashboardWordCloudCloudLayoutPtrOutput() DashboardWordCloudCloudLayoutPtrOutput {
	return o.ToDashboardWordCloudCloudLayoutPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudCloudLayoutOutput) ToDashboardWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) DashboardWordCloudCloudLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudCloudLayout) *DashboardWordCloudCloudLayout {
		return &v
	}).(DashboardWordCloudCloudLayoutPtrOutput)
}

func (o DashboardWordCloudCloudLayoutOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardWordCloudCloudLayoutOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWordCloudCloudLayout) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardWordCloudCloudLayoutOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudCloudLayoutOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWordCloudCloudLayout) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardWordCloudCloudLayoutPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudCloudLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudCloudLayout)(nil)).Elem()
}

func (o DashboardWordCloudCloudLayoutPtrOutput) ToDashboardWordCloudCloudLayoutPtrOutput() DashboardWordCloudCloudLayoutPtrOutput {
	return o
}

func (o DashboardWordCloudCloudLayoutPtrOutput) ToDashboardWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) DashboardWordCloudCloudLayoutPtrOutput {
	return o
}

func (o DashboardWordCloudCloudLayoutPtrOutput) Elem() DashboardWordCloudCloudLayoutOutput {
	return o.ApplyT(func(v *DashboardWordCloudCloudLayout) DashboardWordCloudCloudLayout {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudCloudLayout
		return ret
	}).(DashboardWordCloudCloudLayoutOutput)
}

func (o DashboardWordCloudCloudLayoutPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudCloudLayoutPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardWordCloudCloudLayout) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardWordCloudCloudLayoutInput is an input type that accepts values of the DashboardWordCloudCloudLayout enum
// A concrete instance of `DashboardWordCloudCloudLayoutInput` can be one of the following:
//
//	DashboardWordCloudCloudLayoutFluid
//	DashboardWordCloudCloudLayoutNormal
type DashboardWordCloudCloudLayoutInput interface {
	pulumi.Input

	ToDashboardWordCloudCloudLayoutOutput() DashboardWordCloudCloudLayoutOutput
	ToDashboardWordCloudCloudLayoutOutputWithContext(context.Context) DashboardWordCloudCloudLayoutOutput
}

var dashboardWordCloudCloudLayoutPtrType = reflect.TypeOf((**DashboardWordCloudCloudLayout)(nil)).Elem()

type DashboardWordCloudCloudLayoutPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudCloudLayoutPtrOutput() DashboardWordCloudCloudLayoutPtrOutput
	ToDashboardWordCloudCloudLayoutPtrOutputWithContext(context.Context) DashboardWordCloudCloudLayoutPtrOutput
}

type dashboardWordCloudCloudLayoutPtr string

func DashboardWordCloudCloudLayoutPtr(v string) DashboardWordCloudCloudLayoutPtrInput {
	return (*dashboardWordCloudCloudLayoutPtr)(&v)
}

func (*dashboardWordCloudCloudLayoutPtr) ElementType() reflect.Type {
	return dashboardWordCloudCloudLayoutPtrType
}

func (in *dashboardWordCloudCloudLayoutPtr) ToDashboardWordCloudCloudLayoutPtrOutput() DashboardWordCloudCloudLayoutPtrOutput {
	return pulumi.ToOutput(in).(DashboardWordCloudCloudLayoutPtrOutput)
}

func (in *dashboardWordCloudCloudLayoutPtr) ToDashboardWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) DashboardWordCloudCloudLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardWordCloudCloudLayoutPtrOutput)
}

type DashboardWordCloudWordCasing string

const (
	DashboardWordCloudWordCasingLowerCase    = DashboardWordCloudWordCasing("LOWER_CASE")
	DashboardWordCloudWordCasingExistingCase = DashboardWordCloudWordCasing("EXISTING_CASE")
)

func (DashboardWordCloudWordCasing) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudWordCasing)(nil)).Elem()
}

func (e DashboardWordCloudWordCasing) ToDashboardWordCloudWordCasingOutput() DashboardWordCloudWordCasingOutput {
	return pulumi.ToOutput(e).(DashboardWordCloudWordCasingOutput)
}

func (e DashboardWordCloudWordCasing) ToDashboardWordCloudWordCasingOutputWithContext(ctx context.Context) DashboardWordCloudWordCasingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardWordCloudWordCasingOutput)
}

func (e DashboardWordCloudWordCasing) ToDashboardWordCloudWordCasingPtrOutput() DashboardWordCloudWordCasingPtrOutput {
	return e.ToDashboardWordCloudWordCasingPtrOutputWithContext(context.Background())
}

func (e DashboardWordCloudWordCasing) ToDashboardWordCloudWordCasingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordCasingPtrOutput {
	return DashboardWordCloudWordCasing(e).ToDashboardWordCloudWordCasingOutputWithContext(ctx).ToDashboardWordCloudWordCasingPtrOutputWithContext(ctx)
}

func (e DashboardWordCloudWordCasing) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWordCloudWordCasing) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWordCloudWordCasing) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardWordCloudWordCasing) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardWordCloudWordCasingOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudWordCasingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudWordCasing)(nil)).Elem()
}

func (o DashboardWordCloudWordCasingOutput) ToDashboardWordCloudWordCasingOutput() DashboardWordCloudWordCasingOutput {
	return o
}

func (o DashboardWordCloudWordCasingOutput) ToDashboardWordCloudWordCasingOutputWithContext(ctx context.Context) DashboardWordCloudWordCasingOutput {
	return o
}

func (o DashboardWordCloudWordCasingOutput) ToDashboardWordCloudWordCasingPtrOutput() DashboardWordCloudWordCasingPtrOutput {
	return o.ToDashboardWordCloudWordCasingPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordCasingOutput) ToDashboardWordCloudWordCasingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordCasingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudWordCasing) *DashboardWordCloudWordCasing {
		return &v
	}).(DashboardWordCloudWordCasingPtrOutput)
}

func (o DashboardWordCloudWordCasingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordCasingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWordCloudWordCasing) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardWordCloudWordCasingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordCasingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWordCloudWordCasing) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardWordCloudWordCasingPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudWordCasingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudWordCasing)(nil)).Elem()
}

func (o DashboardWordCloudWordCasingPtrOutput) ToDashboardWordCloudWordCasingPtrOutput() DashboardWordCloudWordCasingPtrOutput {
	return o
}

func (o DashboardWordCloudWordCasingPtrOutput) ToDashboardWordCloudWordCasingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordCasingPtrOutput {
	return o
}

func (o DashboardWordCloudWordCasingPtrOutput) Elem() DashboardWordCloudWordCasingOutput {
	return o.ApplyT(func(v *DashboardWordCloudWordCasing) DashboardWordCloudWordCasing {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudWordCasing
		return ret
	}).(DashboardWordCloudWordCasingOutput)
}

func (o DashboardWordCloudWordCasingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordCasingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardWordCloudWordCasing) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardWordCloudWordCasingInput is an input type that accepts values of the DashboardWordCloudWordCasing enum
// A concrete instance of `DashboardWordCloudWordCasingInput` can be one of the following:
//
//	DashboardWordCloudWordCasingLowerCase
//	DashboardWordCloudWordCasingExistingCase
type DashboardWordCloudWordCasingInput interface {
	pulumi.Input

	ToDashboardWordCloudWordCasingOutput() DashboardWordCloudWordCasingOutput
	ToDashboardWordCloudWordCasingOutputWithContext(context.Context) DashboardWordCloudWordCasingOutput
}

var dashboardWordCloudWordCasingPtrType = reflect.TypeOf((**DashboardWordCloudWordCasing)(nil)).Elem()

type DashboardWordCloudWordCasingPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudWordCasingPtrOutput() DashboardWordCloudWordCasingPtrOutput
	ToDashboardWordCloudWordCasingPtrOutputWithContext(context.Context) DashboardWordCloudWordCasingPtrOutput
}

type dashboardWordCloudWordCasingPtr string

func DashboardWordCloudWordCasingPtr(v string) DashboardWordCloudWordCasingPtrInput {
	return (*dashboardWordCloudWordCasingPtr)(&v)
}

func (*dashboardWordCloudWordCasingPtr) ElementType() reflect.Type {
	return dashboardWordCloudWordCasingPtrType
}

func (in *dashboardWordCloudWordCasingPtr) ToDashboardWordCloudWordCasingPtrOutput() DashboardWordCloudWordCasingPtrOutput {
	return pulumi.ToOutput(in).(DashboardWordCloudWordCasingPtrOutput)
}

func (in *dashboardWordCloudWordCasingPtr) ToDashboardWordCloudWordCasingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordCasingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardWordCloudWordCasingPtrOutput)
}

type DashboardWordCloudWordOrientation string

const (
	DashboardWordCloudWordOrientationHorizontal            = DashboardWordCloudWordOrientation("HORIZONTAL")
	DashboardWordCloudWordOrientationHorizontalAndVertical = DashboardWordCloudWordOrientation("HORIZONTAL_AND_VERTICAL")
)

func (DashboardWordCloudWordOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudWordOrientation)(nil)).Elem()
}

func (e DashboardWordCloudWordOrientation) ToDashboardWordCloudWordOrientationOutput() DashboardWordCloudWordOrientationOutput {
	return pulumi.ToOutput(e).(DashboardWordCloudWordOrientationOutput)
}

func (e DashboardWordCloudWordOrientation) ToDashboardWordCloudWordOrientationOutputWithContext(ctx context.Context) DashboardWordCloudWordOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardWordCloudWordOrientationOutput)
}

func (e DashboardWordCloudWordOrientation) ToDashboardWordCloudWordOrientationPtrOutput() DashboardWordCloudWordOrientationPtrOutput {
	return e.ToDashboardWordCloudWordOrientationPtrOutputWithContext(context.Background())
}

func (e DashboardWordCloudWordOrientation) ToDashboardWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordOrientationPtrOutput {
	return DashboardWordCloudWordOrientation(e).ToDashboardWordCloudWordOrientationOutputWithContext(ctx).ToDashboardWordCloudWordOrientationPtrOutputWithContext(ctx)
}

func (e DashboardWordCloudWordOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWordCloudWordOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWordCloudWordOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardWordCloudWordOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardWordCloudWordOrientationOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudWordOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudWordOrientation)(nil)).Elem()
}

func (o DashboardWordCloudWordOrientationOutput) ToDashboardWordCloudWordOrientationOutput() DashboardWordCloudWordOrientationOutput {
	return o
}

func (o DashboardWordCloudWordOrientationOutput) ToDashboardWordCloudWordOrientationOutputWithContext(ctx context.Context) DashboardWordCloudWordOrientationOutput {
	return o
}

func (o DashboardWordCloudWordOrientationOutput) ToDashboardWordCloudWordOrientationPtrOutput() DashboardWordCloudWordOrientationPtrOutput {
	return o.ToDashboardWordCloudWordOrientationPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordOrientationOutput) ToDashboardWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudWordOrientation) *DashboardWordCloudWordOrientation {
		return &v
	}).(DashboardWordCloudWordOrientationPtrOutput)
}

func (o DashboardWordCloudWordOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWordCloudWordOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardWordCloudWordOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWordCloudWordOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardWordCloudWordOrientationPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudWordOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudWordOrientation)(nil)).Elem()
}

func (o DashboardWordCloudWordOrientationPtrOutput) ToDashboardWordCloudWordOrientationPtrOutput() DashboardWordCloudWordOrientationPtrOutput {
	return o
}

func (o DashboardWordCloudWordOrientationPtrOutput) ToDashboardWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordOrientationPtrOutput {
	return o
}

func (o DashboardWordCloudWordOrientationPtrOutput) Elem() DashboardWordCloudWordOrientationOutput {
	return o.ApplyT(func(v *DashboardWordCloudWordOrientation) DashboardWordCloudWordOrientation {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudWordOrientation
		return ret
	}).(DashboardWordCloudWordOrientationOutput)
}

func (o DashboardWordCloudWordOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardWordCloudWordOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardWordCloudWordOrientationInput is an input type that accepts values of the DashboardWordCloudWordOrientation enum
// A concrete instance of `DashboardWordCloudWordOrientationInput` can be one of the following:
//
//	DashboardWordCloudWordOrientationHorizontal
//	DashboardWordCloudWordOrientationHorizontalAndVertical
type DashboardWordCloudWordOrientationInput interface {
	pulumi.Input

	ToDashboardWordCloudWordOrientationOutput() DashboardWordCloudWordOrientationOutput
	ToDashboardWordCloudWordOrientationOutputWithContext(context.Context) DashboardWordCloudWordOrientationOutput
}

var dashboardWordCloudWordOrientationPtrType = reflect.TypeOf((**DashboardWordCloudWordOrientation)(nil)).Elem()

type DashboardWordCloudWordOrientationPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudWordOrientationPtrOutput() DashboardWordCloudWordOrientationPtrOutput
	ToDashboardWordCloudWordOrientationPtrOutputWithContext(context.Context) DashboardWordCloudWordOrientationPtrOutput
}

type dashboardWordCloudWordOrientationPtr string

func DashboardWordCloudWordOrientationPtr(v string) DashboardWordCloudWordOrientationPtrInput {
	return (*dashboardWordCloudWordOrientationPtr)(&v)
}

func (*dashboardWordCloudWordOrientationPtr) ElementType() reflect.Type {
	return dashboardWordCloudWordOrientationPtrType
}

func (in *dashboardWordCloudWordOrientationPtr) ToDashboardWordCloudWordOrientationPtrOutput() DashboardWordCloudWordOrientationPtrOutput {
	return pulumi.ToOutput(in).(DashboardWordCloudWordOrientationPtrOutput)
}

func (in *dashboardWordCloudWordOrientationPtr) ToDashboardWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardWordCloudWordOrientationPtrOutput)
}

type DashboardWordCloudWordPadding string

const (
	DashboardWordCloudWordPaddingNone   = DashboardWordCloudWordPadding("NONE")
	DashboardWordCloudWordPaddingSmall  = DashboardWordCloudWordPadding("SMALL")
	DashboardWordCloudWordPaddingMedium = DashboardWordCloudWordPadding("MEDIUM")
	DashboardWordCloudWordPaddingLarge  = DashboardWordCloudWordPadding("LARGE")
)

func (DashboardWordCloudWordPadding) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudWordPadding)(nil)).Elem()
}

func (e DashboardWordCloudWordPadding) ToDashboardWordCloudWordPaddingOutput() DashboardWordCloudWordPaddingOutput {
	return pulumi.ToOutput(e).(DashboardWordCloudWordPaddingOutput)
}

func (e DashboardWordCloudWordPadding) ToDashboardWordCloudWordPaddingOutputWithContext(ctx context.Context) DashboardWordCloudWordPaddingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardWordCloudWordPaddingOutput)
}

func (e DashboardWordCloudWordPadding) ToDashboardWordCloudWordPaddingPtrOutput() DashboardWordCloudWordPaddingPtrOutput {
	return e.ToDashboardWordCloudWordPaddingPtrOutputWithContext(context.Background())
}

func (e DashboardWordCloudWordPadding) ToDashboardWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordPaddingPtrOutput {
	return DashboardWordCloudWordPadding(e).ToDashboardWordCloudWordPaddingOutputWithContext(ctx).ToDashboardWordCloudWordPaddingPtrOutputWithContext(ctx)
}

func (e DashboardWordCloudWordPadding) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWordCloudWordPadding) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWordCloudWordPadding) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardWordCloudWordPadding) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardWordCloudWordPaddingOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudWordPaddingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudWordPadding)(nil)).Elem()
}

func (o DashboardWordCloudWordPaddingOutput) ToDashboardWordCloudWordPaddingOutput() DashboardWordCloudWordPaddingOutput {
	return o
}

func (o DashboardWordCloudWordPaddingOutput) ToDashboardWordCloudWordPaddingOutputWithContext(ctx context.Context) DashboardWordCloudWordPaddingOutput {
	return o
}

func (o DashboardWordCloudWordPaddingOutput) ToDashboardWordCloudWordPaddingPtrOutput() DashboardWordCloudWordPaddingPtrOutput {
	return o.ToDashboardWordCloudWordPaddingPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordPaddingOutput) ToDashboardWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordPaddingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudWordPadding) *DashboardWordCloudWordPadding {
		return &v
	}).(DashboardWordCloudWordPaddingPtrOutput)
}

func (o DashboardWordCloudWordPaddingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordPaddingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWordCloudWordPadding) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardWordCloudWordPaddingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordPaddingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWordCloudWordPadding) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardWordCloudWordPaddingPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudWordPaddingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudWordPadding)(nil)).Elem()
}

func (o DashboardWordCloudWordPaddingPtrOutput) ToDashboardWordCloudWordPaddingPtrOutput() DashboardWordCloudWordPaddingPtrOutput {
	return o
}

func (o DashboardWordCloudWordPaddingPtrOutput) ToDashboardWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordPaddingPtrOutput {
	return o
}

func (o DashboardWordCloudWordPaddingPtrOutput) Elem() DashboardWordCloudWordPaddingOutput {
	return o.ApplyT(func(v *DashboardWordCloudWordPadding) DashboardWordCloudWordPadding {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudWordPadding
		return ret
	}).(DashboardWordCloudWordPaddingOutput)
}

func (o DashboardWordCloudWordPaddingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordPaddingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardWordCloudWordPadding) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardWordCloudWordPaddingInput is an input type that accepts values of the DashboardWordCloudWordPadding enum
// A concrete instance of `DashboardWordCloudWordPaddingInput` can be one of the following:
//
//	DashboardWordCloudWordPaddingNone
//	DashboardWordCloudWordPaddingSmall
//	DashboardWordCloudWordPaddingMedium
//	DashboardWordCloudWordPaddingLarge
type DashboardWordCloudWordPaddingInput interface {
	pulumi.Input

	ToDashboardWordCloudWordPaddingOutput() DashboardWordCloudWordPaddingOutput
	ToDashboardWordCloudWordPaddingOutputWithContext(context.Context) DashboardWordCloudWordPaddingOutput
}

var dashboardWordCloudWordPaddingPtrType = reflect.TypeOf((**DashboardWordCloudWordPadding)(nil)).Elem()

type DashboardWordCloudWordPaddingPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudWordPaddingPtrOutput() DashboardWordCloudWordPaddingPtrOutput
	ToDashboardWordCloudWordPaddingPtrOutputWithContext(context.Context) DashboardWordCloudWordPaddingPtrOutput
}

type dashboardWordCloudWordPaddingPtr string

func DashboardWordCloudWordPaddingPtr(v string) DashboardWordCloudWordPaddingPtrInput {
	return (*dashboardWordCloudWordPaddingPtr)(&v)
}

func (*dashboardWordCloudWordPaddingPtr) ElementType() reflect.Type {
	return dashboardWordCloudWordPaddingPtrType
}

func (in *dashboardWordCloudWordPaddingPtr) ToDashboardWordCloudWordPaddingPtrOutput() DashboardWordCloudWordPaddingPtrOutput {
	return pulumi.ToOutput(in).(DashboardWordCloudWordPaddingPtrOutput)
}

func (in *dashboardWordCloudWordPaddingPtr) ToDashboardWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordPaddingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardWordCloudWordPaddingPtrOutput)
}

type DashboardWordCloudWordScaling string

const (
	DashboardWordCloudWordScalingEmphasize = DashboardWordCloudWordScaling("EMPHASIZE")
	DashboardWordCloudWordScalingNormal    = DashboardWordCloudWordScaling("NORMAL")
)

func (DashboardWordCloudWordScaling) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudWordScaling)(nil)).Elem()
}

func (e DashboardWordCloudWordScaling) ToDashboardWordCloudWordScalingOutput() DashboardWordCloudWordScalingOutput {
	return pulumi.ToOutput(e).(DashboardWordCloudWordScalingOutput)
}

func (e DashboardWordCloudWordScaling) ToDashboardWordCloudWordScalingOutputWithContext(ctx context.Context) DashboardWordCloudWordScalingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardWordCloudWordScalingOutput)
}

func (e DashboardWordCloudWordScaling) ToDashboardWordCloudWordScalingPtrOutput() DashboardWordCloudWordScalingPtrOutput {
	return e.ToDashboardWordCloudWordScalingPtrOutputWithContext(context.Background())
}

func (e DashboardWordCloudWordScaling) ToDashboardWordCloudWordScalingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordScalingPtrOutput {
	return DashboardWordCloudWordScaling(e).ToDashboardWordCloudWordScalingOutputWithContext(ctx).ToDashboardWordCloudWordScalingPtrOutputWithContext(ctx)
}

func (e DashboardWordCloudWordScaling) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWordCloudWordScaling) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardWordCloudWordScaling) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardWordCloudWordScaling) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardWordCloudWordScalingOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudWordScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudWordScaling)(nil)).Elem()
}

func (o DashboardWordCloudWordScalingOutput) ToDashboardWordCloudWordScalingOutput() DashboardWordCloudWordScalingOutput {
	return o
}

func (o DashboardWordCloudWordScalingOutput) ToDashboardWordCloudWordScalingOutputWithContext(ctx context.Context) DashboardWordCloudWordScalingOutput {
	return o
}

func (o DashboardWordCloudWordScalingOutput) ToDashboardWordCloudWordScalingPtrOutput() DashboardWordCloudWordScalingPtrOutput {
	return o.ToDashboardWordCloudWordScalingPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordScalingOutput) ToDashboardWordCloudWordScalingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudWordScaling) *DashboardWordCloudWordScaling {
		return &v
	}).(DashboardWordCloudWordScalingPtrOutput)
}

func (o DashboardWordCloudWordScalingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordScalingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWordCloudWordScaling) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardWordCloudWordScalingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordScalingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardWordCloudWordScaling) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardWordCloudWordScalingPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudWordScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudWordScaling)(nil)).Elem()
}

func (o DashboardWordCloudWordScalingPtrOutput) ToDashboardWordCloudWordScalingPtrOutput() DashboardWordCloudWordScalingPtrOutput {
	return o
}

func (o DashboardWordCloudWordScalingPtrOutput) ToDashboardWordCloudWordScalingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordScalingPtrOutput {
	return o
}

func (o DashboardWordCloudWordScalingPtrOutput) Elem() DashboardWordCloudWordScalingOutput {
	return o.ApplyT(func(v *DashboardWordCloudWordScaling) DashboardWordCloudWordScaling {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudWordScaling
		return ret
	}).(DashboardWordCloudWordScalingOutput)
}

func (o DashboardWordCloudWordScalingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudWordScalingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardWordCloudWordScaling) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardWordCloudWordScalingInput is an input type that accepts values of the DashboardWordCloudWordScaling enum
// A concrete instance of `DashboardWordCloudWordScalingInput` can be one of the following:
//
//	DashboardWordCloudWordScalingEmphasize
//	DashboardWordCloudWordScalingNormal
type DashboardWordCloudWordScalingInput interface {
	pulumi.Input

	ToDashboardWordCloudWordScalingOutput() DashboardWordCloudWordScalingOutput
	ToDashboardWordCloudWordScalingOutputWithContext(context.Context) DashboardWordCloudWordScalingOutput
}

var dashboardWordCloudWordScalingPtrType = reflect.TypeOf((**DashboardWordCloudWordScaling)(nil)).Elem()

type DashboardWordCloudWordScalingPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudWordScalingPtrOutput() DashboardWordCloudWordScalingPtrOutput
	ToDashboardWordCloudWordScalingPtrOutputWithContext(context.Context) DashboardWordCloudWordScalingPtrOutput
}

type dashboardWordCloudWordScalingPtr string

func DashboardWordCloudWordScalingPtr(v string) DashboardWordCloudWordScalingPtrInput {
	return (*dashboardWordCloudWordScalingPtr)(&v)
}

func (*dashboardWordCloudWordScalingPtr) ElementType() reflect.Type {
	return dashboardWordCloudWordScalingPtrType
}

func (in *dashboardWordCloudWordScalingPtr) ToDashboardWordCloudWordScalingPtrOutput() DashboardWordCloudWordScalingPtrOutput {
	return pulumi.ToOutput(in).(DashboardWordCloudWordScalingPtrOutput)
}

func (in *dashboardWordCloudWordScalingPtr) ToDashboardWordCloudWordScalingPtrOutputWithContext(ctx context.Context) DashboardWordCloudWordScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardWordCloudWordScalingPtrOutput)
}

type DataSetColumnDataType string

const (
	DataSetColumnDataTypeString   = DataSetColumnDataType("STRING")
	DataSetColumnDataTypeInteger  = DataSetColumnDataType("INTEGER")
	DataSetColumnDataTypeDecimal  = DataSetColumnDataType("DECIMAL")
	DataSetColumnDataTypeDatetime = DataSetColumnDataType("DATETIME")
)

func (DataSetColumnDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnDataType)(nil)).Elem()
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypeOutput() DataSetColumnDataTypeOutput {
	return pulumi.ToOutput(e).(DataSetColumnDataTypeOutput)
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypeOutputWithContext(ctx context.Context) DataSetColumnDataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetColumnDataTypeOutput)
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return e.ToDataSetColumnDataTypePtrOutputWithContext(context.Background())
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return DataSetColumnDataType(e).ToDataSetColumnDataTypeOutputWithContext(ctx).ToDataSetColumnDataTypePtrOutputWithContext(ctx)
}

func (e DataSetColumnDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetColumnDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetColumnDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetColumnDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetColumnDataTypeOutput struct{ *pulumi.OutputState }

func (DataSetColumnDataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnDataType)(nil)).Elem()
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypeOutput() DataSetColumnDataTypeOutput {
	return o
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypeOutputWithContext(ctx context.Context) DataSetColumnDataTypeOutput {
	return o
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return o.ToDataSetColumnDataTypePtrOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetColumnDataType) *DataSetColumnDataType {
		return &v
	}).(DataSetColumnDataTypePtrOutput)
}

func (o DataSetColumnDataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetColumnDataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetColumnDataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetColumnDataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetColumnDataTypePtrOutput struct{ *pulumi.OutputState }

func (DataSetColumnDataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetColumnDataType)(nil)).Elem()
}

func (o DataSetColumnDataTypePtrOutput) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return o
}

func (o DataSetColumnDataTypePtrOutput) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return o
}

func (o DataSetColumnDataTypePtrOutput) Elem() DataSetColumnDataTypeOutput {
	return o.ApplyT(func(v *DataSetColumnDataType) DataSetColumnDataType {
		if v != nil {
			return *v
		}
		var ret DataSetColumnDataType
		return ret
	}).(DataSetColumnDataTypeOutput)
}

func (o DataSetColumnDataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetColumnDataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetColumnDataTypeInput is an input type that accepts values of the DataSetColumnDataType enum
// A concrete instance of `DataSetColumnDataTypeInput` can be one of the following:
//
//	DataSetColumnDataTypeString
//	DataSetColumnDataTypeInteger
//	DataSetColumnDataTypeDecimal
//	DataSetColumnDataTypeDatetime
type DataSetColumnDataTypeInput interface {
	pulumi.Input

	ToDataSetColumnDataTypeOutput() DataSetColumnDataTypeOutput
	ToDataSetColumnDataTypeOutputWithContext(context.Context) DataSetColumnDataTypeOutput
}

var dataSetColumnDataTypePtrType = reflect.TypeOf((**DataSetColumnDataType)(nil)).Elem()

type DataSetColumnDataTypePtrInput interface {
	pulumi.Input

	ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput
	ToDataSetColumnDataTypePtrOutputWithContext(context.Context) DataSetColumnDataTypePtrOutput
}

type dataSetColumnDataTypePtr string

func DataSetColumnDataTypePtr(v string) DataSetColumnDataTypePtrInput {
	return (*dataSetColumnDataTypePtr)(&v)
}

func (*dataSetColumnDataTypePtr) ElementType() reflect.Type {
	return dataSetColumnDataTypePtrType
}

func (in *dataSetColumnDataTypePtr) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return pulumi.ToOutput(in).(DataSetColumnDataTypePtrOutput)
}

func (in *dataSetColumnDataTypePtr) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetColumnDataTypePtrOutput)
}

type DataSetColumnSubDataType string

const (
	DataSetColumnSubDataTypeFixed = DataSetColumnSubDataType("FIXED")
	DataSetColumnSubDataTypeFloat = DataSetColumnSubDataType("FLOAT")
)

func (DataSetColumnSubDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnSubDataType)(nil)).Elem()
}

func (e DataSetColumnSubDataType) ToDataSetColumnSubDataTypeOutput() DataSetColumnSubDataTypeOutput {
	return pulumi.ToOutput(e).(DataSetColumnSubDataTypeOutput)
}

func (e DataSetColumnSubDataType) ToDataSetColumnSubDataTypeOutputWithContext(ctx context.Context) DataSetColumnSubDataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetColumnSubDataTypeOutput)
}

func (e DataSetColumnSubDataType) ToDataSetColumnSubDataTypePtrOutput() DataSetColumnSubDataTypePtrOutput {
	return e.ToDataSetColumnSubDataTypePtrOutputWithContext(context.Background())
}

func (e DataSetColumnSubDataType) ToDataSetColumnSubDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnSubDataTypePtrOutput {
	return DataSetColumnSubDataType(e).ToDataSetColumnSubDataTypeOutputWithContext(ctx).ToDataSetColumnSubDataTypePtrOutputWithContext(ctx)
}

func (e DataSetColumnSubDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetColumnSubDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetColumnSubDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetColumnSubDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetColumnSubDataTypeOutput struct{ *pulumi.OutputState }

func (DataSetColumnSubDataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnSubDataType)(nil)).Elem()
}

func (o DataSetColumnSubDataTypeOutput) ToDataSetColumnSubDataTypeOutput() DataSetColumnSubDataTypeOutput {
	return o
}

func (o DataSetColumnSubDataTypeOutput) ToDataSetColumnSubDataTypeOutputWithContext(ctx context.Context) DataSetColumnSubDataTypeOutput {
	return o
}

func (o DataSetColumnSubDataTypeOutput) ToDataSetColumnSubDataTypePtrOutput() DataSetColumnSubDataTypePtrOutput {
	return o.ToDataSetColumnSubDataTypePtrOutputWithContext(context.Background())
}

func (o DataSetColumnSubDataTypeOutput) ToDataSetColumnSubDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnSubDataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetColumnSubDataType) *DataSetColumnSubDataType {
		return &v
	}).(DataSetColumnSubDataTypePtrOutput)
}

func (o DataSetColumnSubDataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetColumnSubDataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetColumnSubDataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetColumnSubDataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetColumnSubDataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetColumnSubDataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetColumnSubDataTypePtrOutput struct{ *pulumi.OutputState }

func (DataSetColumnSubDataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetColumnSubDataType)(nil)).Elem()
}

func (o DataSetColumnSubDataTypePtrOutput) ToDataSetColumnSubDataTypePtrOutput() DataSetColumnSubDataTypePtrOutput {
	return o
}

func (o DataSetColumnSubDataTypePtrOutput) ToDataSetColumnSubDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnSubDataTypePtrOutput {
	return o
}

func (o DataSetColumnSubDataTypePtrOutput) Elem() DataSetColumnSubDataTypeOutput {
	return o.ApplyT(func(v *DataSetColumnSubDataType) DataSetColumnSubDataType {
		if v != nil {
			return *v
		}
		var ret DataSetColumnSubDataType
		return ret
	}).(DataSetColumnSubDataTypeOutput)
}

func (o DataSetColumnSubDataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetColumnSubDataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetColumnSubDataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetColumnSubDataTypeInput is an input type that accepts values of the DataSetColumnSubDataType enum
// A concrete instance of `DataSetColumnSubDataTypeInput` can be one of the following:
//
//	DataSetColumnSubDataTypeFixed
//	DataSetColumnSubDataTypeFloat
type DataSetColumnSubDataTypeInput interface {
	pulumi.Input

	ToDataSetColumnSubDataTypeOutput() DataSetColumnSubDataTypeOutput
	ToDataSetColumnSubDataTypeOutputWithContext(context.Context) DataSetColumnSubDataTypeOutput
}

var dataSetColumnSubDataTypePtrType = reflect.TypeOf((**DataSetColumnSubDataType)(nil)).Elem()

type DataSetColumnSubDataTypePtrInput interface {
	pulumi.Input

	ToDataSetColumnSubDataTypePtrOutput() DataSetColumnSubDataTypePtrOutput
	ToDataSetColumnSubDataTypePtrOutputWithContext(context.Context) DataSetColumnSubDataTypePtrOutput
}

type dataSetColumnSubDataTypePtr string

func DataSetColumnSubDataTypePtr(v string) DataSetColumnSubDataTypePtrInput {
	return (*dataSetColumnSubDataTypePtr)(&v)
}

func (*dataSetColumnSubDataTypePtr) ElementType() reflect.Type {
	return dataSetColumnSubDataTypePtrType
}

func (in *dataSetColumnSubDataTypePtr) ToDataSetColumnSubDataTypePtrOutput() DataSetColumnSubDataTypePtrOutput {
	return pulumi.ToOutput(in).(DataSetColumnSubDataTypePtrOutput)
}

func (in *dataSetColumnSubDataTypePtr) ToDataSetColumnSubDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnSubDataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetColumnSubDataTypePtrOutput)
}

// <p>Every parameter value could be either a single value or multi value which helps to validate before evaluation.</p>
type DataSetDatasetParameterValueType string

const (
	DataSetDatasetParameterValueTypeMultiValued  = DataSetDatasetParameterValueType("MULTI_VALUED")
	DataSetDatasetParameterValueTypeSingleValued = DataSetDatasetParameterValueType("SINGLE_VALUED")
)

func (DataSetDatasetParameterValueType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetDatasetParameterValueType)(nil)).Elem()
}

func (e DataSetDatasetParameterValueType) ToDataSetDatasetParameterValueTypeOutput() DataSetDatasetParameterValueTypeOutput {
	return pulumi.ToOutput(e).(DataSetDatasetParameterValueTypeOutput)
}

func (e DataSetDatasetParameterValueType) ToDataSetDatasetParameterValueTypeOutputWithContext(ctx context.Context) DataSetDatasetParameterValueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetDatasetParameterValueTypeOutput)
}

func (e DataSetDatasetParameterValueType) ToDataSetDatasetParameterValueTypePtrOutput() DataSetDatasetParameterValueTypePtrOutput {
	return e.ToDataSetDatasetParameterValueTypePtrOutputWithContext(context.Background())
}

func (e DataSetDatasetParameterValueType) ToDataSetDatasetParameterValueTypePtrOutputWithContext(ctx context.Context) DataSetDatasetParameterValueTypePtrOutput {
	return DataSetDatasetParameterValueType(e).ToDataSetDatasetParameterValueTypeOutputWithContext(ctx).ToDataSetDatasetParameterValueTypePtrOutputWithContext(ctx)
}

func (e DataSetDatasetParameterValueType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetDatasetParameterValueType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetDatasetParameterValueType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetDatasetParameterValueType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetDatasetParameterValueTypeOutput struct{ *pulumi.OutputState }

func (DataSetDatasetParameterValueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetDatasetParameterValueType)(nil)).Elem()
}

func (o DataSetDatasetParameterValueTypeOutput) ToDataSetDatasetParameterValueTypeOutput() DataSetDatasetParameterValueTypeOutput {
	return o
}

func (o DataSetDatasetParameterValueTypeOutput) ToDataSetDatasetParameterValueTypeOutputWithContext(ctx context.Context) DataSetDatasetParameterValueTypeOutput {
	return o
}

func (o DataSetDatasetParameterValueTypeOutput) ToDataSetDatasetParameterValueTypePtrOutput() DataSetDatasetParameterValueTypePtrOutput {
	return o.ToDataSetDatasetParameterValueTypePtrOutputWithContext(context.Background())
}

func (o DataSetDatasetParameterValueTypeOutput) ToDataSetDatasetParameterValueTypePtrOutputWithContext(ctx context.Context) DataSetDatasetParameterValueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetDatasetParameterValueType) *DataSetDatasetParameterValueType {
		return &v
	}).(DataSetDatasetParameterValueTypePtrOutput)
}

func (o DataSetDatasetParameterValueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetDatasetParameterValueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetDatasetParameterValueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetDatasetParameterValueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetDatasetParameterValueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetDatasetParameterValueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetDatasetParameterValueTypePtrOutput struct{ *pulumi.OutputState }

func (DataSetDatasetParameterValueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetDatasetParameterValueType)(nil)).Elem()
}

func (o DataSetDatasetParameterValueTypePtrOutput) ToDataSetDatasetParameterValueTypePtrOutput() DataSetDatasetParameterValueTypePtrOutput {
	return o
}

func (o DataSetDatasetParameterValueTypePtrOutput) ToDataSetDatasetParameterValueTypePtrOutputWithContext(ctx context.Context) DataSetDatasetParameterValueTypePtrOutput {
	return o
}

func (o DataSetDatasetParameterValueTypePtrOutput) Elem() DataSetDatasetParameterValueTypeOutput {
	return o.ApplyT(func(v *DataSetDatasetParameterValueType) DataSetDatasetParameterValueType {
		if v != nil {
			return *v
		}
		var ret DataSetDatasetParameterValueType
		return ret
	}).(DataSetDatasetParameterValueTypeOutput)
}

func (o DataSetDatasetParameterValueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetDatasetParameterValueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetDatasetParameterValueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetDatasetParameterValueTypeInput is an input type that accepts values of the DataSetDatasetParameterValueType enum
// A concrete instance of `DataSetDatasetParameterValueTypeInput` can be one of the following:
//
//	DataSetDatasetParameterValueTypeMultiValued
//	DataSetDatasetParameterValueTypeSingleValued
type DataSetDatasetParameterValueTypeInput interface {
	pulumi.Input

	ToDataSetDatasetParameterValueTypeOutput() DataSetDatasetParameterValueTypeOutput
	ToDataSetDatasetParameterValueTypeOutputWithContext(context.Context) DataSetDatasetParameterValueTypeOutput
}

var dataSetDatasetParameterValueTypePtrType = reflect.TypeOf((**DataSetDatasetParameterValueType)(nil)).Elem()

type DataSetDatasetParameterValueTypePtrInput interface {
	pulumi.Input

	ToDataSetDatasetParameterValueTypePtrOutput() DataSetDatasetParameterValueTypePtrOutput
	ToDataSetDatasetParameterValueTypePtrOutputWithContext(context.Context) DataSetDatasetParameterValueTypePtrOutput
}

type dataSetDatasetParameterValueTypePtr string

func DataSetDatasetParameterValueTypePtr(v string) DataSetDatasetParameterValueTypePtrInput {
	return (*dataSetDatasetParameterValueTypePtr)(&v)
}

func (*dataSetDatasetParameterValueTypePtr) ElementType() reflect.Type {
	return dataSetDatasetParameterValueTypePtrType
}

func (in *dataSetDatasetParameterValueTypePtr) ToDataSetDatasetParameterValueTypePtrOutput() DataSetDatasetParameterValueTypePtrOutput {
	return pulumi.ToOutput(in).(DataSetDatasetParameterValueTypePtrOutput)
}

func (in *dataSetDatasetParameterValueTypePtr) ToDataSetDatasetParameterValueTypePtrOutputWithContext(ctx context.Context) DataSetDatasetParameterValueTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetDatasetParameterValueTypePtrOutput)
}

type DataSetFileFormat string

const (
	DataSetFileFormatCsv  = DataSetFileFormat("CSV")
	DataSetFileFormatTsv  = DataSetFileFormat("TSV")
	DataSetFileFormatClf  = DataSetFileFormat("CLF")
	DataSetFileFormatElf  = DataSetFileFormat("ELF")
	DataSetFileFormatXlsx = DataSetFileFormat("XLSX")
	DataSetFileFormatJson = DataSetFileFormat("JSON")
)

func (DataSetFileFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetFileFormat)(nil)).Elem()
}

func (e DataSetFileFormat) ToDataSetFileFormatOutput() DataSetFileFormatOutput {
	return pulumi.ToOutput(e).(DataSetFileFormatOutput)
}

func (e DataSetFileFormat) ToDataSetFileFormatOutputWithContext(ctx context.Context) DataSetFileFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetFileFormatOutput)
}

func (e DataSetFileFormat) ToDataSetFileFormatPtrOutput() DataSetFileFormatPtrOutput {
	return e.ToDataSetFileFormatPtrOutputWithContext(context.Background())
}

func (e DataSetFileFormat) ToDataSetFileFormatPtrOutputWithContext(ctx context.Context) DataSetFileFormatPtrOutput {
	return DataSetFileFormat(e).ToDataSetFileFormatOutputWithContext(ctx).ToDataSetFileFormatPtrOutputWithContext(ctx)
}

func (e DataSetFileFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetFileFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetFileFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetFileFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetFileFormatOutput struct{ *pulumi.OutputState }

func (DataSetFileFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetFileFormat)(nil)).Elem()
}

func (o DataSetFileFormatOutput) ToDataSetFileFormatOutput() DataSetFileFormatOutput {
	return o
}

func (o DataSetFileFormatOutput) ToDataSetFileFormatOutputWithContext(ctx context.Context) DataSetFileFormatOutput {
	return o
}

func (o DataSetFileFormatOutput) ToDataSetFileFormatPtrOutput() DataSetFileFormatPtrOutput {
	return o.ToDataSetFileFormatPtrOutputWithContext(context.Background())
}

func (o DataSetFileFormatOutput) ToDataSetFileFormatPtrOutputWithContext(ctx context.Context) DataSetFileFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetFileFormat) *DataSetFileFormat {
		return &v
	}).(DataSetFileFormatPtrOutput)
}

func (o DataSetFileFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetFileFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetFileFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetFileFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetFileFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetFileFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetFileFormatPtrOutput struct{ *pulumi.OutputState }

func (DataSetFileFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetFileFormat)(nil)).Elem()
}

func (o DataSetFileFormatPtrOutput) ToDataSetFileFormatPtrOutput() DataSetFileFormatPtrOutput {
	return o
}

func (o DataSetFileFormatPtrOutput) ToDataSetFileFormatPtrOutputWithContext(ctx context.Context) DataSetFileFormatPtrOutput {
	return o
}

func (o DataSetFileFormatPtrOutput) Elem() DataSetFileFormatOutput {
	return o.ApplyT(func(v *DataSetFileFormat) DataSetFileFormat {
		if v != nil {
			return *v
		}
		var ret DataSetFileFormat
		return ret
	}).(DataSetFileFormatOutput)
}

func (o DataSetFileFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetFileFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetFileFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetFileFormatInput is an input type that accepts values of the DataSetFileFormat enum
// A concrete instance of `DataSetFileFormatInput` can be one of the following:
//
//	DataSetFileFormatCsv
//	DataSetFileFormatTsv
//	DataSetFileFormatClf
//	DataSetFileFormatElf
//	DataSetFileFormatXlsx
//	DataSetFileFormatJson
type DataSetFileFormatInput interface {
	pulumi.Input

	ToDataSetFileFormatOutput() DataSetFileFormatOutput
	ToDataSetFileFormatOutputWithContext(context.Context) DataSetFileFormatOutput
}

var dataSetFileFormatPtrType = reflect.TypeOf((**DataSetFileFormat)(nil)).Elem()

type DataSetFileFormatPtrInput interface {
	pulumi.Input

	ToDataSetFileFormatPtrOutput() DataSetFileFormatPtrOutput
	ToDataSetFileFormatPtrOutputWithContext(context.Context) DataSetFileFormatPtrOutput
}

type dataSetFileFormatPtr string

func DataSetFileFormatPtr(v string) DataSetFileFormatPtrInput {
	return (*dataSetFileFormatPtr)(&v)
}

func (*dataSetFileFormatPtr) ElementType() reflect.Type {
	return dataSetFileFormatPtrType
}

func (in *dataSetFileFormatPtr) ToDataSetFileFormatPtrOutput() DataSetFileFormatPtrOutput {
	return pulumi.ToOutput(in).(DataSetFileFormatPtrOutput)
}

func (in *dataSetFileFormatPtr) ToDataSetFileFormatPtrOutputWithContext(ctx context.Context) DataSetFileFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetFileFormatPtrOutput)
}

type DataSetGeoSpatialCountryCode string

const (
	DataSetGeoSpatialCountryCodeUs = DataSetGeoSpatialCountryCode("US")
)

func (DataSetGeoSpatialCountryCode) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialCountryCode)(nil)).Elem()
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodeOutput() DataSetGeoSpatialCountryCodeOutput {
	return pulumi.ToOutput(e).(DataSetGeoSpatialCountryCodeOutput)
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodeOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetGeoSpatialCountryCodeOutput)
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return e.ToDataSetGeoSpatialCountryCodePtrOutputWithContext(context.Background())
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return DataSetGeoSpatialCountryCode(e).ToDataSetGeoSpatialCountryCodeOutputWithContext(ctx).ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx)
}

func (e DataSetGeoSpatialCountryCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetGeoSpatialCountryCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetGeoSpatialCountryCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetGeoSpatialCountryCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetGeoSpatialCountryCodeOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialCountryCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialCountryCode)(nil)).Elem()
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodeOutput() DataSetGeoSpatialCountryCodeOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodeOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodeOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return o.ToDataSetGeoSpatialCountryCodePtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetGeoSpatialCountryCode) *DataSetGeoSpatialCountryCode {
		return &v
	}).(DataSetGeoSpatialCountryCodePtrOutput)
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetGeoSpatialCountryCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetGeoSpatialCountryCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetGeoSpatialCountryCodePtrOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialCountryCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetGeoSpatialCountryCode)(nil)).Elem()
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodePtrOutput) Elem() DataSetGeoSpatialCountryCodeOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialCountryCode) DataSetGeoSpatialCountryCode {
		if v != nil {
			return *v
		}
		var ret DataSetGeoSpatialCountryCode
		return ret
	}).(DataSetGeoSpatialCountryCodeOutput)
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetGeoSpatialCountryCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetGeoSpatialCountryCodeInput is an input type that accepts values of the DataSetGeoSpatialCountryCode enum
// A concrete instance of `DataSetGeoSpatialCountryCodeInput` can be one of the following:
//
//	DataSetGeoSpatialCountryCodeUs
type DataSetGeoSpatialCountryCodeInput interface {
	pulumi.Input

	ToDataSetGeoSpatialCountryCodeOutput() DataSetGeoSpatialCountryCodeOutput
	ToDataSetGeoSpatialCountryCodeOutputWithContext(context.Context) DataSetGeoSpatialCountryCodeOutput
}

var dataSetGeoSpatialCountryCodePtrType = reflect.TypeOf((**DataSetGeoSpatialCountryCode)(nil)).Elem()

type DataSetGeoSpatialCountryCodePtrInput interface {
	pulumi.Input

	ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput
	ToDataSetGeoSpatialCountryCodePtrOutputWithContext(context.Context) DataSetGeoSpatialCountryCodePtrOutput
}

type dataSetGeoSpatialCountryCodePtr string

func DataSetGeoSpatialCountryCodePtr(v string) DataSetGeoSpatialCountryCodePtrInput {
	return (*dataSetGeoSpatialCountryCodePtr)(&v)
}

func (*dataSetGeoSpatialCountryCodePtr) ElementType() reflect.Type {
	return dataSetGeoSpatialCountryCodePtrType
}

func (in *dataSetGeoSpatialCountryCodePtr) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return pulumi.ToOutput(in).(DataSetGeoSpatialCountryCodePtrOutput)
}

func (in *dataSetGeoSpatialCountryCodePtr) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetGeoSpatialCountryCodePtrOutput)
}

type DataSetGeoSpatialDataRole string

const (
	DataSetGeoSpatialDataRoleCountry    = DataSetGeoSpatialDataRole("COUNTRY")
	DataSetGeoSpatialDataRoleState      = DataSetGeoSpatialDataRole("STATE")
	DataSetGeoSpatialDataRoleCounty     = DataSetGeoSpatialDataRole("COUNTY")
	DataSetGeoSpatialDataRoleCity       = DataSetGeoSpatialDataRole("CITY")
	DataSetGeoSpatialDataRolePostcode   = DataSetGeoSpatialDataRole("POSTCODE")
	DataSetGeoSpatialDataRoleLongitude  = DataSetGeoSpatialDataRole("LONGITUDE")
	DataSetGeoSpatialDataRoleLatitude   = DataSetGeoSpatialDataRole("LATITUDE")
	DataSetGeoSpatialDataRolePolitical1 = DataSetGeoSpatialDataRole("POLITICAL1")
)

func (DataSetGeoSpatialDataRole) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialDataRole)(nil)).Elem()
}

func (e DataSetGeoSpatialDataRole) ToDataSetGeoSpatialDataRoleOutput() DataSetGeoSpatialDataRoleOutput {
	return pulumi.ToOutput(e).(DataSetGeoSpatialDataRoleOutput)
}

func (e DataSetGeoSpatialDataRole) ToDataSetGeoSpatialDataRoleOutputWithContext(ctx context.Context) DataSetGeoSpatialDataRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetGeoSpatialDataRoleOutput)
}

func (e DataSetGeoSpatialDataRole) ToDataSetGeoSpatialDataRolePtrOutput() DataSetGeoSpatialDataRolePtrOutput {
	return e.ToDataSetGeoSpatialDataRolePtrOutputWithContext(context.Background())
}

func (e DataSetGeoSpatialDataRole) ToDataSetGeoSpatialDataRolePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialDataRolePtrOutput {
	return DataSetGeoSpatialDataRole(e).ToDataSetGeoSpatialDataRoleOutputWithContext(ctx).ToDataSetGeoSpatialDataRolePtrOutputWithContext(ctx)
}

func (e DataSetGeoSpatialDataRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetGeoSpatialDataRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetGeoSpatialDataRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetGeoSpatialDataRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetGeoSpatialDataRoleOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialDataRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialDataRole)(nil)).Elem()
}

func (o DataSetGeoSpatialDataRoleOutput) ToDataSetGeoSpatialDataRoleOutput() DataSetGeoSpatialDataRoleOutput {
	return o
}

func (o DataSetGeoSpatialDataRoleOutput) ToDataSetGeoSpatialDataRoleOutputWithContext(ctx context.Context) DataSetGeoSpatialDataRoleOutput {
	return o
}

func (o DataSetGeoSpatialDataRoleOutput) ToDataSetGeoSpatialDataRolePtrOutput() DataSetGeoSpatialDataRolePtrOutput {
	return o.ToDataSetGeoSpatialDataRolePtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialDataRoleOutput) ToDataSetGeoSpatialDataRolePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialDataRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetGeoSpatialDataRole) *DataSetGeoSpatialDataRole {
		return &v
	}).(DataSetGeoSpatialDataRolePtrOutput)
}

func (o DataSetGeoSpatialDataRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialDataRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetGeoSpatialDataRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetGeoSpatialDataRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialDataRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetGeoSpatialDataRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetGeoSpatialDataRolePtrOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialDataRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetGeoSpatialDataRole)(nil)).Elem()
}

func (o DataSetGeoSpatialDataRolePtrOutput) ToDataSetGeoSpatialDataRolePtrOutput() DataSetGeoSpatialDataRolePtrOutput {
	return o
}

func (o DataSetGeoSpatialDataRolePtrOutput) ToDataSetGeoSpatialDataRolePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialDataRolePtrOutput {
	return o
}

func (o DataSetGeoSpatialDataRolePtrOutput) Elem() DataSetGeoSpatialDataRoleOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialDataRole) DataSetGeoSpatialDataRole {
		if v != nil {
			return *v
		}
		var ret DataSetGeoSpatialDataRole
		return ret
	}).(DataSetGeoSpatialDataRoleOutput)
}

func (o DataSetGeoSpatialDataRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialDataRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetGeoSpatialDataRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetGeoSpatialDataRoleInput is an input type that accepts values of the DataSetGeoSpatialDataRole enum
// A concrete instance of `DataSetGeoSpatialDataRoleInput` can be one of the following:
//
//	DataSetGeoSpatialDataRoleCountry
//	DataSetGeoSpatialDataRoleState
//	DataSetGeoSpatialDataRoleCounty
//	DataSetGeoSpatialDataRoleCity
//	DataSetGeoSpatialDataRolePostcode
//	DataSetGeoSpatialDataRoleLongitude
//	DataSetGeoSpatialDataRoleLatitude
//	DataSetGeoSpatialDataRolePolitical1
type DataSetGeoSpatialDataRoleInput interface {
	pulumi.Input

	ToDataSetGeoSpatialDataRoleOutput() DataSetGeoSpatialDataRoleOutput
	ToDataSetGeoSpatialDataRoleOutputWithContext(context.Context) DataSetGeoSpatialDataRoleOutput
}

var dataSetGeoSpatialDataRolePtrType = reflect.TypeOf((**DataSetGeoSpatialDataRole)(nil)).Elem()

type DataSetGeoSpatialDataRolePtrInput interface {
	pulumi.Input

	ToDataSetGeoSpatialDataRolePtrOutput() DataSetGeoSpatialDataRolePtrOutput
	ToDataSetGeoSpatialDataRolePtrOutputWithContext(context.Context) DataSetGeoSpatialDataRolePtrOutput
}

type dataSetGeoSpatialDataRolePtr string

func DataSetGeoSpatialDataRolePtr(v string) DataSetGeoSpatialDataRolePtrInput {
	return (*dataSetGeoSpatialDataRolePtr)(&v)
}

func (*dataSetGeoSpatialDataRolePtr) ElementType() reflect.Type {
	return dataSetGeoSpatialDataRolePtrType
}

func (in *dataSetGeoSpatialDataRolePtr) ToDataSetGeoSpatialDataRolePtrOutput() DataSetGeoSpatialDataRolePtrOutput {
	return pulumi.ToOutput(in).(DataSetGeoSpatialDataRolePtrOutput)
}

func (in *dataSetGeoSpatialDataRolePtr) ToDataSetGeoSpatialDataRolePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialDataRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetGeoSpatialDataRolePtrOutput)
}

type DataSetImportMode string

const (
	DataSetImportModeSpice       = DataSetImportMode("SPICE")
	DataSetImportModeDirectQuery = DataSetImportMode("DIRECT_QUERY")
)

func (DataSetImportMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetImportMode)(nil)).Elem()
}

func (e DataSetImportMode) ToDataSetImportModeOutput() DataSetImportModeOutput {
	return pulumi.ToOutput(e).(DataSetImportModeOutput)
}

func (e DataSetImportMode) ToDataSetImportModeOutputWithContext(ctx context.Context) DataSetImportModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetImportModeOutput)
}

func (e DataSetImportMode) ToDataSetImportModePtrOutput() DataSetImportModePtrOutput {
	return e.ToDataSetImportModePtrOutputWithContext(context.Background())
}

func (e DataSetImportMode) ToDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetImportModePtrOutput {
	return DataSetImportMode(e).ToDataSetImportModeOutputWithContext(ctx).ToDataSetImportModePtrOutputWithContext(ctx)
}

func (e DataSetImportMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetImportMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetImportMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetImportMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetImportModeOutput struct{ *pulumi.OutputState }

func (DataSetImportModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetImportMode)(nil)).Elem()
}

func (o DataSetImportModeOutput) ToDataSetImportModeOutput() DataSetImportModeOutput {
	return o
}

func (o DataSetImportModeOutput) ToDataSetImportModeOutputWithContext(ctx context.Context) DataSetImportModeOutput {
	return o
}

func (o DataSetImportModeOutput) ToDataSetImportModePtrOutput() DataSetImportModePtrOutput {
	return o.ToDataSetImportModePtrOutputWithContext(context.Background())
}

func (o DataSetImportModeOutput) ToDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetImportModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetImportMode) *DataSetImportMode {
		return &v
	}).(DataSetImportModePtrOutput)
}

func (o DataSetImportModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetImportModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetImportMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetImportModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetImportModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetImportMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetImportModePtrOutput struct{ *pulumi.OutputState }

func (DataSetImportModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetImportMode)(nil)).Elem()
}

func (o DataSetImportModePtrOutput) ToDataSetImportModePtrOutput() DataSetImportModePtrOutput {
	return o
}

func (o DataSetImportModePtrOutput) ToDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetImportModePtrOutput {
	return o
}

func (o DataSetImportModePtrOutput) Elem() DataSetImportModeOutput {
	return o.ApplyT(func(v *DataSetImportMode) DataSetImportMode {
		if v != nil {
			return *v
		}
		var ret DataSetImportMode
		return ret
	}).(DataSetImportModeOutput)
}

func (o DataSetImportModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetImportModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetImportMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetImportModeInput is an input type that accepts values of the DataSetImportMode enum
// A concrete instance of `DataSetImportModeInput` can be one of the following:
//
//	DataSetImportModeSpice
//	DataSetImportModeDirectQuery
type DataSetImportModeInput interface {
	pulumi.Input

	ToDataSetImportModeOutput() DataSetImportModeOutput
	ToDataSetImportModeOutputWithContext(context.Context) DataSetImportModeOutput
}

var dataSetImportModePtrType = reflect.TypeOf((**DataSetImportMode)(nil)).Elem()

type DataSetImportModePtrInput interface {
	pulumi.Input

	ToDataSetImportModePtrOutput() DataSetImportModePtrOutput
	ToDataSetImportModePtrOutputWithContext(context.Context) DataSetImportModePtrOutput
}

type dataSetImportModePtr string

func DataSetImportModePtr(v string) DataSetImportModePtrInput {
	return (*dataSetImportModePtr)(&v)
}

func (*dataSetImportModePtr) ElementType() reflect.Type {
	return dataSetImportModePtrType
}

func (in *dataSetImportModePtr) ToDataSetImportModePtrOutput() DataSetImportModePtrOutput {
	return pulumi.ToOutput(in).(DataSetImportModePtrOutput)
}

func (in *dataSetImportModePtr) ToDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetImportModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetImportModePtrOutput)
}

type DataSetInputColumnDataType string

const (
	DataSetInputColumnDataTypeString   = DataSetInputColumnDataType("STRING")
	DataSetInputColumnDataTypeInteger  = DataSetInputColumnDataType("INTEGER")
	DataSetInputColumnDataTypeDecimal  = DataSetInputColumnDataType("DECIMAL")
	DataSetInputColumnDataTypeDatetime = DataSetInputColumnDataType("DATETIME")
	DataSetInputColumnDataTypeBit      = DataSetInputColumnDataType("BIT")
	DataSetInputColumnDataTypeBoolean  = DataSetInputColumnDataType("BOOLEAN")
	DataSetInputColumnDataTypeJson     = DataSetInputColumnDataType("JSON")
)

func (DataSetInputColumnDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetInputColumnDataType)(nil)).Elem()
}

func (e DataSetInputColumnDataType) ToDataSetInputColumnDataTypeOutput() DataSetInputColumnDataTypeOutput {
	return pulumi.ToOutput(e).(DataSetInputColumnDataTypeOutput)
}

func (e DataSetInputColumnDataType) ToDataSetInputColumnDataTypeOutputWithContext(ctx context.Context) DataSetInputColumnDataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetInputColumnDataTypeOutput)
}

func (e DataSetInputColumnDataType) ToDataSetInputColumnDataTypePtrOutput() DataSetInputColumnDataTypePtrOutput {
	return e.ToDataSetInputColumnDataTypePtrOutputWithContext(context.Background())
}

func (e DataSetInputColumnDataType) ToDataSetInputColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetInputColumnDataTypePtrOutput {
	return DataSetInputColumnDataType(e).ToDataSetInputColumnDataTypeOutputWithContext(ctx).ToDataSetInputColumnDataTypePtrOutputWithContext(ctx)
}

func (e DataSetInputColumnDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetInputColumnDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetInputColumnDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetInputColumnDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetInputColumnDataTypeOutput struct{ *pulumi.OutputState }

func (DataSetInputColumnDataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetInputColumnDataType)(nil)).Elem()
}

func (o DataSetInputColumnDataTypeOutput) ToDataSetInputColumnDataTypeOutput() DataSetInputColumnDataTypeOutput {
	return o
}

func (o DataSetInputColumnDataTypeOutput) ToDataSetInputColumnDataTypeOutputWithContext(ctx context.Context) DataSetInputColumnDataTypeOutput {
	return o
}

func (o DataSetInputColumnDataTypeOutput) ToDataSetInputColumnDataTypePtrOutput() DataSetInputColumnDataTypePtrOutput {
	return o.ToDataSetInputColumnDataTypePtrOutputWithContext(context.Background())
}

func (o DataSetInputColumnDataTypeOutput) ToDataSetInputColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetInputColumnDataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetInputColumnDataType) *DataSetInputColumnDataType {
		return &v
	}).(DataSetInputColumnDataTypePtrOutput)
}

func (o DataSetInputColumnDataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetInputColumnDataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetInputColumnDataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetInputColumnDataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetInputColumnDataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetInputColumnDataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetInputColumnDataTypePtrOutput struct{ *pulumi.OutputState }

func (DataSetInputColumnDataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetInputColumnDataType)(nil)).Elem()
}

func (o DataSetInputColumnDataTypePtrOutput) ToDataSetInputColumnDataTypePtrOutput() DataSetInputColumnDataTypePtrOutput {
	return o
}

func (o DataSetInputColumnDataTypePtrOutput) ToDataSetInputColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetInputColumnDataTypePtrOutput {
	return o
}

func (o DataSetInputColumnDataTypePtrOutput) Elem() DataSetInputColumnDataTypeOutput {
	return o.ApplyT(func(v *DataSetInputColumnDataType) DataSetInputColumnDataType {
		if v != nil {
			return *v
		}
		var ret DataSetInputColumnDataType
		return ret
	}).(DataSetInputColumnDataTypeOutput)
}

func (o DataSetInputColumnDataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetInputColumnDataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetInputColumnDataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetInputColumnDataTypeInput is an input type that accepts values of the DataSetInputColumnDataType enum
// A concrete instance of `DataSetInputColumnDataTypeInput` can be one of the following:
//
//	DataSetInputColumnDataTypeString
//	DataSetInputColumnDataTypeInteger
//	DataSetInputColumnDataTypeDecimal
//	DataSetInputColumnDataTypeDatetime
//	DataSetInputColumnDataTypeBit
//	DataSetInputColumnDataTypeBoolean
//	DataSetInputColumnDataTypeJson
type DataSetInputColumnDataTypeInput interface {
	pulumi.Input

	ToDataSetInputColumnDataTypeOutput() DataSetInputColumnDataTypeOutput
	ToDataSetInputColumnDataTypeOutputWithContext(context.Context) DataSetInputColumnDataTypeOutput
}

var dataSetInputColumnDataTypePtrType = reflect.TypeOf((**DataSetInputColumnDataType)(nil)).Elem()

type DataSetInputColumnDataTypePtrInput interface {
	pulumi.Input

	ToDataSetInputColumnDataTypePtrOutput() DataSetInputColumnDataTypePtrOutput
	ToDataSetInputColumnDataTypePtrOutputWithContext(context.Context) DataSetInputColumnDataTypePtrOutput
}

type dataSetInputColumnDataTypePtr string

func DataSetInputColumnDataTypePtr(v string) DataSetInputColumnDataTypePtrInput {
	return (*dataSetInputColumnDataTypePtr)(&v)
}

func (*dataSetInputColumnDataTypePtr) ElementType() reflect.Type {
	return dataSetInputColumnDataTypePtrType
}

func (in *dataSetInputColumnDataTypePtr) ToDataSetInputColumnDataTypePtrOutput() DataSetInputColumnDataTypePtrOutput {
	return pulumi.ToOutput(in).(DataSetInputColumnDataTypePtrOutput)
}

func (in *dataSetInputColumnDataTypePtr) ToDataSetInputColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetInputColumnDataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetInputColumnDataTypePtrOutput)
}

type DataSetJoinType string

const (
	DataSetJoinTypeInner = DataSetJoinType("INNER")
	DataSetJoinTypeOuter = DataSetJoinType("OUTER")
	DataSetJoinTypeLeft  = DataSetJoinType("LEFT")
	DataSetJoinTypeRight = DataSetJoinType("RIGHT")
)

func (DataSetJoinType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetJoinType)(nil)).Elem()
}

func (e DataSetJoinType) ToDataSetJoinTypeOutput() DataSetJoinTypeOutput {
	return pulumi.ToOutput(e).(DataSetJoinTypeOutput)
}

func (e DataSetJoinType) ToDataSetJoinTypeOutputWithContext(ctx context.Context) DataSetJoinTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetJoinTypeOutput)
}

func (e DataSetJoinType) ToDataSetJoinTypePtrOutput() DataSetJoinTypePtrOutput {
	return e.ToDataSetJoinTypePtrOutputWithContext(context.Background())
}

func (e DataSetJoinType) ToDataSetJoinTypePtrOutputWithContext(ctx context.Context) DataSetJoinTypePtrOutput {
	return DataSetJoinType(e).ToDataSetJoinTypeOutputWithContext(ctx).ToDataSetJoinTypePtrOutputWithContext(ctx)
}

func (e DataSetJoinType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetJoinType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetJoinType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetJoinType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetJoinTypeOutput struct{ *pulumi.OutputState }

func (DataSetJoinTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetJoinType)(nil)).Elem()
}

func (o DataSetJoinTypeOutput) ToDataSetJoinTypeOutput() DataSetJoinTypeOutput {
	return o
}

func (o DataSetJoinTypeOutput) ToDataSetJoinTypeOutputWithContext(ctx context.Context) DataSetJoinTypeOutput {
	return o
}

func (o DataSetJoinTypeOutput) ToDataSetJoinTypePtrOutput() DataSetJoinTypePtrOutput {
	return o.ToDataSetJoinTypePtrOutputWithContext(context.Background())
}

func (o DataSetJoinTypeOutput) ToDataSetJoinTypePtrOutputWithContext(ctx context.Context) DataSetJoinTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetJoinType) *DataSetJoinType {
		return &v
	}).(DataSetJoinTypePtrOutput)
}

func (o DataSetJoinTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetJoinTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetJoinType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetJoinTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetJoinTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetJoinType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetJoinTypePtrOutput struct{ *pulumi.OutputState }

func (DataSetJoinTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetJoinType)(nil)).Elem()
}

func (o DataSetJoinTypePtrOutput) ToDataSetJoinTypePtrOutput() DataSetJoinTypePtrOutput {
	return o
}

func (o DataSetJoinTypePtrOutput) ToDataSetJoinTypePtrOutputWithContext(ctx context.Context) DataSetJoinTypePtrOutput {
	return o
}

func (o DataSetJoinTypePtrOutput) Elem() DataSetJoinTypeOutput {
	return o.ApplyT(func(v *DataSetJoinType) DataSetJoinType {
		if v != nil {
			return *v
		}
		var ret DataSetJoinType
		return ret
	}).(DataSetJoinTypeOutput)
}

func (o DataSetJoinTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetJoinTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetJoinType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetJoinTypeInput is an input type that accepts values of the DataSetJoinType enum
// A concrete instance of `DataSetJoinTypeInput` can be one of the following:
//
//	DataSetJoinTypeInner
//	DataSetJoinTypeOuter
//	DataSetJoinTypeLeft
//	DataSetJoinTypeRight
type DataSetJoinTypeInput interface {
	pulumi.Input

	ToDataSetJoinTypeOutput() DataSetJoinTypeOutput
	ToDataSetJoinTypeOutputWithContext(context.Context) DataSetJoinTypeOutput
}

var dataSetJoinTypePtrType = reflect.TypeOf((**DataSetJoinType)(nil)).Elem()

type DataSetJoinTypePtrInput interface {
	pulumi.Input

	ToDataSetJoinTypePtrOutput() DataSetJoinTypePtrOutput
	ToDataSetJoinTypePtrOutputWithContext(context.Context) DataSetJoinTypePtrOutput
}

type dataSetJoinTypePtr string

func DataSetJoinTypePtr(v string) DataSetJoinTypePtrInput {
	return (*dataSetJoinTypePtr)(&v)
}

func (*dataSetJoinTypePtr) ElementType() reflect.Type {
	return dataSetJoinTypePtrType
}

func (in *dataSetJoinTypePtr) ToDataSetJoinTypePtrOutput() DataSetJoinTypePtrOutput {
	return pulumi.ToOutput(in).(DataSetJoinTypePtrOutput)
}

func (in *dataSetJoinTypePtr) ToDataSetJoinTypePtrOutputWithContext(ctx context.Context) DataSetJoinTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetJoinTypePtrOutput)
}

type DataSetRowLevelPermissionFormatVersion string

const (
	DataSetRowLevelPermissionFormatVersionVersion1 = DataSetRowLevelPermissionFormatVersion("VERSION_1")
	DataSetRowLevelPermissionFormatVersionVersion2 = DataSetRowLevelPermissionFormatVersion("VERSION_2")
)

func (DataSetRowLevelPermissionFormatVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionFormatVersion)(nil)).Elem()
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionOutput() DataSetRowLevelPermissionFormatVersionOutput {
	return pulumi.ToOutput(e).(DataSetRowLevelPermissionFormatVersionOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetRowLevelPermissionFormatVersionOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return e.ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return DataSetRowLevelPermissionFormatVersion(e).ToDataSetRowLevelPermissionFormatVersionOutputWithContext(ctx).ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx)
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetRowLevelPermissionFormatVersionOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionFormatVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionFormatVersion)(nil)).Elem()
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionOutput() DataSetRowLevelPermissionFormatVersionOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o.ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRowLevelPermissionFormatVersion) *DataSetRowLevelPermissionFormatVersion {
		return &v
	}).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionFormatVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionFormatVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetRowLevelPermissionFormatVersionPtrOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionFormatVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionFormatVersion)(nil)).Elem()
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) Elem() DataSetRowLevelPermissionFormatVersionOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionFormatVersion) DataSetRowLevelPermissionFormatVersion {
		if v != nil {
			return *v
		}
		var ret DataSetRowLevelPermissionFormatVersion
		return ret
	}).(DataSetRowLevelPermissionFormatVersionOutput)
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetRowLevelPermissionFormatVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetRowLevelPermissionFormatVersionInput is an input type that accepts values of the DataSetRowLevelPermissionFormatVersion enum
// A concrete instance of `DataSetRowLevelPermissionFormatVersionInput` can be one of the following:
//
//	DataSetRowLevelPermissionFormatVersionVersion1
//	DataSetRowLevelPermissionFormatVersionVersion2
type DataSetRowLevelPermissionFormatVersionInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionFormatVersionOutput() DataSetRowLevelPermissionFormatVersionOutput
	ToDataSetRowLevelPermissionFormatVersionOutputWithContext(context.Context) DataSetRowLevelPermissionFormatVersionOutput
}

var dataSetRowLevelPermissionFormatVersionPtrType = reflect.TypeOf((**DataSetRowLevelPermissionFormatVersion)(nil)).Elem()

type DataSetRowLevelPermissionFormatVersionPtrInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput
	ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput
}

type dataSetRowLevelPermissionFormatVersionPtr string

func DataSetRowLevelPermissionFormatVersionPtr(v string) DataSetRowLevelPermissionFormatVersionPtrInput {
	return (*dataSetRowLevelPermissionFormatVersionPtr)(&v)
}

func (*dataSetRowLevelPermissionFormatVersionPtr) ElementType() reflect.Type {
	return dataSetRowLevelPermissionFormatVersionPtrType
}

func (in *dataSetRowLevelPermissionFormatVersionPtr) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return pulumi.ToOutput(in).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

func (in *dataSetRowLevelPermissionFormatVersionPtr) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

type DataSetRowLevelPermissionPolicy string

const (
	DataSetRowLevelPermissionPolicyGrantAccess = DataSetRowLevelPermissionPolicy("GRANT_ACCESS")
	DataSetRowLevelPermissionPolicyDenyAccess  = DataSetRowLevelPermissionPolicy("DENY_ACCESS")
)

func (DataSetRowLevelPermissionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionPolicy)(nil)).Elem()
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyOutput() DataSetRowLevelPermissionPolicyOutput {
	return pulumi.ToOutput(e).(DataSetRowLevelPermissionPolicyOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetRowLevelPermissionPolicyOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return e.ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return DataSetRowLevelPermissionPolicy(e).ToDataSetRowLevelPermissionPolicyOutputWithContext(ctx).ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx)
}

func (e DataSetRowLevelPermissionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetRowLevelPermissionPolicyOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionPolicy)(nil)).Elem()
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyOutput() DataSetRowLevelPermissionPolicyOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return o.ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRowLevelPermissionPolicy) *DataSetRowLevelPermissionPolicy {
		return &v
	}).(DataSetRowLevelPermissionPolicyPtrOutput)
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetRowLevelPermissionPolicyPtrOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionPolicy)(nil)).Elem()
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) Elem() DataSetRowLevelPermissionPolicyOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionPolicy) DataSetRowLevelPermissionPolicy {
		if v != nil {
			return *v
		}
		var ret DataSetRowLevelPermissionPolicy
		return ret
	}).(DataSetRowLevelPermissionPolicyOutput)
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetRowLevelPermissionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetRowLevelPermissionPolicyInput is an input type that accepts values of the DataSetRowLevelPermissionPolicy enum
// A concrete instance of `DataSetRowLevelPermissionPolicyInput` can be one of the following:
//
//	DataSetRowLevelPermissionPolicyGrantAccess
//	DataSetRowLevelPermissionPolicyDenyAccess
type DataSetRowLevelPermissionPolicyInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionPolicyOutput() DataSetRowLevelPermissionPolicyOutput
	ToDataSetRowLevelPermissionPolicyOutputWithContext(context.Context) DataSetRowLevelPermissionPolicyOutput
}

var dataSetRowLevelPermissionPolicyPtrType = reflect.TypeOf((**DataSetRowLevelPermissionPolicy)(nil)).Elem()

type DataSetRowLevelPermissionPolicyPtrInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput
	ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(context.Context) DataSetRowLevelPermissionPolicyPtrOutput
}

type dataSetRowLevelPermissionPolicyPtr string

func DataSetRowLevelPermissionPolicyPtr(v string) DataSetRowLevelPermissionPolicyPtrInput {
	return (*dataSetRowLevelPermissionPolicyPtr)(&v)
}

func (*dataSetRowLevelPermissionPolicyPtr) ElementType() reflect.Type {
	return dataSetRowLevelPermissionPolicyPtrType
}

func (in *dataSetRowLevelPermissionPolicyPtr) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return pulumi.ToOutput(in).(DataSetRowLevelPermissionPolicyPtrOutput)
}

func (in *dataSetRowLevelPermissionPolicyPtr) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetRowLevelPermissionPolicyPtrOutput)
}

type DataSetSizeUnit string

const (
	DataSetSizeUnitHour = DataSetSizeUnit("HOUR")
	DataSetSizeUnitDay  = DataSetSizeUnit("DAY")
	DataSetSizeUnitWeek = DataSetSizeUnit("WEEK")
)

func (DataSetSizeUnit) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetSizeUnit)(nil)).Elem()
}

func (e DataSetSizeUnit) ToDataSetSizeUnitOutput() DataSetSizeUnitOutput {
	return pulumi.ToOutput(e).(DataSetSizeUnitOutput)
}

func (e DataSetSizeUnit) ToDataSetSizeUnitOutputWithContext(ctx context.Context) DataSetSizeUnitOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetSizeUnitOutput)
}

func (e DataSetSizeUnit) ToDataSetSizeUnitPtrOutput() DataSetSizeUnitPtrOutput {
	return e.ToDataSetSizeUnitPtrOutputWithContext(context.Background())
}

func (e DataSetSizeUnit) ToDataSetSizeUnitPtrOutputWithContext(ctx context.Context) DataSetSizeUnitPtrOutput {
	return DataSetSizeUnit(e).ToDataSetSizeUnitOutputWithContext(ctx).ToDataSetSizeUnitPtrOutputWithContext(ctx)
}

func (e DataSetSizeUnit) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetSizeUnit) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetSizeUnit) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetSizeUnit) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetSizeUnitOutput struct{ *pulumi.OutputState }

func (DataSetSizeUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetSizeUnit)(nil)).Elem()
}

func (o DataSetSizeUnitOutput) ToDataSetSizeUnitOutput() DataSetSizeUnitOutput {
	return o
}

func (o DataSetSizeUnitOutput) ToDataSetSizeUnitOutputWithContext(ctx context.Context) DataSetSizeUnitOutput {
	return o
}

func (o DataSetSizeUnitOutput) ToDataSetSizeUnitPtrOutput() DataSetSizeUnitPtrOutput {
	return o.ToDataSetSizeUnitPtrOutputWithContext(context.Background())
}

func (o DataSetSizeUnitOutput) ToDataSetSizeUnitPtrOutputWithContext(ctx context.Context) DataSetSizeUnitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetSizeUnit) *DataSetSizeUnit {
		return &v
	}).(DataSetSizeUnitPtrOutput)
}

func (o DataSetSizeUnitOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetSizeUnitOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetSizeUnit) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetSizeUnitOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetSizeUnitOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetSizeUnit) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetSizeUnitPtrOutput struct{ *pulumi.OutputState }

func (DataSetSizeUnitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetSizeUnit)(nil)).Elem()
}

func (o DataSetSizeUnitPtrOutput) ToDataSetSizeUnitPtrOutput() DataSetSizeUnitPtrOutput {
	return o
}

func (o DataSetSizeUnitPtrOutput) ToDataSetSizeUnitPtrOutputWithContext(ctx context.Context) DataSetSizeUnitPtrOutput {
	return o
}

func (o DataSetSizeUnitPtrOutput) Elem() DataSetSizeUnitOutput {
	return o.ApplyT(func(v *DataSetSizeUnit) DataSetSizeUnit {
		if v != nil {
			return *v
		}
		var ret DataSetSizeUnit
		return ret
	}).(DataSetSizeUnitOutput)
}

func (o DataSetSizeUnitPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetSizeUnitPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetSizeUnit) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetSizeUnitInput is an input type that accepts values of the DataSetSizeUnit enum
// A concrete instance of `DataSetSizeUnitInput` can be one of the following:
//
//	DataSetSizeUnitHour
//	DataSetSizeUnitDay
//	DataSetSizeUnitWeek
type DataSetSizeUnitInput interface {
	pulumi.Input

	ToDataSetSizeUnitOutput() DataSetSizeUnitOutput
	ToDataSetSizeUnitOutputWithContext(context.Context) DataSetSizeUnitOutput
}

var dataSetSizeUnitPtrType = reflect.TypeOf((**DataSetSizeUnit)(nil)).Elem()

type DataSetSizeUnitPtrInput interface {
	pulumi.Input

	ToDataSetSizeUnitPtrOutput() DataSetSizeUnitPtrOutput
	ToDataSetSizeUnitPtrOutputWithContext(context.Context) DataSetSizeUnitPtrOutput
}

type dataSetSizeUnitPtr string

func DataSetSizeUnitPtr(v string) DataSetSizeUnitPtrInput {
	return (*dataSetSizeUnitPtr)(&v)
}

func (*dataSetSizeUnitPtr) ElementType() reflect.Type {
	return dataSetSizeUnitPtrType
}

func (in *dataSetSizeUnitPtr) ToDataSetSizeUnitPtrOutput() DataSetSizeUnitPtrOutput {
	return pulumi.ToOutput(in).(DataSetSizeUnitPtrOutput)
}

func (in *dataSetSizeUnitPtr) ToDataSetSizeUnitPtrOutputWithContext(ctx context.Context) DataSetSizeUnitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetSizeUnitPtrOutput)
}

type DataSetStatus string

const (
	DataSetStatusEnabled  = DataSetStatus("ENABLED")
	DataSetStatusDisabled = DataSetStatus("DISABLED")
)

func (DataSetStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetStatus)(nil)).Elem()
}

func (e DataSetStatus) ToDataSetStatusOutput() DataSetStatusOutput {
	return pulumi.ToOutput(e).(DataSetStatusOutput)
}

func (e DataSetStatus) ToDataSetStatusOutputWithContext(ctx context.Context) DataSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetStatusOutput)
}

func (e DataSetStatus) ToDataSetStatusPtrOutput() DataSetStatusPtrOutput {
	return e.ToDataSetStatusPtrOutputWithContext(context.Background())
}

func (e DataSetStatus) ToDataSetStatusPtrOutputWithContext(ctx context.Context) DataSetStatusPtrOutput {
	return DataSetStatus(e).ToDataSetStatusOutputWithContext(ctx).ToDataSetStatusPtrOutputWithContext(ctx)
}

func (e DataSetStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetStatusOutput struct{ *pulumi.OutputState }

func (DataSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetStatus)(nil)).Elem()
}

func (o DataSetStatusOutput) ToDataSetStatusOutput() DataSetStatusOutput {
	return o
}

func (o DataSetStatusOutput) ToDataSetStatusOutputWithContext(ctx context.Context) DataSetStatusOutput {
	return o
}

func (o DataSetStatusOutput) ToDataSetStatusPtrOutput() DataSetStatusPtrOutput {
	return o.ToDataSetStatusPtrOutputWithContext(context.Background())
}

func (o DataSetStatusOutput) ToDataSetStatusPtrOutputWithContext(ctx context.Context) DataSetStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetStatus) *DataSetStatus {
		return &v
	}).(DataSetStatusPtrOutput)
}

func (o DataSetStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetStatusPtrOutput struct{ *pulumi.OutputState }

func (DataSetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetStatus)(nil)).Elem()
}

func (o DataSetStatusPtrOutput) ToDataSetStatusPtrOutput() DataSetStatusPtrOutput {
	return o
}

func (o DataSetStatusPtrOutput) ToDataSetStatusPtrOutputWithContext(ctx context.Context) DataSetStatusPtrOutput {
	return o
}

func (o DataSetStatusPtrOutput) Elem() DataSetStatusOutput {
	return o.ApplyT(func(v *DataSetStatus) DataSetStatus {
		if v != nil {
			return *v
		}
		var ret DataSetStatus
		return ret
	}).(DataSetStatusOutput)
}

func (o DataSetStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetStatusInput is an input type that accepts values of the DataSetStatus enum
// A concrete instance of `DataSetStatusInput` can be one of the following:
//
//	DataSetStatusEnabled
//	DataSetStatusDisabled
type DataSetStatusInput interface {
	pulumi.Input

	ToDataSetStatusOutput() DataSetStatusOutput
	ToDataSetStatusOutputWithContext(context.Context) DataSetStatusOutput
}

var dataSetStatusPtrType = reflect.TypeOf((**DataSetStatus)(nil)).Elem()

type DataSetStatusPtrInput interface {
	pulumi.Input

	ToDataSetStatusPtrOutput() DataSetStatusPtrOutput
	ToDataSetStatusPtrOutputWithContext(context.Context) DataSetStatusPtrOutput
}

type dataSetStatusPtr string

func DataSetStatusPtr(v string) DataSetStatusPtrInput {
	return (*dataSetStatusPtr)(&v)
}

func (*dataSetStatusPtr) ElementType() reflect.Type {
	return dataSetStatusPtrType
}

func (in *dataSetStatusPtr) ToDataSetStatusPtrOutput() DataSetStatusPtrOutput {
	return pulumi.ToOutput(in).(DataSetStatusPtrOutput)
}

func (in *dataSetStatusPtr) ToDataSetStatusPtrOutputWithContext(ctx context.Context) DataSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetStatusPtrOutput)
}

type DataSetTextQualifier string

const (
	DataSetTextQualifierDoubleQuote = DataSetTextQualifier("DOUBLE_QUOTE")
	DataSetTextQualifierSingleQuote = DataSetTextQualifier("SINGLE_QUOTE")
)

func (DataSetTextQualifier) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTextQualifier)(nil)).Elem()
}

func (e DataSetTextQualifier) ToDataSetTextQualifierOutput() DataSetTextQualifierOutput {
	return pulumi.ToOutput(e).(DataSetTextQualifierOutput)
}

func (e DataSetTextQualifier) ToDataSetTextQualifierOutputWithContext(ctx context.Context) DataSetTextQualifierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetTextQualifierOutput)
}

func (e DataSetTextQualifier) ToDataSetTextQualifierPtrOutput() DataSetTextQualifierPtrOutput {
	return e.ToDataSetTextQualifierPtrOutputWithContext(context.Background())
}

func (e DataSetTextQualifier) ToDataSetTextQualifierPtrOutputWithContext(ctx context.Context) DataSetTextQualifierPtrOutput {
	return DataSetTextQualifier(e).ToDataSetTextQualifierOutputWithContext(ctx).ToDataSetTextQualifierPtrOutputWithContext(ctx)
}

func (e DataSetTextQualifier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetTextQualifier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetTextQualifier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetTextQualifier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetTextQualifierOutput struct{ *pulumi.OutputState }

func (DataSetTextQualifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTextQualifier)(nil)).Elem()
}

func (o DataSetTextQualifierOutput) ToDataSetTextQualifierOutput() DataSetTextQualifierOutput {
	return o
}

func (o DataSetTextQualifierOutput) ToDataSetTextQualifierOutputWithContext(ctx context.Context) DataSetTextQualifierOutput {
	return o
}

func (o DataSetTextQualifierOutput) ToDataSetTextQualifierPtrOutput() DataSetTextQualifierPtrOutput {
	return o.ToDataSetTextQualifierPtrOutputWithContext(context.Background())
}

func (o DataSetTextQualifierOutput) ToDataSetTextQualifierPtrOutputWithContext(ctx context.Context) DataSetTextQualifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetTextQualifier) *DataSetTextQualifier {
		return &v
	}).(DataSetTextQualifierPtrOutput)
}

func (o DataSetTextQualifierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetTextQualifierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetTextQualifier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetTextQualifierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetTextQualifierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetTextQualifier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetTextQualifierPtrOutput struct{ *pulumi.OutputState }

func (DataSetTextQualifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetTextQualifier)(nil)).Elem()
}

func (o DataSetTextQualifierPtrOutput) ToDataSetTextQualifierPtrOutput() DataSetTextQualifierPtrOutput {
	return o
}

func (o DataSetTextQualifierPtrOutput) ToDataSetTextQualifierPtrOutputWithContext(ctx context.Context) DataSetTextQualifierPtrOutput {
	return o
}

func (o DataSetTextQualifierPtrOutput) Elem() DataSetTextQualifierOutput {
	return o.ApplyT(func(v *DataSetTextQualifier) DataSetTextQualifier {
		if v != nil {
			return *v
		}
		var ret DataSetTextQualifier
		return ret
	}).(DataSetTextQualifierOutput)
}

func (o DataSetTextQualifierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetTextQualifierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetTextQualifier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetTextQualifierInput is an input type that accepts values of the DataSetTextQualifier enum
// A concrete instance of `DataSetTextQualifierInput` can be one of the following:
//
//	DataSetTextQualifierDoubleQuote
//	DataSetTextQualifierSingleQuote
type DataSetTextQualifierInput interface {
	pulumi.Input

	ToDataSetTextQualifierOutput() DataSetTextQualifierOutput
	ToDataSetTextQualifierOutputWithContext(context.Context) DataSetTextQualifierOutput
}

var dataSetTextQualifierPtrType = reflect.TypeOf((**DataSetTextQualifier)(nil)).Elem()

type DataSetTextQualifierPtrInput interface {
	pulumi.Input

	ToDataSetTextQualifierPtrOutput() DataSetTextQualifierPtrOutput
	ToDataSetTextQualifierPtrOutputWithContext(context.Context) DataSetTextQualifierPtrOutput
}

type dataSetTextQualifierPtr string

func DataSetTextQualifierPtr(v string) DataSetTextQualifierPtrInput {
	return (*dataSetTextQualifierPtr)(&v)
}

func (*dataSetTextQualifierPtr) ElementType() reflect.Type {
	return dataSetTextQualifierPtrType
}

func (in *dataSetTextQualifierPtr) ToDataSetTextQualifierPtrOutput() DataSetTextQualifierPtrOutput {
	return pulumi.ToOutput(in).(DataSetTextQualifierPtrOutput)
}

func (in *dataSetTextQualifierPtr) ToDataSetTextQualifierPtrOutputWithContext(ctx context.Context) DataSetTextQualifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetTextQualifierPtrOutput)
}

type DataSetTimeGranularity string

const (
	DataSetTimeGranularityYear        = DataSetTimeGranularity("YEAR")
	DataSetTimeGranularityQuarter     = DataSetTimeGranularity("QUARTER")
	DataSetTimeGranularityMonth       = DataSetTimeGranularity("MONTH")
	DataSetTimeGranularityWeek        = DataSetTimeGranularity("WEEK")
	DataSetTimeGranularityDay         = DataSetTimeGranularity("DAY")
	DataSetTimeGranularityHour        = DataSetTimeGranularity("HOUR")
	DataSetTimeGranularityMinute      = DataSetTimeGranularity("MINUTE")
	DataSetTimeGranularitySecond      = DataSetTimeGranularity("SECOND")
	DataSetTimeGranularityMillisecond = DataSetTimeGranularity("MILLISECOND")
)

func (DataSetTimeGranularity) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTimeGranularity)(nil)).Elem()
}

func (e DataSetTimeGranularity) ToDataSetTimeGranularityOutput() DataSetTimeGranularityOutput {
	return pulumi.ToOutput(e).(DataSetTimeGranularityOutput)
}

func (e DataSetTimeGranularity) ToDataSetTimeGranularityOutputWithContext(ctx context.Context) DataSetTimeGranularityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetTimeGranularityOutput)
}

func (e DataSetTimeGranularity) ToDataSetTimeGranularityPtrOutput() DataSetTimeGranularityPtrOutput {
	return e.ToDataSetTimeGranularityPtrOutputWithContext(context.Background())
}

func (e DataSetTimeGranularity) ToDataSetTimeGranularityPtrOutputWithContext(ctx context.Context) DataSetTimeGranularityPtrOutput {
	return DataSetTimeGranularity(e).ToDataSetTimeGranularityOutputWithContext(ctx).ToDataSetTimeGranularityPtrOutputWithContext(ctx)
}

func (e DataSetTimeGranularity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetTimeGranularity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetTimeGranularity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetTimeGranularity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetTimeGranularityOutput struct{ *pulumi.OutputState }

func (DataSetTimeGranularityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTimeGranularity)(nil)).Elem()
}

func (o DataSetTimeGranularityOutput) ToDataSetTimeGranularityOutput() DataSetTimeGranularityOutput {
	return o
}

func (o DataSetTimeGranularityOutput) ToDataSetTimeGranularityOutputWithContext(ctx context.Context) DataSetTimeGranularityOutput {
	return o
}

func (o DataSetTimeGranularityOutput) ToDataSetTimeGranularityPtrOutput() DataSetTimeGranularityPtrOutput {
	return o.ToDataSetTimeGranularityPtrOutputWithContext(context.Background())
}

func (o DataSetTimeGranularityOutput) ToDataSetTimeGranularityPtrOutputWithContext(ctx context.Context) DataSetTimeGranularityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetTimeGranularity) *DataSetTimeGranularity {
		return &v
	}).(DataSetTimeGranularityPtrOutput)
}

func (o DataSetTimeGranularityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetTimeGranularityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetTimeGranularity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetTimeGranularityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetTimeGranularityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetTimeGranularity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetTimeGranularityPtrOutput struct{ *pulumi.OutputState }

func (DataSetTimeGranularityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetTimeGranularity)(nil)).Elem()
}

func (o DataSetTimeGranularityPtrOutput) ToDataSetTimeGranularityPtrOutput() DataSetTimeGranularityPtrOutput {
	return o
}

func (o DataSetTimeGranularityPtrOutput) ToDataSetTimeGranularityPtrOutputWithContext(ctx context.Context) DataSetTimeGranularityPtrOutput {
	return o
}

func (o DataSetTimeGranularityPtrOutput) Elem() DataSetTimeGranularityOutput {
	return o.ApplyT(func(v *DataSetTimeGranularity) DataSetTimeGranularity {
		if v != nil {
			return *v
		}
		var ret DataSetTimeGranularity
		return ret
	}).(DataSetTimeGranularityOutput)
}

func (o DataSetTimeGranularityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetTimeGranularityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetTimeGranularity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetTimeGranularityInput is an input type that accepts values of the DataSetTimeGranularity enum
// A concrete instance of `DataSetTimeGranularityInput` can be one of the following:
//
//	DataSetTimeGranularityYear
//	DataSetTimeGranularityQuarter
//	DataSetTimeGranularityMonth
//	DataSetTimeGranularityWeek
//	DataSetTimeGranularityDay
//	DataSetTimeGranularityHour
//	DataSetTimeGranularityMinute
//	DataSetTimeGranularitySecond
//	DataSetTimeGranularityMillisecond
type DataSetTimeGranularityInput interface {
	pulumi.Input

	ToDataSetTimeGranularityOutput() DataSetTimeGranularityOutput
	ToDataSetTimeGranularityOutputWithContext(context.Context) DataSetTimeGranularityOutput
}

var dataSetTimeGranularityPtrType = reflect.TypeOf((**DataSetTimeGranularity)(nil)).Elem()

type DataSetTimeGranularityPtrInput interface {
	pulumi.Input

	ToDataSetTimeGranularityPtrOutput() DataSetTimeGranularityPtrOutput
	ToDataSetTimeGranularityPtrOutputWithContext(context.Context) DataSetTimeGranularityPtrOutput
}

type dataSetTimeGranularityPtr string

func DataSetTimeGranularityPtr(v string) DataSetTimeGranularityPtrInput {
	return (*dataSetTimeGranularityPtr)(&v)
}

func (*dataSetTimeGranularityPtr) ElementType() reflect.Type {
	return dataSetTimeGranularityPtrType
}

func (in *dataSetTimeGranularityPtr) ToDataSetTimeGranularityPtrOutput() DataSetTimeGranularityPtrOutput {
	return pulumi.ToOutput(in).(DataSetTimeGranularityPtrOutput)
}

func (in *dataSetTimeGranularityPtr) ToDataSetTimeGranularityPtrOutputWithContext(ctx context.Context) DataSetTimeGranularityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetTimeGranularityPtrOutput)
}

type DataSourceErrorInfoType string

const (
	DataSourceErrorInfoTypeAccessDenied              = DataSourceErrorInfoType("ACCESS_DENIED")
	DataSourceErrorInfoTypeCopySourceNotFound        = DataSourceErrorInfoType("COPY_SOURCE_NOT_FOUND")
	DataSourceErrorInfoTypeTimeout                   = DataSourceErrorInfoType("TIMEOUT")
	DataSourceErrorInfoTypeEngineVersionNotSupported = DataSourceErrorInfoType("ENGINE_VERSION_NOT_SUPPORTED")
	DataSourceErrorInfoTypeUnknownHost               = DataSourceErrorInfoType("UNKNOWN_HOST")
	DataSourceErrorInfoTypeGenericSqlFailure         = DataSourceErrorInfoType("GENERIC_SQL_FAILURE")
	DataSourceErrorInfoTypeConflict                  = DataSourceErrorInfoType("CONFLICT")
	DataSourceErrorInfoTypeUnknown                   = DataSourceErrorInfoType("UNKNOWN")
)

func (DataSourceErrorInfoType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceErrorInfoType)(nil)).Elem()
}

func (e DataSourceErrorInfoType) ToDataSourceErrorInfoTypeOutput() DataSourceErrorInfoTypeOutput {
	return pulumi.ToOutput(e).(DataSourceErrorInfoTypeOutput)
}

func (e DataSourceErrorInfoType) ToDataSourceErrorInfoTypeOutputWithContext(ctx context.Context) DataSourceErrorInfoTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceErrorInfoTypeOutput)
}

func (e DataSourceErrorInfoType) ToDataSourceErrorInfoTypePtrOutput() DataSourceErrorInfoTypePtrOutput {
	return e.ToDataSourceErrorInfoTypePtrOutputWithContext(context.Background())
}

func (e DataSourceErrorInfoType) ToDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceErrorInfoTypePtrOutput {
	return DataSourceErrorInfoType(e).ToDataSourceErrorInfoTypeOutputWithContext(ctx).ToDataSourceErrorInfoTypePtrOutputWithContext(ctx)
}

func (e DataSourceErrorInfoType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceErrorInfoType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceErrorInfoType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceErrorInfoType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceErrorInfoTypeOutput struct{ *pulumi.OutputState }

func (DataSourceErrorInfoTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceErrorInfoType)(nil)).Elem()
}

func (o DataSourceErrorInfoTypeOutput) ToDataSourceErrorInfoTypeOutput() DataSourceErrorInfoTypeOutput {
	return o
}

func (o DataSourceErrorInfoTypeOutput) ToDataSourceErrorInfoTypeOutputWithContext(ctx context.Context) DataSourceErrorInfoTypeOutput {
	return o
}

func (o DataSourceErrorInfoTypeOutput) ToDataSourceErrorInfoTypePtrOutput() DataSourceErrorInfoTypePtrOutput {
	return o.ToDataSourceErrorInfoTypePtrOutputWithContext(context.Background())
}

func (o DataSourceErrorInfoTypeOutput) ToDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceErrorInfoTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceErrorInfoType) *DataSourceErrorInfoType {
		return &v
	}).(DataSourceErrorInfoTypePtrOutput)
}

func (o DataSourceErrorInfoTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceErrorInfoTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceErrorInfoType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceErrorInfoTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceErrorInfoTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceErrorInfoType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceErrorInfoTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceErrorInfoTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceErrorInfoType)(nil)).Elem()
}

func (o DataSourceErrorInfoTypePtrOutput) ToDataSourceErrorInfoTypePtrOutput() DataSourceErrorInfoTypePtrOutput {
	return o
}

func (o DataSourceErrorInfoTypePtrOutput) ToDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceErrorInfoTypePtrOutput {
	return o
}

func (o DataSourceErrorInfoTypePtrOutput) Elem() DataSourceErrorInfoTypeOutput {
	return o.ApplyT(func(v *DataSourceErrorInfoType) DataSourceErrorInfoType {
		if v != nil {
			return *v
		}
		var ret DataSourceErrorInfoType
		return ret
	}).(DataSourceErrorInfoTypeOutput)
}

func (o DataSourceErrorInfoTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceErrorInfoTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceErrorInfoType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceErrorInfoTypeInput is an input type that accepts values of the DataSourceErrorInfoType enum
// A concrete instance of `DataSourceErrorInfoTypeInput` can be one of the following:
//
//	DataSourceErrorInfoTypeAccessDenied
//	DataSourceErrorInfoTypeCopySourceNotFound
//	DataSourceErrorInfoTypeTimeout
//	DataSourceErrorInfoTypeEngineVersionNotSupported
//	DataSourceErrorInfoTypeUnknownHost
//	DataSourceErrorInfoTypeGenericSqlFailure
//	DataSourceErrorInfoTypeConflict
//	DataSourceErrorInfoTypeUnknown
type DataSourceErrorInfoTypeInput interface {
	pulumi.Input

	ToDataSourceErrorInfoTypeOutput() DataSourceErrorInfoTypeOutput
	ToDataSourceErrorInfoTypeOutputWithContext(context.Context) DataSourceErrorInfoTypeOutput
}

var dataSourceErrorInfoTypePtrType = reflect.TypeOf((**DataSourceErrorInfoType)(nil)).Elem()

type DataSourceErrorInfoTypePtrInput interface {
	pulumi.Input

	ToDataSourceErrorInfoTypePtrOutput() DataSourceErrorInfoTypePtrOutput
	ToDataSourceErrorInfoTypePtrOutputWithContext(context.Context) DataSourceErrorInfoTypePtrOutput
}

type dataSourceErrorInfoTypePtr string

func DataSourceErrorInfoTypePtr(v string) DataSourceErrorInfoTypePtrInput {
	return (*dataSourceErrorInfoTypePtr)(&v)
}

func (*dataSourceErrorInfoTypePtr) ElementType() reflect.Type {
	return dataSourceErrorInfoTypePtrType
}

func (in *dataSourceErrorInfoTypePtr) ToDataSourceErrorInfoTypePtrOutput() DataSourceErrorInfoTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceErrorInfoTypePtrOutput)
}

func (in *dataSourceErrorInfoTypePtr) ToDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceErrorInfoTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceErrorInfoTypePtrOutput)
}

type DataSourceResourceStatus string

const (
	DataSourceResourceStatusCreationInProgress = DataSourceResourceStatus("CREATION_IN_PROGRESS")
	DataSourceResourceStatusCreationSuccessful = DataSourceResourceStatus("CREATION_SUCCESSFUL")
	DataSourceResourceStatusCreationFailed     = DataSourceResourceStatus("CREATION_FAILED")
	DataSourceResourceStatusUpdateInProgress   = DataSourceResourceStatus("UPDATE_IN_PROGRESS")
	DataSourceResourceStatusUpdateSuccessful   = DataSourceResourceStatus("UPDATE_SUCCESSFUL")
	DataSourceResourceStatusUpdateFailed       = DataSourceResourceStatus("UPDATE_FAILED")
	DataSourceResourceStatusDeleted            = DataSourceResourceStatus("DELETED")
)

type DataSourceResourceStatusOutput struct{ *pulumi.OutputState }

func (DataSourceResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourceStatus)(nil)).Elem()
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusOutput() DataSourceResourceStatusOutput {
	return o
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusOutputWithContext(ctx context.Context) DataSourceResourceStatusOutput {
	return o
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput {
	return o.ToDataSourceResourceStatusPtrOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusPtrOutputWithContext(ctx context.Context) DataSourceResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceResourceStatus) *DataSourceResourceStatus {
		return &v
	}).(DataSourceResourceStatusPtrOutput)
}

func (o DataSourceResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (DataSourceResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceResourceStatus)(nil)).Elem()
}

func (o DataSourceResourceStatusPtrOutput) ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput {
	return o
}

func (o DataSourceResourceStatusPtrOutput) ToDataSourceResourceStatusPtrOutputWithContext(ctx context.Context) DataSourceResourceStatusPtrOutput {
	return o
}

func (o DataSourceResourceStatusPtrOutput) Elem() DataSourceResourceStatusOutput {
	return o.ApplyT(func(v *DataSourceResourceStatus) DataSourceResourceStatus {
		if v != nil {
			return *v
		}
		var ret DataSourceResourceStatus
		return ret
	}).(DataSourceResourceStatusOutput)
}

func (o DataSourceResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceStarburstProductType string

const (
	DataSourceStarburstProductTypeGalaxy     = DataSourceStarburstProductType("GALAXY")
	DataSourceStarburstProductTypeEnterprise = DataSourceStarburstProductType("ENTERPRISE")
)

func (DataSourceStarburstProductType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceStarburstProductType)(nil)).Elem()
}

func (e DataSourceStarburstProductType) ToDataSourceStarburstProductTypeOutput() DataSourceStarburstProductTypeOutput {
	return pulumi.ToOutput(e).(DataSourceStarburstProductTypeOutput)
}

func (e DataSourceStarburstProductType) ToDataSourceStarburstProductTypeOutputWithContext(ctx context.Context) DataSourceStarburstProductTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceStarburstProductTypeOutput)
}

func (e DataSourceStarburstProductType) ToDataSourceStarburstProductTypePtrOutput() DataSourceStarburstProductTypePtrOutput {
	return e.ToDataSourceStarburstProductTypePtrOutputWithContext(context.Background())
}

func (e DataSourceStarburstProductType) ToDataSourceStarburstProductTypePtrOutputWithContext(ctx context.Context) DataSourceStarburstProductTypePtrOutput {
	return DataSourceStarburstProductType(e).ToDataSourceStarburstProductTypeOutputWithContext(ctx).ToDataSourceStarburstProductTypePtrOutputWithContext(ctx)
}

func (e DataSourceStarburstProductType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceStarburstProductType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceStarburstProductType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceStarburstProductType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceStarburstProductTypeOutput struct{ *pulumi.OutputState }

func (DataSourceStarburstProductTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceStarburstProductType)(nil)).Elem()
}

func (o DataSourceStarburstProductTypeOutput) ToDataSourceStarburstProductTypeOutput() DataSourceStarburstProductTypeOutput {
	return o
}

func (o DataSourceStarburstProductTypeOutput) ToDataSourceStarburstProductTypeOutputWithContext(ctx context.Context) DataSourceStarburstProductTypeOutput {
	return o
}

func (o DataSourceStarburstProductTypeOutput) ToDataSourceStarburstProductTypePtrOutput() DataSourceStarburstProductTypePtrOutput {
	return o.ToDataSourceStarburstProductTypePtrOutputWithContext(context.Background())
}

func (o DataSourceStarburstProductTypeOutput) ToDataSourceStarburstProductTypePtrOutputWithContext(ctx context.Context) DataSourceStarburstProductTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceStarburstProductType) *DataSourceStarburstProductType {
		return &v
	}).(DataSourceStarburstProductTypePtrOutput)
}

func (o DataSourceStarburstProductTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceStarburstProductTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceStarburstProductType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceStarburstProductTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceStarburstProductTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceStarburstProductType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceStarburstProductTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceStarburstProductTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceStarburstProductType)(nil)).Elem()
}

func (o DataSourceStarburstProductTypePtrOutput) ToDataSourceStarburstProductTypePtrOutput() DataSourceStarburstProductTypePtrOutput {
	return o
}

func (o DataSourceStarburstProductTypePtrOutput) ToDataSourceStarburstProductTypePtrOutputWithContext(ctx context.Context) DataSourceStarburstProductTypePtrOutput {
	return o
}

func (o DataSourceStarburstProductTypePtrOutput) Elem() DataSourceStarburstProductTypeOutput {
	return o.ApplyT(func(v *DataSourceStarburstProductType) DataSourceStarburstProductType {
		if v != nil {
			return *v
		}
		var ret DataSourceStarburstProductType
		return ret
	}).(DataSourceStarburstProductTypeOutput)
}

func (o DataSourceStarburstProductTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceStarburstProductTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceStarburstProductType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceStarburstProductTypeInput is an input type that accepts values of the DataSourceStarburstProductType enum
// A concrete instance of `DataSourceStarburstProductTypeInput` can be one of the following:
//
//	DataSourceStarburstProductTypeGalaxy
//	DataSourceStarburstProductTypeEnterprise
type DataSourceStarburstProductTypeInput interface {
	pulumi.Input

	ToDataSourceStarburstProductTypeOutput() DataSourceStarburstProductTypeOutput
	ToDataSourceStarburstProductTypeOutputWithContext(context.Context) DataSourceStarburstProductTypeOutput
}

var dataSourceStarburstProductTypePtrType = reflect.TypeOf((**DataSourceStarburstProductType)(nil)).Elem()

type DataSourceStarburstProductTypePtrInput interface {
	pulumi.Input

	ToDataSourceStarburstProductTypePtrOutput() DataSourceStarburstProductTypePtrOutput
	ToDataSourceStarburstProductTypePtrOutputWithContext(context.Context) DataSourceStarburstProductTypePtrOutput
}

type dataSourceStarburstProductTypePtr string

func DataSourceStarburstProductTypePtr(v string) DataSourceStarburstProductTypePtrInput {
	return (*dataSourceStarburstProductTypePtr)(&v)
}

func (*dataSourceStarburstProductTypePtr) ElementType() reflect.Type {
	return dataSourceStarburstProductTypePtrType
}

func (in *dataSourceStarburstProductTypePtr) ToDataSourceStarburstProductTypePtrOutput() DataSourceStarburstProductTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceStarburstProductTypePtrOutput)
}

func (in *dataSourceStarburstProductTypePtr) ToDataSourceStarburstProductTypePtrOutputWithContext(ctx context.Context) DataSourceStarburstProductTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceStarburstProductTypePtrOutput)
}

type DataSourceType string

const (
	DataSourceTypeAdobeAnalytics      = DataSourceType("ADOBE_ANALYTICS")
	DataSourceTypeAmazonElasticsearch = DataSourceType("AMAZON_ELASTICSEARCH")
	DataSourceTypeAmazonOpensearch    = DataSourceType("AMAZON_OPENSEARCH")
	DataSourceTypeAthena              = DataSourceType("ATHENA")
	DataSourceTypeAurora              = DataSourceType("AURORA")
	DataSourceTypeAuroraPostgresql    = DataSourceType("AURORA_POSTGRESQL")
	DataSourceTypeAwsIotAnalytics     = DataSourceType("AWS_IOT_ANALYTICS")
	DataSourceTypeDatabricks          = DataSourceType("DATABRICKS")
	DataSourceTypeGithub              = DataSourceType("GITHUB")
	DataSourceTypeJira                = DataSourceType("JIRA")
	DataSourceTypeMariadb             = DataSourceType("MARIADB")
	DataSourceTypeMysql               = DataSourceType("MYSQL")
	DataSourceTypeOracle              = DataSourceType("ORACLE")
	DataSourceTypePostgresql          = DataSourceType("POSTGRESQL")
	DataSourceTypePresto              = DataSourceType("PRESTO")
	DataSourceTypeRedshift            = DataSourceType("REDSHIFT")
	DataSourceTypeS3                  = DataSourceType("S3")
	DataSourceTypeSalesforce          = DataSourceType("SALESFORCE")
	DataSourceTypeServicenow          = DataSourceType("SERVICENOW")
	DataSourceTypeSnowflake           = DataSourceType("SNOWFLAKE")
	DataSourceTypeSpark               = DataSourceType("SPARK")
	DataSourceTypeSqlserver           = DataSourceType("SQLSERVER")
	DataSourceTypeTeradata            = DataSourceType("TERADATA")
	DataSourceTypeTwitter             = DataSourceType("TWITTER")
	DataSourceTypeTimestream          = DataSourceType("TIMESTREAM")
	DataSourceTypeStarburst           = DataSourceType("STARBURST")
	DataSourceTypeTrino               = DataSourceType("TRINO")
)

func (DataSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceType)(nil)).Elem()
}

func (e DataSourceType) ToDataSourceTypeOutput() DataSourceTypeOutput {
	return pulumi.ToOutput(e).(DataSourceTypeOutput)
}

func (e DataSourceType) ToDataSourceTypeOutputWithContext(ctx context.Context) DataSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceTypeOutput)
}

func (e DataSourceType) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return e.ToDataSourceTypePtrOutputWithContext(context.Background())
}

func (e DataSourceType) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return DataSourceType(e).ToDataSourceTypeOutputWithContext(ctx).ToDataSourceTypePtrOutputWithContext(ctx)
}

func (e DataSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceTypeOutput struct{ *pulumi.OutputState }

func (DataSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceType)(nil)).Elem()
}

func (o DataSourceTypeOutput) ToDataSourceTypeOutput() DataSourceTypeOutput {
	return o
}

func (o DataSourceTypeOutput) ToDataSourceTypeOutputWithContext(ctx context.Context) DataSourceTypeOutput {
	return o
}

func (o DataSourceTypeOutput) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return o.ToDataSourceTypePtrOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceType) *DataSourceType {
		return &v
	}).(DataSourceTypePtrOutput)
}

func (o DataSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceType)(nil)).Elem()
}

func (o DataSourceTypePtrOutput) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return o
}

func (o DataSourceTypePtrOutput) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return o
}

func (o DataSourceTypePtrOutput) Elem() DataSourceTypeOutput {
	return o.ApplyT(func(v *DataSourceType) DataSourceType {
		if v != nil {
			return *v
		}
		var ret DataSourceType
		return ret
	}).(DataSourceTypeOutput)
}

func (o DataSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceTypeInput is an input type that accepts values of the DataSourceType enum
// A concrete instance of `DataSourceTypeInput` can be one of the following:
//
//	DataSourceTypeAdobeAnalytics
//	DataSourceTypeAmazonElasticsearch
//	DataSourceTypeAmazonOpensearch
//	DataSourceTypeAthena
//	DataSourceTypeAurora
//	DataSourceTypeAuroraPostgresql
//	DataSourceTypeAwsIotAnalytics
//	DataSourceTypeDatabricks
//	DataSourceTypeGithub
//	DataSourceTypeJira
//	DataSourceTypeMariadb
//	DataSourceTypeMysql
//	DataSourceTypeOracle
//	DataSourceTypePostgresql
//	DataSourceTypePresto
//	DataSourceTypeRedshift
//	DataSourceTypeS3
//	DataSourceTypeSalesforce
//	DataSourceTypeServicenow
//	DataSourceTypeSnowflake
//	DataSourceTypeSpark
//	DataSourceTypeSqlserver
//	DataSourceTypeTeradata
//	DataSourceTypeTwitter
//	DataSourceTypeTimestream
//	DataSourceTypeStarburst
//	DataSourceTypeTrino
type DataSourceTypeInput interface {
	pulumi.Input

	ToDataSourceTypeOutput() DataSourceTypeOutput
	ToDataSourceTypeOutputWithContext(context.Context) DataSourceTypeOutput
}

var dataSourceTypePtrType = reflect.TypeOf((**DataSourceType)(nil)).Elem()

type DataSourceTypePtrInput interface {
	pulumi.Input

	ToDataSourceTypePtrOutput() DataSourceTypePtrOutput
	ToDataSourceTypePtrOutputWithContext(context.Context) DataSourceTypePtrOutput
}

type dataSourceTypePtr string

func DataSourceTypePtr(v string) DataSourceTypePtrInput {
	return (*dataSourceTypePtr)(&v)
}

func (*dataSourceTypePtr) ElementType() reflect.Type {
	return dataSourceTypePtrType
}

func (in *dataSourceTypePtr) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceTypePtrOutput)
}

func (in *dataSourceTypePtr) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceTypePtrOutput)
}

type RefreshScheduleMapRefreshType string

const (
	RefreshScheduleMapRefreshTypeFullRefresh        = RefreshScheduleMapRefreshType("FULL_REFRESH")
	RefreshScheduleMapRefreshTypeIncrementalRefresh = RefreshScheduleMapRefreshType("INCREMENTAL_REFRESH")
)

func (RefreshScheduleMapRefreshType) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMapRefreshType)(nil)).Elem()
}

func (e RefreshScheduleMapRefreshType) ToRefreshScheduleMapRefreshTypeOutput() RefreshScheduleMapRefreshTypeOutput {
	return pulumi.ToOutput(e).(RefreshScheduleMapRefreshTypeOutput)
}

func (e RefreshScheduleMapRefreshType) ToRefreshScheduleMapRefreshTypeOutputWithContext(ctx context.Context) RefreshScheduleMapRefreshTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RefreshScheduleMapRefreshTypeOutput)
}

func (e RefreshScheduleMapRefreshType) ToRefreshScheduleMapRefreshTypePtrOutput() RefreshScheduleMapRefreshTypePtrOutput {
	return e.ToRefreshScheduleMapRefreshTypePtrOutputWithContext(context.Background())
}

func (e RefreshScheduleMapRefreshType) ToRefreshScheduleMapRefreshTypePtrOutputWithContext(ctx context.Context) RefreshScheduleMapRefreshTypePtrOutput {
	return RefreshScheduleMapRefreshType(e).ToRefreshScheduleMapRefreshTypeOutputWithContext(ctx).ToRefreshScheduleMapRefreshTypePtrOutputWithContext(ctx)
}

func (e RefreshScheduleMapRefreshType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RefreshScheduleMapRefreshType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RefreshScheduleMapRefreshType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RefreshScheduleMapRefreshType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RefreshScheduleMapRefreshTypeOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapRefreshTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMapRefreshType)(nil)).Elem()
}

func (o RefreshScheduleMapRefreshTypeOutput) ToRefreshScheduleMapRefreshTypeOutput() RefreshScheduleMapRefreshTypeOutput {
	return o
}

func (o RefreshScheduleMapRefreshTypeOutput) ToRefreshScheduleMapRefreshTypeOutputWithContext(ctx context.Context) RefreshScheduleMapRefreshTypeOutput {
	return o
}

func (o RefreshScheduleMapRefreshTypeOutput) ToRefreshScheduleMapRefreshTypePtrOutput() RefreshScheduleMapRefreshTypePtrOutput {
	return o.ToRefreshScheduleMapRefreshTypePtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapRefreshTypeOutput) ToRefreshScheduleMapRefreshTypePtrOutputWithContext(ctx context.Context) RefreshScheduleMapRefreshTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RefreshScheduleMapRefreshType) *RefreshScheduleMapRefreshType {
		return &v
	}).(RefreshScheduleMapRefreshTypePtrOutput)
}

func (o RefreshScheduleMapRefreshTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RefreshScheduleMapRefreshTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RefreshScheduleMapRefreshType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RefreshScheduleMapRefreshTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapRefreshTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RefreshScheduleMapRefreshType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RefreshScheduleMapRefreshTypePtrOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapRefreshTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshScheduleMapRefreshType)(nil)).Elem()
}

func (o RefreshScheduleMapRefreshTypePtrOutput) ToRefreshScheduleMapRefreshTypePtrOutput() RefreshScheduleMapRefreshTypePtrOutput {
	return o
}

func (o RefreshScheduleMapRefreshTypePtrOutput) ToRefreshScheduleMapRefreshTypePtrOutputWithContext(ctx context.Context) RefreshScheduleMapRefreshTypePtrOutput {
	return o
}

func (o RefreshScheduleMapRefreshTypePtrOutput) Elem() RefreshScheduleMapRefreshTypeOutput {
	return o.ApplyT(func(v *RefreshScheduleMapRefreshType) RefreshScheduleMapRefreshType {
		if v != nil {
			return *v
		}
		var ret RefreshScheduleMapRefreshType
		return ret
	}).(RefreshScheduleMapRefreshTypeOutput)
}

func (o RefreshScheduleMapRefreshTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapRefreshTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RefreshScheduleMapRefreshType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RefreshScheduleMapRefreshTypeInput is an input type that accepts values of the RefreshScheduleMapRefreshType enum
// A concrete instance of `RefreshScheduleMapRefreshTypeInput` can be one of the following:
//
//	RefreshScheduleMapRefreshTypeFullRefresh
//	RefreshScheduleMapRefreshTypeIncrementalRefresh
type RefreshScheduleMapRefreshTypeInput interface {
	pulumi.Input

	ToRefreshScheduleMapRefreshTypeOutput() RefreshScheduleMapRefreshTypeOutput
	ToRefreshScheduleMapRefreshTypeOutputWithContext(context.Context) RefreshScheduleMapRefreshTypeOutput
}

var refreshScheduleMapRefreshTypePtrType = reflect.TypeOf((**RefreshScheduleMapRefreshType)(nil)).Elem()

type RefreshScheduleMapRefreshTypePtrInput interface {
	pulumi.Input

	ToRefreshScheduleMapRefreshTypePtrOutput() RefreshScheduleMapRefreshTypePtrOutput
	ToRefreshScheduleMapRefreshTypePtrOutputWithContext(context.Context) RefreshScheduleMapRefreshTypePtrOutput
}

type refreshScheduleMapRefreshTypePtr string

func RefreshScheduleMapRefreshTypePtr(v string) RefreshScheduleMapRefreshTypePtrInput {
	return (*refreshScheduleMapRefreshTypePtr)(&v)
}

func (*refreshScheduleMapRefreshTypePtr) ElementType() reflect.Type {
	return refreshScheduleMapRefreshTypePtrType
}

func (in *refreshScheduleMapRefreshTypePtr) ToRefreshScheduleMapRefreshTypePtrOutput() RefreshScheduleMapRefreshTypePtrOutput {
	return pulumi.ToOutput(in).(RefreshScheduleMapRefreshTypePtrOutput)
}

func (in *refreshScheduleMapRefreshTypePtr) ToRefreshScheduleMapRefreshTypePtrOutputWithContext(ctx context.Context) RefreshScheduleMapRefreshTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RefreshScheduleMapRefreshTypePtrOutput)
}

type RefreshScheduleMapScheduleFrequencyPropertiesInterval string

const (
	RefreshScheduleMapScheduleFrequencyPropertiesIntervalMinute15 = RefreshScheduleMapScheduleFrequencyPropertiesInterval("MINUTE15")
	RefreshScheduleMapScheduleFrequencyPropertiesIntervalMinute30 = RefreshScheduleMapScheduleFrequencyPropertiesInterval("MINUTE30")
	RefreshScheduleMapScheduleFrequencyPropertiesIntervalHourly   = RefreshScheduleMapScheduleFrequencyPropertiesInterval("HOURLY")
	RefreshScheduleMapScheduleFrequencyPropertiesIntervalDaily    = RefreshScheduleMapScheduleFrequencyPropertiesInterval("DAILY")
	RefreshScheduleMapScheduleFrequencyPropertiesIntervalWeekly   = RefreshScheduleMapScheduleFrequencyPropertiesInterval("WEEKLY")
	RefreshScheduleMapScheduleFrequencyPropertiesIntervalMonthly  = RefreshScheduleMapScheduleFrequencyPropertiesInterval("MONTHLY")
)

func (RefreshScheduleMapScheduleFrequencyPropertiesInterval) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesInterval)(nil)).Elem()
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesInterval) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput() RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput {
	return pulumi.ToOutput(e).(RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput)
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesInterval) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput)
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesInterval) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput {
	return e.ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutputWithContext(context.Background())
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesInterval) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput {
	return RefreshScheduleMapScheduleFrequencyPropertiesInterval(e).ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalOutputWithContext(ctx).ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutputWithContext(ctx)
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesInterval) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesInterval) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesInterval) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesInterval) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesInterval)(nil)).Elem()
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput() RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput {
	return o.ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RefreshScheduleMapScheduleFrequencyPropertiesInterval) *RefreshScheduleMapScheduleFrequencyPropertiesInterval {
		return &v
	}).(RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput)
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RefreshScheduleMapScheduleFrequencyPropertiesInterval) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RefreshScheduleMapScheduleFrequencyPropertiesInterval) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshScheduleMapScheduleFrequencyPropertiesInterval)(nil)).Elem()
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput) Elem() RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput {
	return o.ApplyT(func(v *RefreshScheduleMapScheduleFrequencyPropertiesInterval) RefreshScheduleMapScheduleFrequencyPropertiesInterval {
		if v != nil {
			return *v
		}
		var ret RefreshScheduleMapScheduleFrequencyPropertiesInterval
		return ret
	}).(RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput)
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RefreshScheduleMapScheduleFrequencyPropertiesInterval) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RefreshScheduleMapScheduleFrequencyPropertiesIntervalInput is an input type that accepts values of the RefreshScheduleMapScheduleFrequencyPropertiesInterval enum
// A concrete instance of `RefreshScheduleMapScheduleFrequencyPropertiesIntervalInput` can be one of the following:
//
//	RefreshScheduleMapScheduleFrequencyPropertiesIntervalMinute15
//	RefreshScheduleMapScheduleFrequencyPropertiesIntervalMinute30
//	RefreshScheduleMapScheduleFrequencyPropertiesIntervalHourly
//	RefreshScheduleMapScheduleFrequencyPropertiesIntervalDaily
//	RefreshScheduleMapScheduleFrequencyPropertiesIntervalWeekly
//	RefreshScheduleMapScheduleFrequencyPropertiesIntervalMonthly
type RefreshScheduleMapScheduleFrequencyPropertiesIntervalInput interface {
	pulumi.Input

	ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput() RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput
	ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalOutputWithContext(context.Context) RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput
}

var refreshScheduleMapScheduleFrequencyPropertiesIntervalPtrType = reflect.TypeOf((**RefreshScheduleMapScheduleFrequencyPropertiesInterval)(nil)).Elem()

type RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrInput interface {
	pulumi.Input

	ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput
	ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutputWithContext(context.Context) RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput
}

type refreshScheduleMapScheduleFrequencyPropertiesIntervalPtr string

func RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtr(v string) RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrInput {
	return (*refreshScheduleMapScheduleFrequencyPropertiesIntervalPtr)(&v)
}

func (*refreshScheduleMapScheduleFrequencyPropertiesIntervalPtr) ElementType() reflect.Type {
	return refreshScheduleMapScheduleFrequencyPropertiesIntervalPtrType
}

func (in *refreshScheduleMapScheduleFrequencyPropertiesIntervalPtr) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput {
	return pulumi.ToOutput(in).(RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput)
}

func (in *refreshScheduleMapScheduleFrequencyPropertiesIntervalPtr) ToRefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput)
}

type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek string

const (
	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekSunday    = RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek("SUNDAY")
	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekMonday    = RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek("MONDAY")
	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekTuesday   = RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek("TUESDAY")
	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekWednesday = RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek("WEDNESDAY")
	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekThursday  = RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek("THURSDAY")
	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekFriday    = RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek("FRIDAY")
	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekSaturday  = RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek("SATURDAY")
)

func (RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek)(nil)).Elem()
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput {
	return pulumi.ToOutput(e).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput)
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput)
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput {
	return e.ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutputWithContext(context.Background())
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput {
	return RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek(e).ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutputWithContext(ctx).ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutputWithContext(ctx)
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek)(nil)).Elem()
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput {
	return o.ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek {
		return &v
	}).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput)
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek)(nil)).Elem()
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput) Elem() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput {
	return o.ApplyT(func(v *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek {
		if v != nil {
			return *v
		}
		var ret RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek
		return ret
	}).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput)
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekInput is an input type that accepts values of the RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek enum
// A concrete instance of `RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekInput` can be one of the following:
//
//	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekSunday
//	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekMonday
//	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekTuesday
//	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekWednesday
//	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekThursday
//	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekFriday
//	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekSaturday
type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekInput interface {
	pulumi.Input

	ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput
	ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutputWithContext(context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput
}

var refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrType = reflect.TypeOf((**RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek)(nil)).Elem()

type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrInput interface {
	pulumi.Input

	ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput
	ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutputWithContext(context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput
}

type refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtr string

func RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtr(v string) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrInput {
	return (*refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtr)(&v)
}

func (*refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtr) ElementType() reflect.Type {
	return refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrType
}

func (in *refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtr) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput {
	return pulumi.ToOutput(in).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput)
}

func (in *refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtr) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput)
}

type TemplateAnchorOption string

const (
	TemplateAnchorOptionNow = TemplateAnchorOption("NOW")
)

func (TemplateAnchorOption) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAnchorOption)(nil)).Elem()
}

func (e TemplateAnchorOption) ToTemplateAnchorOptionOutput() TemplateAnchorOptionOutput {
	return pulumi.ToOutput(e).(TemplateAnchorOptionOutput)
}

func (e TemplateAnchorOption) ToTemplateAnchorOptionOutputWithContext(ctx context.Context) TemplateAnchorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateAnchorOptionOutput)
}

func (e TemplateAnchorOption) ToTemplateAnchorOptionPtrOutput() TemplateAnchorOptionPtrOutput {
	return e.ToTemplateAnchorOptionPtrOutputWithContext(context.Background())
}

func (e TemplateAnchorOption) ToTemplateAnchorOptionPtrOutputWithContext(ctx context.Context) TemplateAnchorOptionPtrOutput {
	return TemplateAnchorOption(e).ToTemplateAnchorOptionOutputWithContext(ctx).ToTemplateAnchorOptionPtrOutputWithContext(ctx)
}

func (e TemplateAnchorOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateAnchorOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateAnchorOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateAnchorOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateAnchorOptionOutput struct{ *pulumi.OutputState }

func (TemplateAnchorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAnchorOption)(nil)).Elem()
}

func (o TemplateAnchorOptionOutput) ToTemplateAnchorOptionOutput() TemplateAnchorOptionOutput {
	return o
}

func (o TemplateAnchorOptionOutput) ToTemplateAnchorOptionOutputWithContext(ctx context.Context) TemplateAnchorOptionOutput {
	return o
}

func (o TemplateAnchorOptionOutput) ToTemplateAnchorOptionPtrOutput() TemplateAnchorOptionPtrOutput {
	return o.ToTemplateAnchorOptionPtrOutputWithContext(context.Background())
}

func (o TemplateAnchorOptionOutput) ToTemplateAnchorOptionPtrOutputWithContext(ctx context.Context) TemplateAnchorOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAnchorOption) *TemplateAnchorOption {
		return &v
	}).(TemplateAnchorOptionPtrOutput)
}

func (o TemplateAnchorOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateAnchorOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateAnchorOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateAnchorOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateAnchorOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateAnchorOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateAnchorOptionPtrOutput struct{ *pulumi.OutputState }

func (TemplateAnchorOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAnchorOption)(nil)).Elem()
}

func (o TemplateAnchorOptionPtrOutput) ToTemplateAnchorOptionPtrOutput() TemplateAnchorOptionPtrOutput {
	return o
}

func (o TemplateAnchorOptionPtrOutput) ToTemplateAnchorOptionPtrOutputWithContext(ctx context.Context) TemplateAnchorOptionPtrOutput {
	return o
}

func (o TemplateAnchorOptionPtrOutput) Elem() TemplateAnchorOptionOutput {
	return o.ApplyT(func(v *TemplateAnchorOption) TemplateAnchorOption {
		if v != nil {
			return *v
		}
		var ret TemplateAnchorOption
		return ret
	}).(TemplateAnchorOptionOutput)
}

func (o TemplateAnchorOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateAnchorOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateAnchorOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateAnchorOptionInput is an input type that accepts values of the TemplateAnchorOption enum
// A concrete instance of `TemplateAnchorOptionInput` can be one of the following:
//
//	TemplateAnchorOptionNow
type TemplateAnchorOptionInput interface {
	pulumi.Input

	ToTemplateAnchorOptionOutput() TemplateAnchorOptionOutput
	ToTemplateAnchorOptionOutputWithContext(context.Context) TemplateAnchorOptionOutput
}

var templateAnchorOptionPtrType = reflect.TypeOf((**TemplateAnchorOption)(nil)).Elem()

type TemplateAnchorOptionPtrInput interface {
	pulumi.Input

	ToTemplateAnchorOptionPtrOutput() TemplateAnchorOptionPtrOutput
	ToTemplateAnchorOptionPtrOutputWithContext(context.Context) TemplateAnchorOptionPtrOutput
}

type templateAnchorOptionPtr string

func TemplateAnchorOptionPtr(v string) TemplateAnchorOptionPtrInput {
	return (*templateAnchorOptionPtr)(&v)
}

func (*templateAnchorOptionPtr) ElementType() reflect.Type {
	return templateAnchorOptionPtrType
}

func (in *templateAnchorOptionPtr) ToTemplateAnchorOptionPtrOutput() TemplateAnchorOptionPtrOutput {
	return pulumi.ToOutput(in).(TemplateAnchorOptionPtrOutput)
}

func (in *templateAnchorOptionPtr) ToTemplateAnchorOptionPtrOutputWithContext(ctx context.Context) TemplateAnchorOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateAnchorOptionPtrOutput)
}

type TemplateArcThickness string

const (
	TemplateArcThicknessSmall  = TemplateArcThickness("SMALL")
	TemplateArcThicknessMedium = TemplateArcThickness("MEDIUM")
	TemplateArcThicknessLarge  = TemplateArcThickness("LARGE")
	TemplateArcThicknessWhole  = TemplateArcThickness("WHOLE")
)

func (TemplateArcThickness) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcThickness)(nil)).Elem()
}

func (e TemplateArcThickness) ToTemplateArcThicknessOutput() TemplateArcThicknessOutput {
	return pulumi.ToOutput(e).(TemplateArcThicknessOutput)
}

func (e TemplateArcThickness) ToTemplateArcThicknessOutputWithContext(ctx context.Context) TemplateArcThicknessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateArcThicknessOutput)
}

func (e TemplateArcThickness) ToTemplateArcThicknessPtrOutput() TemplateArcThicknessPtrOutput {
	return e.ToTemplateArcThicknessPtrOutputWithContext(context.Background())
}

func (e TemplateArcThickness) ToTemplateArcThicknessPtrOutputWithContext(ctx context.Context) TemplateArcThicknessPtrOutput {
	return TemplateArcThickness(e).ToTemplateArcThicknessOutputWithContext(ctx).ToTemplateArcThicknessPtrOutputWithContext(ctx)
}

func (e TemplateArcThickness) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateArcThickness) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateArcThickness) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateArcThickness) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateArcThicknessOutput struct{ *pulumi.OutputState }

func (TemplateArcThicknessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcThickness)(nil)).Elem()
}

func (o TemplateArcThicknessOutput) ToTemplateArcThicknessOutput() TemplateArcThicknessOutput {
	return o
}

func (o TemplateArcThicknessOutput) ToTemplateArcThicknessOutputWithContext(ctx context.Context) TemplateArcThicknessOutput {
	return o
}

func (o TemplateArcThicknessOutput) ToTemplateArcThicknessPtrOutput() TemplateArcThicknessPtrOutput {
	return o.ToTemplateArcThicknessPtrOutputWithContext(context.Background())
}

func (o TemplateArcThicknessOutput) ToTemplateArcThicknessPtrOutputWithContext(ctx context.Context) TemplateArcThicknessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateArcThickness) *TemplateArcThickness {
		return &v
	}).(TemplateArcThicknessPtrOutput)
}

func (o TemplateArcThicknessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateArcThicknessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateArcThickness) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateArcThicknessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateArcThicknessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateArcThickness) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateArcThicknessPtrOutput struct{ *pulumi.OutputState }

func (TemplateArcThicknessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcThickness)(nil)).Elem()
}

func (o TemplateArcThicknessPtrOutput) ToTemplateArcThicknessPtrOutput() TemplateArcThicknessPtrOutput {
	return o
}

func (o TemplateArcThicknessPtrOutput) ToTemplateArcThicknessPtrOutputWithContext(ctx context.Context) TemplateArcThicknessPtrOutput {
	return o
}

func (o TemplateArcThicknessPtrOutput) Elem() TemplateArcThicknessOutput {
	return o.ApplyT(func(v *TemplateArcThickness) TemplateArcThickness {
		if v != nil {
			return *v
		}
		var ret TemplateArcThickness
		return ret
	}).(TemplateArcThicknessOutput)
}

func (o TemplateArcThicknessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateArcThicknessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateArcThickness) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateArcThicknessInput is an input type that accepts values of the TemplateArcThickness enum
// A concrete instance of `TemplateArcThicknessInput` can be one of the following:
//
//	TemplateArcThicknessSmall
//	TemplateArcThicknessMedium
//	TemplateArcThicknessLarge
//	TemplateArcThicknessWhole
type TemplateArcThicknessInput interface {
	pulumi.Input

	ToTemplateArcThicknessOutput() TemplateArcThicknessOutput
	ToTemplateArcThicknessOutputWithContext(context.Context) TemplateArcThicknessOutput
}

var templateArcThicknessPtrType = reflect.TypeOf((**TemplateArcThickness)(nil)).Elem()

type TemplateArcThicknessPtrInput interface {
	pulumi.Input

	ToTemplateArcThicknessPtrOutput() TemplateArcThicknessPtrOutput
	ToTemplateArcThicknessPtrOutputWithContext(context.Context) TemplateArcThicknessPtrOutput
}

type templateArcThicknessPtr string

func TemplateArcThicknessPtr(v string) TemplateArcThicknessPtrInput {
	return (*templateArcThicknessPtr)(&v)
}

func (*templateArcThicknessPtr) ElementType() reflect.Type {
	return templateArcThicknessPtrType
}

func (in *templateArcThicknessPtr) ToTemplateArcThicknessPtrOutput() TemplateArcThicknessPtrOutput {
	return pulumi.ToOutput(in).(TemplateArcThicknessPtrOutput)
}

func (in *templateArcThicknessPtr) ToTemplateArcThicknessPtrOutputWithContext(ctx context.Context) TemplateArcThicknessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateArcThicknessPtrOutput)
}

type TemplateArcThicknessOptions string

const (
	TemplateArcThicknessOptionsSmall  = TemplateArcThicknessOptions("SMALL")
	TemplateArcThicknessOptionsMedium = TemplateArcThicknessOptions("MEDIUM")
	TemplateArcThicknessOptionsLarge  = TemplateArcThicknessOptions("LARGE")
)

func (TemplateArcThicknessOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcThicknessOptions)(nil)).Elem()
}

func (e TemplateArcThicknessOptions) ToTemplateArcThicknessOptionsOutput() TemplateArcThicknessOptionsOutput {
	return pulumi.ToOutput(e).(TemplateArcThicknessOptionsOutput)
}

func (e TemplateArcThicknessOptions) ToTemplateArcThicknessOptionsOutputWithContext(ctx context.Context) TemplateArcThicknessOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateArcThicknessOptionsOutput)
}

func (e TemplateArcThicknessOptions) ToTemplateArcThicknessOptionsPtrOutput() TemplateArcThicknessOptionsPtrOutput {
	return e.ToTemplateArcThicknessOptionsPtrOutputWithContext(context.Background())
}

func (e TemplateArcThicknessOptions) ToTemplateArcThicknessOptionsPtrOutputWithContext(ctx context.Context) TemplateArcThicknessOptionsPtrOutput {
	return TemplateArcThicknessOptions(e).ToTemplateArcThicknessOptionsOutputWithContext(ctx).ToTemplateArcThicknessOptionsPtrOutputWithContext(ctx)
}

func (e TemplateArcThicknessOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateArcThicknessOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateArcThicknessOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateArcThicknessOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateArcThicknessOptionsOutput struct{ *pulumi.OutputState }

func (TemplateArcThicknessOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcThicknessOptions)(nil)).Elem()
}

func (o TemplateArcThicknessOptionsOutput) ToTemplateArcThicknessOptionsOutput() TemplateArcThicknessOptionsOutput {
	return o
}

func (o TemplateArcThicknessOptionsOutput) ToTemplateArcThicknessOptionsOutputWithContext(ctx context.Context) TemplateArcThicknessOptionsOutput {
	return o
}

func (o TemplateArcThicknessOptionsOutput) ToTemplateArcThicknessOptionsPtrOutput() TemplateArcThicknessOptionsPtrOutput {
	return o.ToTemplateArcThicknessOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateArcThicknessOptionsOutput) ToTemplateArcThicknessOptionsPtrOutputWithContext(ctx context.Context) TemplateArcThicknessOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateArcThicknessOptions) *TemplateArcThicknessOptions {
		return &v
	}).(TemplateArcThicknessOptionsPtrOutput)
}

func (o TemplateArcThicknessOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateArcThicknessOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateArcThicknessOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateArcThicknessOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateArcThicknessOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateArcThicknessOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateArcThicknessOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateArcThicknessOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcThicknessOptions)(nil)).Elem()
}

func (o TemplateArcThicknessOptionsPtrOutput) ToTemplateArcThicknessOptionsPtrOutput() TemplateArcThicknessOptionsPtrOutput {
	return o
}

func (o TemplateArcThicknessOptionsPtrOutput) ToTemplateArcThicknessOptionsPtrOutputWithContext(ctx context.Context) TemplateArcThicknessOptionsPtrOutput {
	return o
}

func (o TemplateArcThicknessOptionsPtrOutput) Elem() TemplateArcThicknessOptionsOutput {
	return o.ApplyT(func(v *TemplateArcThicknessOptions) TemplateArcThicknessOptions {
		if v != nil {
			return *v
		}
		var ret TemplateArcThicknessOptions
		return ret
	}).(TemplateArcThicknessOptionsOutput)
}

func (o TemplateArcThicknessOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateArcThicknessOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateArcThicknessOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateArcThicknessOptionsInput is an input type that accepts values of the TemplateArcThicknessOptions enum
// A concrete instance of `TemplateArcThicknessOptionsInput` can be one of the following:
//
//	TemplateArcThicknessOptionsSmall
//	TemplateArcThicknessOptionsMedium
//	TemplateArcThicknessOptionsLarge
type TemplateArcThicknessOptionsInput interface {
	pulumi.Input

	ToTemplateArcThicknessOptionsOutput() TemplateArcThicknessOptionsOutput
	ToTemplateArcThicknessOptionsOutputWithContext(context.Context) TemplateArcThicknessOptionsOutput
}

var templateArcThicknessOptionsPtrType = reflect.TypeOf((**TemplateArcThicknessOptions)(nil)).Elem()

type TemplateArcThicknessOptionsPtrInput interface {
	pulumi.Input

	ToTemplateArcThicknessOptionsPtrOutput() TemplateArcThicknessOptionsPtrOutput
	ToTemplateArcThicknessOptionsPtrOutputWithContext(context.Context) TemplateArcThicknessOptionsPtrOutput
}

type templateArcThicknessOptionsPtr string

func TemplateArcThicknessOptionsPtr(v string) TemplateArcThicknessOptionsPtrInput {
	return (*templateArcThicknessOptionsPtr)(&v)
}

func (*templateArcThicknessOptionsPtr) ElementType() reflect.Type {
	return templateArcThicknessOptionsPtrType
}

func (in *templateArcThicknessOptionsPtr) ToTemplateArcThicknessOptionsPtrOutput() TemplateArcThicknessOptionsPtrOutput {
	return pulumi.ToOutput(in).(TemplateArcThicknessOptionsPtrOutput)
}

func (in *templateArcThicknessOptionsPtr) ToTemplateArcThicknessOptionsPtrOutputWithContext(ctx context.Context) TemplateArcThicknessOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateArcThicknessOptionsPtrOutput)
}

type TemplateAxisBinding string

const (
	TemplateAxisBindingPrimaryYaxis   = TemplateAxisBinding("PRIMARY_YAXIS")
	TemplateAxisBindingSecondaryYaxis = TemplateAxisBinding("SECONDARY_YAXIS")
)

func (TemplateAxisBinding) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisBinding)(nil)).Elem()
}

func (e TemplateAxisBinding) ToTemplateAxisBindingOutput() TemplateAxisBindingOutput {
	return pulumi.ToOutput(e).(TemplateAxisBindingOutput)
}

func (e TemplateAxisBinding) ToTemplateAxisBindingOutputWithContext(ctx context.Context) TemplateAxisBindingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateAxisBindingOutput)
}

func (e TemplateAxisBinding) ToTemplateAxisBindingPtrOutput() TemplateAxisBindingPtrOutput {
	return e.ToTemplateAxisBindingPtrOutputWithContext(context.Background())
}

func (e TemplateAxisBinding) ToTemplateAxisBindingPtrOutputWithContext(ctx context.Context) TemplateAxisBindingPtrOutput {
	return TemplateAxisBinding(e).ToTemplateAxisBindingOutputWithContext(ctx).ToTemplateAxisBindingPtrOutputWithContext(ctx)
}

func (e TemplateAxisBinding) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateAxisBinding) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateAxisBinding) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateAxisBinding) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateAxisBindingOutput struct{ *pulumi.OutputState }

func (TemplateAxisBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisBinding)(nil)).Elem()
}

func (o TemplateAxisBindingOutput) ToTemplateAxisBindingOutput() TemplateAxisBindingOutput {
	return o
}

func (o TemplateAxisBindingOutput) ToTemplateAxisBindingOutputWithContext(ctx context.Context) TemplateAxisBindingOutput {
	return o
}

func (o TemplateAxisBindingOutput) ToTemplateAxisBindingPtrOutput() TemplateAxisBindingPtrOutput {
	return o.ToTemplateAxisBindingPtrOutputWithContext(context.Background())
}

func (o TemplateAxisBindingOutput) ToTemplateAxisBindingPtrOutputWithContext(ctx context.Context) TemplateAxisBindingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisBinding) *TemplateAxisBinding {
		return &v
	}).(TemplateAxisBindingPtrOutput)
}

func (o TemplateAxisBindingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateAxisBindingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateAxisBinding) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateAxisBindingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateAxisBindingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateAxisBinding) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateAxisBindingPtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisBinding)(nil)).Elem()
}

func (o TemplateAxisBindingPtrOutput) ToTemplateAxisBindingPtrOutput() TemplateAxisBindingPtrOutput {
	return o
}

func (o TemplateAxisBindingPtrOutput) ToTemplateAxisBindingPtrOutputWithContext(ctx context.Context) TemplateAxisBindingPtrOutput {
	return o
}

func (o TemplateAxisBindingPtrOutput) Elem() TemplateAxisBindingOutput {
	return o.ApplyT(func(v *TemplateAxisBinding) TemplateAxisBinding {
		if v != nil {
			return *v
		}
		var ret TemplateAxisBinding
		return ret
	}).(TemplateAxisBindingOutput)
}

func (o TemplateAxisBindingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateAxisBindingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateAxisBinding) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateAxisBindingInput is an input type that accepts values of the TemplateAxisBinding enum
// A concrete instance of `TemplateAxisBindingInput` can be one of the following:
//
//	TemplateAxisBindingPrimaryYaxis
//	TemplateAxisBindingSecondaryYaxis
type TemplateAxisBindingInput interface {
	pulumi.Input

	ToTemplateAxisBindingOutput() TemplateAxisBindingOutput
	ToTemplateAxisBindingOutputWithContext(context.Context) TemplateAxisBindingOutput
}

var templateAxisBindingPtrType = reflect.TypeOf((**TemplateAxisBinding)(nil)).Elem()

type TemplateAxisBindingPtrInput interface {
	pulumi.Input

	ToTemplateAxisBindingPtrOutput() TemplateAxisBindingPtrOutput
	ToTemplateAxisBindingPtrOutputWithContext(context.Context) TemplateAxisBindingPtrOutput
}

type templateAxisBindingPtr string

func TemplateAxisBindingPtr(v string) TemplateAxisBindingPtrInput {
	return (*templateAxisBindingPtr)(&v)
}

func (*templateAxisBindingPtr) ElementType() reflect.Type {
	return templateAxisBindingPtrType
}

func (in *templateAxisBindingPtr) ToTemplateAxisBindingPtrOutput() TemplateAxisBindingPtrOutput {
	return pulumi.ToOutput(in).(TemplateAxisBindingPtrOutput)
}

func (in *templateAxisBindingPtr) ToTemplateAxisBindingPtrOutputWithContext(ctx context.Context) TemplateAxisBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateAxisBindingPtrOutput)
}

type TemplateBarChartOrientation string

const (
	TemplateBarChartOrientationHorizontal = TemplateBarChartOrientation("HORIZONTAL")
	TemplateBarChartOrientationVertical   = TemplateBarChartOrientation("VERTICAL")
)

func (TemplateBarChartOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartOrientation)(nil)).Elem()
}

func (e TemplateBarChartOrientation) ToTemplateBarChartOrientationOutput() TemplateBarChartOrientationOutput {
	return pulumi.ToOutput(e).(TemplateBarChartOrientationOutput)
}

func (e TemplateBarChartOrientation) ToTemplateBarChartOrientationOutputWithContext(ctx context.Context) TemplateBarChartOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateBarChartOrientationOutput)
}

func (e TemplateBarChartOrientation) ToTemplateBarChartOrientationPtrOutput() TemplateBarChartOrientationPtrOutput {
	return e.ToTemplateBarChartOrientationPtrOutputWithContext(context.Background())
}

func (e TemplateBarChartOrientation) ToTemplateBarChartOrientationPtrOutputWithContext(ctx context.Context) TemplateBarChartOrientationPtrOutput {
	return TemplateBarChartOrientation(e).ToTemplateBarChartOrientationOutputWithContext(ctx).ToTemplateBarChartOrientationPtrOutputWithContext(ctx)
}

func (e TemplateBarChartOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateBarChartOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateBarChartOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateBarChartOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateBarChartOrientationOutput struct{ *pulumi.OutputState }

func (TemplateBarChartOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartOrientation)(nil)).Elem()
}

func (o TemplateBarChartOrientationOutput) ToTemplateBarChartOrientationOutput() TemplateBarChartOrientationOutput {
	return o
}

func (o TemplateBarChartOrientationOutput) ToTemplateBarChartOrientationOutputWithContext(ctx context.Context) TemplateBarChartOrientationOutput {
	return o
}

func (o TemplateBarChartOrientationOutput) ToTemplateBarChartOrientationPtrOutput() TemplateBarChartOrientationPtrOutput {
	return o.ToTemplateBarChartOrientationPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartOrientationOutput) ToTemplateBarChartOrientationPtrOutputWithContext(ctx context.Context) TemplateBarChartOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartOrientation) *TemplateBarChartOrientation {
		return &v
	}).(TemplateBarChartOrientationPtrOutput)
}

func (o TemplateBarChartOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateBarChartOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateBarChartOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateBarChartOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateBarChartOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateBarChartOrientationPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartOrientation)(nil)).Elem()
}

func (o TemplateBarChartOrientationPtrOutput) ToTemplateBarChartOrientationPtrOutput() TemplateBarChartOrientationPtrOutput {
	return o
}

func (o TemplateBarChartOrientationPtrOutput) ToTemplateBarChartOrientationPtrOutputWithContext(ctx context.Context) TemplateBarChartOrientationPtrOutput {
	return o
}

func (o TemplateBarChartOrientationPtrOutput) Elem() TemplateBarChartOrientationOutput {
	return o.ApplyT(func(v *TemplateBarChartOrientation) TemplateBarChartOrientation {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartOrientation
		return ret
	}).(TemplateBarChartOrientationOutput)
}

func (o TemplateBarChartOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateBarChartOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateBarChartOrientationInput is an input type that accepts values of the TemplateBarChartOrientation enum
// A concrete instance of `TemplateBarChartOrientationInput` can be one of the following:
//
//	TemplateBarChartOrientationHorizontal
//	TemplateBarChartOrientationVertical
type TemplateBarChartOrientationInput interface {
	pulumi.Input

	ToTemplateBarChartOrientationOutput() TemplateBarChartOrientationOutput
	ToTemplateBarChartOrientationOutputWithContext(context.Context) TemplateBarChartOrientationOutput
}

var templateBarChartOrientationPtrType = reflect.TypeOf((**TemplateBarChartOrientation)(nil)).Elem()

type TemplateBarChartOrientationPtrInput interface {
	pulumi.Input

	ToTemplateBarChartOrientationPtrOutput() TemplateBarChartOrientationPtrOutput
	ToTemplateBarChartOrientationPtrOutputWithContext(context.Context) TemplateBarChartOrientationPtrOutput
}

type templateBarChartOrientationPtr string

func TemplateBarChartOrientationPtr(v string) TemplateBarChartOrientationPtrInput {
	return (*templateBarChartOrientationPtr)(&v)
}

func (*templateBarChartOrientationPtr) ElementType() reflect.Type {
	return templateBarChartOrientationPtrType
}

func (in *templateBarChartOrientationPtr) ToTemplateBarChartOrientationPtrOutput() TemplateBarChartOrientationPtrOutput {
	return pulumi.ToOutput(in).(TemplateBarChartOrientationPtrOutput)
}

func (in *templateBarChartOrientationPtr) ToTemplateBarChartOrientationPtrOutputWithContext(ctx context.Context) TemplateBarChartOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateBarChartOrientationPtrOutput)
}

type TemplateBarsArrangement string

const (
	TemplateBarsArrangementClustered      = TemplateBarsArrangement("CLUSTERED")
	TemplateBarsArrangementStacked        = TemplateBarsArrangement("STACKED")
	TemplateBarsArrangementStackedPercent = TemplateBarsArrangement("STACKED_PERCENT")
)

func (TemplateBarsArrangement) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarsArrangement)(nil)).Elem()
}

func (e TemplateBarsArrangement) ToTemplateBarsArrangementOutput() TemplateBarsArrangementOutput {
	return pulumi.ToOutput(e).(TemplateBarsArrangementOutput)
}

func (e TemplateBarsArrangement) ToTemplateBarsArrangementOutputWithContext(ctx context.Context) TemplateBarsArrangementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateBarsArrangementOutput)
}

func (e TemplateBarsArrangement) ToTemplateBarsArrangementPtrOutput() TemplateBarsArrangementPtrOutput {
	return e.ToTemplateBarsArrangementPtrOutputWithContext(context.Background())
}

func (e TemplateBarsArrangement) ToTemplateBarsArrangementPtrOutputWithContext(ctx context.Context) TemplateBarsArrangementPtrOutput {
	return TemplateBarsArrangement(e).ToTemplateBarsArrangementOutputWithContext(ctx).ToTemplateBarsArrangementPtrOutputWithContext(ctx)
}

func (e TemplateBarsArrangement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateBarsArrangement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateBarsArrangement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateBarsArrangement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateBarsArrangementOutput struct{ *pulumi.OutputState }

func (TemplateBarsArrangementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarsArrangement)(nil)).Elem()
}

func (o TemplateBarsArrangementOutput) ToTemplateBarsArrangementOutput() TemplateBarsArrangementOutput {
	return o
}

func (o TemplateBarsArrangementOutput) ToTemplateBarsArrangementOutputWithContext(ctx context.Context) TemplateBarsArrangementOutput {
	return o
}

func (o TemplateBarsArrangementOutput) ToTemplateBarsArrangementPtrOutput() TemplateBarsArrangementPtrOutput {
	return o.ToTemplateBarsArrangementPtrOutputWithContext(context.Background())
}

func (o TemplateBarsArrangementOutput) ToTemplateBarsArrangementPtrOutputWithContext(ctx context.Context) TemplateBarsArrangementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarsArrangement) *TemplateBarsArrangement {
		return &v
	}).(TemplateBarsArrangementPtrOutput)
}

func (o TemplateBarsArrangementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateBarsArrangementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateBarsArrangement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateBarsArrangementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateBarsArrangementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateBarsArrangement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateBarsArrangementPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarsArrangementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarsArrangement)(nil)).Elem()
}

func (o TemplateBarsArrangementPtrOutput) ToTemplateBarsArrangementPtrOutput() TemplateBarsArrangementPtrOutput {
	return o
}

func (o TemplateBarsArrangementPtrOutput) ToTemplateBarsArrangementPtrOutputWithContext(ctx context.Context) TemplateBarsArrangementPtrOutput {
	return o
}

func (o TemplateBarsArrangementPtrOutput) Elem() TemplateBarsArrangementOutput {
	return o.ApplyT(func(v *TemplateBarsArrangement) TemplateBarsArrangement {
		if v != nil {
			return *v
		}
		var ret TemplateBarsArrangement
		return ret
	}).(TemplateBarsArrangementOutput)
}

func (o TemplateBarsArrangementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateBarsArrangementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateBarsArrangement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateBarsArrangementInput is an input type that accepts values of the TemplateBarsArrangement enum
// A concrete instance of `TemplateBarsArrangementInput` can be one of the following:
//
//	TemplateBarsArrangementClustered
//	TemplateBarsArrangementStacked
//	TemplateBarsArrangementStackedPercent
type TemplateBarsArrangementInput interface {
	pulumi.Input

	ToTemplateBarsArrangementOutput() TemplateBarsArrangementOutput
	ToTemplateBarsArrangementOutputWithContext(context.Context) TemplateBarsArrangementOutput
}

var templateBarsArrangementPtrType = reflect.TypeOf((**TemplateBarsArrangement)(nil)).Elem()

type TemplateBarsArrangementPtrInput interface {
	pulumi.Input

	ToTemplateBarsArrangementPtrOutput() TemplateBarsArrangementPtrOutput
	ToTemplateBarsArrangementPtrOutputWithContext(context.Context) TemplateBarsArrangementPtrOutput
}

type templateBarsArrangementPtr string

func TemplateBarsArrangementPtr(v string) TemplateBarsArrangementPtrInput {
	return (*templateBarsArrangementPtr)(&v)
}

func (*templateBarsArrangementPtr) ElementType() reflect.Type {
	return templateBarsArrangementPtrType
}

func (in *templateBarsArrangementPtr) ToTemplateBarsArrangementPtrOutput() TemplateBarsArrangementPtrOutput {
	return pulumi.ToOutput(in).(TemplateBarsArrangementPtrOutput)
}

func (in *templateBarsArrangementPtr) ToTemplateBarsArrangementPtrOutputWithContext(ctx context.Context) TemplateBarsArrangementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateBarsArrangementPtrOutput)
}

type TemplateBaseMapStyleType string

const (
	TemplateBaseMapStyleTypeLightGray = TemplateBaseMapStyleType("LIGHT_GRAY")
	TemplateBaseMapStyleTypeDarkGray  = TemplateBaseMapStyleType("DARK_GRAY")
	TemplateBaseMapStyleTypeStreet    = TemplateBaseMapStyleType("STREET")
	TemplateBaseMapStyleTypeImagery   = TemplateBaseMapStyleType("IMAGERY")
)

func (TemplateBaseMapStyleType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBaseMapStyleType)(nil)).Elem()
}

func (e TemplateBaseMapStyleType) ToTemplateBaseMapStyleTypeOutput() TemplateBaseMapStyleTypeOutput {
	return pulumi.ToOutput(e).(TemplateBaseMapStyleTypeOutput)
}

func (e TemplateBaseMapStyleType) ToTemplateBaseMapStyleTypeOutputWithContext(ctx context.Context) TemplateBaseMapStyleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateBaseMapStyleTypeOutput)
}

func (e TemplateBaseMapStyleType) ToTemplateBaseMapStyleTypePtrOutput() TemplateBaseMapStyleTypePtrOutput {
	return e.ToTemplateBaseMapStyleTypePtrOutputWithContext(context.Background())
}

func (e TemplateBaseMapStyleType) ToTemplateBaseMapStyleTypePtrOutputWithContext(ctx context.Context) TemplateBaseMapStyleTypePtrOutput {
	return TemplateBaseMapStyleType(e).ToTemplateBaseMapStyleTypeOutputWithContext(ctx).ToTemplateBaseMapStyleTypePtrOutputWithContext(ctx)
}

func (e TemplateBaseMapStyleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateBaseMapStyleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateBaseMapStyleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateBaseMapStyleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateBaseMapStyleTypeOutput struct{ *pulumi.OutputState }

func (TemplateBaseMapStyleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBaseMapStyleType)(nil)).Elem()
}

func (o TemplateBaseMapStyleTypeOutput) ToTemplateBaseMapStyleTypeOutput() TemplateBaseMapStyleTypeOutput {
	return o
}

func (o TemplateBaseMapStyleTypeOutput) ToTemplateBaseMapStyleTypeOutputWithContext(ctx context.Context) TemplateBaseMapStyleTypeOutput {
	return o
}

func (o TemplateBaseMapStyleTypeOutput) ToTemplateBaseMapStyleTypePtrOutput() TemplateBaseMapStyleTypePtrOutput {
	return o.ToTemplateBaseMapStyleTypePtrOutputWithContext(context.Background())
}

func (o TemplateBaseMapStyleTypeOutput) ToTemplateBaseMapStyleTypePtrOutputWithContext(ctx context.Context) TemplateBaseMapStyleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBaseMapStyleType) *TemplateBaseMapStyleType {
		return &v
	}).(TemplateBaseMapStyleTypePtrOutput)
}

func (o TemplateBaseMapStyleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateBaseMapStyleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateBaseMapStyleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateBaseMapStyleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateBaseMapStyleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateBaseMapStyleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateBaseMapStyleTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateBaseMapStyleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBaseMapStyleType)(nil)).Elem()
}

func (o TemplateBaseMapStyleTypePtrOutput) ToTemplateBaseMapStyleTypePtrOutput() TemplateBaseMapStyleTypePtrOutput {
	return o
}

func (o TemplateBaseMapStyleTypePtrOutput) ToTemplateBaseMapStyleTypePtrOutputWithContext(ctx context.Context) TemplateBaseMapStyleTypePtrOutput {
	return o
}

func (o TemplateBaseMapStyleTypePtrOutput) Elem() TemplateBaseMapStyleTypeOutput {
	return o.ApplyT(func(v *TemplateBaseMapStyleType) TemplateBaseMapStyleType {
		if v != nil {
			return *v
		}
		var ret TemplateBaseMapStyleType
		return ret
	}).(TemplateBaseMapStyleTypeOutput)
}

func (o TemplateBaseMapStyleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateBaseMapStyleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateBaseMapStyleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateBaseMapStyleTypeInput is an input type that accepts values of the TemplateBaseMapStyleType enum
// A concrete instance of `TemplateBaseMapStyleTypeInput` can be one of the following:
//
//	TemplateBaseMapStyleTypeLightGray
//	TemplateBaseMapStyleTypeDarkGray
//	TemplateBaseMapStyleTypeStreet
//	TemplateBaseMapStyleTypeImagery
type TemplateBaseMapStyleTypeInput interface {
	pulumi.Input

	ToTemplateBaseMapStyleTypeOutput() TemplateBaseMapStyleTypeOutput
	ToTemplateBaseMapStyleTypeOutputWithContext(context.Context) TemplateBaseMapStyleTypeOutput
}

var templateBaseMapStyleTypePtrType = reflect.TypeOf((**TemplateBaseMapStyleType)(nil)).Elem()

type TemplateBaseMapStyleTypePtrInput interface {
	pulumi.Input

	ToTemplateBaseMapStyleTypePtrOutput() TemplateBaseMapStyleTypePtrOutput
	ToTemplateBaseMapStyleTypePtrOutputWithContext(context.Context) TemplateBaseMapStyleTypePtrOutput
}

type templateBaseMapStyleTypePtr string

func TemplateBaseMapStyleTypePtr(v string) TemplateBaseMapStyleTypePtrInput {
	return (*templateBaseMapStyleTypePtr)(&v)
}

func (*templateBaseMapStyleTypePtr) ElementType() reflect.Type {
	return templateBaseMapStyleTypePtrType
}

func (in *templateBaseMapStyleTypePtr) ToTemplateBaseMapStyleTypePtrOutput() TemplateBaseMapStyleTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateBaseMapStyleTypePtrOutput)
}

func (in *templateBaseMapStyleTypePtr) ToTemplateBaseMapStyleTypePtrOutputWithContext(ctx context.Context) TemplateBaseMapStyleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateBaseMapStyleTypePtrOutput)
}

type TemplateBoxPlotFillStyle string

const (
	TemplateBoxPlotFillStyleSolid       = TemplateBoxPlotFillStyle("SOLID")
	TemplateBoxPlotFillStyleTransparent = TemplateBoxPlotFillStyle("TRANSPARENT")
)

func (TemplateBoxPlotFillStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotFillStyle)(nil)).Elem()
}

func (e TemplateBoxPlotFillStyle) ToTemplateBoxPlotFillStyleOutput() TemplateBoxPlotFillStyleOutput {
	return pulumi.ToOutput(e).(TemplateBoxPlotFillStyleOutput)
}

func (e TemplateBoxPlotFillStyle) ToTemplateBoxPlotFillStyleOutputWithContext(ctx context.Context) TemplateBoxPlotFillStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateBoxPlotFillStyleOutput)
}

func (e TemplateBoxPlotFillStyle) ToTemplateBoxPlotFillStylePtrOutput() TemplateBoxPlotFillStylePtrOutput {
	return e.ToTemplateBoxPlotFillStylePtrOutputWithContext(context.Background())
}

func (e TemplateBoxPlotFillStyle) ToTemplateBoxPlotFillStylePtrOutputWithContext(ctx context.Context) TemplateBoxPlotFillStylePtrOutput {
	return TemplateBoxPlotFillStyle(e).ToTemplateBoxPlotFillStyleOutputWithContext(ctx).ToTemplateBoxPlotFillStylePtrOutputWithContext(ctx)
}

func (e TemplateBoxPlotFillStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateBoxPlotFillStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateBoxPlotFillStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateBoxPlotFillStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateBoxPlotFillStyleOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotFillStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotFillStyle)(nil)).Elem()
}

func (o TemplateBoxPlotFillStyleOutput) ToTemplateBoxPlotFillStyleOutput() TemplateBoxPlotFillStyleOutput {
	return o
}

func (o TemplateBoxPlotFillStyleOutput) ToTemplateBoxPlotFillStyleOutputWithContext(ctx context.Context) TemplateBoxPlotFillStyleOutput {
	return o
}

func (o TemplateBoxPlotFillStyleOutput) ToTemplateBoxPlotFillStylePtrOutput() TemplateBoxPlotFillStylePtrOutput {
	return o.ToTemplateBoxPlotFillStylePtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotFillStyleOutput) ToTemplateBoxPlotFillStylePtrOutputWithContext(ctx context.Context) TemplateBoxPlotFillStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotFillStyle) *TemplateBoxPlotFillStyle {
		return &v
	}).(TemplateBoxPlotFillStylePtrOutput)
}

func (o TemplateBoxPlotFillStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateBoxPlotFillStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateBoxPlotFillStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateBoxPlotFillStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotFillStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateBoxPlotFillStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateBoxPlotFillStylePtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotFillStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotFillStyle)(nil)).Elem()
}

func (o TemplateBoxPlotFillStylePtrOutput) ToTemplateBoxPlotFillStylePtrOutput() TemplateBoxPlotFillStylePtrOutput {
	return o
}

func (o TemplateBoxPlotFillStylePtrOutput) ToTemplateBoxPlotFillStylePtrOutputWithContext(ctx context.Context) TemplateBoxPlotFillStylePtrOutput {
	return o
}

func (o TemplateBoxPlotFillStylePtrOutput) Elem() TemplateBoxPlotFillStyleOutput {
	return o.ApplyT(func(v *TemplateBoxPlotFillStyle) TemplateBoxPlotFillStyle {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotFillStyle
		return ret
	}).(TemplateBoxPlotFillStyleOutput)
}

func (o TemplateBoxPlotFillStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotFillStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateBoxPlotFillStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateBoxPlotFillStyleInput is an input type that accepts values of the TemplateBoxPlotFillStyle enum
// A concrete instance of `TemplateBoxPlotFillStyleInput` can be one of the following:
//
//	TemplateBoxPlotFillStyleSolid
//	TemplateBoxPlotFillStyleTransparent
type TemplateBoxPlotFillStyleInput interface {
	pulumi.Input

	ToTemplateBoxPlotFillStyleOutput() TemplateBoxPlotFillStyleOutput
	ToTemplateBoxPlotFillStyleOutputWithContext(context.Context) TemplateBoxPlotFillStyleOutput
}

var templateBoxPlotFillStylePtrType = reflect.TypeOf((**TemplateBoxPlotFillStyle)(nil)).Elem()

type TemplateBoxPlotFillStylePtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotFillStylePtrOutput() TemplateBoxPlotFillStylePtrOutput
	ToTemplateBoxPlotFillStylePtrOutputWithContext(context.Context) TemplateBoxPlotFillStylePtrOutput
}

type templateBoxPlotFillStylePtr string

func TemplateBoxPlotFillStylePtr(v string) TemplateBoxPlotFillStylePtrInput {
	return (*templateBoxPlotFillStylePtr)(&v)
}

func (*templateBoxPlotFillStylePtr) ElementType() reflect.Type {
	return templateBoxPlotFillStylePtrType
}

func (in *templateBoxPlotFillStylePtr) ToTemplateBoxPlotFillStylePtrOutput() TemplateBoxPlotFillStylePtrOutput {
	return pulumi.ToOutput(in).(TemplateBoxPlotFillStylePtrOutput)
}

func (in *templateBoxPlotFillStylePtr) ToTemplateBoxPlotFillStylePtrOutputWithContext(ctx context.Context) TemplateBoxPlotFillStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateBoxPlotFillStylePtrOutput)
}

type TemplateCategoricalAggregationFunction string

const (
	TemplateCategoricalAggregationFunctionCount         = TemplateCategoricalAggregationFunction("COUNT")
	TemplateCategoricalAggregationFunctionDistinctCount = TemplateCategoricalAggregationFunction("DISTINCT_COUNT")
)

func (TemplateCategoricalAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoricalAggregationFunction)(nil)).Elem()
}

func (e TemplateCategoricalAggregationFunction) ToTemplateCategoricalAggregationFunctionOutput() TemplateCategoricalAggregationFunctionOutput {
	return pulumi.ToOutput(e).(TemplateCategoricalAggregationFunctionOutput)
}

func (e TemplateCategoricalAggregationFunction) ToTemplateCategoricalAggregationFunctionOutputWithContext(ctx context.Context) TemplateCategoricalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateCategoricalAggregationFunctionOutput)
}

func (e TemplateCategoricalAggregationFunction) ToTemplateCategoricalAggregationFunctionPtrOutput() TemplateCategoricalAggregationFunctionPtrOutput {
	return e.ToTemplateCategoricalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e TemplateCategoricalAggregationFunction) ToTemplateCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateCategoricalAggregationFunctionPtrOutput {
	return TemplateCategoricalAggregationFunction(e).ToTemplateCategoricalAggregationFunctionOutputWithContext(ctx).ToTemplateCategoricalAggregationFunctionPtrOutputWithContext(ctx)
}

func (e TemplateCategoricalAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCategoricalAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCategoricalAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateCategoricalAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateCategoricalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TemplateCategoricalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoricalAggregationFunction)(nil)).Elem()
}

func (o TemplateCategoricalAggregationFunctionOutput) ToTemplateCategoricalAggregationFunctionOutput() TemplateCategoricalAggregationFunctionOutput {
	return o
}

func (o TemplateCategoricalAggregationFunctionOutput) ToTemplateCategoricalAggregationFunctionOutputWithContext(ctx context.Context) TemplateCategoricalAggregationFunctionOutput {
	return o
}

func (o TemplateCategoricalAggregationFunctionOutput) ToTemplateCategoricalAggregationFunctionPtrOutput() TemplateCategoricalAggregationFunctionPtrOutput {
	return o.ToTemplateCategoricalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o TemplateCategoricalAggregationFunctionOutput) ToTemplateCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateCategoricalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoricalAggregationFunction) *TemplateCategoricalAggregationFunction {
		return &v
	}).(TemplateCategoricalAggregationFunctionPtrOutput)
}

func (o TemplateCategoricalAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateCategoricalAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCategoricalAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateCategoricalAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCategoricalAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCategoricalAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateCategoricalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoricalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoricalAggregationFunction)(nil)).Elem()
}

func (o TemplateCategoricalAggregationFunctionPtrOutput) ToTemplateCategoricalAggregationFunctionPtrOutput() TemplateCategoricalAggregationFunctionPtrOutput {
	return o
}

func (o TemplateCategoricalAggregationFunctionPtrOutput) ToTemplateCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateCategoricalAggregationFunctionPtrOutput {
	return o
}

func (o TemplateCategoricalAggregationFunctionPtrOutput) Elem() TemplateCategoricalAggregationFunctionOutput {
	return o.ApplyT(func(v *TemplateCategoricalAggregationFunction) TemplateCategoricalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret TemplateCategoricalAggregationFunction
		return ret
	}).(TemplateCategoricalAggregationFunctionOutput)
}

func (o TemplateCategoricalAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCategoricalAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateCategoricalAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateCategoricalAggregationFunctionInput is an input type that accepts values of the TemplateCategoricalAggregationFunction enum
// A concrete instance of `TemplateCategoricalAggregationFunctionInput` can be one of the following:
//
//	TemplateCategoricalAggregationFunctionCount
//	TemplateCategoricalAggregationFunctionDistinctCount
type TemplateCategoricalAggregationFunctionInput interface {
	pulumi.Input

	ToTemplateCategoricalAggregationFunctionOutput() TemplateCategoricalAggregationFunctionOutput
	ToTemplateCategoricalAggregationFunctionOutputWithContext(context.Context) TemplateCategoricalAggregationFunctionOutput
}

var templateCategoricalAggregationFunctionPtrType = reflect.TypeOf((**TemplateCategoricalAggregationFunction)(nil)).Elem()

type TemplateCategoricalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToTemplateCategoricalAggregationFunctionPtrOutput() TemplateCategoricalAggregationFunctionPtrOutput
	ToTemplateCategoricalAggregationFunctionPtrOutputWithContext(context.Context) TemplateCategoricalAggregationFunctionPtrOutput
}

type templateCategoricalAggregationFunctionPtr string

func TemplateCategoricalAggregationFunctionPtr(v string) TemplateCategoricalAggregationFunctionPtrInput {
	return (*templateCategoricalAggregationFunctionPtr)(&v)
}

func (*templateCategoricalAggregationFunctionPtr) ElementType() reflect.Type {
	return templateCategoricalAggregationFunctionPtrType
}

func (in *templateCategoricalAggregationFunctionPtr) ToTemplateCategoricalAggregationFunctionPtrOutput() TemplateCategoricalAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(TemplateCategoricalAggregationFunctionPtrOutput)
}

func (in *templateCategoricalAggregationFunctionPtr) ToTemplateCategoricalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateCategoricalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateCategoricalAggregationFunctionPtrOutput)
}

type TemplateCategoryFilterMatchOperator string

const (
	TemplateCategoryFilterMatchOperatorEquals         = TemplateCategoryFilterMatchOperator("EQUALS")
	TemplateCategoryFilterMatchOperatorDoesNotEqual   = TemplateCategoryFilterMatchOperator("DOES_NOT_EQUAL")
	TemplateCategoryFilterMatchOperatorContains       = TemplateCategoryFilterMatchOperator("CONTAINS")
	TemplateCategoryFilterMatchOperatorDoesNotContain = TemplateCategoryFilterMatchOperator("DOES_NOT_CONTAIN")
	TemplateCategoryFilterMatchOperatorStartsWith     = TemplateCategoryFilterMatchOperator("STARTS_WITH")
	TemplateCategoryFilterMatchOperatorEndsWith       = TemplateCategoryFilterMatchOperator("ENDS_WITH")
)

func (TemplateCategoryFilterMatchOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryFilterMatchOperator)(nil)).Elem()
}

func (e TemplateCategoryFilterMatchOperator) ToTemplateCategoryFilterMatchOperatorOutput() TemplateCategoryFilterMatchOperatorOutput {
	return pulumi.ToOutput(e).(TemplateCategoryFilterMatchOperatorOutput)
}

func (e TemplateCategoryFilterMatchOperator) ToTemplateCategoryFilterMatchOperatorOutputWithContext(ctx context.Context) TemplateCategoryFilterMatchOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateCategoryFilterMatchOperatorOutput)
}

func (e TemplateCategoryFilterMatchOperator) ToTemplateCategoryFilterMatchOperatorPtrOutput() TemplateCategoryFilterMatchOperatorPtrOutput {
	return e.ToTemplateCategoryFilterMatchOperatorPtrOutputWithContext(context.Background())
}

func (e TemplateCategoryFilterMatchOperator) ToTemplateCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterMatchOperatorPtrOutput {
	return TemplateCategoryFilterMatchOperator(e).ToTemplateCategoryFilterMatchOperatorOutputWithContext(ctx).ToTemplateCategoryFilterMatchOperatorPtrOutputWithContext(ctx)
}

func (e TemplateCategoryFilterMatchOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCategoryFilterMatchOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCategoryFilterMatchOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateCategoryFilterMatchOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateCategoryFilterMatchOperatorOutput struct{ *pulumi.OutputState }

func (TemplateCategoryFilterMatchOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryFilterMatchOperator)(nil)).Elem()
}

func (o TemplateCategoryFilterMatchOperatorOutput) ToTemplateCategoryFilterMatchOperatorOutput() TemplateCategoryFilterMatchOperatorOutput {
	return o
}

func (o TemplateCategoryFilterMatchOperatorOutput) ToTemplateCategoryFilterMatchOperatorOutputWithContext(ctx context.Context) TemplateCategoryFilterMatchOperatorOutput {
	return o
}

func (o TemplateCategoryFilterMatchOperatorOutput) ToTemplateCategoryFilterMatchOperatorPtrOutput() TemplateCategoryFilterMatchOperatorPtrOutput {
	return o.ToTemplateCategoryFilterMatchOperatorPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterMatchOperatorOutput) ToTemplateCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoryFilterMatchOperator) *TemplateCategoryFilterMatchOperator {
		return &v
	}).(TemplateCategoryFilterMatchOperatorPtrOutput)
}

func (o TemplateCategoryFilterMatchOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterMatchOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCategoryFilterMatchOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateCategoryFilterMatchOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterMatchOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCategoryFilterMatchOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateCategoryFilterMatchOperatorPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoryFilterMatchOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryFilterMatchOperator)(nil)).Elem()
}

func (o TemplateCategoryFilterMatchOperatorPtrOutput) ToTemplateCategoryFilterMatchOperatorPtrOutput() TemplateCategoryFilterMatchOperatorPtrOutput {
	return o
}

func (o TemplateCategoryFilterMatchOperatorPtrOutput) ToTemplateCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterMatchOperatorPtrOutput {
	return o
}

func (o TemplateCategoryFilterMatchOperatorPtrOutput) Elem() TemplateCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v *TemplateCategoryFilterMatchOperator) TemplateCategoryFilterMatchOperator {
		if v != nil {
			return *v
		}
		var ret TemplateCategoryFilterMatchOperator
		return ret
	}).(TemplateCategoryFilterMatchOperatorOutput)
}

func (o TemplateCategoryFilterMatchOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterMatchOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateCategoryFilterMatchOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateCategoryFilterMatchOperatorInput is an input type that accepts values of the TemplateCategoryFilterMatchOperator enum
// A concrete instance of `TemplateCategoryFilterMatchOperatorInput` can be one of the following:
//
//	TemplateCategoryFilterMatchOperatorEquals
//	TemplateCategoryFilterMatchOperatorDoesNotEqual
//	TemplateCategoryFilterMatchOperatorContains
//	TemplateCategoryFilterMatchOperatorDoesNotContain
//	TemplateCategoryFilterMatchOperatorStartsWith
//	TemplateCategoryFilterMatchOperatorEndsWith
type TemplateCategoryFilterMatchOperatorInput interface {
	pulumi.Input

	ToTemplateCategoryFilterMatchOperatorOutput() TemplateCategoryFilterMatchOperatorOutput
	ToTemplateCategoryFilterMatchOperatorOutputWithContext(context.Context) TemplateCategoryFilterMatchOperatorOutput
}

var templateCategoryFilterMatchOperatorPtrType = reflect.TypeOf((**TemplateCategoryFilterMatchOperator)(nil)).Elem()

type TemplateCategoryFilterMatchOperatorPtrInput interface {
	pulumi.Input

	ToTemplateCategoryFilterMatchOperatorPtrOutput() TemplateCategoryFilterMatchOperatorPtrOutput
	ToTemplateCategoryFilterMatchOperatorPtrOutputWithContext(context.Context) TemplateCategoryFilterMatchOperatorPtrOutput
}

type templateCategoryFilterMatchOperatorPtr string

func TemplateCategoryFilterMatchOperatorPtr(v string) TemplateCategoryFilterMatchOperatorPtrInput {
	return (*templateCategoryFilterMatchOperatorPtr)(&v)
}

func (*templateCategoryFilterMatchOperatorPtr) ElementType() reflect.Type {
	return templateCategoryFilterMatchOperatorPtrType
}

func (in *templateCategoryFilterMatchOperatorPtr) ToTemplateCategoryFilterMatchOperatorPtrOutput() TemplateCategoryFilterMatchOperatorPtrOutput {
	return pulumi.ToOutput(in).(TemplateCategoryFilterMatchOperatorPtrOutput)
}

func (in *templateCategoryFilterMatchOperatorPtr) ToTemplateCategoryFilterMatchOperatorPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterMatchOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateCategoryFilterMatchOperatorPtrOutput)
}

type TemplateCategoryFilterSelectAllOptions string

const (
	TemplateCategoryFilterSelectAllOptionsFilterAllValues = TemplateCategoryFilterSelectAllOptions("FILTER_ALL_VALUES")
)

func (TemplateCategoryFilterSelectAllOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryFilterSelectAllOptions)(nil)).Elem()
}

func (e TemplateCategoryFilterSelectAllOptions) ToTemplateCategoryFilterSelectAllOptionsOutput() TemplateCategoryFilterSelectAllOptionsOutput {
	return pulumi.ToOutput(e).(TemplateCategoryFilterSelectAllOptionsOutput)
}

func (e TemplateCategoryFilterSelectAllOptions) ToTemplateCategoryFilterSelectAllOptionsOutputWithContext(ctx context.Context) TemplateCategoryFilterSelectAllOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateCategoryFilterSelectAllOptionsOutput)
}

func (e TemplateCategoryFilterSelectAllOptions) ToTemplateCategoryFilterSelectAllOptionsPtrOutput() TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return e.ToTemplateCategoryFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (e TemplateCategoryFilterSelectAllOptions) ToTemplateCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return TemplateCategoryFilterSelectAllOptions(e).ToTemplateCategoryFilterSelectAllOptionsOutputWithContext(ctx).ToTemplateCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx)
}

func (e TemplateCategoryFilterSelectAllOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCategoryFilterSelectAllOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCategoryFilterSelectAllOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateCategoryFilterSelectAllOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateCategoryFilterSelectAllOptionsOutput struct{ *pulumi.OutputState }

func (TemplateCategoryFilterSelectAllOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryFilterSelectAllOptions)(nil)).Elem()
}

func (o TemplateCategoryFilterSelectAllOptionsOutput) ToTemplateCategoryFilterSelectAllOptionsOutput() TemplateCategoryFilterSelectAllOptionsOutput {
	return o
}

func (o TemplateCategoryFilterSelectAllOptionsOutput) ToTemplateCategoryFilterSelectAllOptionsOutputWithContext(ctx context.Context) TemplateCategoryFilterSelectAllOptionsOutput {
	return o
}

func (o TemplateCategoryFilterSelectAllOptionsOutput) ToTemplateCategoryFilterSelectAllOptionsPtrOutput() TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return o.ToTemplateCategoryFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterSelectAllOptionsOutput) ToTemplateCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoryFilterSelectAllOptions) *TemplateCategoryFilterSelectAllOptions {
		return &v
	}).(TemplateCategoryFilterSelectAllOptionsPtrOutput)
}

func (o TemplateCategoryFilterSelectAllOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterSelectAllOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCategoryFilterSelectAllOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateCategoryFilterSelectAllOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterSelectAllOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCategoryFilterSelectAllOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateCategoryFilterSelectAllOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoryFilterSelectAllOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryFilterSelectAllOptions)(nil)).Elem()
}

func (o TemplateCategoryFilterSelectAllOptionsPtrOutput) ToTemplateCategoryFilterSelectAllOptionsPtrOutput() TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return o
}

func (o TemplateCategoryFilterSelectAllOptionsPtrOutput) ToTemplateCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return o
}

func (o TemplateCategoryFilterSelectAllOptionsPtrOutput) Elem() TemplateCategoryFilterSelectAllOptionsOutput {
	return o.ApplyT(func(v *TemplateCategoryFilterSelectAllOptions) TemplateCategoryFilterSelectAllOptions {
		if v != nil {
			return *v
		}
		var ret TemplateCategoryFilterSelectAllOptions
		return ret
	}).(TemplateCategoryFilterSelectAllOptionsOutput)
}

func (o TemplateCategoryFilterSelectAllOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterSelectAllOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateCategoryFilterSelectAllOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateCategoryFilterSelectAllOptionsInput is an input type that accepts values of the TemplateCategoryFilterSelectAllOptions enum
// A concrete instance of `TemplateCategoryFilterSelectAllOptionsInput` can be one of the following:
//
//	TemplateCategoryFilterSelectAllOptionsFilterAllValues
type TemplateCategoryFilterSelectAllOptionsInput interface {
	pulumi.Input

	ToTemplateCategoryFilterSelectAllOptionsOutput() TemplateCategoryFilterSelectAllOptionsOutput
	ToTemplateCategoryFilterSelectAllOptionsOutputWithContext(context.Context) TemplateCategoryFilterSelectAllOptionsOutput
}

var templateCategoryFilterSelectAllOptionsPtrType = reflect.TypeOf((**TemplateCategoryFilterSelectAllOptions)(nil)).Elem()

type TemplateCategoryFilterSelectAllOptionsPtrInput interface {
	pulumi.Input

	ToTemplateCategoryFilterSelectAllOptionsPtrOutput() TemplateCategoryFilterSelectAllOptionsPtrOutput
	ToTemplateCategoryFilterSelectAllOptionsPtrOutputWithContext(context.Context) TemplateCategoryFilterSelectAllOptionsPtrOutput
}

type templateCategoryFilterSelectAllOptionsPtr string

func TemplateCategoryFilterSelectAllOptionsPtr(v string) TemplateCategoryFilterSelectAllOptionsPtrInput {
	return (*templateCategoryFilterSelectAllOptionsPtr)(&v)
}

func (*templateCategoryFilterSelectAllOptionsPtr) ElementType() reflect.Type {
	return templateCategoryFilterSelectAllOptionsPtrType
}

func (in *templateCategoryFilterSelectAllOptionsPtr) ToTemplateCategoryFilterSelectAllOptionsPtrOutput() TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutput(in).(TemplateCategoryFilterSelectAllOptionsPtrOutput)
}

func (in *templateCategoryFilterSelectAllOptionsPtr) ToTemplateCategoryFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateCategoryFilterSelectAllOptionsPtrOutput)
}

type TemplateColorFillType string

const (
	TemplateColorFillTypeDiscrete = TemplateColorFillType("DISCRETE")
	TemplateColorFillTypeGradient = TemplateColorFillType("GRADIENT")
)

func (TemplateColorFillType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColorFillType)(nil)).Elem()
}

func (e TemplateColorFillType) ToTemplateColorFillTypeOutput() TemplateColorFillTypeOutput {
	return pulumi.ToOutput(e).(TemplateColorFillTypeOutput)
}

func (e TemplateColorFillType) ToTemplateColorFillTypeOutputWithContext(ctx context.Context) TemplateColorFillTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateColorFillTypeOutput)
}

func (e TemplateColorFillType) ToTemplateColorFillTypePtrOutput() TemplateColorFillTypePtrOutput {
	return e.ToTemplateColorFillTypePtrOutputWithContext(context.Background())
}

func (e TemplateColorFillType) ToTemplateColorFillTypePtrOutputWithContext(ctx context.Context) TemplateColorFillTypePtrOutput {
	return TemplateColorFillType(e).ToTemplateColorFillTypeOutputWithContext(ctx).ToTemplateColorFillTypePtrOutputWithContext(ctx)
}

func (e TemplateColorFillType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateColorFillType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateColorFillType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateColorFillType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateColorFillTypeOutput struct{ *pulumi.OutputState }

func (TemplateColorFillTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColorFillType)(nil)).Elem()
}

func (o TemplateColorFillTypeOutput) ToTemplateColorFillTypeOutput() TemplateColorFillTypeOutput {
	return o
}

func (o TemplateColorFillTypeOutput) ToTemplateColorFillTypeOutputWithContext(ctx context.Context) TemplateColorFillTypeOutput {
	return o
}

func (o TemplateColorFillTypeOutput) ToTemplateColorFillTypePtrOutput() TemplateColorFillTypePtrOutput {
	return o.ToTemplateColorFillTypePtrOutputWithContext(context.Background())
}

func (o TemplateColorFillTypeOutput) ToTemplateColorFillTypePtrOutputWithContext(ctx context.Context) TemplateColorFillTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateColorFillType) *TemplateColorFillType {
		return &v
	}).(TemplateColorFillTypePtrOutput)
}

func (o TemplateColorFillTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateColorFillTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateColorFillType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateColorFillTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateColorFillTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateColorFillType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateColorFillTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateColorFillTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColorFillType)(nil)).Elem()
}

func (o TemplateColorFillTypePtrOutput) ToTemplateColorFillTypePtrOutput() TemplateColorFillTypePtrOutput {
	return o
}

func (o TemplateColorFillTypePtrOutput) ToTemplateColorFillTypePtrOutputWithContext(ctx context.Context) TemplateColorFillTypePtrOutput {
	return o
}

func (o TemplateColorFillTypePtrOutput) Elem() TemplateColorFillTypeOutput {
	return o.ApplyT(func(v *TemplateColorFillType) TemplateColorFillType {
		if v != nil {
			return *v
		}
		var ret TemplateColorFillType
		return ret
	}).(TemplateColorFillTypeOutput)
}

func (o TemplateColorFillTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateColorFillTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateColorFillType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateColorFillTypeInput is an input type that accepts values of the TemplateColorFillType enum
// A concrete instance of `TemplateColorFillTypeInput` can be one of the following:
//
//	TemplateColorFillTypeDiscrete
//	TemplateColorFillTypeGradient
type TemplateColorFillTypeInput interface {
	pulumi.Input

	ToTemplateColorFillTypeOutput() TemplateColorFillTypeOutput
	ToTemplateColorFillTypeOutputWithContext(context.Context) TemplateColorFillTypeOutput
}

var templateColorFillTypePtrType = reflect.TypeOf((**TemplateColorFillType)(nil)).Elem()

type TemplateColorFillTypePtrInput interface {
	pulumi.Input

	ToTemplateColorFillTypePtrOutput() TemplateColorFillTypePtrOutput
	ToTemplateColorFillTypePtrOutputWithContext(context.Context) TemplateColorFillTypePtrOutput
}

type templateColorFillTypePtr string

func TemplateColorFillTypePtr(v string) TemplateColorFillTypePtrInput {
	return (*templateColorFillTypePtr)(&v)
}

func (*templateColorFillTypePtr) ElementType() reflect.Type {
	return templateColorFillTypePtrType
}

func (in *templateColorFillTypePtr) ToTemplateColorFillTypePtrOutput() TemplateColorFillTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateColorFillTypePtrOutput)
}

func (in *templateColorFillTypePtr) ToTemplateColorFillTypePtrOutputWithContext(ctx context.Context) TemplateColorFillTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateColorFillTypePtrOutput)
}

type TemplateColumnRole string

const (
	TemplateColumnRoleDimension = TemplateColumnRole("DIMENSION")
	TemplateColumnRoleMeasure   = TemplateColumnRole("MEASURE")
)

func (TemplateColumnRole) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnRole)(nil)).Elem()
}

func (e TemplateColumnRole) ToTemplateColumnRoleOutput() TemplateColumnRoleOutput {
	return pulumi.ToOutput(e).(TemplateColumnRoleOutput)
}

func (e TemplateColumnRole) ToTemplateColumnRoleOutputWithContext(ctx context.Context) TemplateColumnRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateColumnRoleOutput)
}

func (e TemplateColumnRole) ToTemplateColumnRolePtrOutput() TemplateColumnRolePtrOutput {
	return e.ToTemplateColumnRolePtrOutputWithContext(context.Background())
}

func (e TemplateColumnRole) ToTemplateColumnRolePtrOutputWithContext(ctx context.Context) TemplateColumnRolePtrOutput {
	return TemplateColumnRole(e).ToTemplateColumnRoleOutputWithContext(ctx).ToTemplateColumnRolePtrOutputWithContext(ctx)
}

func (e TemplateColumnRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateColumnRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateColumnRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateColumnRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateColumnRoleOutput struct{ *pulumi.OutputState }

func (TemplateColumnRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnRole)(nil)).Elem()
}

func (o TemplateColumnRoleOutput) ToTemplateColumnRoleOutput() TemplateColumnRoleOutput {
	return o
}

func (o TemplateColumnRoleOutput) ToTemplateColumnRoleOutputWithContext(ctx context.Context) TemplateColumnRoleOutput {
	return o
}

func (o TemplateColumnRoleOutput) ToTemplateColumnRolePtrOutput() TemplateColumnRolePtrOutput {
	return o.ToTemplateColumnRolePtrOutputWithContext(context.Background())
}

func (o TemplateColumnRoleOutput) ToTemplateColumnRolePtrOutputWithContext(ctx context.Context) TemplateColumnRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateColumnRole) *TemplateColumnRole {
		return &v
	}).(TemplateColumnRolePtrOutput)
}

func (o TemplateColumnRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateColumnRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateColumnRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateColumnRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateColumnRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateColumnRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateColumnRolePtrOutput struct{ *pulumi.OutputState }

func (TemplateColumnRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColumnRole)(nil)).Elem()
}

func (o TemplateColumnRolePtrOutput) ToTemplateColumnRolePtrOutput() TemplateColumnRolePtrOutput {
	return o
}

func (o TemplateColumnRolePtrOutput) ToTemplateColumnRolePtrOutputWithContext(ctx context.Context) TemplateColumnRolePtrOutput {
	return o
}

func (o TemplateColumnRolePtrOutput) Elem() TemplateColumnRoleOutput {
	return o.ApplyT(func(v *TemplateColumnRole) TemplateColumnRole {
		if v != nil {
			return *v
		}
		var ret TemplateColumnRole
		return ret
	}).(TemplateColumnRoleOutput)
}

func (o TemplateColumnRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateColumnRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateColumnRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateColumnRoleInput is an input type that accepts values of the TemplateColumnRole enum
// A concrete instance of `TemplateColumnRoleInput` can be one of the following:
//
//	TemplateColumnRoleDimension
//	TemplateColumnRoleMeasure
type TemplateColumnRoleInput interface {
	pulumi.Input

	ToTemplateColumnRoleOutput() TemplateColumnRoleOutput
	ToTemplateColumnRoleOutputWithContext(context.Context) TemplateColumnRoleOutput
}

var templateColumnRolePtrType = reflect.TypeOf((**TemplateColumnRole)(nil)).Elem()

type TemplateColumnRolePtrInput interface {
	pulumi.Input

	ToTemplateColumnRolePtrOutput() TemplateColumnRolePtrOutput
	ToTemplateColumnRolePtrOutputWithContext(context.Context) TemplateColumnRolePtrOutput
}

type templateColumnRolePtr string

func TemplateColumnRolePtr(v string) TemplateColumnRolePtrInput {
	return (*templateColumnRolePtr)(&v)
}

func (*templateColumnRolePtr) ElementType() reflect.Type {
	return templateColumnRolePtrType
}

func (in *templateColumnRolePtr) ToTemplateColumnRolePtrOutput() TemplateColumnRolePtrOutput {
	return pulumi.ToOutput(in).(TemplateColumnRolePtrOutput)
}

func (in *templateColumnRolePtr) ToTemplateColumnRolePtrOutputWithContext(ctx context.Context) TemplateColumnRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateColumnRolePtrOutput)
}

type TemplateComparisonMethod string

const (
	TemplateComparisonMethodDifference        = TemplateComparisonMethod("DIFFERENCE")
	TemplateComparisonMethodPercentDifference = TemplateComparisonMethod("PERCENT_DIFFERENCE")
	TemplateComparisonMethodPercent           = TemplateComparisonMethod("PERCENT")
)

func (TemplateComparisonMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComparisonMethod)(nil)).Elem()
}

func (e TemplateComparisonMethod) ToTemplateComparisonMethodOutput() TemplateComparisonMethodOutput {
	return pulumi.ToOutput(e).(TemplateComparisonMethodOutput)
}

func (e TemplateComparisonMethod) ToTemplateComparisonMethodOutputWithContext(ctx context.Context) TemplateComparisonMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateComparisonMethodOutput)
}

func (e TemplateComparisonMethod) ToTemplateComparisonMethodPtrOutput() TemplateComparisonMethodPtrOutput {
	return e.ToTemplateComparisonMethodPtrOutputWithContext(context.Background())
}

func (e TemplateComparisonMethod) ToTemplateComparisonMethodPtrOutputWithContext(ctx context.Context) TemplateComparisonMethodPtrOutput {
	return TemplateComparisonMethod(e).ToTemplateComparisonMethodOutputWithContext(ctx).ToTemplateComparisonMethodPtrOutputWithContext(ctx)
}

func (e TemplateComparisonMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateComparisonMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateComparisonMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateComparisonMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateComparisonMethodOutput struct{ *pulumi.OutputState }

func (TemplateComparisonMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComparisonMethod)(nil)).Elem()
}

func (o TemplateComparisonMethodOutput) ToTemplateComparisonMethodOutput() TemplateComparisonMethodOutput {
	return o
}

func (o TemplateComparisonMethodOutput) ToTemplateComparisonMethodOutputWithContext(ctx context.Context) TemplateComparisonMethodOutput {
	return o
}

func (o TemplateComparisonMethodOutput) ToTemplateComparisonMethodPtrOutput() TemplateComparisonMethodPtrOutput {
	return o.ToTemplateComparisonMethodPtrOutputWithContext(context.Background())
}

func (o TemplateComparisonMethodOutput) ToTemplateComparisonMethodPtrOutputWithContext(ctx context.Context) TemplateComparisonMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateComparisonMethod) *TemplateComparisonMethod {
		return &v
	}).(TemplateComparisonMethodPtrOutput)
}

func (o TemplateComparisonMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateComparisonMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateComparisonMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateComparisonMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateComparisonMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateComparisonMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateComparisonMethodPtrOutput struct{ *pulumi.OutputState }

func (TemplateComparisonMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComparisonMethod)(nil)).Elem()
}

func (o TemplateComparisonMethodPtrOutput) ToTemplateComparisonMethodPtrOutput() TemplateComparisonMethodPtrOutput {
	return o
}

func (o TemplateComparisonMethodPtrOutput) ToTemplateComparisonMethodPtrOutputWithContext(ctx context.Context) TemplateComparisonMethodPtrOutput {
	return o
}

func (o TemplateComparisonMethodPtrOutput) Elem() TemplateComparisonMethodOutput {
	return o.ApplyT(func(v *TemplateComparisonMethod) TemplateComparisonMethod {
		if v != nil {
			return *v
		}
		var ret TemplateComparisonMethod
		return ret
	}).(TemplateComparisonMethodOutput)
}

func (o TemplateComparisonMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateComparisonMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateComparisonMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateComparisonMethodInput is an input type that accepts values of the TemplateComparisonMethod enum
// A concrete instance of `TemplateComparisonMethodInput` can be one of the following:
//
//	TemplateComparisonMethodDifference
//	TemplateComparisonMethodPercentDifference
//	TemplateComparisonMethodPercent
type TemplateComparisonMethodInput interface {
	pulumi.Input

	ToTemplateComparisonMethodOutput() TemplateComparisonMethodOutput
	ToTemplateComparisonMethodOutputWithContext(context.Context) TemplateComparisonMethodOutput
}

var templateComparisonMethodPtrType = reflect.TypeOf((**TemplateComparisonMethod)(nil)).Elem()

type TemplateComparisonMethodPtrInput interface {
	pulumi.Input

	ToTemplateComparisonMethodPtrOutput() TemplateComparisonMethodPtrOutput
	ToTemplateComparisonMethodPtrOutputWithContext(context.Context) TemplateComparisonMethodPtrOutput
}

type templateComparisonMethodPtr string

func TemplateComparisonMethodPtr(v string) TemplateComparisonMethodPtrInput {
	return (*templateComparisonMethodPtr)(&v)
}

func (*templateComparisonMethodPtr) ElementType() reflect.Type {
	return templateComparisonMethodPtrType
}

func (in *templateComparisonMethodPtr) ToTemplateComparisonMethodPtrOutput() TemplateComparisonMethodPtrOutput {
	return pulumi.ToOutput(in).(TemplateComparisonMethodPtrOutput)
}

func (in *templateComparisonMethodPtr) ToTemplateComparisonMethodPtrOutputWithContext(ctx context.Context) TemplateComparisonMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateComparisonMethodPtrOutput)
}

type TemplateConditionalFormattingIconDisplayOption string

const (
	TemplateConditionalFormattingIconDisplayOptionIconOnly = TemplateConditionalFormattingIconDisplayOption("ICON_ONLY")
)

func (TemplateConditionalFormattingIconDisplayOption) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingIconDisplayOption)(nil)).Elem()
}

func (e TemplateConditionalFormattingIconDisplayOption) ToTemplateConditionalFormattingIconDisplayOptionOutput() TemplateConditionalFormattingIconDisplayOptionOutput {
	return pulumi.ToOutput(e).(TemplateConditionalFormattingIconDisplayOptionOutput)
}

func (e TemplateConditionalFormattingIconDisplayOption) ToTemplateConditionalFormattingIconDisplayOptionOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateConditionalFormattingIconDisplayOptionOutput)
}

func (e TemplateConditionalFormattingIconDisplayOption) ToTemplateConditionalFormattingIconDisplayOptionPtrOutput() TemplateConditionalFormattingIconDisplayOptionPtrOutput {
	return e.ToTemplateConditionalFormattingIconDisplayOptionPtrOutputWithContext(context.Background())
}

func (e TemplateConditionalFormattingIconDisplayOption) ToTemplateConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayOptionPtrOutput {
	return TemplateConditionalFormattingIconDisplayOption(e).ToTemplateConditionalFormattingIconDisplayOptionOutputWithContext(ctx).ToTemplateConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx)
}

func (e TemplateConditionalFormattingIconDisplayOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateConditionalFormattingIconDisplayOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateConditionalFormattingIconDisplayOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateConditionalFormattingIconDisplayOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateConditionalFormattingIconDisplayOptionOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingIconDisplayOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingIconDisplayOption)(nil)).Elem()
}

func (o TemplateConditionalFormattingIconDisplayOptionOutput) ToTemplateConditionalFormattingIconDisplayOptionOutput() TemplateConditionalFormattingIconDisplayOptionOutput {
	return o
}

func (o TemplateConditionalFormattingIconDisplayOptionOutput) ToTemplateConditionalFormattingIconDisplayOptionOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayOptionOutput {
	return o
}

func (o TemplateConditionalFormattingIconDisplayOptionOutput) ToTemplateConditionalFormattingIconDisplayOptionPtrOutput() TemplateConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ToTemplateConditionalFormattingIconDisplayOptionPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconDisplayOptionOutput) ToTemplateConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateConditionalFormattingIconDisplayOption) *TemplateConditionalFormattingIconDisplayOption {
		return &v
	}).(TemplateConditionalFormattingIconDisplayOptionPtrOutput)
}

func (o TemplateConditionalFormattingIconDisplayOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconDisplayOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateConditionalFormattingIconDisplayOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateConditionalFormattingIconDisplayOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconDisplayOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateConditionalFormattingIconDisplayOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateConditionalFormattingIconDisplayOptionPtrOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingIconDisplayOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingIconDisplayOption)(nil)).Elem()
}

func (o TemplateConditionalFormattingIconDisplayOptionPtrOutput) ToTemplateConditionalFormattingIconDisplayOptionPtrOutput() TemplateConditionalFormattingIconDisplayOptionPtrOutput {
	return o
}

func (o TemplateConditionalFormattingIconDisplayOptionPtrOutput) ToTemplateConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayOptionPtrOutput {
	return o
}

func (o TemplateConditionalFormattingIconDisplayOptionPtrOutput) Elem() TemplateConditionalFormattingIconDisplayOptionOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingIconDisplayOption) TemplateConditionalFormattingIconDisplayOption {
		if v != nil {
			return *v
		}
		var ret TemplateConditionalFormattingIconDisplayOption
		return ret
	}).(TemplateConditionalFormattingIconDisplayOptionOutput)
}

func (o TemplateConditionalFormattingIconDisplayOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconDisplayOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateConditionalFormattingIconDisplayOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateConditionalFormattingIconDisplayOptionInput is an input type that accepts values of the TemplateConditionalFormattingIconDisplayOption enum
// A concrete instance of `TemplateConditionalFormattingIconDisplayOptionInput` can be one of the following:
//
//	TemplateConditionalFormattingIconDisplayOptionIconOnly
type TemplateConditionalFormattingIconDisplayOptionInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingIconDisplayOptionOutput() TemplateConditionalFormattingIconDisplayOptionOutput
	ToTemplateConditionalFormattingIconDisplayOptionOutputWithContext(context.Context) TemplateConditionalFormattingIconDisplayOptionOutput
}

var templateConditionalFormattingIconDisplayOptionPtrType = reflect.TypeOf((**TemplateConditionalFormattingIconDisplayOption)(nil)).Elem()

type TemplateConditionalFormattingIconDisplayOptionPtrInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingIconDisplayOptionPtrOutput() TemplateConditionalFormattingIconDisplayOptionPtrOutput
	ToTemplateConditionalFormattingIconDisplayOptionPtrOutputWithContext(context.Context) TemplateConditionalFormattingIconDisplayOptionPtrOutput
}

type templateConditionalFormattingIconDisplayOptionPtr string

func TemplateConditionalFormattingIconDisplayOptionPtr(v string) TemplateConditionalFormattingIconDisplayOptionPtrInput {
	return (*templateConditionalFormattingIconDisplayOptionPtr)(&v)
}

func (*templateConditionalFormattingIconDisplayOptionPtr) ElementType() reflect.Type {
	return templateConditionalFormattingIconDisplayOptionPtrType
}

func (in *templateConditionalFormattingIconDisplayOptionPtr) ToTemplateConditionalFormattingIconDisplayOptionPtrOutput() TemplateConditionalFormattingIconDisplayOptionPtrOutput {
	return pulumi.ToOutput(in).(TemplateConditionalFormattingIconDisplayOptionPtrOutput)
}

func (in *templateConditionalFormattingIconDisplayOptionPtr) ToTemplateConditionalFormattingIconDisplayOptionPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateConditionalFormattingIconDisplayOptionPtrOutput)
}

type TemplateConditionalFormattingIconSetType string

const (
	TemplateConditionalFormattingIconSetTypePlusMinus        = TemplateConditionalFormattingIconSetType("PLUS_MINUS")
	TemplateConditionalFormattingIconSetTypeCheckX           = TemplateConditionalFormattingIconSetType("CHECK_X")
	TemplateConditionalFormattingIconSetTypeThreeColorArrow  = TemplateConditionalFormattingIconSetType("THREE_COLOR_ARROW")
	TemplateConditionalFormattingIconSetTypeThreeGrayArrow   = TemplateConditionalFormattingIconSetType("THREE_GRAY_ARROW")
	TemplateConditionalFormattingIconSetTypeCaretUpMinusDown = TemplateConditionalFormattingIconSetType("CARET_UP_MINUS_DOWN")
	TemplateConditionalFormattingIconSetTypeThreeShape       = TemplateConditionalFormattingIconSetType("THREE_SHAPE")
	TemplateConditionalFormattingIconSetTypeThreeCircle      = TemplateConditionalFormattingIconSetType("THREE_CIRCLE")
	TemplateConditionalFormattingIconSetTypeFlags            = TemplateConditionalFormattingIconSetType("FLAGS")
	TemplateConditionalFormattingIconSetTypeBars             = TemplateConditionalFormattingIconSetType("BARS")
	TemplateConditionalFormattingIconSetTypeFourColorArrow   = TemplateConditionalFormattingIconSetType("FOUR_COLOR_ARROW")
	TemplateConditionalFormattingIconSetTypeFourGrayArrow    = TemplateConditionalFormattingIconSetType("FOUR_GRAY_ARROW")
)

func (TemplateConditionalFormattingIconSetType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingIconSetType)(nil)).Elem()
}

func (e TemplateConditionalFormattingIconSetType) ToTemplateConditionalFormattingIconSetTypeOutput() TemplateConditionalFormattingIconSetTypeOutput {
	return pulumi.ToOutput(e).(TemplateConditionalFormattingIconSetTypeOutput)
}

func (e TemplateConditionalFormattingIconSetType) ToTemplateConditionalFormattingIconSetTypeOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateConditionalFormattingIconSetTypeOutput)
}

func (e TemplateConditionalFormattingIconSetType) ToTemplateConditionalFormattingIconSetTypePtrOutput() TemplateConditionalFormattingIconSetTypePtrOutput {
	return e.ToTemplateConditionalFormattingIconSetTypePtrOutputWithContext(context.Background())
}

func (e TemplateConditionalFormattingIconSetType) ToTemplateConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetTypePtrOutput {
	return TemplateConditionalFormattingIconSetType(e).ToTemplateConditionalFormattingIconSetTypeOutputWithContext(ctx).ToTemplateConditionalFormattingIconSetTypePtrOutputWithContext(ctx)
}

func (e TemplateConditionalFormattingIconSetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateConditionalFormattingIconSetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateConditionalFormattingIconSetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateConditionalFormattingIconSetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateConditionalFormattingIconSetTypeOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingIconSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingIconSetType)(nil)).Elem()
}

func (o TemplateConditionalFormattingIconSetTypeOutput) ToTemplateConditionalFormattingIconSetTypeOutput() TemplateConditionalFormattingIconSetTypeOutput {
	return o
}

func (o TemplateConditionalFormattingIconSetTypeOutput) ToTemplateConditionalFormattingIconSetTypeOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetTypeOutput {
	return o
}

func (o TemplateConditionalFormattingIconSetTypeOutput) ToTemplateConditionalFormattingIconSetTypePtrOutput() TemplateConditionalFormattingIconSetTypePtrOutput {
	return o.ToTemplateConditionalFormattingIconSetTypePtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconSetTypeOutput) ToTemplateConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateConditionalFormattingIconSetType) *TemplateConditionalFormattingIconSetType {
		return &v
	}).(TemplateConditionalFormattingIconSetTypePtrOutput)
}

func (o TemplateConditionalFormattingIconSetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconSetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateConditionalFormattingIconSetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateConditionalFormattingIconSetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconSetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateConditionalFormattingIconSetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateConditionalFormattingIconSetTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingIconSetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingIconSetType)(nil)).Elem()
}

func (o TemplateConditionalFormattingIconSetTypePtrOutput) ToTemplateConditionalFormattingIconSetTypePtrOutput() TemplateConditionalFormattingIconSetTypePtrOutput {
	return o
}

func (o TemplateConditionalFormattingIconSetTypePtrOutput) ToTemplateConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetTypePtrOutput {
	return o
}

func (o TemplateConditionalFormattingIconSetTypePtrOutput) Elem() TemplateConditionalFormattingIconSetTypeOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingIconSetType) TemplateConditionalFormattingIconSetType {
		if v != nil {
			return *v
		}
		var ret TemplateConditionalFormattingIconSetType
		return ret
	}).(TemplateConditionalFormattingIconSetTypeOutput)
}

func (o TemplateConditionalFormattingIconSetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconSetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateConditionalFormattingIconSetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateConditionalFormattingIconSetTypeInput is an input type that accepts values of the TemplateConditionalFormattingIconSetType enum
// A concrete instance of `TemplateConditionalFormattingIconSetTypeInput` can be one of the following:
//
//	TemplateConditionalFormattingIconSetTypePlusMinus
//	TemplateConditionalFormattingIconSetTypeCheckX
//	TemplateConditionalFormattingIconSetTypeThreeColorArrow
//	TemplateConditionalFormattingIconSetTypeThreeGrayArrow
//	TemplateConditionalFormattingIconSetTypeCaretUpMinusDown
//	TemplateConditionalFormattingIconSetTypeThreeShape
//	TemplateConditionalFormattingIconSetTypeThreeCircle
//	TemplateConditionalFormattingIconSetTypeFlags
//	TemplateConditionalFormattingIconSetTypeBars
//	TemplateConditionalFormattingIconSetTypeFourColorArrow
//	TemplateConditionalFormattingIconSetTypeFourGrayArrow
type TemplateConditionalFormattingIconSetTypeInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingIconSetTypeOutput() TemplateConditionalFormattingIconSetTypeOutput
	ToTemplateConditionalFormattingIconSetTypeOutputWithContext(context.Context) TemplateConditionalFormattingIconSetTypeOutput
}

var templateConditionalFormattingIconSetTypePtrType = reflect.TypeOf((**TemplateConditionalFormattingIconSetType)(nil)).Elem()

type TemplateConditionalFormattingIconSetTypePtrInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingIconSetTypePtrOutput() TemplateConditionalFormattingIconSetTypePtrOutput
	ToTemplateConditionalFormattingIconSetTypePtrOutputWithContext(context.Context) TemplateConditionalFormattingIconSetTypePtrOutput
}

type templateConditionalFormattingIconSetTypePtr string

func TemplateConditionalFormattingIconSetTypePtr(v string) TemplateConditionalFormattingIconSetTypePtrInput {
	return (*templateConditionalFormattingIconSetTypePtr)(&v)
}

func (*templateConditionalFormattingIconSetTypePtr) ElementType() reflect.Type {
	return templateConditionalFormattingIconSetTypePtrType
}

func (in *templateConditionalFormattingIconSetTypePtr) ToTemplateConditionalFormattingIconSetTypePtrOutput() TemplateConditionalFormattingIconSetTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateConditionalFormattingIconSetTypePtrOutput)
}

func (in *templateConditionalFormattingIconSetTypePtr) ToTemplateConditionalFormattingIconSetTypePtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateConditionalFormattingIconSetTypePtrOutput)
}

type TemplateCrossDatasetTypes string

const (
	TemplateCrossDatasetTypesAllDatasets   = TemplateCrossDatasetTypes("ALL_DATASETS")
	TemplateCrossDatasetTypesSingleDataset = TemplateCrossDatasetTypes("SINGLE_DATASET")
)

func (TemplateCrossDatasetTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCrossDatasetTypes)(nil)).Elem()
}

func (e TemplateCrossDatasetTypes) ToTemplateCrossDatasetTypesOutput() TemplateCrossDatasetTypesOutput {
	return pulumi.ToOutput(e).(TemplateCrossDatasetTypesOutput)
}

func (e TemplateCrossDatasetTypes) ToTemplateCrossDatasetTypesOutputWithContext(ctx context.Context) TemplateCrossDatasetTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateCrossDatasetTypesOutput)
}

func (e TemplateCrossDatasetTypes) ToTemplateCrossDatasetTypesPtrOutput() TemplateCrossDatasetTypesPtrOutput {
	return e.ToTemplateCrossDatasetTypesPtrOutputWithContext(context.Background())
}

func (e TemplateCrossDatasetTypes) ToTemplateCrossDatasetTypesPtrOutputWithContext(ctx context.Context) TemplateCrossDatasetTypesPtrOutput {
	return TemplateCrossDatasetTypes(e).ToTemplateCrossDatasetTypesOutputWithContext(ctx).ToTemplateCrossDatasetTypesPtrOutputWithContext(ctx)
}

func (e TemplateCrossDatasetTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCrossDatasetTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCrossDatasetTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateCrossDatasetTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateCrossDatasetTypesOutput struct{ *pulumi.OutputState }

func (TemplateCrossDatasetTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCrossDatasetTypes)(nil)).Elem()
}

func (o TemplateCrossDatasetTypesOutput) ToTemplateCrossDatasetTypesOutput() TemplateCrossDatasetTypesOutput {
	return o
}

func (o TemplateCrossDatasetTypesOutput) ToTemplateCrossDatasetTypesOutputWithContext(ctx context.Context) TemplateCrossDatasetTypesOutput {
	return o
}

func (o TemplateCrossDatasetTypesOutput) ToTemplateCrossDatasetTypesPtrOutput() TemplateCrossDatasetTypesPtrOutput {
	return o.ToTemplateCrossDatasetTypesPtrOutputWithContext(context.Background())
}

func (o TemplateCrossDatasetTypesOutput) ToTemplateCrossDatasetTypesPtrOutputWithContext(ctx context.Context) TemplateCrossDatasetTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCrossDatasetTypes) *TemplateCrossDatasetTypes {
		return &v
	}).(TemplateCrossDatasetTypesPtrOutput)
}

func (o TemplateCrossDatasetTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateCrossDatasetTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCrossDatasetTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateCrossDatasetTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCrossDatasetTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCrossDatasetTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateCrossDatasetTypesPtrOutput struct{ *pulumi.OutputState }

func (TemplateCrossDatasetTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCrossDatasetTypes)(nil)).Elem()
}

func (o TemplateCrossDatasetTypesPtrOutput) ToTemplateCrossDatasetTypesPtrOutput() TemplateCrossDatasetTypesPtrOutput {
	return o
}

func (o TemplateCrossDatasetTypesPtrOutput) ToTemplateCrossDatasetTypesPtrOutputWithContext(ctx context.Context) TemplateCrossDatasetTypesPtrOutput {
	return o
}

func (o TemplateCrossDatasetTypesPtrOutput) Elem() TemplateCrossDatasetTypesOutput {
	return o.ApplyT(func(v *TemplateCrossDatasetTypes) TemplateCrossDatasetTypes {
		if v != nil {
			return *v
		}
		var ret TemplateCrossDatasetTypes
		return ret
	}).(TemplateCrossDatasetTypesOutput)
}

func (o TemplateCrossDatasetTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCrossDatasetTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateCrossDatasetTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateCrossDatasetTypesInput is an input type that accepts values of the TemplateCrossDatasetTypes enum
// A concrete instance of `TemplateCrossDatasetTypesInput` can be one of the following:
//
//	TemplateCrossDatasetTypesAllDatasets
//	TemplateCrossDatasetTypesSingleDataset
type TemplateCrossDatasetTypesInput interface {
	pulumi.Input

	ToTemplateCrossDatasetTypesOutput() TemplateCrossDatasetTypesOutput
	ToTemplateCrossDatasetTypesOutputWithContext(context.Context) TemplateCrossDatasetTypesOutput
}

var templateCrossDatasetTypesPtrType = reflect.TypeOf((**TemplateCrossDatasetTypes)(nil)).Elem()

type TemplateCrossDatasetTypesPtrInput interface {
	pulumi.Input

	ToTemplateCrossDatasetTypesPtrOutput() TemplateCrossDatasetTypesPtrOutput
	ToTemplateCrossDatasetTypesPtrOutputWithContext(context.Context) TemplateCrossDatasetTypesPtrOutput
}

type templateCrossDatasetTypesPtr string

func TemplateCrossDatasetTypesPtr(v string) TemplateCrossDatasetTypesPtrInput {
	return (*templateCrossDatasetTypesPtr)(&v)
}

func (*templateCrossDatasetTypesPtr) ElementType() reflect.Type {
	return templateCrossDatasetTypesPtrType
}

func (in *templateCrossDatasetTypesPtr) ToTemplateCrossDatasetTypesPtrOutput() TemplateCrossDatasetTypesPtrOutput {
	return pulumi.ToOutput(in).(TemplateCrossDatasetTypesPtrOutput)
}

func (in *templateCrossDatasetTypesPtr) ToTemplateCrossDatasetTypesPtrOutputWithContext(ctx context.Context) TemplateCrossDatasetTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateCrossDatasetTypesPtrOutput)
}

type TemplateCustomContentImageScalingConfiguration string

const (
	TemplateCustomContentImageScalingConfigurationFitToHeight   = TemplateCustomContentImageScalingConfiguration("FIT_TO_HEIGHT")
	TemplateCustomContentImageScalingConfigurationFitToWidth    = TemplateCustomContentImageScalingConfiguration("FIT_TO_WIDTH")
	TemplateCustomContentImageScalingConfigurationDoNotScale    = TemplateCustomContentImageScalingConfiguration("DO_NOT_SCALE")
	TemplateCustomContentImageScalingConfigurationScaleToVisual = TemplateCustomContentImageScalingConfiguration("SCALE_TO_VISUAL")
)

func (TemplateCustomContentImageScalingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomContentImageScalingConfiguration)(nil)).Elem()
}

func (e TemplateCustomContentImageScalingConfiguration) ToTemplateCustomContentImageScalingConfigurationOutput() TemplateCustomContentImageScalingConfigurationOutput {
	return pulumi.ToOutput(e).(TemplateCustomContentImageScalingConfigurationOutput)
}

func (e TemplateCustomContentImageScalingConfiguration) ToTemplateCustomContentImageScalingConfigurationOutputWithContext(ctx context.Context) TemplateCustomContentImageScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateCustomContentImageScalingConfigurationOutput)
}

func (e TemplateCustomContentImageScalingConfiguration) ToTemplateCustomContentImageScalingConfigurationPtrOutput() TemplateCustomContentImageScalingConfigurationPtrOutput {
	return e.ToTemplateCustomContentImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (e TemplateCustomContentImageScalingConfiguration) ToTemplateCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomContentImageScalingConfigurationPtrOutput {
	return TemplateCustomContentImageScalingConfiguration(e).ToTemplateCustomContentImageScalingConfigurationOutputWithContext(ctx).ToTemplateCustomContentImageScalingConfigurationPtrOutputWithContext(ctx)
}

func (e TemplateCustomContentImageScalingConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCustomContentImageScalingConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCustomContentImageScalingConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateCustomContentImageScalingConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateCustomContentImageScalingConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateCustomContentImageScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomContentImageScalingConfiguration)(nil)).Elem()
}

func (o TemplateCustomContentImageScalingConfigurationOutput) ToTemplateCustomContentImageScalingConfigurationOutput() TemplateCustomContentImageScalingConfigurationOutput {
	return o
}

func (o TemplateCustomContentImageScalingConfigurationOutput) ToTemplateCustomContentImageScalingConfigurationOutputWithContext(ctx context.Context) TemplateCustomContentImageScalingConfigurationOutput {
	return o
}

func (o TemplateCustomContentImageScalingConfigurationOutput) ToTemplateCustomContentImageScalingConfigurationPtrOutput() TemplateCustomContentImageScalingConfigurationPtrOutput {
	return o.ToTemplateCustomContentImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateCustomContentImageScalingConfigurationOutput) ToTemplateCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomContentImageScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomContentImageScalingConfiguration) *TemplateCustomContentImageScalingConfiguration {
		return &v
	}).(TemplateCustomContentImageScalingConfigurationPtrOutput)
}

func (o TemplateCustomContentImageScalingConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateCustomContentImageScalingConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCustomContentImageScalingConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateCustomContentImageScalingConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCustomContentImageScalingConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCustomContentImageScalingConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateCustomContentImageScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomContentImageScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomContentImageScalingConfiguration)(nil)).Elem()
}

func (o TemplateCustomContentImageScalingConfigurationPtrOutput) ToTemplateCustomContentImageScalingConfigurationPtrOutput() TemplateCustomContentImageScalingConfigurationPtrOutput {
	return o
}

func (o TemplateCustomContentImageScalingConfigurationPtrOutput) ToTemplateCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomContentImageScalingConfigurationPtrOutput {
	return o
}

func (o TemplateCustomContentImageScalingConfigurationPtrOutput) Elem() TemplateCustomContentImageScalingConfigurationOutput {
	return o.ApplyT(func(v *TemplateCustomContentImageScalingConfiguration) TemplateCustomContentImageScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateCustomContentImageScalingConfiguration
		return ret
	}).(TemplateCustomContentImageScalingConfigurationOutput)
}

func (o TemplateCustomContentImageScalingConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCustomContentImageScalingConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateCustomContentImageScalingConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateCustomContentImageScalingConfigurationInput is an input type that accepts values of the TemplateCustomContentImageScalingConfiguration enum
// A concrete instance of `TemplateCustomContentImageScalingConfigurationInput` can be one of the following:
//
//	TemplateCustomContentImageScalingConfigurationFitToHeight
//	TemplateCustomContentImageScalingConfigurationFitToWidth
//	TemplateCustomContentImageScalingConfigurationDoNotScale
//	TemplateCustomContentImageScalingConfigurationScaleToVisual
type TemplateCustomContentImageScalingConfigurationInput interface {
	pulumi.Input

	ToTemplateCustomContentImageScalingConfigurationOutput() TemplateCustomContentImageScalingConfigurationOutput
	ToTemplateCustomContentImageScalingConfigurationOutputWithContext(context.Context) TemplateCustomContentImageScalingConfigurationOutput
}

var templateCustomContentImageScalingConfigurationPtrType = reflect.TypeOf((**TemplateCustomContentImageScalingConfiguration)(nil)).Elem()

type TemplateCustomContentImageScalingConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateCustomContentImageScalingConfigurationPtrOutput() TemplateCustomContentImageScalingConfigurationPtrOutput
	ToTemplateCustomContentImageScalingConfigurationPtrOutputWithContext(context.Context) TemplateCustomContentImageScalingConfigurationPtrOutput
}

type templateCustomContentImageScalingConfigurationPtr string

func TemplateCustomContentImageScalingConfigurationPtr(v string) TemplateCustomContentImageScalingConfigurationPtrInput {
	return (*templateCustomContentImageScalingConfigurationPtr)(&v)
}

func (*templateCustomContentImageScalingConfigurationPtr) ElementType() reflect.Type {
	return templateCustomContentImageScalingConfigurationPtrType
}

func (in *templateCustomContentImageScalingConfigurationPtr) ToTemplateCustomContentImageScalingConfigurationPtrOutput() TemplateCustomContentImageScalingConfigurationPtrOutput {
	return pulumi.ToOutput(in).(TemplateCustomContentImageScalingConfigurationPtrOutput)
}

func (in *templateCustomContentImageScalingConfigurationPtr) ToTemplateCustomContentImageScalingConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomContentImageScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateCustomContentImageScalingConfigurationPtrOutput)
}

type TemplateCustomContentType string

const (
	TemplateCustomContentTypeImage                = TemplateCustomContentType("IMAGE")
	TemplateCustomContentTypeOtherEmbeddedContent = TemplateCustomContentType("OTHER_EMBEDDED_CONTENT")
)

func (TemplateCustomContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomContentType)(nil)).Elem()
}

func (e TemplateCustomContentType) ToTemplateCustomContentTypeOutput() TemplateCustomContentTypeOutput {
	return pulumi.ToOutput(e).(TemplateCustomContentTypeOutput)
}

func (e TemplateCustomContentType) ToTemplateCustomContentTypeOutputWithContext(ctx context.Context) TemplateCustomContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateCustomContentTypeOutput)
}

func (e TemplateCustomContentType) ToTemplateCustomContentTypePtrOutput() TemplateCustomContentTypePtrOutput {
	return e.ToTemplateCustomContentTypePtrOutputWithContext(context.Background())
}

func (e TemplateCustomContentType) ToTemplateCustomContentTypePtrOutputWithContext(ctx context.Context) TemplateCustomContentTypePtrOutput {
	return TemplateCustomContentType(e).ToTemplateCustomContentTypeOutputWithContext(ctx).ToTemplateCustomContentTypePtrOutputWithContext(ctx)
}

func (e TemplateCustomContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCustomContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateCustomContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateCustomContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateCustomContentTypeOutput struct{ *pulumi.OutputState }

func (TemplateCustomContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomContentType)(nil)).Elem()
}

func (o TemplateCustomContentTypeOutput) ToTemplateCustomContentTypeOutput() TemplateCustomContentTypeOutput {
	return o
}

func (o TemplateCustomContentTypeOutput) ToTemplateCustomContentTypeOutputWithContext(ctx context.Context) TemplateCustomContentTypeOutput {
	return o
}

func (o TemplateCustomContentTypeOutput) ToTemplateCustomContentTypePtrOutput() TemplateCustomContentTypePtrOutput {
	return o.ToTemplateCustomContentTypePtrOutputWithContext(context.Background())
}

func (o TemplateCustomContentTypeOutput) ToTemplateCustomContentTypePtrOutputWithContext(ctx context.Context) TemplateCustomContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomContentType) *TemplateCustomContentType {
		return &v
	}).(TemplateCustomContentTypePtrOutput)
}

func (o TemplateCustomContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateCustomContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCustomContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateCustomContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCustomContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateCustomContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateCustomContentTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomContentType)(nil)).Elem()
}

func (o TemplateCustomContentTypePtrOutput) ToTemplateCustomContentTypePtrOutput() TemplateCustomContentTypePtrOutput {
	return o
}

func (o TemplateCustomContentTypePtrOutput) ToTemplateCustomContentTypePtrOutputWithContext(ctx context.Context) TemplateCustomContentTypePtrOutput {
	return o
}

func (o TemplateCustomContentTypePtrOutput) Elem() TemplateCustomContentTypeOutput {
	return o.ApplyT(func(v *TemplateCustomContentType) TemplateCustomContentType {
		if v != nil {
			return *v
		}
		var ret TemplateCustomContentType
		return ret
	}).(TemplateCustomContentTypeOutput)
}

func (o TemplateCustomContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateCustomContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateCustomContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateCustomContentTypeInput is an input type that accepts values of the TemplateCustomContentType enum
// A concrete instance of `TemplateCustomContentTypeInput` can be one of the following:
//
//	TemplateCustomContentTypeImage
//	TemplateCustomContentTypeOtherEmbeddedContent
type TemplateCustomContentTypeInput interface {
	pulumi.Input

	ToTemplateCustomContentTypeOutput() TemplateCustomContentTypeOutput
	ToTemplateCustomContentTypeOutputWithContext(context.Context) TemplateCustomContentTypeOutput
}

var templateCustomContentTypePtrType = reflect.TypeOf((**TemplateCustomContentType)(nil)).Elem()

type TemplateCustomContentTypePtrInput interface {
	pulumi.Input

	ToTemplateCustomContentTypePtrOutput() TemplateCustomContentTypePtrOutput
	ToTemplateCustomContentTypePtrOutputWithContext(context.Context) TemplateCustomContentTypePtrOutput
}

type templateCustomContentTypePtr string

func TemplateCustomContentTypePtr(v string) TemplateCustomContentTypePtrInput {
	return (*templateCustomContentTypePtr)(&v)
}

func (*templateCustomContentTypePtr) ElementType() reflect.Type {
	return templateCustomContentTypePtrType
}

func (in *templateCustomContentTypePtr) ToTemplateCustomContentTypePtrOutput() TemplateCustomContentTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateCustomContentTypePtrOutput)
}

func (in *templateCustomContentTypePtr) ToTemplateCustomContentTypePtrOutputWithContext(ctx context.Context) TemplateCustomContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateCustomContentTypePtrOutput)
}

type TemplateDataLabelContent string

const (
	TemplateDataLabelContentValue           = TemplateDataLabelContent("VALUE")
	TemplateDataLabelContentPercent         = TemplateDataLabelContent("PERCENT")
	TemplateDataLabelContentValueAndPercent = TemplateDataLabelContent("VALUE_AND_PERCENT")
)

func (TemplateDataLabelContent) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataLabelContent)(nil)).Elem()
}

func (e TemplateDataLabelContent) ToTemplateDataLabelContentOutput() TemplateDataLabelContentOutput {
	return pulumi.ToOutput(e).(TemplateDataLabelContentOutput)
}

func (e TemplateDataLabelContent) ToTemplateDataLabelContentOutputWithContext(ctx context.Context) TemplateDataLabelContentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateDataLabelContentOutput)
}

func (e TemplateDataLabelContent) ToTemplateDataLabelContentPtrOutput() TemplateDataLabelContentPtrOutput {
	return e.ToTemplateDataLabelContentPtrOutputWithContext(context.Background())
}

func (e TemplateDataLabelContent) ToTemplateDataLabelContentPtrOutputWithContext(ctx context.Context) TemplateDataLabelContentPtrOutput {
	return TemplateDataLabelContent(e).ToTemplateDataLabelContentOutputWithContext(ctx).ToTemplateDataLabelContentPtrOutputWithContext(ctx)
}

func (e TemplateDataLabelContent) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateDataLabelContent) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateDataLabelContent) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateDataLabelContent) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateDataLabelContentOutput struct{ *pulumi.OutputState }

func (TemplateDataLabelContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataLabelContent)(nil)).Elem()
}

func (o TemplateDataLabelContentOutput) ToTemplateDataLabelContentOutput() TemplateDataLabelContentOutput {
	return o
}

func (o TemplateDataLabelContentOutput) ToTemplateDataLabelContentOutputWithContext(ctx context.Context) TemplateDataLabelContentOutput {
	return o
}

func (o TemplateDataLabelContentOutput) ToTemplateDataLabelContentPtrOutput() TemplateDataLabelContentPtrOutput {
	return o.ToTemplateDataLabelContentPtrOutputWithContext(context.Background())
}

func (o TemplateDataLabelContentOutput) ToTemplateDataLabelContentPtrOutputWithContext(ctx context.Context) TemplateDataLabelContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataLabelContent) *TemplateDataLabelContent {
		return &v
	}).(TemplateDataLabelContentPtrOutput)
}

func (o TemplateDataLabelContentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateDataLabelContentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateDataLabelContent) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateDataLabelContentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateDataLabelContentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateDataLabelContent) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateDataLabelContentPtrOutput struct{ *pulumi.OutputState }

func (TemplateDataLabelContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataLabelContent)(nil)).Elem()
}

func (o TemplateDataLabelContentPtrOutput) ToTemplateDataLabelContentPtrOutput() TemplateDataLabelContentPtrOutput {
	return o
}

func (o TemplateDataLabelContentPtrOutput) ToTemplateDataLabelContentPtrOutputWithContext(ctx context.Context) TemplateDataLabelContentPtrOutput {
	return o
}

func (o TemplateDataLabelContentPtrOutput) Elem() TemplateDataLabelContentOutput {
	return o.ApplyT(func(v *TemplateDataLabelContent) TemplateDataLabelContent {
		if v != nil {
			return *v
		}
		var ret TemplateDataLabelContent
		return ret
	}).(TemplateDataLabelContentOutput)
}

func (o TemplateDataLabelContentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateDataLabelContentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateDataLabelContent) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateDataLabelContentInput is an input type that accepts values of the TemplateDataLabelContent enum
// A concrete instance of `TemplateDataLabelContentInput` can be one of the following:
//
//	TemplateDataLabelContentValue
//	TemplateDataLabelContentPercent
//	TemplateDataLabelContentValueAndPercent
type TemplateDataLabelContentInput interface {
	pulumi.Input

	ToTemplateDataLabelContentOutput() TemplateDataLabelContentOutput
	ToTemplateDataLabelContentOutputWithContext(context.Context) TemplateDataLabelContentOutput
}

var templateDataLabelContentPtrType = reflect.TypeOf((**TemplateDataLabelContent)(nil)).Elem()

type TemplateDataLabelContentPtrInput interface {
	pulumi.Input

	ToTemplateDataLabelContentPtrOutput() TemplateDataLabelContentPtrOutput
	ToTemplateDataLabelContentPtrOutputWithContext(context.Context) TemplateDataLabelContentPtrOutput
}

type templateDataLabelContentPtr string

func TemplateDataLabelContentPtr(v string) TemplateDataLabelContentPtrInput {
	return (*templateDataLabelContentPtr)(&v)
}

func (*templateDataLabelContentPtr) ElementType() reflect.Type {
	return templateDataLabelContentPtrType
}

func (in *templateDataLabelContentPtr) ToTemplateDataLabelContentPtrOutput() TemplateDataLabelContentPtrOutput {
	return pulumi.ToOutput(in).(TemplateDataLabelContentPtrOutput)
}

func (in *templateDataLabelContentPtr) ToTemplateDataLabelContentPtrOutputWithContext(ctx context.Context) TemplateDataLabelContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateDataLabelContentPtrOutput)
}

type TemplateDataLabelOverlap string

const (
	TemplateDataLabelOverlapDisableOverlap = TemplateDataLabelOverlap("DISABLE_OVERLAP")
	TemplateDataLabelOverlapEnableOverlap  = TemplateDataLabelOverlap("ENABLE_OVERLAP")
)

func (TemplateDataLabelOverlap) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataLabelOverlap)(nil)).Elem()
}

func (e TemplateDataLabelOverlap) ToTemplateDataLabelOverlapOutput() TemplateDataLabelOverlapOutput {
	return pulumi.ToOutput(e).(TemplateDataLabelOverlapOutput)
}

func (e TemplateDataLabelOverlap) ToTemplateDataLabelOverlapOutputWithContext(ctx context.Context) TemplateDataLabelOverlapOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateDataLabelOverlapOutput)
}

func (e TemplateDataLabelOverlap) ToTemplateDataLabelOverlapPtrOutput() TemplateDataLabelOverlapPtrOutput {
	return e.ToTemplateDataLabelOverlapPtrOutputWithContext(context.Background())
}

func (e TemplateDataLabelOverlap) ToTemplateDataLabelOverlapPtrOutputWithContext(ctx context.Context) TemplateDataLabelOverlapPtrOutput {
	return TemplateDataLabelOverlap(e).ToTemplateDataLabelOverlapOutputWithContext(ctx).ToTemplateDataLabelOverlapPtrOutputWithContext(ctx)
}

func (e TemplateDataLabelOverlap) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateDataLabelOverlap) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateDataLabelOverlap) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateDataLabelOverlap) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateDataLabelOverlapOutput struct{ *pulumi.OutputState }

func (TemplateDataLabelOverlapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataLabelOverlap)(nil)).Elem()
}

func (o TemplateDataLabelOverlapOutput) ToTemplateDataLabelOverlapOutput() TemplateDataLabelOverlapOutput {
	return o
}

func (o TemplateDataLabelOverlapOutput) ToTemplateDataLabelOverlapOutputWithContext(ctx context.Context) TemplateDataLabelOverlapOutput {
	return o
}

func (o TemplateDataLabelOverlapOutput) ToTemplateDataLabelOverlapPtrOutput() TemplateDataLabelOverlapPtrOutput {
	return o.ToTemplateDataLabelOverlapPtrOutputWithContext(context.Background())
}

func (o TemplateDataLabelOverlapOutput) ToTemplateDataLabelOverlapPtrOutputWithContext(ctx context.Context) TemplateDataLabelOverlapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataLabelOverlap) *TemplateDataLabelOverlap {
		return &v
	}).(TemplateDataLabelOverlapPtrOutput)
}

func (o TemplateDataLabelOverlapOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateDataLabelOverlapOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateDataLabelOverlap) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateDataLabelOverlapOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateDataLabelOverlapOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateDataLabelOverlap) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateDataLabelOverlapPtrOutput struct{ *pulumi.OutputState }

func (TemplateDataLabelOverlapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataLabelOverlap)(nil)).Elem()
}

func (o TemplateDataLabelOverlapPtrOutput) ToTemplateDataLabelOverlapPtrOutput() TemplateDataLabelOverlapPtrOutput {
	return o
}

func (o TemplateDataLabelOverlapPtrOutput) ToTemplateDataLabelOverlapPtrOutputWithContext(ctx context.Context) TemplateDataLabelOverlapPtrOutput {
	return o
}

func (o TemplateDataLabelOverlapPtrOutput) Elem() TemplateDataLabelOverlapOutput {
	return o.ApplyT(func(v *TemplateDataLabelOverlap) TemplateDataLabelOverlap {
		if v != nil {
			return *v
		}
		var ret TemplateDataLabelOverlap
		return ret
	}).(TemplateDataLabelOverlapOutput)
}

func (o TemplateDataLabelOverlapPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateDataLabelOverlapPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateDataLabelOverlap) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateDataLabelOverlapInput is an input type that accepts values of the TemplateDataLabelOverlap enum
// A concrete instance of `TemplateDataLabelOverlapInput` can be one of the following:
//
//	TemplateDataLabelOverlapDisableOverlap
//	TemplateDataLabelOverlapEnableOverlap
type TemplateDataLabelOverlapInput interface {
	pulumi.Input

	ToTemplateDataLabelOverlapOutput() TemplateDataLabelOverlapOutput
	ToTemplateDataLabelOverlapOutputWithContext(context.Context) TemplateDataLabelOverlapOutput
}

var templateDataLabelOverlapPtrType = reflect.TypeOf((**TemplateDataLabelOverlap)(nil)).Elem()

type TemplateDataLabelOverlapPtrInput interface {
	pulumi.Input

	ToTemplateDataLabelOverlapPtrOutput() TemplateDataLabelOverlapPtrOutput
	ToTemplateDataLabelOverlapPtrOutputWithContext(context.Context) TemplateDataLabelOverlapPtrOutput
}

type templateDataLabelOverlapPtr string

func TemplateDataLabelOverlapPtr(v string) TemplateDataLabelOverlapPtrInput {
	return (*templateDataLabelOverlapPtr)(&v)
}

func (*templateDataLabelOverlapPtr) ElementType() reflect.Type {
	return templateDataLabelOverlapPtrType
}

func (in *templateDataLabelOverlapPtr) ToTemplateDataLabelOverlapPtrOutput() TemplateDataLabelOverlapPtrOutput {
	return pulumi.ToOutput(in).(TemplateDataLabelOverlapPtrOutput)
}

func (in *templateDataLabelOverlapPtr) ToTemplateDataLabelOverlapPtrOutputWithContext(ctx context.Context) TemplateDataLabelOverlapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateDataLabelOverlapPtrOutput)
}

type TemplateDataLabelPosition string

const (
	TemplateDataLabelPositionInside  = TemplateDataLabelPosition("INSIDE")
	TemplateDataLabelPositionOutside = TemplateDataLabelPosition("OUTSIDE")
	TemplateDataLabelPositionLeft    = TemplateDataLabelPosition("LEFT")
	TemplateDataLabelPositionTop     = TemplateDataLabelPosition("TOP")
	TemplateDataLabelPositionBottom  = TemplateDataLabelPosition("BOTTOM")
	TemplateDataLabelPositionRight   = TemplateDataLabelPosition("RIGHT")
)

func (TemplateDataLabelPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataLabelPosition)(nil)).Elem()
}

func (e TemplateDataLabelPosition) ToTemplateDataLabelPositionOutput() TemplateDataLabelPositionOutput {
	return pulumi.ToOutput(e).(TemplateDataLabelPositionOutput)
}

func (e TemplateDataLabelPosition) ToTemplateDataLabelPositionOutputWithContext(ctx context.Context) TemplateDataLabelPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateDataLabelPositionOutput)
}

func (e TemplateDataLabelPosition) ToTemplateDataLabelPositionPtrOutput() TemplateDataLabelPositionPtrOutput {
	return e.ToTemplateDataLabelPositionPtrOutputWithContext(context.Background())
}

func (e TemplateDataLabelPosition) ToTemplateDataLabelPositionPtrOutputWithContext(ctx context.Context) TemplateDataLabelPositionPtrOutput {
	return TemplateDataLabelPosition(e).ToTemplateDataLabelPositionOutputWithContext(ctx).ToTemplateDataLabelPositionPtrOutputWithContext(ctx)
}

func (e TemplateDataLabelPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateDataLabelPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateDataLabelPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateDataLabelPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateDataLabelPositionOutput struct{ *pulumi.OutputState }

func (TemplateDataLabelPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataLabelPosition)(nil)).Elem()
}

func (o TemplateDataLabelPositionOutput) ToTemplateDataLabelPositionOutput() TemplateDataLabelPositionOutput {
	return o
}

func (o TemplateDataLabelPositionOutput) ToTemplateDataLabelPositionOutputWithContext(ctx context.Context) TemplateDataLabelPositionOutput {
	return o
}

func (o TemplateDataLabelPositionOutput) ToTemplateDataLabelPositionPtrOutput() TemplateDataLabelPositionPtrOutput {
	return o.ToTemplateDataLabelPositionPtrOutputWithContext(context.Background())
}

func (o TemplateDataLabelPositionOutput) ToTemplateDataLabelPositionPtrOutputWithContext(ctx context.Context) TemplateDataLabelPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataLabelPosition) *TemplateDataLabelPosition {
		return &v
	}).(TemplateDataLabelPositionPtrOutput)
}

func (o TemplateDataLabelPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateDataLabelPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateDataLabelPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateDataLabelPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateDataLabelPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateDataLabelPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateDataLabelPositionPtrOutput struct{ *pulumi.OutputState }

func (TemplateDataLabelPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataLabelPosition)(nil)).Elem()
}

func (o TemplateDataLabelPositionPtrOutput) ToTemplateDataLabelPositionPtrOutput() TemplateDataLabelPositionPtrOutput {
	return o
}

func (o TemplateDataLabelPositionPtrOutput) ToTemplateDataLabelPositionPtrOutputWithContext(ctx context.Context) TemplateDataLabelPositionPtrOutput {
	return o
}

func (o TemplateDataLabelPositionPtrOutput) Elem() TemplateDataLabelPositionOutput {
	return o.ApplyT(func(v *TemplateDataLabelPosition) TemplateDataLabelPosition {
		if v != nil {
			return *v
		}
		var ret TemplateDataLabelPosition
		return ret
	}).(TemplateDataLabelPositionOutput)
}

func (o TemplateDataLabelPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateDataLabelPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateDataLabelPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateDataLabelPositionInput is an input type that accepts values of the TemplateDataLabelPosition enum
// A concrete instance of `TemplateDataLabelPositionInput` can be one of the following:
//
//	TemplateDataLabelPositionInside
//	TemplateDataLabelPositionOutside
//	TemplateDataLabelPositionLeft
//	TemplateDataLabelPositionTop
//	TemplateDataLabelPositionBottom
//	TemplateDataLabelPositionRight
type TemplateDataLabelPositionInput interface {
	pulumi.Input

	ToTemplateDataLabelPositionOutput() TemplateDataLabelPositionOutput
	ToTemplateDataLabelPositionOutputWithContext(context.Context) TemplateDataLabelPositionOutput
}

var templateDataLabelPositionPtrType = reflect.TypeOf((**TemplateDataLabelPosition)(nil)).Elem()

type TemplateDataLabelPositionPtrInput interface {
	pulumi.Input

	ToTemplateDataLabelPositionPtrOutput() TemplateDataLabelPositionPtrOutput
	ToTemplateDataLabelPositionPtrOutputWithContext(context.Context) TemplateDataLabelPositionPtrOutput
}

type templateDataLabelPositionPtr string

func TemplateDataLabelPositionPtr(v string) TemplateDataLabelPositionPtrInput {
	return (*templateDataLabelPositionPtr)(&v)
}

func (*templateDataLabelPositionPtr) ElementType() reflect.Type {
	return templateDataLabelPositionPtrType
}

func (in *templateDataLabelPositionPtr) ToTemplateDataLabelPositionPtrOutput() TemplateDataLabelPositionPtrOutput {
	return pulumi.ToOutput(in).(TemplateDataLabelPositionPtrOutput)
}

func (in *templateDataLabelPositionPtr) ToTemplateDataLabelPositionPtrOutputWithContext(ctx context.Context) TemplateDataLabelPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateDataLabelPositionPtrOutput)
}

type TemplateDateAggregationFunction string

const (
	TemplateDateAggregationFunctionCount         = TemplateDateAggregationFunction("COUNT")
	TemplateDateAggregationFunctionDistinctCount = TemplateDateAggregationFunction("DISTINCT_COUNT")
	TemplateDateAggregationFunctionMin           = TemplateDateAggregationFunction("MIN")
	TemplateDateAggregationFunctionMax           = TemplateDateAggregationFunction("MAX")
)

func (TemplateDateAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateAggregationFunction)(nil)).Elem()
}

func (e TemplateDateAggregationFunction) ToTemplateDateAggregationFunctionOutput() TemplateDateAggregationFunctionOutput {
	return pulumi.ToOutput(e).(TemplateDateAggregationFunctionOutput)
}

func (e TemplateDateAggregationFunction) ToTemplateDateAggregationFunctionOutputWithContext(ctx context.Context) TemplateDateAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateDateAggregationFunctionOutput)
}

func (e TemplateDateAggregationFunction) ToTemplateDateAggregationFunctionPtrOutput() TemplateDateAggregationFunctionPtrOutput {
	return e.ToTemplateDateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e TemplateDateAggregationFunction) ToTemplateDateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateDateAggregationFunctionPtrOutput {
	return TemplateDateAggregationFunction(e).ToTemplateDateAggregationFunctionOutputWithContext(ctx).ToTemplateDateAggregationFunctionPtrOutputWithContext(ctx)
}

func (e TemplateDateAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateDateAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateDateAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateDateAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateDateAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TemplateDateAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateAggregationFunction)(nil)).Elem()
}

func (o TemplateDateAggregationFunctionOutput) ToTemplateDateAggregationFunctionOutput() TemplateDateAggregationFunctionOutput {
	return o
}

func (o TemplateDateAggregationFunctionOutput) ToTemplateDateAggregationFunctionOutputWithContext(ctx context.Context) TemplateDateAggregationFunctionOutput {
	return o
}

func (o TemplateDateAggregationFunctionOutput) ToTemplateDateAggregationFunctionPtrOutput() TemplateDateAggregationFunctionPtrOutput {
	return o.ToTemplateDateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o TemplateDateAggregationFunctionOutput) ToTemplateDateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateDateAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDateAggregationFunction) *TemplateDateAggregationFunction {
		return &v
	}).(TemplateDateAggregationFunctionPtrOutput)
}

func (o TemplateDateAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateDateAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateDateAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateDateAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateDateAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateDateAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateDateAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (TemplateDateAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateAggregationFunction)(nil)).Elem()
}

func (o TemplateDateAggregationFunctionPtrOutput) ToTemplateDateAggregationFunctionPtrOutput() TemplateDateAggregationFunctionPtrOutput {
	return o
}

func (o TemplateDateAggregationFunctionPtrOutput) ToTemplateDateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateDateAggregationFunctionPtrOutput {
	return o
}

func (o TemplateDateAggregationFunctionPtrOutput) Elem() TemplateDateAggregationFunctionOutput {
	return o.ApplyT(func(v *TemplateDateAggregationFunction) TemplateDateAggregationFunction {
		if v != nil {
			return *v
		}
		var ret TemplateDateAggregationFunction
		return ret
	}).(TemplateDateAggregationFunctionOutput)
}

func (o TemplateDateAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateDateAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateDateAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateDateAggregationFunctionInput is an input type that accepts values of the TemplateDateAggregationFunction enum
// A concrete instance of `TemplateDateAggregationFunctionInput` can be one of the following:
//
//	TemplateDateAggregationFunctionCount
//	TemplateDateAggregationFunctionDistinctCount
//	TemplateDateAggregationFunctionMin
//	TemplateDateAggregationFunctionMax
type TemplateDateAggregationFunctionInput interface {
	pulumi.Input

	ToTemplateDateAggregationFunctionOutput() TemplateDateAggregationFunctionOutput
	ToTemplateDateAggregationFunctionOutputWithContext(context.Context) TemplateDateAggregationFunctionOutput
}

var templateDateAggregationFunctionPtrType = reflect.TypeOf((**TemplateDateAggregationFunction)(nil)).Elem()

type TemplateDateAggregationFunctionPtrInput interface {
	pulumi.Input

	ToTemplateDateAggregationFunctionPtrOutput() TemplateDateAggregationFunctionPtrOutput
	ToTemplateDateAggregationFunctionPtrOutputWithContext(context.Context) TemplateDateAggregationFunctionPtrOutput
}

type templateDateAggregationFunctionPtr string

func TemplateDateAggregationFunctionPtr(v string) TemplateDateAggregationFunctionPtrInput {
	return (*templateDateAggregationFunctionPtr)(&v)
}

func (*templateDateAggregationFunctionPtr) ElementType() reflect.Type {
	return templateDateAggregationFunctionPtrType
}

func (in *templateDateAggregationFunctionPtr) ToTemplateDateAggregationFunctionPtrOutput() TemplateDateAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(TemplateDateAggregationFunctionPtrOutput)
}

func (in *templateDateAggregationFunctionPtr) ToTemplateDateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateDateAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateDateAggregationFunctionPtrOutput)
}

type TemplateDayOfTheWeek string

const (
	TemplateDayOfTheWeekSunday    = TemplateDayOfTheWeek("SUNDAY")
	TemplateDayOfTheWeekMonday    = TemplateDayOfTheWeek("MONDAY")
	TemplateDayOfTheWeekTuesday   = TemplateDayOfTheWeek("TUESDAY")
	TemplateDayOfTheWeekWednesday = TemplateDayOfTheWeek("WEDNESDAY")
	TemplateDayOfTheWeekThursday  = TemplateDayOfTheWeek("THURSDAY")
	TemplateDayOfTheWeekFriday    = TemplateDayOfTheWeek("FRIDAY")
	TemplateDayOfTheWeekSaturday  = TemplateDayOfTheWeek("SATURDAY")
)

func (TemplateDayOfTheWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDayOfTheWeek)(nil)).Elem()
}

func (e TemplateDayOfTheWeek) ToTemplateDayOfTheWeekOutput() TemplateDayOfTheWeekOutput {
	return pulumi.ToOutput(e).(TemplateDayOfTheWeekOutput)
}

func (e TemplateDayOfTheWeek) ToTemplateDayOfTheWeekOutputWithContext(ctx context.Context) TemplateDayOfTheWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateDayOfTheWeekOutput)
}

func (e TemplateDayOfTheWeek) ToTemplateDayOfTheWeekPtrOutput() TemplateDayOfTheWeekPtrOutput {
	return e.ToTemplateDayOfTheWeekPtrOutputWithContext(context.Background())
}

func (e TemplateDayOfTheWeek) ToTemplateDayOfTheWeekPtrOutputWithContext(ctx context.Context) TemplateDayOfTheWeekPtrOutput {
	return TemplateDayOfTheWeek(e).ToTemplateDayOfTheWeekOutputWithContext(ctx).ToTemplateDayOfTheWeekPtrOutputWithContext(ctx)
}

func (e TemplateDayOfTheWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateDayOfTheWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateDayOfTheWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateDayOfTheWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateDayOfTheWeekOutput struct{ *pulumi.OutputState }

func (TemplateDayOfTheWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDayOfTheWeek)(nil)).Elem()
}

func (o TemplateDayOfTheWeekOutput) ToTemplateDayOfTheWeekOutput() TemplateDayOfTheWeekOutput {
	return o
}

func (o TemplateDayOfTheWeekOutput) ToTemplateDayOfTheWeekOutputWithContext(ctx context.Context) TemplateDayOfTheWeekOutput {
	return o
}

func (o TemplateDayOfTheWeekOutput) ToTemplateDayOfTheWeekPtrOutput() TemplateDayOfTheWeekPtrOutput {
	return o.ToTemplateDayOfTheWeekPtrOutputWithContext(context.Background())
}

func (o TemplateDayOfTheWeekOutput) ToTemplateDayOfTheWeekPtrOutputWithContext(ctx context.Context) TemplateDayOfTheWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDayOfTheWeek) *TemplateDayOfTheWeek {
		return &v
	}).(TemplateDayOfTheWeekPtrOutput)
}

func (o TemplateDayOfTheWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateDayOfTheWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateDayOfTheWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateDayOfTheWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateDayOfTheWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateDayOfTheWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateDayOfTheWeekPtrOutput struct{ *pulumi.OutputState }

func (TemplateDayOfTheWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDayOfTheWeek)(nil)).Elem()
}

func (o TemplateDayOfTheWeekPtrOutput) ToTemplateDayOfTheWeekPtrOutput() TemplateDayOfTheWeekPtrOutput {
	return o
}

func (o TemplateDayOfTheWeekPtrOutput) ToTemplateDayOfTheWeekPtrOutputWithContext(ctx context.Context) TemplateDayOfTheWeekPtrOutput {
	return o
}

func (o TemplateDayOfTheWeekPtrOutput) Elem() TemplateDayOfTheWeekOutput {
	return o.ApplyT(func(v *TemplateDayOfTheWeek) TemplateDayOfTheWeek {
		if v != nil {
			return *v
		}
		var ret TemplateDayOfTheWeek
		return ret
	}).(TemplateDayOfTheWeekOutput)
}

func (o TemplateDayOfTheWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateDayOfTheWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateDayOfTheWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateDayOfTheWeekInput is an input type that accepts values of the TemplateDayOfTheWeek enum
// A concrete instance of `TemplateDayOfTheWeekInput` can be one of the following:
//
//	TemplateDayOfTheWeekSunday
//	TemplateDayOfTheWeekMonday
//	TemplateDayOfTheWeekTuesday
//	TemplateDayOfTheWeekWednesday
//	TemplateDayOfTheWeekThursday
//	TemplateDayOfTheWeekFriday
//	TemplateDayOfTheWeekSaturday
type TemplateDayOfTheWeekInput interface {
	pulumi.Input

	ToTemplateDayOfTheWeekOutput() TemplateDayOfTheWeekOutput
	ToTemplateDayOfTheWeekOutputWithContext(context.Context) TemplateDayOfTheWeekOutput
}

var templateDayOfTheWeekPtrType = reflect.TypeOf((**TemplateDayOfTheWeek)(nil)).Elem()

type TemplateDayOfTheWeekPtrInput interface {
	pulumi.Input

	ToTemplateDayOfTheWeekPtrOutput() TemplateDayOfTheWeekPtrOutput
	ToTemplateDayOfTheWeekPtrOutputWithContext(context.Context) TemplateDayOfTheWeekPtrOutput
}

type templateDayOfTheWeekPtr string

func TemplateDayOfTheWeekPtr(v string) TemplateDayOfTheWeekPtrInput {
	return (*templateDayOfTheWeekPtr)(&v)
}

func (*templateDayOfTheWeekPtr) ElementType() reflect.Type {
	return templateDayOfTheWeekPtrType
}

func (in *templateDayOfTheWeekPtr) ToTemplateDayOfTheWeekPtrOutput() TemplateDayOfTheWeekPtrOutput {
	return pulumi.ToOutput(in).(TemplateDayOfTheWeekPtrOutput)
}

func (in *templateDayOfTheWeekPtr) ToTemplateDayOfTheWeekPtrOutputWithContext(ctx context.Context) TemplateDayOfTheWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateDayOfTheWeekPtrOutput)
}

type TemplateErrorType string

const (
	TemplateErrorTypeSourceNotFound  = TemplateErrorType("SOURCE_NOT_FOUND")
	TemplateErrorTypeDataSetNotFound = TemplateErrorType("DATA_SET_NOT_FOUND")
	TemplateErrorTypeInternalFailure = TemplateErrorType("INTERNAL_FAILURE")
	TemplateErrorTypeAccessDenied    = TemplateErrorType("ACCESS_DENIED")
)

type TemplateErrorTypeOutput struct{ *pulumi.OutputState }

func (TemplateErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateErrorType)(nil)).Elem()
}

func (o TemplateErrorTypeOutput) ToTemplateErrorTypeOutput() TemplateErrorTypeOutput {
	return o
}

func (o TemplateErrorTypeOutput) ToTemplateErrorTypeOutputWithContext(ctx context.Context) TemplateErrorTypeOutput {
	return o
}

func (o TemplateErrorTypeOutput) ToTemplateErrorTypePtrOutput() TemplateErrorTypePtrOutput {
	return o.ToTemplateErrorTypePtrOutputWithContext(context.Background())
}

func (o TemplateErrorTypeOutput) ToTemplateErrorTypePtrOutputWithContext(ctx context.Context) TemplateErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateErrorType) *TemplateErrorType {
		return &v
	}).(TemplateErrorTypePtrOutput)
}

func (o TemplateErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateErrorTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateErrorType)(nil)).Elem()
}

func (o TemplateErrorTypePtrOutput) ToTemplateErrorTypePtrOutput() TemplateErrorTypePtrOutput {
	return o
}

func (o TemplateErrorTypePtrOutput) ToTemplateErrorTypePtrOutputWithContext(ctx context.Context) TemplateErrorTypePtrOutput {
	return o
}

func (o TemplateErrorTypePtrOutput) Elem() TemplateErrorTypeOutput {
	return o.ApplyT(func(v *TemplateErrorType) TemplateErrorType {
		if v != nil {
			return *v
		}
		var ret TemplateErrorType
		return ret
	}).(TemplateErrorTypeOutput)
}

func (o TemplateErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateFilterNullOption string

const (
	TemplateFilterNullOptionAllValues    = TemplateFilterNullOption("ALL_VALUES")
	TemplateFilterNullOptionNullsOnly    = TemplateFilterNullOption("NULLS_ONLY")
	TemplateFilterNullOptionNonNullsOnly = TemplateFilterNullOption("NON_NULLS_ONLY")
)

func (TemplateFilterNullOption) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterNullOption)(nil)).Elem()
}

func (e TemplateFilterNullOption) ToTemplateFilterNullOptionOutput() TemplateFilterNullOptionOutput {
	return pulumi.ToOutput(e).(TemplateFilterNullOptionOutput)
}

func (e TemplateFilterNullOption) ToTemplateFilterNullOptionOutputWithContext(ctx context.Context) TemplateFilterNullOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateFilterNullOptionOutput)
}

func (e TemplateFilterNullOption) ToTemplateFilterNullOptionPtrOutput() TemplateFilterNullOptionPtrOutput {
	return e.ToTemplateFilterNullOptionPtrOutputWithContext(context.Background())
}

func (e TemplateFilterNullOption) ToTemplateFilterNullOptionPtrOutputWithContext(ctx context.Context) TemplateFilterNullOptionPtrOutput {
	return TemplateFilterNullOption(e).ToTemplateFilterNullOptionOutputWithContext(ctx).ToTemplateFilterNullOptionPtrOutputWithContext(ctx)
}

func (e TemplateFilterNullOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFilterNullOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFilterNullOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateFilterNullOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateFilterNullOptionOutput struct{ *pulumi.OutputState }

func (TemplateFilterNullOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterNullOption)(nil)).Elem()
}

func (o TemplateFilterNullOptionOutput) ToTemplateFilterNullOptionOutput() TemplateFilterNullOptionOutput {
	return o
}

func (o TemplateFilterNullOptionOutput) ToTemplateFilterNullOptionOutputWithContext(ctx context.Context) TemplateFilterNullOptionOutput {
	return o
}

func (o TemplateFilterNullOptionOutput) ToTemplateFilterNullOptionPtrOutput() TemplateFilterNullOptionPtrOutput {
	return o.ToTemplateFilterNullOptionPtrOutputWithContext(context.Background())
}

func (o TemplateFilterNullOptionOutput) ToTemplateFilterNullOptionPtrOutputWithContext(ctx context.Context) TemplateFilterNullOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterNullOption) *TemplateFilterNullOption {
		return &v
	}).(TemplateFilterNullOptionPtrOutput)
}

func (o TemplateFilterNullOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateFilterNullOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFilterNullOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateFilterNullOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFilterNullOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFilterNullOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateFilterNullOptionPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterNullOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterNullOption)(nil)).Elem()
}

func (o TemplateFilterNullOptionPtrOutput) ToTemplateFilterNullOptionPtrOutput() TemplateFilterNullOptionPtrOutput {
	return o
}

func (o TemplateFilterNullOptionPtrOutput) ToTemplateFilterNullOptionPtrOutputWithContext(ctx context.Context) TemplateFilterNullOptionPtrOutput {
	return o
}

func (o TemplateFilterNullOptionPtrOutput) Elem() TemplateFilterNullOptionOutput {
	return o.ApplyT(func(v *TemplateFilterNullOption) TemplateFilterNullOption {
		if v != nil {
			return *v
		}
		var ret TemplateFilterNullOption
		return ret
	}).(TemplateFilterNullOptionOutput)
}

func (o TemplateFilterNullOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFilterNullOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateFilterNullOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateFilterNullOptionInput is an input type that accepts values of the TemplateFilterNullOption enum
// A concrete instance of `TemplateFilterNullOptionInput` can be one of the following:
//
//	TemplateFilterNullOptionAllValues
//	TemplateFilterNullOptionNullsOnly
//	TemplateFilterNullOptionNonNullsOnly
type TemplateFilterNullOptionInput interface {
	pulumi.Input

	ToTemplateFilterNullOptionOutput() TemplateFilterNullOptionOutput
	ToTemplateFilterNullOptionOutputWithContext(context.Context) TemplateFilterNullOptionOutput
}

var templateFilterNullOptionPtrType = reflect.TypeOf((**TemplateFilterNullOption)(nil)).Elem()

type TemplateFilterNullOptionPtrInput interface {
	pulumi.Input

	ToTemplateFilterNullOptionPtrOutput() TemplateFilterNullOptionPtrOutput
	ToTemplateFilterNullOptionPtrOutputWithContext(context.Context) TemplateFilterNullOptionPtrOutput
}

type templateFilterNullOptionPtr string

func TemplateFilterNullOptionPtr(v string) TemplateFilterNullOptionPtrInput {
	return (*templateFilterNullOptionPtr)(&v)
}

func (*templateFilterNullOptionPtr) ElementType() reflect.Type {
	return templateFilterNullOptionPtrType
}

func (in *templateFilterNullOptionPtr) ToTemplateFilterNullOptionPtrOutput() TemplateFilterNullOptionPtrOutput {
	return pulumi.ToOutput(in).(TemplateFilterNullOptionPtrOutput)
}

func (in *templateFilterNullOptionPtr) ToTemplateFilterNullOptionPtrOutputWithContext(ctx context.Context) TemplateFilterNullOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateFilterNullOptionPtrOutput)
}

type TemplateFilterVisualScope string

const (
	TemplateFilterVisualScopeAllVisuals      = TemplateFilterVisualScope("ALL_VISUALS")
	TemplateFilterVisualScopeSelectedVisuals = TemplateFilterVisualScope("SELECTED_VISUALS")
)

func (TemplateFilterVisualScope) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterVisualScope)(nil)).Elem()
}

func (e TemplateFilterVisualScope) ToTemplateFilterVisualScopeOutput() TemplateFilterVisualScopeOutput {
	return pulumi.ToOutput(e).(TemplateFilterVisualScopeOutput)
}

func (e TemplateFilterVisualScope) ToTemplateFilterVisualScopeOutputWithContext(ctx context.Context) TemplateFilterVisualScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateFilterVisualScopeOutput)
}

func (e TemplateFilterVisualScope) ToTemplateFilterVisualScopePtrOutput() TemplateFilterVisualScopePtrOutput {
	return e.ToTemplateFilterVisualScopePtrOutputWithContext(context.Background())
}

func (e TemplateFilterVisualScope) ToTemplateFilterVisualScopePtrOutputWithContext(ctx context.Context) TemplateFilterVisualScopePtrOutput {
	return TemplateFilterVisualScope(e).ToTemplateFilterVisualScopeOutputWithContext(ctx).ToTemplateFilterVisualScopePtrOutputWithContext(ctx)
}

func (e TemplateFilterVisualScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFilterVisualScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFilterVisualScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateFilterVisualScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateFilterVisualScopeOutput struct{ *pulumi.OutputState }

func (TemplateFilterVisualScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterVisualScope)(nil)).Elem()
}

func (o TemplateFilterVisualScopeOutput) ToTemplateFilterVisualScopeOutput() TemplateFilterVisualScopeOutput {
	return o
}

func (o TemplateFilterVisualScopeOutput) ToTemplateFilterVisualScopeOutputWithContext(ctx context.Context) TemplateFilterVisualScopeOutput {
	return o
}

func (o TemplateFilterVisualScopeOutput) ToTemplateFilterVisualScopePtrOutput() TemplateFilterVisualScopePtrOutput {
	return o.ToTemplateFilterVisualScopePtrOutputWithContext(context.Background())
}

func (o TemplateFilterVisualScopeOutput) ToTemplateFilterVisualScopePtrOutputWithContext(ctx context.Context) TemplateFilterVisualScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterVisualScope) *TemplateFilterVisualScope {
		return &v
	}).(TemplateFilterVisualScopePtrOutput)
}

func (o TemplateFilterVisualScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateFilterVisualScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFilterVisualScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateFilterVisualScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFilterVisualScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFilterVisualScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateFilterVisualScopePtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterVisualScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterVisualScope)(nil)).Elem()
}

func (o TemplateFilterVisualScopePtrOutput) ToTemplateFilterVisualScopePtrOutput() TemplateFilterVisualScopePtrOutput {
	return o
}

func (o TemplateFilterVisualScopePtrOutput) ToTemplateFilterVisualScopePtrOutputWithContext(ctx context.Context) TemplateFilterVisualScopePtrOutput {
	return o
}

func (o TemplateFilterVisualScopePtrOutput) Elem() TemplateFilterVisualScopeOutput {
	return o.ApplyT(func(v *TemplateFilterVisualScope) TemplateFilterVisualScope {
		if v != nil {
			return *v
		}
		var ret TemplateFilterVisualScope
		return ret
	}).(TemplateFilterVisualScopeOutput)
}

func (o TemplateFilterVisualScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFilterVisualScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateFilterVisualScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateFilterVisualScopeInput is an input type that accepts values of the TemplateFilterVisualScope enum
// A concrete instance of `TemplateFilterVisualScopeInput` can be one of the following:
//
//	TemplateFilterVisualScopeAllVisuals
//	TemplateFilterVisualScopeSelectedVisuals
type TemplateFilterVisualScopeInput interface {
	pulumi.Input

	ToTemplateFilterVisualScopeOutput() TemplateFilterVisualScopeOutput
	ToTemplateFilterVisualScopeOutputWithContext(context.Context) TemplateFilterVisualScopeOutput
}

var templateFilterVisualScopePtrType = reflect.TypeOf((**TemplateFilterVisualScope)(nil)).Elem()

type TemplateFilterVisualScopePtrInput interface {
	pulumi.Input

	ToTemplateFilterVisualScopePtrOutput() TemplateFilterVisualScopePtrOutput
	ToTemplateFilterVisualScopePtrOutputWithContext(context.Context) TemplateFilterVisualScopePtrOutput
}

type templateFilterVisualScopePtr string

func TemplateFilterVisualScopePtr(v string) TemplateFilterVisualScopePtrInput {
	return (*templateFilterVisualScopePtr)(&v)
}

func (*templateFilterVisualScopePtr) ElementType() reflect.Type {
	return templateFilterVisualScopePtrType
}

func (in *templateFilterVisualScopePtr) ToTemplateFilterVisualScopePtrOutput() TemplateFilterVisualScopePtrOutput {
	return pulumi.ToOutput(in).(TemplateFilterVisualScopePtrOutput)
}

func (in *templateFilterVisualScopePtr) ToTemplateFilterVisualScopePtrOutputWithContext(ctx context.Context) TemplateFilterVisualScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateFilterVisualScopePtrOutput)
}

type TemplateFontDecoration string

const (
	TemplateFontDecorationUnderline = TemplateFontDecoration("UNDERLINE")
	TemplateFontDecorationNone      = TemplateFontDecoration("NONE")
)

func (TemplateFontDecoration) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontDecoration)(nil)).Elem()
}

func (e TemplateFontDecoration) ToTemplateFontDecorationOutput() TemplateFontDecorationOutput {
	return pulumi.ToOutput(e).(TemplateFontDecorationOutput)
}

func (e TemplateFontDecoration) ToTemplateFontDecorationOutputWithContext(ctx context.Context) TemplateFontDecorationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateFontDecorationOutput)
}

func (e TemplateFontDecoration) ToTemplateFontDecorationPtrOutput() TemplateFontDecorationPtrOutput {
	return e.ToTemplateFontDecorationPtrOutputWithContext(context.Background())
}

func (e TemplateFontDecoration) ToTemplateFontDecorationPtrOutputWithContext(ctx context.Context) TemplateFontDecorationPtrOutput {
	return TemplateFontDecoration(e).ToTemplateFontDecorationOutputWithContext(ctx).ToTemplateFontDecorationPtrOutputWithContext(ctx)
}

func (e TemplateFontDecoration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFontDecoration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFontDecoration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateFontDecoration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateFontDecorationOutput struct{ *pulumi.OutputState }

func (TemplateFontDecorationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontDecoration)(nil)).Elem()
}

func (o TemplateFontDecorationOutput) ToTemplateFontDecorationOutput() TemplateFontDecorationOutput {
	return o
}

func (o TemplateFontDecorationOutput) ToTemplateFontDecorationOutputWithContext(ctx context.Context) TemplateFontDecorationOutput {
	return o
}

func (o TemplateFontDecorationOutput) ToTemplateFontDecorationPtrOutput() TemplateFontDecorationPtrOutput {
	return o.ToTemplateFontDecorationPtrOutputWithContext(context.Background())
}

func (o TemplateFontDecorationOutput) ToTemplateFontDecorationPtrOutputWithContext(ctx context.Context) TemplateFontDecorationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFontDecoration) *TemplateFontDecoration {
		return &v
	}).(TemplateFontDecorationPtrOutput)
}

func (o TemplateFontDecorationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateFontDecorationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFontDecoration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateFontDecorationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFontDecorationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFontDecoration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateFontDecorationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFontDecorationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFontDecoration)(nil)).Elem()
}

func (o TemplateFontDecorationPtrOutput) ToTemplateFontDecorationPtrOutput() TemplateFontDecorationPtrOutput {
	return o
}

func (o TemplateFontDecorationPtrOutput) ToTemplateFontDecorationPtrOutputWithContext(ctx context.Context) TemplateFontDecorationPtrOutput {
	return o
}

func (o TemplateFontDecorationPtrOutput) Elem() TemplateFontDecorationOutput {
	return o.ApplyT(func(v *TemplateFontDecoration) TemplateFontDecoration {
		if v != nil {
			return *v
		}
		var ret TemplateFontDecoration
		return ret
	}).(TemplateFontDecorationOutput)
}

func (o TemplateFontDecorationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFontDecorationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateFontDecoration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateFontDecorationInput is an input type that accepts values of the TemplateFontDecoration enum
// A concrete instance of `TemplateFontDecorationInput` can be one of the following:
//
//	TemplateFontDecorationUnderline
//	TemplateFontDecorationNone
type TemplateFontDecorationInput interface {
	pulumi.Input

	ToTemplateFontDecorationOutput() TemplateFontDecorationOutput
	ToTemplateFontDecorationOutputWithContext(context.Context) TemplateFontDecorationOutput
}

var templateFontDecorationPtrType = reflect.TypeOf((**TemplateFontDecoration)(nil)).Elem()

type TemplateFontDecorationPtrInput interface {
	pulumi.Input

	ToTemplateFontDecorationPtrOutput() TemplateFontDecorationPtrOutput
	ToTemplateFontDecorationPtrOutputWithContext(context.Context) TemplateFontDecorationPtrOutput
}

type templateFontDecorationPtr string

func TemplateFontDecorationPtr(v string) TemplateFontDecorationPtrInput {
	return (*templateFontDecorationPtr)(&v)
}

func (*templateFontDecorationPtr) ElementType() reflect.Type {
	return templateFontDecorationPtrType
}

func (in *templateFontDecorationPtr) ToTemplateFontDecorationPtrOutput() TemplateFontDecorationPtrOutput {
	return pulumi.ToOutput(in).(TemplateFontDecorationPtrOutput)
}

func (in *templateFontDecorationPtr) ToTemplateFontDecorationPtrOutputWithContext(ctx context.Context) TemplateFontDecorationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateFontDecorationPtrOutput)
}

type TemplateFontStyle string

const (
	TemplateFontStyleNormal = TemplateFontStyle("NORMAL")
	TemplateFontStyleItalic = TemplateFontStyle("ITALIC")
)

func (TemplateFontStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontStyle)(nil)).Elem()
}

func (e TemplateFontStyle) ToTemplateFontStyleOutput() TemplateFontStyleOutput {
	return pulumi.ToOutput(e).(TemplateFontStyleOutput)
}

func (e TemplateFontStyle) ToTemplateFontStyleOutputWithContext(ctx context.Context) TemplateFontStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateFontStyleOutput)
}

func (e TemplateFontStyle) ToTemplateFontStylePtrOutput() TemplateFontStylePtrOutput {
	return e.ToTemplateFontStylePtrOutputWithContext(context.Background())
}

func (e TemplateFontStyle) ToTemplateFontStylePtrOutputWithContext(ctx context.Context) TemplateFontStylePtrOutput {
	return TemplateFontStyle(e).ToTemplateFontStyleOutputWithContext(ctx).ToTemplateFontStylePtrOutputWithContext(ctx)
}

func (e TemplateFontStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFontStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFontStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateFontStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateFontStyleOutput struct{ *pulumi.OutputState }

func (TemplateFontStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontStyle)(nil)).Elem()
}

func (o TemplateFontStyleOutput) ToTemplateFontStyleOutput() TemplateFontStyleOutput {
	return o
}

func (o TemplateFontStyleOutput) ToTemplateFontStyleOutputWithContext(ctx context.Context) TemplateFontStyleOutput {
	return o
}

func (o TemplateFontStyleOutput) ToTemplateFontStylePtrOutput() TemplateFontStylePtrOutput {
	return o.ToTemplateFontStylePtrOutputWithContext(context.Background())
}

func (o TemplateFontStyleOutput) ToTemplateFontStylePtrOutputWithContext(ctx context.Context) TemplateFontStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFontStyle) *TemplateFontStyle {
		return &v
	}).(TemplateFontStylePtrOutput)
}

func (o TemplateFontStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateFontStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFontStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateFontStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFontStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFontStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateFontStylePtrOutput struct{ *pulumi.OutputState }

func (TemplateFontStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFontStyle)(nil)).Elem()
}

func (o TemplateFontStylePtrOutput) ToTemplateFontStylePtrOutput() TemplateFontStylePtrOutput {
	return o
}

func (o TemplateFontStylePtrOutput) ToTemplateFontStylePtrOutputWithContext(ctx context.Context) TemplateFontStylePtrOutput {
	return o
}

func (o TemplateFontStylePtrOutput) Elem() TemplateFontStyleOutput {
	return o.ApplyT(func(v *TemplateFontStyle) TemplateFontStyle {
		if v != nil {
			return *v
		}
		var ret TemplateFontStyle
		return ret
	}).(TemplateFontStyleOutput)
}

func (o TemplateFontStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFontStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateFontStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateFontStyleInput is an input type that accepts values of the TemplateFontStyle enum
// A concrete instance of `TemplateFontStyleInput` can be one of the following:
//
//	TemplateFontStyleNormal
//	TemplateFontStyleItalic
type TemplateFontStyleInput interface {
	pulumi.Input

	ToTemplateFontStyleOutput() TemplateFontStyleOutput
	ToTemplateFontStyleOutputWithContext(context.Context) TemplateFontStyleOutput
}

var templateFontStylePtrType = reflect.TypeOf((**TemplateFontStyle)(nil)).Elem()

type TemplateFontStylePtrInput interface {
	pulumi.Input

	ToTemplateFontStylePtrOutput() TemplateFontStylePtrOutput
	ToTemplateFontStylePtrOutputWithContext(context.Context) TemplateFontStylePtrOutput
}

type templateFontStylePtr string

func TemplateFontStylePtr(v string) TemplateFontStylePtrInput {
	return (*templateFontStylePtr)(&v)
}

func (*templateFontStylePtr) ElementType() reflect.Type {
	return templateFontStylePtrType
}

func (in *templateFontStylePtr) ToTemplateFontStylePtrOutput() TemplateFontStylePtrOutput {
	return pulumi.ToOutput(in).(TemplateFontStylePtrOutput)
}

func (in *templateFontStylePtr) ToTemplateFontStylePtrOutputWithContext(ctx context.Context) TemplateFontStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateFontStylePtrOutput)
}

type TemplateFontWeightName string

const (
	TemplateFontWeightNameNormal = TemplateFontWeightName("NORMAL")
	TemplateFontWeightNameBold   = TemplateFontWeightName("BOLD")
)

func (TemplateFontWeightName) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontWeightName)(nil)).Elem()
}

func (e TemplateFontWeightName) ToTemplateFontWeightNameOutput() TemplateFontWeightNameOutput {
	return pulumi.ToOutput(e).(TemplateFontWeightNameOutput)
}

func (e TemplateFontWeightName) ToTemplateFontWeightNameOutputWithContext(ctx context.Context) TemplateFontWeightNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateFontWeightNameOutput)
}

func (e TemplateFontWeightName) ToTemplateFontWeightNamePtrOutput() TemplateFontWeightNamePtrOutput {
	return e.ToTemplateFontWeightNamePtrOutputWithContext(context.Background())
}

func (e TemplateFontWeightName) ToTemplateFontWeightNamePtrOutputWithContext(ctx context.Context) TemplateFontWeightNamePtrOutput {
	return TemplateFontWeightName(e).ToTemplateFontWeightNameOutputWithContext(ctx).ToTemplateFontWeightNamePtrOutputWithContext(ctx)
}

func (e TemplateFontWeightName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFontWeightName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFontWeightName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateFontWeightName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateFontWeightNameOutput struct{ *pulumi.OutputState }

func (TemplateFontWeightNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontWeightName)(nil)).Elem()
}

func (o TemplateFontWeightNameOutput) ToTemplateFontWeightNameOutput() TemplateFontWeightNameOutput {
	return o
}

func (o TemplateFontWeightNameOutput) ToTemplateFontWeightNameOutputWithContext(ctx context.Context) TemplateFontWeightNameOutput {
	return o
}

func (o TemplateFontWeightNameOutput) ToTemplateFontWeightNamePtrOutput() TemplateFontWeightNamePtrOutput {
	return o.ToTemplateFontWeightNamePtrOutputWithContext(context.Background())
}

func (o TemplateFontWeightNameOutput) ToTemplateFontWeightNamePtrOutputWithContext(ctx context.Context) TemplateFontWeightNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFontWeightName) *TemplateFontWeightName {
		return &v
	}).(TemplateFontWeightNamePtrOutput)
}

func (o TemplateFontWeightNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateFontWeightNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFontWeightName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateFontWeightNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFontWeightNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFontWeightName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateFontWeightNamePtrOutput struct{ *pulumi.OutputState }

func (TemplateFontWeightNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFontWeightName)(nil)).Elem()
}

func (o TemplateFontWeightNamePtrOutput) ToTemplateFontWeightNamePtrOutput() TemplateFontWeightNamePtrOutput {
	return o
}

func (o TemplateFontWeightNamePtrOutput) ToTemplateFontWeightNamePtrOutputWithContext(ctx context.Context) TemplateFontWeightNamePtrOutput {
	return o
}

func (o TemplateFontWeightNamePtrOutput) Elem() TemplateFontWeightNameOutput {
	return o.ApplyT(func(v *TemplateFontWeightName) TemplateFontWeightName {
		if v != nil {
			return *v
		}
		var ret TemplateFontWeightName
		return ret
	}).(TemplateFontWeightNameOutput)
}

func (o TemplateFontWeightNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFontWeightNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateFontWeightName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateFontWeightNameInput is an input type that accepts values of the TemplateFontWeightName enum
// A concrete instance of `TemplateFontWeightNameInput` can be one of the following:
//
//	TemplateFontWeightNameNormal
//	TemplateFontWeightNameBold
type TemplateFontWeightNameInput interface {
	pulumi.Input

	ToTemplateFontWeightNameOutput() TemplateFontWeightNameOutput
	ToTemplateFontWeightNameOutputWithContext(context.Context) TemplateFontWeightNameOutput
}

var templateFontWeightNamePtrType = reflect.TypeOf((**TemplateFontWeightName)(nil)).Elem()

type TemplateFontWeightNamePtrInput interface {
	pulumi.Input

	ToTemplateFontWeightNamePtrOutput() TemplateFontWeightNamePtrOutput
	ToTemplateFontWeightNamePtrOutputWithContext(context.Context) TemplateFontWeightNamePtrOutput
}

type templateFontWeightNamePtr string

func TemplateFontWeightNamePtr(v string) TemplateFontWeightNamePtrInput {
	return (*templateFontWeightNamePtr)(&v)
}

func (*templateFontWeightNamePtr) ElementType() reflect.Type {
	return templateFontWeightNamePtrType
}

func (in *templateFontWeightNamePtr) ToTemplateFontWeightNamePtrOutput() TemplateFontWeightNamePtrOutput {
	return pulumi.ToOutput(in).(TemplateFontWeightNamePtrOutput)
}

func (in *templateFontWeightNamePtr) ToTemplateFontWeightNamePtrOutputWithContext(ctx context.Context) TemplateFontWeightNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateFontWeightNamePtrOutput)
}

type TemplateForecastComputationSeasonality string

const (
	TemplateForecastComputationSeasonalityAutomatic = TemplateForecastComputationSeasonality("AUTOMATIC")
	TemplateForecastComputationSeasonalityCustom    = TemplateForecastComputationSeasonality("CUSTOM")
)

func (TemplateForecastComputationSeasonality) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateForecastComputationSeasonality)(nil)).Elem()
}

func (e TemplateForecastComputationSeasonality) ToTemplateForecastComputationSeasonalityOutput() TemplateForecastComputationSeasonalityOutput {
	return pulumi.ToOutput(e).(TemplateForecastComputationSeasonalityOutput)
}

func (e TemplateForecastComputationSeasonality) ToTemplateForecastComputationSeasonalityOutputWithContext(ctx context.Context) TemplateForecastComputationSeasonalityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateForecastComputationSeasonalityOutput)
}

func (e TemplateForecastComputationSeasonality) ToTemplateForecastComputationSeasonalityPtrOutput() TemplateForecastComputationSeasonalityPtrOutput {
	return e.ToTemplateForecastComputationSeasonalityPtrOutputWithContext(context.Background())
}

func (e TemplateForecastComputationSeasonality) ToTemplateForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) TemplateForecastComputationSeasonalityPtrOutput {
	return TemplateForecastComputationSeasonality(e).ToTemplateForecastComputationSeasonalityOutputWithContext(ctx).ToTemplateForecastComputationSeasonalityPtrOutputWithContext(ctx)
}

func (e TemplateForecastComputationSeasonality) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateForecastComputationSeasonality) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateForecastComputationSeasonality) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateForecastComputationSeasonality) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateForecastComputationSeasonalityOutput struct{ *pulumi.OutputState }

func (TemplateForecastComputationSeasonalityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateForecastComputationSeasonality)(nil)).Elem()
}

func (o TemplateForecastComputationSeasonalityOutput) ToTemplateForecastComputationSeasonalityOutput() TemplateForecastComputationSeasonalityOutput {
	return o
}

func (o TemplateForecastComputationSeasonalityOutput) ToTemplateForecastComputationSeasonalityOutputWithContext(ctx context.Context) TemplateForecastComputationSeasonalityOutput {
	return o
}

func (o TemplateForecastComputationSeasonalityOutput) ToTemplateForecastComputationSeasonalityPtrOutput() TemplateForecastComputationSeasonalityPtrOutput {
	return o.ToTemplateForecastComputationSeasonalityPtrOutputWithContext(context.Background())
}

func (o TemplateForecastComputationSeasonalityOutput) ToTemplateForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) TemplateForecastComputationSeasonalityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateForecastComputationSeasonality) *TemplateForecastComputationSeasonality {
		return &v
	}).(TemplateForecastComputationSeasonalityPtrOutput)
}

func (o TemplateForecastComputationSeasonalityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateForecastComputationSeasonalityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateForecastComputationSeasonality) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateForecastComputationSeasonalityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateForecastComputationSeasonalityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateForecastComputationSeasonality) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateForecastComputationSeasonalityPtrOutput struct{ *pulumi.OutputState }

func (TemplateForecastComputationSeasonalityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateForecastComputationSeasonality)(nil)).Elem()
}

func (o TemplateForecastComputationSeasonalityPtrOutput) ToTemplateForecastComputationSeasonalityPtrOutput() TemplateForecastComputationSeasonalityPtrOutput {
	return o
}

func (o TemplateForecastComputationSeasonalityPtrOutput) ToTemplateForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) TemplateForecastComputationSeasonalityPtrOutput {
	return o
}

func (o TemplateForecastComputationSeasonalityPtrOutput) Elem() TemplateForecastComputationSeasonalityOutput {
	return o.ApplyT(func(v *TemplateForecastComputationSeasonality) TemplateForecastComputationSeasonality {
		if v != nil {
			return *v
		}
		var ret TemplateForecastComputationSeasonality
		return ret
	}).(TemplateForecastComputationSeasonalityOutput)
}

func (o TemplateForecastComputationSeasonalityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateForecastComputationSeasonalityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateForecastComputationSeasonality) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateForecastComputationSeasonalityInput is an input type that accepts values of the TemplateForecastComputationSeasonality enum
// A concrete instance of `TemplateForecastComputationSeasonalityInput` can be one of the following:
//
//	TemplateForecastComputationSeasonalityAutomatic
//	TemplateForecastComputationSeasonalityCustom
type TemplateForecastComputationSeasonalityInput interface {
	pulumi.Input

	ToTemplateForecastComputationSeasonalityOutput() TemplateForecastComputationSeasonalityOutput
	ToTemplateForecastComputationSeasonalityOutputWithContext(context.Context) TemplateForecastComputationSeasonalityOutput
}

var templateForecastComputationSeasonalityPtrType = reflect.TypeOf((**TemplateForecastComputationSeasonality)(nil)).Elem()

type TemplateForecastComputationSeasonalityPtrInput interface {
	pulumi.Input

	ToTemplateForecastComputationSeasonalityPtrOutput() TemplateForecastComputationSeasonalityPtrOutput
	ToTemplateForecastComputationSeasonalityPtrOutputWithContext(context.Context) TemplateForecastComputationSeasonalityPtrOutput
}

type templateForecastComputationSeasonalityPtr string

func TemplateForecastComputationSeasonalityPtr(v string) TemplateForecastComputationSeasonalityPtrInput {
	return (*templateForecastComputationSeasonalityPtr)(&v)
}

func (*templateForecastComputationSeasonalityPtr) ElementType() reflect.Type {
	return templateForecastComputationSeasonalityPtrType
}

func (in *templateForecastComputationSeasonalityPtr) ToTemplateForecastComputationSeasonalityPtrOutput() TemplateForecastComputationSeasonalityPtrOutput {
	return pulumi.ToOutput(in).(TemplateForecastComputationSeasonalityPtrOutput)
}

func (in *templateForecastComputationSeasonalityPtr) ToTemplateForecastComputationSeasonalityPtrOutputWithContext(ctx context.Context) TemplateForecastComputationSeasonalityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateForecastComputationSeasonalityPtrOutput)
}

type TemplateFunnelChartMeasureDataLabelStyle string

const (
	TemplateFunnelChartMeasureDataLabelStyleValueOnly                         = TemplateFunnelChartMeasureDataLabelStyle("VALUE_ONLY")
	TemplateFunnelChartMeasureDataLabelStylePercentageByFirstStage            = TemplateFunnelChartMeasureDataLabelStyle("PERCENTAGE_BY_FIRST_STAGE")
	TemplateFunnelChartMeasureDataLabelStylePercentageByPreviousStage         = TemplateFunnelChartMeasureDataLabelStyle("PERCENTAGE_BY_PREVIOUS_STAGE")
	TemplateFunnelChartMeasureDataLabelStyleValueAndPercentageByFirstStage    = TemplateFunnelChartMeasureDataLabelStyle("VALUE_AND_PERCENTAGE_BY_FIRST_STAGE")
	TemplateFunnelChartMeasureDataLabelStyleValueAndPercentageByPreviousStage = TemplateFunnelChartMeasureDataLabelStyle("VALUE_AND_PERCENTAGE_BY_PREVIOUS_STAGE")
)

func (TemplateFunnelChartMeasureDataLabelStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartMeasureDataLabelStyle)(nil)).Elem()
}

func (e TemplateFunnelChartMeasureDataLabelStyle) ToTemplateFunnelChartMeasureDataLabelStyleOutput() TemplateFunnelChartMeasureDataLabelStyleOutput {
	return pulumi.ToOutput(e).(TemplateFunnelChartMeasureDataLabelStyleOutput)
}

func (e TemplateFunnelChartMeasureDataLabelStyle) ToTemplateFunnelChartMeasureDataLabelStyleOutputWithContext(ctx context.Context) TemplateFunnelChartMeasureDataLabelStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateFunnelChartMeasureDataLabelStyleOutput)
}

func (e TemplateFunnelChartMeasureDataLabelStyle) ToTemplateFunnelChartMeasureDataLabelStylePtrOutput() TemplateFunnelChartMeasureDataLabelStylePtrOutput {
	return e.ToTemplateFunnelChartMeasureDataLabelStylePtrOutputWithContext(context.Background())
}

func (e TemplateFunnelChartMeasureDataLabelStyle) ToTemplateFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) TemplateFunnelChartMeasureDataLabelStylePtrOutput {
	return TemplateFunnelChartMeasureDataLabelStyle(e).ToTemplateFunnelChartMeasureDataLabelStyleOutputWithContext(ctx).ToTemplateFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx)
}

func (e TemplateFunnelChartMeasureDataLabelStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFunnelChartMeasureDataLabelStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateFunnelChartMeasureDataLabelStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateFunnelChartMeasureDataLabelStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateFunnelChartMeasureDataLabelStyleOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartMeasureDataLabelStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartMeasureDataLabelStyle)(nil)).Elem()
}

func (o TemplateFunnelChartMeasureDataLabelStyleOutput) ToTemplateFunnelChartMeasureDataLabelStyleOutput() TemplateFunnelChartMeasureDataLabelStyleOutput {
	return o
}

func (o TemplateFunnelChartMeasureDataLabelStyleOutput) ToTemplateFunnelChartMeasureDataLabelStyleOutputWithContext(ctx context.Context) TemplateFunnelChartMeasureDataLabelStyleOutput {
	return o
}

func (o TemplateFunnelChartMeasureDataLabelStyleOutput) ToTemplateFunnelChartMeasureDataLabelStylePtrOutput() TemplateFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ToTemplateFunnelChartMeasureDataLabelStylePtrOutputWithContext(context.Background())
}

func (o TemplateFunnelChartMeasureDataLabelStyleOutput) ToTemplateFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) TemplateFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFunnelChartMeasureDataLabelStyle) *TemplateFunnelChartMeasureDataLabelStyle {
		return &v
	}).(TemplateFunnelChartMeasureDataLabelStylePtrOutput)
}

func (o TemplateFunnelChartMeasureDataLabelStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateFunnelChartMeasureDataLabelStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFunnelChartMeasureDataLabelStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateFunnelChartMeasureDataLabelStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFunnelChartMeasureDataLabelStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateFunnelChartMeasureDataLabelStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateFunnelChartMeasureDataLabelStylePtrOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartMeasureDataLabelStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartMeasureDataLabelStyle)(nil)).Elem()
}

func (o TemplateFunnelChartMeasureDataLabelStylePtrOutput) ToTemplateFunnelChartMeasureDataLabelStylePtrOutput() TemplateFunnelChartMeasureDataLabelStylePtrOutput {
	return o
}

func (o TemplateFunnelChartMeasureDataLabelStylePtrOutput) ToTemplateFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) TemplateFunnelChartMeasureDataLabelStylePtrOutput {
	return o
}

func (o TemplateFunnelChartMeasureDataLabelStylePtrOutput) Elem() TemplateFunnelChartMeasureDataLabelStyleOutput {
	return o.ApplyT(func(v *TemplateFunnelChartMeasureDataLabelStyle) TemplateFunnelChartMeasureDataLabelStyle {
		if v != nil {
			return *v
		}
		var ret TemplateFunnelChartMeasureDataLabelStyle
		return ret
	}).(TemplateFunnelChartMeasureDataLabelStyleOutput)
}

func (o TemplateFunnelChartMeasureDataLabelStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateFunnelChartMeasureDataLabelStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateFunnelChartMeasureDataLabelStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateFunnelChartMeasureDataLabelStyleInput is an input type that accepts values of the TemplateFunnelChartMeasureDataLabelStyle enum
// A concrete instance of `TemplateFunnelChartMeasureDataLabelStyleInput` can be one of the following:
//
//	TemplateFunnelChartMeasureDataLabelStyleValueOnly
//	TemplateFunnelChartMeasureDataLabelStylePercentageByFirstStage
//	TemplateFunnelChartMeasureDataLabelStylePercentageByPreviousStage
//	TemplateFunnelChartMeasureDataLabelStyleValueAndPercentageByFirstStage
//	TemplateFunnelChartMeasureDataLabelStyleValueAndPercentageByPreviousStage
type TemplateFunnelChartMeasureDataLabelStyleInput interface {
	pulumi.Input

	ToTemplateFunnelChartMeasureDataLabelStyleOutput() TemplateFunnelChartMeasureDataLabelStyleOutput
	ToTemplateFunnelChartMeasureDataLabelStyleOutputWithContext(context.Context) TemplateFunnelChartMeasureDataLabelStyleOutput
}

var templateFunnelChartMeasureDataLabelStylePtrType = reflect.TypeOf((**TemplateFunnelChartMeasureDataLabelStyle)(nil)).Elem()

type TemplateFunnelChartMeasureDataLabelStylePtrInput interface {
	pulumi.Input

	ToTemplateFunnelChartMeasureDataLabelStylePtrOutput() TemplateFunnelChartMeasureDataLabelStylePtrOutput
	ToTemplateFunnelChartMeasureDataLabelStylePtrOutputWithContext(context.Context) TemplateFunnelChartMeasureDataLabelStylePtrOutput
}

type templateFunnelChartMeasureDataLabelStylePtr string

func TemplateFunnelChartMeasureDataLabelStylePtr(v string) TemplateFunnelChartMeasureDataLabelStylePtrInput {
	return (*templateFunnelChartMeasureDataLabelStylePtr)(&v)
}

func (*templateFunnelChartMeasureDataLabelStylePtr) ElementType() reflect.Type {
	return templateFunnelChartMeasureDataLabelStylePtrType
}

func (in *templateFunnelChartMeasureDataLabelStylePtr) ToTemplateFunnelChartMeasureDataLabelStylePtrOutput() TemplateFunnelChartMeasureDataLabelStylePtrOutput {
	return pulumi.ToOutput(in).(TemplateFunnelChartMeasureDataLabelStylePtrOutput)
}

func (in *templateFunnelChartMeasureDataLabelStylePtr) ToTemplateFunnelChartMeasureDataLabelStylePtrOutputWithContext(ctx context.Context) TemplateFunnelChartMeasureDataLabelStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateFunnelChartMeasureDataLabelStylePtrOutput)
}

type TemplateGeospatialSelectedPointStyle string

const (
	TemplateGeospatialSelectedPointStylePoint   = TemplateGeospatialSelectedPointStyle("POINT")
	TemplateGeospatialSelectedPointStyleCluster = TemplateGeospatialSelectedPointStyle("CLUSTER")
	TemplateGeospatialSelectedPointStyleHeatmap = TemplateGeospatialSelectedPointStyle("HEATMAP")
)

func (TemplateGeospatialSelectedPointStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialSelectedPointStyle)(nil)).Elem()
}

func (e TemplateGeospatialSelectedPointStyle) ToTemplateGeospatialSelectedPointStyleOutput() TemplateGeospatialSelectedPointStyleOutput {
	return pulumi.ToOutput(e).(TemplateGeospatialSelectedPointStyleOutput)
}

func (e TemplateGeospatialSelectedPointStyle) ToTemplateGeospatialSelectedPointStyleOutputWithContext(ctx context.Context) TemplateGeospatialSelectedPointStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateGeospatialSelectedPointStyleOutput)
}

func (e TemplateGeospatialSelectedPointStyle) ToTemplateGeospatialSelectedPointStylePtrOutput() TemplateGeospatialSelectedPointStylePtrOutput {
	return e.ToTemplateGeospatialSelectedPointStylePtrOutputWithContext(context.Background())
}

func (e TemplateGeospatialSelectedPointStyle) ToTemplateGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) TemplateGeospatialSelectedPointStylePtrOutput {
	return TemplateGeospatialSelectedPointStyle(e).ToTemplateGeospatialSelectedPointStyleOutputWithContext(ctx).ToTemplateGeospatialSelectedPointStylePtrOutputWithContext(ctx)
}

func (e TemplateGeospatialSelectedPointStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateGeospatialSelectedPointStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateGeospatialSelectedPointStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateGeospatialSelectedPointStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateGeospatialSelectedPointStyleOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialSelectedPointStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialSelectedPointStyle)(nil)).Elem()
}

func (o TemplateGeospatialSelectedPointStyleOutput) ToTemplateGeospatialSelectedPointStyleOutput() TemplateGeospatialSelectedPointStyleOutput {
	return o
}

func (o TemplateGeospatialSelectedPointStyleOutput) ToTemplateGeospatialSelectedPointStyleOutputWithContext(ctx context.Context) TemplateGeospatialSelectedPointStyleOutput {
	return o
}

func (o TemplateGeospatialSelectedPointStyleOutput) ToTemplateGeospatialSelectedPointStylePtrOutput() TemplateGeospatialSelectedPointStylePtrOutput {
	return o.ToTemplateGeospatialSelectedPointStylePtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialSelectedPointStyleOutput) ToTemplateGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) TemplateGeospatialSelectedPointStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialSelectedPointStyle) *TemplateGeospatialSelectedPointStyle {
		return &v
	}).(TemplateGeospatialSelectedPointStylePtrOutput)
}

func (o TemplateGeospatialSelectedPointStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateGeospatialSelectedPointStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateGeospatialSelectedPointStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateGeospatialSelectedPointStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialSelectedPointStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateGeospatialSelectedPointStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateGeospatialSelectedPointStylePtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialSelectedPointStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialSelectedPointStyle)(nil)).Elem()
}

func (o TemplateGeospatialSelectedPointStylePtrOutput) ToTemplateGeospatialSelectedPointStylePtrOutput() TemplateGeospatialSelectedPointStylePtrOutput {
	return o
}

func (o TemplateGeospatialSelectedPointStylePtrOutput) ToTemplateGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) TemplateGeospatialSelectedPointStylePtrOutput {
	return o
}

func (o TemplateGeospatialSelectedPointStylePtrOutput) Elem() TemplateGeospatialSelectedPointStyleOutput {
	return o.ApplyT(func(v *TemplateGeospatialSelectedPointStyle) TemplateGeospatialSelectedPointStyle {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialSelectedPointStyle
		return ret
	}).(TemplateGeospatialSelectedPointStyleOutput)
}

func (o TemplateGeospatialSelectedPointStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialSelectedPointStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateGeospatialSelectedPointStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateGeospatialSelectedPointStyleInput is an input type that accepts values of the TemplateGeospatialSelectedPointStyle enum
// A concrete instance of `TemplateGeospatialSelectedPointStyleInput` can be one of the following:
//
//	TemplateGeospatialSelectedPointStylePoint
//	TemplateGeospatialSelectedPointStyleCluster
//	TemplateGeospatialSelectedPointStyleHeatmap
type TemplateGeospatialSelectedPointStyleInput interface {
	pulumi.Input

	ToTemplateGeospatialSelectedPointStyleOutput() TemplateGeospatialSelectedPointStyleOutput
	ToTemplateGeospatialSelectedPointStyleOutputWithContext(context.Context) TemplateGeospatialSelectedPointStyleOutput
}

var templateGeospatialSelectedPointStylePtrType = reflect.TypeOf((**TemplateGeospatialSelectedPointStyle)(nil)).Elem()

type TemplateGeospatialSelectedPointStylePtrInput interface {
	pulumi.Input

	ToTemplateGeospatialSelectedPointStylePtrOutput() TemplateGeospatialSelectedPointStylePtrOutput
	ToTemplateGeospatialSelectedPointStylePtrOutputWithContext(context.Context) TemplateGeospatialSelectedPointStylePtrOutput
}

type templateGeospatialSelectedPointStylePtr string

func TemplateGeospatialSelectedPointStylePtr(v string) TemplateGeospatialSelectedPointStylePtrInput {
	return (*templateGeospatialSelectedPointStylePtr)(&v)
}

func (*templateGeospatialSelectedPointStylePtr) ElementType() reflect.Type {
	return templateGeospatialSelectedPointStylePtrType
}

func (in *templateGeospatialSelectedPointStylePtr) ToTemplateGeospatialSelectedPointStylePtrOutput() TemplateGeospatialSelectedPointStylePtrOutput {
	return pulumi.ToOutput(in).(TemplateGeospatialSelectedPointStylePtrOutput)
}

func (in *templateGeospatialSelectedPointStylePtr) ToTemplateGeospatialSelectedPointStylePtrOutputWithContext(ctx context.Context) TemplateGeospatialSelectedPointStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateGeospatialSelectedPointStylePtrOutput)
}

type TemplateHistogramBinType string

const (
	TemplateHistogramBinTypeBinCount = TemplateHistogramBinType("BIN_COUNT")
	TemplateHistogramBinTypeBinWidth = TemplateHistogramBinType("BIN_WIDTH")
)

func (TemplateHistogramBinType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramBinType)(nil)).Elem()
}

func (e TemplateHistogramBinType) ToTemplateHistogramBinTypeOutput() TemplateHistogramBinTypeOutput {
	return pulumi.ToOutput(e).(TemplateHistogramBinTypeOutput)
}

func (e TemplateHistogramBinType) ToTemplateHistogramBinTypeOutputWithContext(ctx context.Context) TemplateHistogramBinTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateHistogramBinTypeOutput)
}

func (e TemplateHistogramBinType) ToTemplateHistogramBinTypePtrOutput() TemplateHistogramBinTypePtrOutput {
	return e.ToTemplateHistogramBinTypePtrOutputWithContext(context.Background())
}

func (e TemplateHistogramBinType) ToTemplateHistogramBinTypePtrOutputWithContext(ctx context.Context) TemplateHistogramBinTypePtrOutput {
	return TemplateHistogramBinType(e).ToTemplateHistogramBinTypeOutputWithContext(ctx).ToTemplateHistogramBinTypePtrOutputWithContext(ctx)
}

func (e TemplateHistogramBinType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateHistogramBinType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateHistogramBinType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateHistogramBinType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateHistogramBinTypeOutput struct{ *pulumi.OutputState }

func (TemplateHistogramBinTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramBinType)(nil)).Elem()
}

func (o TemplateHistogramBinTypeOutput) ToTemplateHistogramBinTypeOutput() TemplateHistogramBinTypeOutput {
	return o
}

func (o TemplateHistogramBinTypeOutput) ToTemplateHistogramBinTypeOutputWithContext(ctx context.Context) TemplateHistogramBinTypeOutput {
	return o
}

func (o TemplateHistogramBinTypeOutput) ToTemplateHistogramBinTypePtrOutput() TemplateHistogramBinTypePtrOutput {
	return o.ToTemplateHistogramBinTypePtrOutputWithContext(context.Background())
}

func (o TemplateHistogramBinTypeOutput) ToTemplateHistogramBinTypePtrOutputWithContext(ctx context.Context) TemplateHistogramBinTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHistogramBinType) *TemplateHistogramBinType {
		return &v
	}).(TemplateHistogramBinTypePtrOutput)
}

func (o TemplateHistogramBinTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateHistogramBinTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateHistogramBinType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateHistogramBinTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateHistogramBinTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateHistogramBinType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateHistogramBinTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateHistogramBinTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramBinType)(nil)).Elem()
}

func (o TemplateHistogramBinTypePtrOutput) ToTemplateHistogramBinTypePtrOutput() TemplateHistogramBinTypePtrOutput {
	return o
}

func (o TemplateHistogramBinTypePtrOutput) ToTemplateHistogramBinTypePtrOutputWithContext(ctx context.Context) TemplateHistogramBinTypePtrOutput {
	return o
}

func (o TemplateHistogramBinTypePtrOutput) Elem() TemplateHistogramBinTypeOutput {
	return o.ApplyT(func(v *TemplateHistogramBinType) TemplateHistogramBinType {
		if v != nil {
			return *v
		}
		var ret TemplateHistogramBinType
		return ret
	}).(TemplateHistogramBinTypeOutput)
}

func (o TemplateHistogramBinTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateHistogramBinTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateHistogramBinType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateHistogramBinTypeInput is an input type that accepts values of the TemplateHistogramBinType enum
// A concrete instance of `TemplateHistogramBinTypeInput` can be one of the following:
//
//	TemplateHistogramBinTypeBinCount
//	TemplateHistogramBinTypeBinWidth
type TemplateHistogramBinTypeInput interface {
	pulumi.Input

	ToTemplateHistogramBinTypeOutput() TemplateHistogramBinTypeOutput
	ToTemplateHistogramBinTypeOutputWithContext(context.Context) TemplateHistogramBinTypeOutput
}

var templateHistogramBinTypePtrType = reflect.TypeOf((**TemplateHistogramBinType)(nil)).Elem()

type TemplateHistogramBinTypePtrInput interface {
	pulumi.Input

	ToTemplateHistogramBinTypePtrOutput() TemplateHistogramBinTypePtrOutput
	ToTemplateHistogramBinTypePtrOutputWithContext(context.Context) TemplateHistogramBinTypePtrOutput
}

type templateHistogramBinTypePtr string

func TemplateHistogramBinTypePtr(v string) TemplateHistogramBinTypePtrInput {
	return (*templateHistogramBinTypePtr)(&v)
}

func (*templateHistogramBinTypePtr) ElementType() reflect.Type {
	return templateHistogramBinTypePtrType
}

func (in *templateHistogramBinTypePtr) ToTemplateHistogramBinTypePtrOutput() TemplateHistogramBinTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateHistogramBinTypePtrOutput)
}

func (in *templateHistogramBinTypePtr) ToTemplateHistogramBinTypePtrOutputWithContext(ctx context.Context) TemplateHistogramBinTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateHistogramBinTypePtrOutput)
}

type TemplateHorizontalTextAlignment string

const (
	TemplateHorizontalTextAlignmentLeft   = TemplateHorizontalTextAlignment("LEFT")
	TemplateHorizontalTextAlignmentCenter = TemplateHorizontalTextAlignment("CENTER")
	TemplateHorizontalTextAlignmentRight  = TemplateHorizontalTextAlignment("RIGHT")
	TemplateHorizontalTextAlignmentAuto   = TemplateHorizontalTextAlignment("AUTO")
)

func (TemplateHorizontalTextAlignment) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHorizontalTextAlignment)(nil)).Elem()
}

func (e TemplateHorizontalTextAlignment) ToTemplateHorizontalTextAlignmentOutput() TemplateHorizontalTextAlignmentOutput {
	return pulumi.ToOutput(e).(TemplateHorizontalTextAlignmentOutput)
}

func (e TemplateHorizontalTextAlignment) ToTemplateHorizontalTextAlignmentOutputWithContext(ctx context.Context) TemplateHorizontalTextAlignmentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateHorizontalTextAlignmentOutput)
}

func (e TemplateHorizontalTextAlignment) ToTemplateHorizontalTextAlignmentPtrOutput() TemplateHorizontalTextAlignmentPtrOutput {
	return e.ToTemplateHorizontalTextAlignmentPtrOutputWithContext(context.Background())
}

func (e TemplateHorizontalTextAlignment) ToTemplateHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) TemplateHorizontalTextAlignmentPtrOutput {
	return TemplateHorizontalTextAlignment(e).ToTemplateHorizontalTextAlignmentOutputWithContext(ctx).ToTemplateHorizontalTextAlignmentPtrOutputWithContext(ctx)
}

func (e TemplateHorizontalTextAlignment) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateHorizontalTextAlignment) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateHorizontalTextAlignment) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateHorizontalTextAlignment) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateHorizontalTextAlignmentOutput struct{ *pulumi.OutputState }

func (TemplateHorizontalTextAlignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHorizontalTextAlignment)(nil)).Elem()
}

func (o TemplateHorizontalTextAlignmentOutput) ToTemplateHorizontalTextAlignmentOutput() TemplateHorizontalTextAlignmentOutput {
	return o
}

func (o TemplateHorizontalTextAlignmentOutput) ToTemplateHorizontalTextAlignmentOutputWithContext(ctx context.Context) TemplateHorizontalTextAlignmentOutput {
	return o
}

func (o TemplateHorizontalTextAlignmentOutput) ToTemplateHorizontalTextAlignmentPtrOutput() TemplateHorizontalTextAlignmentPtrOutput {
	return o.ToTemplateHorizontalTextAlignmentPtrOutputWithContext(context.Background())
}

func (o TemplateHorizontalTextAlignmentOutput) ToTemplateHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) TemplateHorizontalTextAlignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHorizontalTextAlignment) *TemplateHorizontalTextAlignment {
		return &v
	}).(TemplateHorizontalTextAlignmentPtrOutput)
}

func (o TemplateHorizontalTextAlignmentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateHorizontalTextAlignmentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateHorizontalTextAlignment) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateHorizontalTextAlignmentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateHorizontalTextAlignmentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateHorizontalTextAlignment) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateHorizontalTextAlignmentPtrOutput struct{ *pulumi.OutputState }

func (TemplateHorizontalTextAlignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHorizontalTextAlignment)(nil)).Elem()
}

func (o TemplateHorizontalTextAlignmentPtrOutput) ToTemplateHorizontalTextAlignmentPtrOutput() TemplateHorizontalTextAlignmentPtrOutput {
	return o
}

func (o TemplateHorizontalTextAlignmentPtrOutput) ToTemplateHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) TemplateHorizontalTextAlignmentPtrOutput {
	return o
}

func (o TemplateHorizontalTextAlignmentPtrOutput) Elem() TemplateHorizontalTextAlignmentOutput {
	return o.ApplyT(func(v *TemplateHorizontalTextAlignment) TemplateHorizontalTextAlignment {
		if v != nil {
			return *v
		}
		var ret TemplateHorizontalTextAlignment
		return ret
	}).(TemplateHorizontalTextAlignmentOutput)
}

func (o TemplateHorizontalTextAlignmentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateHorizontalTextAlignmentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateHorizontalTextAlignment) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateHorizontalTextAlignmentInput is an input type that accepts values of the TemplateHorizontalTextAlignment enum
// A concrete instance of `TemplateHorizontalTextAlignmentInput` can be one of the following:
//
//	TemplateHorizontalTextAlignmentLeft
//	TemplateHorizontalTextAlignmentCenter
//	TemplateHorizontalTextAlignmentRight
//	TemplateHorizontalTextAlignmentAuto
type TemplateHorizontalTextAlignmentInput interface {
	pulumi.Input

	ToTemplateHorizontalTextAlignmentOutput() TemplateHorizontalTextAlignmentOutput
	ToTemplateHorizontalTextAlignmentOutputWithContext(context.Context) TemplateHorizontalTextAlignmentOutput
}

var templateHorizontalTextAlignmentPtrType = reflect.TypeOf((**TemplateHorizontalTextAlignment)(nil)).Elem()

type TemplateHorizontalTextAlignmentPtrInput interface {
	pulumi.Input

	ToTemplateHorizontalTextAlignmentPtrOutput() TemplateHorizontalTextAlignmentPtrOutput
	ToTemplateHorizontalTextAlignmentPtrOutputWithContext(context.Context) TemplateHorizontalTextAlignmentPtrOutput
}

type templateHorizontalTextAlignmentPtr string

func TemplateHorizontalTextAlignmentPtr(v string) TemplateHorizontalTextAlignmentPtrInput {
	return (*templateHorizontalTextAlignmentPtr)(&v)
}

func (*templateHorizontalTextAlignmentPtr) ElementType() reflect.Type {
	return templateHorizontalTextAlignmentPtrType
}

func (in *templateHorizontalTextAlignmentPtr) ToTemplateHorizontalTextAlignmentPtrOutput() TemplateHorizontalTextAlignmentPtrOutput {
	return pulumi.ToOutput(in).(TemplateHorizontalTextAlignmentPtrOutput)
}

func (in *templateHorizontalTextAlignmentPtr) ToTemplateHorizontalTextAlignmentPtrOutputWithContext(ctx context.Context) TemplateHorizontalTextAlignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateHorizontalTextAlignmentPtrOutput)
}

type TemplateIcon string

const (
	TemplateIconCaretUp        = TemplateIcon("CARET_UP")
	TemplateIconCaretDown      = TemplateIcon("CARET_DOWN")
	TemplateIconPlus           = TemplateIcon("PLUS")
	TemplateIconMinus          = TemplateIcon("MINUS")
	TemplateIconArrowUp        = TemplateIcon("ARROW_UP")
	TemplateIconArrowDown      = TemplateIcon("ARROW_DOWN")
	TemplateIconArrowLeft      = TemplateIcon("ARROW_LEFT")
	TemplateIconArrowUpLeft    = TemplateIcon("ARROW_UP_LEFT")
	TemplateIconArrowDownLeft  = TemplateIcon("ARROW_DOWN_LEFT")
	TemplateIconArrowRight     = TemplateIcon("ARROW_RIGHT")
	TemplateIconArrowUpRight   = TemplateIcon("ARROW_UP_RIGHT")
	TemplateIconArrowDownRight = TemplateIcon("ARROW_DOWN_RIGHT")
	TemplateIconFaceUp         = TemplateIcon("FACE_UP")
	TemplateIconFaceDown       = TemplateIcon("FACE_DOWN")
	TemplateIconFaceFlat       = TemplateIcon("FACE_FLAT")
	TemplateIconOneBar         = TemplateIcon("ONE_BAR")
	TemplateIconTwoBar         = TemplateIcon("TWO_BAR")
	TemplateIconThreeBar       = TemplateIcon("THREE_BAR")
	TemplateIconCircle         = TemplateIcon("CIRCLE")
	TemplateIconTriangle       = TemplateIcon("TRIANGLE")
	TemplateIconSquare         = TemplateIcon("SQUARE")
	TemplateIconFlag           = TemplateIcon("FLAG")
	TemplateIconThumbsUp       = TemplateIcon("THUMBS_UP")
	TemplateIconThumbsDown     = TemplateIcon("THUMBS_DOWN")
	TemplateIconCheckmark      = TemplateIcon("CHECKMARK")
	TemplateIconX              = TemplateIcon("X")
)

func (TemplateIcon) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateIcon)(nil)).Elem()
}

func (e TemplateIcon) ToTemplateIconOutput() TemplateIconOutput {
	return pulumi.ToOutput(e).(TemplateIconOutput)
}

func (e TemplateIcon) ToTemplateIconOutputWithContext(ctx context.Context) TemplateIconOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateIconOutput)
}

func (e TemplateIcon) ToTemplateIconPtrOutput() TemplateIconPtrOutput {
	return e.ToTemplateIconPtrOutputWithContext(context.Background())
}

func (e TemplateIcon) ToTemplateIconPtrOutputWithContext(ctx context.Context) TemplateIconPtrOutput {
	return TemplateIcon(e).ToTemplateIconOutputWithContext(ctx).ToTemplateIconPtrOutputWithContext(ctx)
}

func (e TemplateIcon) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateIcon) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateIcon) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateIcon) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateIconOutput struct{ *pulumi.OutputState }

func (TemplateIconOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateIcon)(nil)).Elem()
}

func (o TemplateIconOutput) ToTemplateIconOutput() TemplateIconOutput {
	return o
}

func (o TemplateIconOutput) ToTemplateIconOutputWithContext(ctx context.Context) TemplateIconOutput {
	return o
}

func (o TemplateIconOutput) ToTemplateIconPtrOutput() TemplateIconPtrOutput {
	return o.ToTemplateIconPtrOutputWithContext(context.Background())
}

func (o TemplateIconOutput) ToTemplateIconPtrOutputWithContext(ctx context.Context) TemplateIconPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateIcon) *TemplateIcon {
		return &v
	}).(TemplateIconPtrOutput)
}

func (o TemplateIconOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateIconOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateIcon) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateIconOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateIconOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateIcon) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateIconPtrOutput struct{ *pulumi.OutputState }

func (TemplateIconPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateIcon)(nil)).Elem()
}

func (o TemplateIconPtrOutput) ToTemplateIconPtrOutput() TemplateIconPtrOutput {
	return o
}

func (o TemplateIconPtrOutput) ToTemplateIconPtrOutputWithContext(ctx context.Context) TemplateIconPtrOutput {
	return o
}

func (o TemplateIconPtrOutput) Elem() TemplateIconOutput {
	return o.ApplyT(func(v *TemplateIcon) TemplateIcon {
		if v != nil {
			return *v
		}
		var ret TemplateIcon
		return ret
	}).(TemplateIconOutput)
}

func (o TemplateIconPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateIconPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateIcon) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateIconInput is an input type that accepts values of the TemplateIcon enum
// A concrete instance of `TemplateIconInput` can be one of the following:
//
//	TemplateIconCaretUp
//	TemplateIconCaretDown
//	TemplateIconPlus
//	TemplateIconMinus
//	TemplateIconArrowUp
//	TemplateIconArrowDown
//	TemplateIconArrowLeft
//	TemplateIconArrowUpLeft
//	TemplateIconArrowDownLeft
//	TemplateIconArrowRight
//	TemplateIconArrowUpRight
//	TemplateIconArrowDownRight
//	TemplateIconFaceUp
//	TemplateIconFaceDown
//	TemplateIconFaceFlat
//	TemplateIconOneBar
//	TemplateIconTwoBar
//	TemplateIconThreeBar
//	TemplateIconCircle
//	TemplateIconTriangle
//	TemplateIconSquare
//	TemplateIconFlag
//	TemplateIconThumbsUp
//	TemplateIconThumbsDown
//	TemplateIconCheckmark
//	TemplateIconX
type TemplateIconInput interface {
	pulumi.Input

	ToTemplateIconOutput() TemplateIconOutput
	ToTemplateIconOutputWithContext(context.Context) TemplateIconOutput
}

var templateIconPtrType = reflect.TypeOf((**TemplateIcon)(nil)).Elem()

type TemplateIconPtrInput interface {
	pulumi.Input

	ToTemplateIconPtrOutput() TemplateIconPtrOutput
	ToTemplateIconPtrOutputWithContext(context.Context) TemplateIconPtrOutput
}

type templateIconPtr string

func TemplateIconPtr(v string) TemplateIconPtrInput {
	return (*templateIconPtr)(&v)
}

func (*templateIconPtr) ElementType() reflect.Type {
	return templateIconPtrType
}

func (in *templateIconPtr) ToTemplateIconPtrOutput() TemplateIconPtrOutput {
	return pulumi.ToOutput(in).(TemplateIconPtrOutput)
}

func (in *templateIconPtr) ToTemplateIconPtrOutputWithContext(ctx context.Context) TemplateIconPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateIconPtrOutput)
}

type TemplateKpiSparklineType string

const (
	TemplateKpiSparklineTypeLine = TemplateKpiSparklineType("LINE")
	TemplateKpiSparklineTypeArea = TemplateKpiSparklineType("AREA")
)

func (TemplateKpiSparklineType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiSparklineType)(nil)).Elem()
}

func (e TemplateKpiSparklineType) ToTemplateKpiSparklineTypeOutput() TemplateKpiSparklineTypeOutput {
	return pulumi.ToOutput(e).(TemplateKpiSparklineTypeOutput)
}

func (e TemplateKpiSparklineType) ToTemplateKpiSparklineTypeOutputWithContext(ctx context.Context) TemplateKpiSparklineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateKpiSparklineTypeOutput)
}

func (e TemplateKpiSparklineType) ToTemplateKpiSparklineTypePtrOutput() TemplateKpiSparklineTypePtrOutput {
	return e.ToTemplateKpiSparklineTypePtrOutputWithContext(context.Background())
}

func (e TemplateKpiSparklineType) ToTemplateKpiSparklineTypePtrOutputWithContext(ctx context.Context) TemplateKpiSparklineTypePtrOutput {
	return TemplateKpiSparklineType(e).ToTemplateKpiSparklineTypeOutputWithContext(ctx).ToTemplateKpiSparklineTypePtrOutputWithContext(ctx)
}

func (e TemplateKpiSparklineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateKpiSparklineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateKpiSparklineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateKpiSparklineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateKpiSparklineTypeOutput struct{ *pulumi.OutputState }

func (TemplateKpiSparklineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiSparklineType)(nil)).Elem()
}

func (o TemplateKpiSparklineTypeOutput) ToTemplateKpiSparklineTypeOutput() TemplateKpiSparklineTypeOutput {
	return o
}

func (o TemplateKpiSparklineTypeOutput) ToTemplateKpiSparklineTypeOutputWithContext(ctx context.Context) TemplateKpiSparklineTypeOutput {
	return o
}

func (o TemplateKpiSparklineTypeOutput) ToTemplateKpiSparklineTypePtrOutput() TemplateKpiSparklineTypePtrOutput {
	return o.ToTemplateKpiSparklineTypePtrOutputWithContext(context.Background())
}

func (o TemplateKpiSparklineTypeOutput) ToTemplateKpiSparklineTypePtrOutputWithContext(ctx context.Context) TemplateKpiSparklineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiSparklineType) *TemplateKpiSparklineType {
		return &v
	}).(TemplateKpiSparklineTypePtrOutput)
}

func (o TemplateKpiSparklineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateKpiSparklineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateKpiSparklineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateKpiSparklineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateKpiSparklineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateKpiSparklineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateKpiSparklineTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiSparklineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiSparklineType)(nil)).Elem()
}

func (o TemplateKpiSparklineTypePtrOutput) ToTemplateKpiSparklineTypePtrOutput() TemplateKpiSparklineTypePtrOutput {
	return o
}

func (o TemplateKpiSparklineTypePtrOutput) ToTemplateKpiSparklineTypePtrOutputWithContext(ctx context.Context) TemplateKpiSparklineTypePtrOutput {
	return o
}

func (o TemplateKpiSparklineTypePtrOutput) Elem() TemplateKpiSparklineTypeOutput {
	return o.ApplyT(func(v *TemplateKpiSparklineType) TemplateKpiSparklineType {
		if v != nil {
			return *v
		}
		var ret TemplateKpiSparklineType
		return ret
	}).(TemplateKpiSparklineTypeOutput)
}

func (o TemplateKpiSparklineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateKpiSparklineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateKpiSparklineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateKpiSparklineTypeInput is an input type that accepts values of the TemplateKpiSparklineType enum
// A concrete instance of `TemplateKpiSparklineTypeInput` can be one of the following:
//
//	TemplateKpiSparklineTypeLine
//	TemplateKpiSparklineTypeArea
type TemplateKpiSparklineTypeInput interface {
	pulumi.Input

	ToTemplateKpiSparklineTypeOutput() TemplateKpiSparklineTypeOutput
	ToTemplateKpiSparklineTypeOutputWithContext(context.Context) TemplateKpiSparklineTypeOutput
}

var templateKpiSparklineTypePtrType = reflect.TypeOf((**TemplateKpiSparklineType)(nil)).Elem()

type TemplateKpiSparklineTypePtrInput interface {
	pulumi.Input

	ToTemplateKpiSparklineTypePtrOutput() TemplateKpiSparklineTypePtrOutput
	ToTemplateKpiSparklineTypePtrOutputWithContext(context.Context) TemplateKpiSparklineTypePtrOutput
}

type templateKpiSparklineTypePtr string

func TemplateKpiSparklineTypePtr(v string) TemplateKpiSparklineTypePtrInput {
	return (*templateKpiSparklineTypePtr)(&v)
}

func (*templateKpiSparklineTypePtr) ElementType() reflect.Type {
	return templateKpiSparklineTypePtrType
}

func (in *templateKpiSparklineTypePtr) ToTemplateKpiSparklineTypePtrOutput() TemplateKpiSparklineTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateKpiSparklineTypePtrOutput)
}

func (in *templateKpiSparklineTypePtr) ToTemplateKpiSparklineTypePtrOutputWithContext(ctx context.Context) TemplateKpiSparklineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateKpiSparklineTypePtrOutput)
}

type TemplateKpiVisualStandardLayoutType string

const (
	TemplateKpiVisualStandardLayoutTypeClassic  = TemplateKpiVisualStandardLayoutType("CLASSIC")
	TemplateKpiVisualStandardLayoutTypeVertical = TemplateKpiVisualStandardLayoutType("VERTICAL")
)

func (TemplateKpiVisualStandardLayoutType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiVisualStandardLayoutType)(nil)).Elem()
}

func (e TemplateKpiVisualStandardLayoutType) ToTemplateKpiVisualStandardLayoutTypeOutput() TemplateKpiVisualStandardLayoutTypeOutput {
	return pulumi.ToOutput(e).(TemplateKpiVisualStandardLayoutTypeOutput)
}

func (e TemplateKpiVisualStandardLayoutType) ToTemplateKpiVisualStandardLayoutTypeOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateKpiVisualStandardLayoutTypeOutput)
}

func (e TemplateKpiVisualStandardLayoutType) ToTemplateKpiVisualStandardLayoutTypePtrOutput() TemplateKpiVisualStandardLayoutTypePtrOutput {
	return e.ToTemplateKpiVisualStandardLayoutTypePtrOutputWithContext(context.Background())
}

func (e TemplateKpiVisualStandardLayoutType) ToTemplateKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutTypePtrOutput {
	return TemplateKpiVisualStandardLayoutType(e).ToTemplateKpiVisualStandardLayoutTypeOutputWithContext(ctx).ToTemplateKpiVisualStandardLayoutTypePtrOutputWithContext(ctx)
}

func (e TemplateKpiVisualStandardLayoutType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateKpiVisualStandardLayoutType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateKpiVisualStandardLayoutType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateKpiVisualStandardLayoutType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateKpiVisualStandardLayoutTypeOutput struct{ *pulumi.OutputState }

func (TemplateKpiVisualStandardLayoutTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiVisualStandardLayoutType)(nil)).Elem()
}

func (o TemplateKpiVisualStandardLayoutTypeOutput) ToTemplateKpiVisualStandardLayoutTypeOutput() TemplateKpiVisualStandardLayoutTypeOutput {
	return o
}

func (o TemplateKpiVisualStandardLayoutTypeOutput) ToTemplateKpiVisualStandardLayoutTypeOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutTypeOutput {
	return o
}

func (o TemplateKpiVisualStandardLayoutTypeOutput) ToTemplateKpiVisualStandardLayoutTypePtrOutput() TemplateKpiVisualStandardLayoutTypePtrOutput {
	return o.ToTemplateKpiVisualStandardLayoutTypePtrOutputWithContext(context.Background())
}

func (o TemplateKpiVisualStandardLayoutTypeOutput) ToTemplateKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiVisualStandardLayoutType) *TemplateKpiVisualStandardLayoutType {
		return &v
	}).(TemplateKpiVisualStandardLayoutTypePtrOutput)
}

func (o TemplateKpiVisualStandardLayoutTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateKpiVisualStandardLayoutTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateKpiVisualStandardLayoutType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateKpiVisualStandardLayoutTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateKpiVisualStandardLayoutTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateKpiVisualStandardLayoutType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateKpiVisualStandardLayoutTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiVisualStandardLayoutTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiVisualStandardLayoutType)(nil)).Elem()
}

func (o TemplateKpiVisualStandardLayoutTypePtrOutput) ToTemplateKpiVisualStandardLayoutTypePtrOutput() TemplateKpiVisualStandardLayoutTypePtrOutput {
	return o
}

func (o TemplateKpiVisualStandardLayoutTypePtrOutput) ToTemplateKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutTypePtrOutput {
	return o
}

func (o TemplateKpiVisualStandardLayoutTypePtrOutput) Elem() TemplateKpiVisualStandardLayoutTypeOutput {
	return o.ApplyT(func(v *TemplateKpiVisualStandardLayoutType) TemplateKpiVisualStandardLayoutType {
		if v != nil {
			return *v
		}
		var ret TemplateKpiVisualStandardLayoutType
		return ret
	}).(TemplateKpiVisualStandardLayoutTypeOutput)
}

func (o TemplateKpiVisualStandardLayoutTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateKpiVisualStandardLayoutTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateKpiVisualStandardLayoutType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateKpiVisualStandardLayoutTypeInput is an input type that accepts values of the TemplateKpiVisualStandardLayoutType enum
// A concrete instance of `TemplateKpiVisualStandardLayoutTypeInput` can be one of the following:
//
//	TemplateKpiVisualStandardLayoutTypeClassic
//	TemplateKpiVisualStandardLayoutTypeVertical
type TemplateKpiVisualStandardLayoutTypeInput interface {
	pulumi.Input

	ToTemplateKpiVisualStandardLayoutTypeOutput() TemplateKpiVisualStandardLayoutTypeOutput
	ToTemplateKpiVisualStandardLayoutTypeOutputWithContext(context.Context) TemplateKpiVisualStandardLayoutTypeOutput
}

var templateKpiVisualStandardLayoutTypePtrType = reflect.TypeOf((**TemplateKpiVisualStandardLayoutType)(nil)).Elem()

type TemplateKpiVisualStandardLayoutTypePtrInput interface {
	pulumi.Input

	ToTemplateKpiVisualStandardLayoutTypePtrOutput() TemplateKpiVisualStandardLayoutTypePtrOutput
	ToTemplateKpiVisualStandardLayoutTypePtrOutputWithContext(context.Context) TemplateKpiVisualStandardLayoutTypePtrOutput
}

type templateKpiVisualStandardLayoutTypePtr string

func TemplateKpiVisualStandardLayoutTypePtr(v string) TemplateKpiVisualStandardLayoutTypePtrInput {
	return (*templateKpiVisualStandardLayoutTypePtr)(&v)
}

func (*templateKpiVisualStandardLayoutTypePtr) ElementType() reflect.Type {
	return templateKpiVisualStandardLayoutTypePtrType
}

func (in *templateKpiVisualStandardLayoutTypePtr) ToTemplateKpiVisualStandardLayoutTypePtrOutput() TemplateKpiVisualStandardLayoutTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateKpiVisualStandardLayoutTypePtrOutput)
}

func (in *templateKpiVisualStandardLayoutTypePtr) ToTemplateKpiVisualStandardLayoutTypePtrOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateKpiVisualStandardLayoutTypePtrOutput)
}

type TemplateLayoutElementType string

const (
	TemplateLayoutElementTypeVisual           = TemplateLayoutElementType("VISUAL")
	TemplateLayoutElementTypeFilterControl    = TemplateLayoutElementType("FILTER_CONTROL")
	TemplateLayoutElementTypeParameterControl = TemplateLayoutElementType("PARAMETER_CONTROL")
	TemplateLayoutElementTypeTextBox          = TemplateLayoutElementType("TEXT_BOX")
)

func (TemplateLayoutElementType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLayoutElementType)(nil)).Elem()
}

func (e TemplateLayoutElementType) ToTemplateLayoutElementTypeOutput() TemplateLayoutElementTypeOutput {
	return pulumi.ToOutput(e).(TemplateLayoutElementTypeOutput)
}

func (e TemplateLayoutElementType) ToTemplateLayoutElementTypeOutputWithContext(ctx context.Context) TemplateLayoutElementTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateLayoutElementTypeOutput)
}

func (e TemplateLayoutElementType) ToTemplateLayoutElementTypePtrOutput() TemplateLayoutElementTypePtrOutput {
	return e.ToTemplateLayoutElementTypePtrOutputWithContext(context.Background())
}

func (e TemplateLayoutElementType) ToTemplateLayoutElementTypePtrOutputWithContext(ctx context.Context) TemplateLayoutElementTypePtrOutput {
	return TemplateLayoutElementType(e).ToTemplateLayoutElementTypeOutputWithContext(ctx).ToTemplateLayoutElementTypePtrOutputWithContext(ctx)
}

func (e TemplateLayoutElementType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLayoutElementType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLayoutElementType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateLayoutElementType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateLayoutElementTypeOutput struct{ *pulumi.OutputState }

func (TemplateLayoutElementTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLayoutElementType)(nil)).Elem()
}

func (o TemplateLayoutElementTypeOutput) ToTemplateLayoutElementTypeOutput() TemplateLayoutElementTypeOutput {
	return o
}

func (o TemplateLayoutElementTypeOutput) ToTemplateLayoutElementTypeOutputWithContext(ctx context.Context) TemplateLayoutElementTypeOutput {
	return o
}

func (o TemplateLayoutElementTypeOutput) ToTemplateLayoutElementTypePtrOutput() TemplateLayoutElementTypePtrOutput {
	return o.ToTemplateLayoutElementTypePtrOutputWithContext(context.Background())
}

func (o TemplateLayoutElementTypeOutput) ToTemplateLayoutElementTypePtrOutputWithContext(ctx context.Context) TemplateLayoutElementTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLayoutElementType) *TemplateLayoutElementType {
		return &v
	}).(TemplateLayoutElementTypePtrOutput)
}

func (o TemplateLayoutElementTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateLayoutElementTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLayoutElementType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateLayoutElementTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLayoutElementTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLayoutElementType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateLayoutElementTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateLayoutElementTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLayoutElementType)(nil)).Elem()
}

func (o TemplateLayoutElementTypePtrOutput) ToTemplateLayoutElementTypePtrOutput() TemplateLayoutElementTypePtrOutput {
	return o
}

func (o TemplateLayoutElementTypePtrOutput) ToTemplateLayoutElementTypePtrOutputWithContext(ctx context.Context) TemplateLayoutElementTypePtrOutput {
	return o
}

func (o TemplateLayoutElementTypePtrOutput) Elem() TemplateLayoutElementTypeOutput {
	return o.ApplyT(func(v *TemplateLayoutElementType) TemplateLayoutElementType {
		if v != nil {
			return *v
		}
		var ret TemplateLayoutElementType
		return ret
	}).(TemplateLayoutElementTypeOutput)
}

func (o TemplateLayoutElementTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLayoutElementTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateLayoutElementType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateLayoutElementTypeInput is an input type that accepts values of the TemplateLayoutElementType enum
// A concrete instance of `TemplateLayoutElementTypeInput` can be one of the following:
//
//	TemplateLayoutElementTypeVisual
//	TemplateLayoutElementTypeFilterControl
//	TemplateLayoutElementTypeParameterControl
//	TemplateLayoutElementTypeTextBox
type TemplateLayoutElementTypeInput interface {
	pulumi.Input

	ToTemplateLayoutElementTypeOutput() TemplateLayoutElementTypeOutput
	ToTemplateLayoutElementTypeOutputWithContext(context.Context) TemplateLayoutElementTypeOutput
}

var templateLayoutElementTypePtrType = reflect.TypeOf((**TemplateLayoutElementType)(nil)).Elem()

type TemplateLayoutElementTypePtrInput interface {
	pulumi.Input

	ToTemplateLayoutElementTypePtrOutput() TemplateLayoutElementTypePtrOutput
	ToTemplateLayoutElementTypePtrOutputWithContext(context.Context) TemplateLayoutElementTypePtrOutput
}

type templateLayoutElementTypePtr string

func TemplateLayoutElementTypePtr(v string) TemplateLayoutElementTypePtrInput {
	return (*templateLayoutElementTypePtr)(&v)
}

func (*templateLayoutElementTypePtr) ElementType() reflect.Type {
	return templateLayoutElementTypePtrType
}

func (in *templateLayoutElementTypePtr) ToTemplateLayoutElementTypePtrOutput() TemplateLayoutElementTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateLayoutElementTypePtrOutput)
}

func (in *templateLayoutElementTypePtr) ToTemplateLayoutElementTypePtrOutputWithContext(ctx context.Context) TemplateLayoutElementTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateLayoutElementTypePtrOutput)
}

type TemplateLegendPosition string

const (
	TemplateLegendPositionAuto   = TemplateLegendPosition("AUTO")
	TemplateLegendPositionRight  = TemplateLegendPosition("RIGHT")
	TemplateLegendPositionBottom = TemplateLegendPosition("BOTTOM")
	TemplateLegendPositionTop    = TemplateLegendPosition("TOP")
)

func (TemplateLegendPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLegendPosition)(nil)).Elem()
}

func (e TemplateLegendPosition) ToTemplateLegendPositionOutput() TemplateLegendPositionOutput {
	return pulumi.ToOutput(e).(TemplateLegendPositionOutput)
}

func (e TemplateLegendPosition) ToTemplateLegendPositionOutputWithContext(ctx context.Context) TemplateLegendPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateLegendPositionOutput)
}

func (e TemplateLegendPosition) ToTemplateLegendPositionPtrOutput() TemplateLegendPositionPtrOutput {
	return e.ToTemplateLegendPositionPtrOutputWithContext(context.Background())
}

func (e TemplateLegendPosition) ToTemplateLegendPositionPtrOutputWithContext(ctx context.Context) TemplateLegendPositionPtrOutput {
	return TemplateLegendPosition(e).ToTemplateLegendPositionOutputWithContext(ctx).ToTemplateLegendPositionPtrOutputWithContext(ctx)
}

func (e TemplateLegendPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLegendPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLegendPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateLegendPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateLegendPositionOutput struct{ *pulumi.OutputState }

func (TemplateLegendPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLegendPosition)(nil)).Elem()
}

func (o TemplateLegendPositionOutput) ToTemplateLegendPositionOutput() TemplateLegendPositionOutput {
	return o
}

func (o TemplateLegendPositionOutput) ToTemplateLegendPositionOutputWithContext(ctx context.Context) TemplateLegendPositionOutput {
	return o
}

func (o TemplateLegendPositionOutput) ToTemplateLegendPositionPtrOutput() TemplateLegendPositionPtrOutput {
	return o.ToTemplateLegendPositionPtrOutputWithContext(context.Background())
}

func (o TemplateLegendPositionOutput) ToTemplateLegendPositionPtrOutputWithContext(ctx context.Context) TemplateLegendPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLegendPosition) *TemplateLegendPosition {
		return &v
	}).(TemplateLegendPositionPtrOutput)
}

func (o TemplateLegendPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateLegendPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLegendPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateLegendPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLegendPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLegendPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateLegendPositionPtrOutput struct{ *pulumi.OutputState }

func (TemplateLegendPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLegendPosition)(nil)).Elem()
}

func (o TemplateLegendPositionPtrOutput) ToTemplateLegendPositionPtrOutput() TemplateLegendPositionPtrOutput {
	return o
}

func (o TemplateLegendPositionPtrOutput) ToTemplateLegendPositionPtrOutputWithContext(ctx context.Context) TemplateLegendPositionPtrOutput {
	return o
}

func (o TemplateLegendPositionPtrOutput) Elem() TemplateLegendPositionOutput {
	return o.ApplyT(func(v *TemplateLegendPosition) TemplateLegendPosition {
		if v != nil {
			return *v
		}
		var ret TemplateLegendPosition
		return ret
	}).(TemplateLegendPositionOutput)
}

func (o TemplateLegendPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLegendPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateLegendPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateLegendPositionInput is an input type that accepts values of the TemplateLegendPosition enum
// A concrete instance of `TemplateLegendPositionInput` can be one of the following:
//
//	TemplateLegendPositionAuto
//	TemplateLegendPositionRight
//	TemplateLegendPositionBottom
//	TemplateLegendPositionTop
type TemplateLegendPositionInput interface {
	pulumi.Input

	ToTemplateLegendPositionOutput() TemplateLegendPositionOutput
	ToTemplateLegendPositionOutputWithContext(context.Context) TemplateLegendPositionOutput
}

var templateLegendPositionPtrType = reflect.TypeOf((**TemplateLegendPosition)(nil)).Elem()

type TemplateLegendPositionPtrInput interface {
	pulumi.Input

	ToTemplateLegendPositionPtrOutput() TemplateLegendPositionPtrOutput
	ToTemplateLegendPositionPtrOutputWithContext(context.Context) TemplateLegendPositionPtrOutput
}

type templateLegendPositionPtr string

func TemplateLegendPositionPtr(v string) TemplateLegendPositionPtrInput {
	return (*templateLegendPositionPtr)(&v)
}

func (*templateLegendPositionPtr) ElementType() reflect.Type {
	return templateLegendPositionPtrType
}

func (in *templateLegendPositionPtr) ToTemplateLegendPositionPtrOutput() TemplateLegendPositionPtrOutput {
	return pulumi.ToOutput(in).(TemplateLegendPositionPtrOutput)
}

func (in *templateLegendPositionPtr) ToTemplateLegendPositionPtrOutputWithContext(ctx context.Context) TemplateLegendPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateLegendPositionPtrOutput)
}

type TemplateLineChartLineStyle string

const (
	TemplateLineChartLineStyleSolid  = TemplateLineChartLineStyle("SOLID")
	TemplateLineChartLineStyleDotted = TemplateLineChartLineStyle("DOTTED")
	TemplateLineChartLineStyleDashed = TemplateLineChartLineStyle("DASHED")
)

func (TemplateLineChartLineStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartLineStyle)(nil)).Elem()
}

func (e TemplateLineChartLineStyle) ToTemplateLineChartLineStyleOutput() TemplateLineChartLineStyleOutput {
	return pulumi.ToOutput(e).(TemplateLineChartLineStyleOutput)
}

func (e TemplateLineChartLineStyle) ToTemplateLineChartLineStyleOutputWithContext(ctx context.Context) TemplateLineChartLineStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateLineChartLineStyleOutput)
}

func (e TemplateLineChartLineStyle) ToTemplateLineChartLineStylePtrOutput() TemplateLineChartLineStylePtrOutput {
	return e.ToTemplateLineChartLineStylePtrOutputWithContext(context.Background())
}

func (e TemplateLineChartLineStyle) ToTemplateLineChartLineStylePtrOutputWithContext(ctx context.Context) TemplateLineChartLineStylePtrOutput {
	return TemplateLineChartLineStyle(e).ToTemplateLineChartLineStyleOutputWithContext(ctx).ToTemplateLineChartLineStylePtrOutputWithContext(ctx)
}

func (e TemplateLineChartLineStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLineChartLineStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLineChartLineStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateLineChartLineStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateLineChartLineStyleOutput struct{ *pulumi.OutputState }

func (TemplateLineChartLineStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartLineStyle)(nil)).Elem()
}

func (o TemplateLineChartLineStyleOutput) ToTemplateLineChartLineStyleOutput() TemplateLineChartLineStyleOutput {
	return o
}

func (o TemplateLineChartLineStyleOutput) ToTemplateLineChartLineStyleOutputWithContext(ctx context.Context) TemplateLineChartLineStyleOutput {
	return o
}

func (o TemplateLineChartLineStyleOutput) ToTemplateLineChartLineStylePtrOutput() TemplateLineChartLineStylePtrOutput {
	return o.ToTemplateLineChartLineStylePtrOutputWithContext(context.Background())
}

func (o TemplateLineChartLineStyleOutput) ToTemplateLineChartLineStylePtrOutputWithContext(ctx context.Context) TemplateLineChartLineStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartLineStyle) *TemplateLineChartLineStyle {
		return &v
	}).(TemplateLineChartLineStylePtrOutput)
}

func (o TemplateLineChartLineStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateLineChartLineStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLineChartLineStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateLineChartLineStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartLineStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLineChartLineStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateLineChartLineStylePtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartLineStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartLineStyle)(nil)).Elem()
}

func (o TemplateLineChartLineStylePtrOutput) ToTemplateLineChartLineStylePtrOutput() TemplateLineChartLineStylePtrOutput {
	return o
}

func (o TemplateLineChartLineStylePtrOutput) ToTemplateLineChartLineStylePtrOutputWithContext(ctx context.Context) TemplateLineChartLineStylePtrOutput {
	return o
}

func (o TemplateLineChartLineStylePtrOutput) Elem() TemplateLineChartLineStyleOutput {
	return o.ApplyT(func(v *TemplateLineChartLineStyle) TemplateLineChartLineStyle {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartLineStyle
		return ret
	}).(TemplateLineChartLineStyleOutput)
}

func (o TemplateLineChartLineStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartLineStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateLineChartLineStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateLineChartLineStyleInput is an input type that accepts values of the TemplateLineChartLineStyle enum
// A concrete instance of `TemplateLineChartLineStyleInput` can be one of the following:
//
//	TemplateLineChartLineStyleSolid
//	TemplateLineChartLineStyleDotted
//	TemplateLineChartLineStyleDashed
type TemplateLineChartLineStyleInput interface {
	pulumi.Input

	ToTemplateLineChartLineStyleOutput() TemplateLineChartLineStyleOutput
	ToTemplateLineChartLineStyleOutputWithContext(context.Context) TemplateLineChartLineStyleOutput
}

var templateLineChartLineStylePtrType = reflect.TypeOf((**TemplateLineChartLineStyle)(nil)).Elem()

type TemplateLineChartLineStylePtrInput interface {
	pulumi.Input

	ToTemplateLineChartLineStylePtrOutput() TemplateLineChartLineStylePtrOutput
	ToTemplateLineChartLineStylePtrOutputWithContext(context.Context) TemplateLineChartLineStylePtrOutput
}

type templateLineChartLineStylePtr string

func TemplateLineChartLineStylePtr(v string) TemplateLineChartLineStylePtrInput {
	return (*templateLineChartLineStylePtr)(&v)
}

func (*templateLineChartLineStylePtr) ElementType() reflect.Type {
	return templateLineChartLineStylePtrType
}

func (in *templateLineChartLineStylePtr) ToTemplateLineChartLineStylePtrOutput() TemplateLineChartLineStylePtrOutput {
	return pulumi.ToOutput(in).(TemplateLineChartLineStylePtrOutput)
}

func (in *templateLineChartLineStylePtr) ToTemplateLineChartLineStylePtrOutputWithContext(ctx context.Context) TemplateLineChartLineStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateLineChartLineStylePtrOutput)
}

type TemplateLineChartMarkerShape string

const (
	TemplateLineChartMarkerShapeCircle        = TemplateLineChartMarkerShape("CIRCLE")
	TemplateLineChartMarkerShapeTriangle      = TemplateLineChartMarkerShape("TRIANGLE")
	TemplateLineChartMarkerShapeSquare        = TemplateLineChartMarkerShape("SQUARE")
	TemplateLineChartMarkerShapeDiamond       = TemplateLineChartMarkerShape("DIAMOND")
	TemplateLineChartMarkerShapeRoundedSquare = TemplateLineChartMarkerShape("ROUNDED_SQUARE")
)

func (TemplateLineChartMarkerShape) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartMarkerShape)(nil)).Elem()
}

func (e TemplateLineChartMarkerShape) ToTemplateLineChartMarkerShapeOutput() TemplateLineChartMarkerShapeOutput {
	return pulumi.ToOutput(e).(TemplateLineChartMarkerShapeOutput)
}

func (e TemplateLineChartMarkerShape) ToTemplateLineChartMarkerShapeOutputWithContext(ctx context.Context) TemplateLineChartMarkerShapeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateLineChartMarkerShapeOutput)
}

func (e TemplateLineChartMarkerShape) ToTemplateLineChartMarkerShapePtrOutput() TemplateLineChartMarkerShapePtrOutput {
	return e.ToTemplateLineChartMarkerShapePtrOutputWithContext(context.Background())
}

func (e TemplateLineChartMarkerShape) ToTemplateLineChartMarkerShapePtrOutputWithContext(ctx context.Context) TemplateLineChartMarkerShapePtrOutput {
	return TemplateLineChartMarkerShape(e).ToTemplateLineChartMarkerShapeOutputWithContext(ctx).ToTemplateLineChartMarkerShapePtrOutputWithContext(ctx)
}

func (e TemplateLineChartMarkerShape) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLineChartMarkerShape) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLineChartMarkerShape) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateLineChartMarkerShape) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateLineChartMarkerShapeOutput struct{ *pulumi.OutputState }

func (TemplateLineChartMarkerShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartMarkerShape)(nil)).Elem()
}

func (o TemplateLineChartMarkerShapeOutput) ToTemplateLineChartMarkerShapeOutput() TemplateLineChartMarkerShapeOutput {
	return o
}

func (o TemplateLineChartMarkerShapeOutput) ToTemplateLineChartMarkerShapeOutputWithContext(ctx context.Context) TemplateLineChartMarkerShapeOutput {
	return o
}

func (o TemplateLineChartMarkerShapeOutput) ToTemplateLineChartMarkerShapePtrOutput() TemplateLineChartMarkerShapePtrOutput {
	return o.ToTemplateLineChartMarkerShapePtrOutputWithContext(context.Background())
}

func (o TemplateLineChartMarkerShapeOutput) ToTemplateLineChartMarkerShapePtrOutputWithContext(ctx context.Context) TemplateLineChartMarkerShapePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartMarkerShape) *TemplateLineChartMarkerShape {
		return &v
	}).(TemplateLineChartMarkerShapePtrOutput)
}

func (o TemplateLineChartMarkerShapeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateLineChartMarkerShapeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLineChartMarkerShape) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateLineChartMarkerShapeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartMarkerShapeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLineChartMarkerShape) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateLineChartMarkerShapePtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartMarkerShapePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartMarkerShape)(nil)).Elem()
}

func (o TemplateLineChartMarkerShapePtrOutput) ToTemplateLineChartMarkerShapePtrOutput() TemplateLineChartMarkerShapePtrOutput {
	return o
}

func (o TemplateLineChartMarkerShapePtrOutput) ToTemplateLineChartMarkerShapePtrOutputWithContext(ctx context.Context) TemplateLineChartMarkerShapePtrOutput {
	return o
}

func (o TemplateLineChartMarkerShapePtrOutput) Elem() TemplateLineChartMarkerShapeOutput {
	return o.ApplyT(func(v *TemplateLineChartMarkerShape) TemplateLineChartMarkerShape {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartMarkerShape
		return ret
	}).(TemplateLineChartMarkerShapeOutput)
}

func (o TemplateLineChartMarkerShapePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartMarkerShapePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateLineChartMarkerShape) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateLineChartMarkerShapeInput is an input type that accepts values of the TemplateLineChartMarkerShape enum
// A concrete instance of `TemplateLineChartMarkerShapeInput` can be one of the following:
//
//	TemplateLineChartMarkerShapeCircle
//	TemplateLineChartMarkerShapeTriangle
//	TemplateLineChartMarkerShapeSquare
//	TemplateLineChartMarkerShapeDiamond
//	TemplateLineChartMarkerShapeRoundedSquare
type TemplateLineChartMarkerShapeInput interface {
	pulumi.Input

	ToTemplateLineChartMarkerShapeOutput() TemplateLineChartMarkerShapeOutput
	ToTemplateLineChartMarkerShapeOutputWithContext(context.Context) TemplateLineChartMarkerShapeOutput
}

var templateLineChartMarkerShapePtrType = reflect.TypeOf((**TemplateLineChartMarkerShape)(nil)).Elem()

type TemplateLineChartMarkerShapePtrInput interface {
	pulumi.Input

	ToTemplateLineChartMarkerShapePtrOutput() TemplateLineChartMarkerShapePtrOutput
	ToTemplateLineChartMarkerShapePtrOutputWithContext(context.Context) TemplateLineChartMarkerShapePtrOutput
}

type templateLineChartMarkerShapePtr string

func TemplateLineChartMarkerShapePtr(v string) TemplateLineChartMarkerShapePtrInput {
	return (*templateLineChartMarkerShapePtr)(&v)
}

func (*templateLineChartMarkerShapePtr) ElementType() reflect.Type {
	return templateLineChartMarkerShapePtrType
}

func (in *templateLineChartMarkerShapePtr) ToTemplateLineChartMarkerShapePtrOutput() TemplateLineChartMarkerShapePtrOutput {
	return pulumi.ToOutput(in).(TemplateLineChartMarkerShapePtrOutput)
}

func (in *templateLineChartMarkerShapePtr) ToTemplateLineChartMarkerShapePtrOutputWithContext(ctx context.Context) TemplateLineChartMarkerShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateLineChartMarkerShapePtrOutput)
}

type TemplateLineChartType string

const (
	TemplateLineChartTypeLine        = TemplateLineChartType("LINE")
	TemplateLineChartTypeArea        = TemplateLineChartType("AREA")
	TemplateLineChartTypeStackedArea = TemplateLineChartType("STACKED_AREA")
)

func (TemplateLineChartType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartType)(nil)).Elem()
}

func (e TemplateLineChartType) ToTemplateLineChartTypeOutput() TemplateLineChartTypeOutput {
	return pulumi.ToOutput(e).(TemplateLineChartTypeOutput)
}

func (e TemplateLineChartType) ToTemplateLineChartTypeOutputWithContext(ctx context.Context) TemplateLineChartTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateLineChartTypeOutput)
}

func (e TemplateLineChartType) ToTemplateLineChartTypePtrOutput() TemplateLineChartTypePtrOutput {
	return e.ToTemplateLineChartTypePtrOutputWithContext(context.Background())
}

func (e TemplateLineChartType) ToTemplateLineChartTypePtrOutputWithContext(ctx context.Context) TemplateLineChartTypePtrOutput {
	return TemplateLineChartType(e).ToTemplateLineChartTypeOutputWithContext(ctx).ToTemplateLineChartTypePtrOutputWithContext(ctx)
}

func (e TemplateLineChartType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLineChartType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLineChartType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateLineChartType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateLineChartTypeOutput struct{ *pulumi.OutputState }

func (TemplateLineChartTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartType)(nil)).Elem()
}

func (o TemplateLineChartTypeOutput) ToTemplateLineChartTypeOutput() TemplateLineChartTypeOutput {
	return o
}

func (o TemplateLineChartTypeOutput) ToTemplateLineChartTypeOutputWithContext(ctx context.Context) TemplateLineChartTypeOutput {
	return o
}

func (o TemplateLineChartTypeOutput) ToTemplateLineChartTypePtrOutput() TemplateLineChartTypePtrOutput {
	return o.ToTemplateLineChartTypePtrOutputWithContext(context.Background())
}

func (o TemplateLineChartTypeOutput) ToTemplateLineChartTypePtrOutputWithContext(ctx context.Context) TemplateLineChartTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartType) *TemplateLineChartType {
		return &v
	}).(TemplateLineChartTypePtrOutput)
}

func (o TemplateLineChartTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateLineChartTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLineChartType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateLineChartTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLineChartType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateLineChartTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartType)(nil)).Elem()
}

func (o TemplateLineChartTypePtrOutput) ToTemplateLineChartTypePtrOutput() TemplateLineChartTypePtrOutput {
	return o
}

func (o TemplateLineChartTypePtrOutput) ToTemplateLineChartTypePtrOutputWithContext(ctx context.Context) TemplateLineChartTypePtrOutput {
	return o
}

func (o TemplateLineChartTypePtrOutput) Elem() TemplateLineChartTypeOutput {
	return o.ApplyT(func(v *TemplateLineChartType) TemplateLineChartType {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartType
		return ret
	}).(TemplateLineChartTypeOutput)
}

func (o TemplateLineChartTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateLineChartType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateLineChartTypeInput is an input type that accepts values of the TemplateLineChartType enum
// A concrete instance of `TemplateLineChartTypeInput` can be one of the following:
//
//	TemplateLineChartTypeLine
//	TemplateLineChartTypeArea
//	TemplateLineChartTypeStackedArea
type TemplateLineChartTypeInput interface {
	pulumi.Input

	ToTemplateLineChartTypeOutput() TemplateLineChartTypeOutput
	ToTemplateLineChartTypeOutputWithContext(context.Context) TemplateLineChartTypeOutput
}

var templateLineChartTypePtrType = reflect.TypeOf((**TemplateLineChartType)(nil)).Elem()

type TemplateLineChartTypePtrInput interface {
	pulumi.Input

	ToTemplateLineChartTypePtrOutput() TemplateLineChartTypePtrOutput
	ToTemplateLineChartTypePtrOutputWithContext(context.Context) TemplateLineChartTypePtrOutput
}

type templateLineChartTypePtr string

func TemplateLineChartTypePtr(v string) TemplateLineChartTypePtrInput {
	return (*templateLineChartTypePtr)(&v)
}

func (*templateLineChartTypePtr) ElementType() reflect.Type {
	return templateLineChartTypePtrType
}

func (in *templateLineChartTypePtr) ToTemplateLineChartTypePtrOutput() TemplateLineChartTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateLineChartTypePtrOutput)
}

func (in *templateLineChartTypePtr) ToTemplateLineChartTypePtrOutputWithContext(ctx context.Context) TemplateLineChartTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateLineChartTypePtrOutput)
}

type TemplateLineInterpolation string

const (
	TemplateLineInterpolationLinear  = TemplateLineInterpolation("LINEAR")
	TemplateLineInterpolationSmooth  = TemplateLineInterpolation("SMOOTH")
	TemplateLineInterpolationStepped = TemplateLineInterpolation("STEPPED")
)

func (TemplateLineInterpolation) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineInterpolation)(nil)).Elem()
}

func (e TemplateLineInterpolation) ToTemplateLineInterpolationOutput() TemplateLineInterpolationOutput {
	return pulumi.ToOutput(e).(TemplateLineInterpolationOutput)
}

func (e TemplateLineInterpolation) ToTemplateLineInterpolationOutputWithContext(ctx context.Context) TemplateLineInterpolationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateLineInterpolationOutput)
}

func (e TemplateLineInterpolation) ToTemplateLineInterpolationPtrOutput() TemplateLineInterpolationPtrOutput {
	return e.ToTemplateLineInterpolationPtrOutputWithContext(context.Background())
}

func (e TemplateLineInterpolation) ToTemplateLineInterpolationPtrOutputWithContext(ctx context.Context) TemplateLineInterpolationPtrOutput {
	return TemplateLineInterpolation(e).ToTemplateLineInterpolationOutputWithContext(ctx).ToTemplateLineInterpolationPtrOutputWithContext(ctx)
}

func (e TemplateLineInterpolation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLineInterpolation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateLineInterpolation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateLineInterpolation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateLineInterpolationOutput struct{ *pulumi.OutputState }

func (TemplateLineInterpolationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineInterpolation)(nil)).Elem()
}

func (o TemplateLineInterpolationOutput) ToTemplateLineInterpolationOutput() TemplateLineInterpolationOutput {
	return o
}

func (o TemplateLineInterpolationOutput) ToTemplateLineInterpolationOutputWithContext(ctx context.Context) TemplateLineInterpolationOutput {
	return o
}

func (o TemplateLineInterpolationOutput) ToTemplateLineInterpolationPtrOutput() TemplateLineInterpolationPtrOutput {
	return o.ToTemplateLineInterpolationPtrOutputWithContext(context.Background())
}

func (o TemplateLineInterpolationOutput) ToTemplateLineInterpolationPtrOutputWithContext(ctx context.Context) TemplateLineInterpolationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineInterpolation) *TemplateLineInterpolation {
		return &v
	}).(TemplateLineInterpolationPtrOutput)
}

func (o TemplateLineInterpolationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateLineInterpolationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLineInterpolation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateLineInterpolationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLineInterpolationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateLineInterpolation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateLineInterpolationPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineInterpolationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineInterpolation)(nil)).Elem()
}

func (o TemplateLineInterpolationPtrOutput) ToTemplateLineInterpolationPtrOutput() TemplateLineInterpolationPtrOutput {
	return o
}

func (o TemplateLineInterpolationPtrOutput) ToTemplateLineInterpolationPtrOutputWithContext(ctx context.Context) TemplateLineInterpolationPtrOutput {
	return o
}

func (o TemplateLineInterpolationPtrOutput) Elem() TemplateLineInterpolationOutput {
	return o.ApplyT(func(v *TemplateLineInterpolation) TemplateLineInterpolation {
		if v != nil {
			return *v
		}
		var ret TemplateLineInterpolation
		return ret
	}).(TemplateLineInterpolationOutput)
}

func (o TemplateLineInterpolationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateLineInterpolationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateLineInterpolation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateLineInterpolationInput is an input type that accepts values of the TemplateLineInterpolation enum
// A concrete instance of `TemplateLineInterpolationInput` can be one of the following:
//
//	TemplateLineInterpolationLinear
//	TemplateLineInterpolationSmooth
//	TemplateLineInterpolationStepped
type TemplateLineInterpolationInput interface {
	pulumi.Input

	ToTemplateLineInterpolationOutput() TemplateLineInterpolationOutput
	ToTemplateLineInterpolationOutputWithContext(context.Context) TemplateLineInterpolationOutput
}

var templateLineInterpolationPtrType = reflect.TypeOf((**TemplateLineInterpolation)(nil)).Elem()

type TemplateLineInterpolationPtrInput interface {
	pulumi.Input

	ToTemplateLineInterpolationPtrOutput() TemplateLineInterpolationPtrOutput
	ToTemplateLineInterpolationPtrOutputWithContext(context.Context) TemplateLineInterpolationPtrOutput
}

type templateLineInterpolationPtr string

func TemplateLineInterpolationPtr(v string) TemplateLineInterpolationPtrInput {
	return (*templateLineInterpolationPtr)(&v)
}

func (*templateLineInterpolationPtr) ElementType() reflect.Type {
	return templateLineInterpolationPtrType
}

func (in *templateLineInterpolationPtr) ToTemplateLineInterpolationPtrOutput() TemplateLineInterpolationPtrOutput {
	return pulumi.ToOutput(in).(TemplateLineInterpolationPtrOutput)
}

func (in *templateLineInterpolationPtr) ToTemplateLineInterpolationPtrOutputWithContext(ctx context.Context) TemplateLineInterpolationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateLineInterpolationPtrOutput)
}

type TemplateMapZoomMode string

const (
	TemplateMapZoomModeAuto   = TemplateMapZoomMode("AUTO")
	TemplateMapZoomModeManual = TemplateMapZoomMode("MANUAL")
)

func (TemplateMapZoomMode) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMapZoomMode)(nil)).Elem()
}

func (e TemplateMapZoomMode) ToTemplateMapZoomModeOutput() TemplateMapZoomModeOutput {
	return pulumi.ToOutput(e).(TemplateMapZoomModeOutput)
}

func (e TemplateMapZoomMode) ToTemplateMapZoomModeOutputWithContext(ctx context.Context) TemplateMapZoomModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateMapZoomModeOutput)
}

func (e TemplateMapZoomMode) ToTemplateMapZoomModePtrOutput() TemplateMapZoomModePtrOutput {
	return e.ToTemplateMapZoomModePtrOutputWithContext(context.Background())
}

func (e TemplateMapZoomMode) ToTemplateMapZoomModePtrOutputWithContext(ctx context.Context) TemplateMapZoomModePtrOutput {
	return TemplateMapZoomMode(e).ToTemplateMapZoomModeOutputWithContext(ctx).ToTemplateMapZoomModePtrOutputWithContext(ctx)
}

func (e TemplateMapZoomMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateMapZoomMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateMapZoomMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateMapZoomMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateMapZoomModeOutput struct{ *pulumi.OutputState }

func (TemplateMapZoomModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMapZoomMode)(nil)).Elem()
}

func (o TemplateMapZoomModeOutput) ToTemplateMapZoomModeOutput() TemplateMapZoomModeOutput {
	return o
}

func (o TemplateMapZoomModeOutput) ToTemplateMapZoomModeOutputWithContext(ctx context.Context) TemplateMapZoomModeOutput {
	return o
}

func (o TemplateMapZoomModeOutput) ToTemplateMapZoomModePtrOutput() TemplateMapZoomModePtrOutput {
	return o.ToTemplateMapZoomModePtrOutputWithContext(context.Background())
}

func (o TemplateMapZoomModeOutput) ToTemplateMapZoomModePtrOutputWithContext(ctx context.Context) TemplateMapZoomModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateMapZoomMode) *TemplateMapZoomMode {
		return &v
	}).(TemplateMapZoomModePtrOutput)
}

func (o TemplateMapZoomModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateMapZoomModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateMapZoomMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateMapZoomModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateMapZoomModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateMapZoomMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateMapZoomModePtrOutput struct{ *pulumi.OutputState }

func (TemplateMapZoomModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMapZoomMode)(nil)).Elem()
}

func (o TemplateMapZoomModePtrOutput) ToTemplateMapZoomModePtrOutput() TemplateMapZoomModePtrOutput {
	return o
}

func (o TemplateMapZoomModePtrOutput) ToTemplateMapZoomModePtrOutputWithContext(ctx context.Context) TemplateMapZoomModePtrOutput {
	return o
}

func (o TemplateMapZoomModePtrOutput) Elem() TemplateMapZoomModeOutput {
	return o.ApplyT(func(v *TemplateMapZoomMode) TemplateMapZoomMode {
		if v != nil {
			return *v
		}
		var ret TemplateMapZoomMode
		return ret
	}).(TemplateMapZoomModeOutput)
}

func (o TemplateMapZoomModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateMapZoomModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateMapZoomMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateMapZoomModeInput is an input type that accepts values of the TemplateMapZoomMode enum
// A concrete instance of `TemplateMapZoomModeInput` can be one of the following:
//
//	TemplateMapZoomModeAuto
//	TemplateMapZoomModeManual
type TemplateMapZoomModeInput interface {
	pulumi.Input

	ToTemplateMapZoomModeOutput() TemplateMapZoomModeOutput
	ToTemplateMapZoomModeOutputWithContext(context.Context) TemplateMapZoomModeOutput
}

var templateMapZoomModePtrType = reflect.TypeOf((**TemplateMapZoomMode)(nil)).Elem()

type TemplateMapZoomModePtrInput interface {
	pulumi.Input

	ToTemplateMapZoomModePtrOutput() TemplateMapZoomModePtrOutput
	ToTemplateMapZoomModePtrOutputWithContext(context.Context) TemplateMapZoomModePtrOutput
}

type templateMapZoomModePtr string

func TemplateMapZoomModePtr(v string) TemplateMapZoomModePtrInput {
	return (*templateMapZoomModePtr)(&v)
}

func (*templateMapZoomModePtr) ElementType() reflect.Type {
	return templateMapZoomModePtrType
}

func (in *templateMapZoomModePtr) ToTemplateMapZoomModePtrOutput() TemplateMapZoomModePtrOutput {
	return pulumi.ToOutput(in).(TemplateMapZoomModePtrOutput)
}

func (in *templateMapZoomModePtr) ToTemplateMapZoomModePtrOutputWithContext(ctx context.Context) TemplateMapZoomModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateMapZoomModePtrOutput)
}

type TemplateMaximumMinimumComputationType string

const (
	TemplateMaximumMinimumComputationTypeMaximum = TemplateMaximumMinimumComputationType("MAXIMUM")
	TemplateMaximumMinimumComputationTypeMinimum = TemplateMaximumMinimumComputationType("MINIMUM")
)

func (TemplateMaximumMinimumComputationType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMaximumMinimumComputationType)(nil)).Elem()
}

func (e TemplateMaximumMinimumComputationType) ToTemplateMaximumMinimumComputationTypeOutput() TemplateMaximumMinimumComputationTypeOutput {
	return pulumi.ToOutput(e).(TemplateMaximumMinimumComputationTypeOutput)
}

func (e TemplateMaximumMinimumComputationType) ToTemplateMaximumMinimumComputationTypeOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateMaximumMinimumComputationTypeOutput)
}

func (e TemplateMaximumMinimumComputationType) ToTemplateMaximumMinimumComputationTypePtrOutput() TemplateMaximumMinimumComputationTypePtrOutput {
	return e.ToTemplateMaximumMinimumComputationTypePtrOutputWithContext(context.Background())
}

func (e TemplateMaximumMinimumComputationType) ToTemplateMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationTypePtrOutput {
	return TemplateMaximumMinimumComputationType(e).ToTemplateMaximumMinimumComputationTypeOutputWithContext(ctx).ToTemplateMaximumMinimumComputationTypePtrOutputWithContext(ctx)
}

func (e TemplateMaximumMinimumComputationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateMaximumMinimumComputationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateMaximumMinimumComputationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateMaximumMinimumComputationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateMaximumMinimumComputationTypeOutput struct{ *pulumi.OutputState }

func (TemplateMaximumMinimumComputationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMaximumMinimumComputationType)(nil)).Elem()
}

func (o TemplateMaximumMinimumComputationTypeOutput) ToTemplateMaximumMinimumComputationTypeOutput() TemplateMaximumMinimumComputationTypeOutput {
	return o
}

func (o TemplateMaximumMinimumComputationTypeOutput) ToTemplateMaximumMinimumComputationTypeOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationTypeOutput {
	return o
}

func (o TemplateMaximumMinimumComputationTypeOutput) ToTemplateMaximumMinimumComputationTypePtrOutput() TemplateMaximumMinimumComputationTypePtrOutput {
	return o.ToTemplateMaximumMinimumComputationTypePtrOutputWithContext(context.Background())
}

func (o TemplateMaximumMinimumComputationTypeOutput) ToTemplateMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateMaximumMinimumComputationType) *TemplateMaximumMinimumComputationType {
		return &v
	}).(TemplateMaximumMinimumComputationTypePtrOutput)
}

func (o TemplateMaximumMinimumComputationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateMaximumMinimumComputationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateMaximumMinimumComputationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateMaximumMinimumComputationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateMaximumMinimumComputationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateMaximumMinimumComputationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateMaximumMinimumComputationTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateMaximumMinimumComputationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMaximumMinimumComputationType)(nil)).Elem()
}

func (o TemplateMaximumMinimumComputationTypePtrOutput) ToTemplateMaximumMinimumComputationTypePtrOutput() TemplateMaximumMinimumComputationTypePtrOutput {
	return o
}

func (o TemplateMaximumMinimumComputationTypePtrOutput) ToTemplateMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationTypePtrOutput {
	return o
}

func (o TemplateMaximumMinimumComputationTypePtrOutput) Elem() TemplateMaximumMinimumComputationTypeOutput {
	return o.ApplyT(func(v *TemplateMaximumMinimumComputationType) TemplateMaximumMinimumComputationType {
		if v != nil {
			return *v
		}
		var ret TemplateMaximumMinimumComputationType
		return ret
	}).(TemplateMaximumMinimumComputationTypeOutput)
}

func (o TemplateMaximumMinimumComputationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateMaximumMinimumComputationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateMaximumMinimumComputationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateMaximumMinimumComputationTypeInput is an input type that accepts values of the TemplateMaximumMinimumComputationType enum
// A concrete instance of `TemplateMaximumMinimumComputationTypeInput` can be one of the following:
//
//	TemplateMaximumMinimumComputationTypeMaximum
//	TemplateMaximumMinimumComputationTypeMinimum
type TemplateMaximumMinimumComputationTypeInput interface {
	pulumi.Input

	ToTemplateMaximumMinimumComputationTypeOutput() TemplateMaximumMinimumComputationTypeOutput
	ToTemplateMaximumMinimumComputationTypeOutputWithContext(context.Context) TemplateMaximumMinimumComputationTypeOutput
}

var templateMaximumMinimumComputationTypePtrType = reflect.TypeOf((**TemplateMaximumMinimumComputationType)(nil)).Elem()

type TemplateMaximumMinimumComputationTypePtrInput interface {
	pulumi.Input

	ToTemplateMaximumMinimumComputationTypePtrOutput() TemplateMaximumMinimumComputationTypePtrOutput
	ToTemplateMaximumMinimumComputationTypePtrOutputWithContext(context.Context) TemplateMaximumMinimumComputationTypePtrOutput
}

type templateMaximumMinimumComputationTypePtr string

func TemplateMaximumMinimumComputationTypePtr(v string) TemplateMaximumMinimumComputationTypePtrInput {
	return (*templateMaximumMinimumComputationTypePtr)(&v)
}

func (*templateMaximumMinimumComputationTypePtr) ElementType() reflect.Type {
	return templateMaximumMinimumComputationTypePtrType
}

func (in *templateMaximumMinimumComputationTypePtr) ToTemplateMaximumMinimumComputationTypePtrOutput() TemplateMaximumMinimumComputationTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateMaximumMinimumComputationTypePtrOutput)
}

func (in *templateMaximumMinimumComputationTypePtr) ToTemplateMaximumMinimumComputationTypePtrOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateMaximumMinimumComputationTypePtrOutput)
}

type TemplateMissingDataTreatmentOption string

const (
	TemplateMissingDataTreatmentOptionInterpolate = TemplateMissingDataTreatmentOption("INTERPOLATE")
	TemplateMissingDataTreatmentOptionShowAsZero  = TemplateMissingDataTreatmentOption("SHOW_AS_ZERO")
	TemplateMissingDataTreatmentOptionShowAsBlank = TemplateMissingDataTreatmentOption("SHOW_AS_BLANK")
)

func (TemplateMissingDataTreatmentOption) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMissingDataTreatmentOption)(nil)).Elem()
}

func (e TemplateMissingDataTreatmentOption) ToTemplateMissingDataTreatmentOptionOutput() TemplateMissingDataTreatmentOptionOutput {
	return pulumi.ToOutput(e).(TemplateMissingDataTreatmentOptionOutput)
}

func (e TemplateMissingDataTreatmentOption) ToTemplateMissingDataTreatmentOptionOutputWithContext(ctx context.Context) TemplateMissingDataTreatmentOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateMissingDataTreatmentOptionOutput)
}

func (e TemplateMissingDataTreatmentOption) ToTemplateMissingDataTreatmentOptionPtrOutput() TemplateMissingDataTreatmentOptionPtrOutput {
	return e.ToTemplateMissingDataTreatmentOptionPtrOutputWithContext(context.Background())
}

func (e TemplateMissingDataTreatmentOption) ToTemplateMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) TemplateMissingDataTreatmentOptionPtrOutput {
	return TemplateMissingDataTreatmentOption(e).ToTemplateMissingDataTreatmentOptionOutputWithContext(ctx).ToTemplateMissingDataTreatmentOptionPtrOutputWithContext(ctx)
}

func (e TemplateMissingDataTreatmentOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateMissingDataTreatmentOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateMissingDataTreatmentOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateMissingDataTreatmentOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateMissingDataTreatmentOptionOutput struct{ *pulumi.OutputState }

func (TemplateMissingDataTreatmentOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMissingDataTreatmentOption)(nil)).Elem()
}

func (o TemplateMissingDataTreatmentOptionOutput) ToTemplateMissingDataTreatmentOptionOutput() TemplateMissingDataTreatmentOptionOutput {
	return o
}

func (o TemplateMissingDataTreatmentOptionOutput) ToTemplateMissingDataTreatmentOptionOutputWithContext(ctx context.Context) TemplateMissingDataTreatmentOptionOutput {
	return o
}

func (o TemplateMissingDataTreatmentOptionOutput) ToTemplateMissingDataTreatmentOptionPtrOutput() TemplateMissingDataTreatmentOptionPtrOutput {
	return o.ToTemplateMissingDataTreatmentOptionPtrOutputWithContext(context.Background())
}

func (o TemplateMissingDataTreatmentOptionOutput) ToTemplateMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) TemplateMissingDataTreatmentOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateMissingDataTreatmentOption) *TemplateMissingDataTreatmentOption {
		return &v
	}).(TemplateMissingDataTreatmentOptionPtrOutput)
}

func (o TemplateMissingDataTreatmentOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateMissingDataTreatmentOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateMissingDataTreatmentOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateMissingDataTreatmentOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateMissingDataTreatmentOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateMissingDataTreatmentOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateMissingDataTreatmentOptionPtrOutput struct{ *pulumi.OutputState }

func (TemplateMissingDataTreatmentOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMissingDataTreatmentOption)(nil)).Elem()
}

func (o TemplateMissingDataTreatmentOptionPtrOutput) ToTemplateMissingDataTreatmentOptionPtrOutput() TemplateMissingDataTreatmentOptionPtrOutput {
	return o
}

func (o TemplateMissingDataTreatmentOptionPtrOutput) ToTemplateMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) TemplateMissingDataTreatmentOptionPtrOutput {
	return o
}

func (o TemplateMissingDataTreatmentOptionPtrOutput) Elem() TemplateMissingDataTreatmentOptionOutput {
	return o.ApplyT(func(v *TemplateMissingDataTreatmentOption) TemplateMissingDataTreatmentOption {
		if v != nil {
			return *v
		}
		var ret TemplateMissingDataTreatmentOption
		return ret
	}).(TemplateMissingDataTreatmentOptionOutput)
}

func (o TemplateMissingDataTreatmentOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateMissingDataTreatmentOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateMissingDataTreatmentOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateMissingDataTreatmentOptionInput is an input type that accepts values of the TemplateMissingDataTreatmentOption enum
// A concrete instance of `TemplateMissingDataTreatmentOptionInput` can be one of the following:
//
//	TemplateMissingDataTreatmentOptionInterpolate
//	TemplateMissingDataTreatmentOptionShowAsZero
//	TemplateMissingDataTreatmentOptionShowAsBlank
type TemplateMissingDataTreatmentOptionInput interface {
	pulumi.Input

	ToTemplateMissingDataTreatmentOptionOutput() TemplateMissingDataTreatmentOptionOutput
	ToTemplateMissingDataTreatmentOptionOutputWithContext(context.Context) TemplateMissingDataTreatmentOptionOutput
}

var templateMissingDataTreatmentOptionPtrType = reflect.TypeOf((**TemplateMissingDataTreatmentOption)(nil)).Elem()

type TemplateMissingDataTreatmentOptionPtrInput interface {
	pulumi.Input

	ToTemplateMissingDataTreatmentOptionPtrOutput() TemplateMissingDataTreatmentOptionPtrOutput
	ToTemplateMissingDataTreatmentOptionPtrOutputWithContext(context.Context) TemplateMissingDataTreatmentOptionPtrOutput
}

type templateMissingDataTreatmentOptionPtr string

func TemplateMissingDataTreatmentOptionPtr(v string) TemplateMissingDataTreatmentOptionPtrInput {
	return (*templateMissingDataTreatmentOptionPtr)(&v)
}

func (*templateMissingDataTreatmentOptionPtr) ElementType() reflect.Type {
	return templateMissingDataTreatmentOptionPtrType
}

func (in *templateMissingDataTreatmentOptionPtr) ToTemplateMissingDataTreatmentOptionPtrOutput() TemplateMissingDataTreatmentOptionPtrOutput {
	return pulumi.ToOutput(in).(TemplateMissingDataTreatmentOptionPtrOutput)
}

func (in *templateMissingDataTreatmentOptionPtr) ToTemplateMissingDataTreatmentOptionPtrOutputWithContext(ctx context.Context) TemplateMissingDataTreatmentOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateMissingDataTreatmentOptionPtrOutput)
}

type TemplateNegativeValueDisplayMode string

const (
	TemplateNegativeValueDisplayModePositive = TemplateNegativeValueDisplayMode("POSITIVE")
	TemplateNegativeValueDisplayModeNegative = TemplateNegativeValueDisplayMode("NEGATIVE")
)

func (TemplateNegativeValueDisplayMode) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNegativeValueDisplayMode)(nil)).Elem()
}

func (e TemplateNegativeValueDisplayMode) ToTemplateNegativeValueDisplayModeOutput() TemplateNegativeValueDisplayModeOutput {
	return pulumi.ToOutput(e).(TemplateNegativeValueDisplayModeOutput)
}

func (e TemplateNegativeValueDisplayMode) ToTemplateNegativeValueDisplayModeOutputWithContext(ctx context.Context) TemplateNegativeValueDisplayModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateNegativeValueDisplayModeOutput)
}

func (e TemplateNegativeValueDisplayMode) ToTemplateNegativeValueDisplayModePtrOutput() TemplateNegativeValueDisplayModePtrOutput {
	return e.ToTemplateNegativeValueDisplayModePtrOutputWithContext(context.Background())
}

func (e TemplateNegativeValueDisplayMode) ToTemplateNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) TemplateNegativeValueDisplayModePtrOutput {
	return TemplateNegativeValueDisplayMode(e).ToTemplateNegativeValueDisplayModeOutputWithContext(ctx).ToTemplateNegativeValueDisplayModePtrOutputWithContext(ctx)
}

func (e TemplateNegativeValueDisplayMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateNegativeValueDisplayMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateNegativeValueDisplayMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateNegativeValueDisplayMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateNegativeValueDisplayModeOutput struct{ *pulumi.OutputState }

func (TemplateNegativeValueDisplayModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNegativeValueDisplayMode)(nil)).Elem()
}

func (o TemplateNegativeValueDisplayModeOutput) ToTemplateNegativeValueDisplayModeOutput() TemplateNegativeValueDisplayModeOutput {
	return o
}

func (o TemplateNegativeValueDisplayModeOutput) ToTemplateNegativeValueDisplayModeOutputWithContext(ctx context.Context) TemplateNegativeValueDisplayModeOutput {
	return o
}

func (o TemplateNegativeValueDisplayModeOutput) ToTemplateNegativeValueDisplayModePtrOutput() TemplateNegativeValueDisplayModePtrOutput {
	return o.ToTemplateNegativeValueDisplayModePtrOutputWithContext(context.Background())
}

func (o TemplateNegativeValueDisplayModeOutput) ToTemplateNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) TemplateNegativeValueDisplayModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNegativeValueDisplayMode) *TemplateNegativeValueDisplayMode {
		return &v
	}).(TemplateNegativeValueDisplayModePtrOutput)
}

func (o TemplateNegativeValueDisplayModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateNegativeValueDisplayModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateNegativeValueDisplayMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateNegativeValueDisplayModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateNegativeValueDisplayModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateNegativeValueDisplayMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateNegativeValueDisplayModePtrOutput struct{ *pulumi.OutputState }

func (TemplateNegativeValueDisplayModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNegativeValueDisplayMode)(nil)).Elem()
}

func (o TemplateNegativeValueDisplayModePtrOutput) ToTemplateNegativeValueDisplayModePtrOutput() TemplateNegativeValueDisplayModePtrOutput {
	return o
}

func (o TemplateNegativeValueDisplayModePtrOutput) ToTemplateNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) TemplateNegativeValueDisplayModePtrOutput {
	return o
}

func (o TemplateNegativeValueDisplayModePtrOutput) Elem() TemplateNegativeValueDisplayModeOutput {
	return o.ApplyT(func(v *TemplateNegativeValueDisplayMode) TemplateNegativeValueDisplayMode {
		if v != nil {
			return *v
		}
		var ret TemplateNegativeValueDisplayMode
		return ret
	}).(TemplateNegativeValueDisplayModeOutput)
}

func (o TemplateNegativeValueDisplayModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateNegativeValueDisplayModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateNegativeValueDisplayMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateNegativeValueDisplayModeInput is an input type that accepts values of the TemplateNegativeValueDisplayMode enum
// A concrete instance of `TemplateNegativeValueDisplayModeInput` can be one of the following:
//
//	TemplateNegativeValueDisplayModePositive
//	TemplateNegativeValueDisplayModeNegative
type TemplateNegativeValueDisplayModeInput interface {
	pulumi.Input

	ToTemplateNegativeValueDisplayModeOutput() TemplateNegativeValueDisplayModeOutput
	ToTemplateNegativeValueDisplayModeOutputWithContext(context.Context) TemplateNegativeValueDisplayModeOutput
}

var templateNegativeValueDisplayModePtrType = reflect.TypeOf((**TemplateNegativeValueDisplayMode)(nil)).Elem()

type TemplateNegativeValueDisplayModePtrInput interface {
	pulumi.Input

	ToTemplateNegativeValueDisplayModePtrOutput() TemplateNegativeValueDisplayModePtrOutput
	ToTemplateNegativeValueDisplayModePtrOutputWithContext(context.Context) TemplateNegativeValueDisplayModePtrOutput
}

type templateNegativeValueDisplayModePtr string

func TemplateNegativeValueDisplayModePtr(v string) TemplateNegativeValueDisplayModePtrInput {
	return (*templateNegativeValueDisplayModePtr)(&v)
}

func (*templateNegativeValueDisplayModePtr) ElementType() reflect.Type {
	return templateNegativeValueDisplayModePtrType
}

func (in *templateNegativeValueDisplayModePtr) ToTemplateNegativeValueDisplayModePtrOutput() TemplateNegativeValueDisplayModePtrOutput {
	return pulumi.ToOutput(in).(TemplateNegativeValueDisplayModePtrOutput)
}

func (in *templateNegativeValueDisplayModePtr) ToTemplateNegativeValueDisplayModePtrOutputWithContext(ctx context.Context) TemplateNegativeValueDisplayModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateNegativeValueDisplayModePtrOutput)
}

type TemplateNumberScale string

const (
	TemplateNumberScaleNone      = TemplateNumberScale("NONE")
	TemplateNumberScaleAuto      = TemplateNumberScale("AUTO")
	TemplateNumberScaleThousands = TemplateNumberScale("THOUSANDS")
	TemplateNumberScaleMillions  = TemplateNumberScale("MILLIONS")
	TemplateNumberScaleBillions  = TemplateNumberScale("BILLIONS")
	TemplateNumberScaleTrillions = TemplateNumberScale("TRILLIONS")
)

func (TemplateNumberScale) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumberScale)(nil)).Elem()
}

func (e TemplateNumberScale) ToTemplateNumberScaleOutput() TemplateNumberScaleOutput {
	return pulumi.ToOutput(e).(TemplateNumberScaleOutput)
}

func (e TemplateNumberScale) ToTemplateNumberScaleOutputWithContext(ctx context.Context) TemplateNumberScaleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateNumberScaleOutput)
}

func (e TemplateNumberScale) ToTemplateNumberScalePtrOutput() TemplateNumberScalePtrOutput {
	return e.ToTemplateNumberScalePtrOutputWithContext(context.Background())
}

func (e TemplateNumberScale) ToTemplateNumberScalePtrOutputWithContext(ctx context.Context) TemplateNumberScalePtrOutput {
	return TemplateNumberScale(e).ToTemplateNumberScaleOutputWithContext(ctx).ToTemplateNumberScalePtrOutputWithContext(ctx)
}

func (e TemplateNumberScale) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateNumberScale) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateNumberScale) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateNumberScale) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateNumberScaleOutput struct{ *pulumi.OutputState }

func (TemplateNumberScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumberScale)(nil)).Elem()
}

func (o TemplateNumberScaleOutput) ToTemplateNumberScaleOutput() TemplateNumberScaleOutput {
	return o
}

func (o TemplateNumberScaleOutput) ToTemplateNumberScaleOutputWithContext(ctx context.Context) TemplateNumberScaleOutput {
	return o
}

func (o TemplateNumberScaleOutput) ToTemplateNumberScalePtrOutput() TemplateNumberScalePtrOutput {
	return o.ToTemplateNumberScalePtrOutputWithContext(context.Background())
}

func (o TemplateNumberScaleOutput) ToTemplateNumberScalePtrOutputWithContext(ctx context.Context) TemplateNumberScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumberScale) *TemplateNumberScale {
		return &v
	}).(TemplateNumberScalePtrOutput)
}

func (o TemplateNumberScaleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateNumberScaleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateNumberScale) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateNumberScaleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateNumberScaleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateNumberScale) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateNumberScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateNumberScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumberScale)(nil)).Elem()
}

func (o TemplateNumberScalePtrOutput) ToTemplateNumberScalePtrOutput() TemplateNumberScalePtrOutput {
	return o
}

func (o TemplateNumberScalePtrOutput) ToTemplateNumberScalePtrOutputWithContext(ctx context.Context) TemplateNumberScalePtrOutput {
	return o
}

func (o TemplateNumberScalePtrOutput) Elem() TemplateNumberScaleOutput {
	return o.ApplyT(func(v *TemplateNumberScale) TemplateNumberScale {
		if v != nil {
			return *v
		}
		var ret TemplateNumberScale
		return ret
	}).(TemplateNumberScaleOutput)
}

func (o TemplateNumberScalePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateNumberScalePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateNumberScale) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateNumberScaleInput is an input type that accepts values of the TemplateNumberScale enum
// A concrete instance of `TemplateNumberScaleInput` can be one of the following:
//
//	TemplateNumberScaleNone
//	TemplateNumberScaleAuto
//	TemplateNumberScaleThousands
//	TemplateNumberScaleMillions
//	TemplateNumberScaleBillions
//	TemplateNumberScaleTrillions
type TemplateNumberScaleInput interface {
	pulumi.Input

	ToTemplateNumberScaleOutput() TemplateNumberScaleOutput
	ToTemplateNumberScaleOutputWithContext(context.Context) TemplateNumberScaleOutput
}

var templateNumberScalePtrType = reflect.TypeOf((**TemplateNumberScale)(nil)).Elem()

type TemplateNumberScalePtrInput interface {
	pulumi.Input

	ToTemplateNumberScalePtrOutput() TemplateNumberScalePtrOutput
	ToTemplateNumberScalePtrOutputWithContext(context.Context) TemplateNumberScalePtrOutput
}

type templateNumberScalePtr string

func TemplateNumberScalePtr(v string) TemplateNumberScalePtrInput {
	return (*templateNumberScalePtr)(&v)
}

func (*templateNumberScalePtr) ElementType() reflect.Type {
	return templateNumberScalePtrType
}

func (in *templateNumberScalePtr) ToTemplateNumberScalePtrOutput() TemplateNumberScalePtrOutput {
	return pulumi.ToOutput(in).(TemplateNumberScalePtrOutput)
}

func (in *templateNumberScalePtr) ToTemplateNumberScalePtrOutputWithContext(ctx context.Context) TemplateNumberScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateNumberScalePtrOutput)
}

type TemplateNumericEqualityMatchOperator string

const (
	TemplateNumericEqualityMatchOperatorEquals       = TemplateNumericEqualityMatchOperator("EQUALS")
	TemplateNumericEqualityMatchOperatorDoesNotEqual = TemplateNumericEqualityMatchOperator("DOES_NOT_EQUAL")
)

func (TemplateNumericEqualityMatchOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericEqualityMatchOperator)(nil)).Elem()
}

func (e TemplateNumericEqualityMatchOperator) ToTemplateNumericEqualityMatchOperatorOutput() TemplateNumericEqualityMatchOperatorOutput {
	return pulumi.ToOutput(e).(TemplateNumericEqualityMatchOperatorOutput)
}

func (e TemplateNumericEqualityMatchOperator) ToTemplateNumericEqualityMatchOperatorOutputWithContext(ctx context.Context) TemplateNumericEqualityMatchOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateNumericEqualityMatchOperatorOutput)
}

func (e TemplateNumericEqualityMatchOperator) ToTemplateNumericEqualityMatchOperatorPtrOutput() TemplateNumericEqualityMatchOperatorPtrOutput {
	return e.ToTemplateNumericEqualityMatchOperatorPtrOutputWithContext(context.Background())
}

func (e TemplateNumericEqualityMatchOperator) ToTemplateNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityMatchOperatorPtrOutput {
	return TemplateNumericEqualityMatchOperator(e).ToTemplateNumericEqualityMatchOperatorOutputWithContext(ctx).ToTemplateNumericEqualityMatchOperatorPtrOutputWithContext(ctx)
}

func (e TemplateNumericEqualityMatchOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateNumericEqualityMatchOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateNumericEqualityMatchOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateNumericEqualityMatchOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateNumericEqualityMatchOperatorOutput struct{ *pulumi.OutputState }

func (TemplateNumericEqualityMatchOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericEqualityMatchOperator)(nil)).Elem()
}

func (o TemplateNumericEqualityMatchOperatorOutput) ToTemplateNumericEqualityMatchOperatorOutput() TemplateNumericEqualityMatchOperatorOutput {
	return o
}

func (o TemplateNumericEqualityMatchOperatorOutput) ToTemplateNumericEqualityMatchOperatorOutputWithContext(ctx context.Context) TemplateNumericEqualityMatchOperatorOutput {
	return o
}

func (o TemplateNumericEqualityMatchOperatorOutput) ToTemplateNumericEqualityMatchOperatorPtrOutput() TemplateNumericEqualityMatchOperatorPtrOutput {
	return o.ToTemplateNumericEqualityMatchOperatorPtrOutputWithContext(context.Background())
}

func (o TemplateNumericEqualityMatchOperatorOutput) ToTemplateNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityMatchOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericEqualityMatchOperator) *TemplateNumericEqualityMatchOperator {
		return &v
	}).(TemplateNumericEqualityMatchOperatorPtrOutput)
}

func (o TemplateNumericEqualityMatchOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateNumericEqualityMatchOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateNumericEqualityMatchOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateNumericEqualityMatchOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateNumericEqualityMatchOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateNumericEqualityMatchOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateNumericEqualityMatchOperatorPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericEqualityMatchOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericEqualityMatchOperator)(nil)).Elem()
}

func (o TemplateNumericEqualityMatchOperatorPtrOutput) ToTemplateNumericEqualityMatchOperatorPtrOutput() TemplateNumericEqualityMatchOperatorPtrOutput {
	return o
}

func (o TemplateNumericEqualityMatchOperatorPtrOutput) ToTemplateNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityMatchOperatorPtrOutput {
	return o
}

func (o TemplateNumericEqualityMatchOperatorPtrOutput) Elem() TemplateNumericEqualityMatchOperatorOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityMatchOperator) TemplateNumericEqualityMatchOperator {
		if v != nil {
			return *v
		}
		var ret TemplateNumericEqualityMatchOperator
		return ret
	}).(TemplateNumericEqualityMatchOperatorOutput)
}

func (o TemplateNumericEqualityMatchOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateNumericEqualityMatchOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateNumericEqualityMatchOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateNumericEqualityMatchOperatorInput is an input type that accepts values of the TemplateNumericEqualityMatchOperator enum
// A concrete instance of `TemplateNumericEqualityMatchOperatorInput` can be one of the following:
//
//	TemplateNumericEqualityMatchOperatorEquals
//	TemplateNumericEqualityMatchOperatorDoesNotEqual
type TemplateNumericEqualityMatchOperatorInput interface {
	pulumi.Input

	ToTemplateNumericEqualityMatchOperatorOutput() TemplateNumericEqualityMatchOperatorOutput
	ToTemplateNumericEqualityMatchOperatorOutputWithContext(context.Context) TemplateNumericEqualityMatchOperatorOutput
}

var templateNumericEqualityMatchOperatorPtrType = reflect.TypeOf((**TemplateNumericEqualityMatchOperator)(nil)).Elem()

type TemplateNumericEqualityMatchOperatorPtrInput interface {
	pulumi.Input

	ToTemplateNumericEqualityMatchOperatorPtrOutput() TemplateNumericEqualityMatchOperatorPtrOutput
	ToTemplateNumericEqualityMatchOperatorPtrOutputWithContext(context.Context) TemplateNumericEqualityMatchOperatorPtrOutput
}

type templateNumericEqualityMatchOperatorPtr string

func TemplateNumericEqualityMatchOperatorPtr(v string) TemplateNumericEqualityMatchOperatorPtrInput {
	return (*templateNumericEqualityMatchOperatorPtr)(&v)
}

func (*templateNumericEqualityMatchOperatorPtr) ElementType() reflect.Type {
	return templateNumericEqualityMatchOperatorPtrType
}

func (in *templateNumericEqualityMatchOperatorPtr) ToTemplateNumericEqualityMatchOperatorPtrOutput() TemplateNumericEqualityMatchOperatorPtrOutput {
	return pulumi.ToOutput(in).(TemplateNumericEqualityMatchOperatorPtrOutput)
}

func (in *templateNumericEqualityMatchOperatorPtr) ToTemplateNumericEqualityMatchOperatorPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityMatchOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateNumericEqualityMatchOperatorPtrOutput)
}

type TemplateNumericFilterSelectAllOptions string

const (
	TemplateNumericFilterSelectAllOptionsFilterAllValues = TemplateNumericFilterSelectAllOptions("FILTER_ALL_VALUES")
)

func (TemplateNumericFilterSelectAllOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericFilterSelectAllOptions)(nil)).Elem()
}

func (e TemplateNumericFilterSelectAllOptions) ToTemplateNumericFilterSelectAllOptionsOutput() TemplateNumericFilterSelectAllOptionsOutput {
	return pulumi.ToOutput(e).(TemplateNumericFilterSelectAllOptionsOutput)
}

func (e TemplateNumericFilterSelectAllOptions) ToTemplateNumericFilterSelectAllOptionsOutputWithContext(ctx context.Context) TemplateNumericFilterSelectAllOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateNumericFilterSelectAllOptionsOutput)
}

func (e TemplateNumericFilterSelectAllOptions) ToTemplateNumericFilterSelectAllOptionsPtrOutput() TemplateNumericFilterSelectAllOptionsPtrOutput {
	return e.ToTemplateNumericFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (e TemplateNumericFilterSelectAllOptions) ToTemplateNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateNumericFilterSelectAllOptionsPtrOutput {
	return TemplateNumericFilterSelectAllOptions(e).ToTemplateNumericFilterSelectAllOptionsOutputWithContext(ctx).ToTemplateNumericFilterSelectAllOptionsPtrOutputWithContext(ctx)
}

func (e TemplateNumericFilterSelectAllOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateNumericFilterSelectAllOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateNumericFilterSelectAllOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateNumericFilterSelectAllOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateNumericFilterSelectAllOptionsOutput struct{ *pulumi.OutputState }

func (TemplateNumericFilterSelectAllOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericFilterSelectAllOptions)(nil)).Elem()
}

func (o TemplateNumericFilterSelectAllOptionsOutput) ToTemplateNumericFilterSelectAllOptionsOutput() TemplateNumericFilterSelectAllOptionsOutput {
	return o
}

func (o TemplateNumericFilterSelectAllOptionsOutput) ToTemplateNumericFilterSelectAllOptionsOutputWithContext(ctx context.Context) TemplateNumericFilterSelectAllOptionsOutput {
	return o
}

func (o TemplateNumericFilterSelectAllOptionsOutput) ToTemplateNumericFilterSelectAllOptionsPtrOutput() TemplateNumericFilterSelectAllOptionsPtrOutput {
	return o.ToTemplateNumericFilterSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateNumericFilterSelectAllOptionsOutput) ToTemplateNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericFilterSelectAllOptions) *TemplateNumericFilterSelectAllOptions {
		return &v
	}).(TemplateNumericFilterSelectAllOptionsPtrOutput)
}

func (o TemplateNumericFilterSelectAllOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateNumericFilterSelectAllOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateNumericFilterSelectAllOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateNumericFilterSelectAllOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateNumericFilterSelectAllOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateNumericFilterSelectAllOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateNumericFilterSelectAllOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericFilterSelectAllOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericFilterSelectAllOptions)(nil)).Elem()
}

func (o TemplateNumericFilterSelectAllOptionsPtrOutput) ToTemplateNumericFilterSelectAllOptionsPtrOutput() TemplateNumericFilterSelectAllOptionsPtrOutput {
	return o
}

func (o TemplateNumericFilterSelectAllOptionsPtrOutput) ToTemplateNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateNumericFilterSelectAllOptionsPtrOutput {
	return o
}

func (o TemplateNumericFilterSelectAllOptionsPtrOutput) Elem() TemplateNumericFilterSelectAllOptionsOutput {
	return o.ApplyT(func(v *TemplateNumericFilterSelectAllOptions) TemplateNumericFilterSelectAllOptions {
		if v != nil {
			return *v
		}
		var ret TemplateNumericFilterSelectAllOptions
		return ret
	}).(TemplateNumericFilterSelectAllOptionsOutput)
}

func (o TemplateNumericFilterSelectAllOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateNumericFilterSelectAllOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateNumericFilterSelectAllOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateNumericFilterSelectAllOptionsInput is an input type that accepts values of the TemplateNumericFilterSelectAllOptions enum
// A concrete instance of `TemplateNumericFilterSelectAllOptionsInput` can be one of the following:
//
//	TemplateNumericFilterSelectAllOptionsFilterAllValues
type TemplateNumericFilterSelectAllOptionsInput interface {
	pulumi.Input

	ToTemplateNumericFilterSelectAllOptionsOutput() TemplateNumericFilterSelectAllOptionsOutput
	ToTemplateNumericFilterSelectAllOptionsOutputWithContext(context.Context) TemplateNumericFilterSelectAllOptionsOutput
}

var templateNumericFilterSelectAllOptionsPtrType = reflect.TypeOf((**TemplateNumericFilterSelectAllOptions)(nil)).Elem()

type TemplateNumericFilterSelectAllOptionsPtrInput interface {
	pulumi.Input

	ToTemplateNumericFilterSelectAllOptionsPtrOutput() TemplateNumericFilterSelectAllOptionsPtrOutput
	ToTemplateNumericFilterSelectAllOptionsPtrOutputWithContext(context.Context) TemplateNumericFilterSelectAllOptionsPtrOutput
}

type templateNumericFilterSelectAllOptionsPtr string

func TemplateNumericFilterSelectAllOptionsPtr(v string) TemplateNumericFilterSelectAllOptionsPtrInput {
	return (*templateNumericFilterSelectAllOptionsPtr)(&v)
}

func (*templateNumericFilterSelectAllOptionsPtr) ElementType() reflect.Type {
	return templateNumericFilterSelectAllOptionsPtrType
}

func (in *templateNumericFilterSelectAllOptionsPtr) ToTemplateNumericFilterSelectAllOptionsPtrOutput() TemplateNumericFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutput(in).(TemplateNumericFilterSelectAllOptionsPtrOutput)
}

func (in *templateNumericFilterSelectAllOptionsPtr) ToTemplateNumericFilterSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateNumericFilterSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateNumericFilterSelectAllOptionsPtrOutput)
}

type TemplateNumericSeparatorSymbol string

const (
	TemplateNumericSeparatorSymbolComma = TemplateNumericSeparatorSymbol("COMMA")
	TemplateNumericSeparatorSymbolDot   = TemplateNumericSeparatorSymbol("DOT")
	TemplateNumericSeparatorSymbolSpace = TemplateNumericSeparatorSymbol("SPACE")
)

func (TemplateNumericSeparatorSymbol) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericSeparatorSymbol)(nil)).Elem()
}

func (e TemplateNumericSeparatorSymbol) ToTemplateNumericSeparatorSymbolOutput() TemplateNumericSeparatorSymbolOutput {
	return pulumi.ToOutput(e).(TemplateNumericSeparatorSymbolOutput)
}

func (e TemplateNumericSeparatorSymbol) ToTemplateNumericSeparatorSymbolOutputWithContext(ctx context.Context) TemplateNumericSeparatorSymbolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateNumericSeparatorSymbolOutput)
}

func (e TemplateNumericSeparatorSymbol) ToTemplateNumericSeparatorSymbolPtrOutput() TemplateNumericSeparatorSymbolPtrOutput {
	return e.ToTemplateNumericSeparatorSymbolPtrOutputWithContext(context.Background())
}

func (e TemplateNumericSeparatorSymbol) ToTemplateNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) TemplateNumericSeparatorSymbolPtrOutput {
	return TemplateNumericSeparatorSymbol(e).ToTemplateNumericSeparatorSymbolOutputWithContext(ctx).ToTemplateNumericSeparatorSymbolPtrOutputWithContext(ctx)
}

func (e TemplateNumericSeparatorSymbol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateNumericSeparatorSymbol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateNumericSeparatorSymbol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateNumericSeparatorSymbol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateNumericSeparatorSymbolOutput struct{ *pulumi.OutputState }

func (TemplateNumericSeparatorSymbolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericSeparatorSymbol)(nil)).Elem()
}

func (o TemplateNumericSeparatorSymbolOutput) ToTemplateNumericSeparatorSymbolOutput() TemplateNumericSeparatorSymbolOutput {
	return o
}

func (o TemplateNumericSeparatorSymbolOutput) ToTemplateNumericSeparatorSymbolOutputWithContext(ctx context.Context) TemplateNumericSeparatorSymbolOutput {
	return o
}

func (o TemplateNumericSeparatorSymbolOutput) ToTemplateNumericSeparatorSymbolPtrOutput() TemplateNumericSeparatorSymbolPtrOutput {
	return o.ToTemplateNumericSeparatorSymbolPtrOutputWithContext(context.Background())
}

func (o TemplateNumericSeparatorSymbolOutput) ToTemplateNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) TemplateNumericSeparatorSymbolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericSeparatorSymbol) *TemplateNumericSeparatorSymbol {
		return &v
	}).(TemplateNumericSeparatorSymbolPtrOutput)
}

func (o TemplateNumericSeparatorSymbolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateNumericSeparatorSymbolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateNumericSeparatorSymbol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateNumericSeparatorSymbolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateNumericSeparatorSymbolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateNumericSeparatorSymbol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateNumericSeparatorSymbolPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericSeparatorSymbolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericSeparatorSymbol)(nil)).Elem()
}

func (o TemplateNumericSeparatorSymbolPtrOutput) ToTemplateNumericSeparatorSymbolPtrOutput() TemplateNumericSeparatorSymbolPtrOutput {
	return o
}

func (o TemplateNumericSeparatorSymbolPtrOutput) ToTemplateNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) TemplateNumericSeparatorSymbolPtrOutput {
	return o
}

func (o TemplateNumericSeparatorSymbolPtrOutput) Elem() TemplateNumericSeparatorSymbolOutput {
	return o.ApplyT(func(v *TemplateNumericSeparatorSymbol) TemplateNumericSeparatorSymbol {
		if v != nil {
			return *v
		}
		var ret TemplateNumericSeparatorSymbol
		return ret
	}).(TemplateNumericSeparatorSymbolOutput)
}

func (o TemplateNumericSeparatorSymbolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateNumericSeparatorSymbolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateNumericSeparatorSymbol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateNumericSeparatorSymbolInput is an input type that accepts values of the TemplateNumericSeparatorSymbol enum
// A concrete instance of `TemplateNumericSeparatorSymbolInput` can be one of the following:
//
//	TemplateNumericSeparatorSymbolComma
//	TemplateNumericSeparatorSymbolDot
//	TemplateNumericSeparatorSymbolSpace
type TemplateNumericSeparatorSymbolInput interface {
	pulumi.Input

	ToTemplateNumericSeparatorSymbolOutput() TemplateNumericSeparatorSymbolOutput
	ToTemplateNumericSeparatorSymbolOutputWithContext(context.Context) TemplateNumericSeparatorSymbolOutput
}

var templateNumericSeparatorSymbolPtrType = reflect.TypeOf((**TemplateNumericSeparatorSymbol)(nil)).Elem()

type TemplateNumericSeparatorSymbolPtrInput interface {
	pulumi.Input

	ToTemplateNumericSeparatorSymbolPtrOutput() TemplateNumericSeparatorSymbolPtrOutput
	ToTemplateNumericSeparatorSymbolPtrOutputWithContext(context.Context) TemplateNumericSeparatorSymbolPtrOutput
}

type templateNumericSeparatorSymbolPtr string

func TemplateNumericSeparatorSymbolPtr(v string) TemplateNumericSeparatorSymbolPtrInput {
	return (*templateNumericSeparatorSymbolPtr)(&v)
}

func (*templateNumericSeparatorSymbolPtr) ElementType() reflect.Type {
	return templateNumericSeparatorSymbolPtrType
}

func (in *templateNumericSeparatorSymbolPtr) ToTemplateNumericSeparatorSymbolPtrOutput() TemplateNumericSeparatorSymbolPtrOutput {
	return pulumi.ToOutput(in).(TemplateNumericSeparatorSymbolPtrOutput)
}

func (in *templateNumericSeparatorSymbolPtr) ToTemplateNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) TemplateNumericSeparatorSymbolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateNumericSeparatorSymbolPtrOutput)
}

type TemplateOtherCategories string

const (
	TemplateOtherCategoriesInclude = TemplateOtherCategories("INCLUDE")
	TemplateOtherCategoriesExclude = TemplateOtherCategories("EXCLUDE")
)

func (TemplateOtherCategories) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateOtherCategories)(nil)).Elem()
}

func (e TemplateOtherCategories) ToTemplateOtherCategoriesOutput() TemplateOtherCategoriesOutput {
	return pulumi.ToOutput(e).(TemplateOtherCategoriesOutput)
}

func (e TemplateOtherCategories) ToTemplateOtherCategoriesOutputWithContext(ctx context.Context) TemplateOtherCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateOtherCategoriesOutput)
}

func (e TemplateOtherCategories) ToTemplateOtherCategoriesPtrOutput() TemplateOtherCategoriesPtrOutput {
	return e.ToTemplateOtherCategoriesPtrOutputWithContext(context.Background())
}

func (e TemplateOtherCategories) ToTemplateOtherCategoriesPtrOutputWithContext(ctx context.Context) TemplateOtherCategoriesPtrOutput {
	return TemplateOtherCategories(e).ToTemplateOtherCategoriesOutputWithContext(ctx).ToTemplateOtherCategoriesPtrOutputWithContext(ctx)
}

func (e TemplateOtherCategories) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateOtherCategories) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateOtherCategories) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateOtherCategories) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateOtherCategoriesOutput struct{ *pulumi.OutputState }

func (TemplateOtherCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateOtherCategories)(nil)).Elem()
}

func (o TemplateOtherCategoriesOutput) ToTemplateOtherCategoriesOutput() TemplateOtherCategoriesOutput {
	return o
}

func (o TemplateOtherCategoriesOutput) ToTemplateOtherCategoriesOutputWithContext(ctx context.Context) TemplateOtherCategoriesOutput {
	return o
}

func (o TemplateOtherCategoriesOutput) ToTemplateOtherCategoriesPtrOutput() TemplateOtherCategoriesPtrOutput {
	return o.ToTemplateOtherCategoriesPtrOutputWithContext(context.Background())
}

func (o TemplateOtherCategoriesOutput) ToTemplateOtherCategoriesPtrOutputWithContext(ctx context.Context) TemplateOtherCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateOtherCategories) *TemplateOtherCategories {
		return &v
	}).(TemplateOtherCategoriesPtrOutput)
}

func (o TemplateOtherCategoriesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateOtherCategoriesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateOtherCategories) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateOtherCategoriesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateOtherCategoriesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateOtherCategories) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateOtherCategoriesPtrOutput struct{ *pulumi.OutputState }

func (TemplateOtherCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateOtherCategories)(nil)).Elem()
}

func (o TemplateOtherCategoriesPtrOutput) ToTemplateOtherCategoriesPtrOutput() TemplateOtherCategoriesPtrOutput {
	return o
}

func (o TemplateOtherCategoriesPtrOutput) ToTemplateOtherCategoriesPtrOutputWithContext(ctx context.Context) TemplateOtherCategoriesPtrOutput {
	return o
}

func (o TemplateOtherCategoriesPtrOutput) Elem() TemplateOtherCategoriesOutput {
	return o.ApplyT(func(v *TemplateOtherCategories) TemplateOtherCategories {
		if v != nil {
			return *v
		}
		var ret TemplateOtherCategories
		return ret
	}).(TemplateOtherCategoriesOutput)
}

func (o TemplateOtherCategoriesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateOtherCategoriesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateOtherCategories) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateOtherCategoriesInput is an input type that accepts values of the TemplateOtherCategories enum
// A concrete instance of `TemplateOtherCategoriesInput` can be one of the following:
//
//	TemplateOtherCategoriesInclude
//	TemplateOtherCategoriesExclude
type TemplateOtherCategoriesInput interface {
	pulumi.Input

	ToTemplateOtherCategoriesOutput() TemplateOtherCategoriesOutput
	ToTemplateOtherCategoriesOutputWithContext(context.Context) TemplateOtherCategoriesOutput
}

var templateOtherCategoriesPtrType = reflect.TypeOf((**TemplateOtherCategories)(nil)).Elem()

type TemplateOtherCategoriesPtrInput interface {
	pulumi.Input

	ToTemplateOtherCategoriesPtrOutput() TemplateOtherCategoriesPtrOutput
	ToTemplateOtherCategoriesPtrOutputWithContext(context.Context) TemplateOtherCategoriesPtrOutput
}

type templateOtherCategoriesPtr string

func TemplateOtherCategoriesPtr(v string) TemplateOtherCategoriesPtrInput {
	return (*templateOtherCategoriesPtr)(&v)
}

func (*templateOtherCategoriesPtr) ElementType() reflect.Type {
	return templateOtherCategoriesPtrType
}

func (in *templateOtherCategoriesPtr) ToTemplateOtherCategoriesPtrOutput() TemplateOtherCategoriesPtrOutput {
	return pulumi.ToOutput(in).(TemplateOtherCategoriesPtrOutput)
}

func (in *templateOtherCategoriesPtr) ToTemplateOtherCategoriesPtrOutputWithContext(ctx context.Context) TemplateOtherCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateOtherCategoriesPtrOutput)
}

type TemplatePanelBorderStyle string

const (
	TemplatePanelBorderStyleSolid  = TemplatePanelBorderStyle("SOLID")
	TemplatePanelBorderStyleDashed = TemplatePanelBorderStyle("DASHED")
	TemplatePanelBorderStyleDotted = TemplatePanelBorderStyle("DOTTED")
)

func (TemplatePanelBorderStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePanelBorderStyle)(nil)).Elem()
}

func (e TemplatePanelBorderStyle) ToTemplatePanelBorderStyleOutput() TemplatePanelBorderStyleOutput {
	return pulumi.ToOutput(e).(TemplatePanelBorderStyleOutput)
}

func (e TemplatePanelBorderStyle) ToTemplatePanelBorderStyleOutputWithContext(ctx context.Context) TemplatePanelBorderStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplatePanelBorderStyleOutput)
}

func (e TemplatePanelBorderStyle) ToTemplatePanelBorderStylePtrOutput() TemplatePanelBorderStylePtrOutput {
	return e.ToTemplatePanelBorderStylePtrOutputWithContext(context.Background())
}

func (e TemplatePanelBorderStyle) ToTemplatePanelBorderStylePtrOutputWithContext(ctx context.Context) TemplatePanelBorderStylePtrOutput {
	return TemplatePanelBorderStyle(e).ToTemplatePanelBorderStyleOutputWithContext(ctx).ToTemplatePanelBorderStylePtrOutputWithContext(ctx)
}

func (e TemplatePanelBorderStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePanelBorderStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePanelBorderStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplatePanelBorderStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplatePanelBorderStyleOutput struct{ *pulumi.OutputState }

func (TemplatePanelBorderStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePanelBorderStyle)(nil)).Elem()
}

func (o TemplatePanelBorderStyleOutput) ToTemplatePanelBorderStyleOutput() TemplatePanelBorderStyleOutput {
	return o
}

func (o TemplatePanelBorderStyleOutput) ToTemplatePanelBorderStyleOutputWithContext(ctx context.Context) TemplatePanelBorderStyleOutput {
	return o
}

func (o TemplatePanelBorderStyleOutput) ToTemplatePanelBorderStylePtrOutput() TemplatePanelBorderStylePtrOutput {
	return o.ToTemplatePanelBorderStylePtrOutputWithContext(context.Background())
}

func (o TemplatePanelBorderStyleOutput) ToTemplatePanelBorderStylePtrOutputWithContext(ctx context.Context) TemplatePanelBorderStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePanelBorderStyle) *TemplatePanelBorderStyle {
		return &v
	}).(TemplatePanelBorderStylePtrOutput)
}

func (o TemplatePanelBorderStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplatePanelBorderStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePanelBorderStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplatePanelBorderStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePanelBorderStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePanelBorderStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplatePanelBorderStylePtrOutput struct{ *pulumi.OutputState }

func (TemplatePanelBorderStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePanelBorderStyle)(nil)).Elem()
}

func (o TemplatePanelBorderStylePtrOutput) ToTemplatePanelBorderStylePtrOutput() TemplatePanelBorderStylePtrOutput {
	return o
}

func (o TemplatePanelBorderStylePtrOutput) ToTemplatePanelBorderStylePtrOutputWithContext(ctx context.Context) TemplatePanelBorderStylePtrOutput {
	return o
}

func (o TemplatePanelBorderStylePtrOutput) Elem() TemplatePanelBorderStyleOutput {
	return o.ApplyT(func(v *TemplatePanelBorderStyle) TemplatePanelBorderStyle {
		if v != nil {
			return *v
		}
		var ret TemplatePanelBorderStyle
		return ret
	}).(TemplatePanelBorderStyleOutput)
}

func (o TemplatePanelBorderStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePanelBorderStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplatePanelBorderStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplatePanelBorderStyleInput is an input type that accepts values of the TemplatePanelBorderStyle enum
// A concrete instance of `TemplatePanelBorderStyleInput` can be one of the following:
//
//	TemplatePanelBorderStyleSolid
//	TemplatePanelBorderStyleDashed
//	TemplatePanelBorderStyleDotted
type TemplatePanelBorderStyleInput interface {
	pulumi.Input

	ToTemplatePanelBorderStyleOutput() TemplatePanelBorderStyleOutput
	ToTemplatePanelBorderStyleOutputWithContext(context.Context) TemplatePanelBorderStyleOutput
}

var templatePanelBorderStylePtrType = reflect.TypeOf((**TemplatePanelBorderStyle)(nil)).Elem()

type TemplatePanelBorderStylePtrInput interface {
	pulumi.Input

	ToTemplatePanelBorderStylePtrOutput() TemplatePanelBorderStylePtrOutput
	ToTemplatePanelBorderStylePtrOutputWithContext(context.Context) TemplatePanelBorderStylePtrOutput
}

type templatePanelBorderStylePtr string

func TemplatePanelBorderStylePtr(v string) TemplatePanelBorderStylePtrInput {
	return (*templatePanelBorderStylePtr)(&v)
}

func (*templatePanelBorderStylePtr) ElementType() reflect.Type {
	return templatePanelBorderStylePtrType
}

func (in *templatePanelBorderStylePtr) ToTemplatePanelBorderStylePtrOutput() TemplatePanelBorderStylePtrOutput {
	return pulumi.ToOutput(in).(TemplatePanelBorderStylePtrOutput)
}

func (in *templatePanelBorderStylePtr) ToTemplatePanelBorderStylePtrOutputWithContext(ctx context.Context) TemplatePanelBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplatePanelBorderStylePtrOutput)
}

type TemplatePaperOrientation string

const (
	TemplatePaperOrientationPortrait  = TemplatePaperOrientation("PORTRAIT")
	TemplatePaperOrientationLandscape = TemplatePaperOrientation("LANDSCAPE")
)

func (TemplatePaperOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePaperOrientation)(nil)).Elem()
}

func (e TemplatePaperOrientation) ToTemplatePaperOrientationOutput() TemplatePaperOrientationOutput {
	return pulumi.ToOutput(e).(TemplatePaperOrientationOutput)
}

func (e TemplatePaperOrientation) ToTemplatePaperOrientationOutputWithContext(ctx context.Context) TemplatePaperOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplatePaperOrientationOutput)
}

func (e TemplatePaperOrientation) ToTemplatePaperOrientationPtrOutput() TemplatePaperOrientationPtrOutput {
	return e.ToTemplatePaperOrientationPtrOutputWithContext(context.Background())
}

func (e TemplatePaperOrientation) ToTemplatePaperOrientationPtrOutputWithContext(ctx context.Context) TemplatePaperOrientationPtrOutput {
	return TemplatePaperOrientation(e).ToTemplatePaperOrientationOutputWithContext(ctx).ToTemplatePaperOrientationPtrOutputWithContext(ctx)
}

func (e TemplatePaperOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePaperOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePaperOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplatePaperOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplatePaperOrientationOutput struct{ *pulumi.OutputState }

func (TemplatePaperOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePaperOrientation)(nil)).Elem()
}

func (o TemplatePaperOrientationOutput) ToTemplatePaperOrientationOutput() TemplatePaperOrientationOutput {
	return o
}

func (o TemplatePaperOrientationOutput) ToTemplatePaperOrientationOutputWithContext(ctx context.Context) TemplatePaperOrientationOutput {
	return o
}

func (o TemplatePaperOrientationOutput) ToTemplatePaperOrientationPtrOutput() TemplatePaperOrientationPtrOutput {
	return o.ToTemplatePaperOrientationPtrOutputWithContext(context.Background())
}

func (o TemplatePaperOrientationOutput) ToTemplatePaperOrientationPtrOutputWithContext(ctx context.Context) TemplatePaperOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePaperOrientation) *TemplatePaperOrientation {
		return &v
	}).(TemplatePaperOrientationPtrOutput)
}

func (o TemplatePaperOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplatePaperOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePaperOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplatePaperOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePaperOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePaperOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplatePaperOrientationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePaperOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePaperOrientation)(nil)).Elem()
}

func (o TemplatePaperOrientationPtrOutput) ToTemplatePaperOrientationPtrOutput() TemplatePaperOrientationPtrOutput {
	return o
}

func (o TemplatePaperOrientationPtrOutput) ToTemplatePaperOrientationPtrOutputWithContext(ctx context.Context) TemplatePaperOrientationPtrOutput {
	return o
}

func (o TemplatePaperOrientationPtrOutput) Elem() TemplatePaperOrientationOutput {
	return o.ApplyT(func(v *TemplatePaperOrientation) TemplatePaperOrientation {
		if v != nil {
			return *v
		}
		var ret TemplatePaperOrientation
		return ret
	}).(TemplatePaperOrientationOutput)
}

func (o TemplatePaperOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePaperOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplatePaperOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplatePaperOrientationInput is an input type that accepts values of the TemplatePaperOrientation enum
// A concrete instance of `TemplatePaperOrientationInput` can be one of the following:
//
//	TemplatePaperOrientationPortrait
//	TemplatePaperOrientationLandscape
type TemplatePaperOrientationInput interface {
	pulumi.Input

	ToTemplatePaperOrientationOutput() TemplatePaperOrientationOutput
	ToTemplatePaperOrientationOutputWithContext(context.Context) TemplatePaperOrientationOutput
}

var templatePaperOrientationPtrType = reflect.TypeOf((**TemplatePaperOrientation)(nil)).Elem()

type TemplatePaperOrientationPtrInput interface {
	pulumi.Input

	ToTemplatePaperOrientationPtrOutput() TemplatePaperOrientationPtrOutput
	ToTemplatePaperOrientationPtrOutputWithContext(context.Context) TemplatePaperOrientationPtrOutput
}

type templatePaperOrientationPtr string

func TemplatePaperOrientationPtr(v string) TemplatePaperOrientationPtrInput {
	return (*templatePaperOrientationPtr)(&v)
}

func (*templatePaperOrientationPtr) ElementType() reflect.Type {
	return templatePaperOrientationPtrType
}

func (in *templatePaperOrientationPtr) ToTemplatePaperOrientationPtrOutput() TemplatePaperOrientationPtrOutput {
	return pulumi.ToOutput(in).(TemplatePaperOrientationPtrOutput)
}

func (in *templatePaperOrientationPtr) ToTemplatePaperOrientationPtrOutputWithContext(ctx context.Context) TemplatePaperOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplatePaperOrientationPtrOutput)
}

type TemplatePaperSize string

const (
	TemplatePaperSizeUsLetter        = TemplatePaperSize("US_LETTER")
	TemplatePaperSizeUsLegal         = TemplatePaperSize("US_LEGAL")
	TemplatePaperSizeUsTabloidLedger = TemplatePaperSize("US_TABLOID_LEDGER")
	TemplatePaperSizeA0              = TemplatePaperSize("A0")
	TemplatePaperSizeA1              = TemplatePaperSize("A1")
	TemplatePaperSizeA2              = TemplatePaperSize("A2")
	TemplatePaperSizeA3              = TemplatePaperSize("A3")
	TemplatePaperSizeA4              = TemplatePaperSize("A4")
	TemplatePaperSizeA5              = TemplatePaperSize("A5")
	TemplatePaperSizeJisB4           = TemplatePaperSize("JIS_B4")
	TemplatePaperSizeJisB5           = TemplatePaperSize("JIS_B5")
)

func (TemplatePaperSize) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePaperSize)(nil)).Elem()
}

func (e TemplatePaperSize) ToTemplatePaperSizeOutput() TemplatePaperSizeOutput {
	return pulumi.ToOutput(e).(TemplatePaperSizeOutput)
}

func (e TemplatePaperSize) ToTemplatePaperSizeOutputWithContext(ctx context.Context) TemplatePaperSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplatePaperSizeOutput)
}

func (e TemplatePaperSize) ToTemplatePaperSizePtrOutput() TemplatePaperSizePtrOutput {
	return e.ToTemplatePaperSizePtrOutputWithContext(context.Background())
}

func (e TemplatePaperSize) ToTemplatePaperSizePtrOutputWithContext(ctx context.Context) TemplatePaperSizePtrOutput {
	return TemplatePaperSize(e).ToTemplatePaperSizeOutputWithContext(ctx).ToTemplatePaperSizePtrOutputWithContext(ctx)
}

func (e TemplatePaperSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePaperSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePaperSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplatePaperSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplatePaperSizeOutput struct{ *pulumi.OutputState }

func (TemplatePaperSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePaperSize)(nil)).Elem()
}

func (o TemplatePaperSizeOutput) ToTemplatePaperSizeOutput() TemplatePaperSizeOutput {
	return o
}

func (o TemplatePaperSizeOutput) ToTemplatePaperSizeOutputWithContext(ctx context.Context) TemplatePaperSizeOutput {
	return o
}

func (o TemplatePaperSizeOutput) ToTemplatePaperSizePtrOutput() TemplatePaperSizePtrOutput {
	return o.ToTemplatePaperSizePtrOutputWithContext(context.Background())
}

func (o TemplatePaperSizeOutput) ToTemplatePaperSizePtrOutputWithContext(ctx context.Context) TemplatePaperSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePaperSize) *TemplatePaperSize {
		return &v
	}).(TemplatePaperSizePtrOutput)
}

func (o TemplatePaperSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplatePaperSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePaperSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplatePaperSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePaperSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePaperSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplatePaperSizePtrOutput struct{ *pulumi.OutputState }

func (TemplatePaperSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePaperSize)(nil)).Elem()
}

func (o TemplatePaperSizePtrOutput) ToTemplatePaperSizePtrOutput() TemplatePaperSizePtrOutput {
	return o
}

func (o TemplatePaperSizePtrOutput) ToTemplatePaperSizePtrOutputWithContext(ctx context.Context) TemplatePaperSizePtrOutput {
	return o
}

func (o TemplatePaperSizePtrOutput) Elem() TemplatePaperSizeOutput {
	return o.ApplyT(func(v *TemplatePaperSize) TemplatePaperSize {
		if v != nil {
			return *v
		}
		var ret TemplatePaperSize
		return ret
	}).(TemplatePaperSizeOutput)
}

func (o TemplatePaperSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePaperSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplatePaperSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplatePaperSizeInput is an input type that accepts values of the TemplatePaperSize enum
// A concrete instance of `TemplatePaperSizeInput` can be one of the following:
//
//	TemplatePaperSizeUsLetter
//	TemplatePaperSizeUsLegal
//	TemplatePaperSizeUsTabloidLedger
//	TemplatePaperSizeA0
//	TemplatePaperSizeA1
//	TemplatePaperSizeA2
//	TemplatePaperSizeA3
//	TemplatePaperSizeA4
//	TemplatePaperSizeA5
//	TemplatePaperSizeJisB4
//	TemplatePaperSizeJisB5
type TemplatePaperSizeInput interface {
	pulumi.Input

	ToTemplatePaperSizeOutput() TemplatePaperSizeOutput
	ToTemplatePaperSizeOutputWithContext(context.Context) TemplatePaperSizeOutput
}

var templatePaperSizePtrType = reflect.TypeOf((**TemplatePaperSize)(nil)).Elem()

type TemplatePaperSizePtrInput interface {
	pulumi.Input

	ToTemplatePaperSizePtrOutput() TemplatePaperSizePtrOutput
	ToTemplatePaperSizePtrOutputWithContext(context.Context) TemplatePaperSizePtrOutput
}

type templatePaperSizePtr string

func TemplatePaperSizePtr(v string) TemplatePaperSizePtrInput {
	return (*templatePaperSizePtr)(&v)
}

func (*templatePaperSizePtr) ElementType() reflect.Type {
	return templatePaperSizePtrType
}

func (in *templatePaperSizePtr) ToTemplatePaperSizePtrOutput() TemplatePaperSizePtrOutput {
	return pulumi.ToOutput(in).(TemplatePaperSizePtrOutput)
}

func (in *templatePaperSizePtr) ToTemplatePaperSizePtrOutputWithContext(ctx context.Context) TemplatePaperSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplatePaperSizePtrOutput)
}

type TemplateParameterValueType string

const (
	TemplateParameterValueTypeMultiValued  = TemplateParameterValueType("MULTI_VALUED")
	TemplateParameterValueTypeSingleValued = TemplateParameterValueType("SINGLE_VALUED")
)

func (TemplateParameterValueType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterValueType)(nil)).Elem()
}

func (e TemplateParameterValueType) ToTemplateParameterValueTypeOutput() TemplateParameterValueTypeOutput {
	return pulumi.ToOutput(e).(TemplateParameterValueTypeOutput)
}

func (e TemplateParameterValueType) ToTemplateParameterValueTypeOutputWithContext(ctx context.Context) TemplateParameterValueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateParameterValueTypeOutput)
}

func (e TemplateParameterValueType) ToTemplateParameterValueTypePtrOutput() TemplateParameterValueTypePtrOutput {
	return e.ToTemplateParameterValueTypePtrOutputWithContext(context.Background())
}

func (e TemplateParameterValueType) ToTemplateParameterValueTypePtrOutputWithContext(ctx context.Context) TemplateParameterValueTypePtrOutput {
	return TemplateParameterValueType(e).ToTemplateParameterValueTypeOutputWithContext(ctx).ToTemplateParameterValueTypePtrOutputWithContext(ctx)
}

func (e TemplateParameterValueType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateParameterValueType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateParameterValueType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateParameterValueType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateParameterValueTypeOutput struct{ *pulumi.OutputState }

func (TemplateParameterValueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterValueType)(nil)).Elem()
}

func (o TemplateParameterValueTypeOutput) ToTemplateParameterValueTypeOutput() TemplateParameterValueTypeOutput {
	return o
}

func (o TemplateParameterValueTypeOutput) ToTemplateParameterValueTypeOutputWithContext(ctx context.Context) TemplateParameterValueTypeOutput {
	return o
}

func (o TemplateParameterValueTypeOutput) ToTemplateParameterValueTypePtrOutput() TemplateParameterValueTypePtrOutput {
	return o.ToTemplateParameterValueTypePtrOutputWithContext(context.Background())
}

func (o TemplateParameterValueTypeOutput) ToTemplateParameterValueTypePtrOutputWithContext(ctx context.Context) TemplateParameterValueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateParameterValueType) *TemplateParameterValueType {
		return &v
	}).(TemplateParameterValueTypePtrOutput)
}

func (o TemplateParameterValueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateParameterValueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateParameterValueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateParameterValueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateParameterValueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateParameterValueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateParameterValueTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateParameterValueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterValueType)(nil)).Elem()
}

func (o TemplateParameterValueTypePtrOutput) ToTemplateParameterValueTypePtrOutput() TemplateParameterValueTypePtrOutput {
	return o
}

func (o TemplateParameterValueTypePtrOutput) ToTemplateParameterValueTypePtrOutputWithContext(ctx context.Context) TemplateParameterValueTypePtrOutput {
	return o
}

func (o TemplateParameterValueTypePtrOutput) Elem() TemplateParameterValueTypeOutput {
	return o.ApplyT(func(v *TemplateParameterValueType) TemplateParameterValueType {
		if v != nil {
			return *v
		}
		var ret TemplateParameterValueType
		return ret
	}).(TemplateParameterValueTypeOutput)
}

func (o TemplateParameterValueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateParameterValueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateParameterValueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateParameterValueTypeInput is an input type that accepts values of the TemplateParameterValueType enum
// A concrete instance of `TemplateParameterValueTypeInput` can be one of the following:
//
//	TemplateParameterValueTypeMultiValued
//	TemplateParameterValueTypeSingleValued
type TemplateParameterValueTypeInput interface {
	pulumi.Input

	ToTemplateParameterValueTypeOutput() TemplateParameterValueTypeOutput
	ToTemplateParameterValueTypeOutputWithContext(context.Context) TemplateParameterValueTypeOutput
}

var templateParameterValueTypePtrType = reflect.TypeOf((**TemplateParameterValueType)(nil)).Elem()

type TemplateParameterValueTypePtrInput interface {
	pulumi.Input

	ToTemplateParameterValueTypePtrOutput() TemplateParameterValueTypePtrOutput
	ToTemplateParameterValueTypePtrOutputWithContext(context.Context) TemplateParameterValueTypePtrOutput
}

type templateParameterValueTypePtr string

func TemplateParameterValueTypePtr(v string) TemplateParameterValueTypePtrInput {
	return (*templateParameterValueTypePtr)(&v)
}

func (*templateParameterValueTypePtr) ElementType() reflect.Type {
	return templateParameterValueTypePtrType
}

func (in *templateParameterValueTypePtr) ToTemplateParameterValueTypePtrOutput() TemplateParameterValueTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateParameterValueTypePtrOutput)
}

func (in *templateParameterValueTypePtr) ToTemplateParameterValueTypePtrOutputWithContext(ctx context.Context) TemplateParameterValueTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateParameterValueTypePtrOutput)
}

type TemplatePivotTableConditionalFormattingScopeRole string

const (
	TemplatePivotTableConditionalFormattingScopeRoleField      = TemplatePivotTableConditionalFormattingScopeRole("FIELD")
	TemplatePivotTableConditionalFormattingScopeRoleFieldTotal = TemplatePivotTableConditionalFormattingScopeRole("FIELD_TOTAL")
	TemplatePivotTableConditionalFormattingScopeRoleGrandTotal = TemplatePivotTableConditionalFormattingScopeRole("GRAND_TOTAL")
)

func (TemplatePivotTableConditionalFormattingScopeRole) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableConditionalFormattingScopeRole)(nil)).Elem()
}

func (e TemplatePivotTableConditionalFormattingScopeRole) ToTemplatePivotTableConditionalFormattingScopeRoleOutput() TemplatePivotTableConditionalFormattingScopeRoleOutput {
	return pulumi.ToOutput(e).(TemplatePivotTableConditionalFormattingScopeRoleOutput)
}

func (e TemplatePivotTableConditionalFormattingScopeRole) ToTemplatePivotTableConditionalFormattingScopeRoleOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplatePivotTableConditionalFormattingScopeRoleOutput)
}

func (e TemplatePivotTableConditionalFormattingScopeRole) ToTemplatePivotTableConditionalFormattingScopeRolePtrOutput() TemplatePivotTableConditionalFormattingScopeRolePtrOutput {
	return e.ToTemplatePivotTableConditionalFormattingScopeRolePtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableConditionalFormattingScopeRole) ToTemplatePivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopeRolePtrOutput {
	return TemplatePivotTableConditionalFormattingScopeRole(e).ToTemplatePivotTableConditionalFormattingScopeRoleOutputWithContext(ctx).ToTemplatePivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx)
}

func (e TemplatePivotTableConditionalFormattingScopeRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableConditionalFormattingScopeRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableConditionalFormattingScopeRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableConditionalFormattingScopeRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplatePivotTableConditionalFormattingScopeRoleOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConditionalFormattingScopeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableConditionalFormattingScopeRole)(nil)).Elem()
}

func (o TemplatePivotTableConditionalFormattingScopeRoleOutput) ToTemplatePivotTableConditionalFormattingScopeRoleOutput() TemplatePivotTableConditionalFormattingScopeRoleOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingScopeRoleOutput) ToTemplatePivotTableConditionalFormattingScopeRoleOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopeRoleOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingScopeRoleOutput) ToTemplatePivotTableConditionalFormattingScopeRolePtrOutput() TemplatePivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ToTemplatePivotTableConditionalFormattingScopeRolePtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableConditionalFormattingScopeRoleOutput) ToTemplatePivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableConditionalFormattingScopeRole) *TemplatePivotTableConditionalFormattingScopeRole {
		return &v
	}).(TemplatePivotTableConditionalFormattingScopeRolePtrOutput)
}

func (o TemplatePivotTableConditionalFormattingScopeRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplatePivotTableConditionalFormattingScopeRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableConditionalFormattingScopeRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplatePivotTableConditionalFormattingScopeRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableConditionalFormattingScopeRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableConditionalFormattingScopeRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplatePivotTableConditionalFormattingScopeRolePtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConditionalFormattingScopeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableConditionalFormattingScopeRole)(nil)).Elem()
}

func (o TemplatePivotTableConditionalFormattingScopeRolePtrOutput) ToTemplatePivotTableConditionalFormattingScopeRolePtrOutput() TemplatePivotTableConditionalFormattingScopeRolePtrOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingScopeRolePtrOutput) ToTemplatePivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopeRolePtrOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingScopeRolePtrOutput) Elem() TemplatePivotTableConditionalFormattingScopeRoleOutput {
	return o.ApplyT(func(v *TemplatePivotTableConditionalFormattingScopeRole) TemplatePivotTableConditionalFormattingScopeRole {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableConditionalFormattingScopeRole
		return ret
	}).(TemplatePivotTableConditionalFormattingScopeRoleOutput)
}

func (o TemplatePivotTableConditionalFormattingScopeRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableConditionalFormattingScopeRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplatePivotTableConditionalFormattingScopeRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplatePivotTableConditionalFormattingScopeRoleInput is an input type that accepts values of the TemplatePivotTableConditionalFormattingScopeRole enum
// A concrete instance of `TemplatePivotTableConditionalFormattingScopeRoleInput` can be one of the following:
//
//	TemplatePivotTableConditionalFormattingScopeRoleField
//	TemplatePivotTableConditionalFormattingScopeRoleFieldTotal
//	TemplatePivotTableConditionalFormattingScopeRoleGrandTotal
type TemplatePivotTableConditionalFormattingScopeRoleInput interface {
	pulumi.Input

	ToTemplatePivotTableConditionalFormattingScopeRoleOutput() TemplatePivotTableConditionalFormattingScopeRoleOutput
	ToTemplatePivotTableConditionalFormattingScopeRoleOutputWithContext(context.Context) TemplatePivotTableConditionalFormattingScopeRoleOutput
}

var templatePivotTableConditionalFormattingScopeRolePtrType = reflect.TypeOf((**TemplatePivotTableConditionalFormattingScopeRole)(nil)).Elem()

type TemplatePivotTableConditionalFormattingScopeRolePtrInput interface {
	pulumi.Input

	ToTemplatePivotTableConditionalFormattingScopeRolePtrOutput() TemplatePivotTableConditionalFormattingScopeRolePtrOutput
	ToTemplatePivotTableConditionalFormattingScopeRolePtrOutputWithContext(context.Context) TemplatePivotTableConditionalFormattingScopeRolePtrOutput
}

type templatePivotTableConditionalFormattingScopeRolePtr string

func TemplatePivotTableConditionalFormattingScopeRolePtr(v string) TemplatePivotTableConditionalFormattingScopeRolePtrInput {
	return (*templatePivotTableConditionalFormattingScopeRolePtr)(&v)
}

func (*templatePivotTableConditionalFormattingScopeRolePtr) ElementType() reflect.Type {
	return templatePivotTableConditionalFormattingScopeRolePtrType
}

func (in *templatePivotTableConditionalFormattingScopeRolePtr) ToTemplatePivotTableConditionalFormattingScopeRolePtrOutput() TemplatePivotTableConditionalFormattingScopeRolePtrOutput {
	return pulumi.ToOutput(in).(TemplatePivotTableConditionalFormattingScopeRolePtrOutput)
}

func (in *templatePivotTableConditionalFormattingScopeRolePtr) ToTemplatePivotTableConditionalFormattingScopeRolePtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplatePivotTableConditionalFormattingScopeRolePtrOutput)
}

type TemplatePivotTableDataPathType string

const (
	TemplatePivotTableDataPathTypeHierarchyRowsLayoutColumn = TemplatePivotTableDataPathType("HIERARCHY_ROWS_LAYOUT_COLUMN")
	TemplatePivotTableDataPathTypeMultipleRowMetricsColumn  = TemplatePivotTableDataPathType("MULTIPLE_ROW_METRICS_COLUMN")
	TemplatePivotTableDataPathTypeEmptyColumnHeader         = TemplatePivotTableDataPathType("EMPTY_COLUMN_HEADER")
	TemplatePivotTableDataPathTypeCountMetricColumn         = TemplatePivotTableDataPathType("COUNT_METRIC_COLUMN")
)

func (TemplatePivotTableDataPathType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableDataPathType)(nil)).Elem()
}

func (e TemplatePivotTableDataPathType) ToTemplatePivotTableDataPathTypeOutput() TemplatePivotTableDataPathTypeOutput {
	return pulumi.ToOutput(e).(TemplatePivotTableDataPathTypeOutput)
}

func (e TemplatePivotTableDataPathType) ToTemplatePivotTableDataPathTypeOutputWithContext(ctx context.Context) TemplatePivotTableDataPathTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplatePivotTableDataPathTypeOutput)
}

func (e TemplatePivotTableDataPathType) ToTemplatePivotTableDataPathTypePtrOutput() TemplatePivotTableDataPathTypePtrOutput {
	return e.ToTemplatePivotTableDataPathTypePtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableDataPathType) ToTemplatePivotTableDataPathTypePtrOutputWithContext(ctx context.Context) TemplatePivotTableDataPathTypePtrOutput {
	return TemplatePivotTableDataPathType(e).ToTemplatePivotTableDataPathTypeOutputWithContext(ctx).ToTemplatePivotTableDataPathTypePtrOutputWithContext(ctx)
}

func (e TemplatePivotTableDataPathType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableDataPathType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableDataPathType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableDataPathType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplatePivotTableDataPathTypeOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableDataPathTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableDataPathType)(nil)).Elem()
}

func (o TemplatePivotTableDataPathTypeOutput) ToTemplatePivotTableDataPathTypeOutput() TemplatePivotTableDataPathTypeOutput {
	return o
}

func (o TemplatePivotTableDataPathTypeOutput) ToTemplatePivotTableDataPathTypeOutputWithContext(ctx context.Context) TemplatePivotTableDataPathTypeOutput {
	return o
}

func (o TemplatePivotTableDataPathTypeOutput) ToTemplatePivotTableDataPathTypePtrOutput() TemplatePivotTableDataPathTypePtrOutput {
	return o.ToTemplatePivotTableDataPathTypePtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableDataPathTypeOutput) ToTemplatePivotTableDataPathTypePtrOutputWithContext(ctx context.Context) TemplatePivotTableDataPathTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableDataPathType) *TemplatePivotTableDataPathType {
		return &v
	}).(TemplatePivotTableDataPathTypePtrOutput)
}

func (o TemplatePivotTableDataPathTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplatePivotTableDataPathTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableDataPathType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplatePivotTableDataPathTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableDataPathTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableDataPathType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplatePivotTableDataPathTypePtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableDataPathTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableDataPathType)(nil)).Elem()
}

func (o TemplatePivotTableDataPathTypePtrOutput) ToTemplatePivotTableDataPathTypePtrOutput() TemplatePivotTableDataPathTypePtrOutput {
	return o
}

func (o TemplatePivotTableDataPathTypePtrOutput) ToTemplatePivotTableDataPathTypePtrOutputWithContext(ctx context.Context) TemplatePivotTableDataPathTypePtrOutput {
	return o
}

func (o TemplatePivotTableDataPathTypePtrOutput) Elem() TemplatePivotTableDataPathTypeOutput {
	return o.ApplyT(func(v *TemplatePivotTableDataPathType) TemplatePivotTableDataPathType {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableDataPathType
		return ret
	}).(TemplatePivotTableDataPathTypeOutput)
}

func (o TemplatePivotTableDataPathTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableDataPathTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplatePivotTableDataPathType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplatePivotTableDataPathTypeInput is an input type that accepts values of the TemplatePivotTableDataPathType enum
// A concrete instance of `TemplatePivotTableDataPathTypeInput` can be one of the following:
//
//	TemplatePivotTableDataPathTypeHierarchyRowsLayoutColumn
//	TemplatePivotTableDataPathTypeMultipleRowMetricsColumn
//	TemplatePivotTableDataPathTypeEmptyColumnHeader
//	TemplatePivotTableDataPathTypeCountMetricColumn
type TemplatePivotTableDataPathTypeInput interface {
	pulumi.Input

	ToTemplatePivotTableDataPathTypeOutput() TemplatePivotTableDataPathTypeOutput
	ToTemplatePivotTableDataPathTypeOutputWithContext(context.Context) TemplatePivotTableDataPathTypeOutput
}

var templatePivotTableDataPathTypePtrType = reflect.TypeOf((**TemplatePivotTableDataPathType)(nil)).Elem()

type TemplatePivotTableDataPathTypePtrInput interface {
	pulumi.Input

	ToTemplatePivotTableDataPathTypePtrOutput() TemplatePivotTableDataPathTypePtrOutput
	ToTemplatePivotTableDataPathTypePtrOutputWithContext(context.Context) TemplatePivotTableDataPathTypePtrOutput
}

type templatePivotTableDataPathTypePtr string

func TemplatePivotTableDataPathTypePtr(v string) TemplatePivotTableDataPathTypePtrInput {
	return (*templatePivotTableDataPathTypePtr)(&v)
}

func (*templatePivotTableDataPathTypePtr) ElementType() reflect.Type {
	return templatePivotTableDataPathTypePtrType
}

func (in *templatePivotTableDataPathTypePtr) ToTemplatePivotTableDataPathTypePtrOutput() TemplatePivotTableDataPathTypePtrOutput {
	return pulumi.ToOutput(in).(TemplatePivotTableDataPathTypePtrOutput)
}

func (in *templatePivotTableDataPathTypePtr) ToTemplatePivotTableDataPathTypePtrOutputWithContext(ctx context.Context) TemplatePivotTableDataPathTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplatePivotTableDataPathTypePtrOutput)
}

type TemplatePivotTableFieldCollapseState string

const (
	TemplatePivotTableFieldCollapseStateCollapsed = TemplatePivotTableFieldCollapseState("COLLAPSED")
	TemplatePivotTableFieldCollapseStateExpanded  = TemplatePivotTableFieldCollapseState("EXPANDED")
)

func (TemplatePivotTableFieldCollapseState) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldCollapseState)(nil)).Elem()
}

func (e TemplatePivotTableFieldCollapseState) ToTemplatePivotTableFieldCollapseStateOutput() TemplatePivotTableFieldCollapseStateOutput {
	return pulumi.ToOutput(e).(TemplatePivotTableFieldCollapseStateOutput)
}

func (e TemplatePivotTableFieldCollapseState) ToTemplatePivotTableFieldCollapseStateOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplatePivotTableFieldCollapseStateOutput)
}

func (e TemplatePivotTableFieldCollapseState) ToTemplatePivotTableFieldCollapseStatePtrOutput() TemplatePivotTableFieldCollapseStatePtrOutput {
	return e.ToTemplatePivotTableFieldCollapseStatePtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableFieldCollapseState) ToTemplatePivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStatePtrOutput {
	return TemplatePivotTableFieldCollapseState(e).ToTemplatePivotTableFieldCollapseStateOutputWithContext(ctx).ToTemplatePivotTableFieldCollapseStatePtrOutputWithContext(ctx)
}

func (e TemplatePivotTableFieldCollapseState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableFieldCollapseState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableFieldCollapseState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableFieldCollapseState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplatePivotTableFieldCollapseStateOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldCollapseStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldCollapseState)(nil)).Elem()
}

func (o TemplatePivotTableFieldCollapseStateOutput) ToTemplatePivotTableFieldCollapseStateOutput() TemplatePivotTableFieldCollapseStateOutput {
	return o
}

func (o TemplatePivotTableFieldCollapseStateOutput) ToTemplatePivotTableFieldCollapseStateOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStateOutput {
	return o
}

func (o TemplatePivotTableFieldCollapseStateOutput) ToTemplatePivotTableFieldCollapseStatePtrOutput() TemplatePivotTableFieldCollapseStatePtrOutput {
	return o.ToTemplatePivotTableFieldCollapseStatePtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableFieldCollapseStateOutput) ToTemplatePivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableFieldCollapseState) *TemplatePivotTableFieldCollapseState {
		return &v
	}).(TemplatePivotTableFieldCollapseStatePtrOutput)
}

func (o TemplatePivotTableFieldCollapseStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplatePivotTableFieldCollapseStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableFieldCollapseState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplatePivotTableFieldCollapseStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableFieldCollapseStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableFieldCollapseState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplatePivotTableFieldCollapseStatePtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldCollapseStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableFieldCollapseState)(nil)).Elem()
}

func (o TemplatePivotTableFieldCollapseStatePtrOutput) ToTemplatePivotTableFieldCollapseStatePtrOutput() TemplatePivotTableFieldCollapseStatePtrOutput {
	return o
}

func (o TemplatePivotTableFieldCollapseStatePtrOutput) ToTemplatePivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStatePtrOutput {
	return o
}

func (o TemplatePivotTableFieldCollapseStatePtrOutput) Elem() TemplatePivotTableFieldCollapseStateOutput {
	return o.ApplyT(func(v *TemplatePivotTableFieldCollapseState) TemplatePivotTableFieldCollapseState {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableFieldCollapseState
		return ret
	}).(TemplatePivotTableFieldCollapseStateOutput)
}

func (o TemplatePivotTableFieldCollapseStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableFieldCollapseStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplatePivotTableFieldCollapseState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplatePivotTableFieldCollapseStateInput is an input type that accepts values of the TemplatePivotTableFieldCollapseState enum
// A concrete instance of `TemplatePivotTableFieldCollapseStateInput` can be one of the following:
//
//	TemplatePivotTableFieldCollapseStateCollapsed
//	TemplatePivotTableFieldCollapseStateExpanded
type TemplatePivotTableFieldCollapseStateInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldCollapseStateOutput() TemplatePivotTableFieldCollapseStateOutput
	ToTemplatePivotTableFieldCollapseStateOutputWithContext(context.Context) TemplatePivotTableFieldCollapseStateOutput
}

var templatePivotTableFieldCollapseStatePtrType = reflect.TypeOf((**TemplatePivotTableFieldCollapseState)(nil)).Elem()

type TemplatePivotTableFieldCollapseStatePtrInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldCollapseStatePtrOutput() TemplatePivotTableFieldCollapseStatePtrOutput
	ToTemplatePivotTableFieldCollapseStatePtrOutputWithContext(context.Context) TemplatePivotTableFieldCollapseStatePtrOutput
}

type templatePivotTableFieldCollapseStatePtr string

func TemplatePivotTableFieldCollapseStatePtr(v string) TemplatePivotTableFieldCollapseStatePtrInput {
	return (*templatePivotTableFieldCollapseStatePtr)(&v)
}

func (*templatePivotTableFieldCollapseStatePtr) ElementType() reflect.Type {
	return templatePivotTableFieldCollapseStatePtrType
}

func (in *templatePivotTableFieldCollapseStatePtr) ToTemplatePivotTableFieldCollapseStatePtrOutput() TemplatePivotTableFieldCollapseStatePtrOutput {
	return pulumi.ToOutput(in).(TemplatePivotTableFieldCollapseStatePtrOutput)
}

func (in *templatePivotTableFieldCollapseStatePtr) ToTemplatePivotTableFieldCollapseStatePtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplatePivotTableFieldCollapseStatePtrOutput)
}

type TemplatePivotTableMetricPlacement string

const (
	TemplatePivotTableMetricPlacementRow    = TemplatePivotTableMetricPlacement("ROW")
	TemplatePivotTableMetricPlacementColumn = TemplatePivotTableMetricPlacement("COLUMN")
)

func (TemplatePivotTableMetricPlacement) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableMetricPlacement)(nil)).Elem()
}

func (e TemplatePivotTableMetricPlacement) ToTemplatePivotTableMetricPlacementOutput() TemplatePivotTableMetricPlacementOutput {
	return pulumi.ToOutput(e).(TemplatePivotTableMetricPlacementOutput)
}

func (e TemplatePivotTableMetricPlacement) ToTemplatePivotTableMetricPlacementOutputWithContext(ctx context.Context) TemplatePivotTableMetricPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplatePivotTableMetricPlacementOutput)
}

func (e TemplatePivotTableMetricPlacement) ToTemplatePivotTableMetricPlacementPtrOutput() TemplatePivotTableMetricPlacementPtrOutput {
	return e.ToTemplatePivotTableMetricPlacementPtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableMetricPlacement) ToTemplatePivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) TemplatePivotTableMetricPlacementPtrOutput {
	return TemplatePivotTableMetricPlacement(e).ToTemplatePivotTableMetricPlacementOutputWithContext(ctx).ToTemplatePivotTableMetricPlacementPtrOutputWithContext(ctx)
}

func (e TemplatePivotTableMetricPlacement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableMetricPlacement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableMetricPlacement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableMetricPlacement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplatePivotTableMetricPlacementOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableMetricPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableMetricPlacement)(nil)).Elem()
}

func (o TemplatePivotTableMetricPlacementOutput) ToTemplatePivotTableMetricPlacementOutput() TemplatePivotTableMetricPlacementOutput {
	return o
}

func (o TemplatePivotTableMetricPlacementOutput) ToTemplatePivotTableMetricPlacementOutputWithContext(ctx context.Context) TemplatePivotTableMetricPlacementOutput {
	return o
}

func (o TemplatePivotTableMetricPlacementOutput) ToTemplatePivotTableMetricPlacementPtrOutput() TemplatePivotTableMetricPlacementPtrOutput {
	return o.ToTemplatePivotTableMetricPlacementPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableMetricPlacementOutput) ToTemplatePivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) TemplatePivotTableMetricPlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableMetricPlacement) *TemplatePivotTableMetricPlacement {
		return &v
	}).(TemplatePivotTableMetricPlacementPtrOutput)
}

func (o TemplatePivotTableMetricPlacementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplatePivotTableMetricPlacementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableMetricPlacement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplatePivotTableMetricPlacementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableMetricPlacementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableMetricPlacement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplatePivotTableMetricPlacementPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableMetricPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableMetricPlacement)(nil)).Elem()
}

func (o TemplatePivotTableMetricPlacementPtrOutput) ToTemplatePivotTableMetricPlacementPtrOutput() TemplatePivotTableMetricPlacementPtrOutput {
	return o
}

func (o TemplatePivotTableMetricPlacementPtrOutput) ToTemplatePivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) TemplatePivotTableMetricPlacementPtrOutput {
	return o
}

func (o TemplatePivotTableMetricPlacementPtrOutput) Elem() TemplatePivotTableMetricPlacementOutput {
	return o.ApplyT(func(v *TemplatePivotTableMetricPlacement) TemplatePivotTableMetricPlacement {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableMetricPlacement
		return ret
	}).(TemplatePivotTableMetricPlacementOutput)
}

func (o TemplatePivotTableMetricPlacementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableMetricPlacementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplatePivotTableMetricPlacement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplatePivotTableMetricPlacementInput is an input type that accepts values of the TemplatePivotTableMetricPlacement enum
// A concrete instance of `TemplatePivotTableMetricPlacementInput` can be one of the following:
//
//	TemplatePivotTableMetricPlacementRow
//	TemplatePivotTableMetricPlacementColumn
type TemplatePivotTableMetricPlacementInput interface {
	pulumi.Input

	ToTemplatePivotTableMetricPlacementOutput() TemplatePivotTableMetricPlacementOutput
	ToTemplatePivotTableMetricPlacementOutputWithContext(context.Context) TemplatePivotTableMetricPlacementOutput
}

var templatePivotTableMetricPlacementPtrType = reflect.TypeOf((**TemplatePivotTableMetricPlacement)(nil)).Elem()

type TemplatePivotTableMetricPlacementPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableMetricPlacementPtrOutput() TemplatePivotTableMetricPlacementPtrOutput
	ToTemplatePivotTableMetricPlacementPtrOutputWithContext(context.Context) TemplatePivotTableMetricPlacementPtrOutput
}

type templatePivotTableMetricPlacementPtr string

func TemplatePivotTableMetricPlacementPtr(v string) TemplatePivotTableMetricPlacementPtrInput {
	return (*templatePivotTableMetricPlacementPtr)(&v)
}

func (*templatePivotTableMetricPlacementPtr) ElementType() reflect.Type {
	return templatePivotTableMetricPlacementPtrType
}

func (in *templatePivotTableMetricPlacementPtr) ToTemplatePivotTableMetricPlacementPtrOutput() TemplatePivotTableMetricPlacementPtrOutput {
	return pulumi.ToOutput(in).(TemplatePivotTableMetricPlacementPtrOutput)
}

func (in *templatePivotTableMetricPlacementPtr) ToTemplatePivotTableMetricPlacementPtrOutputWithContext(ctx context.Context) TemplatePivotTableMetricPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplatePivotTableMetricPlacementPtrOutput)
}

type TemplatePivotTableRowsLayout string

const (
	TemplatePivotTableRowsLayoutTabular   = TemplatePivotTableRowsLayout("TABULAR")
	TemplatePivotTableRowsLayoutHierarchy = TemplatePivotTableRowsLayout("HIERARCHY")
)

func (TemplatePivotTableRowsLayout) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableRowsLayout)(nil)).Elem()
}

func (e TemplatePivotTableRowsLayout) ToTemplatePivotTableRowsLayoutOutput() TemplatePivotTableRowsLayoutOutput {
	return pulumi.ToOutput(e).(TemplatePivotTableRowsLayoutOutput)
}

func (e TemplatePivotTableRowsLayout) ToTemplatePivotTableRowsLayoutOutputWithContext(ctx context.Context) TemplatePivotTableRowsLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplatePivotTableRowsLayoutOutput)
}

func (e TemplatePivotTableRowsLayout) ToTemplatePivotTableRowsLayoutPtrOutput() TemplatePivotTableRowsLayoutPtrOutput {
	return e.ToTemplatePivotTableRowsLayoutPtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableRowsLayout) ToTemplatePivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) TemplatePivotTableRowsLayoutPtrOutput {
	return TemplatePivotTableRowsLayout(e).ToTemplatePivotTableRowsLayoutOutputWithContext(ctx).ToTemplatePivotTableRowsLayoutPtrOutputWithContext(ctx)
}

func (e TemplatePivotTableRowsLayout) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableRowsLayout) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableRowsLayout) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableRowsLayout) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplatePivotTableRowsLayoutOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableRowsLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableRowsLayout)(nil)).Elem()
}

func (o TemplatePivotTableRowsLayoutOutput) ToTemplatePivotTableRowsLayoutOutput() TemplatePivotTableRowsLayoutOutput {
	return o
}

func (o TemplatePivotTableRowsLayoutOutput) ToTemplatePivotTableRowsLayoutOutputWithContext(ctx context.Context) TemplatePivotTableRowsLayoutOutput {
	return o
}

func (o TemplatePivotTableRowsLayoutOutput) ToTemplatePivotTableRowsLayoutPtrOutput() TemplatePivotTableRowsLayoutPtrOutput {
	return o.ToTemplatePivotTableRowsLayoutPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableRowsLayoutOutput) ToTemplatePivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) TemplatePivotTableRowsLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableRowsLayout) *TemplatePivotTableRowsLayout {
		return &v
	}).(TemplatePivotTableRowsLayoutPtrOutput)
}

func (o TemplatePivotTableRowsLayoutOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplatePivotTableRowsLayoutOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableRowsLayout) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplatePivotTableRowsLayoutOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableRowsLayoutOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableRowsLayout) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplatePivotTableRowsLayoutPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableRowsLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableRowsLayout)(nil)).Elem()
}

func (o TemplatePivotTableRowsLayoutPtrOutput) ToTemplatePivotTableRowsLayoutPtrOutput() TemplatePivotTableRowsLayoutPtrOutput {
	return o
}

func (o TemplatePivotTableRowsLayoutPtrOutput) ToTemplatePivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) TemplatePivotTableRowsLayoutPtrOutput {
	return o
}

func (o TemplatePivotTableRowsLayoutPtrOutput) Elem() TemplatePivotTableRowsLayoutOutput {
	return o.ApplyT(func(v *TemplatePivotTableRowsLayout) TemplatePivotTableRowsLayout {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableRowsLayout
		return ret
	}).(TemplatePivotTableRowsLayoutOutput)
}

func (o TemplatePivotTableRowsLayoutPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableRowsLayoutPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplatePivotTableRowsLayout) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplatePivotTableRowsLayoutInput is an input type that accepts values of the TemplatePivotTableRowsLayout enum
// A concrete instance of `TemplatePivotTableRowsLayoutInput` can be one of the following:
//
//	TemplatePivotTableRowsLayoutTabular
//	TemplatePivotTableRowsLayoutHierarchy
type TemplatePivotTableRowsLayoutInput interface {
	pulumi.Input

	ToTemplatePivotTableRowsLayoutOutput() TemplatePivotTableRowsLayoutOutput
	ToTemplatePivotTableRowsLayoutOutputWithContext(context.Context) TemplatePivotTableRowsLayoutOutput
}

var templatePivotTableRowsLayoutPtrType = reflect.TypeOf((**TemplatePivotTableRowsLayout)(nil)).Elem()

type TemplatePivotTableRowsLayoutPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableRowsLayoutPtrOutput() TemplatePivotTableRowsLayoutPtrOutput
	ToTemplatePivotTableRowsLayoutPtrOutputWithContext(context.Context) TemplatePivotTableRowsLayoutPtrOutput
}

type templatePivotTableRowsLayoutPtr string

func TemplatePivotTableRowsLayoutPtr(v string) TemplatePivotTableRowsLayoutPtrInput {
	return (*templatePivotTableRowsLayoutPtr)(&v)
}

func (*templatePivotTableRowsLayoutPtr) ElementType() reflect.Type {
	return templatePivotTableRowsLayoutPtrType
}

func (in *templatePivotTableRowsLayoutPtr) ToTemplatePivotTableRowsLayoutPtrOutput() TemplatePivotTableRowsLayoutPtrOutput {
	return pulumi.ToOutput(in).(TemplatePivotTableRowsLayoutPtrOutput)
}

func (in *templatePivotTableRowsLayoutPtr) ToTemplatePivotTableRowsLayoutPtrOutputWithContext(ctx context.Context) TemplatePivotTableRowsLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplatePivotTableRowsLayoutPtrOutput)
}

type TemplatePivotTableSubtotalLevel string

const (
	TemplatePivotTableSubtotalLevelAll    = TemplatePivotTableSubtotalLevel("ALL")
	TemplatePivotTableSubtotalLevelCustom = TemplatePivotTableSubtotalLevel("CUSTOM")
	TemplatePivotTableSubtotalLevelLast   = TemplatePivotTableSubtotalLevel("LAST")
)

func (TemplatePivotTableSubtotalLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableSubtotalLevel)(nil)).Elem()
}

func (e TemplatePivotTableSubtotalLevel) ToTemplatePivotTableSubtotalLevelOutput() TemplatePivotTableSubtotalLevelOutput {
	return pulumi.ToOutput(e).(TemplatePivotTableSubtotalLevelOutput)
}

func (e TemplatePivotTableSubtotalLevel) ToTemplatePivotTableSubtotalLevelOutputWithContext(ctx context.Context) TemplatePivotTableSubtotalLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplatePivotTableSubtotalLevelOutput)
}

func (e TemplatePivotTableSubtotalLevel) ToTemplatePivotTableSubtotalLevelPtrOutput() TemplatePivotTableSubtotalLevelPtrOutput {
	return e.ToTemplatePivotTableSubtotalLevelPtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableSubtotalLevel) ToTemplatePivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) TemplatePivotTableSubtotalLevelPtrOutput {
	return TemplatePivotTableSubtotalLevel(e).ToTemplatePivotTableSubtotalLevelOutputWithContext(ctx).ToTemplatePivotTableSubtotalLevelPtrOutputWithContext(ctx)
}

func (e TemplatePivotTableSubtotalLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableSubtotalLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePivotTableSubtotalLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplatePivotTableSubtotalLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplatePivotTableSubtotalLevelOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableSubtotalLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableSubtotalLevel)(nil)).Elem()
}

func (o TemplatePivotTableSubtotalLevelOutput) ToTemplatePivotTableSubtotalLevelOutput() TemplatePivotTableSubtotalLevelOutput {
	return o
}

func (o TemplatePivotTableSubtotalLevelOutput) ToTemplatePivotTableSubtotalLevelOutputWithContext(ctx context.Context) TemplatePivotTableSubtotalLevelOutput {
	return o
}

func (o TemplatePivotTableSubtotalLevelOutput) ToTemplatePivotTableSubtotalLevelPtrOutput() TemplatePivotTableSubtotalLevelPtrOutput {
	return o.ToTemplatePivotTableSubtotalLevelPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableSubtotalLevelOutput) ToTemplatePivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) TemplatePivotTableSubtotalLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableSubtotalLevel) *TemplatePivotTableSubtotalLevel {
		return &v
	}).(TemplatePivotTableSubtotalLevelPtrOutput)
}

func (o TemplatePivotTableSubtotalLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplatePivotTableSubtotalLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableSubtotalLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplatePivotTableSubtotalLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableSubtotalLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePivotTableSubtotalLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplatePivotTableSubtotalLevelPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableSubtotalLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableSubtotalLevel)(nil)).Elem()
}

func (o TemplatePivotTableSubtotalLevelPtrOutput) ToTemplatePivotTableSubtotalLevelPtrOutput() TemplatePivotTableSubtotalLevelPtrOutput {
	return o
}

func (o TemplatePivotTableSubtotalLevelPtrOutput) ToTemplatePivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) TemplatePivotTableSubtotalLevelPtrOutput {
	return o
}

func (o TemplatePivotTableSubtotalLevelPtrOutput) Elem() TemplatePivotTableSubtotalLevelOutput {
	return o.ApplyT(func(v *TemplatePivotTableSubtotalLevel) TemplatePivotTableSubtotalLevel {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableSubtotalLevel
		return ret
	}).(TemplatePivotTableSubtotalLevelOutput)
}

func (o TemplatePivotTableSubtotalLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableSubtotalLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplatePivotTableSubtotalLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplatePivotTableSubtotalLevelInput is an input type that accepts values of the TemplatePivotTableSubtotalLevel enum
// A concrete instance of `TemplatePivotTableSubtotalLevelInput` can be one of the following:
//
//	TemplatePivotTableSubtotalLevelAll
//	TemplatePivotTableSubtotalLevelCustom
//	TemplatePivotTableSubtotalLevelLast
type TemplatePivotTableSubtotalLevelInput interface {
	pulumi.Input

	ToTemplatePivotTableSubtotalLevelOutput() TemplatePivotTableSubtotalLevelOutput
	ToTemplatePivotTableSubtotalLevelOutputWithContext(context.Context) TemplatePivotTableSubtotalLevelOutput
}

var templatePivotTableSubtotalLevelPtrType = reflect.TypeOf((**TemplatePivotTableSubtotalLevel)(nil)).Elem()

type TemplatePivotTableSubtotalLevelPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableSubtotalLevelPtrOutput() TemplatePivotTableSubtotalLevelPtrOutput
	ToTemplatePivotTableSubtotalLevelPtrOutputWithContext(context.Context) TemplatePivotTableSubtotalLevelPtrOutput
}

type templatePivotTableSubtotalLevelPtr string

func TemplatePivotTableSubtotalLevelPtr(v string) TemplatePivotTableSubtotalLevelPtrInput {
	return (*templatePivotTableSubtotalLevelPtr)(&v)
}

func (*templatePivotTableSubtotalLevelPtr) ElementType() reflect.Type {
	return templatePivotTableSubtotalLevelPtrType
}

func (in *templatePivotTableSubtotalLevelPtr) ToTemplatePivotTableSubtotalLevelPtrOutput() TemplatePivotTableSubtotalLevelPtrOutput {
	return pulumi.ToOutput(in).(TemplatePivotTableSubtotalLevelPtrOutput)
}

func (in *templatePivotTableSubtotalLevelPtr) ToTemplatePivotTableSubtotalLevelPtrOutputWithContext(ctx context.Context) TemplatePivotTableSubtotalLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplatePivotTableSubtotalLevelPtrOutput)
}

type TemplatePrimaryValueDisplayType string

const (
	TemplatePrimaryValueDisplayTypeHidden     = TemplatePrimaryValueDisplayType("HIDDEN")
	TemplatePrimaryValueDisplayTypeComparison = TemplatePrimaryValueDisplayType("COMPARISON")
	TemplatePrimaryValueDisplayTypeActual     = TemplatePrimaryValueDisplayType("ACTUAL")
)

func (TemplatePrimaryValueDisplayType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrimaryValueDisplayType)(nil)).Elem()
}

func (e TemplatePrimaryValueDisplayType) ToTemplatePrimaryValueDisplayTypeOutput() TemplatePrimaryValueDisplayTypeOutput {
	return pulumi.ToOutput(e).(TemplatePrimaryValueDisplayTypeOutput)
}

func (e TemplatePrimaryValueDisplayType) ToTemplatePrimaryValueDisplayTypeOutputWithContext(ctx context.Context) TemplatePrimaryValueDisplayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplatePrimaryValueDisplayTypeOutput)
}

func (e TemplatePrimaryValueDisplayType) ToTemplatePrimaryValueDisplayTypePtrOutput() TemplatePrimaryValueDisplayTypePtrOutput {
	return e.ToTemplatePrimaryValueDisplayTypePtrOutputWithContext(context.Background())
}

func (e TemplatePrimaryValueDisplayType) ToTemplatePrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) TemplatePrimaryValueDisplayTypePtrOutput {
	return TemplatePrimaryValueDisplayType(e).ToTemplatePrimaryValueDisplayTypeOutputWithContext(ctx).ToTemplatePrimaryValueDisplayTypePtrOutputWithContext(ctx)
}

func (e TemplatePrimaryValueDisplayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePrimaryValueDisplayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplatePrimaryValueDisplayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplatePrimaryValueDisplayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplatePrimaryValueDisplayTypeOutput struct{ *pulumi.OutputState }

func (TemplatePrimaryValueDisplayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrimaryValueDisplayType)(nil)).Elem()
}

func (o TemplatePrimaryValueDisplayTypeOutput) ToTemplatePrimaryValueDisplayTypeOutput() TemplatePrimaryValueDisplayTypeOutput {
	return o
}

func (o TemplatePrimaryValueDisplayTypeOutput) ToTemplatePrimaryValueDisplayTypeOutputWithContext(ctx context.Context) TemplatePrimaryValueDisplayTypeOutput {
	return o
}

func (o TemplatePrimaryValueDisplayTypeOutput) ToTemplatePrimaryValueDisplayTypePtrOutput() TemplatePrimaryValueDisplayTypePtrOutput {
	return o.ToTemplatePrimaryValueDisplayTypePtrOutputWithContext(context.Background())
}

func (o TemplatePrimaryValueDisplayTypeOutput) ToTemplatePrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) TemplatePrimaryValueDisplayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePrimaryValueDisplayType) *TemplatePrimaryValueDisplayType {
		return &v
	}).(TemplatePrimaryValueDisplayTypePtrOutput)
}

func (o TemplatePrimaryValueDisplayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplatePrimaryValueDisplayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePrimaryValueDisplayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplatePrimaryValueDisplayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePrimaryValueDisplayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplatePrimaryValueDisplayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplatePrimaryValueDisplayTypePtrOutput struct{ *pulumi.OutputState }

func (TemplatePrimaryValueDisplayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePrimaryValueDisplayType)(nil)).Elem()
}

func (o TemplatePrimaryValueDisplayTypePtrOutput) ToTemplatePrimaryValueDisplayTypePtrOutput() TemplatePrimaryValueDisplayTypePtrOutput {
	return o
}

func (o TemplatePrimaryValueDisplayTypePtrOutput) ToTemplatePrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) TemplatePrimaryValueDisplayTypePtrOutput {
	return o
}

func (o TemplatePrimaryValueDisplayTypePtrOutput) Elem() TemplatePrimaryValueDisplayTypeOutput {
	return o.ApplyT(func(v *TemplatePrimaryValueDisplayType) TemplatePrimaryValueDisplayType {
		if v != nil {
			return *v
		}
		var ret TemplatePrimaryValueDisplayType
		return ret
	}).(TemplatePrimaryValueDisplayTypeOutput)
}

func (o TemplatePrimaryValueDisplayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplatePrimaryValueDisplayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplatePrimaryValueDisplayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplatePrimaryValueDisplayTypeInput is an input type that accepts values of the TemplatePrimaryValueDisplayType enum
// A concrete instance of `TemplatePrimaryValueDisplayTypeInput` can be one of the following:
//
//	TemplatePrimaryValueDisplayTypeHidden
//	TemplatePrimaryValueDisplayTypeComparison
//	TemplatePrimaryValueDisplayTypeActual
type TemplatePrimaryValueDisplayTypeInput interface {
	pulumi.Input

	ToTemplatePrimaryValueDisplayTypeOutput() TemplatePrimaryValueDisplayTypeOutput
	ToTemplatePrimaryValueDisplayTypeOutputWithContext(context.Context) TemplatePrimaryValueDisplayTypeOutput
}

var templatePrimaryValueDisplayTypePtrType = reflect.TypeOf((**TemplatePrimaryValueDisplayType)(nil)).Elem()

type TemplatePrimaryValueDisplayTypePtrInput interface {
	pulumi.Input

	ToTemplatePrimaryValueDisplayTypePtrOutput() TemplatePrimaryValueDisplayTypePtrOutput
	ToTemplatePrimaryValueDisplayTypePtrOutputWithContext(context.Context) TemplatePrimaryValueDisplayTypePtrOutput
}

type templatePrimaryValueDisplayTypePtr string

func TemplatePrimaryValueDisplayTypePtr(v string) TemplatePrimaryValueDisplayTypePtrInput {
	return (*templatePrimaryValueDisplayTypePtr)(&v)
}

func (*templatePrimaryValueDisplayTypePtr) ElementType() reflect.Type {
	return templatePrimaryValueDisplayTypePtrType
}

func (in *templatePrimaryValueDisplayTypePtr) ToTemplatePrimaryValueDisplayTypePtrOutput() TemplatePrimaryValueDisplayTypePtrOutput {
	return pulumi.ToOutput(in).(TemplatePrimaryValueDisplayTypePtrOutput)
}

func (in *templatePrimaryValueDisplayTypePtr) ToTemplatePrimaryValueDisplayTypePtrOutputWithContext(ctx context.Context) TemplatePrimaryValueDisplayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplatePrimaryValueDisplayTypePtrOutput)
}

type TemplateRadarChartAxesRangeScale string

const (
	TemplateRadarChartAxesRangeScaleAuto        = TemplateRadarChartAxesRangeScale("AUTO")
	TemplateRadarChartAxesRangeScaleIndependent = TemplateRadarChartAxesRangeScale("INDEPENDENT")
	TemplateRadarChartAxesRangeScaleShared      = TemplateRadarChartAxesRangeScale("SHARED")
)

func (TemplateRadarChartAxesRangeScale) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartAxesRangeScale)(nil)).Elem()
}

func (e TemplateRadarChartAxesRangeScale) ToTemplateRadarChartAxesRangeScaleOutput() TemplateRadarChartAxesRangeScaleOutput {
	return pulumi.ToOutput(e).(TemplateRadarChartAxesRangeScaleOutput)
}

func (e TemplateRadarChartAxesRangeScale) ToTemplateRadarChartAxesRangeScaleOutputWithContext(ctx context.Context) TemplateRadarChartAxesRangeScaleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateRadarChartAxesRangeScaleOutput)
}

func (e TemplateRadarChartAxesRangeScale) ToTemplateRadarChartAxesRangeScalePtrOutput() TemplateRadarChartAxesRangeScalePtrOutput {
	return e.ToTemplateRadarChartAxesRangeScalePtrOutputWithContext(context.Background())
}

func (e TemplateRadarChartAxesRangeScale) ToTemplateRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) TemplateRadarChartAxesRangeScalePtrOutput {
	return TemplateRadarChartAxesRangeScale(e).ToTemplateRadarChartAxesRangeScaleOutputWithContext(ctx).ToTemplateRadarChartAxesRangeScalePtrOutputWithContext(ctx)
}

func (e TemplateRadarChartAxesRangeScale) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateRadarChartAxesRangeScale) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateRadarChartAxesRangeScale) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateRadarChartAxesRangeScale) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateRadarChartAxesRangeScaleOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartAxesRangeScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartAxesRangeScale)(nil)).Elem()
}

func (o TemplateRadarChartAxesRangeScaleOutput) ToTemplateRadarChartAxesRangeScaleOutput() TemplateRadarChartAxesRangeScaleOutput {
	return o
}

func (o TemplateRadarChartAxesRangeScaleOutput) ToTemplateRadarChartAxesRangeScaleOutputWithContext(ctx context.Context) TemplateRadarChartAxesRangeScaleOutput {
	return o
}

func (o TemplateRadarChartAxesRangeScaleOutput) ToTemplateRadarChartAxesRangeScalePtrOutput() TemplateRadarChartAxesRangeScalePtrOutput {
	return o.ToTemplateRadarChartAxesRangeScalePtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartAxesRangeScaleOutput) ToTemplateRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) TemplateRadarChartAxesRangeScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRadarChartAxesRangeScale) *TemplateRadarChartAxesRangeScale {
		return &v
	}).(TemplateRadarChartAxesRangeScalePtrOutput)
}

func (o TemplateRadarChartAxesRangeScaleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateRadarChartAxesRangeScaleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateRadarChartAxesRangeScale) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateRadarChartAxesRangeScaleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartAxesRangeScaleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateRadarChartAxesRangeScale) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateRadarChartAxesRangeScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartAxesRangeScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartAxesRangeScale)(nil)).Elem()
}

func (o TemplateRadarChartAxesRangeScalePtrOutput) ToTemplateRadarChartAxesRangeScalePtrOutput() TemplateRadarChartAxesRangeScalePtrOutput {
	return o
}

func (o TemplateRadarChartAxesRangeScalePtrOutput) ToTemplateRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) TemplateRadarChartAxesRangeScalePtrOutput {
	return o
}

func (o TemplateRadarChartAxesRangeScalePtrOutput) Elem() TemplateRadarChartAxesRangeScaleOutput {
	return o.ApplyT(func(v *TemplateRadarChartAxesRangeScale) TemplateRadarChartAxesRangeScale {
		if v != nil {
			return *v
		}
		var ret TemplateRadarChartAxesRangeScale
		return ret
	}).(TemplateRadarChartAxesRangeScaleOutput)
}

func (o TemplateRadarChartAxesRangeScalePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartAxesRangeScalePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateRadarChartAxesRangeScale) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateRadarChartAxesRangeScaleInput is an input type that accepts values of the TemplateRadarChartAxesRangeScale enum
// A concrete instance of `TemplateRadarChartAxesRangeScaleInput` can be one of the following:
//
//	TemplateRadarChartAxesRangeScaleAuto
//	TemplateRadarChartAxesRangeScaleIndependent
//	TemplateRadarChartAxesRangeScaleShared
type TemplateRadarChartAxesRangeScaleInput interface {
	pulumi.Input

	ToTemplateRadarChartAxesRangeScaleOutput() TemplateRadarChartAxesRangeScaleOutput
	ToTemplateRadarChartAxesRangeScaleOutputWithContext(context.Context) TemplateRadarChartAxesRangeScaleOutput
}

var templateRadarChartAxesRangeScalePtrType = reflect.TypeOf((**TemplateRadarChartAxesRangeScale)(nil)).Elem()

type TemplateRadarChartAxesRangeScalePtrInput interface {
	pulumi.Input

	ToTemplateRadarChartAxesRangeScalePtrOutput() TemplateRadarChartAxesRangeScalePtrOutput
	ToTemplateRadarChartAxesRangeScalePtrOutputWithContext(context.Context) TemplateRadarChartAxesRangeScalePtrOutput
}

type templateRadarChartAxesRangeScalePtr string

func TemplateRadarChartAxesRangeScalePtr(v string) TemplateRadarChartAxesRangeScalePtrInput {
	return (*templateRadarChartAxesRangeScalePtr)(&v)
}

func (*templateRadarChartAxesRangeScalePtr) ElementType() reflect.Type {
	return templateRadarChartAxesRangeScalePtrType
}

func (in *templateRadarChartAxesRangeScalePtr) ToTemplateRadarChartAxesRangeScalePtrOutput() TemplateRadarChartAxesRangeScalePtrOutput {
	return pulumi.ToOutput(in).(TemplateRadarChartAxesRangeScalePtrOutput)
}

func (in *templateRadarChartAxesRangeScalePtr) ToTemplateRadarChartAxesRangeScalePtrOutputWithContext(ctx context.Context) TemplateRadarChartAxesRangeScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateRadarChartAxesRangeScalePtrOutput)
}

type TemplateRadarChartShape string

const (
	TemplateRadarChartShapeCircle  = TemplateRadarChartShape("CIRCLE")
	TemplateRadarChartShapePolygon = TemplateRadarChartShape("POLYGON")
)

func (TemplateRadarChartShape) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartShape)(nil)).Elem()
}

func (e TemplateRadarChartShape) ToTemplateRadarChartShapeOutput() TemplateRadarChartShapeOutput {
	return pulumi.ToOutput(e).(TemplateRadarChartShapeOutput)
}

func (e TemplateRadarChartShape) ToTemplateRadarChartShapeOutputWithContext(ctx context.Context) TemplateRadarChartShapeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateRadarChartShapeOutput)
}

func (e TemplateRadarChartShape) ToTemplateRadarChartShapePtrOutput() TemplateRadarChartShapePtrOutput {
	return e.ToTemplateRadarChartShapePtrOutputWithContext(context.Background())
}

func (e TemplateRadarChartShape) ToTemplateRadarChartShapePtrOutputWithContext(ctx context.Context) TemplateRadarChartShapePtrOutput {
	return TemplateRadarChartShape(e).ToTemplateRadarChartShapeOutputWithContext(ctx).ToTemplateRadarChartShapePtrOutputWithContext(ctx)
}

func (e TemplateRadarChartShape) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateRadarChartShape) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateRadarChartShape) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateRadarChartShape) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateRadarChartShapeOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartShape)(nil)).Elem()
}

func (o TemplateRadarChartShapeOutput) ToTemplateRadarChartShapeOutput() TemplateRadarChartShapeOutput {
	return o
}

func (o TemplateRadarChartShapeOutput) ToTemplateRadarChartShapeOutputWithContext(ctx context.Context) TemplateRadarChartShapeOutput {
	return o
}

func (o TemplateRadarChartShapeOutput) ToTemplateRadarChartShapePtrOutput() TemplateRadarChartShapePtrOutput {
	return o.ToTemplateRadarChartShapePtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartShapeOutput) ToTemplateRadarChartShapePtrOutputWithContext(ctx context.Context) TemplateRadarChartShapePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRadarChartShape) *TemplateRadarChartShape {
		return &v
	}).(TemplateRadarChartShapePtrOutput)
}

func (o TemplateRadarChartShapeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateRadarChartShapeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateRadarChartShape) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateRadarChartShapeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartShapeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateRadarChartShape) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateRadarChartShapePtrOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartShapePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartShape)(nil)).Elem()
}

func (o TemplateRadarChartShapePtrOutput) ToTemplateRadarChartShapePtrOutput() TemplateRadarChartShapePtrOutput {
	return o
}

func (o TemplateRadarChartShapePtrOutput) ToTemplateRadarChartShapePtrOutputWithContext(ctx context.Context) TemplateRadarChartShapePtrOutput {
	return o
}

func (o TemplateRadarChartShapePtrOutput) Elem() TemplateRadarChartShapeOutput {
	return o.ApplyT(func(v *TemplateRadarChartShape) TemplateRadarChartShape {
		if v != nil {
			return *v
		}
		var ret TemplateRadarChartShape
		return ret
	}).(TemplateRadarChartShapeOutput)
}

func (o TemplateRadarChartShapePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartShapePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateRadarChartShape) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateRadarChartShapeInput is an input type that accepts values of the TemplateRadarChartShape enum
// A concrete instance of `TemplateRadarChartShapeInput` can be one of the following:
//
//	TemplateRadarChartShapeCircle
//	TemplateRadarChartShapePolygon
type TemplateRadarChartShapeInput interface {
	pulumi.Input

	ToTemplateRadarChartShapeOutput() TemplateRadarChartShapeOutput
	ToTemplateRadarChartShapeOutputWithContext(context.Context) TemplateRadarChartShapeOutput
}

var templateRadarChartShapePtrType = reflect.TypeOf((**TemplateRadarChartShape)(nil)).Elem()

type TemplateRadarChartShapePtrInput interface {
	pulumi.Input

	ToTemplateRadarChartShapePtrOutput() TemplateRadarChartShapePtrOutput
	ToTemplateRadarChartShapePtrOutputWithContext(context.Context) TemplateRadarChartShapePtrOutput
}

type templateRadarChartShapePtr string

func TemplateRadarChartShapePtr(v string) TemplateRadarChartShapePtrInput {
	return (*templateRadarChartShapePtr)(&v)
}

func (*templateRadarChartShapePtr) ElementType() reflect.Type {
	return templateRadarChartShapePtrType
}

func (in *templateRadarChartShapePtr) ToTemplateRadarChartShapePtrOutput() TemplateRadarChartShapePtrOutput {
	return pulumi.ToOutput(in).(TemplateRadarChartShapePtrOutput)
}

func (in *templateRadarChartShapePtr) ToTemplateRadarChartShapePtrOutputWithContext(ctx context.Context) TemplateRadarChartShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateRadarChartShapePtrOutput)
}

type TemplateReferenceLineLabelHorizontalPosition string

const (
	TemplateReferenceLineLabelHorizontalPositionLeft   = TemplateReferenceLineLabelHorizontalPosition("LEFT")
	TemplateReferenceLineLabelHorizontalPositionCenter = TemplateReferenceLineLabelHorizontalPosition("CENTER")
	TemplateReferenceLineLabelHorizontalPositionRight  = TemplateReferenceLineLabelHorizontalPosition("RIGHT")
)

func (TemplateReferenceLineLabelHorizontalPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineLabelHorizontalPosition)(nil)).Elem()
}

func (e TemplateReferenceLineLabelHorizontalPosition) ToTemplateReferenceLineLabelHorizontalPositionOutput() TemplateReferenceLineLabelHorizontalPositionOutput {
	return pulumi.ToOutput(e).(TemplateReferenceLineLabelHorizontalPositionOutput)
}

func (e TemplateReferenceLineLabelHorizontalPosition) ToTemplateReferenceLineLabelHorizontalPositionOutputWithContext(ctx context.Context) TemplateReferenceLineLabelHorizontalPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateReferenceLineLabelHorizontalPositionOutput)
}

func (e TemplateReferenceLineLabelHorizontalPosition) ToTemplateReferenceLineLabelHorizontalPositionPtrOutput() TemplateReferenceLineLabelHorizontalPositionPtrOutput {
	return e.ToTemplateReferenceLineLabelHorizontalPositionPtrOutputWithContext(context.Background())
}

func (e TemplateReferenceLineLabelHorizontalPosition) ToTemplateReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelHorizontalPositionPtrOutput {
	return TemplateReferenceLineLabelHorizontalPosition(e).ToTemplateReferenceLineLabelHorizontalPositionOutputWithContext(ctx).ToTemplateReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx)
}

func (e TemplateReferenceLineLabelHorizontalPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateReferenceLineLabelHorizontalPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateReferenceLineLabelHorizontalPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateReferenceLineLabelHorizontalPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateReferenceLineLabelHorizontalPositionOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineLabelHorizontalPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineLabelHorizontalPosition)(nil)).Elem()
}

func (o TemplateReferenceLineLabelHorizontalPositionOutput) ToTemplateReferenceLineLabelHorizontalPositionOutput() TemplateReferenceLineLabelHorizontalPositionOutput {
	return o
}

func (o TemplateReferenceLineLabelHorizontalPositionOutput) ToTemplateReferenceLineLabelHorizontalPositionOutputWithContext(ctx context.Context) TemplateReferenceLineLabelHorizontalPositionOutput {
	return o
}

func (o TemplateReferenceLineLabelHorizontalPositionOutput) ToTemplateReferenceLineLabelHorizontalPositionPtrOutput() TemplateReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ToTemplateReferenceLineLabelHorizontalPositionPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineLabelHorizontalPositionOutput) ToTemplateReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLineLabelHorizontalPosition) *TemplateReferenceLineLabelHorizontalPosition {
		return &v
	}).(TemplateReferenceLineLabelHorizontalPositionPtrOutput)
}

func (o TemplateReferenceLineLabelHorizontalPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateReferenceLineLabelHorizontalPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateReferenceLineLabelHorizontalPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateReferenceLineLabelHorizontalPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineLabelHorizontalPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateReferenceLineLabelHorizontalPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateReferenceLineLabelHorizontalPositionPtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineLabelHorizontalPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineLabelHorizontalPosition)(nil)).Elem()
}

func (o TemplateReferenceLineLabelHorizontalPositionPtrOutput) ToTemplateReferenceLineLabelHorizontalPositionPtrOutput() TemplateReferenceLineLabelHorizontalPositionPtrOutput {
	return o
}

func (o TemplateReferenceLineLabelHorizontalPositionPtrOutput) ToTemplateReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelHorizontalPositionPtrOutput {
	return o
}

func (o TemplateReferenceLineLabelHorizontalPositionPtrOutput) Elem() TemplateReferenceLineLabelHorizontalPositionOutput {
	return o.ApplyT(func(v *TemplateReferenceLineLabelHorizontalPosition) TemplateReferenceLineLabelHorizontalPosition {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLineLabelHorizontalPosition
		return ret
	}).(TemplateReferenceLineLabelHorizontalPositionOutput)
}

func (o TemplateReferenceLineLabelHorizontalPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineLabelHorizontalPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateReferenceLineLabelHorizontalPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateReferenceLineLabelHorizontalPositionInput is an input type that accepts values of the TemplateReferenceLineLabelHorizontalPosition enum
// A concrete instance of `TemplateReferenceLineLabelHorizontalPositionInput` can be one of the following:
//
//	TemplateReferenceLineLabelHorizontalPositionLeft
//	TemplateReferenceLineLabelHorizontalPositionCenter
//	TemplateReferenceLineLabelHorizontalPositionRight
type TemplateReferenceLineLabelHorizontalPositionInput interface {
	pulumi.Input

	ToTemplateReferenceLineLabelHorizontalPositionOutput() TemplateReferenceLineLabelHorizontalPositionOutput
	ToTemplateReferenceLineLabelHorizontalPositionOutputWithContext(context.Context) TemplateReferenceLineLabelHorizontalPositionOutput
}

var templateReferenceLineLabelHorizontalPositionPtrType = reflect.TypeOf((**TemplateReferenceLineLabelHorizontalPosition)(nil)).Elem()

type TemplateReferenceLineLabelHorizontalPositionPtrInput interface {
	pulumi.Input

	ToTemplateReferenceLineLabelHorizontalPositionPtrOutput() TemplateReferenceLineLabelHorizontalPositionPtrOutput
	ToTemplateReferenceLineLabelHorizontalPositionPtrOutputWithContext(context.Context) TemplateReferenceLineLabelHorizontalPositionPtrOutput
}

type templateReferenceLineLabelHorizontalPositionPtr string

func TemplateReferenceLineLabelHorizontalPositionPtr(v string) TemplateReferenceLineLabelHorizontalPositionPtrInput {
	return (*templateReferenceLineLabelHorizontalPositionPtr)(&v)
}

func (*templateReferenceLineLabelHorizontalPositionPtr) ElementType() reflect.Type {
	return templateReferenceLineLabelHorizontalPositionPtrType
}

func (in *templateReferenceLineLabelHorizontalPositionPtr) ToTemplateReferenceLineLabelHorizontalPositionPtrOutput() TemplateReferenceLineLabelHorizontalPositionPtrOutput {
	return pulumi.ToOutput(in).(TemplateReferenceLineLabelHorizontalPositionPtrOutput)
}

func (in *templateReferenceLineLabelHorizontalPositionPtr) ToTemplateReferenceLineLabelHorizontalPositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelHorizontalPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateReferenceLineLabelHorizontalPositionPtrOutput)
}

type TemplateReferenceLineLabelVerticalPosition string

const (
	TemplateReferenceLineLabelVerticalPositionAbove = TemplateReferenceLineLabelVerticalPosition("ABOVE")
	TemplateReferenceLineLabelVerticalPositionBelow = TemplateReferenceLineLabelVerticalPosition("BELOW")
)

func (TemplateReferenceLineLabelVerticalPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineLabelVerticalPosition)(nil)).Elem()
}

func (e TemplateReferenceLineLabelVerticalPosition) ToTemplateReferenceLineLabelVerticalPositionOutput() TemplateReferenceLineLabelVerticalPositionOutput {
	return pulumi.ToOutput(e).(TemplateReferenceLineLabelVerticalPositionOutput)
}

func (e TemplateReferenceLineLabelVerticalPosition) ToTemplateReferenceLineLabelVerticalPositionOutputWithContext(ctx context.Context) TemplateReferenceLineLabelVerticalPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateReferenceLineLabelVerticalPositionOutput)
}

func (e TemplateReferenceLineLabelVerticalPosition) ToTemplateReferenceLineLabelVerticalPositionPtrOutput() TemplateReferenceLineLabelVerticalPositionPtrOutput {
	return e.ToTemplateReferenceLineLabelVerticalPositionPtrOutputWithContext(context.Background())
}

func (e TemplateReferenceLineLabelVerticalPosition) ToTemplateReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelVerticalPositionPtrOutput {
	return TemplateReferenceLineLabelVerticalPosition(e).ToTemplateReferenceLineLabelVerticalPositionOutputWithContext(ctx).ToTemplateReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx)
}

func (e TemplateReferenceLineLabelVerticalPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateReferenceLineLabelVerticalPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateReferenceLineLabelVerticalPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateReferenceLineLabelVerticalPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateReferenceLineLabelVerticalPositionOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineLabelVerticalPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineLabelVerticalPosition)(nil)).Elem()
}

func (o TemplateReferenceLineLabelVerticalPositionOutput) ToTemplateReferenceLineLabelVerticalPositionOutput() TemplateReferenceLineLabelVerticalPositionOutput {
	return o
}

func (o TemplateReferenceLineLabelVerticalPositionOutput) ToTemplateReferenceLineLabelVerticalPositionOutputWithContext(ctx context.Context) TemplateReferenceLineLabelVerticalPositionOutput {
	return o
}

func (o TemplateReferenceLineLabelVerticalPositionOutput) ToTemplateReferenceLineLabelVerticalPositionPtrOutput() TemplateReferenceLineLabelVerticalPositionPtrOutput {
	return o.ToTemplateReferenceLineLabelVerticalPositionPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineLabelVerticalPositionOutput) ToTemplateReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelVerticalPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLineLabelVerticalPosition) *TemplateReferenceLineLabelVerticalPosition {
		return &v
	}).(TemplateReferenceLineLabelVerticalPositionPtrOutput)
}

func (o TemplateReferenceLineLabelVerticalPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateReferenceLineLabelVerticalPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateReferenceLineLabelVerticalPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateReferenceLineLabelVerticalPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineLabelVerticalPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateReferenceLineLabelVerticalPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateReferenceLineLabelVerticalPositionPtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineLabelVerticalPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineLabelVerticalPosition)(nil)).Elem()
}

func (o TemplateReferenceLineLabelVerticalPositionPtrOutput) ToTemplateReferenceLineLabelVerticalPositionPtrOutput() TemplateReferenceLineLabelVerticalPositionPtrOutput {
	return o
}

func (o TemplateReferenceLineLabelVerticalPositionPtrOutput) ToTemplateReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelVerticalPositionPtrOutput {
	return o
}

func (o TemplateReferenceLineLabelVerticalPositionPtrOutput) Elem() TemplateReferenceLineLabelVerticalPositionOutput {
	return o.ApplyT(func(v *TemplateReferenceLineLabelVerticalPosition) TemplateReferenceLineLabelVerticalPosition {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLineLabelVerticalPosition
		return ret
	}).(TemplateReferenceLineLabelVerticalPositionOutput)
}

func (o TemplateReferenceLineLabelVerticalPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineLabelVerticalPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateReferenceLineLabelVerticalPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateReferenceLineLabelVerticalPositionInput is an input type that accepts values of the TemplateReferenceLineLabelVerticalPosition enum
// A concrete instance of `TemplateReferenceLineLabelVerticalPositionInput` can be one of the following:
//
//	TemplateReferenceLineLabelVerticalPositionAbove
//	TemplateReferenceLineLabelVerticalPositionBelow
type TemplateReferenceLineLabelVerticalPositionInput interface {
	pulumi.Input

	ToTemplateReferenceLineLabelVerticalPositionOutput() TemplateReferenceLineLabelVerticalPositionOutput
	ToTemplateReferenceLineLabelVerticalPositionOutputWithContext(context.Context) TemplateReferenceLineLabelVerticalPositionOutput
}

var templateReferenceLineLabelVerticalPositionPtrType = reflect.TypeOf((**TemplateReferenceLineLabelVerticalPosition)(nil)).Elem()

type TemplateReferenceLineLabelVerticalPositionPtrInput interface {
	pulumi.Input

	ToTemplateReferenceLineLabelVerticalPositionPtrOutput() TemplateReferenceLineLabelVerticalPositionPtrOutput
	ToTemplateReferenceLineLabelVerticalPositionPtrOutputWithContext(context.Context) TemplateReferenceLineLabelVerticalPositionPtrOutput
}

type templateReferenceLineLabelVerticalPositionPtr string

func TemplateReferenceLineLabelVerticalPositionPtr(v string) TemplateReferenceLineLabelVerticalPositionPtrInput {
	return (*templateReferenceLineLabelVerticalPositionPtr)(&v)
}

func (*templateReferenceLineLabelVerticalPositionPtr) ElementType() reflect.Type {
	return templateReferenceLineLabelVerticalPositionPtrType
}

func (in *templateReferenceLineLabelVerticalPositionPtr) ToTemplateReferenceLineLabelVerticalPositionPtrOutput() TemplateReferenceLineLabelVerticalPositionPtrOutput {
	return pulumi.ToOutput(in).(TemplateReferenceLineLabelVerticalPositionPtrOutput)
}

func (in *templateReferenceLineLabelVerticalPositionPtr) ToTemplateReferenceLineLabelVerticalPositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelVerticalPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateReferenceLineLabelVerticalPositionPtrOutput)
}

type TemplateReferenceLinePatternType string

const (
	TemplateReferenceLinePatternTypeSolid  = TemplateReferenceLinePatternType("SOLID")
	TemplateReferenceLinePatternTypeDashed = TemplateReferenceLinePatternType("DASHED")
	TemplateReferenceLinePatternTypeDotted = TemplateReferenceLinePatternType("DOTTED")
)

func (TemplateReferenceLinePatternType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLinePatternType)(nil)).Elem()
}

func (e TemplateReferenceLinePatternType) ToTemplateReferenceLinePatternTypeOutput() TemplateReferenceLinePatternTypeOutput {
	return pulumi.ToOutput(e).(TemplateReferenceLinePatternTypeOutput)
}

func (e TemplateReferenceLinePatternType) ToTemplateReferenceLinePatternTypeOutputWithContext(ctx context.Context) TemplateReferenceLinePatternTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateReferenceLinePatternTypeOutput)
}

func (e TemplateReferenceLinePatternType) ToTemplateReferenceLinePatternTypePtrOutput() TemplateReferenceLinePatternTypePtrOutput {
	return e.ToTemplateReferenceLinePatternTypePtrOutputWithContext(context.Background())
}

func (e TemplateReferenceLinePatternType) ToTemplateReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) TemplateReferenceLinePatternTypePtrOutput {
	return TemplateReferenceLinePatternType(e).ToTemplateReferenceLinePatternTypeOutputWithContext(ctx).ToTemplateReferenceLinePatternTypePtrOutputWithContext(ctx)
}

func (e TemplateReferenceLinePatternType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateReferenceLinePatternType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateReferenceLinePatternType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateReferenceLinePatternType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateReferenceLinePatternTypeOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLinePatternTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLinePatternType)(nil)).Elem()
}

func (o TemplateReferenceLinePatternTypeOutput) ToTemplateReferenceLinePatternTypeOutput() TemplateReferenceLinePatternTypeOutput {
	return o
}

func (o TemplateReferenceLinePatternTypeOutput) ToTemplateReferenceLinePatternTypeOutputWithContext(ctx context.Context) TemplateReferenceLinePatternTypeOutput {
	return o
}

func (o TemplateReferenceLinePatternTypeOutput) ToTemplateReferenceLinePatternTypePtrOutput() TemplateReferenceLinePatternTypePtrOutput {
	return o.ToTemplateReferenceLinePatternTypePtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLinePatternTypeOutput) ToTemplateReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) TemplateReferenceLinePatternTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLinePatternType) *TemplateReferenceLinePatternType {
		return &v
	}).(TemplateReferenceLinePatternTypePtrOutput)
}

func (o TemplateReferenceLinePatternTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateReferenceLinePatternTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateReferenceLinePatternType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateReferenceLinePatternTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLinePatternTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateReferenceLinePatternType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateReferenceLinePatternTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLinePatternTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLinePatternType)(nil)).Elem()
}

func (o TemplateReferenceLinePatternTypePtrOutput) ToTemplateReferenceLinePatternTypePtrOutput() TemplateReferenceLinePatternTypePtrOutput {
	return o
}

func (o TemplateReferenceLinePatternTypePtrOutput) ToTemplateReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) TemplateReferenceLinePatternTypePtrOutput {
	return o
}

func (o TemplateReferenceLinePatternTypePtrOutput) Elem() TemplateReferenceLinePatternTypeOutput {
	return o.ApplyT(func(v *TemplateReferenceLinePatternType) TemplateReferenceLinePatternType {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLinePatternType
		return ret
	}).(TemplateReferenceLinePatternTypeOutput)
}

func (o TemplateReferenceLinePatternTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLinePatternTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateReferenceLinePatternType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateReferenceLinePatternTypeInput is an input type that accepts values of the TemplateReferenceLinePatternType enum
// A concrete instance of `TemplateReferenceLinePatternTypeInput` can be one of the following:
//
//	TemplateReferenceLinePatternTypeSolid
//	TemplateReferenceLinePatternTypeDashed
//	TemplateReferenceLinePatternTypeDotted
type TemplateReferenceLinePatternTypeInput interface {
	pulumi.Input

	ToTemplateReferenceLinePatternTypeOutput() TemplateReferenceLinePatternTypeOutput
	ToTemplateReferenceLinePatternTypeOutputWithContext(context.Context) TemplateReferenceLinePatternTypeOutput
}

var templateReferenceLinePatternTypePtrType = reflect.TypeOf((**TemplateReferenceLinePatternType)(nil)).Elem()

type TemplateReferenceLinePatternTypePtrInput interface {
	pulumi.Input

	ToTemplateReferenceLinePatternTypePtrOutput() TemplateReferenceLinePatternTypePtrOutput
	ToTemplateReferenceLinePatternTypePtrOutputWithContext(context.Context) TemplateReferenceLinePatternTypePtrOutput
}

type templateReferenceLinePatternTypePtr string

func TemplateReferenceLinePatternTypePtr(v string) TemplateReferenceLinePatternTypePtrInput {
	return (*templateReferenceLinePatternTypePtr)(&v)
}

func (*templateReferenceLinePatternTypePtr) ElementType() reflect.Type {
	return templateReferenceLinePatternTypePtrType
}

func (in *templateReferenceLinePatternTypePtr) ToTemplateReferenceLinePatternTypePtrOutput() TemplateReferenceLinePatternTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateReferenceLinePatternTypePtrOutput)
}

func (in *templateReferenceLinePatternTypePtr) ToTemplateReferenceLinePatternTypePtrOutputWithContext(ctx context.Context) TemplateReferenceLinePatternTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateReferenceLinePatternTypePtrOutput)
}

type TemplateReferenceLineSeriesType string

const (
	TemplateReferenceLineSeriesTypeBar  = TemplateReferenceLineSeriesType("BAR")
	TemplateReferenceLineSeriesTypeLine = TemplateReferenceLineSeriesType("LINE")
)

func (TemplateReferenceLineSeriesType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineSeriesType)(nil)).Elem()
}

func (e TemplateReferenceLineSeriesType) ToTemplateReferenceLineSeriesTypeOutput() TemplateReferenceLineSeriesTypeOutput {
	return pulumi.ToOutput(e).(TemplateReferenceLineSeriesTypeOutput)
}

func (e TemplateReferenceLineSeriesType) ToTemplateReferenceLineSeriesTypeOutputWithContext(ctx context.Context) TemplateReferenceLineSeriesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateReferenceLineSeriesTypeOutput)
}

func (e TemplateReferenceLineSeriesType) ToTemplateReferenceLineSeriesTypePtrOutput() TemplateReferenceLineSeriesTypePtrOutput {
	return e.ToTemplateReferenceLineSeriesTypePtrOutputWithContext(context.Background())
}

func (e TemplateReferenceLineSeriesType) ToTemplateReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) TemplateReferenceLineSeriesTypePtrOutput {
	return TemplateReferenceLineSeriesType(e).ToTemplateReferenceLineSeriesTypeOutputWithContext(ctx).ToTemplateReferenceLineSeriesTypePtrOutputWithContext(ctx)
}

func (e TemplateReferenceLineSeriesType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateReferenceLineSeriesType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateReferenceLineSeriesType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateReferenceLineSeriesType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateReferenceLineSeriesTypeOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineSeriesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineSeriesType)(nil)).Elem()
}

func (o TemplateReferenceLineSeriesTypeOutput) ToTemplateReferenceLineSeriesTypeOutput() TemplateReferenceLineSeriesTypeOutput {
	return o
}

func (o TemplateReferenceLineSeriesTypeOutput) ToTemplateReferenceLineSeriesTypeOutputWithContext(ctx context.Context) TemplateReferenceLineSeriesTypeOutput {
	return o
}

func (o TemplateReferenceLineSeriesTypeOutput) ToTemplateReferenceLineSeriesTypePtrOutput() TemplateReferenceLineSeriesTypePtrOutput {
	return o.ToTemplateReferenceLineSeriesTypePtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineSeriesTypeOutput) ToTemplateReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) TemplateReferenceLineSeriesTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLineSeriesType) *TemplateReferenceLineSeriesType {
		return &v
	}).(TemplateReferenceLineSeriesTypePtrOutput)
}

func (o TemplateReferenceLineSeriesTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateReferenceLineSeriesTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateReferenceLineSeriesType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateReferenceLineSeriesTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineSeriesTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateReferenceLineSeriesType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateReferenceLineSeriesTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineSeriesTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineSeriesType)(nil)).Elem()
}

func (o TemplateReferenceLineSeriesTypePtrOutput) ToTemplateReferenceLineSeriesTypePtrOutput() TemplateReferenceLineSeriesTypePtrOutput {
	return o
}

func (o TemplateReferenceLineSeriesTypePtrOutput) ToTemplateReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) TemplateReferenceLineSeriesTypePtrOutput {
	return o
}

func (o TemplateReferenceLineSeriesTypePtrOutput) Elem() TemplateReferenceLineSeriesTypeOutput {
	return o.ApplyT(func(v *TemplateReferenceLineSeriesType) TemplateReferenceLineSeriesType {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLineSeriesType
		return ret
	}).(TemplateReferenceLineSeriesTypeOutput)
}

func (o TemplateReferenceLineSeriesTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineSeriesTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateReferenceLineSeriesType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateReferenceLineSeriesTypeInput is an input type that accepts values of the TemplateReferenceLineSeriesType enum
// A concrete instance of `TemplateReferenceLineSeriesTypeInput` can be one of the following:
//
//	TemplateReferenceLineSeriesTypeBar
//	TemplateReferenceLineSeriesTypeLine
type TemplateReferenceLineSeriesTypeInput interface {
	pulumi.Input

	ToTemplateReferenceLineSeriesTypeOutput() TemplateReferenceLineSeriesTypeOutput
	ToTemplateReferenceLineSeriesTypeOutputWithContext(context.Context) TemplateReferenceLineSeriesTypeOutput
}

var templateReferenceLineSeriesTypePtrType = reflect.TypeOf((**TemplateReferenceLineSeriesType)(nil)).Elem()

type TemplateReferenceLineSeriesTypePtrInput interface {
	pulumi.Input

	ToTemplateReferenceLineSeriesTypePtrOutput() TemplateReferenceLineSeriesTypePtrOutput
	ToTemplateReferenceLineSeriesTypePtrOutputWithContext(context.Context) TemplateReferenceLineSeriesTypePtrOutput
}

type templateReferenceLineSeriesTypePtr string

func TemplateReferenceLineSeriesTypePtr(v string) TemplateReferenceLineSeriesTypePtrInput {
	return (*templateReferenceLineSeriesTypePtr)(&v)
}

func (*templateReferenceLineSeriesTypePtr) ElementType() reflect.Type {
	return templateReferenceLineSeriesTypePtrType
}

func (in *templateReferenceLineSeriesTypePtr) ToTemplateReferenceLineSeriesTypePtrOutput() TemplateReferenceLineSeriesTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateReferenceLineSeriesTypePtrOutput)
}

func (in *templateReferenceLineSeriesTypePtr) ToTemplateReferenceLineSeriesTypePtrOutputWithContext(ctx context.Context) TemplateReferenceLineSeriesTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateReferenceLineSeriesTypePtrOutput)
}

type TemplateReferenceLineValueLabelRelativePosition string

const (
	TemplateReferenceLineValueLabelRelativePositionBeforeCustomLabel = TemplateReferenceLineValueLabelRelativePosition("BEFORE_CUSTOM_LABEL")
	TemplateReferenceLineValueLabelRelativePositionAfterCustomLabel  = TemplateReferenceLineValueLabelRelativePosition("AFTER_CUSTOM_LABEL")
)

func (TemplateReferenceLineValueLabelRelativePosition) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineValueLabelRelativePosition)(nil)).Elem()
}

func (e TemplateReferenceLineValueLabelRelativePosition) ToTemplateReferenceLineValueLabelRelativePositionOutput() TemplateReferenceLineValueLabelRelativePositionOutput {
	return pulumi.ToOutput(e).(TemplateReferenceLineValueLabelRelativePositionOutput)
}

func (e TemplateReferenceLineValueLabelRelativePosition) ToTemplateReferenceLineValueLabelRelativePositionOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelRelativePositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateReferenceLineValueLabelRelativePositionOutput)
}

func (e TemplateReferenceLineValueLabelRelativePosition) ToTemplateReferenceLineValueLabelRelativePositionPtrOutput() TemplateReferenceLineValueLabelRelativePositionPtrOutput {
	return e.ToTemplateReferenceLineValueLabelRelativePositionPtrOutputWithContext(context.Background())
}

func (e TemplateReferenceLineValueLabelRelativePosition) ToTemplateReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelRelativePositionPtrOutput {
	return TemplateReferenceLineValueLabelRelativePosition(e).ToTemplateReferenceLineValueLabelRelativePositionOutputWithContext(ctx).ToTemplateReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx)
}

func (e TemplateReferenceLineValueLabelRelativePosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateReferenceLineValueLabelRelativePosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateReferenceLineValueLabelRelativePosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateReferenceLineValueLabelRelativePosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateReferenceLineValueLabelRelativePositionOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineValueLabelRelativePositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineValueLabelRelativePosition)(nil)).Elem()
}

func (o TemplateReferenceLineValueLabelRelativePositionOutput) ToTemplateReferenceLineValueLabelRelativePositionOutput() TemplateReferenceLineValueLabelRelativePositionOutput {
	return o
}

func (o TemplateReferenceLineValueLabelRelativePositionOutput) ToTemplateReferenceLineValueLabelRelativePositionOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelRelativePositionOutput {
	return o
}

func (o TemplateReferenceLineValueLabelRelativePositionOutput) ToTemplateReferenceLineValueLabelRelativePositionPtrOutput() TemplateReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ToTemplateReferenceLineValueLabelRelativePositionPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineValueLabelRelativePositionOutput) ToTemplateReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLineValueLabelRelativePosition) *TemplateReferenceLineValueLabelRelativePosition {
		return &v
	}).(TemplateReferenceLineValueLabelRelativePositionPtrOutput)
}

func (o TemplateReferenceLineValueLabelRelativePositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateReferenceLineValueLabelRelativePositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateReferenceLineValueLabelRelativePosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateReferenceLineValueLabelRelativePositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineValueLabelRelativePositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateReferenceLineValueLabelRelativePosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateReferenceLineValueLabelRelativePositionPtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineValueLabelRelativePositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineValueLabelRelativePosition)(nil)).Elem()
}

func (o TemplateReferenceLineValueLabelRelativePositionPtrOutput) ToTemplateReferenceLineValueLabelRelativePositionPtrOutput() TemplateReferenceLineValueLabelRelativePositionPtrOutput {
	return o
}

func (o TemplateReferenceLineValueLabelRelativePositionPtrOutput) ToTemplateReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelRelativePositionPtrOutput {
	return o
}

func (o TemplateReferenceLineValueLabelRelativePositionPtrOutput) Elem() TemplateReferenceLineValueLabelRelativePositionOutput {
	return o.ApplyT(func(v *TemplateReferenceLineValueLabelRelativePosition) TemplateReferenceLineValueLabelRelativePosition {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLineValueLabelRelativePosition
		return ret
	}).(TemplateReferenceLineValueLabelRelativePositionOutput)
}

func (o TemplateReferenceLineValueLabelRelativePositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineValueLabelRelativePositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateReferenceLineValueLabelRelativePosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateReferenceLineValueLabelRelativePositionInput is an input type that accepts values of the TemplateReferenceLineValueLabelRelativePosition enum
// A concrete instance of `TemplateReferenceLineValueLabelRelativePositionInput` can be one of the following:
//
//	TemplateReferenceLineValueLabelRelativePositionBeforeCustomLabel
//	TemplateReferenceLineValueLabelRelativePositionAfterCustomLabel
type TemplateReferenceLineValueLabelRelativePositionInput interface {
	pulumi.Input

	ToTemplateReferenceLineValueLabelRelativePositionOutput() TemplateReferenceLineValueLabelRelativePositionOutput
	ToTemplateReferenceLineValueLabelRelativePositionOutputWithContext(context.Context) TemplateReferenceLineValueLabelRelativePositionOutput
}

var templateReferenceLineValueLabelRelativePositionPtrType = reflect.TypeOf((**TemplateReferenceLineValueLabelRelativePosition)(nil)).Elem()

type TemplateReferenceLineValueLabelRelativePositionPtrInput interface {
	pulumi.Input

	ToTemplateReferenceLineValueLabelRelativePositionPtrOutput() TemplateReferenceLineValueLabelRelativePositionPtrOutput
	ToTemplateReferenceLineValueLabelRelativePositionPtrOutputWithContext(context.Context) TemplateReferenceLineValueLabelRelativePositionPtrOutput
}

type templateReferenceLineValueLabelRelativePositionPtr string

func TemplateReferenceLineValueLabelRelativePositionPtr(v string) TemplateReferenceLineValueLabelRelativePositionPtrInput {
	return (*templateReferenceLineValueLabelRelativePositionPtr)(&v)
}

func (*templateReferenceLineValueLabelRelativePositionPtr) ElementType() reflect.Type {
	return templateReferenceLineValueLabelRelativePositionPtrType
}

func (in *templateReferenceLineValueLabelRelativePositionPtr) ToTemplateReferenceLineValueLabelRelativePositionPtrOutput() TemplateReferenceLineValueLabelRelativePositionPtrOutput {
	return pulumi.ToOutput(in).(TemplateReferenceLineValueLabelRelativePositionPtrOutput)
}

func (in *templateReferenceLineValueLabelRelativePositionPtr) ToTemplateReferenceLineValueLabelRelativePositionPtrOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelRelativePositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateReferenceLineValueLabelRelativePositionPtrOutput)
}

type TemplateRelativeDateType string

const (
	TemplateRelativeDateTypePrevious = TemplateRelativeDateType("PREVIOUS")
	TemplateRelativeDateTypeThis     = TemplateRelativeDateType("THIS")
	TemplateRelativeDateTypeLast     = TemplateRelativeDateType("LAST")
	TemplateRelativeDateTypeNow      = TemplateRelativeDateType("NOW")
	TemplateRelativeDateTypeNext     = TemplateRelativeDateType("NEXT")
)

func (TemplateRelativeDateType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRelativeDateType)(nil)).Elem()
}

func (e TemplateRelativeDateType) ToTemplateRelativeDateTypeOutput() TemplateRelativeDateTypeOutput {
	return pulumi.ToOutput(e).(TemplateRelativeDateTypeOutput)
}

func (e TemplateRelativeDateType) ToTemplateRelativeDateTypeOutputWithContext(ctx context.Context) TemplateRelativeDateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateRelativeDateTypeOutput)
}

func (e TemplateRelativeDateType) ToTemplateRelativeDateTypePtrOutput() TemplateRelativeDateTypePtrOutput {
	return e.ToTemplateRelativeDateTypePtrOutputWithContext(context.Background())
}

func (e TemplateRelativeDateType) ToTemplateRelativeDateTypePtrOutputWithContext(ctx context.Context) TemplateRelativeDateTypePtrOutput {
	return TemplateRelativeDateType(e).ToTemplateRelativeDateTypeOutputWithContext(ctx).ToTemplateRelativeDateTypePtrOutputWithContext(ctx)
}

func (e TemplateRelativeDateType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateRelativeDateType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateRelativeDateType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateRelativeDateType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateRelativeDateTypeOutput struct{ *pulumi.OutputState }

func (TemplateRelativeDateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRelativeDateType)(nil)).Elem()
}

func (o TemplateRelativeDateTypeOutput) ToTemplateRelativeDateTypeOutput() TemplateRelativeDateTypeOutput {
	return o
}

func (o TemplateRelativeDateTypeOutput) ToTemplateRelativeDateTypeOutputWithContext(ctx context.Context) TemplateRelativeDateTypeOutput {
	return o
}

func (o TemplateRelativeDateTypeOutput) ToTemplateRelativeDateTypePtrOutput() TemplateRelativeDateTypePtrOutput {
	return o.ToTemplateRelativeDateTypePtrOutputWithContext(context.Background())
}

func (o TemplateRelativeDateTypeOutput) ToTemplateRelativeDateTypePtrOutputWithContext(ctx context.Context) TemplateRelativeDateTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRelativeDateType) *TemplateRelativeDateType {
		return &v
	}).(TemplateRelativeDateTypePtrOutput)
}

func (o TemplateRelativeDateTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateRelativeDateTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateRelativeDateType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateRelativeDateTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateRelativeDateTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateRelativeDateType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateRelativeDateTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateRelativeDateTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRelativeDateType)(nil)).Elem()
}

func (o TemplateRelativeDateTypePtrOutput) ToTemplateRelativeDateTypePtrOutput() TemplateRelativeDateTypePtrOutput {
	return o
}

func (o TemplateRelativeDateTypePtrOutput) ToTemplateRelativeDateTypePtrOutputWithContext(ctx context.Context) TemplateRelativeDateTypePtrOutput {
	return o
}

func (o TemplateRelativeDateTypePtrOutput) Elem() TemplateRelativeDateTypeOutput {
	return o.ApplyT(func(v *TemplateRelativeDateType) TemplateRelativeDateType {
		if v != nil {
			return *v
		}
		var ret TemplateRelativeDateType
		return ret
	}).(TemplateRelativeDateTypeOutput)
}

func (o TemplateRelativeDateTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateRelativeDateTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateRelativeDateType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateRelativeDateTypeInput is an input type that accepts values of the TemplateRelativeDateType enum
// A concrete instance of `TemplateRelativeDateTypeInput` can be one of the following:
//
//	TemplateRelativeDateTypePrevious
//	TemplateRelativeDateTypeThis
//	TemplateRelativeDateTypeLast
//	TemplateRelativeDateTypeNow
//	TemplateRelativeDateTypeNext
type TemplateRelativeDateTypeInput interface {
	pulumi.Input

	ToTemplateRelativeDateTypeOutput() TemplateRelativeDateTypeOutput
	ToTemplateRelativeDateTypeOutputWithContext(context.Context) TemplateRelativeDateTypeOutput
}

var templateRelativeDateTypePtrType = reflect.TypeOf((**TemplateRelativeDateType)(nil)).Elem()

type TemplateRelativeDateTypePtrInput interface {
	pulumi.Input

	ToTemplateRelativeDateTypePtrOutput() TemplateRelativeDateTypePtrOutput
	ToTemplateRelativeDateTypePtrOutputWithContext(context.Context) TemplateRelativeDateTypePtrOutput
}

type templateRelativeDateTypePtr string

func TemplateRelativeDateTypePtr(v string) TemplateRelativeDateTypePtrInput {
	return (*templateRelativeDateTypePtr)(&v)
}

func (*templateRelativeDateTypePtr) ElementType() reflect.Type {
	return templateRelativeDateTypePtrType
}

func (in *templateRelativeDateTypePtr) ToTemplateRelativeDateTypePtrOutput() TemplateRelativeDateTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateRelativeDateTypePtrOutput)
}

func (in *templateRelativeDateTypePtr) ToTemplateRelativeDateTypePtrOutputWithContext(ctx context.Context) TemplateRelativeDateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateRelativeDateTypePtrOutput)
}

type TemplateRelativeFontSize string

const (
	TemplateRelativeFontSizeExtraSmall = TemplateRelativeFontSize("EXTRA_SMALL")
	TemplateRelativeFontSizeSmall      = TemplateRelativeFontSize("SMALL")
	TemplateRelativeFontSizeMedium     = TemplateRelativeFontSize("MEDIUM")
	TemplateRelativeFontSizeLarge      = TemplateRelativeFontSize("LARGE")
	TemplateRelativeFontSizeExtraLarge = TemplateRelativeFontSize("EXTRA_LARGE")
)

func (TemplateRelativeFontSize) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRelativeFontSize)(nil)).Elem()
}

func (e TemplateRelativeFontSize) ToTemplateRelativeFontSizeOutput() TemplateRelativeFontSizeOutput {
	return pulumi.ToOutput(e).(TemplateRelativeFontSizeOutput)
}

func (e TemplateRelativeFontSize) ToTemplateRelativeFontSizeOutputWithContext(ctx context.Context) TemplateRelativeFontSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateRelativeFontSizeOutput)
}

func (e TemplateRelativeFontSize) ToTemplateRelativeFontSizePtrOutput() TemplateRelativeFontSizePtrOutput {
	return e.ToTemplateRelativeFontSizePtrOutputWithContext(context.Background())
}

func (e TemplateRelativeFontSize) ToTemplateRelativeFontSizePtrOutputWithContext(ctx context.Context) TemplateRelativeFontSizePtrOutput {
	return TemplateRelativeFontSize(e).ToTemplateRelativeFontSizeOutputWithContext(ctx).ToTemplateRelativeFontSizePtrOutputWithContext(ctx)
}

func (e TemplateRelativeFontSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateRelativeFontSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateRelativeFontSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateRelativeFontSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateRelativeFontSizeOutput struct{ *pulumi.OutputState }

func (TemplateRelativeFontSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRelativeFontSize)(nil)).Elem()
}

func (o TemplateRelativeFontSizeOutput) ToTemplateRelativeFontSizeOutput() TemplateRelativeFontSizeOutput {
	return o
}

func (o TemplateRelativeFontSizeOutput) ToTemplateRelativeFontSizeOutputWithContext(ctx context.Context) TemplateRelativeFontSizeOutput {
	return o
}

func (o TemplateRelativeFontSizeOutput) ToTemplateRelativeFontSizePtrOutput() TemplateRelativeFontSizePtrOutput {
	return o.ToTemplateRelativeFontSizePtrOutputWithContext(context.Background())
}

func (o TemplateRelativeFontSizeOutput) ToTemplateRelativeFontSizePtrOutputWithContext(ctx context.Context) TemplateRelativeFontSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRelativeFontSize) *TemplateRelativeFontSize {
		return &v
	}).(TemplateRelativeFontSizePtrOutput)
}

func (o TemplateRelativeFontSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateRelativeFontSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateRelativeFontSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateRelativeFontSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateRelativeFontSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateRelativeFontSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateRelativeFontSizePtrOutput struct{ *pulumi.OutputState }

func (TemplateRelativeFontSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRelativeFontSize)(nil)).Elem()
}

func (o TemplateRelativeFontSizePtrOutput) ToTemplateRelativeFontSizePtrOutput() TemplateRelativeFontSizePtrOutput {
	return o
}

func (o TemplateRelativeFontSizePtrOutput) ToTemplateRelativeFontSizePtrOutputWithContext(ctx context.Context) TemplateRelativeFontSizePtrOutput {
	return o
}

func (o TemplateRelativeFontSizePtrOutput) Elem() TemplateRelativeFontSizeOutput {
	return o.ApplyT(func(v *TemplateRelativeFontSize) TemplateRelativeFontSize {
		if v != nil {
			return *v
		}
		var ret TemplateRelativeFontSize
		return ret
	}).(TemplateRelativeFontSizeOutput)
}

func (o TemplateRelativeFontSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateRelativeFontSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateRelativeFontSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateRelativeFontSizeInput is an input type that accepts values of the TemplateRelativeFontSize enum
// A concrete instance of `TemplateRelativeFontSizeInput` can be one of the following:
//
//	TemplateRelativeFontSizeExtraSmall
//	TemplateRelativeFontSizeSmall
//	TemplateRelativeFontSizeMedium
//	TemplateRelativeFontSizeLarge
//	TemplateRelativeFontSizeExtraLarge
type TemplateRelativeFontSizeInput interface {
	pulumi.Input

	ToTemplateRelativeFontSizeOutput() TemplateRelativeFontSizeOutput
	ToTemplateRelativeFontSizeOutputWithContext(context.Context) TemplateRelativeFontSizeOutput
}

var templateRelativeFontSizePtrType = reflect.TypeOf((**TemplateRelativeFontSize)(nil)).Elem()

type TemplateRelativeFontSizePtrInput interface {
	pulumi.Input

	ToTemplateRelativeFontSizePtrOutput() TemplateRelativeFontSizePtrOutput
	ToTemplateRelativeFontSizePtrOutputWithContext(context.Context) TemplateRelativeFontSizePtrOutput
}

type templateRelativeFontSizePtr string

func TemplateRelativeFontSizePtr(v string) TemplateRelativeFontSizePtrInput {
	return (*templateRelativeFontSizePtr)(&v)
}

func (*templateRelativeFontSizePtr) ElementType() reflect.Type {
	return templateRelativeFontSizePtrType
}

func (in *templateRelativeFontSizePtr) ToTemplateRelativeFontSizePtrOutput() TemplateRelativeFontSizePtrOutput {
	return pulumi.ToOutput(in).(TemplateRelativeFontSizePtrOutput)
}

func (in *templateRelativeFontSizePtr) ToTemplateRelativeFontSizePtrOutputWithContext(ctx context.Context) TemplateRelativeFontSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateRelativeFontSizePtrOutput)
}

type TemplateResizeOption string

const (
	TemplateResizeOptionFixed      = TemplateResizeOption("FIXED")
	TemplateResizeOptionResponsive = TemplateResizeOption("RESPONSIVE")
)

func (TemplateResizeOption) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResizeOption)(nil)).Elem()
}

func (e TemplateResizeOption) ToTemplateResizeOptionOutput() TemplateResizeOptionOutput {
	return pulumi.ToOutput(e).(TemplateResizeOptionOutput)
}

func (e TemplateResizeOption) ToTemplateResizeOptionOutputWithContext(ctx context.Context) TemplateResizeOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateResizeOptionOutput)
}

func (e TemplateResizeOption) ToTemplateResizeOptionPtrOutput() TemplateResizeOptionPtrOutput {
	return e.ToTemplateResizeOptionPtrOutputWithContext(context.Background())
}

func (e TemplateResizeOption) ToTemplateResizeOptionPtrOutputWithContext(ctx context.Context) TemplateResizeOptionPtrOutput {
	return TemplateResizeOption(e).ToTemplateResizeOptionOutputWithContext(ctx).ToTemplateResizeOptionPtrOutputWithContext(ctx)
}

func (e TemplateResizeOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateResizeOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateResizeOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateResizeOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateResizeOptionOutput struct{ *pulumi.OutputState }

func (TemplateResizeOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResizeOption)(nil)).Elem()
}

func (o TemplateResizeOptionOutput) ToTemplateResizeOptionOutput() TemplateResizeOptionOutput {
	return o
}

func (o TemplateResizeOptionOutput) ToTemplateResizeOptionOutputWithContext(ctx context.Context) TemplateResizeOptionOutput {
	return o
}

func (o TemplateResizeOptionOutput) ToTemplateResizeOptionPtrOutput() TemplateResizeOptionPtrOutput {
	return o.ToTemplateResizeOptionPtrOutputWithContext(context.Background())
}

func (o TemplateResizeOptionOutput) ToTemplateResizeOptionPtrOutputWithContext(ctx context.Context) TemplateResizeOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateResizeOption) *TemplateResizeOption {
		return &v
	}).(TemplateResizeOptionPtrOutput)
}

func (o TemplateResizeOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateResizeOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateResizeOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateResizeOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateResizeOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateResizeOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateResizeOptionPtrOutput struct{ *pulumi.OutputState }

func (TemplateResizeOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateResizeOption)(nil)).Elem()
}

func (o TemplateResizeOptionPtrOutput) ToTemplateResizeOptionPtrOutput() TemplateResizeOptionPtrOutput {
	return o
}

func (o TemplateResizeOptionPtrOutput) ToTemplateResizeOptionPtrOutputWithContext(ctx context.Context) TemplateResizeOptionPtrOutput {
	return o
}

func (o TemplateResizeOptionPtrOutput) Elem() TemplateResizeOptionOutput {
	return o.ApplyT(func(v *TemplateResizeOption) TemplateResizeOption {
		if v != nil {
			return *v
		}
		var ret TemplateResizeOption
		return ret
	}).(TemplateResizeOptionOutput)
}

func (o TemplateResizeOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateResizeOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateResizeOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateResizeOptionInput is an input type that accepts values of the TemplateResizeOption enum
// A concrete instance of `TemplateResizeOptionInput` can be one of the following:
//
//	TemplateResizeOptionFixed
//	TemplateResizeOptionResponsive
type TemplateResizeOptionInput interface {
	pulumi.Input

	ToTemplateResizeOptionOutput() TemplateResizeOptionOutput
	ToTemplateResizeOptionOutputWithContext(context.Context) TemplateResizeOptionOutput
}

var templateResizeOptionPtrType = reflect.TypeOf((**TemplateResizeOption)(nil)).Elem()

type TemplateResizeOptionPtrInput interface {
	pulumi.Input

	ToTemplateResizeOptionPtrOutput() TemplateResizeOptionPtrOutput
	ToTemplateResizeOptionPtrOutputWithContext(context.Context) TemplateResizeOptionPtrOutput
}

type templateResizeOptionPtr string

func TemplateResizeOptionPtr(v string) TemplateResizeOptionPtrInput {
	return (*templateResizeOptionPtr)(&v)
}

func (*templateResizeOptionPtr) ElementType() reflect.Type {
	return templateResizeOptionPtrType
}

func (in *templateResizeOptionPtr) ToTemplateResizeOptionPtrOutput() TemplateResizeOptionPtrOutput {
	return pulumi.ToOutput(in).(TemplateResizeOptionPtrOutput)
}

func (in *templateResizeOptionPtr) ToTemplateResizeOptionPtrOutputWithContext(ctx context.Context) TemplateResizeOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateResizeOptionPtrOutput)
}

type TemplateResourceStatus string

const (
	TemplateResourceStatusCreationInProgress = TemplateResourceStatus("CREATION_IN_PROGRESS")
	TemplateResourceStatusCreationSuccessful = TemplateResourceStatus("CREATION_SUCCESSFUL")
	TemplateResourceStatusCreationFailed     = TemplateResourceStatus("CREATION_FAILED")
	TemplateResourceStatusUpdateInProgress   = TemplateResourceStatus("UPDATE_IN_PROGRESS")
	TemplateResourceStatusUpdateSuccessful   = TemplateResourceStatus("UPDATE_SUCCESSFUL")
	TemplateResourceStatusUpdateFailed       = TemplateResourceStatus("UPDATE_FAILED")
	TemplateResourceStatusDeleted            = TemplateResourceStatus("DELETED")
)

type TemplateResourceStatusOutput struct{ *pulumi.OutputState }

func (TemplateResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResourceStatus)(nil)).Elem()
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusOutput() TemplateResourceStatusOutput {
	return o
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusOutputWithContext(ctx context.Context) TemplateResourceStatusOutput {
	return o
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput {
	return o.ToTemplateResourceStatusPtrOutputWithContext(context.Background())
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusPtrOutputWithContext(ctx context.Context) TemplateResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateResourceStatus) *TemplateResourceStatus {
		return &v
	}).(TemplateResourceStatusPtrOutput)
}

func (o TemplateResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (TemplateResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateResourceStatus)(nil)).Elem()
}

func (o TemplateResourceStatusPtrOutput) ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput {
	return o
}

func (o TemplateResourceStatusPtrOutput) ToTemplateResourceStatusPtrOutputWithContext(ctx context.Context) TemplateResourceStatusPtrOutput {
	return o
}

func (o TemplateResourceStatusPtrOutput) Elem() TemplateResourceStatusOutput {
	return o.ApplyT(func(v *TemplateResourceStatus) TemplateResourceStatus {
		if v != nil {
			return *v
		}
		var ret TemplateResourceStatus
		return ret
	}).(TemplateResourceStatusOutput)
}

func (o TemplateResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSectionPageBreakStatus string

const (
	TemplateSectionPageBreakStatusEnabled  = TemplateSectionPageBreakStatus("ENABLED")
	TemplateSectionPageBreakStatusDisabled = TemplateSectionPageBreakStatus("DISABLED")
)

func (TemplateSectionPageBreakStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionPageBreakStatus)(nil)).Elem()
}

func (e TemplateSectionPageBreakStatus) ToTemplateSectionPageBreakStatusOutput() TemplateSectionPageBreakStatusOutput {
	return pulumi.ToOutput(e).(TemplateSectionPageBreakStatusOutput)
}

func (e TemplateSectionPageBreakStatus) ToTemplateSectionPageBreakStatusOutputWithContext(ctx context.Context) TemplateSectionPageBreakStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSectionPageBreakStatusOutput)
}

func (e TemplateSectionPageBreakStatus) ToTemplateSectionPageBreakStatusPtrOutput() TemplateSectionPageBreakStatusPtrOutput {
	return e.ToTemplateSectionPageBreakStatusPtrOutputWithContext(context.Background())
}

func (e TemplateSectionPageBreakStatus) ToTemplateSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) TemplateSectionPageBreakStatusPtrOutput {
	return TemplateSectionPageBreakStatus(e).ToTemplateSectionPageBreakStatusOutputWithContext(ctx).ToTemplateSectionPageBreakStatusPtrOutputWithContext(ctx)
}

func (e TemplateSectionPageBreakStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSectionPageBreakStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSectionPageBreakStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSectionPageBreakStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSectionPageBreakStatusOutput struct{ *pulumi.OutputState }

func (TemplateSectionPageBreakStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionPageBreakStatus)(nil)).Elem()
}

func (o TemplateSectionPageBreakStatusOutput) ToTemplateSectionPageBreakStatusOutput() TemplateSectionPageBreakStatusOutput {
	return o
}

func (o TemplateSectionPageBreakStatusOutput) ToTemplateSectionPageBreakStatusOutputWithContext(ctx context.Context) TemplateSectionPageBreakStatusOutput {
	return o
}

func (o TemplateSectionPageBreakStatusOutput) ToTemplateSectionPageBreakStatusPtrOutput() TemplateSectionPageBreakStatusPtrOutput {
	return o.ToTemplateSectionPageBreakStatusPtrOutputWithContext(context.Background())
}

func (o TemplateSectionPageBreakStatusOutput) ToTemplateSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) TemplateSectionPageBreakStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSectionPageBreakStatus) *TemplateSectionPageBreakStatus {
		return &v
	}).(TemplateSectionPageBreakStatusPtrOutput)
}

func (o TemplateSectionPageBreakStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSectionPageBreakStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSectionPageBreakStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSectionPageBreakStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSectionPageBreakStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSectionPageBreakStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSectionPageBreakStatusPtrOutput struct{ *pulumi.OutputState }

func (TemplateSectionPageBreakStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionPageBreakStatus)(nil)).Elem()
}

func (o TemplateSectionPageBreakStatusPtrOutput) ToTemplateSectionPageBreakStatusPtrOutput() TemplateSectionPageBreakStatusPtrOutput {
	return o
}

func (o TemplateSectionPageBreakStatusPtrOutput) ToTemplateSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) TemplateSectionPageBreakStatusPtrOutput {
	return o
}

func (o TemplateSectionPageBreakStatusPtrOutput) Elem() TemplateSectionPageBreakStatusOutput {
	return o.ApplyT(func(v *TemplateSectionPageBreakStatus) TemplateSectionPageBreakStatus {
		if v != nil {
			return *v
		}
		var ret TemplateSectionPageBreakStatus
		return ret
	}).(TemplateSectionPageBreakStatusOutput)
}

func (o TemplateSectionPageBreakStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSectionPageBreakStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSectionPageBreakStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSectionPageBreakStatusInput is an input type that accepts values of the TemplateSectionPageBreakStatus enum
// A concrete instance of `TemplateSectionPageBreakStatusInput` can be one of the following:
//
//	TemplateSectionPageBreakStatusEnabled
//	TemplateSectionPageBreakStatusDisabled
type TemplateSectionPageBreakStatusInput interface {
	pulumi.Input

	ToTemplateSectionPageBreakStatusOutput() TemplateSectionPageBreakStatusOutput
	ToTemplateSectionPageBreakStatusOutputWithContext(context.Context) TemplateSectionPageBreakStatusOutput
}

var templateSectionPageBreakStatusPtrType = reflect.TypeOf((**TemplateSectionPageBreakStatus)(nil)).Elem()

type TemplateSectionPageBreakStatusPtrInput interface {
	pulumi.Input

	ToTemplateSectionPageBreakStatusPtrOutput() TemplateSectionPageBreakStatusPtrOutput
	ToTemplateSectionPageBreakStatusPtrOutputWithContext(context.Context) TemplateSectionPageBreakStatusPtrOutput
}

type templateSectionPageBreakStatusPtr string

func TemplateSectionPageBreakStatusPtr(v string) TemplateSectionPageBreakStatusPtrInput {
	return (*templateSectionPageBreakStatusPtr)(&v)
}

func (*templateSectionPageBreakStatusPtr) ElementType() reflect.Type {
	return templateSectionPageBreakStatusPtrType
}

func (in *templateSectionPageBreakStatusPtr) ToTemplateSectionPageBreakStatusPtrOutput() TemplateSectionPageBreakStatusPtrOutput {
	return pulumi.ToOutput(in).(TemplateSectionPageBreakStatusPtrOutput)
}

func (in *templateSectionPageBreakStatusPtr) ToTemplateSectionPageBreakStatusPtrOutputWithContext(ctx context.Context) TemplateSectionPageBreakStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSectionPageBreakStatusPtrOutput)
}

type TemplateSelectAllValueOptions string

const (
	TemplateSelectAllValueOptionsAllValues = TemplateSelectAllValueOptions("ALL_VALUES")
)

func (TemplateSelectAllValueOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSelectAllValueOptions)(nil)).Elem()
}

func (e TemplateSelectAllValueOptions) ToTemplateSelectAllValueOptionsOutput() TemplateSelectAllValueOptionsOutput {
	return pulumi.ToOutput(e).(TemplateSelectAllValueOptionsOutput)
}

func (e TemplateSelectAllValueOptions) ToTemplateSelectAllValueOptionsOutputWithContext(ctx context.Context) TemplateSelectAllValueOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSelectAllValueOptionsOutput)
}

func (e TemplateSelectAllValueOptions) ToTemplateSelectAllValueOptionsPtrOutput() TemplateSelectAllValueOptionsPtrOutput {
	return e.ToTemplateSelectAllValueOptionsPtrOutputWithContext(context.Background())
}

func (e TemplateSelectAllValueOptions) ToTemplateSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) TemplateSelectAllValueOptionsPtrOutput {
	return TemplateSelectAllValueOptions(e).ToTemplateSelectAllValueOptionsOutputWithContext(ctx).ToTemplateSelectAllValueOptionsPtrOutputWithContext(ctx)
}

func (e TemplateSelectAllValueOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSelectAllValueOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSelectAllValueOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSelectAllValueOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSelectAllValueOptionsOutput struct{ *pulumi.OutputState }

func (TemplateSelectAllValueOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSelectAllValueOptions)(nil)).Elem()
}

func (o TemplateSelectAllValueOptionsOutput) ToTemplateSelectAllValueOptionsOutput() TemplateSelectAllValueOptionsOutput {
	return o
}

func (o TemplateSelectAllValueOptionsOutput) ToTemplateSelectAllValueOptionsOutputWithContext(ctx context.Context) TemplateSelectAllValueOptionsOutput {
	return o
}

func (o TemplateSelectAllValueOptionsOutput) ToTemplateSelectAllValueOptionsPtrOutput() TemplateSelectAllValueOptionsPtrOutput {
	return o.ToTemplateSelectAllValueOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateSelectAllValueOptionsOutput) ToTemplateSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) TemplateSelectAllValueOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSelectAllValueOptions) *TemplateSelectAllValueOptions {
		return &v
	}).(TemplateSelectAllValueOptionsPtrOutput)
}

func (o TemplateSelectAllValueOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSelectAllValueOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSelectAllValueOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSelectAllValueOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSelectAllValueOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSelectAllValueOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSelectAllValueOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSelectAllValueOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSelectAllValueOptions)(nil)).Elem()
}

func (o TemplateSelectAllValueOptionsPtrOutput) ToTemplateSelectAllValueOptionsPtrOutput() TemplateSelectAllValueOptionsPtrOutput {
	return o
}

func (o TemplateSelectAllValueOptionsPtrOutput) ToTemplateSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) TemplateSelectAllValueOptionsPtrOutput {
	return o
}

func (o TemplateSelectAllValueOptionsPtrOutput) Elem() TemplateSelectAllValueOptionsOutput {
	return o.ApplyT(func(v *TemplateSelectAllValueOptions) TemplateSelectAllValueOptions {
		if v != nil {
			return *v
		}
		var ret TemplateSelectAllValueOptions
		return ret
	}).(TemplateSelectAllValueOptionsOutput)
}

func (o TemplateSelectAllValueOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSelectAllValueOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSelectAllValueOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSelectAllValueOptionsInput is an input type that accepts values of the TemplateSelectAllValueOptions enum
// A concrete instance of `TemplateSelectAllValueOptionsInput` can be one of the following:
//
//	TemplateSelectAllValueOptionsAllValues
type TemplateSelectAllValueOptionsInput interface {
	pulumi.Input

	ToTemplateSelectAllValueOptionsOutput() TemplateSelectAllValueOptionsOutput
	ToTemplateSelectAllValueOptionsOutputWithContext(context.Context) TemplateSelectAllValueOptionsOutput
}

var templateSelectAllValueOptionsPtrType = reflect.TypeOf((**TemplateSelectAllValueOptions)(nil)).Elem()

type TemplateSelectAllValueOptionsPtrInput interface {
	pulumi.Input

	ToTemplateSelectAllValueOptionsPtrOutput() TemplateSelectAllValueOptionsPtrOutput
	ToTemplateSelectAllValueOptionsPtrOutputWithContext(context.Context) TemplateSelectAllValueOptionsPtrOutput
}

type templateSelectAllValueOptionsPtr string

func TemplateSelectAllValueOptionsPtr(v string) TemplateSelectAllValueOptionsPtrInput {
	return (*templateSelectAllValueOptionsPtr)(&v)
}

func (*templateSelectAllValueOptionsPtr) ElementType() reflect.Type {
	return templateSelectAllValueOptionsPtrType
}

func (in *templateSelectAllValueOptionsPtr) ToTemplateSelectAllValueOptionsPtrOutput() TemplateSelectAllValueOptionsPtrOutput {
	return pulumi.ToOutput(in).(TemplateSelectAllValueOptionsPtrOutput)
}

func (in *templateSelectAllValueOptionsPtr) ToTemplateSelectAllValueOptionsPtrOutputWithContext(ctx context.Context) TemplateSelectAllValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSelectAllValueOptionsPtrOutput)
}

type TemplateSelectedFieldOptions string

const (
	TemplateSelectedFieldOptionsAllFields = TemplateSelectedFieldOptions("ALL_FIELDS")
)

func (TemplateSelectedFieldOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSelectedFieldOptions)(nil)).Elem()
}

func (e TemplateSelectedFieldOptions) ToTemplateSelectedFieldOptionsOutput() TemplateSelectedFieldOptionsOutput {
	return pulumi.ToOutput(e).(TemplateSelectedFieldOptionsOutput)
}

func (e TemplateSelectedFieldOptions) ToTemplateSelectedFieldOptionsOutputWithContext(ctx context.Context) TemplateSelectedFieldOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSelectedFieldOptionsOutput)
}

func (e TemplateSelectedFieldOptions) ToTemplateSelectedFieldOptionsPtrOutput() TemplateSelectedFieldOptionsPtrOutput {
	return e.ToTemplateSelectedFieldOptionsPtrOutputWithContext(context.Background())
}

func (e TemplateSelectedFieldOptions) ToTemplateSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateSelectedFieldOptionsPtrOutput {
	return TemplateSelectedFieldOptions(e).ToTemplateSelectedFieldOptionsOutputWithContext(ctx).ToTemplateSelectedFieldOptionsPtrOutputWithContext(ctx)
}

func (e TemplateSelectedFieldOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSelectedFieldOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSelectedFieldOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSelectedFieldOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSelectedFieldOptionsOutput struct{ *pulumi.OutputState }

func (TemplateSelectedFieldOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSelectedFieldOptions)(nil)).Elem()
}

func (o TemplateSelectedFieldOptionsOutput) ToTemplateSelectedFieldOptionsOutput() TemplateSelectedFieldOptionsOutput {
	return o
}

func (o TemplateSelectedFieldOptionsOutput) ToTemplateSelectedFieldOptionsOutputWithContext(ctx context.Context) TemplateSelectedFieldOptionsOutput {
	return o
}

func (o TemplateSelectedFieldOptionsOutput) ToTemplateSelectedFieldOptionsPtrOutput() TemplateSelectedFieldOptionsPtrOutput {
	return o.ToTemplateSelectedFieldOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateSelectedFieldOptionsOutput) ToTemplateSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateSelectedFieldOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSelectedFieldOptions) *TemplateSelectedFieldOptions {
		return &v
	}).(TemplateSelectedFieldOptionsPtrOutput)
}

func (o TemplateSelectedFieldOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSelectedFieldOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSelectedFieldOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSelectedFieldOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSelectedFieldOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSelectedFieldOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSelectedFieldOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSelectedFieldOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSelectedFieldOptions)(nil)).Elem()
}

func (o TemplateSelectedFieldOptionsPtrOutput) ToTemplateSelectedFieldOptionsPtrOutput() TemplateSelectedFieldOptionsPtrOutput {
	return o
}

func (o TemplateSelectedFieldOptionsPtrOutput) ToTemplateSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateSelectedFieldOptionsPtrOutput {
	return o
}

func (o TemplateSelectedFieldOptionsPtrOutput) Elem() TemplateSelectedFieldOptionsOutput {
	return o.ApplyT(func(v *TemplateSelectedFieldOptions) TemplateSelectedFieldOptions {
		if v != nil {
			return *v
		}
		var ret TemplateSelectedFieldOptions
		return ret
	}).(TemplateSelectedFieldOptionsOutput)
}

func (o TemplateSelectedFieldOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSelectedFieldOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSelectedFieldOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSelectedFieldOptionsInput is an input type that accepts values of the TemplateSelectedFieldOptions enum
// A concrete instance of `TemplateSelectedFieldOptionsInput` can be one of the following:
//
//	TemplateSelectedFieldOptionsAllFields
type TemplateSelectedFieldOptionsInput interface {
	pulumi.Input

	ToTemplateSelectedFieldOptionsOutput() TemplateSelectedFieldOptionsOutput
	ToTemplateSelectedFieldOptionsOutputWithContext(context.Context) TemplateSelectedFieldOptionsOutput
}

var templateSelectedFieldOptionsPtrType = reflect.TypeOf((**TemplateSelectedFieldOptions)(nil)).Elem()

type TemplateSelectedFieldOptionsPtrInput interface {
	pulumi.Input

	ToTemplateSelectedFieldOptionsPtrOutput() TemplateSelectedFieldOptionsPtrOutput
	ToTemplateSelectedFieldOptionsPtrOutputWithContext(context.Context) TemplateSelectedFieldOptionsPtrOutput
}

type templateSelectedFieldOptionsPtr string

func TemplateSelectedFieldOptionsPtr(v string) TemplateSelectedFieldOptionsPtrInput {
	return (*templateSelectedFieldOptionsPtr)(&v)
}

func (*templateSelectedFieldOptionsPtr) ElementType() reflect.Type {
	return templateSelectedFieldOptionsPtrType
}

func (in *templateSelectedFieldOptionsPtr) ToTemplateSelectedFieldOptionsPtrOutput() TemplateSelectedFieldOptionsPtrOutput {
	return pulumi.ToOutput(in).(TemplateSelectedFieldOptionsPtrOutput)
}

func (in *templateSelectedFieldOptionsPtr) ToTemplateSelectedFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateSelectedFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSelectedFieldOptionsPtrOutput)
}

type TemplateSelectedTooltipType string

const (
	TemplateSelectedTooltipTypeBasic    = TemplateSelectedTooltipType("BASIC")
	TemplateSelectedTooltipTypeDetailed = TemplateSelectedTooltipType("DETAILED")
)

func (TemplateSelectedTooltipType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSelectedTooltipType)(nil)).Elem()
}

func (e TemplateSelectedTooltipType) ToTemplateSelectedTooltipTypeOutput() TemplateSelectedTooltipTypeOutput {
	return pulumi.ToOutput(e).(TemplateSelectedTooltipTypeOutput)
}

func (e TemplateSelectedTooltipType) ToTemplateSelectedTooltipTypeOutputWithContext(ctx context.Context) TemplateSelectedTooltipTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSelectedTooltipTypeOutput)
}

func (e TemplateSelectedTooltipType) ToTemplateSelectedTooltipTypePtrOutput() TemplateSelectedTooltipTypePtrOutput {
	return e.ToTemplateSelectedTooltipTypePtrOutputWithContext(context.Background())
}

func (e TemplateSelectedTooltipType) ToTemplateSelectedTooltipTypePtrOutputWithContext(ctx context.Context) TemplateSelectedTooltipTypePtrOutput {
	return TemplateSelectedTooltipType(e).ToTemplateSelectedTooltipTypeOutputWithContext(ctx).ToTemplateSelectedTooltipTypePtrOutputWithContext(ctx)
}

func (e TemplateSelectedTooltipType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSelectedTooltipType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSelectedTooltipType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSelectedTooltipType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSelectedTooltipTypeOutput struct{ *pulumi.OutputState }

func (TemplateSelectedTooltipTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSelectedTooltipType)(nil)).Elem()
}

func (o TemplateSelectedTooltipTypeOutput) ToTemplateSelectedTooltipTypeOutput() TemplateSelectedTooltipTypeOutput {
	return o
}

func (o TemplateSelectedTooltipTypeOutput) ToTemplateSelectedTooltipTypeOutputWithContext(ctx context.Context) TemplateSelectedTooltipTypeOutput {
	return o
}

func (o TemplateSelectedTooltipTypeOutput) ToTemplateSelectedTooltipTypePtrOutput() TemplateSelectedTooltipTypePtrOutput {
	return o.ToTemplateSelectedTooltipTypePtrOutputWithContext(context.Background())
}

func (o TemplateSelectedTooltipTypeOutput) ToTemplateSelectedTooltipTypePtrOutputWithContext(ctx context.Context) TemplateSelectedTooltipTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSelectedTooltipType) *TemplateSelectedTooltipType {
		return &v
	}).(TemplateSelectedTooltipTypePtrOutput)
}

func (o TemplateSelectedTooltipTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSelectedTooltipTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSelectedTooltipType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSelectedTooltipTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSelectedTooltipTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSelectedTooltipType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSelectedTooltipTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateSelectedTooltipTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSelectedTooltipType)(nil)).Elem()
}

func (o TemplateSelectedTooltipTypePtrOutput) ToTemplateSelectedTooltipTypePtrOutput() TemplateSelectedTooltipTypePtrOutput {
	return o
}

func (o TemplateSelectedTooltipTypePtrOutput) ToTemplateSelectedTooltipTypePtrOutputWithContext(ctx context.Context) TemplateSelectedTooltipTypePtrOutput {
	return o
}

func (o TemplateSelectedTooltipTypePtrOutput) Elem() TemplateSelectedTooltipTypeOutput {
	return o.ApplyT(func(v *TemplateSelectedTooltipType) TemplateSelectedTooltipType {
		if v != nil {
			return *v
		}
		var ret TemplateSelectedTooltipType
		return ret
	}).(TemplateSelectedTooltipTypeOutput)
}

func (o TemplateSelectedTooltipTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSelectedTooltipTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSelectedTooltipType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSelectedTooltipTypeInput is an input type that accepts values of the TemplateSelectedTooltipType enum
// A concrete instance of `TemplateSelectedTooltipTypeInput` can be one of the following:
//
//	TemplateSelectedTooltipTypeBasic
//	TemplateSelectedTooltipTypeDetailed
type TemplateSelectedTooltipTypeInput interface {
	pulumi.Input

	ToTemplateSelectedTooltipTypeOutput() TemplateSelectedTooltipTypeOutput
	ToTemplateSelectedTooltipTypeOutputWithContext(context.Context) TemplateSelectedTooltipTypeOutput
}

var templateSelectedTooltipTypePtrType = reflect.TypeOf((**TemplateSelectedTooltipType)(nil)).Elem()

type TemplateSelectedTooltipTypePtrInput interface {
	pulumi.Input

	ToTemplateSelectedTooltipTypePtrOutput() TemplateSelectedTooltipTypePtrOutput
	ToTemplateSelectedTooltipTypePtrOutputWithContext(context.Context) TemplateSelectedTooltipTypePtrOutput
}

type templateSelectedTooltipTypePtr string

func TemplateSelectedTooltipTypePtr(v string) TemplateSelectedTooltipTypePtrInput {
	return (*templateSelectedTooltipTypePtr)(&v)
}

func (*templateSelectedTooltipTypePtr) ElementType() reflect.Type {
	return templateSelectedTooltipTypePtrType
}

func (in *templateSelectedTooltipTypePtr) ToTemplateSelectedTooltipTypePtrOutput() TemplateSelectedTooltipTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateSelectedTooltipTypePtrOutput)
}

func (in *templateSelectedTooltipTypePtr) ToTemplateSelectedTooltipTypePtrOutputWithContext(ctx context.Context) TemplateSelectedTooltipTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSelectedTooltipTypePtrOutput)
}

type TemplateSheetContentType string

const (
	TemplateSheetContentTypePaginated   = TemplateSheetContentType("PAGINATED")
	TemplateSheetContentTypeInteractive = TemplateSheetContentType("INTERACTIVE")
)

func (TemplateSheetContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetContentType)(nil)).Elem()
}

func (e TemplateSheetContentType) ToTemplateSheetContentTypeOutput() TemplateSheetContentTypeOutput {
	return pulumi.ToOutput(e).(TemplateSheetContentTypeOutput)
}

func (e TemplateSheetContentType) ToTemplateSheetContentTypeOutputWithContext(ctx context.Context) TemplateSheetContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSheetContentTypeOutput)
}

func (e TemplateSheetContentType) ToTemplateSheetContentTypePtrOutput() TemplateSheetContentTypePtrOutput {
	return e.ToTemplateSheetContentTypePtrOutputWithContext(context.Background())
}

func (e TemplateSheetContentType) ToTemplateSheetContentTypePtrOutputWithContext(ctx context.Context) TemplateSheetContentTypePtrOutput {
	return TemplateSheetContentType(e).ToTemplateSheetContentTypeOutputWithContext(ctx).ToTemplateSheetContentTypePtrOutputWithContext(ctx)
}

func (e TemplateSheetContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSheetContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSheetContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSheetContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSheetContentTypeOutput struct{ *pulumi.OutputState }

func (TemplateSheetContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetContentType)(nil)).Elem()
}

func (o TemplateSheetContentTypeOutput) ToTemplateSheetContentTypeOutput() TemplateSheetContentTypeOutput {
	return o
}

func (o TemplateSheetContentTypeOutput) ToTemplateSheetContentTypeOutputWithContext(ctx context.Context) TemplateSheetContentTypeOutput {
	return o
}

func (o TemplateSheetContentTypeOutput) ToTemplateSheetContentTypePtrOutput() TemplateSheetContentTypePtrOutput {
	return o.ToTemplateSheetContentTypePtrOutputWithContext(context.Background())
}

func (o TemplateSheetContentTypeOutput) ToTemplateSheetContentTypePtrOutputWithContext(ctx context.Context) TemplateSheetContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSheetContentType) *TemplateSheetContentType {
		return &v
	}).(TemplateSheetContentTypePtrOutput)
}

func (o TemplateSheetContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSheetContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSheetContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSheetContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSheetContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSheetContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSheetContentTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateSheetContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSheetContentType)(nil)).Elem()
}

func (o TemplateSheetContentTypePtrOutput) ToTemplateSheetContentTypePtrOutput() TemplateSheetContentTypePtrOutput {
	return o
}

func (o TemplateSheetContentTypePtrOutput) ToTemplateSheetContentTypePtrOutputWithContext(ctx context.Context) TemplateSheetContentTypePtrOutput {
	return o
}

func (o TemplateSheetContentTypePtrOutput) Elem() TemplateSheetContentTypeOutput {
	return o.ApplyT(func(v *TemplateSheetContentType) TemplateSheetContentType {
		if v != nil {
			return *v
		}
		var ret TemplateSheetContentType
		return ret
	}).(TemplateSheetContentTypeOutput)
}

func (o TemplateSheetContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSheetContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSheetContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSheetContentTypeInput is an input type that accepts values of the TemplateSheetContentType enum
// A concrete instance of `TemplateSheetContentTypeInput` can be one of the following:
//
//	TemplateSheetContentTypePaginated
//	TemplateSheetContentTypeInteractive
type TemplateSheetContentTypeInput interface {
	pulumi.Input

	ToTemplateSheetContentTypeOutput() TemplateSheetContentTypeOutput
	ToTemplateSheetContentTypeOutputWithContext(context.Context) TemplateSheetContentTypeOutput
}

var templateSheetContentTypePtrType = reflect.TypeOf((**TemplateSheetContentType)(nil)).Elem()

type TemplateSheetContentTypePtrInput interface {
	pulumi.Input

	ToTemplateSheetContentTypePtrOutput() TemplateSheetContentTypePtrOutput
	ToTemplateSheetContentTypePtrOutputWithContext(context.Context) TemplateSheetContentTypePtrOutput
}

type templateSheetContentTypePtr string

func TemplateSheetContentTypePtr(v string) TemplateSheetContentTypePtrInput {
	return (*templateSheetContentTypePtr)(&v)
}

func (*templateSheetContentTypePtr) ElementType() reflect.Type {
	return templateSheetContentTypePtrType
}

func (in *templateSheetContentTypePtr) ToTemplateSheetContentTypePtrOutput() TemplateSheetContentTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateSheetContentTypePtrOutput)
}

func (in *templateSheetContentTypePtr) ToTemplateSheetContentTypePtrOutputWithContext(ctx context.Context) TemplateSheetContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSheetContentTypePtrOutput)
}

type TemplateSheetControlDateTimePickerType string

const (
	TemplateSheetControlDateTimePickerTypeSingleValued = TemplateSheetControlDateTimePickerType("SINGLE_VALUED")
	TemplateSheetControlDateTimePickerTypeDateRange    = TemplateSheetControlDateTimePickerType("DATE_RANGE")
)

func (TemplateSheetControlDateTimePickerType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlDateTimePickerType)(nil)).Elem()
}

func (e TemplateSheetControlDateTimePickerType) ToTemplateSheetControlDateTimePickerTypeOutput() TemplateSheetControlDateTimePickerTypeOutput {
	return pulumi.ToOutput(e).(TemplateSheetControlDateTimePickerTypeOutput)
}

func (e TemplateSheetControlDateTimePickerType) ToTemplateSheetControlDateTimePickerTypeOutputWithContext(ctx context.Context) TemplateSheetControlDateTimePickerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSheetControlDateTimePickerTypeOutput)
}

func (e TemplateSheetControlDateTimePickerType) ToTemplateSheetControlDateTimePickerTypePtrOutput() TemplateSheetControlDateTimePickerTypePtrOutput {
	return e.ToTemplateSheetControlDateTimePickerTypePtrOutputWithContext(context.Background())
}

func (e TemplateSheetControlDateTimePickerType) ToTemplateSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlDateTimePickerTypePtrOutput {
	return TemplateSheetControlDateTimePickerType(e).ToTemplateSheetControlDateTimePickerTypeOutputWithContext(ctx).ToTemplateSheetControlDateTimePickerTypePtrOutputWithContext(ctx)
}

func (e TemplateSheetControlDateTimePickerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSheetControlDateTimePickerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSheetControlDateTimePickerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSheetControlDateTimePickerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSheetControlDateTimePickerTypeOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlDateTimePickerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlDateTimePickerType)(nil)).Elem()
}

func (o TemplateSheetControlDateTimePickerTypeOutput) ToTemplateSheetControlDateTimePickerTypeOutput() TemplateSheetControlDateTimePickerTypeOutput {
	return o
}

func (o TemplateSheetControlDateTimePickerTypeOutput) ToTemplateSheetControlDateTimePickerTypeOutputWithContext(ctx context.Context) TemplateSheetControlDateTimePickerTypeOutput {
	return o
}

func (o TemplateSheetControlDateTimePickerTypeOutput) ToTemplateSheetControlDateTimePickerTypePtrOutput() TemplateSheetControlDateTimePickerTypePtrOutput {
	return o.ToTemplateSheetControlDateTimePickerTypePtrOutputWithContext(context.Background())
}

func (o TemplateSheetControlDateTimePickerTypeOutput) ToTemplateSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlDateTimePickerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSheetControlDateTimePickerType) *TemplateSheetControlDateTimePickerType {
		return &v
	}).(TemplateSheetControlDateTimePickerTypePtrOutput)
}

func (o TemplateSheetControlDateTimePickerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSheetControlDateTimePickerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSheetControlDateTimePickerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSheetControlDateTimePickerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSheetControlDateTimePickerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSheetControlDateTimePickerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSheetControlDateTimePickerTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlDateTimePickerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSheetControlDateTimePickerType)(nil)).Elem()
}

func (o TemplateSheetControlDateTimePickerTypePtrOutput) ToTemplateSheetControlDateTimePickerTypePtrOutput() TemplateSheetControlDateTimePickerTypePtrOutput {
	return o
}

func (o TemplateSheetControlDateTimePickerTypePtrOutput) ToTemplateSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlDateTimePickerTypePtrOutput {
	return o
}

func (o TemplateSheetControlDateTimePickerTypePtrOutput) Elem() TemplateSheetControlDateTimePickerTypeOutput {
	return o.ApplyT(func(v *TemplateSheetControlDateTimePickerType) TemplateSheetControlDateTimePickerType {
		if v != nil {
			return *v
		}
		var ret TemplateSheetControlDateTimePickerType
		return ret
	}).(TemplateSheetControlDateTimePickerTypeOutput)
}

func (o TemplateSheetControlDateTimePickerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSheetControlDateTimePickerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSheetControlDateTimePickerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSheetControlDateTimePickerTypeInput is an input type that accepts values of the TemplateSheetControlDateTimePickerType enum
// A concrete instance of `TemplateSheetControlDateTimePickerTypeInput` can be one of the following:
//
//	TemplateSheetControlDateTimePickerTypeSingleValued
//	TemplateSheetControlDateTimePickerTypeDateRange
type TemplateSheetControlDateTimePickerTypeInput interface {
	pulumi.Input

	ToTemplateSheetControlDateTimePickerTypeOutput() TemplateSheetControlDateTimePickerTypeOutput
	ToTemplateSheetControlDateTimePickerTypeOutputWithContext(context.Context) TemplateSheetControlDateTimePickerTypeOutput
}

var templateSheetControlDateTimePickerTypePtrType = reflect.TypeOf((**TemplateSheetControlDateTimePickerType)(nil)).Elem()

type TemplateSheetControlDateTimePickerTypePtrInput interface {
	pulumi.Input

	ToTemplateSheetControlDateTimePickerTypePtrOutput() TemplateSheetControlDateTimePickerTypePtrOutput
	ToTemplateSheetControlDateTimePickerTypePtrOutputWithContext(context.Context) TemplateSheetControlDateTimePickerTypePtrOutput
}

type templateSheetControlDateTimePickerTypePtr string

func TemplateSheetControlDateTimePickerTypePtr(v string) TemplateSheetControlDateTimePickerTypePtrInput {
	return (*templateSheetControlDateTimePickerTypePtr)(&v)
}

func (*templateSheetControlDateTimePickerTypePtr) ElementType() reflect.Type {
	return templateSheetControlDateTimePickerTypePtrType
}

func (in *templateSheetControlDateTimePickerTypePtr) ToTemplateSheetControlDateTimePickerTypePtrOutput() TemplateSheetControlDateTimePickerTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateSheetControlDateTimePickerTypePtrOutput)
}

func (in *templateSheetControlDateTimePickerTypePtr) ToTemplateSheetControlDateTimePickerTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlDateTimePickerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSheetControlDateTimePickerTypePtrOutput)
}

type TemplateSheetControlListType string

const (
	TemplateSheetControlListTypeMultiSelect  = TemplateSheetControlListType("MULTI_SELECT")
	TemplateSheetControlListTypeSingleSelect = TemplateSheetControlListType("SINGLE_SELECT")
)

func (TemplateSheetControlListType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlListType)(nil)).Elem()
}

func (e TemplateSheetControlListType) ToTemplateSheetControlListTypeOutput() TemplateSheetControlListTypeOutput {
	return pulumi.ToOutput(e).(TemplateSheetControlListTypeOutput)
}

func (e TemplateSheetControlListType) ToTemplateSheetControlListTypeOutputWithContext(ctx context.Context) TemplateSheetControlListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSheetControlListTypeOutput)
}

func (e TemplateSheetControlListType) ToTemplateSheetControlListTypePtrOutput() TemplateSheetControlListTypePtrOutput {
	return e.ToTemplateSheetControlListTypePtrOutputWithContext(context.Background())
}

func (e TemplateSheetControlListType) ToTemplateSheetControlListTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlListTypePtrOutput {
	return TemplateSheetControlListType(e).ToTemplateSheetControlListTypeOutputWithContext(ctx).ToTemplateSheetControlListTypePtrOutputWithContext(ctx)
}

func (e TemplateSheetControlListType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSheetControlListType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSheetControlListType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSheetControlListType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSheetControlListTypeOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlListType)(nil)).Elem()
}

func (o TemplateSheetControlListTypeOutput) ToTemplateSheetControlListTypeOutput() TemplateSheetControlListTypeOutput {
	return o
}

func (o TemplateSheetControlListTypeOutput) ToTemplateSheetControlListTypeOutputWithContext(ctx context.Context) TemplateSheetControlListTypeOutput {
	return o
}

func (o TemplateSheetControlListTypeOutput) ToTemplateSheetControlListTypePtrOutput() TemplateSheetControlListTypePtrOutput {
	return o.ToTemplateSheetControlListTypePtrOutputWithContext(context.Background())
}

func (o TemplateSheetControlListTypeOutput) ToTemplateSheetControlListTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlListTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSheetControlListType) *TemplateSheetControlListType {
		return &v
	}).(TemplateSheetControlListTypePtrOutput)
}

func (o TemplateSheetControlListTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSheetControlListTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSheetControlListType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSheetControlListTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSheetControlListTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSheetControlListType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSheetControlListTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlListTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSheetControlListType)(nil)).Elem()
}

func (o TemplateSheetControlListTypePtrOutput) ToTemplateSheetControlListTypePtrOutput() TemplateSheetControlListTypePtrOutput {
	return o
}

func (o TemplateSheetControlListTypePtrOutput) ToTemplateSheetControlListTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlListTypePtrOutput {
	return o
}

func (o TemplateSheetControlListTypePtrOutput) Elem() TemplateSheetControlListTypeOutput {
	return o.ApplyT(func(v *TemplateSheetControlListType) TemplateSheetControlListType {
		if v != nil {
			return *v
		}
		var ret TemplateSheetControlListType
		return ret
	}).(TemplateSheetControlListTypeOutput)
}

func (o TemplateSheetControlListTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSheetControlListTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSheetControlListType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSheetControlListTypeInput is an input type that accepts values of the TemplateSheetControlListType enum
// A concrete instance of `TemplateSheetControlListTypeInput` can be one of the following:
//
//	TemplateSheetControlListTypeMultiSelect
//	TemplateSheetControlListTypeSingleSelect
type TemplateSheetControlListTypeInput interface {
	pulumi.Input

	ToTemplateSheetControlListTypeOutput() TemplateSheetControlListTypeOutput
	ToTemplateSheetControlListTypeOutputWithContext(context.Context) TemplateSheetControlListTypeOutput
}

var templateSheetControlListTypePtrType = reflect.TypeOf((**TemplateSheetControlListType)(nil)).Elem()

type TemplateSheetControlListTypePtrInput interface {
	pulumi.Input

	ToTemplateSheetControlListTypePtrOutput() TemplateSheetControlListTypePtrOutput
	ToTemplateSheetControlListTypePtrOutputWithContext(context.Context) TemplateSheetControlListTypePtrOutput
}

type templateSheetControlListTypePtr string

func TemplateSheetControlListTypePtr(v string) TemplateSheetControlListTypePtrInput {
	return (*templateSheetControlListTypePtr)(&v)
}

func (*templateSheetControlListTypePtr) ElementType() reflect.Type {
	return templateSheetControlListTypePtrType
}

func (in *templateSheetControlListTypePtr) ToTemplateSheetControlListTypePtrOutput() TemplateSheetControlListTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateSheetControlListTypePtrOutput)
}

func (in *templateSheetControlListTypePtr) ToTemplateSheetControlListTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlListTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSheetControlListTypePtrOutput)
}

type TemplateSheetControlSliderType string

const (
	TemplateSheetControlSliderTypeSinglePoint = TemplateSheetControlSliderType("SINGLE_POINT")
	TemplateSheetControlSliderTypeRange       = TemplateSheetControlSliderType("RANGE")
)

func (TemplateSheetControlSliderType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlSliderType)(nil)).Elem()
}

func (e TemplateSheetControlSliderType) ToTemplateSheetControlSliderTypeOutput() TemplateSheetControlSliderTypeOutput {
	return pulumi.ToOutput(e).(TemplateSheetControlSliderTypeOutput)
}

func (e TemplateSheetControlSliderType) ToTemplateSheetControlSliderTypeOutputWithContext(ctx context.Context) TemplateSheetControlSliderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSheetControlSliderTypeOutput)
}

func (e TemplateSheetControlSliderType) ToTemplateSheetControlSliderTypePtrOutput() TemplateSheetControlSliderTypePtrOutput {
	return e.ToTemplateSheetControlSliderTypePtrOutputWithContext(context.Background())
}

func (e TemplateSheetControlSliderType) ToTemplateSheetControlSliderTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlSliderTypePtrOutput {
	return TemplateSheetControlSliderType(e).ToTemplateSheetControlSliderTypeOutputWithContext(ctx).ToTemplateSheetControlSliderTypePtrOutputWithContext(ctx)
}

func (e TemplateSheetControlSliderType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSheetControlSliderType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSheetControlSliderType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSheetControlSliderType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSheetControlSliderTypeOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlSliderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlSliderType)(nil)).Elem()
}

func (o TemplateSheetControlSliderTypeOutput) ToTemplateSheetControlSliderTypeOutput() TemplateSheetControlSliderTypeOutput {
	return o
}

func (o TemplateSheetControlSliderTypeOutput) ToTemplateSheetControlSliderTypeOutputWithContext(ctx context.Context) TemplateSheetControlSliderTypeOutput {
	return o
}

func (o TemplateSheetControlSliderTypeOutput) ToTemplateSheetControlSliderTypePtrOutput() TemplateSheetControlSliderTypePtrOutput {
	return o.ToTemplateSheetControlSliderTypePtrOutputWithContext(context.Background())
}

func (o TemplateSheetControlSliderTypeOutput) ToTemplateSheetControlSliderTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlSliderTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSheetControlSliderType) *TemplateSheetControlSliderType {
		return &v
	}).(TemplateSheetControlSliderTypePtrOutput)
}

func (o TemplateSheetControlSliderTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSheetControlSliderTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSheetControlSliderType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSheetControlSliderTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSheetControlSliderTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSheetControlSliderType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSheetControlSliderTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlSliderTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSheetControlSliderType)(nil)).Elem()
}

func (o TemplateSheetControlSliderTypePtrOutput) ToTemplateSheetControlSliderTypePtrOutput() TemplateSheetControlSliderTypePtrOutput {
	return o
}

func (o TemplateSheetControlSliderTypePtrOutput) ToTemplateSheetControlSliderTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlSliderTypePtrOutput {
	return o
}

func (o TemplateSheetControlSliderTypePtrOutput) Elem() TemplateSheetControlSliderTypeOutput {
	return o.ApplyT(func(v *TemplateSheetControlSliderType) TemplateSheetControlSliderType {
		if v != nil {
			return *v
		}
		var ret TemplateSheetControlSliderType
		return ret
	}).(TemplateSheetControlSliderTypeOutput)
}

func (o TemplateSheetControlSliderTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSheetControlSliderTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSheetControlSliderType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSheetControlSliderTypeInput is an input type that accepts values of the TemplateSheetControlSliderType enum
// A concrete instance of `TemplateSheetControlSliderTypeInput` can be one of the following:
//
//	TemplateSheetControlSliderTypeSinglePoint
//	TemplateSheetControlSliderTypeRange
type TemplateSheetControlSliderTypeInput interface {
	pulumi.Input

	ToTemplateSheetControlSliderTypeOutput() TemplateSheetControlSliderTypeOutput
	ToTemplateSheetControlSliderTypeOutputWithContext(context.Context) TemplateSheetControlSliderTypeOutput
}

var templateSheetControlSliderTypePtrType = reflect.TypeOf((**TemplateSheetControlSliderType)(nil)).Elem()

type TemplateSheetControlSliderTypePtrInput interface {
	pulumi.Input

	ToTemplateSheetControlSliderTypePtrOutput() TemplateSheetControlSliderTypePtrOutput
	ToTemplateSheetControlSliderTypePtrOutputWithContext(context.Context) TemplateSheetControlSliderTypePtrOutput
}

type templateSheetControlSliderTypePtr string

func TemplateSheetControlSliderTypePtr(v string) TemplateSheetControlSliderTypePtrInput {
	return (*templateSheetControlSliderTypePtr)(&v)
}

func (*templateSheetControlSliderTypePtr) ElementType() reflect.Type {
	return templateSheetControlSliderTypePtrType
}

func (in *templateSheetControlSliderTypePtr) ToTemplateSheetControlSliderTypePtrOutput() TemplateSheetControlSliderTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateSheetControlSliderTypePtrOutput)
}

func (in *templateSheetControlSliderTypePtr) ToTemplateSheetControlSliderTypePtrOutputWithContext(ctx context.Context) TemplateSheetControlSliderTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSheetControlSliderTypePtrOutput)
}

type TemplateSimpleAttributeAggregationFunction string

const (
	TemplateSimpleAttributeAggregationFunctionUniqueValue = TemplateSimpleAttributeAggregationFunction("UNIQUE_VALUE")
)

func (TemplateSimpleAttributeAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSimpleAttributeAggregationFunction)(nil)).Elem()
}

func (e TemplateSimpleAttributeAggregationFunction) ToTemplateSimpleAttributeAggregationFunctionOutput() TemplateSimpleAttributeAggregationFunctionOutput {
	return pulumi.ToOutput(e).(TemplateSimpleAttributeAggregationFunctionOutput)
}

func (e TemplateSimpleAttributeAggregationFunction) ToTemplateSimpleAttributeAggregationFunctionOutputWithContext(ctx context.Context) TemplateSimpleAttributeAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSimpleAttributeAggregationFunctionOutput)
}

func (e TemplateSimpleAttributeAggregationFunction) ToTemplateSimpleAttributeAggregationFunctionPtrOutput() TemplateSimpleAttributeAggregationFunctionPtrOutput {
	return e.ToTemplateSimpleAttributeAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e TemplateSimpleAttributeAggregationFunction) ToTemplateSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleAttributeAggregationFunctionPtrOutput {
	return TemplateSimpleAttributeAggregationFunction(e).ToTemplateSimpleAttributeAggregationFunctionOutputWithContext(ctx).ToTemplateSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx)
}

func (e TemplateSimpleAttributeAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSimpleAttributeAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSimpleAttributeAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSimpleAttributeAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSimpleAttributeAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TemplateSimpleAttributeAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSimpleAttributeAggregationFunction)(nil)).Elem()
}

func (o TemplateSimpleAttributeAggregationFunctionOutput) ToTemplateSimpleAttributeAggregationFunctionOutput() TemplateSimpleAttributeAggregationFunctionOutput {
	return o
}

func (o TemplateSimpleAttributeAggregationFunctionOutput) ToTemplateSimpleAttributeAggregationFunctionOutputWithContext(ctx context.Context) TemplateSimpleAttributeAggregationFunctionOutput {
	return o
}

func (o TemplateSimpleAttributeAggregationFunctionOutput) ToTemplateSimpleAttributeAggregationFunctionPtrOutput() TemplateSimpleAttributeAggregationFunctionPtrOutput {
	return o.ToTemplateSimpleAttributeAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o TemplateSimpleAttributeAggregationFunctionOutput) ToTemplateSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleAttributeAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSimpleAttributeAggregationFunction) *TemplateSimpleAttributeAggregationFunction {
		return &v
	}).(TemplateSimpleAttributeAggregationFunctionPtrOutput)
}

func (o TemplateSimpleAttributeAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSimpleAttributeAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSimpleAttributeAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSimpleAttributeAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSimpleAttributeAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSimpleAttributeAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSimpleAttributeAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (TemplateSimpleAttributeAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSimpleAttributeAggregationFunction)(nil)).Elem()
}

func (o TemplateSimpleAttributeAggregationFunctionPtrOutput) ToTemplateSimpleAttributeAggregationFunctionPtrOutput() TemplateSimpleAttributeAggregationFunctionPtrOutput {
	return o
}

func (o TemplateSimpleAttributeAggregationFunctionPtrOutput) ToTemplateSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleAttributeAggregationFunctionPtrOutput {
	return o
}

func (o TemplateSimpleAttributeAggregationFunctionPtrOutput) Elem() TemplateSimpleAttributeAggregationFunctionOutput {
	return o.ApplyT(func(v *TemplateSimpleAttributeAggregationFunction) TemplateSimpleAttributeAggregationFunction {
		if v != nil {
			return *v
		}
		var ret TemplateSimpleAttributeAggregationFunction
		return ret
	}).(TemplateSimpleAttributeAggregationFunctionOutput)
}

func (o TemplateSimpleAttributeAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSimpleAttributeAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSimpleAttributeAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSimpleAttributeAggregationFunctionInput is an input type that accepts values of the TemplateSimpleAttributeAggregationFunction enum
// A concrete instance of `TemplateSimpleAttributeAggregationFunctionInput` can be one of the following:
//
//	TemplateSimpleAttributeAggregationFunctionUniqueValue
type TemplateSimpleAttributeAggregationFunctionInput interface {
	pulumi.Input

	ToTemplateSimpleAttributeAggregationFunctionOutput() TemplateSimpleAttributeAggregationFunctionOutput
	ToTemplateSimpleAttributeAggregationFunctionOutputWithContext(context.Context) TemplateSimpleAttributeAggregationFunctionOutput
}

var templateSimpleAttributeAggregationFunctionPtrType = reflect.TypeOf((**TemplateSimpleAttributeAggregationFunction)(nil)).Elem()

type TemplateSimpleAttributeAggregationFunctionPtrInput interface {
	pulumi.Input

	ToTemplateSimpleAttributeAggregationFunctionPtrOutput() TemplateSimpleAttributeAggregationFunctionPtrOutput
	ToTemplateSimpleAttributeAggregationFunctionPtrOutputWithContext(context.Context) TemplateSimpleAttributeAggregationFunctionPtrOutput
}

type templateSimpleAttributeAggregationFunctionPtr string

func TemplateSimpleAttributeAggregationFunctionPtr(v string) TemplateSimpleAttributeAggregationFunctionPtrInput {
	return (*templateSimpleAttributeAggregationFunctionPtr)(&v)
}

func (*templateSimpleAttributeAggregationFunctionPtr) ElementType() reflect.Type {
	return templateSimpleAttributeAggregationFunctionPtrType
}

func (in *templateSimpleAttributeAggregationFunctionPtr) ToTemplateSimpleAttributeAggregationFunctionPtrOutput() TemplateSimpleAttributeAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(TemplateSimpleAttributeAggregationFunctionPtrOutput)
}

func (in *templateSimpleAttributeAggregationFunctionPtr) ToTemplateSimpleAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleAttributeAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSimpleAttributeAggregationFunctionPtrOutput)
}

type TemplateSimpleNumericalAggregationFunction string

const (
	TemplateSimpleNumericalAggregationFunctionSum           = TemplateSimpleNumericalAggregationFunction("SUM")
	TemplateSimpleNumericalAggregationFunctionAverage       = TemplateSimpleNumericalAggregationFunction("AVERAGE")
	TemplateSimpleNumericalAggregationFunctionMin           = TemplateSimpleNumericalAggregationFunction("MIN")
	TemplateSimpleNumericalAggregationFunctionMax           = TemplateSimpleNumericalAggregationFunction("MAX")
	TemplateSimpleNumericalAggregationFunctionCount         = TemplateSimpleNumericalAggregationFunction("COUNT")
	TemplateSimpleNumericalAggregationFunctionDistinctCount = TemplateSimpleNumericalAggregationFunction("DISTINCT_COUNT")
	TemplateSimpleNumericalAggregationFunctionVar           = TemplateSimpleNumericalAggregationFunction("VAR")
	TemplateSimpleNumericalAggregationFunctionVarp          = TemplateSimpleNumericalAggregationFunction("VARP")
	TemplateSimpleNumericalAggregationFunctionStdev         = TemplateSimpleNumericalAggregationFunction("STDEV")
	TemplateSimpleNumericalAggregationFunctionStdevp        = TemplateSimpleNumericalAggregationFunction("STDEVP")
	TemplateSimpleNumericalAggregationFunctionMedian        = TemplateSimpleNumericalAggregationFunction("MEDIAN")
)

func (TemplateSimpleNumericalAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSimpleNumericalAggregationFunction)(nil)).Elem()
}

func (e TemplateSimpleNumericalAggregationFunction) ToTemplateSimpleNumericalAggregationFunctionOutput() TemplateSimpleNumericalAggregationFunctionOutput {
	return pulumi.ToOutput(e).(TemplateSimpleNumericalAggregationFunctionOutput)
}

func (e TemplateSimpleNumericalAggregationFunction) ToTemplateSimpleNumericalAggregationFunctionOutputWithContext(ctx context.Context) TemplateSimpleNumericalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSimpleNumericalAggregationFunctionOutput)
}

func (e TemplateSimpleNumericalAggregationFunction) ToTemplateSimpleNumericalAggregationFunctionPtrOutput() TemplateSimpleNumericalAggregationFunctionPtrOutput {
	return e.ToTemplateSimpleNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e TemplateSimpleNumericalAggregationFunction) ToTemplateSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleNumericalAggregationFunctionPtrOutput {
	return TemplateSimpleNumericalAggregationFunction(e).ToTemplateSimpleNumericalAggregationFunctionOutputWithContext(ctx).ToTemplateSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx)
}

func (e TemplateSimpleNumericalAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSimpleNumericalAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSimpleNumericalAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSimpleNumericalAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSimpleNumericalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TemplateSimpleNumericalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSimpleNumericalAggregationFunction)(nil)).Elem()
}

func (o TemplateSimpleNumericalAggregationFunctionOutput) ToTemplateSimpleNumericalAggregationFunctionOutput() TemplateSimpleNumericalAggregationFunctionOutput {
	return o
}

func (o TemplateSimpleNumericalAggregationFunctionOutput) ToTemplateSimpleNumericalAggregationFunctionOutputWithContext(ctx context.Context) TemplateSimpleNumericalAggregationFunctionOutput {
	return o
}

func (o TemplateSimpleNumericalAggregationFunctionOutput) ToTemplateSimpleNumericalAggregationFunctionPtrOutput() TemplateSimpleNumericalAggregationFunctionPtrOutput {
	return o.ToTemplateSimpleNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o TemplateSimpleNumericalAggregationFunctionOutput) ToTemplateSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleNumericalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSimpleNumericalAggregationFunction) *TemplateSimpleNumericalAggregationFunction {
		return &v
	}).(TemplateSimpleNumericalAggregationFunctionPtrOutput)
}

func (o TemplateSimpleNumericalAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSimpleNumericalAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSimpleNumericalAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSimpleNumericalAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSimpleNumericalAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSimpleNumericalAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSimpleNumericalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (TemplateSimpleNumericalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSimpleNumericalAggregationFunction)(nil)).Elem()
}

func (o TemplateSimpleNumericalAggregationFunctionPtrOutput) ToTemplateSimpleNumericalAggregationFunctionPtrOutput() TemplateSimpleNumericalAggregationFunctionPtrOutput {
	return o
}

func (o TemplateSimpleNumericalAggregationFunctionPtrOutput) ToTemplateSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleNumericalAggregationFunctionPtrOutput {
	return o
}

func (o TemplateSimpleNumericalAggregationFunctionPtrOutput) Elem() TemplateSimpleNumericalAggregationFunctionOutput {
	return o.ApplyT(func(v *TemplateSimpleNumericalAggregationFunction) TemplateSimpleNumericalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret TemplateSimpleNumericalAggregationFunction
		return ret
	}).(TemplateSimpleNumericalAggregationFunctionOutput)
}

func (o TemplateSimpleNumericalAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSimpleNumericalAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSimpleNumericalAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSimpleNumericalAggregationFunctionInput is an input type that accepts values of the TemplateSimpleNumericalAggregationFunction enum
// A concrete instance of `TemplateSimpleNumericalAggregationFunctionInput` can be one of the following:
//
//	TemplateSimpleNumericalAggregationFunctionSum
//	TemplateSimpleNumericalAggregationFunctionAverage
//	TemplateSimpleNumericalAggregationFunctionMin
//	TemplateSimpleNumericalAggregationFunctionMax
//	TemplateSimpleNumericalAggregationFunctionCount
//	TemplateSimpleNumericalAggregationFunctionDistinctCount
//	TemplateSimpleNumericalAggregationFunctionVar
//	TemplateSimpleNumericalAggregationFunctionVarp
//	TemplateSimpleNumericalAggregationFunctionStdev
//	TemplateSimpleNumericalAggregationFunctionStdevp
//	TemplateSimpleNumericalAggregationFunctionMedian
type TemplateSimpleNumericalAggregationFunctionInput interface {
	pulumi.Input

	ToTemplateSimpleNumericalAggregationFunctionOutput() TemplateSimpleNumericalAggregationFunctionOutput
	ToTemplateSimpleNumericalAggregationFunctionOutputWithContext(context.Context) TemplateSimpleNumericalAggregationFunctionOutput
}

var templateSimpleNumericalAggregationFunctionPtrType = reflect.TypeOf((**TemplateSimpleNumericalAggregationFunction)(nil)).Elem()

type TemplateSimpleNumericalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToTemplateSimpleNumericalAggregationFunctionPtrOutput() TemplateSimpleNumericalAggregationFunctionPtrOutput
	ToTemplateSimpleNumericalAggregationFunctionPtrOutputWithContext(context.Context) TemplateSimpleNumericalAggregationFunctionPtrOutput
}

type templateSimpleNumericalAggregationFunctionPtr string

func TemplateSimpleNumericalAggregationFunctionPtr(v string) TemplateSimpleNumericalAggregationFunctionPtrInput {
	return (*templateSimpleNumericalAggregationFunctionPtr)(&v)
}

func (*templateSimpleNumericalAggregationFunctionPtr) ElementType() reflect.Type {
	return templateSimpleNumericalAggregationFunctionPtrType
}

func (in *templateSimpleNumericalAggregationFunctionPtr) ToTemplateSimpleNumericalAggregationFunctionPtrOutput() TemplateSimpleNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(TemplateSimpleNumericalAggregationFunctionPtrOutput)
}

func (in *templateSimpleNumericalAggregationFunctionPtr) ToTemplateSimpleNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSimpleNumericalAggregationFunctionPtrOutput)
}

type TemplateSimpleTotalAggregationFunction string

const (
	TemplateSimpleTotalAggregationFunctionDefault = TemplateSimpleTotalAggregationFunction("DEFAULT")
	TemplateSimpleTotalAggregationFunctionSum     = TemplateSimpleTotalAggregationFunction("SUM")
	TemplateSimpleTotalAggregationFunctionAverage = TemplateSimpleTotalAggregationFunction("AVERAGE")
	TemplateSimpleTotalAggregationFunctionMin     = TemplateSimpleTotalAggregationFunction("MIN")
	TemplateSimpleTotalAggregationFunctionMax     = TemplateSimpleTotalAggregationFunction("MAX")
	TemplateSimpleTotalAggregationFunctionNone    = TemplateSimpleTotalAggregationFunction("NONE")
)

func (TemplateSimpleTotalAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSimpleTotalAggregationFunction)(nil)).Elem()
}

func (e TemplateSimpleTotalAggregationFunction) ToTemplateSimpleTotalAggregationFunctionOutput() TemplateSimpleTotalAggregationFunctionOutput {
	return pulumi.ToOutput(e).(TemplateSimpleTotalAggregationFunctionOutput)
}

func (e TemplateSimpleTotalAggregationFunction) ToTemplateSimpleTotalAggregationFunctionOutputWithContext(ctx context.Context) TemplateSimpleTotalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSimpleTotalAggregationFunctionOutput)
}

func (e TemplateSimpleTotalAggregationFunction) ToTemplateSimpleTotalAggregationFunctionPtrOutput() TemplateSimpleTotalAggregationFunctionPtrOutput {
	return e.ToTemplateSimpleTotalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e TemplateSimpleTotalAggregationFunction) ToTemplateSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleTotalAggregationFunctionPtrOutput {
	return TemplateSimpleTotalAggregationFunction(e).ToTemplateSimpleTotalAggregationFunctionOutputWithContext(ctx).ToTemplateSimpleTotalAggregationFunctionPtrOutputWithContext(ctx)
}

func (e TemplateSimpleTotalAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSimpleTotalAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSimpleTotalAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSimpleTotalAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSimpleTotalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TemplateSimpleTotalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSimpleTotalAggregationFunction)(nil)).Elem()
}

func (o TemplateSimpleTotalAggregationFunctionOutput) ToTemplateSimpleTotalAggregationFunctionOutput() TemplateSimpleTotalAggregationFunctionOutput {
	return o
}

func (o TemplateSimpleTotalAggregationFunctionOutput) ToTemplateSimpleTotalAggregationFunctionOutputWithContext(ctx context.Context) TemplateSimpleTotalAggregationFunctionOutput {
	return o
}

func (o TemplateSimpleTotalAggregationFunctionOutput) ToTemplateSimpleTotalAggregationFunctionPtrOutput() TemplateSimpleTotalAggregationFunctionPtrOutput {
	return o.ToTemplateSimpleTotalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o TemplateSimpleTotalAggregationFunctionOutput) ToTemplateSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleTotalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSimpleTotalAggregationFunction) *TemplateSimpleTotalAggregationFunction {
		return &v
	}).(TemplateSimpleTotalAggregationFunctionPtrOutput)
}

func (o TemplateSimpleTotalAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSimpleTotalAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSimpleTotalAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSimpleTotalAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSimpleTotalAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSimpleTotalAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSimpleTotalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (TemplateSimpleTotalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSimpleTotalAggregationFunction)(nil)).Elem()
}

func (o TemplateSimpleTotalAggregationFunctionPtrOutput) ToTemplateSimpleTotalAggregationFunctionPtrOutput() TemplateSimpleTotalAggregationFunctionPtrOutput {
	return o
}

func (o TemplateSimpleTotalAggregationFunctionPtrOutput) ToTemplateSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleTotalAggregationFunctionPtrOutput {
	return o
}

func (o TemplateSimpleTotalAggregationFunctionPtrOutput) Elem() TemplateSimpleTotalAggregationFunctionOutput {
	return o.ApplyT(func(v *TemplateSimpleTotalAggregationFunction) TemplateSimpleTotalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret TemplateSimpleTotalAggregationFunction
		return ret
	}).(TemplateSimpleTotalAggregationFunctionOutput)
}

func (o TemplateSimpleTotalAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSimpleTotalAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSimpleTotalAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSimpleTotalAggregationFunctionInput is an input type that accepts values of the TemplateSimpleTotalAggregationFunction enum
// A concrete instance of `TemplateSimpleTotalAggregationFunctionInput` can be one of the following:
//
//	TemplateSimpleTotalAggregationFunctionDefault
//	TemplateSimpleTotalAggregationFunctionSum
//	TemplateSimpleTotalAggregationFunctionAverage
//	TemplateSimpleTotalAggregationFunctionMin
//	TemplateSimpleTotalAggregationFunctionMax
//	TemplateSimpleTotalAggregationFunctionNone
type TemplateSimpleTotalAggregationFunctionInput interface {
	pulumi.Input

	ToTemplateSimpleTotalAggregationFunctionOutput() TemplateSimpleTotalAggregationFunctionOutput
	ToTemplateSimpleTotalAggregationFunctionOutputWithContext(context.Context) TemplateSimpleTotalAggregationFunctionOutput
}

var templateSimpleTotalAggregationFunctionPtrType = reflect.TypeOf((**TemplateSimpleTotalAggregationFunction)(nil)).Elem()

type TemplateSimpleTotalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToTemplateSimpleTotalAggregationFunctionPtrOutput() TemplateSimpleTotalAggregationFunctionPtrOutput
	ToTemplateSimpleTotalAggregationFunctionPtrOutputWithContext(context.Context) TemplateSimpleTotalAggregationFunctionPtrOutput
}

type templateSimpleTotalAggregationFunctionPtr string

func TemplateSimpleTotalAggregationFunctionPtr(v string) TemplateSimpleTotalAggregationFunctionPtrInput {
	return (*templateSimpleTotalAggregationFunctionPtr)(&v)
}

func (*templateSimpleTotalAggregationFunctionPtr) ElementType() reflect.Type {
	return templateSimpleTotalAggregationFunctionPtrType
}

func (in *templateSimpleTotalAggregationFunctionPtr) ToTemplateSimpleTotalAggregationFunctionPtrOutput() TemplateSimpleTotalAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(TemplateSimpleTotalAggregationFunctionPtrOutput)
}

func (in *templateSimpleTotalAggregationFunctionPtr) ToTemplateSimpleTotalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateSimpleTotalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSimpleTotalAggregationFunctionPtrOutput)
}

type TemplateSmallMultiplesAxisPlacement string

const (
	TemplateSmallMultiplesAxisPlacementOutside = TemplateSmallMultiplesAxisPlacement("OUTSIDE")
	TemplateSmallMultiplesAxisPlacementInside  = TemplateSmallMultiplesAxisPlacement("INSIDE")
)

func (TemplateSmallMultiplesAxisPlacement) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmallMultiplesAxisPlacement)(nil)).Elem()
}

func (e TemplateSmallMultiplesAxisPlacement) ToTemplateSmallMultiplesAxisPlacementOutput() TemplateSmallMultiplesAxisPlacementOutput {
	return pulumi.ToOutput(e).(TemplateSmallMultiplesAxisPlacementOutput)
}

func (e TemplateSmallMultiplesAxisPlacement) ToTemplateSmallMultiplesAxisPlacementOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSmallMultiplesAxisPlacementOutput)
}

func (e TemplateSmallMultiplesAxisPlacement) ToTemplateSmallMultiplesAxisPlacementPtrOutput() TemplateSmallMultiplesAxisPlacementPtrOutput {
	return e.ToTemplateSmallMultiplesAxisPlacementPtrOutputWithContext(context.Background())
}

func (e TemplateSmallMultiplesAxisPlacement) ToTemplateSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPlacementPtrOutput {
	return TemplateSmallMultiplesAxisPlacement(e).ToTemplateSmallMultiplesAxisPlacementOutputWithContext(ctx).ToTemplateSmallMultiplesAxisPlacementPtrOutputWithContext(ctx)
}

func (e TemplateSmallMultiplesAxisPlacement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSmallMultiplesAxisPlacement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSmallMultiplesAxisPlacement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSmallMultiplesAxisPlacement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSmallMultiplesAxisPlacementOutput struct{ *pulumi.OutputState }

func (TemplateSmallMultiplesAxisPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmallMultiplesAxisPlacement)(nil)).Elem()
}

func (o TemplateSmallMultiplesAxisPlacementOutput) ToTemplateSmallMultiplesAxisPlacementOutput() TemplateSmallMultiplesAxisPlacementOutput {
	return o
}

func (o TemplateSmallMultiplesAxisPlacementOutput) ToTemplateSmallMultiplesAxisPlacementOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPlacementOutput {
	return o
}

func (o TemplateSmallMultiplesAxisPlacementOutput) ToTemplateSmallMultiplesAxisPlacementPtrOutput() TemplateSmallMultiplesAxisPlacementPtrOutput {
	return o.ToTemplateSmallMultiplesAxisPlacementPtrOutputWithContext(context.Background())
}

func (o TemplateSmallMultiplesAxisPlacementOutput) ToTemplateSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSmallMultiplesAxisPlacement) *TemplateSmallMultiplesAxisPlacement {
		return &v
	}).(TemplateSmallMultiplesAxisPlacementPtrOutput)
}

func (o TemplateSmallMultiplesAxisPlacementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSmallMultiplesAxisPlacementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSmallMultiplesAxisPlacement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSmallMultiplesAxisPlacementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSmallMultiplesAxisPlacementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSmallMultiplesAxisPlacement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSmallMultiplesAxisPlacementPtrOutput struct{ *pulumi.OutputState }

func (TemplateSmallMultiplesAxisPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSmallMultiplesAxisPlacement)(nil)).Elem()
}

func (o TemplateSmallMultiplesAxisPlacementPtrOutput) ToTemplateSmallMultiplesAxisPlacementPtrOutput() TemplateSmallMultiplesAxisPlacementPtrOutput {
	return o
}

func (o TemplateSmallMultiplesAxisPlacementPtrOutput) ToTemplateSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPlacementPtrOutput {
	return o
}

func (o TemplateSmallMultiplesAxisPlacementPtrOutput) Elem() TemplateSmallMultiplesAxisPlacementOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesAxisPlacement) TemplateSmallMultiplesAxisPlacement {
		if v != nil {
			return *v
		}
		var ret TemplateSmallMultiplesAxisPlacement
		return ret
	}).(TemplateSmallMultiplesAxisPlacementOutput)
}

func (o TemplateSmallMultiplesAxisPlacementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSmallMultiplesAxisPlacementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSmallMultiplesAxisPlacement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSmallMultiplesAxisPlacementInput is an input type that accepts values of the TemplateSmallMultiplesAxisPlacement enum
// A concrete instance of `TemplateSmallMultiplesAxisPlacementInput` can be one of the following:
//
//	TemplateSmallMultiplesAxisPlacementOutside
//	TemplateSmallMultiplesAxisPlacementInside
type TemplateSmallMultiplesAxisPlacementInput interface {
	pulumi.Input

	ToTemplateSmallMultiplesAxisPlacementOutput() TemplateSmallMultiplesAxisPlacementOutput
	ToTemplateSmallMultiplesAxisPlacementOutputWithContext(context.Context) TemplateSmallMultiplesAxisPlacementOutput
}

var templateSmallMultiplesAxisPlacementPtrType = reflect.TypeOf((**TemplateSmallMultiplesAxisPlacement)(nil)).Elem()

type TemplateSmallMultiplesAxisPlacementPtrInput interface {
	pulumi.Input

	ToTemplateSmallMultiplesAxisPlacementPtrOutput() TemplateSmallMultiplesAxisPlacementPtrOutput
	ToTemplateSmallMultiplesAxisPlacementPtrOutputWithContext(context.Context) TemplateSmallMultiplesAxisPlacementPtrOutput
}

type templateSmallMultiplesAxisPlacementPtr string

func TemplateSmallMultiplesAxisPlacementPtr(v string) TemplateSmallMultiplesAxisPlacementPtrInput {
	return (*templateSmallMultiplesAxisPlacementPtr)(&v)
}

func (*templateSmallMultiplesAxisPlacementPtr) ElementType() reflect.Type {
	return templateSmallMultiplesAxisPlacementPtrType
}

func (in *templateSmallMultiplesAxisPlacementPtr) ToTemplateSmallMultiplesAxisPlacementPtrOutput() TemplateSmallMultiplesAxisPlacementPtrOutput {
	return pulumi.ToOutput(in).(TemplateSmallMultiplesAxisPlacementPtrOutput)
}

func (in *templateSmallMultiplesAxisPlacementPtr) ToTemplateSmallMultiplesAxisPlacementPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSmallMultiplesAxisPlacementPtrOutput)
}

type TemplateSmallMultiplesAxisScale string

const (
	TemplateSmallMultiplesAxisScaleShared      = TemplateSmallMultiplesAxisScale("SHARED")
	TemplateSmallMultiplesAxisScaleIndependent = TemplateSmallMultiplesAxisScale("INDEPENDENT")
)

func (TemplateSmallMultiplesAxisScale) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmallMultiplesAxisScale)(nil)).Elem()
}

func (e TemplateSmallMultiplesAxisScale) ToTemplateSmallMultiplesAxisScaleOutput() TemplateSmallMultiplesAxisScaleOutput {
	return pulumi.ToOutput(e).(TemplateSmallMultiplesAxisScaleOutput)
}

func (e TemplateSmallMultiplesAxisScale) ToTemplateSmallMultiplesAxisScaleOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisScaleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSmallMultiplesAxisScaleOutput)
}

func (e TemplateSmallMultiplesAxisScale) ToTemplateSmallMultiplesAxisScalePtrOutput() TemplateSmallMultiplesAxisScalePtrOutput {
	return e.ToTemplateSmallMultiplesAxisScalePtrOutputWithContext(context.Background())
}

func (e TemplateSmallMultiplesAxisScale) ToTemplateSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisScalePtrOutput {
	return TemplateSmallMultiplesAxisScale(e).ToTemplateSmallMultiplesAxisScaleOutputWithContext(ctx).ToTemplateSmallMultiplesAxisScalePtrOutputWithContext(ctx)
}

func (e TemplateSmallMultiplesAxisScale) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSmallMultiplesAxisScale) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSmallMultiplesAxisScale) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSmallMultiplesAxisScale) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSmallMultiplesAxisScaleOutput struct{ *pulumi.OutputState }

func (TemplateSmallMultiplesAxisScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmallMultiplesAxisScale)(nil)).Elem()
}

func (o TemplateSmallMultiplesAxisScaleOutput) ToTemplateSmallMultiplesAxisScaleOutput() TemplateSmallMultiplesAxisScaleOutput {
	return o
}

func (o TemplateSmallMultiplesAxisScaleOutput) ToTemplateSmallMultiplesAxisScaleOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisScaleOutput {
	return o
}

func (o TemplateSmallMultiplesAxisScaleOutput) ToTemplateSmallMultiplesAxisScalePtrOutput() TemplateSmallMultiplesAxisScalePtrOutput {
	return o.ToTemplateSmallMultiplesAxisScalePtrOutputWithContext(context.Background())
}

func (o TemplateSmallMultiplesAxisScaleOutput) ToTemplateSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSmallMultiplesAxisScale) *TemplateSmallMultiplesAxisScale {
		return &v
	}).(TemplateSmallMultiplesAxisScalePtrOutput)
}

func (o TemplateSmallMultiplesAxisScaleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSmallMultiplesAxisScaleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSmallMultiplesAxisScale) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSmallMultiplesAxisScaleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSmallMultiplesAxisScaleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSmallMultiplesAxisScale) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSmallMultiplesAxisScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateSmallMultiplesAxisScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSmallMultiplesAxisScale)(nil)).Elem()
}

func (o TemplateSmallMultiplesAxisScalePtrOutput) ToTemplateSmallMultiplesAxisScalePtrOutput() TemplateSmallMultiplesAxisScalePtrOutput {
	return o
}

func (o TemplateSmallMultiplesAxisScalePtrOutput) ToTemplateSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisScalePtrOutput {
	return o
}

func (o TemplateSmallMultiplesAxisScalePtrOutput) Elem() TemplateSmallMultiplesAxisScaleOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesAxisScale) TemplateSmallMultiplesAxisScale {
		if v != nil {
			return *v
		}
		var ret TemplateSmallMultiplesAxisScale
		return ret
	}).(TemplateSmallMultiplesAxisScaleOutput)
}

func (o TemplateSmallMultiplesAxisScalePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSmallMultiplesAxisScalePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSmallMultiplesAxisScale) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSmallMultiplesAxisScaleInput is an input type that accepts values of the TemplateSmallMultiplesAxisScale enum
// A concrete instance of `TemplateSmallMultiplesAxisScaleInput` can be one of the following:
//
//	TemplateSmallMultiplesAxisScaleShared
//	TemplateSmallMultiplesAxisScaleIndependent
type TemplateSmallMultiplesAxisScaleInput interface {
	pulumi.Input

	ToTemplateSmallMultiplesAxisScaleOutput() TemplateSmallMultiplesAxisScaleOutput
	ToTemplateSmallMultiplesAxisScaleOutputWithContext(context.Context) TemplateSmallMultiplesAxisScaleOutput
}

var templateSmallMultiplesAxisScalePtrType = reflect.TypeOf((**TemplateSmallMultiplesAxisScale)(nil)).Elem()

type TemplateSmallMultiplesAxisScalePtrInput interface {
	pulumi.Input

	ToTemplateSmallMultiplesAxisScalePtrOutput() TemplateSmallMultiplesAxisScalePtrOutput
	ToTemplateSmallMultiplesAxisScalePtrOutputWithContext(context.Context) TemplateSmallMultiplesAxisScalePtrOutput
}

type templateSmallMultiplesAxisScalePtr string

func TemplateSmallMultiplesAxisScalePtr(v string) TemplateSmallMultiplesAxisScalePtrInput {
	return (*templateSmallMultiplesAxisScalePtr)(&v)
}

func (*templateSmallMultiplesAxisScalePtr) ElementType() reflect.Type {
	return templateSmallMultiplesAxisScalePtrType
}

func (in *templateSmallMultiplesAxisScalePtr) ToTemplateSmallMultiplesAxisScalePtrOutput() TemplateSmallMultiplesAxisScalePtrOutput {
	return pulumi.ToOutput(in).(TemplateSmallMultiplesAxisScalePtrOutput)
}

func (in *templateSmallMultiplesAxisScalePtr) ToTemplateSmallMultiplesAxisScalePtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSmallMultiplesAxisScalePtrOutput)
}

type TemplateSortDirection string

const (
	TemplateSortDirectionAsc  = TemplateSortDirection("ASC")
	TemplateSortDirectionDesc = TemplateSortDirection("DESC")
)

func (TemplateSortDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSortDirection)(nil)).Elem()
}

func (e TemplateSortDirection) ToTemplateSortDirectionOutput() TemplateSortDirectionOutput {
	return pulumi.ToOutput(e).(TemplateSortDirectionOutput)
}

func (e TemplateSortDirection) ToTemplateSortDirectionOutputWithContext(ctx context.Context) TemplateSortDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSortDirectionOutput)
}

func (e TemplateSortDirection) ToTemplateSortDirectionPtrOutput() TemplateSortDirectionPtrOutput {
	return e.ToTemplateSortDirectionPtrOutputWithContext(context.Background())
}

func (e TemplateSortDirection) ToTemplateSortDirectionPtrOutputWithContext(ctx context.Context) TemplateSortDirectionPtrOutput {
	return TemplateSortDirection(e).ToTemplateSortDirectionOutputWithContext(ctx).ToTemplateSortDirectionPtrOutputWithContext(ctx)
}

func (e TemplateSortDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSortDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSortDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSortDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSortDirectionOutput struct{ *pulumi.OutputState }

func (TemplateSortDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSortDirection)(nil)).Elem()
}

func (o TemplateSortDirectionOutput) ToTemplateSortDirectionOutput() TemplateSortDirectionOutput {
	return o
}

func (o TemplateSortDirectionOutput) ToTemplateSortDirectionOutputWithContext(ctx context.Context) TemplateSortDirectionOutput {
	return o
}

func (o TemplateSortDirectionOutput) ToTemplateSortDirectionPtrOutput() TemplateSortDirectionPtrOutput {
	return o.ToTemplateSortDirectionPtrOutputWithContext(context.Background())
}

func (o TemplateSortDirectionOutput) ToTemplateSortDirectionPtrOutputWithContext(ctx context.Context) TemplateSortDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSortDirection) *TemplateSortDirection {
		return &v
	}).(TemplateSortDirectionPtrOutput)
}

func (o TemplateSortDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSortDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSortDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSortDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSortDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSortDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSortDirectionPtrOutput struct{ *pulumi.OutputState }

func (TemplateSortDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSortDirection)(nil)).Elem()
}

func (o TemplateSortDirectionPtrOutput) ToTemplateSortDirectionPtrOutput() TemplateSortDirectionPtrOutput {
	return o
}

func (o TemplateSortDirectionPtrOutput) ToTemplateSortDirectionPtrOutputWithContext(ctx context.Context) TemplateSortDirectionPtrOutput {
	return o
}

func (o TemplateSortDirectionPtrOutput) Elem() TemplateSortDirectionOutput {
	return o.ApplyT(func(v *TemplateSortDirection) TemplateSortDirection {
		if v != nil {
			return *v
		}
		var ret TemplateSortDirection
		return ret
	}).(TemplateSortDirectionOutput)
}

func (o TemplateSortDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSortDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSortDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSortDirectionInput is an input type that accepts values of the TemplateSortDirection enum
// A concrete instance of `TemplateSortDirectionInput` can be one of the following:
//
//	TemplateSortDirectionAsc
//	TemplateSortDirectionDesc
type TemplateSortDirectionInput interface {
	pulumi.Input

	ToTemplateSortDirectionOutput() TemplateSortDirectionOutput
	ToTemplateSortDirectionOutputWithContext(context.Context) TemplateSortDirectionOutput
}

var templateSortDirectionPtrType = reflect.TypeOf((**TemplateSortDirection)(nil)).Elem()

type TemplateSortDirectionPtrInput interface {
	pulumi.Input

	ToTemplateSortDirectionPtrOutput() TemplateSortDirectionPtrOutput
	ToTemplateSortDirectionPtrOutputWithContext(context.Context) TemplateSortDirectionPtrOutput
}

type templateSortDirectionPtr string

func TemplateSortDirectionPtr(v string) TemplateSortDirectionPtrInput {
	return (*templateSortDirectionPtr)(&v)
}

func (*templateSortDirectionPtr) ElementType() reflect.Type {
	return templateSortDirectionPtrType
}

func (in *templateSortDirectionPtr) ToTemplateSortDirectionPtrOutput() TemplateSortDirectionPtrOutput {
	return pulumi.ToOutput(in).(TemplateSortDirectionPtrOutput)
}

func (in *templateSortDirectionPtr) ToTemplateSortDirectionPtrOutputWithContext(ctx context.Context) TemplateSortDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSortDirectionPtrOutput)
}

type TemplateSpecialValue string

const (
	TemplateSpecialValueEmpty = TemplateSpecialValue("EMPTY")
	TemplateSpecialValueNull  = TemplateSpecialValue("NULL")
	TemplateSpecialValueOther = TemplateSpecialValue("OTHER")
)

func (TemplateSpecialValue) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSpecialValue)(nil)).Elem()
}

func (e TemplateSpecialValue) ToTemplateSpecialValueOutput() TemplateSpecialValueOutput {
	return pulumi.ToOutput(e).(TemplateSpecialValueOutput)
}

func (e TemplateSpecialValue) ToTemplateSpecialValueOutputWithContext(ctx context.Context) TemplateSpecialValueOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateSpecialValueOutput)
}

func (e TemplateSpecialValue) ToTemplateSpecialValuePtrOutput() TemplateSpecialValuePtrOutput {
	return e.ToTemplateSpecialValuePtrOutputWithContext(context.Background())
}

func (e TemplateSpecialValue) ToTemplateSpecialValuePtrOutputWithContext(ctx context.Context) TemplateSpecialValuePtrOutput {
	return TemplateSpecialValue(e).ToTemplateSpecialValueOutputWithContext(ctx).ToTemplateSpecialValuePtrOutputWithContext(ctx)
}

func (e TemplateSpecialValue) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSpecialValue) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateSpecialValue) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateSpecialValue) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateSpecialValueOutput struct{ *pulumi.OutputState }

func (TemplateSpecialValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSpecialValue)(nil)).Elem()
}

func (o TemplateSpecialValueOutput) ToTemplateSpecialValueOutput() TemplateSpecialValueOutput {
	return o
}

func (o TemplateSpecialValueOutput) ToTemplateSpecialValueOutputWithContext(ctx context.Context) TemplateSpecialValueOutput {
	return o
}

func (o TemplateSpecialValueOutput) ToTemplateSpecialValuePtrOutput() TemplateSpecialValuePtrOutput {
	return o.ToTemplateSpecialValuePtrOutputWithContext(context.Background())
}

func (o TemplateSpecialValueOutput) ToTemplateSpecialValuePtrOutputWithContext(ctx context.Context) TemplateSpecialValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSpecialValue) *TemplateSpecialValue {
		return &v
	}).(TemplateSpecialValuePtrOutput)
}

func (o TemplateSpecialValueOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateSpecialValueOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSpecialValue) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateSpecialValueOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSpecialValueOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateSpecialValue) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateSpecialValuePtrOutput struct{ *pulumi.OutputState }

func (TemplateSpecialValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSpecialValue)(nil)).Elem()
}

func (o TemplateSpecialValuePtrOutput) ToTemplateSpecialValuePtrOutput() TemplateSpecialValuePtrOutput {
	return o
}

func (o TemplateSpecialValuePtrOutput) ToTemplateSpecialValuePtrOutputWithContext(ctx context.Context) TemplateSpecialValuePtrOutput {
	return o
}

func (o TemplateSpecialValuePtrOutput) Elem() TemplateSpecialValueOutput {
	return o.ApplyT(func(v *TemplateSpecialValue) TemplateSpecialValue {
		if v != nil {
			return *v
		}
		var ret TemplateSpecialValue
		return ret
	}).(TemplateSpecialValueOutput)
}

func (o TemplateSpecialValuePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateSpecialValuePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateSpecialValue) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateSpecialValueInput is an input type that accepts values of the TemplateSpecialValue enum
// A concrete instance of `TemplateSpecialValueInput` can be one of the following:
//
//	TemplateSpecialValueEmpty
//	TemplateSpecialValueNull
//	TemplateSpecialValueOther
type TemplateSpecialValueInput interface {
	pulumi.Input

	ToTemplateSpecialValueOutput() TemplateSpecialValueOutput
	ToTemplateSpecialValueOutputWithContext(context.Context) TemplateSpecialValueOutput
}

var templateSpecialValuePtrType = reflect.TypeOf((**TemplateSpecialValue)(nil)).Elem()

type TemplateSpecialValuePtrInput interface {
	pulumi.Input

	ToTemplateSpecialValuePtrOutput() TemplateSpecialValuePtrOutput
	ToTemplateSpecialValuePtrOutputWithContext(context.Context) TemplateSpecialValuePtrOutput
}

type templateSpecialValuePtr string

func TemplateSpecialValuePtr(v string) TemplateSpecialValuePtrInput {
	return (*templateSpecialValuePtr)(&v)
}

func (*templateSpecialValuePtr) ElementType() reflect.Type {
	return templateSpecialValuePtrType
}

func (in *templateSpecialValuePtr) ToTemplateSpecialValuePtrOutput() TemplateSpecialValuePtrOutput {
	return pulumi.ToOutput(in).(TemplateSpecialValuePtrOutput)
}

func (in *templateSpecialValuePtr) ToTemplateSpecialValuePtrOutputWithContext(ctx context.Context) TemplateSpecialValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateSpecialValuePtrOutput)
}

type TemplateStyledCellType string

const (
	TemplateStyledCellTypeTotal        = TemplateStyledCellType("TOTAL")
	TemplateStyledCellTypeMetricHeader = TemplateStyledCellType("METRIC_HEADER")
	TemplateStyledCellTypeValue        = TemplateStyledCellType("VALUE")
)

func (TemplateStyledCellType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateStyledCellType)(nil)).Elem()
}

func (e TemplateStyledCellType) ToTemplateStyledCellTypeOutput() TemplateStyledCellTypeOutput {
	return pulumi.ToOutput(e).(TemplateStyledCellTypeOutput)
}

func (e TemplateStyledCellType) ToTemplateStyledCellTypeOutputWithContext(ctx context.Context) TemplateStyledCellTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateStyledCellTypeOutput)
}

func (e TemplateStyledCellType) ToTemplateStyledCellTypePtrOutput() TemplateStyledCellTypePtrOutput {
	return e.ToTemplateStyledCellTypePtrOutputWithContext(context.Background())
}

func (e TemplateStyledCellType) ToTemplateStyledCellTypePtrOutputWithContext(ctx context.Context) TemplateStyledCellTypePtrOutput {
	return TemplateStyledCellType(e).ToTemplateStyledCellTypeOutputWithContext(ctx).ToTemplateStyledCellTypePtrOutputWithContext(ctx)
}

func (e TemplateStyledCellType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateStyledCellType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateStyledCellType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateStyledCellType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateStyledCellTypeOutput struct{ *pulumi.OutputState }

func (TemplateStyledCellTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateStyledCellType)(nil)).Elem()
}

func (o TemplateStyledCellTypeOutput) ToTemplateStyledCellTypeOutput() TemplateStyledCellTypeOutput {
	return o
}

func (o TemplateStyledCellTypeOutput) ToTemplateStyledCellTypeOutputWithContext(ctx context.Context) TemplateStyledCellTypeOutput {
	return o
}

func (o TemplateStyledCellTypeOutput) ToTemplateStyledCellTypePtrOutput() TemplateStyledCellTypePtrOutput {
	return o.ToTemplateStyledCellTypePtrOutputWithContext(context.Background())
}

func (o TemplateStyledCellTypeOutput) ToTemplateStyledCellTypePtrOutputWithContext(ctx context.Context) TemplateStyledCellTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateStyledCellType) *TemplateStyledCellType {
		return &v
	}).(TemplateStyledCellTypePtrOutput)
}

func (o TemplateStyledCellTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateStyledCellTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateStyledCellType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateStyledCellTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateStyledCellTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateStyledCellType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateStyledCellTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateStyledCellTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateStyledCellType)(nil)).Elem()
}

func (o TemplateStyledCellTypePtrOutput) ToTemplateStyledCellTypePtrOutput() TemplateStyledCellTypePtrOutput {
	return o
}

func (o TemplateStyledCellTypePtrOutput) ToTemplateStyledCellTypePtrOutputWithContext(ctx context.Context) TemplateStyledCellTypePtrOutput {
	return o
}

func (o TemplateStyledCellTypePtrOutput) Elem() TemplateStyledCellTypeOutput {
	return o.ApplyT(func(v *TemplateStyledCellType) TemplateStyledCellType {
		if v != nil {
			return *v
		}
		var ret TemplateStyledCellType
		return ret
	}).(TemplateStyledCellTypeOutput)
}

func (o TemplateStyledCellTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateStyledCellTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateStyledCellType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateStyledCellTypeInput is an input type that accepts values of the TemplateStyledCellType enum
// A concrete instance of `TemplateStyledCellTypeInput` can be one of the following:
//
//	TemplateStyledCellTypeTotal
//	TemplateStyledCellTypeMetricHeader
//	TemplateStyledCellTypeValue
type TemplateStyledCellTypeInput interface {
	pulumi.Input

	ToTemplateStyledCellTypeOutput() TemplateStyledCellTypeOutput
	ToTemplateStyledCellTypeOutputWithContext(context.Context) TemplateStyledCellTypeOutput
}

var templateStyledCellTypePtrType = reflect.TypeOf((**TemplateStyledCellType)(nil)).Elem()

type TemplateStyledCellTypePtrInput interface {
	pulumi.Input

	ToTemplateStyledCellTypePtrOutput() TemplateStyledCellTypePtrOutput
	ToTemplateStyledCellTypePtrOutputWithContext(context.Context) TemplateStyledCellTypePtrOutput
}

type templateStyledCellTypePtr string

func TemplateStyledCellTypePtr(v string) TemplateStyledCellTypePtrInput {
	return (*templateStyledCellTypePtr)(&v)
}

func (*templateStyledCellTypePtr) ElementType() reflect.Type {
	return templateStyledCellTypePtrType
}

func (in *templateStyledCellTypePtr) ToTemplateStyledCellTypePtrOutput() TemplateStyledCellTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateStyledCellTypePtrOutput)
}

func (in *templateStyledCellTypePtr) ToTemplateStyledCellTypePtrOutputWithContext(ctx context.Context) TemplateStyledCellTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateStyledCellTypePtrOutput)
}

type TemplateTableBorderStyle string

const (
	TemplateTableBorderStyleNone  = TemplateTableBorderStyle("NONE")
	TemplateTableBorderStyleSolid = TemplateTableBorderStyle("SOLID")
)

func (TemplateTableBorderStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableBorderStyle)(nil)).Elem()
}

func (e TemplateTableBorderStyle) ToTemplateTableBorderStyleOutput() TemplateTableBorderStyleOutput {
	return pulumi.ToOutput(e).(TemplateTableBorderStyleOutput)
}

func (e TemplateTableBorderStyle) ToTemplateTableBorderStyleOutputWithContext(ctx context.Context) TemplateTableBorderStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTableBorderStyleOutput)
}

func (e TemplateTableBorderStyle) ToTemplateTableBorderStylePtrOutput() TemplateTableBorderStylePtrOutput {
	return e.ToTemplateTableBorderStylePtrOutputWithContext(context.Background())
}

func (e TemplateTableBorderStyle) ToTemplateTableBorderStylePtrOutputWithContext(ctx context.Context) TemplateTableBorderStylePtrOutput {
	return TemplateTableBorderStyle(e).ToTemplateTableBorderStyleOutputWithContext(ctx).ToTemplateTableBorderStylePtrOutputWithContext(ctx)
}

func (e TemplateTableBorderStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableBorderStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableBorderStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTableBorderStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTableBorderStyleOutput struct{ *pulumi.OutputState }

func (TemplateTableBorderStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableBorderStyle)(nil)).Elem()
}

func (o TemplateTableBorderStyleOutput) ToTemplateTableBorderStyleOutput() TemplateTableBorderStyleOutput {
	return o
}

func (o TemplateTableBorderStyleOutput) ToTemplateTableBorderStyleOutputWithContext(ctx context.Context) TemplateTableBorderStyleOutput {
	return o
}

func (o TemplateTableBorderStyleOutput) ToTemplateTableBorderStylePtrOutput() TemplateTableBorderStylePtrOutput {
	return o.ToTemplateTableBorderStylePtrOutputWithContext(context.Background())
}

func (o TemplateTableBorderStyleOutput) ToTemplateTableBorderStylePtrOutputWithContext(ctx context.Context) TemplateTableBorderStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableBorderStyle) *TemplateTableBorderStyle {
		return &v
	}).(TemplateTableBorderStylePtrOutput)
}

func (o TemplateTableBorderStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTableBorderStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableBorderStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTableBorderStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableBorderStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableBorderStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTableBorderStylePtrOutput struct{ *pulumi.OutputState }

func (TemplateTableBorderStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableBorderStyle)(nil)).Elem()
}

func (o TemplateTableBorderStylePtrOutput) ToTemplateTableBorderStylePtrOutput() TemplateTableBorderStylePtrOutput {
	return o
}

func (o TemplateTableBorderStylePtrOutput) ToTemplateTableBorderStylePtrOutputWithContext(ctx context.Context) TemplateTableBorderStylePtrOutput {
	return o
}

func (o TemplateTableBorderStylePtrOutput) Elem() TemplateTableBorderStyleOutput {
	return o.ApplyT(func(v *TemplateTableBorderStyle) TemplateTableBorderStyle {
		if v != nil {
			return *v
		}
		var ret TemplateTableBorderStyle
		return ret
	}).(TemplateTableBorderStyleOutput)
}

func (o TemplateTableBorderStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableBorderStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTableBorderStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTableBorderStyleInput is an input type that accepts values of the TemplateTableBorderStyle enum
// A concrete instance of `TemplateTableBorderStyleInput` can be one of the following:
//
//	TemplateTableBorderStyleNone
//	TemplateTableBorderStyleSolid
type TemplateTableBorderStyleInput interface {
	pulumi.Input

	ToTemplateTableBorderStyleOutput() TemplateTableBorderStyleOutput
	ToTemplateTableBorderStyleOutputWithContext(context.Context) TemplateTableBorderStyleOutput
}

var templateTableBorderStylePtrType = reflect.TypeOf((**TemplateTableBorderStyle)(nil)).Elem()

type TemplateTableBorderStylePtrInput interface {
	pulumi.Input

	ToTemplateTableBorderStylePtrOutput() TemplateTableBorderStylePtrOutput
	ToTemplateTableBorderStylePtrOutputWithContext(context.Context) TemplateTableBorderStylePtrOutput
}

type templateTableBorderStylePtr string

func TemplateTableBorderStylePtr(v string) TemplateTableBorderStylePtrInput {
	return (*templateTableBorderStylePtr)(&v)
}

func (*templateTableBorderStylePtr) ElementType() reflect.Type {
	return templateTableBorderStylePtrType
}

func (in *templateTableBorderStylePtr) ToTemplateTableBorderStylePtrOutput() TemplateTableBorderStylePtrOutput {
	return pulumi.ToOutput(in).(TemplateTableBorderStylePtrOutput)
}

func (in *templateTableBorderStylePtr) ToTemplateTableBorderStylePtrOutputWithContext(ctx context.Context) TemplateTableBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTableBorderStylePtrOutput)
}

type TemplateTableCellImageScalingConfiguration string

const (
	TemplateTableCellImageScalingConfigurationFitToCellHeight = TemplateTableCellImageScalingConfiguration("FIT_TO_CELL_HEIGHT")
	TemplateTableCellImageScalingConfigurationFitToCellWidth  = TemplateTableCellImageScalingConfiguration("FIT_TO_CELL_WIDTH")
	TemplateTableCellImageScalingConfigurationDoNotScale      = TemplateTableCellImageScalingConfiguration("DO_NOT_SCALE")
)

func (TemplateTableCellImageScalingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableCellImageScalingConfiguration)(nil)).Elem()
}

func (e TemplateTableCellImageScalingConfiguration) ToTemplateTableCellImageScalingConfigurationOutput() TemplateTableCellImageScalingConfigurationOutput {
	return pulumi.ToOutput(e).(TemplateTableCellImageScalingConfigurationOutput)
}

func (e TemplateTableCellImageScalingConfiguration) ToTemplateTableCellImageScalingConfigurationOutputWithContext(ctx context.Context) TemplateTableCellImageScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTableCellImageScalingConfigurationOutput)
}

func (e TemplateTableCellImageScalingConfiguration) ToTemplateTableCellImageScalingConfigurationPtrOutput() TemplateTableCellImageScalingConfigurationPtrOutput {
	return e.ToTemplateTableCellImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (e TemplateTableCellImageScalingConfiguration) ToTemplateTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableCellImageScalingConfigurationPtrOutput {
	return TemplateTableCellImageScalingConfiguration(e).ToTemplateTableCellImageScalingConfigurationOutputWithContext(ctx).ToTemplateTableCellImageScalingConfigurationPtrOutputWithContext(ctx)
}

func (e TemplateTableCellImageScalingConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableCellImageScalingConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableCellImageScalingConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTableCellImageScalingConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTableCellImageScalingConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateTableCellImageScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableCellImageScalingConfiguration)(nil)).Elem()
}

func (o TemplateTableCellImageScalingConfigurationOutput) ToTemplateTableCellImageScalingConfigurationOutput() TemplateTableCellImageScalingConfigurationOutput {
	return o
}

func (o TemplateTableCellImageScalingConfigurationOutput) ToTemplateTableCellImageScalingConfigurationOutputWithContext(ctx context.Context) TemplateTableCellImageScalingConfigurationOutput {
	return o
}

func (o TemplateTableCellImageScalingConfigurationOutput) ToTemplateTableCellImageScalingConfigurationPtrOutput() TemplateTableCellImageScalingConfigurationPtrOutput {
	return o.ToTemplateTableCellImageScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateTableCellImageScalingConfigurationOutput) ToTemplateTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableCellImageScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableCellImageScalingConfiguration) *TemplateTableCellImageScalingConfiguration {
		return &v
	}).(TemplateTableCellImageScalingConfigurationPtrOutput)
}

func (o TemplateTableCellImageScalingConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTableCellImageScalingConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableCellImageScalingConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTableCellImageScalingConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableCellImageScalingConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableCellImageScalingConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTableCellImageScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableCellImageScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableCellImageScalingConfiguration)(nil)).Elem()
}

func (o TemplateTableCellImageScalingConfigurationPtrOutput) ToTemplateTableCellImageScalingConfigurationPtrOutput() TemplateTableCellImageScalingConfigurationPtrOutput {
	return o
}

func (o TemplateTableCellImageScalingConfigurationPtrOutput) ToTemplateTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableCellImageScalingConfigurationPtrOutput {
	return o
}

func (o TemplateTableCellImageScalingConfigurationPtrOutput) Elem() TemplateTableCellImageScalingConfigurationOutput {
	return o.ApplyT(func(v *TemplateTableCellImageScalingConfiguration) TemplateTableCellImageScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateTableCellImageScalingConfiguration
		return ret
	}).(TemplateTableCellImageScalingConfigurationOutput)
}

func (o TemplateTableCellImageScalingConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableCellImageScalingConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTableCellImageScalingConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTableCellImageScalingConfigurationInput is an input type that accepts values of the TemplateTableCellImageScalingConfiguration enum
// A concrete instance of `TemplateTableCellImageScalingConfigurationInput` can be one of the following:
//
//	TemplateTableCellImageScalingConfigurationFitToCellHeight
//	TemplateTableCellImageScalingConfigurationFitToCellWidth
//	TemplateTableCellImageScalingConfigurationDoNotScale
type TemplateTableCellImageScalingConfigurationInput interface {
	pulumi.Input

	ToTemplateTableCellImageScalingConfigurationOutput() TemplateTableCellImageScalingConfigurationOutput
	ToTemplateTableCellImageScalingConfigurationOutputWithContext(context.Context) TemplateTableCellImageScalingConfigurationOutput
}

var templateTableCellImageScalingConfigurationPtrType = reflect.TypeOf((**TemplateTableCellImageScalingConfiguration)(nil)).Elem()

type TemplateTableCellImageScalingConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateTableCellImageScalingConfigurationPtrOutput() TemplateTableCellImageScalingConfigurationPtrOutput
	ToTemplateTableCellImageScalingConfigurationPtrOutputWithContext(context.Context) TemplateTableCellImageScalingConfigurationPtrOutput
}

type templateTableCellImageScalingConfigurationPtr string

func TemplateTableCellImageScalingConfigurationPtr(v string) TemplateTableCellImageScalingConfigurationPtrInput {
	return (*templateTableCellImageScalingConfigurationPtr)(&v)
}

func (*templateTableCellImageScalingConfigurationPtr) ElementType() reflect.Type {
	return templateTableCellImageScalingConfigurationPtrType
}

func (in *templateTableCellImageScalingConfigurationPtr) ToTemplateTableCellImageScalingConfigurationPtrOutput() TemplateTableCellImageScalingConfigurationPtrOutput {
	return pulumi.ToOutput(in).(TemplateTableCellImageScalingConfigurationPtrOutput)
}

func (in *templateTableCellImageScalingConfigurationPtr) ToTemplateTableCellImageScalingConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableCellImageScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTableCellImageScalingConfigurationPtrOutput)
}

type TemplateTableFieldIconSetType string

const (
	TemplateTableFieldIconSetTypeLink = TemplateTableFieldIconSetType("LINK")
)

func (TemplateTableFieldIconSetType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldIconSetType)(nil)).Elem()
}

func (e TemplateTableFieldIconSetType) ToTemplateTableFieldIconSetTypeOutput() TemplateTableFieldIconSetTypeOutput {
	return pulumi.ToOutput(e).(TemplateTableFieldIconSetTypeOutput)
}

func (e TemplateTableFieldIconSetType) ToTemplateTableFieldIconSetTypeOutputWithContext(ctx context.Context) TemplateTableFieldIconSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTableFieldIconSetTypeOutput)
}

func (e TemplateTableFieldIconSetType) ToTemplateTableFieldIconSetTypePtrOutput() TemplateTableFieldIconSetTypePtrOutput {
	return e.ToTemplateTableFieldIconSetTypePtrOutputWithContext(context.Background())
}

func (e TemplateTableFieldIconSetType) ToTemplateTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) TemplateTableFieldIconSetTypePtrOutput {
	return TemplateTableFieldIconSetType(e).ToTemplateTableFieldIconSetTypeOutputWithContext(ctx).ToTemplateTableFieldIconSetTypePtrOutputWithContext(ctx)
}

func (e TemplateTableFieldIconSetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableFieldIconSetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableFieldIconSetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTableFieldIconSetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTableFieldIconSetTypeOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldIconSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldIconSetType)(nil)).Elem()
}

func (o TemplateTableFieldIconSetTypeOutput) ToTemplateTableFieldIconSetTypeOutput() TemplateTableFieldIconSetTypeOutput {
	return o
}

func (o TemplateTableFieldIconSetTypeOutput) ToTemplateTableFieldIconSetTypeOutputWithContext(ctx context.Context) TemplateTableFieldIconSetTypeOutput {
	return o
}

func (o TemplateTableFieldIconSetTypeOutput) ToTemplateTableFieldIconSetTypePtrOutput() TemplateTableFieldIconSetTypePtrOutput {
	return o.ToTemplateTableFieldIconSetTypePtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldIconSetTypeOutput) ToTemplateTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) TemplateTableFieldIconSetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableFieldIconSetType) *TemplateTableFieldIconSetType {
		return &v
	}).(TemplateTableFieldIconSetTypePtrOutput)
}

func (o TemplateTableFieldIconSetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTableFieldIconSetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableFieldIconSetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTableFieldIconSetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldIconSetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableFieldIconSetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTableFieldIconSetTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldIconSetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldIconSetType)(nil)).Elem()
}

func (o TemplateTableFieldIconSetTypePtrOutput) ToTemplateTableFieldIconSetTypePtrOutput() TemplateTableFieldIconSetTypePtrOutput {
	return o
}

func (o TemplateTableFieldIconSetTypePtrOutput) ToTemplateTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) TemplateTableFieldIconSetTypePtrOutput {
	return o
}

func (o TemplateTableFieldIconSetTypePtrOutput) Elem() TemplateTableFieldIconSetTypeOutput {
	return o.ApplyT(func(v *TemplateTableFieldIconSetType) TemplateTableFieldIconSetType {
		if v != nil {
			return *v
		}
		var ret TemplateTableFieldIconSetType
		return ret
	}).(TemplateTableFieldIconSetTypeOutput)
}

func (o TemplateTableFieldIconSetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldIconSetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTableFieldIconSetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTableFieldIconSetTypeInput is an input type that accepts values of the TemplateTableFieldIconSetType enum
// A concrete instance of `TemplateTableFieldIconSetTypeInput` can be one of the following:
//
//	TemplateTableFieldIconSetTypeLink
type TemplateTableFieldIconSetTypeInput interface {
	pulumi.Input

	ToTemplateTableFieldIconSetTypeOutput() TemplateTableFieldIconSetTypeOutput
	ToTemplateTableFieldIconSetTypeOutputWithContext(context.Context) TemplateTableFieldIconSetTypeOutput
}

var templateTableFieldIconSetTypePtrType = reflect.TypeOf((**TemplateTableFieldIconSetType)(nil)).Elem()

type TemplateTableFieldIconSetTypePtrInput interface {
	pulumi.Input

	ToTemplateTableFieldIconSetTypePtrOutput() TemplateTableFieldIconSetTypePtrOutput
	ToTemplateTableFieldIconSetTypePtrOutputWithContext(context.Context) TemplateTableFieldIconSetTypePtrOutput
}

type templateTableFieldIconSetTypePtr string

func TemplateTableFieldIconSetTypePtr(v string) TemplateTableFieldIconSetTypePtrInput {
	return (*templateTableFieldIconSetTypePtr)(&v)
}

func (*templateTableFieldIconSetTypePtr) ElementType() reflect.Type {
	return templateTableFieldIconSetTypePtrType
}

func (in *templateTableFieldIconSetTypePtr) ToTemplateTableFieldIconSetTypePtrOutput() TemplateTableFieldIconSetTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateTableFieldIconSetTypePtrOutput)
}

func (in *templateTableFieldIconSetTypePtr) ToTemplateTableFieldIconSetTypePtrOutputWithContext(ctx context.Context) TemplateTableFieldIconSetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTableFieldIconSetTypePtrOutput)
}

type TemplateTableOrientation string

const (
	TemplateTableOrientationVertical   = TemplateTableOrientation("VERTICAL")
	TemplateTableOrientationHorizontal = TemplateTableOrientation("HORIZONTAL")
)

func (TemplateTableOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableOrientation)(nil)).Elem()
}

func (e TemplateTableOrientation) ToTemplateTableOrientationOutput() TemplateTableOrientationOutput {
	return pulumi.ToOutput(e).(TemplateTableOrientationOutput)
}

func (e TemplateTableOrientation) ToTemplateTableOrientationOutputWithContext(ctx context.Context) TemplateTableOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTableOrientationOutput)
}

func (e TemplateTableOrientation) ToTemplateTableOrientationPtrOutput() TemplateTableOrientationPtrOutput {
	return e.ToTemplateTableOrientationPtrOutputWithContext(context.Background())
}

func (e TemplateTableOrientation) ToTemplateTableOrientationPtrOutputWithContext(ctx context.Context) TemplateTableOrientationPtrOutput {
	return TemplateTableOrientation(e).ToTemplateTableOrientationOutputWithContext(ctx).ToTemplateTableOrientationPtrOutputWithContext(ctx)
}

func (e TemplateTableOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTableOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTableOrientationOutput struct{ *pulumi.OutputState }

func (TemplateTableOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableOrientation)(nil)).Elem()
}

func (o TemplateTableOrientationOutput) ToTemplateTableOrientationOutput() TemplateTableOrientationOutput {
	return o
}

func (o TemplateTableOrientationOutput) ToTemplateTableOrientationOutputWithContext(ctx context.Context) TemplateTableOrientationOutput {
	return o
}

func (o TemplateTableOrientationOutput) ToTemplateTableOrientationPtrOutput() TemplateTableOrientationPtrOutput {
	return o.ToTemplateTableOrientationPtrOutputWithContext(context.Background())
}

func (o TemplateTableOrientationOutput) ToTemplateTableOrientationPtrOutputWithContext(ctx context.Context) TemplateTableOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableOrientation) *TemplateTableOrientation {
		return &v
	}).(TemplateTableOrientationPtrOutput)
}

func (o TemplateTableOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTableOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTableOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTableOrientationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableOrientation)(nil)).Elem()
}

func (o TemplateTableOrientationPtrOutput) ToTemplateTableOrientationPtrOutput() TemplateTableOrientationPtrOutput {
	return o
}

func (o TemplateTableOrientationPtrOutput) ToTemplateTableOrientationPtrOutputWithContext(ctx context.Context) TemplateTableOrientationPtrOutput {
	return o
}

func (o TemplateTableOrientationPtrOutput) Elem() TemplateTableOrientationOutput {
	return o.ApplyT(func(v *TemplateTableOrientation) TemplateTableOrientation {
		if v != nil {
			return *v
		}
		var ret TemplateTableOrientation
		return ret
	}).(TemplateTableOrientationOutput)
}

func (o TemplateTableOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTableOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTableOrientationInput is an input type that accepts values of the TemplateTableOrientation enum
// A concrete instance of `TemplateTableOrientationInput` can be one of the following:
//
//	TemplateTableOrientationVertical
//	TemplateTableOrientationHorizontal
type TemplateTableOrientationInput interface {
	pulumi.Input

	ToTemplateTableOrientationOutput() TemplateTableOrientationOutput
	ToTemplateTableOrientationOutputWithContext(context.Context) TemplateTableOrientationOutput
}

var templateTableOrientationPtrType = reflect.TypeOf((**TemplateTableOrientation)(nil)).Elem()

type TemplateTableOrientationPtrInput interface {
	pulumi.Input

	ToTemplateTableOrientationPtrOutput() TemplateTableOrientationPtrOutput
	ToTemplateTableOrientationPtrOutputWithContext(context.Context) TemplateTableOrientationPtrOutput
}

type templateTableOrientationPtr string

func TemplateTableOrientationPtr(v string) TemplateTableOrientationPtrInput {
	return (*templateTableOrientationPtr)(&v)
}

func (*templateTableOrientationPtr) ElementType() reflect.Type {
	return templateTableOrientationPtrType
}

func (in *templateTableOrientationPtr) ToTemplateTableOrientationPtrOutput() TemplateTableOrientationPtrOutput {
	return pulumi.ToOutput(in).(TemplateTableOrientationPtrOutput)
}

func (in *templateTableOrientationPtr) ToTemplateTableOrientationPtrOutputWithContext(ctx context.Context) TemplateTableOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTableOrientationPtrOutput)
}

type TemplateTableTotalsPlacement string

const (
	TemplateTableTotalsPlacementStart = TemplateTableTotalsPlacement("START")
	TemplateTableTotalsPlacementEnd   = TemplateTableTotalsPlacement("END")
	TemplateTableTotalsPlacementAuto  = TemplateTableTotalsPlacement("AUTO")
)

func (TemplateTableTotalsPlacement) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableTotalsPlacement)(nil)).Elem()
}

func (e TemplateTableTotalsPlacement) ToTemplateTableTotalsPlacementOutput() TemplateTableTotalsPlacementOutput {
	return pulumi.ToOutput(e).(TemplateTableTotalsPlacementOutput)
}

func (e TemplateTableTotalsPlacement) ToTemplateTableTotalsPlacementOutputWithContext(ctx context.Context) TemplateTableTotalsPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTableTotalsPlacementOutput)
}

func (e TemplateTableTotalsPlacement) ToTemplateTableTotalsPlacementPtrOutput() TemplateTableTotalsPlacementPtrOutput {
	return e.ToTemplateTableTotalsPlacementPtrOutputWithContext(context.Background())
}

func (e TemplateTableTotalsPlacement) ToTemplateTableTotalsPlacementPtrOutputWithContext(ctx context.Context) TemplateTableTotalsPlacementPtrOutput {
	return TemplateTableTotalsPlacement(e).ToTemplateTableTotalsPlacementOutputWithContext(ctx).ToTemplateTableTotalsPlacementPtrOutputWithContext(ctx)
}

func (e TemplateTableTotalsPlacement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableTotalsPlacement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableTotalsPlacement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTableTotalsPlacement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTableTotalsPlacementOutput struct{ *pulumi.OutputState }

func (TemplateTableTotalsPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableTotalsPlacement)(nil)).Elem()
}

func (o TemplateTableTotalsPlacementOutput) ToTemplateTableTotalsPlacementOutput() TemplateTableTotalsPlacementOutput {
	return o
}

func (o TemplateTableTotalsPlacementOutput) ToTemplateTableTotalsPlacementOutputWithContext(ctx context.Context) TemplateTableTotalsPlacementOutput {
	return o
}

func (o TemplateTableTotalsPlacementOutput) ToTemplateTableTotalsPlacementPtrOutput() TemplateTableTotalsPlacementPtrOutput {
	return o.ToTemplateTableTotalsPlacementPtrOutputWithContext(context.Background())
}

func (o TemplateTableTotalsPlacementOutput) ToTemplateTableTotalsPlacementPtrOutputWithContext(ctx context.Context) TemplateTableTotalsPlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableTotalsPlacement) *TemplateTableTotalsPlacement {
		return &v
	}).(TemplateTableTotalsPlacementPtrOutput)
}

func (o TemplateTableTotalsPlacementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTableTotalsPlacementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableTotalsPlacement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTableTotalsPlacementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableTotalsPlacementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableTotalsPlacement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTableTotalsPlacementPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableTotalsPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableTotalsPlacement)(nil)).Elem()
}

func (o TemplateTableTotalsPlacementPtrOutput) ToTemplateTableTotalsPlacementPtrOutput() TemplateTableTotalsPlacementPtrOutput {
	return o
}

func (o TemplateTableTotalsPlacementPtrOutput) ToTemplateTableTotalsPlacementPtrOutputWithContext(ctx context.Context) TemplateTableTotalsPlacementPtrOutput {
	return o
}

func (o TemplateTableTotalsPlacementPtrOutput) Elem() TemplateTableTotalsPlacementOutput {
	return o.ApplyT(func(v *TemplateTableTotalsPlacement) TemplateTableTotalsPlacement {
		if v != nil {
			return *v
		}
		var ret TemplateTableTotalsPlacement
		return ret
	}).(TemplateTableTotalsPlacementOutput)
}

func (o TemplateTableTotalsPlacementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableTotalsPlacementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTableTotalsPlacement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTableTotalsPlacementInput is an input type that accepts values of the TemplateTableTotalsPlacement enum
// A concrete instance of `TemplateTableTotalsPlacementInput` can be one of the following:
//
//	TemplateTableTotalsPlacementStart
//	TemplateTableTotalsPlacementEnd
//	TemplateTableTotalsPlacementAuto
type TemplateTableTotalsPlacementInput interface {
	pulumi.Input

	ToTemplateTableTotalsPlacementOutput() TemplateTableTotalsPlacementOutput
	ToTemplateTableTotalsPlacementOutputWithContext(context.Context) TemplateTableTotalsPlacementOutput
}

var templateTableTotalsPlacementPtrType = reflect.TypeOf((**TemplateTableTotalsPlacement)(nil)).Elem()

type TemplateTableTotalsPlacementPtrInput interface {
	pulumi.Input

	ToTemplateTableTotalsPlacementPtrOutput() TemplateTableTotalsPlacementPtrOutput
	ToTemplateTableTotalsPlacementPtrOutputWithContext(context.Context) TemplateTableTotalsPlacementPtrOutput
}

type templateTableTotalsPlacementPtr string

func TemplateTableTotalsPlacementPtr(v string) TemplateTableTotalsPlacementPtrInput {
	return (*templateTableTotalsPlacementPtr)(&v)
}

func (*templateTableTotalsPlacementPtr) ElementType() reflect.Type {
	return templateTableTotalsPlacementPtrType
}

func (in *templateTableTotalsPlacementPtr) ToTemplateTableTotalsPlacementPtrOutput() TemplateTableTotalsPlacementPtrOutput {
	return pulumi.ToOutput(in).(TemplateTableTotalsPlacementPtrOutput)
}

func (in *templateTableTotalsPlacementPtr) ToTemplateTableTotalsPlacementPtrOutputWithContext(ctx context.Context) TemplateTableTotalsPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTableTotalsPlacementPtrOutput)
}

type TemplateTableTotalsScrollStatus string

const (
	TemplateTableTotalsScrollStatusPinned   = TemplateTableTotalsScrollStatus("PINNED")
	TemplateTableTotalsScrollStatusScrolled = TemplateTableTotalsScrollStatus("SCROLLED")
)

func (TemplateTableTotalsScrollStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableTotalsScrollStatus)(nil)).Elem()
}

func (e TemplateTableTotalsScrollStatus) ToTemplateTableTotalsScrollStatusOutput() TemplateTableTotalsScrollStatusOutput {
	return pulumi.ToOutput(e).(TemplateTableTotalsScrollStatusOutput)
}

func (e TemplateTableTotalsScrollStatus) ToTemplateTableTotalsScrollStatusOutputWithContext(ctx context.Context) TemplateTableTotalsScrollStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTableTotalsScrollStatusOutput)
}

func (e TemplateTableTotalsScrollStatus) ToTemplateTableTotalsScrollStatusPtrOutput() TemplateTableTotalsScrollStatusPtrOutput {
	return e.ToTemplateTableTotalsScrollStatusPtrOutputWithContext(context.Background())
}

func (e TemplateTableTotalsScrollStatus) ToTemplateTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) TemplateTableTotalsScrollStatusPtrOutput {
	return TemplateTableTotalsScrollStatus(e).ToTemplateTableTotalsScrollStatusOutputWithContext(ctx).ToTemplateTableTotalsScrollStatusPtrOutputWithContext(ctx)
}

func (e TemplateTableTotalsScrollStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableTotalsScrollStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTableTotalsScrollStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTableTotalsScrollStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTableTotalsScrollStatusOutput struct{ *pulumi.OutputState }

func (TemplateTableTotalsScrollStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableTotalsScrollStatus)(nil)).Elem()
}

func (o TemplateTableTotalsScrollStatusOutput) ToTemplateTableTotalsScrollStatusOutput() TemplateTableTotalsScrollStatusOutput {
	return o
}

func (o TemplateTableTotalsScrollStatusOutput) ToTemplateTableTotalsScrollStatusOutputWithContext(ctx context.Context) TemplateTableTotalsScrollStatusOutput {
	return o
}

func (o TemplateTableTotalsScrollStatusOutput) ToTemplateTableTotalsScrollStatusPtrOutput() TemplateTableTotalsScrollStatusPtrOutput {
	return o.ToTemplateTableTotalsScrollStatusPtrOutputWithContext(context.Background())
}

func (o TemplateTableTotalsScrollStatusOutput) ToTemplateTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) TemplateTableTotalsScrollStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableTotalsScrollStatus) *TemplateTableTotalsScrollStatus {
		return &v
	}).(TemplateTableTotalsScrollStatusPtrOutput)
}

func (o TemplateTableTotalsScrollStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTableTotalsScrollStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableTotalsScrollStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTableTotalsScrollStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableTotalsScrollStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTableTotalsScrollStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTableTotalsScrollStatusPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableTotalsScrollStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableTotalsScrollStatus)(nil)).Elem()
}

func (o TemplateTableTotalsScrollStatusPtrOutput) ToTemplateTableTotalsScrollStatusPtrOutput() TemplateTableTotalsScrollStatusPtrOutput {
	return o
}

func (o TemplateTableTotalsScrollStatusPtrOutput) ToTemplateTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) TemplateTableTotalsScrollStatusPtrOutput {
	return o
}

func (o TemplateTableTotalsScrollStatusPtrOutput) Elem() TemplateTableTotalsScrollStatusOutput {
	return o.ApplyT(func(v *TemplateTableTotalsScrollStatus) TemplateTableTotalsScrollStatus {
		if v != nil {
			return *v
		}
		var ret TemplateTableTotalsScrollStatus
		return ret
	}).(TemplateTableTotalsScrollStatusOutput)
}

func (o TemplateTableTotalsScrollStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTableTotalsScrollStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTableTotalsScrollStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTableTotalsScrollStatusInput is an input type that accepts values of the TemplateTableTotalsScrollStatus enum
// A concrete instance of `TemplateTableTotalsScrollStatusInput` can be one of the following:
//
//	TemplateTableTotalsScrollStatusPinned
//	TemplateTableTotalsScrollStatusScrolled
type TemplateTableTotalsScrollStatusInput interface {
	pulumi.Input

	ToTemplateTableTotalsScrollStatusOutput() TemplateTableTotalsScrollStatusOutput
	ToTemplateTableTotalsScrollStatusOutputWithContext(context.Context) TemplateTableTotalsScrollStatusOutput
}

var templateTableTotalsScrollStatusPtrType = reflect.TypeOf((**TemplateTableTotalsScrollStatus)(nil)).Elem()

type TemplateTableTotalsScrollStatusPtrInput interface {
	pulumi.Input

	ToTemplateTableTotalsScrollStatusPtrOutput() TemplateTableTotalsScrollStatusPtrOutput
	ToTemplateTableTotalsScrollStatusPtrOutputWithContext(context.Context) TemplateTableTotalsScrollStatusPtrOutput
}

type templateTableTotalsScrollStatusPtr string

func TemplateTableTotalsScrollStatusPtr(v string) TemplateTableTotalsScrollStatusPtrInput {
	return (*templateTableTotalsScrollStatusPtr)(&v)
}

func (*templateTableTotalsScrollStatusPtr) ElementType() reflect.Type {
	return templateTableTotalsScrollStatusPtrType
}

func (in *templateTableTotalsScrollStatusPtr) ToTemplateTableTotalsScrollStatusPtrOutput() TemplateTableTotalsScrollStatusPtrOutput {
	return pulumi.ToOutput(in).(TemplateTableTotalsScrollStatusPtrOutput)
}

func (in *templateTableTotalsScrollStatusPtr) ToTemplateTableTotalsScrollStatusPtrOutputWithContext(ctx context.Context) TemplateTableTotalsScrollStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTableTotalsScrollStatusPtrOutput)
}

type TemplateTargetVisualOptions string

const (
	TemplateTargetVisualOptionsAllVisuals = TemplateTargetVisualOptions("ALL_VISUALS")
)

func (TemplateTargetVisualOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTargetVisualOptions)(nil)).Elem()
}

func (e TemplateTargetVisualOptions) ToTemplateTargetVisualOptionsOutput() TemplateTargetVisualOptionsOutput {
	return pulumi.ToOutput(e).(TemplateTargetVisualOptionsOutput)
}

func (e TemplateTargetVisualOptions) ToTemplateTargetVisualOptionsOutputWithContext(ctx context.Context) TemplateTargetVisualOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTargetVisualOptionsOutput)
}

func (e TemplateTargetVisualOptions) ToTemplateTargetVisualOptionsPtrOutput() TemplateTargetVisualOptionsPtrOutput {
	return e.ToTemplateTargetVisualOptionsPtrOutputWithContext(context.Background())
}

func (e TemplateTargetVisualOptions) ToTemplateTargetVisualOptionsPtrOutputWithContext(ctx context.Context) TemplateTargetVisualOptionsPtrOutput {
	return TemplateTargetVisualOptions(e).ToTemplateTargetVisualOptionsOutputWithContext(ctx).ToTemplateTargetVisualOptionsPtrOutputWithContext(ctx)
}

func (e TemplateTargetVisualOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTargetVisualOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTargetVisualOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTargetVisualOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTargetVisualOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTargetVisualOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTargetVisualOptions)(nil)).Elem()
}

func (o TemplateTargetVisualOptionsOutput) ToTemplateTargetVisualOptionsOutput() TemplateTargetVisualOptionsOutput {
	return o
}

func (o TemplateTargetVisualOptionsOutput) ToTemplateTargetVisualOptionsOutputWithContext(ctx context.Context) TemplateTargetVisualOptionsOutput {
	return o
}

func (o TemplateTargetVisualOptionsOutput) ToTemplateTargetVisualOptionsPtrOutput() TemplateTargetVisualOptionsPtrOutput {
	return o.ToTemplateTargetVisualOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTargetVisualOptionsOutput) ToTemplateTargetVisualOptionsPtrOutputWithContext(ctx context.Context) TemplateTargetVisualOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTargetVisualOptions) *TemplateTargetVisualOptions {
		return &v
	}).(TemplateTargetVisualOptionsPtrOutput)
}

func (o TemplateTargetVisualOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTargetVisualOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTargetVisualOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTargetVisualOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTargetVisualOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTargetVisualOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTargetVisualOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTargetVisualOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTargetVisualOptions)(nil)).Elem()
}

func (o TemplateTargetVisualOptionsPtrOutput) ToTemplateTargetVisualOptionsPtrOutput() TemplateTargetVisualOptionsPtrOutput {
	return o
}

func (o TemplateTargetVisualOptionsPtrOutput) ToTemplateTargetVisualOptionsPtrOutputWithContext(ctx context.Context) TemplateTargetVisualOptionsPtrOutput {
	return o
}

func (o TemplateTargetVisualOptionsPtrOutput) Elem() TemplateTargetVisualOptionsOutput {
	return o.ApplyT(func(v *TemplateTargetVisualOptions) TemplateTargetVisualOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTargetVisualOptions
		return ret
	}).(TemplateTargetVisualOptionsOutput)
}

func (o TemplateTargetVisualOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTargetVisualOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTargetVisualOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTargetVisualOptionsInput is an input type that accepts values of the TemplateTargetVisualOptions enum
// A concrete instance of `TemplateTargetVisualOptionsInput` can be one of the following:
//
//	TemplateTargetVisualOptionsAllVisuals
type TemplateTargetVisualOptionsInput interface {
	pulumi.Input

	ToTemplateTargetVisualOptionsOutput() TemplateTargetVisualOptionsOutput
	ToTemplateTargetVisualOptionsOutputWithContext(context.Context) TemplateTargetVisualOptionsOutput
}

var templateTargetVisualOptionsPtrType = reflect.TypeOf((**TemplateTargetVisualOptions)(nil)).Elem()

type TemplateTargetVisualOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTargetVisualOptionsPtrOutput() TemplateTargetVisualOptionsPtrOutput
	ToTemplateTargetVisualOptionsPtrOutputWithContext(context.Context) TemplateTargetVisualOptionsPtrOutput
}

type templateTargetVisualOptionsPtr string

func TemplateTargetVisualOptionsPtr(v string) TemplateTargetVisualOptionsPtrInput {
	return (*templateTargetVisualOptionsPtr)(&v)
}

func (*templateTargetVisualOptionsPtr) ElementType() reflect.Type {
	return templateTargetVisualOptionsPtrType
}

func (in *templateTargetVisualOptionsPtr) ToTemplateTargetVisualOptionsPtrOutput() TemplateTargetVisualOptionsPtrOutput {
	return pulumi.ToOutput(in).(TemplateTargetVisualOptionsPtrOutput)
}

func (in *templateTargetVisualOptionsPtr) ToTemplateTargetVisualOptionsPtrOutputWithContext(ctx context.Context) TemplateTargetVisualOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTargetVisualOptionsPtrOutput)
}

type TemplateTextWrap string

const (
	TemplateTextWrapNone = TemplateTextWrap("NONE")
	TemplateTextWrapWrap = TemplateTextWrap("WRAP")
)

func (TemplateTextWrap) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTextWrap)(nil)).Elem()
}

func (e TemplateTextWrap) ToTemplateTextWrapOutput() TemplateTextWrapOutput {
	return pulumi.ToOutput(e).(TemplateTextWrapOutput)
}

func (e TemplateTextWrap) ToTemplateTextWrapOutputWithContext(ctx context.Context) TemplateTextWrapOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTextWrapOutput)
}

func (e TemplateTextWrap) ToTemplateTextWrapPtrOutput() TemplateTextWrapPtrOutput {
	return e.ToTemplateTextWrapPtrOutputWithContext(context.Background())
}

func (e TemplateTextWrap) ToTemplateTextWrapPtrOutputWithContext(ctx context.Context) TemplateTextWrapPtrOutput {
	return TemplateTextWrap(e).ToTemplateTextWrapOutputWithContext(ctx).ToTemplateTextWrapPtrOutputWithContext(ctx)
}

func (e TemplateTextWrap) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTextWrap) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTextWrap) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTextWrap) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTextWrapOutput struct{ *pulumi.OutputState }

func (TemplateTextWrapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTextWrap)(nil)).Elem()
}

func (o TemplateTextWrapOutput) ToTemplateTextWrapOutput() TemplateTextWrapOutput {
	return o
}

func (o TemplateTextWrapOutput) ToTemplateTextWrapOutputWithContext(ctx context.Context) TemplateTextWrapOutput {
	return o
}

func (o TemplateTextWrapOutput) ToTemplateTextWrapPtrOutput() TemplateTextWrapPtrOutput {
	return o.ToTemplateTextWrapPtrOutputWithContext(context.Background())
}

func (o TemplateTextWrapOutput) ToTemplateTextWrapPtrOutputWithContext(ctx context.Context) TemplateTextWrapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTextWrap) *TemplateTextWrap {
		return &v
	}).(TemplateTextWrapPtrOutput)
}

func (o TemplateTextWrapOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTextWrapOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTextWrap) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTextWrapOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTextWrapOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTextWrap) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTextWrapPtrOutput struct{ *pulumi.OutputState }

func (TemplateTextWrapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTextWrap)(nil)).Elem()
}

func (o TemplateTextWrapPtrOutput) ToTemplateTextWrapPtrOutput() TemplateTextWrapPtrOutput {
	return o
}

func (o TemplateTextWrapPtrOutput) ToTemplateTextWrapPtrOutputWithContext(ctx context.Context) TemplateTextWrapPtrOutput {
	return o
}

func (o TemplateTextWrapPtrOutput) Elem() TemplateTextWrapOutput {
	return o.ApplyT(func(v *TemplateTextWrap) TemplateTextWrap {
		if v != nil {
			return *v
		}
		var ret TemplateTextWrap
		return ret
	}).(TemplateTextWrapOutput)
}

func (o TemplateTextWrapPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTextWrapPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTextWrap) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTextWrapInput is an input type that accepts values of the TemplateTextWrap enum
// A concrete instance of `TemplateTextWrapInput` can be one of the following:
//
//	TemplateTextWrapNone
//	TemplateTextWrapWrap
type TemplateTextWrapInput interface {
	pulumi.Input

	ToTemplateTextWrapOutput() TemplateTextWrapOutput
	ToTemplateTextWrapOutputWithContext(context.Context) TemplateTextWrapOutput
}

var templateTextWrapPtrType = reflect.TypeOf((**TemplateTextWrap)(nil)).Elem()

type TemplateTextWrapPtrInput interface {
	pulumi.Input

	ToTemplateTextWrapPtrOutput() TemplateTextWrapPtrOutput
	ToTemplateTextWrapPtrOutputWithContext(context.Context) TemplateTextWrapPtrOutput
}

type templateTextWrapPtr string

func TemplateTextWrapPtr(v string) TemplateTextWrapPtrInput {
	return (*templateTextWrapPtr)(&v)
}

func (*templateTextWrapPtr) ElementType() reflect.Type {
	return templateTextWrapPtrType
}

func (in *templateTextWrapPtr) ToTemplateTextWrapPtrOutput() TemplateTextWrapPtrOutput {
	return pulumi.ToOutput(in).(TemplateTextWrapPtrOutput)
}

func (in *templateTextWrapPtr) ToTemplateTextWrapPtrOutputWithContext(ctx context.Context) TemplateTextWrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTextWrapPtrOutput)
}

type TemplateTimeGranularity string

const (
	TemplateTimeGranularityYear        = TemplateTimeGranularity("YEAR")
	TemplateTimeGranularityQuarter     = TemplateTimeGranularity("QUARTER")
	TemplateTimeGranularityMonth       = TemplateTimeGranularity("MONTH")
	TemplateTimeGranularityWeek        = TemplateTimeGranularity("WEEK")
	TemplateTimeGranularityDay         = TemplateTimeGranularity("DAY")
	TemplateTimeGranularityHour        = TemplateTimeGranularity("HOUR")
	TemplateTimeGranularityMinute      = TemplateTimeGranularity("MINUTE")
	TemplateTimeGranularitySecond      = TemplateTimeGranularity("SECOND")
	TemplateTimeGranularityMillisecond = TemplateTimeGranularity("MILLISECOND")
)

func (TemplateTimeGranularity) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeGranularity)(nil)).Elem()
}

func (e TemplateTimeGranularity) ToTemplateTimeGranularityOutput() TemplateTimeGranularityOutput {
	return pulumi.ToOutput(e).(TemplateTimeGranularityOutput)
}

func (e TemplateTimeGranularity) ToTemplateTimeGranularityOutputWithContext(ctx context.Context) TemplateTimeGranularityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTimeGranularityOutput)
}

func (e TemplateTimeGranularity) ToTemplateTimeGranularityPtrOutput() TemplateTimeGranularityPtrOutput {
	return e.ToTemplateTimeGranularityPtrOutputWithContext(context.Background())
}

func (e TemplateTimeGranularity) ToTemplateTimeGranularityPtrOutputWithContext(ctx context.Context) TemplateTimeGranularityPtrOutput {
	return TemplateTimeGranularity(e).ToTemplateTimeGranularityOutputWithContext(ctx).ToTemplateTimeGranularityPtrOutputWithContext(ctx)
}

func (e TemplateTimeGranularity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTimeGranularity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTimeGranularity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTimeGranularity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTimeGranularityOutput struct{ *pulumi.OutputState }

func (TemplateTimeGranularityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeGranularity)(nil)).Elem()
}

func (o TemplateTimeGranularityOutput) ToTemplateTimeGranularityOutput() TemplateTimeGranularityOutput {
	return o
}

func (o TemplateTimeGranularityOutput) ToTemplateTimeGranularityOutputWithContext(ctx context.Context) TemplateTimeGranularityOutput {
	return o
}

func (o TemplateTimeGranularityOutput) ToTemplateTimeGranularityPtrOutput() TemplateTimeGranularityPtrOutput {
	return o.ToTemplateTimeGranularityPtrOutputWithContext(context.Background())
}

func (o TemplateTimeGranularityOutput) ToTemplateTimeGranularityPtrOutputWithContext(ctx context.Context) TemplateTimeGranularityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTimeGranularity) *TemplateTimeGranularity {
		return &v
	}).(TemplateTimeGranularityPtrOutput)
}

func (o TemplateTimeGranularityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTimeGranularityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTimeGranularity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTimeGranularityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTimeGranularityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTimeGranularity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTimeGranularityPtrOutput struct{ *pulumi.OutputState }

func (TemplateTimeGranularityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeGranularity)(nil)).Elem()
}

func (o TemplateTimeGranularityPtrOutput) ToTemplateTimeGranularityPtrOutput() TemplateTimeGranularityPtrOutput {
	return o
}

func (o TemplateTimeGranularityPtrOutput) ToTemplateTimeGranularityPtrOutputWithContext(ctx context.Context) TemplateTimeGranularityPtrOutput {
	return o
}

func (o TemplateTimeGranularityPtrOutput) Elem() TemplateTimeGranularityOutput {
	return o.ApplyT(func(v *TemplateTimeGranularity) TemplateTimeGranularity {
		if v != nil {
			return *v
		}
		var ret TemplateTimeGranularity
		return ret
	}).(TemplateTimeGranularityOutput)
}

func (o TemplateTimeGranularityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTimeGranularityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTimeGranularity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTimeGranularityInput is an input type that accepts values of the TemplateTimeGranularity enum
// A concrete instance of `TemplateTimeGranularityInput` can be one of the following:
//
//	TemplateTimeGranularityYear
//	TemplateTimeGranularityQuarter
//	TemplateTimeGranularityMonth
//	TemplateTimeGranularityWeek
//	TemplateTimeGranularityDay
//	TemplateTimeGranularityHour
//	TemplateTimeGranularityMinute
//	TemplateTimeGranularitySecond
//	TemplateTimeGranularityMillisecond
type TemplateTimeGranularityInput interface {
	pulumi.Input

	ToTemplateTimeGranularityOutput() TemplateTimeGranularityOutput
	ToTemplateTimeGranularityOutputWithContext(context.Context) TemplateTimeGranularityOutput
}

var templateTimeGranularityPtrType = reflect.TypeOf((**TemplateTimeGranularity)(nil)).Elem()

type TemplateTimeGranularityPtrInput interface {
	pulumi.Input

	ToTemplateTimeGranularityPtrOutput() TemplateTimeGranularityPtrOutput
	ToTemplateTimeGranularityPtrOutputWithContext(context.Context) TemplateTimeGranularityPtrOutput
}

type templateTimeGranularityPtr string

func TemplateTimeGranularityPtr(v string) TemplateTimeGranularityPtrInput {
	return (*templateTimeGranularityPtr)(&v)
}

func (*templateTimeGranularityPtr) ElementType() reflect.Type {
	return templateTimeGranularityPtrType
}

func (in *templateTimeGranularityPtr) ToTemplateTimeGranularityPtrOutput() TemplateTimeGranularityPtrOutput {
	return pulumi.ToOutput(in).(TemplateTimeGranularityPtrOutput)
}

func (in *templateTimeGranularityPtr) ToTemplateTimeGranularityPtrOutputWithContext(ctx context.Context) TemplateTimeGranularityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTimeGranularityPtrOutput)
}

type TemplateTooltipTitleType string

const (
	TemplateTooltipTitleTypeNone         = TemplateTooltipTitleType("NONE")
	TemplateTooltipTitleTypePrimaryValue = TemplateTooltipTitleType("PRIMARY_VALUE")
)

func (TemplateTooltipTitleType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTooltipTitleType)(nil)).Elem()
}

func (e TemplateTooltipTitleType) ToTemplateTooltipTitleTypeOutput() TemplateTooltipTitleTypeOutput {
	return pulumi.ToOutput(e).(TemplateTooltipTitleTypeOutput)
}

func (e TemplateTooltipTitleType) ToTemplateTooltipTitleTypeOutputWithContext(ctx context.Context) TemplateTooltipTitleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTooltipTitleTypeOutput)
}

func (e TemplateTooltipTitleType) ToTemplateTooltipTitleTypePtrOutput() TemplateTooltipTitleTypePtrOutput {
	return e.ToTemplateTooltipTitleTypePtrOutputWithContext(context.Background())
}

func (e TemplateTooltipTitleType) ToTemplateTooltipTitleTypePtrOutputWithContext(ctx context.Context) TemplateTooltipTitleTypePtrOutput {
	return TemplateTooltipTitleType(e).ToTemplateTooltipTitleTypeOutputWithContext(ctx).ToTemplateTooltipTitleTypePtrOutputWithContext(ctx)
}

func (e TemplateTooltipTitleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTooltipTitleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTooltipTitleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTooltipTitleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTooltipTitleTypeOutput struct{ *pulumi.OutputState }

func (TemplateTooltipTitleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTooltipTitleType)(nil)).Elem()
}

func (o TemplateTooltipTitleTypeOutput) ToTemplateTooltipTitleTypeOutput() TemplateTooltipTitleTypeOutput {
	return o
}

func (o TemplateTooltipTitleTypeOutput) ToTemplateTooltipTitleTypeOutputWithContext(ctx context.Context) TemplateTooltipTitleTypeOutput {
	return o
}

func (o TemplateTooltipTitleTypeOutput) ToTemplateTooltipTitleTypePtrOutput() TemplateTooltipTitleTypePtrOutput {
	return o.ToTemplateTooltipTitleTypePtrOutputWithContext(context.Background())
}

func (o TemplateTooltipTitleTypeOutput) ToTemplateTooltipTitleTypePtrOutputWithContext(ctx context.Context) TemplateTooltipTitleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTooltipTitleType) *TemplateTooltipTitleType {
		return &v
	}).(TemplateTooltipTitleTypePtrOutput)
}

func (o TemplateTooltipTitleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTooltipTitleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTooltipTitleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTooltipTitleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTooltipTitleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTooltipTitleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTooltipTitleTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateTooltipTitleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTooltipTitleType)(nil)).Elem()
}

func (o TemplateTooltipTitleTypePtrOutput) ToTemplateTooltipTitleTypePtrOutput() TemplateTooltipTitleTypePtrOutput {
	return o
}

func (o TemplateTooltipTitleTypePtrOutput) ToTemplateTooltipTitleTypePtrOutputWithContext(ctx context.Context) TemplateTooltipTitleTypePtrOutput {
	return o
}

func (o TemplateTooltipTitleTypePtrOutput) Elem() TemplateTooltipTitleTypeOutput {
	return o.ApplyT(func(v *TemplateTooltipTitleType) TemplateTooltipTitleType {
		if v != nil {
			return *v
		}
		var ret TemplateTooltipTitleType
		return ret
	}).(TemplateTooltipTitleTypeOutput)
}

func (o TemplateTooltipTitleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTooltipTitleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTooltipTitleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTooltipTitleTypeInput is an input type that accepts values of the TemplateTooltipTitleType enum
// A concrete instance of `TemplateTooltipTitleTypeInput` can be one of the following:
//
//	TemplateTooltipTitleTypeNone
//	TemplateTooltipTitleTypePrimaryValue
type TemplateTooltipTitleTypeInput interface {
	pulumi.Input

	ToTemplateTooltipTitleTypeOutput() TemplateTooltipTitleTypeOutput
	ToTemplateTooltipTitleTypeOutputWithContext(context.Context) TemplateTooltipTitleTypeOutput
}

var templateTooltipTitleTypePtrType = reflect.TypeOf((**TemplateTooltipTitleType)(nil)).Elem()

type TemplateTooltipTitleTypePtrInput interface {
	pulumi.Input

	ToTemplateTooltipTitleTypePtrOutput() TemplateTooltipTitleTypePtrOutput
	ToTemplateTooltipTitleTypePtrOutputWithContext(context.Context) TemplateTooltipTitleTypePtrOutput
}

type templateTooltipTitleTypePtr string

func TemplateTooltipTitleTypePtr(v string) TemplateTooltipTitleTypePtrInput {
	return (*templateTooltipTitleTypePtr)(&v)
}

func (*templateTooltipTitleTypePtr) ElementType() reflect.Type {
	return templateTooltipTitleTypePtrType
}

func (in *templateTooltipTitleTypePtr) ToTemplateTooltipTitleTypePtrOutput() TemplateTooltipTitleTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateTooltipTitleTypePtrOutput)
}

func (in *templateTooltipTitleTypePtr) ToTemplateTooltipTitleTypePtrOutputWithContext(ctx context.Context) TemplateTooltipTitleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTooltipTitleTypePtrOutput)
}

type TemplateTopBottomComputationType string

const (
	TemplateTopBottomComputationTypeTop    = TemplateTopBottomComputationType("TOP")
	TemplateTopBottomComputationTypeBottom = TemplateTopBottomComputationType("BOTTOM")
)

func (TemplateTopBottomComputationType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTopBottomComputationType)(nil)).Elem()
}

func (e TemplateTopBottomComputationType) ToTemplateTopBottomComputationTypeOutput() TemplateTopBottomComputationTypeOutput {
	return pulumi.ToOutput(e).(TemplateTopBottomComputationTypeOutput)
}

func (e TemplateTopBottomComputationType) ToTemplateTopBottomComputationTypeOutputWithContext(ctx context.Context) TemplateTopBottomComputationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTopBottomComputationTypeOutput)
}

func (e TemplateTopBottomComputationType) ToTemplateTopBottomComputationTypePtrOutput() TemplateTopBottomComputationTypePtrOutput {
	return e.ToTemplateTopBottomComputationTypePtrOutputWithContext(context.Background())
}

func (e TemplateTopBottomComputationType) ToTemplateTopBottomComputationTypePtrOutputWithContext(ctx context.Context) TemplateTopBottomComputationTypePtrOutput {
	return TemplateTopBottomComputationType(e).ToTemplateTopBottomComputationTypeOutputWithContext(ctx).ToTemplateTopBottomComputationTypePtrOutputWithContext(ctx)
}

func (e TemplateTopBottomComputationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTopBottomComputationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTopBottomComputationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTopBottomComputationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTopBottomComputationTypeOutput struct{ *pulumi.OutputState }

func (TemplateTopBottomComputationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTopBottomComputationType)(nil)).Elem()
}

func (o TemplateTopBottomComputationTypeOutput) ToTemplateTopBottomComputationTypeOutput() TemplateTopBottomComputationTypeOutput {
	return o
}

func (o TemplateTopBottomComputationTypeOutput) ToTemplateTopBottomComputationTypeOutputWithContext(ctx context.Context) TemplateTopBottomComputationTypeOutput {
	return o
}

func (o TemplateTopBottomComputationTypeOutput) ToTemplateTopBottomComputationTypePtrOutput() TemplateTopBottomComputationTypePtrOutput {
	return o.ToTemplateTopBottomComputationTypePtrOutputWithContext(context.Background())
}

func (o TemplateTopBottomComputationTypeOutput) ToTemplateTopBottomComputationTypePtrOutputWithContext(ctx context.Context) TemplateTopBottomComputationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTopBottomComputationType) *TemplateTopBottomComputationType {
		return &v
	}).(TemplateTopBottomComputationTypePtrOutput)
}

func (o TemplateTopBottomComputationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTopBottomComputationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTopBottomComputationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTopBottomComputationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTopBottomComputationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTopBottomComputationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTopBottomComputationTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateTopBottomComputationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTopBottomComputationType)(nil)).Elem()
}

func (o TemplateTopBottomComputationTypePtrOutput) ToTemplateTopBottomComputationTypePtrOutput() TemplateTopBottomComputationTypePtrOutput {
	return o
}

func (o TemplateTopBottomComputationTypePtrOutput) ToTemplateTopBottomComputationTypePtrOutputWithContext(ctx context.Context) TemplateTopBottomComputationTypePtrOutput {
	return o
}

func (o TemplateTopBottomComputationTypePtrOutput) Elem() TemplateTopBottomComputationTypeOutput {
	return o.ApplyT(func(v *TemplateTopBottomComputationType) TemplateTopBottomComputationType {
		if v != nil {
			return *v
		}
		var ret TemplateTopBottomComputationType
		return ret
	}).(TemplateTopBottomComputationTypeOutput)
}

func (o TemplateTopBottomComputationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTopBottomComputationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTopBottomComputationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTopBottomComputationTypeInput is an input type that accepts values of the TemplateTopBottomComputationType enum
// A concrete instance of `TemplateTopBottomComputationTypeInput` can be one of the following:
//
//	TemplateTopBottomComputationTypeTop
//	TemplateTopBottomComputationTypeBottom
type TemplateTopBottomComputationTypeInput interface {
	pulumi.Input

	ToTemplateTopBottomComputationTypeOutput() TemplateTopBottomComputationTypeOutput
	ToTemplateTopBottomComputationTypeOutputWithContext(context.Context) TemplateTopBottomComputationTypeOutput
}

var templateTopBottomComputationTypePtrType = reflect.TypeOf((**TemplateTopBottomComputationType)(nil)).Elem()

type TemplateTopBottomComputationTypePtrInput interface {
	pulumi.Input

	ToTemplateTopBottomComputationTypePtrOutput() TemplateTopBottomComputationTypePtrOutput
	ToTemplateTopBottomComputationTypePtrOutputWithContext(context.Context) TemplateTopBottomComputationTypePtrOutput
}

type templateTopBottomComputationTypePtr string

func TemplateTopBottomComputationTypePtr(v string) TemplateTopBottomComputationTypePtrInput {
	return (*templateTopBottomComputationTypePtr)(&v)
}

func (*templateTopBottomComputationTypePtr) ElementType() reflect.Type {
	return templateTopBottomComputationTypePtrType
}

func (in *templateTopBottomComputationTypePtr) ToTemplateTopBottomComputationTypePtrOutput() TemplateTopBottomComputationTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateTopBottomComputationTypePtrOutput)
}

func (in *templateTopBottomComputationTypePtr) ToTemplateTopBottomComputationTypePtrOutputWithContext(ctx context.Context) TemplateTopBottomComputationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTopBottomComputationTypePtrOutput)
}

type TemplateTopBottomSortOrder string

const (
	TemplateTopBottomSortOrderPercentDifference  = TemplateTopBottomSortOrder("PERCENT_DIFFERENCE")
	TemplateTopBottomSortOrderAbsoluteDifference = TemplateTopBottomSortOrder("ABSOLUTE_DIFFERENCE")
)

func (TemplateTopBottomSortOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTopBottomSortOrder)(nil)).Elem()
}

func (e TemplateTopBottomSortOrder) ToTemplateTopBottomSortOrderOutput() TemplateTopBottomSortOrderOutput {
	return pulumi.ToOutput(e).(TemplateTopBottomSortOrderOutput)
}

func (e TemplateTopBottomSortOrder) ToTemplateTopBottomSortOrderOutputWithContext(ctx context.Context) TemplateTopBottomSortOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTopBottomSortOrderOutput)
}

func (e TemplateTopBottomSortOrder) ToTemplateTopBottomSortOrderPtrOutput() TemplateTopBottomSortOrderPtrOutput {
	return e.ToTemplateTopBottomSortOrderPtrOutputWithContext(context.Background())
}

func (e TemplateTopBottomSortOrder) ToTemplateTopBottomSortOrderPtrOutputWithContext(ctx context.Context) TemplateTopBottomSortOrderPtrOutput {
	return TemplateTopBottomSortOrder(e).ToTemplateTopBottomSortOrderOutputWithContext(ctx).ToTemplateTopBottomSortOrderPtrOutputWithContext(ctx)
}

func (e TemplateTopBottomSortOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTopBottomSortOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTopBottomSortOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTopBottomSortOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTopBottomSortOrderOutput struct{ *pulumi.OutputState }

func (TemplateTopBottomSortOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTopBottomSortOrder)(nil)).Elem()
}

func (o TemplateTopBottomSortOrderOutput) ToTemplateTopBottomSortOrderOutput() TemplateTopBottomSortOrderOutput {
	return o
}

func (o TemplateTopBottomSortOrderOutput) ToTemplateTopBottomSortOrderOutputWithContext(ctx context.Context) TemplateTopBottomSortOrderOutput {
	return o
}

func (o TemplateTopBottomSortOrderOutput) ToTemplateTopBottomSortOrderPtrOutput() TemplateTopBottomSortOrderPtrOutput {
	return o.ToTemplateTopBottomSortOrderPtrOutputWithContext(context.Background())
}

func (o TemplateTopBottomSortOrderOutput) ToTemplateTopBottomSortOrderPtrOutputWithContext(ctx context.Context) TemplateTopBottomSortOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTopBottomSortOrder) *TemplateTopBottomSortOrder {
		return &v
	}).(TemplateTopBottomSortOrderPtrOutput)
}

func (o TemplateTopBottomSortOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTopBottomSortOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTopBottomSortOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTopBottomSortOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTopBottomSortOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTopBottomSortOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTopBottomSortOrderPtrOutput struct{ *pulumi.OutputState }

func (TemplateTopBottomSortOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTopBottomSortOrder)(nil)).Elem()
}

func (o TemplateTopBottomSortOrderPtrOutput) ToTemplateTopBottomSortOrderPtrOutput() TemplateTopBottomSortOrderPtrOutput {
	return o
}

func (o TemplateTopBottomSortOrderPtrOutput) ToTemplateTopBottomSortOrderPtrOutputWithContext(ctx context.Context) TemplateTopBottomSortOrderPtrOutput {
	return o
}

func (o TemplateTopBottomSortOrderPtrOutput) Elem() TemplateTopBottomSortOrderOutput {
	return o.ApplyT(func(v *TemplateTopBottomSortOrder) TemplateTopBottomSortOrder {
		if v != nil {
			return *v
		}
		var ret TemplateTopBottomSortOrder
		return ret
	}).(TemplateTopBottomSortOrderOutput)
}

func (o TemplateTopBottomSortOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTopBottomSortOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTopBottomSortOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTopBottomSortOrderInput is an input type that accepts values of the TemplateTopBottomSortOrder enum
// A concrete instance of `TemplateTopBottomSortOrderInput` can be one of the following:
//
//	TemplateTopBottomSortOrderPercentDifference
//	TemplateTopBottomSortOrderAbsoluteDifference
type TemplateTopBottomSortOrderInput interface {
	pulumi.Input

	ToTemplateTopBottomSortOrderOutput() TemplateTopBottomSortOrderOutput
	ToTemplateTopBottomSortOrderOutputWithContext(context.Context) TemplateTopBottomSortOrderOutput
}

var templateTopBottomSortOrderPtrType = reflect.TypeOf((**TemplateTopBottomSortOrder)(nil)).Elem()

type TemplateTopBottomSortOrderPtrInput interface {
	pulumi.Input

	ToTemplateTopBottomSortOrderPtrOutput() TemplateTopBottomSortOrderPtrOutput
	ToTemplateTopBottomSortOrderPtrOutputWithContext(context.Context) TemplateTopBottomSortOrderPtrOutput
}

type templateTopBottomSortOrderPtr string

func TemplateTopBottomSortOrderPtr(v string) TemplateTopBottomSortOrderPtrInput {
	return (*templateTopBottomSortOrderPtr)(&v)
}

func (*templateTopBottomSortOrderPtr) ElementType() reflect.Type {
	return templateTopBottomSortOrderPtrType
}

func (in *templateTopBottomSortOrderPtr) ToTemplateTopBottomSortOrderPtrOutput() TemplateTopBottomSortOrderPtrOutput {
	return pulumi.ToOutput(in).(TemplateTopBottomSortOrderPtrOutput)
}

func (in *templateTopBottomSortOrderPtr) ToTemplateTopBottomSortOrderPtrOutputWithContext(ctx context.Context) TemplateTopBottomSortOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTopBottomSortOrderPtrOutput)
}

type TemplateUrlTargetConfiguration string

const (
	TemplateUrlTargetConfigurationNewTab    = TemplateUrlTargetConfiguration("NEW_TAB")
	TemplateUrlTargetConfigurationNewWindow = TemplateUrlTargetConfiguration("NEW_WINDOW")
	TemplateUrlTargetConfigurationSameTab   = TemplateUrlTargetConfiguration("SAME_TAB")
)

func (TemplateUrlTargetConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateUrlTargetConfiguration)(nil)).Elem()
}

func (e TemplateUrlTargetConfiguration) ToTemplateUrlTargetConfigurationOutput() TemplateUrlTargetConfigurationOutput {
	return pulumi.ToOutput(e).(TemplateUrlTargetConfigurationOutput)
}

func (e TemplateUrlTargetConfiguration) ToTemplateUrlTargetConfigurationOutputWithContext(ctx context.Context) TemplateUrlTargetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateUrlTargetConfigurationOutput)
}

func (e TemplateUrlTargetConfiguration) ToTemplateUrlTargetConfigurationPtrOutput() TemplateUrlTargetConfigurationPtrOutput {
	return e.ToTemplateUrlTargetConfigurationPtrOutputWithContext(context.Background())
}

func (e TemplateUrlTargetConfiguration) ToTemplateUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) TemplateUrlTargetConfigurationPtrOutput {
	return TemplateUrlTargetConfiguration(e).ToTemplateUrlTargetConfigurationOutputWithContext(ctx).ToTemplateUrlTargetConfigurationPtrOutputWithContext(ctx)
}

func (e TemplateUrlTargetConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateUrlTargetConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateUrlTargetConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateUrlTargetConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateUrlTargetConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateUrlTargetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateUrlTargetConfiguration)(nil)).Elem()
}

func (o TemplateUrlTargetConfigurationOutput) ToTemplateUrlTargetConfigurationOutput() TemplateUrlTargetConfigurationOutput {
	return o
}

func (o TemplateUrlTargetConfigurationOutput) ToTemplateUrlTargetConfigurationOutputWithContext(ctx context.Context) TemplateUrlTargetConfigurationOutput {
	return o
}

func (o TemplateUrlTargetConfigurationOutput) ToTemplateUrlTargetConfigurationPtrOutput() TemplateUrlTargetConfigurationPtrOutput {
	return o.ToTemplateUrlTargetConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateUrlTargetConfigurationOutput) ToTemplateUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) TemplateUrlTargetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateUrlTargetConfiguration) *TemplateUrlTargetConfiguration {
		return &v
	}).(TemplateUrlTargetConfigurationPtrOutput)
}

func (o TemplateUrlTargetConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateUrlTargetConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateUrlTargetConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateUrlTargetConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateUrlTargetConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateUrlTargetConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateUrlTargetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateUrlTargetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateUrlTargetConfiguration)(nil)).Elem()
}

func (o TemplateUrlTargetConfigurationPtrOutput) ToTemplateUrlTargetConfigurationPtrOutput() TemplateUrlTargetConfigurationPtrOutput {
	return o
}

func (o TemplateUrlTargetConfigurationPtrOutput) ToTemplateUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) TemplateUrlTargetConfigurationPtrOutput {
	return o
}

func (o TemplateUrlTargetConfigurationPtrOutput) Elem() TemplateUrlTargetConfigurationOutput {
	return o.ApplyT(func(v *TemplateUrlTargetConfiguration) TemplateUrlTargetConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateUrlTargetConfiguration
		return ret
	}).(TemplateUrlTargetConfigurationOutput)
}

func (o TemplateUrlTargetConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateUrlTargetConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateUrlTargetConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateUrlTargetConfigurationInput is an input type that accepts values of the TemplateUrlTargetConfiguration enum
// A concrete instance of `TemplateUrlTargetConfigurationInput` can be one of the following:
//
//	TemplateUrlTargetConfigurationNewTab
//	TemplateUrlTargetConfigurationNewWindow
//	TemplateUrlTargetConfigurationSameTab
type TemplateUrlTargetConfigurationInput interface {
	pulumi.Input

	ToTemplateUrlTargetConfigurationOutput() TemplateUrlTargetConfigurationOutput
	ToTemplateUrlTargetConfigurationOutputWithContext(context.Context) TemplateUrlTargetConfigurationOutput
}

var templateUrlTargetConfigurationPtrType = reflect.TypeOf((**TemplateUrlTargetConfiguration)(nil)).Elem()

type TemplateUrlTargetConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateUrlTargetConfigurationPtrOutput() TemplateUrlTargetConfigurationPtrOutput
	ToTemplateUrlTargetConfigurationPtrOutputWithContext(context.Context) TemplateUrlTargetConfigurationPtrOutput
}

type templateUrlTargetConfigurationPtr string

func TemplateUrlTargetConfigurationPtr(v string) TemplateUrlTargetConfigurationPtrInput {
	return (*templateUrlTargetConfigurationPtr)(&v)
}

func (*templateUrlTargetConfigurationPtr) ElementType() reflect.Type {
	return templateUrlTargetConfigurationPtrType
}

func (in *templateUrlTargetConfigurationPtr) ToTemplateUrlTargetConfigurationPtrOutput() TemplateUrlTargetConfigurationPtrOutput {
	return pulumi.ToOutput(in).(TemplateUrlTargetConfigurationPtrOutput)
}

func (in *templateUrlTargetConfigurationPtr) ToTemplateUrlTargetConfigurationPtrOutputWithContext(ctx context.Context) TemplateUrlTargetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateUrlTargetConfigurationPtrOutput)
}

type TemplateValidationStrategyMode string

const (
	TemplateValidationStrategyModeStrict  = TemplateValidationStrategyMode("STRICT")
	TemplateValidationStrategyModeLenient = TemplateValidationStrategyMode("LENIENT")
)

func (TemplateValidationStrategyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateValidationStrategyMode)(nil)).Elem()
}

func (e TemplateValidationStrategyMode) ToTemplateValidationStrategyModeOutput() TemplateValidationStrategyModeOutput {
	return pulumi.ToOutput(e).(TemplateValidationStrategyModeOutput)
}

func (e TemplateValidationStrategyMode) ToTemplateValidationStrategyModeOutputWithContext(ctx context.Context) TemplateValidationStrategyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateValidationStrategyModeOutput)
}

func (e TemplateValidationStrategyMode) ToTemplateValidationStrategyModePtrOutput() TemplateValidationStrategyModePtrOutput {
	return e.ToTemplateValidationStrategyModePtrOutputWithContext(context.Background())
}

func (e TemplateValidationStrategyMode) ToTemplateValidationStrategyModePtrOutputWithContext(ctx context.Context) TemplateValidationStrategyModePtrOutput {
	return TemplateValidationStrategyMode(e).ToTemplateValidationStrategyModeOutputWithContext(ctx).ToTemplateValidationStrategyModePtrOutputWithContext(ctx)
}

func (e TemplateValidationStrategyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateValidationStrategyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateValidationStrategyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateValidationStrategyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateValidationStrategyModeOutput struct{ *pulumi.OutputState }

func (TemplateValidationStrategyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateValidationStrategyMode)(nil)).Elem()
}

func (o TemplateValidationStrategyModeOutput) ToTemplateValidationStrategyModeOutput() TemplateValidationStrategyModeOutput {
	return o
}

func (o TemplateValidationStrategyModeOutput) ToTemplateValidationStrategyModeOutputWithContext(ctx context.Context) TemplateValidationStrategyModeOutput {
	return o
}

func (o TemplateValidationStrategyModeOutput) ToTemplateValidationStrategyModePtrOutput() TemplateValidationStrategyModePtrOutput {
	return o.ToTemplateValidationStrategyModePtrOutputWithContext(context.Background())
}

func (o TemplateValidationStrategyModeOutput) ToTemplateValidationStrategyModePtrOutputWithContext(ctx context.Context) TemplateValidationStrategyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateValidationStrategyMode) *TemplateValidationStrategyMode {
		return &v
	}).(TemplateValidationStrategyModePtrOutput)
}

func (o TemplateValidationStrategyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateValidationStrategyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateValidationStrategyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateValidationStrategyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateValidationStrategyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateValidationStrategyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateValidationStrategyModePtrOutput struct{ *pulumi.OutputState }

func (TemplateValidationStrategyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateValidationStrategyMode)(nil)).Elem()
}

func (o TemplateValidationStrategyModePtrOutput) ToTemplateValidationStrategyModePtrOutput() TemplateValidationStrategyModePtrOutput {
	return o
}

func (o TemplateValidationStrategyModePtrOutput) ToTemplateValidationStrategyModePtrOutputWithContext(ctx context.Context) TemplateValidationStrategyModePtrOutput {
	return o
}

func (o TemplateValidationStrategyModePtrOutput) Elem() TemplateValidationStrategyModeOutput {
	return o.ApplyT(func(v *TemplateValidationStrategyMode) TemplateValidationStrategyMode {
		if v != nil {
			return *v
		}
		var ret TemplateValidationStrategyMode
		return ret
	}).(TemplateValidationStrategyModeOutput)
}

func (o TemplateValidationStrategyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateValidationStrategyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateValidationStrategyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateValidationStrategyModeInput is an input type that accepts values of the TemplateValidationStrategyMode enum
// A concrete instance of `TemplateValidationStrategyModeInput` can be one of the following:
//
//	TemplateValidationStrategyModeStrict
//	TemplateValidationStrategyModeLenient
type TemplateValidationStrategyModeInput interface {
	pulumi.Input

	ToTemplateValidationStrategyModeOutput() TemplateValidationStrategyModeOutput
	ToTemplateValidationStrategyModeOutputWithContext(context.Context) TemplateValidationStrategyModeOutput
}

var templateValidationStrategyModePtrType = reflect.TypeOf((**TemplateValidationStrategyMode)(nil)).Elem()

type TemplateValidationStrategyModePtrInput interface {
	pulumi.Input

	ToTemplateValidationStrategyModePtrOutput() TemplateValidationStrategyModePtrOutput
	ToTemplateValidationStrategyModePtrOutputWithContext(context.Context) TemplateValidationStrategyModePtrOutput
}

type templateValidationStrategyModePtr string

func TemplateValidationStrategyModePtr(v string) TemplateValidationStrategyModePtrInput {
	return (*templateValidationStrategyModePtr)(&v)
}

func (*templateValidationStrategyModePtr) ElementType() reflect.Type {
	return templateValidationStrategyModePtrType
}

func (in *templateValidationStrategyModePtr) ToTemplateValidationStrategyModePtrOutput() TemplateValidationStrategyModePtrOutput {
	return pulumi.ToOutput(in).(TemplateValidationStrategyModePtrOutput)
}

func (in *templateValidationStrategyModePtr) ToTemplateValidationStrategyModePtrOutputWithContext(ctx context.Context) TemplateValidationStrategyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateValidationStrategyModePtrOutput)
}

type TemplateValueWhenUnsetOption string

const (
	TemplateValueWhenUnsetOptionRecommendedValue = TemplateValueWhenUnsetOption("RECOMMENDED_VALUE")
	TemplateValueWhenUnsetOptionNull             = TemplateValueWhenUnsetOption("NULL")
)

func (TemplateValueWhenUnsetOption) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateValueWhenUnsetOption)(nil)).Elem()
}

func (e TemplateValueWhenUnsetOption) ToTemplateValueWhenUnsetOptionOutput() TemplateValueWhenUnsetOptionOutput {
	return pulumi.ToOutput(e).(TemplateValueWhenUnsetOptionOutput)
}

func (e TemplateValueWhenUnsetOption) ToTemplateValueWhenUnsetOptionOutputWithContext(ctx context.Context) TemplateValueWhenUnsetOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateValueWhenUnsetOptionOutput)
}

func (e TemplateValueWhenUnsetOption) ToTemplateValueWhenUnsetOptionPtrOutput() TemplateValueWhenUnsetOptionPtrOutput {
	return e.ToTemplateValueWhenUnsetOptionPtrOutputWithContext(context.Background())
}

func (e TemplateValueWhenUnsetOption) ToTemplateValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) TemplateValueWhenUnsetOptionPtrOutput {
	return TemplateValueWhenUnsetOption(e).ToTemplateValueWhenUnsetOptionOutputWithContext(ctx).ToTemplateValueWhenUnsetOptionPtrOutputWithContext(ctx)
}

func (e TemplateValueWhenUnsetOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateValueWhenUnsetOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateValueWhenUnsetOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateValueWhenUnsetOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateValueWhenUnsetOptionOutput struct{ *pulumi.OutputState }

func (TemplateValueWhenUnsetOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateValueWhenUnsetOption)(nil)).Elem()
}

func (o TemplateValueWhenUnsetOptionOutput) ToTemplateValueWhenUnsetOptionOutput() TemplateValueWhenUnsetOptionOutput {
	return o
}

func (o TemplateValueWhenUnsetOptionOutput) ToTemplateValueWhenUnsetOptionOutputWithContext(ctx context.Context) TemplateValueWhenUnsetOptionOutput {
	return o
}

func (o TemplateValueWhenUnsetOptionOutput) ToTemplateValueWhenUnsetOptionPtrOutput() TemplateValueWhenUnsetOptionPtrOutput {
	return o.ToTemplateValueWhenUnsetOptionPtrOutputWithContext(context.Background())
}

func (o TemplateValueWhenUnsetOptionOutput) ToTemplateValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) TemplateValueWhenUnsetOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateValueWhenUnsetOption) *TemplateValueWhenUnsetOption {
		return &v
	}).(TemplateValueWhenUnsetOptionPtrOutput)
}

func (o TemplateValueWhenUnsetOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateValueWhenUnsetOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateValueWhenUnsetOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateValueWhenUnsetOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateValueWhenUnsetOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateValueWhenUnsetOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateValueWhenUnsetOptionPtrOutput struct{ *pulumi.OutputState }

func (TemplateValueWhenUnsetOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateValueWhenUnsetOption)(nil)).Elem()
}

func (o TemplateValueWhenUnsetOptionPtrOutput) ToTemplateValueWhenUnsetOptionPtrOutput() TemplateValueWhenUnsetOptionPtrOutput {
	return o
}

func (o TemplateValueWhenUnsetOptionPtrOutput) ToTemplateValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) TemplateValueWhenUnsetOptionPtrOutput {
	return o
}

func (o TemplateValueWhenUnsetOptionPtrOutput) Elem() TemplateValueWhenUnsetOptionOutput {
	return o.ApplyT(func(v *TemplateValueWhenUnsetOption) TemplateValueWhenUnsetOption {
		if v != nil {
			return *v
		}
		var ret TemplateValueWhenUnsetOption
		return ret
	}).(TemplateValueWhenUnsetOptionOutput)
}

func (o TemplateValueWhenUnsetOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateValueWhenUnsetOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateValueWhenUnsetOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateValueWhenUnsetOptionInput is an input type that accepts values of the TemplateValueWhenUnsetOption enum
// A concrete instance of `TemplateValueWhenUnsetOptionInput` can be one of the following:
//
//	TemplateValueWhenUnsetOptionRecommendedValue
//	TemplateValueWhenUnsetOptionNull
type TemplateValueWhenUnsetOptionInput interface {
	pulumi.Input

	ToTemplateValueWhenUnsetOptionOutput() TemplateValueWhenUnsetOptionOutput
	ToTemplateValueWhenUnsetOptionOutputWithContext(context.Context) TemplateValueWhenUnsetOptionOutput
}

var templateValueWhenUnsetOptionPtrType = reflect.TypeOf((**TemplateValueWhenUnsetOption)(nil)).Elem()

type TemplateValueWhenUnsetOptionPtrInput interface {
	pulumi.Input

	ToTemplateValueWhenUnsetOptionPtrOutput() TemplateValueWhenUnsetOptionPtrOutput
	ToTemplateValueWhenUnsetOptionPtrOutputWithContext(context.Context) TemplateValueWhenUnsetOptionPtrOutput
}

type templateValueWhenUnsetOptionPtr string

func TemplateValueWhenUnsetOptionPtr(v string) TemplateValueWhenUnsetOptionPtrInput {
	return (*templateValueWhenUnsetOptionPtr)(&v)
}

func (*templateValueWhenUnsetOptionPtr) ElementType() reflect.Type {
	return templateValueWhenUnsetOptionPtrType
}

func (in *templateValueWhenUnsetOptionPtr) ToTemplateValueWhenUnsetOptionPtrOutput() TemplateValueWhenUnsetOptionPtrOutput {
	return pulumi.ToOutput(in).(TemplateValueWhenUnsetOptionPtrOutput)
}

func (in *templateValueWhenUnsetOptionPtr) ToTemplateValueWhenUnsetOptionPtrOutputWithContext(ctx context.Context) TemplateValueWhenUnsetOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateValueWhenUnsetOptionPtrOutput)
}

type TemplateVerticalTextAlignment string

const (
	TemplateVerticalTextAlignmentTop    = TemplateVerticalTextAlignment("TOP")
	TemplateVerticalTextAlignmentMiddle = TemplateVerticalTextAlignment("MIDDLE")
	TemplateVerticalTextAlignmentBottom = TemplateVerticalTextAlignment("BOTTOM")
	TemplateVerticalTextAlignmentAuto   = TemplateVerticalTextAlignment("AUTO")
)

func (TemplateVerticalTextAlignment) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVerticalTextAlignment)(nil)).Elem()
}

func (e TemplateVerticalTextAlignment) ToTemplateVerticalTextAlignmentOutput() TemplateVerticalTextAlignmentOutput {
	return pulumi.ToOutput(e).(TemplateVerticalTextAlignmentOutput)
}

func (e TemplateVerticalTextAlignment) ToTemplateVerticalTextAlignmentOutputWithContext(ctx context.Context) TemplateVerticalTextAlignmentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateVerticalTextAlignmentOutput)
}

func (e TemplateVerticalTextAlignment) ToTemplateVerticalTextAlignmentPtrOutput() TemplateVerticalTextAlignmentPtrOutput {
	return e.ToTemplateVerticalTextAlignmentPtrOutputWithContext(context.Background())
}

func (e TemplateVerticalTextAlignment) ToTemplateVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) TemplateVerticalTextAlignmentPtrOutput {
	return TemplateVerticalTextAlignment(e).ToTemplateVerticalTextAlignmentOutputWithContext(ctx).ToTemplateVerticalTextAlignmentPtrOutputWithContext(ctx)
}

func (e TemplateVerticalTextAlignment) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateVerticalTextAlignment) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateVerticalTextAlignment) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateVerticalTextAlignment) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateVerticalTextAlignmentOutput struct{ *pulumi.OutputState }

func (TemplateVerticalTextAlignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVerticalTextAlignment)(nil)).Elem()
}

func (o TemplateVerticalTextAlignmentOutput) ToTemplateVerticalTextAlignmentOutput() TemplateVerticalTextAlignmentOutput {
	return o
}

func (o TemplateVerticalTextAlignmentOutput) ToTemplateVerticalTextAlignmentOutputWithContext(ctx context.Context) TemplateVerticalTextAlignmentOutput {
	return o
}

func (o TemplateVerticalTextAlignmentOutput) ToTemplateVerticalTextAlignmentPtrOutput() TemplateVerticalTextAlignmentPtrOutput {
	return o.ToTemplateVerticalTextAlignmentPtrOutputWithContext(context.Background())
}

func (o TemplateVerticalTextAlignmentOutput) ToTemplateVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) TemplateVerticalTextAlignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateVerticalTextAlignment) *TemplateVerticalTextAlignment {
		return &v
	}).(TemplateVerticalTextAlignmentPtrOutput)
}

func (o TemplateVerticalTextAlignmentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateVerticalTextAlignmentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateVerticalTextAlignment) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateVerticalTextAlignmentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateVerticalTextAlignmentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateVerticalTextAlignment) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateVerticalTextAlignmentPtrOutput struct{ *pulumi.OutputState }

func (TemplateVerticalTextAlignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateVerticalTextAlignment)(nil)).Elem()
}

func (o TemplateVerticalTextAlignmentPtrOutput) ToTemplateVerticalTextAlignmentPtrOutput() TemplateVerticalTextAlignmentPtrOutput {
	return o
}

func (o TemplateVerticalTextAlignmentPtrOutput) ToTemplateVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) TemplateVerticalTextAlignmentPtrOutput {
	return o
}

func (o TemplateVerticalTextAlignmentPtrOutput) Elem() TemplateVerticalTextAlignmentOutput {
	return o.ApplyT(func(v *TemplateVerticalTextAlignment) TemplateVerticalTextAlignment {
		if v != nil {
			return *v
		}
		var ret TemplateVerticalTextAlignment
		return ret
	}).(TemplateVerticalTextAlignmentOutput)
}

func (o TemplateVerticalTextAlignmentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateVerticalTextAlignmentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateVerticalTextAlignment) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateVerticalTextAlignmentInput is an input type that accepts values of the TemplateVerticalTextAlignment enum
// A concrete instance of `TemplateVerticalTextAlignmentInput` can be one of the following:
//
//	TemplateVerticalTextAlignmentTop
//	TemplateVerticalTextAlignmentMiddle
//	TemplateVerticalTextAlignmentBottom
//	TemplateVerticalTextAlignmentAuto
type TemplateVerticalTextAlignmentInput interface {
	pulumi.Input

	ToTemplateVerticalTextAlignmentOutput() TemplateVerticalTextAlignmentOutput
	ToTemplateVerticalTextAlignmentOutputWithContext(context.Context) TemplateVerticalTextAlignmentOutput
}

var templateVerticalTextAlignmentPtrType = reflect.TypeOf((**TemplateVerticalTextAlignment)(nil)).Elem()

type TemplateVerticalTextAlignmentPtrInput interface {
	pulumi.Input

	ToTemplateVerticalTextAlignmentPtrOutput() TemplateVerticalTextAlignmentPtrOutput
	ToTemplateVerticalTextAlignmentPtrOutputWithContext(context.Context) TemplateVerticalTextAlignmentPtrOutput
}

type templateVerticalTextAlignmentPtr string

func TemplateVerticalTextAlignmentPtr(v string) TemplateVerticalTextAlignmentPtrInput {
	return (*templateVerticalTextAlignmentPtr)(&v)
}

func (*templateVerticalTextAlignmentPtr) ElementType() reflect.Type {
	return templateVerticalTextAlignmentPtrType
}

func (in *templateVerticalTextAlignmentPtr) ToTemplateVerticalTextAlignmentPtrOutput() TemplateVerticalTextAlignmentPtrOutput {
	return pulumi.ToOutput(in).(TemplateVerticalTextAlignmentPtrOutput)
}

func (in *templateVerticalTextAlignmentPtr) ToTemplateVerticalTextAlignmentPtrOutputWithContext(ctx context.Context) TemplateVerticalTextAlignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateVerticalTextAlignmentPtrOutput)
}

type TemplateVisibility string

const (
	TemplateVisibilityHidden  = TemplateVisibility("HIDDEN")
	TemplateVisibilityVisible = TemplateVisibility("VISIBLE")
)

func (TemplateVisibility) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisibility)(nil)).Elem()
}

func (e TemplateVisibility) ToTemplateVisibilityOutput() TemplateVisibilityOutput {
	return pulumi.ToOutput(e).(TemplateVisibilityOutput)
}

func (e TemplateVisibility) ToTemplateVisibilityOutputWithContext(ctx context.Context) TemplateVisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateVisibilityOutput)
}

func (e TemplateVisibility) ToTemplateVisibilityPtrOutput() TemplateVisibilityPtrOutput {
	return e.ToTemplateVisibilityPtrOutputWithContext(context.Background())
}

func (e TemplateVisibility) ToTemplateVisibilityPtrOutputWithContext(ctx context.Context) TemplateVisibilityPtrOutput {
	return TemplateVisibility(e).ToTemplateVisibilityOutputWithContext(ctx).ToTemplateVisibilityPtrOutputWithContext(ctx)
}

func (e TemplateVisibility) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateVisibility) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateVisibility) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateVisibility) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateVisibilityOutput struct{ *pulumi.OutputState }

func (TemplateVisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisibility)(nil)).Elem()
}

func (o TemplateVisibilityOutput) ToTemplateVisibilityOutput() TemplateVisibilityOutput {
	return o
}

func (o TemplateVisibilityOutput) ToTemplateVisibilityOutputWithContext(ctx context.Context) TemplateVisibilityOutput {
	return o
}

func (o TemplateVisibilityOutput) ToTemplateVisibilityPtrOutput() TemplateVisibilityPtrOutput {
	return o.ToTemplateVisibilityPtrOutputWithContext(context.Background())
}

func (o TemplateVisibilityOutput) ToTemplateVisibilityPtrOutputWithContext(ctx context.Context) TemplateVisibilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateVisibility) *TemplateVisibility {
		return &v
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateVisibilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateVisibilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateVisibility) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateVisibilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateVisibilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateVisibility) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateVisibilityPtrOutput struct{ *pulumi.OutputState }

func (TemplateVisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateVisibility)(nil)).Elem()
}

func (o TemplateVisibilityPtrOutput) ToTemplateVisibilityPtrOutput() TemplateVisibilityPtrOutput {
	return o
}

func (o TemplateVisibilityPtrOutput) ToTemplateVisibilityPtrOutputWithContext(ctx context.Context) TemplateVisibilityPtrOutput {
	return o
}

func (o TemplateVisibilityPtrOutput) Elem() TemplateVisibilityOutput {
	return o.ApplyT(func(v *TemplateVisibility) TemplateVisibility {
		if v != nil {
			return *v
		}
		var ret TemplateVisibility
		return ret
	}).(TemplateVisibilityOutput)
}

func (o TemplateVisibilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateVisibilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateVisibility) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateVisibilityInput is an input type that accepts values of the TemplateVisibility enum
// A concrete instance of `TemplateVisibilityInput` can be one of the following:
//
//	TemplateVisibilityHidden
//	TemplateVisibilityVisible
type TemplateVisibilityInput interface {
	pulumi.Input

	ToTemplateVisibilityOutput() TemplateVisibilityOutput
	ToTemplateVisibilityOutputWithContext(context.Context) TemplateVisibilityOutput
}

var templateVisibilityPtrType = reflect.TypeOf((**TemplateVisibility)(nil)).Elem()

type TemplateVisibilityPtrInput interface {
	pulumi.Input

	ToTemplateVisibilityPtrOutput() TemplateVisibilityPtrOutput
	ToTemplateVisibilityPtrOutputWithContext(context.Context) TemplateVisibilityPtrOutput
}

type templateVisibilityPtr string

func TemplateVisibilityPtr(v string) TemplateVisibilityPtrInput {
	return (*templateVisibilityPtr)(&v)
}

func (*templateVisibilityPtr) ElementType() reflect.Type {
	return templateVisibilityPtrType
}

func (in *templateVisibilityPtr) ToTemplateVisibilityPtrOutput() TemplateVisibilityPtrOutput {
	return pulumi.ToOutput(in).(TemplateVisibilityPtrOutput)
}

func (in *templateVisibilityPtr) ToTemplateVisibilityPtrOutputWithContext(ctx context.Context) TemplateVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateVisibilityPtrOutput)
}

type TemplateVisualCustomActionTrigger string

const (
	TemplateVisualCustomActionTriggerDataPointClick = TemplateVisualCustomActionTrigger("DATA_POINT_CLICK")
	TemplateVisualCustomActionTriggerDataPointMenu  = TemplateVisualCustomActionTrigger("DATA_POINT_MENU")
)

func (TemplateVisualCustomActionTrigger) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisualCustomActionTrigger)(nil)).Elem()
}

func (e TemplateVisualCustomActionTrigger) ToTemplateVisualCustomActionTriggerOutput() TemplateVisualCustomActionTriggerOutput {
	return pulumi.ToOutput(e).(TemplateVisualCustomActionTriggerOutput)
}

func (e TemplateVisualCustomActionTrigger) ToTemplateVisualCustomActionTriggerOutputWithContext(ctx context.Context) TemplateVisualCustomActionTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateVisualCustomActionTriggerOutput)
}

func (e TemplateVisualCustomActionTrigger) ToTemplateVisualCustomActionTriggerPtrOutput() TemplateVisualCustomActionTriggerPtrOutput {
	return e.ToTemplateVisualCustomActionTriggerPtrOutputWithContext(context.Background())
}

func (e TemplateVisualCustomActionTrigger) ToTemplateVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) TemplateVisualCustomActionTriggerPtrOutput {
	return TemplateVisualCustomActionTrigger(e).ToTemplateVisualCustomActionTriggerOutputWithContext(ctx).ToTemplateVisualCustomActionTriggerPtrOutputWithContext(ctx)
}

func (e TemplateVisualCustomActionTrigger) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateVisualCustomActionTrigger) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateVisualCustomActionTrigger) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateVisualCustomActionTrigger) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateVisualCustomActionTriggerOutput struct{ *pulumi.OutputState }

func (TemplateVisualCustomActionTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisualCustomActionTrigger)(nil)).Elem()
}

func (o TemplateVisualCustomActionTriggerOutput) ToTemplateVisualCustomActionTriggerOutput() TemplateVisualCustomActionTriggerOutput {
	return o
}

func (o TemplateVisualCustomActionTriggerOutput) ToTemplateVisualCustomActionTriggerOutputWithContext(ctx context.Context) TemplateVisualCustomActionTriggerOutput {
	return o
}

func (o TemplateVisualCustomActionTriggerOutput) ToTemplateVisualCustomActionTriggerPtrOutput() TemplateVisualCustomActionTriggerPtrOutput {
	return o.ToTemplateVisualCustomActionTriggerPtrOutputWithContext(context.Background())
}

func (o TemplateVisualCustomActionTriggerOutput) ToTemplateVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) TemplateVisualCustomActionTriggerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateVisualCustomActionTrigger) *TemplateVisualCustomActionTrigger {
		return &v
	}).(TemplateVisualCustomActionTriggerPtrOutput)
}

func (o TemplateVisualCustomActionTriggerOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateVisualCustomActionTriggerOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateVisualCustomActionTrigger) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateVisualCustomActionTriggerOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateVisualCustomActionTriggerOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateVisualCustomActionTrigger) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateVisualCustomActionTriggerPtrOutput struct{ *pulumi.OutputState }

func (TemplateVisualCustomActionTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateVisualCustomActionTrigger)(nil)).Elem()
}

func (o TemplateVisualCustomActionTriggerPtrOutput) ToTemplateVisualCustomActionTriggerPtrOutput() TemplateVisualCustomActionTriggerPtrOutput {
	return o
}

func (o TemplateVisualCustomActionTriggerPtrOutput) ToTemplateVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) TemplateVisualCustomActionTriggerPtrOutput {
	return o
}

func (o TemplateVisualCustomActionTriggerPtrOutput) Elem() TemplateVisualCustomActionTriggerOutput {
	return o.ApplyT(func(v *TemplateVisualCustomActionTrigger) TemplateVisualCustomActionTrigger {
		if v != nil {
			return *v
		}
		var ret TemplateVisualCustomActionTrigger
		return ret
	}).(TemplateVisualCustomActionTriggerOutput)
}

func (o TemplateVisualCustomActionTriggerPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateVisualCustomActionTriggerPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateVisualCustomActionTrigger) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateVisualCustomActionTriggerInput is an input type that accepts values of the TemplateVisualCustomActionTrigger enum
// A concrete instance of `TemplateVisualCustomActionTriggerInput` can be one of the following:
//
//	TemplateVisualCustomActionTriggerDataPointClick
//	TemplateVisualCustomActionTriggerDataPointMenu
type TemplateVisualCustomActionTriggerInput interface {
	pulumi.Input

	ToTemplateVisualCustomActionTriggerOutput() TemplateVisualCustomActionTriggerOutput
	ToTemplateVisualCustomActionTriggerOutputWithContext(context.Context) TemplateVisualCustomActionTriggerOutput
}

var templateVisualCustomActionTriggerPtrType = reflect.TypeOf((**TemplateVisualCustomActionTrigger)(nil)).Elem()

type TemplateVisualCustomActionTriggerPtrInput interface {
	pulumi.Input

	ToTemplateVisualCustomActionTriggerPtrOutput() TemplateVisualCustomActionTriggerPtrOutput
	ToTemplateVisualCustomActionTriggerPtrOutputWithContext(context.Context) TemplateVisualCustomActionTriggerPtrOutput
}

type templateVisualCustomActionTriggerPtr string

func TemplateVisualCustomActionTriggerPtr(v string) TemplateVisualCustomActionTriggerPtrInput {
	return (*templateVisualCustomActionTriggerPtr)(&v)
}

func (*templateVisualCustomActionTriggerPtr) ElementType() reflect.Type {
	return templateVisualCustomActionTriggerPtrType
}

func (in *templateVisualCustomActionTriggerPtr) ToTemplateVisualCustomActionTriggerPtrOutput() TemplateVisualCustomActionTriggerPtrOutput {
	return pulumi.ToOutput(in).(TemplateVisualCustomActionTriggerPtrOutput)
}

func (in *templateVisualCustomActionTriggerPtr) ToTemplateVisualCustomActionTriggerPtrOutputWithContext(ctx context.Context) TemplateVisualCustomActionTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateVisualCustomActionTriggerPtrOutput)
}

type TemplateWidgetStatus string

const (
	TemplateWidgetStatusEnabled  = TemplateWidgetStatus("ENABLED")
	TemplateWidgetStatusDisabled = TemplateWidgetStatus("DISABLED")
)

func (TemplateWidgetStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWidgetStatus)(nil)).Elem()
}

func (e TemplateWidgetStatus) ToTemplateWidgetStatusOutput() TemplateWidgetStatusOutput {
	return pulumi.ToOutput(e).(TemplateWidgetStatusOutput)
}

func (e TemplateWidgetStatus) ToTemplateWidgetStatusOutputWithContext(ctx context.Context) TemplateWidgetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateWidgetStatusOutput)
}

func (e TemplateWidgetStatus) ToTemplateWidgetStatusPtrOutput() TemplateWidgetStatusPtrOutput {
	return e.ToTemplateWidgetStatusPtrOutputWithContext(context.Background())
}

func (e TemplateWidgetStatus) ToTemplateWidgetStatusPtrOutputWithContext(ctx context.Context) TemplateWidgetStatusPtrOutput {
	return TemplateWidgetStatus(e).ToTemplateWidgetStatusOutputWithContext(ctx).ToTemplateWidgetStatusPtrOutputWithContext(ctx)
}

func (e TemplateWidgetStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWidgetStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWidgetStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateWidgetStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateWidgetStatusOutput struct{ *pulumi.OutputState }

func (TemplateWidgetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWidgetStatus)(nil)).Elem()
}

func (o TemplateWidgetStatusOutput) ToTemplateWidgetStatusOutput() TemplateWidgetStatusOutput {
	return o
}

func (o TemplateWidgetStatusOutput) ToTemplateWidgetStatusOutputWithContext(ctx context.Context) TemplateWidgetStatusOutput {
	return o
}

func (o TemplateWidgetStatusOutput) ToTemplateWidgetStatusPtrOutput() TemplateWidgetStatusPtrOutput {
	return o.ToTemplateWidgetStatusPtrOutputWithContext(context.Background())
}

func (o TemplateWidgetStatusOutput) ToTemplateWidgetStatusPtrOutputWithContext(ctx context.Context) TemplateWidgetStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateWidgetStatus) *TemplateWidgetStatus {
		return &v
	}).(TemplateWidgetStatusPtrOutput)
}

func (o TemplateWidgetStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateWidgetStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWidgetStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateWidgetStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWidgetStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWidgetStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateWidgetStatusPtrOutput struct{ *pulumi.OutputState }

func (TemplateWidgetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateWidgetStatus)(nil)).Elem()
}

func (o TemplateWidgetStatusPtrOutput) ToTemplateWidgetStatusPtrOutput() TemplateWidgetStatusPtrOutput {
	return o
}

func (o TemplateWidgetStatusPtrOutput) ToTemplateWidgetStatusPtrOutputWithContext(ctx context.Context) TemplateWidgetStatusPtrOutput {
	return o
}

func (o TemplateWidgetStatusPtrOutput) Elem() TemplateWidgetStatusOutput {
	return o.ApplyT(func(v *TemplateWidgetStatus) TemplateWidgetStatus {
		if v != nil {
			return *v
		}
		var ret TemplateWidgetStatus
		return ret
	}).(TemplateWidgetStatusOutput)
}

func (o TemplateWidgetStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWidgetStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateWidgetStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateWidgetStatusInput is an input type that accepts values of the TemplateWidgetStatus enum
// A concrete instance of `TemplateWidgetStatusInput` can be one of the following:
//
//	TemplateWidgetStatusEnabled
//	TemplateWidgetStatusDisabled
type TemplateWidgetStatusInput interface {
	pulumi.Input

	ToTemplateWidgetStatusOutput() TemplateWidgetStatusOutput
	ToTemplateWidgetStatusOutputWithContext(context.Context) TemplateWidgetStatusOutput
}

var templateWidgetStatusPtrType = reflect.TypeOf((**TemplateWidgetStatus)(nil)).Elem()

type TemplateWidgetStatusPtrInput interface {
	pulumi.Input

	ToTemplateWidgetStatusPtrOutput() TemplateWidgetStatusPtrOutput
	ToTemplateWidgetStatusPtrOutputWithContext(context.Context) TemplateWidgetStatusPtrOutput
}

type templateWidgetStatusPtr string

func TemplateWidgetStatusPtr(v string) TemplateWidgetStatusPtrInput {
	return (*templateWidgetStatusPtr)(&v)
}

func (*templateWidgetStatusPtr) ElementType() reflect.Type {
	return templateWidgetStatusPtrType
}

func (in *templateWidgetStatusPtr) ToTemplateWidgetStatusPtrOutput() TemplateWidgetStatusPtrOutput {
	return pulumi.ToOutput(in).(TemplateWidgetStatusPtrOutput)
}

func (in *templateWidgetStatusPtr) ToTemplateWidgetStatusPtrOutputWithContext(ctx context.Context) TemplateWidgetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateWidgetStatusPtrOutput)
}

type TemplateWordCloudCloudLayout string

const (
	TemplateWordCloudCloudLayoutFluid  = TemplateWordCloudCloudLayout("FLUID")
	TemplateWordCloudCloudLayoutNormal = TemplateWordCloudCloudLayout("NORMAL")
)

func (TemplateWordCloudCloudLayout) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWordCloudCloudLayout)(nil)).Elem()
}

func (e TemplateWordCloudCloudLayout) ToTemplateWordCloudCloudLayoutOutput() TemplateWordCloudCloudLayoutOutput {
	return pulumi.ToOutput(e).(TemplateWordCloudCloudLayoutOutput)
}

func (e TemplateWordCloudCloudLayout) ToTemplateWordCloudCloudLayoutOutputWithContext(ctx context.Context) TemplateWordCloudCloudLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateWordCloudCloudLayoutOutput)
}

func (e TemplateWordCloudCloudLayout) ToTemplateWordCloudCloudLayoutPtrOutput() TemplateWordCloudCloudLayoutPtrOutput {
	return e.ToTemplateWordCloudCloudLayoutPtrOutputWithContext(context.Background())
}

func (e TemplateWordCloudCloudLayout) ToTemplateWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) TemplateWordCloudCloudLayoutPtrOutput {
	return TemplateWordCloudCloudLayout(e).ToTemplateWordCloudCloudLayoutOutputWithContext(ctx).ToTemplateWordCloudCloudLayoutPtrOutputWithContext(ctx)
}

func (e TemplateWordCloudCloudLayout) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWordCloudCloudLayout) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWordCloudCloudLayout) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateWordCloudCloudLayout) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateWordCloudCloudLayoutOutput struct{ *pulumi.OutputState }

func (TemplateWordCloudCloudLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWordCloudCloudLayout)(nil)).Elem()
}

func (o TemplateWordCloudCloudLayoutOutput) ToTemplateWordCloudCloudLayoutOutput() TemplateWordCloudCloudLayoutOutput {
	return o
}

func (o TemplateWordCloudCloudLayoutOutput) ToTemplateWordCloudCloudLayoutOutputWithContext(ctx context.Context) TemplateWordCloudCloudLayoutOutput {
	return o
}

func (o TemplateWordCloudCloudLayoutOutput) ToTemplateWordCloudCloudLayoutPtrOutput() TemplateWordCloudCloudLayoutPtrOutput {
	return o.ToTemplateWordCloudCloudLayoutPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudCloudLayoutOutput) ToTemplateWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) TemplateWordCloudCloudLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateWordCloudCloudLayout) *TemplateWordCloudCloudLayout {
		return &v
	}).(TemplateWordCloudCloudLayoutPtrOutput)
}

func (o TemplateWordCloudCloudLayoutOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateWordCloudCloudLayoutOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWordCloudCloudLayout) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateWordCloudCloudLayoutOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudCloudLayoutOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWordCloudCloudLayout) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateWordCloudCloudLayoutPtrOutput struct{ *pulumi.OutputState }

func (TemplateWordCloudCloudLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateWordCloudCloudLayout)(nil)).Elem()
}

func (o TemplateWordCloudCloudLayoutPtrOutput) ToTemplateWordCloudCloudLayoutPtrOutput() TemplateWordCloudCloudLayoutPtrOutput {
	return o
}

func (o TemplateWordCloudCloudLayoutPtrOutput) ToTemplateWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) TemplateWordCloudCloudLayoutPtrOutput {
	return o
}

func (o TemplateWordCloudCloudLayoutPtrOutput) Elem() TemplateWordCloudCloudLayoutOutput {
	return o.ApplyT(func(v *TemplateWordCloudCloudLayout) TemplateWordCloudCloudLayout {
		if v != nil {
			return *v
		}
		var ret TemplateWordCloudCloudLayout
		return ret
	}).(TemplateWordCloudCloudLayoutOutput)
}

func (o TemplateWordCloudCloudLayoutPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudCloudLayoutPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateWordCloudCloudLayout) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateWordCloudCloudLayoutInput is an input type that accepts values of the TemplateWordCloudCloudLayout enum
// A concrete instance of `TemplateWordCloudCloudLayoutInput` can be one of the following:
//
//	TemplateWordCloudCloudLayoutFluid
//	TemplateWordCloudCloudLayoutNormal
type TemplateWordCloudCloudLayoutInput interface {
	pulumi.Input

	ToTemplateWordCloudCloudLayoutOutput() TemplateWordCloudCloudLayoutOutput
	ToTemplateWordCloudCloudLayoutOutputWithContext(context.Context) TemplateWordCloudCloudLayoutOutput
}

var templateWordCloudCloudLayoutPtrType = reflect.TypeOf((**TemplateWordCloudCloudLayout)(nil)).Elem()

type TemplateWordCloudCloudLayoutPtrInput interface {
	pulumi.Input

	ToTemplateWordCloudCloudLayoutPtrOutput() TemplateWordCloudCloudLayoutPtrOutput
	ToTemplateWordCloudCloudLayoutPtrOutputWithContext(context.Context) TemplateWordCloudCloudLayoutPtrOutput
}

type templateWordCloudCloudLayoutPtr string

func TemplateWordCloudCloudLayoutPtr(v string) TemplateWordCloudCloudLayoutPtrInput {
	return (*templateWordCloudCloudLayoutPtr)(&v)
}

func (*templateWordCloudCloudLayoutPtr) ElementType() reflect.Type {
	return templateWordCloudCloudLayoutPtrType
}

func (in *templateWordCloudCloudLayoutPtr) ToTemplateWordCloudCloudLayoutPtrOutput() TemplateWordCloudCloudLayoutPtrOutput {
	return pulumi.ToOutput(in).(TemplateWordCloudCloudLayoutPtrOutput)
}

func (in *templateWordCloudCloudLayoutPtr) ToTemplateWordCloudCloudLayoutPtrOutputWithContext(ctx context.Context) TemplateWordCloudCloudLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateWordCloudCloudLayoutPtrOutput)
}

type TemplateWordCloudWordCasing string

const (
	TemplateWordCloudWordCasingLowerCase    = TemplateWordCloudWordCasing("LOWER_CASE")
	TemplateWordCloudWordCasingExistingCase = TemplateWordCloudWordCasing("EXISTING_CASE")
)

func (TemplateWordCloudWordCasing) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWordCloudWordCasing)(nil)).Elem()
}

func (e TemplateWordCloudWordCasing) ToTemplateWordCloudWordCasingOutput() TemplateWordCloudWordCasingOutput {
	return pulumi.ToOutput(e).(TemplateWordCloudWordCasingOutput)
}

func (e TemplateWordCloudWordCasing) ToTemplateWordCloudWordCasingOutputWithContext(ctx context.Context) TemplateWordCloudWordCasingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateWordCloudWordCasingOutput)
}

func (e TemplateWordCloudWordCasing) ToTemplateWordCloudWordCasingPtrOutput() TemplateWordCloudWordCasingPtrOutput {
	return e.ToTemplateWordCloudWordCasingPtrOutputWithContext(context.Background())
}

func (e TemplateWordCloudWordCasing) ToTemplateWordCloudWordCasingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordCasingPtrOutput {
	return TemplateWordCloudWordCasing(e).ToTemplateWordCloudWordCasingOutputWithContext(ctx).ToTemplateWordCloudWordCasingPtrOutputWithContext(ctx)
}

func (e TemplateWordCloudWordCasing) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWordCloudWordCasing) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWordCloudWordCasing) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateWordCloudWordCasing) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateWordCloudWordCasingOutput struct{ *pulumi.OutputState }

func (TemplateWordCloudWordCasingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWordCloudWordCasing)(nil)).Elem()
}

func (o TemplateWordCloudWordCasingOutput) ToTemplateWordCloudWordCasingOutput() TemplateWordCloudWordCasingOutput {
	return o
}

func (o TemplateWordCloudWordCasingOutput) ToTemplateWordCloudWordCasingOutputWithContext(ctx context.Context) TemplateWordCloudWordCasingOutput {
	return o
}

func (o TemplateWordCloudWordCasingOutput) ToTemplateWordCloudWordCasingPtrOutput() TemplateWordCloudWordCasingPtrOutput {
	return o.ToTemplateWordCloudWordCasingPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordCasingOutput) ToTemplateWordCloudWordCasingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordCasingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateWordCloudWordCasing) *TemplateWordCloudWordCasing {
		return &v
	}).(TemplateWordCloudWordCasingPtrOutput)
}

func (o TemplateWordCloudWordCasingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordCasingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWordCloudWordCasing) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateWordCloudWordCasingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordCasingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWordCloudWordCasing) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateWordCloudWordCasingPtrOutput struct{ *pulumi.OutputState }

func (TemplateWordCloudWordCasingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateWordCloudWordCasing)(nil)).Elem()
}

func (o TemplateWordCloudWordCasingPtrOutput) ToTemplateWordCloudWordCasingPtrOutput() TemplateWordCloudWordCasingPtrOutput {
	return o
}

func (o TemplateWordCloudWordCasingPtrOutput) ToTemplateWordCloudWordCasingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordCasingPtrOutput {
	return o
}

func (o TemplateWordCloudWordCasingPtrOutput) Elem() TemplateWordCloudWordCasingOutput {
	return o.ApplyT(func(v *TemplateWordCloudWordCasing) TemplateWordCloudWordCasing {
		if v != nil {
			return *v
		}
		var ret TemplateWordCloudWordCasing
		return ret
	}).(TemplateWordCloudWordCasingOutput)
}

func (o TemplateWordCloudWordCasingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordCasingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateWordCloudWordCasing) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateWordCloudWordCasingInput is an input type that accepts values of the TemplateWordCloudWordCasing enum
// A concrete instance of `TemplateWordCloudWordCasingInput` can be one of the following:
//
//	TemplateWordCloudWordCasingLowerCase
//	TemplateWordCloudWordCasingExistingCase
type TemplateWordCloudWordCasingInput interface {
	pulumi.Input

	ToTemplateWordCloudWordCasingOutput() TemplateWordCloudWordCasingOutput
	ToTemplateWordCloudWordCasingOutputWithContext(context.Context) TemplateWordCloudWordCasingOutput
}

var templateWordCloudWordCasingPtrType = reflect.TypeOf((**TemplateWordCloudWordCasing)(nil)).Elem()

type TemplateWordCloudWordCasingPtrInput interface {
	pulumi.Input

	ToTemplateWordCloudWordCasingPtrOutput() TemplateWordCloudWordCasingPtrOutput
	ToTemplateWordCloudWordCasingPtrOutputWithContext(context.Context) TemplateWordCloudWordCasingPtrOutput
}

type templateWordCloudWordCasingPtr string

func TemplateWordCloudWordCasingPtr(v string) TemplateWordCloudWordCasingPtrInput {
	return (*templateWordCloudWordCasingPtr)(&v)
}

func (*templateWordCloudWordCasingPtr) ElementType() reflect.Type {
	return templateWordCloudWordCasingPtrType
}

func (in *templateWordCloudWordCasingPtr) ToTemplateWordCloudWordCasingPtrOutput() TemplateWordCloudWordCasingPtrOutput {
	return pulumi.ToOutput(in).(TemplateWordCloudWordCasingPtrOutput)
}

func (in *templateWordCloudWordCasingPtr) ToTemplateWordCloudWordCasingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordCasingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateWordCloudWordCasingPtrOutput)
}

type TemplateWordCloudWordOrientation string

const (
	TemplateWordCloudWordOrientationHorizontal            = TemplateWordCloudWordOrientation("HORIZONTAL")
	TemplateWordCloudWordOrientationHorizontalAndVertical = TemplateWordCloudWordOrientation("HORIZONTAL_AND_VERTICAL")
)

func (TemplateWordCloudWordOrientation) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWordCloudWordOrientation)(nil)).Elem()
}

func (e TemplateWordCloudWordOrientation) ToTemplateWordCloudWordOrientationOutput() TemplateWordCloudWordOrientationOutput {
	return pulumi.ToOutput(e).(TemplateWordCloudWordOrientationOutput)
}

func (e TemplateWordCloudWordOrientation) ToTemplateWordCloudWordOrientationOutputWithContext(ctx context.Context) TemplateWordCloudWordOrientationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateWordCloudWordOrientationOutput)
}

func (e TemplateWordCloudWordOrientation) ToTemplateWordCloudWordOrientationPtrOutput() TemplateWordCloudWordOrientationPtrOutput {
	return e.ToTemplateWordCloudWordOrientationPtrOutputWithContext(context.Background())
}

func (e TemplateWordCloudWordOrientation) ToTemplateWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordOrientationPtrOutput {
	return TemplateWordCloudWordOrientation(e).ToTemplateWordCloudWordOrientationOutputWithContext(ctx).ToTemplateWordCloudWordOrientationPtrOutputWithContext(ctx)
}

func (e TemplateWordCloudWordOrientation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWordCloudWordOrientation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWordCloudWordOrientation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateWordCloudWordOrientation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateWordCloudWordOrientationOutput struct{ *pulumi.OutputState }

func (TemplateWordCloudWordOrientationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWordCloudWordOrientation)(nil)).Elem()
}

func (o TemplateWordCloudWordOrientationOutput) ToTemplateWordCloudWordOrientationOutput() TemplateWordCloudWordOrientationOutput {
	return o
}

func (o TemplateWordCloudWordOrientationOutput) ToTemplateWordCloudWordOrientationOutputWithContext(ctx context.Context) TemplateWordCloudWordOrientationOutput {
	return o
}

func (o TemplateWordCloudWordOrientationOutput) ToTemplateWordCloudWordOrientationPtrOutput() TemplateWordCloudWordOrientationPtrOutput {
	return o.ToTemplateWordCloudWordOrientationPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordOrientationOutput) ToTemplateWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordOrientationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateWordCloudWordOrientation) *TemplateWordCloudWordOrientation {
		return &v
	}).(TemplateWordCloudWordOrientationPtrOutput)
}

func (o TemplateWordCloudWordOrientationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordOrientationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWordCloudWordOrientation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateWordCloudWordOrientationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordOrientationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWordCloudWordOrientation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateWordCloudWordOrientationPtrOutput struct{ *pulumi.OutputState }

func (TemplateWordCloudWordOrientationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateWordCloudWordOrientation)(nil)).Elem()
}

func (o TemplateWordCloudWordOrientationPtrOutput) ToTemplateWordCloudWordOrientationPtrOutput() TemplateWordCloudWordOrientationPtrOutput {
	return o
}

func (o TemplateWordCloudWordOrientationPtrOutput) ToTemplateWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordOrientationPtrOutput {
	return o
}

func (o TemplateWordCloudWordOrientationPtrOutput) Elem() TemplateWordCloudWordOrientationOutput {
	return o.ApplyT(func(v *TemplateWordCloudWordOrientation) TemplateWordCloudWordOrientation {
		if v != nil {
			return *v
		}
		var ret TemplateWordCloudWordOrientation
		return ret
	}).(TemplateWordCloudWordOrientationOutput)
}

func (o TemplateWordCloudWordOrientationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordOrientationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateWordCloudWordOrientation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateWordCloudWordOrientationInput is an input type that accepts values of the TemplateWordCloudWordOrientation enum
// A concrete instance of `TemplateWordCloudWordOrientationInput` can be one of the following:
//
//	TemplateWordCloudWordOrientationHorizontal
//	TemplateWordCloudWordOrientationHorizontalAndVertical
type TemplateWordCloudWordOrientationInput interface {
	pulumi.Input

	ToTemplateWordCloudWordOrientationOutput() TemplateWordCloudWordOrientationOutput
	ToTemplateWordCloudWordOrientationOutputWithContext(context.Context) TemplateWordCloudWordOrientationOutput
}

var templateWordCloudWordOrientationPtrType = reflect.TypeOf((**TemplateWordCloudWordOrientation)(nil)).Elem()

type TemplateWordCloudWordOrientationPtrInput interface {
	pulumi.Input

	ToTemplateWordCloudWordOrientationPtrOutput() TemplateWordCloudWordOrientationPtrOutput
	ToTemplateWordCloudWordOrientationPtrOutputWithContext(context.Context) TemplateWordCloudWordOrientationPtrOutput
}

type templateWordCloudWordOrientationPtr string

func TemplateWordCloudWordOrientationPtr(v string) TemplateWordCloudWordOrientationPtrInput {
	return (*templateWordCloudWordOrientationPtr)(&v)
}

func (*templateWordCloudWordOrientationPtr) ElementType() reflect.Type {
	return templateWordCloudWordOrientationPtrType
}

func (in *templateWordCloudWordOrientationPtr) ToTemplateWordCloudWordOrientationPtrOutput() TemplateWordCloudWordOrientationPtrOutput {
	return pulumi.ToOutput(in).(TemplateWordCloudWordOrientationPtrOutput)
}

func (in *templateWordCloudWordOrientationPtr) ToTemplateWordCloudWordOrientationPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordOrientationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateWordCloudWordOrientationPtrOutput)
}

type TemplateWordCloudWordPadding string

const (
	TemplateWordCloudWordPaddingNone   = TemplateWordCloudWordPadding("NONE")
	TemplateWordCloudWordPaddingSmall  = TemplateWordCloudWordPadding("SMALL")
	TemplateWordCloudWordPaddingMedium = TemplateWordCloudWordPadding("MEDIUM")
	TemplateWordCloudWordPaddingLarge  = TemplateWordCloudWordPadding("LARGE")
)

func (TemplateWordCloudWordPadding) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWordCloudWordPadding)(nil)).Elem()
}

func (e TemplateWordCloudWordPadding) ToTemplateWordCloudWordPaddingOutput() TemplateWordCloudWordPaddingOutput {
	return pulumi.ToOutput(e).(TemplateWordCloudWordPaddingOutput)
}

func (e TemplateWordCloudWordPadding) ToTemplateWordCloudWordPaddingOutputWithContext(ctx context.Context) TemplateWordCloudWordPaddingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateWordCloudWordPaddingOutput)
}

func (e TemplateWordCloudWordPadding) ToTemplateWordCloudWordPaddingPtrOutput() TemplateWordCloudWordPaddingPtrOutput {
	return e.ToTemplateWordCloudWordPaddingPtrOutputWithContext(context.Background())
}

func (e TemplateWordCloudWordPadding) ToTemplateWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordPaddingPtrOutput {
	return TemplateWordCloudWordPadding(e).ToTemplateWordCloudWordPaddingOutputWithContext(ctx).ToTemplateWordCloudWordPaddingPtrOutputWithContext(ctx)
}

func (e TemplateWordCloudWordPadding) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWordCloudWordPadding) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWordCloudWordPadding) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateWordCloudWordPadding) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateWordCloudWordPaddingOutput struct{ *pulumi.OutputState }

func (TemplateWordCloudWordPaddingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWordCloudWordPadding)(nil)).Elem()
}

func (o TemplateWordCloudWordPaddingOutput) ToTemplateWordCloudWordPaddingOutput() TemplateWordCloudWordPaddingOutput {
	return o
}

func (o TemplateWordCloudWordPaddingOutput) ToTemplateWordCloudWordPaddingOutputWithContext(ctx context.Context) TemplateWordCloudWordPaddingOutput {
	return o
}

func (o TemplateWordCloudWordPaddingOutput) ToTemplateWordCloudWordPaddingPtrOutput() TemplateWordCloudWordPaddingPtrOutput {
	return o.ToTemplateWordCloudWordPaddingPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordPaddingOutput) ToTemplateWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordPaddingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateWordCloudWordPadding) *TemplateWordCloudWordPadding {
		return &v
	}).(TemplateWordCloudWordPaddingPtrOutput)
}

func (o TemplateWordCloudWordPaddingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordPaddingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWordCloudWordPadding) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateWordCloudWordPaddingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordPaddingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWordCloudWordPadding) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateWordCloudWordPaddingPtrOutput struct{ *pulumi.OutputState }

func (TemplateWordCloudWordPaddingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateWordCloudWordPadding)(nil)).Elem()
}

func (o TemplateWordCloudWordPaddingPtrOutput) ToTemplateWordCloudWordPaddingPtrOutput() TemplateWordCloudWordPaddingPtrOutput {
	return o
}

func (o TemplateWordCloudWordPaddingPtrOutput) ToTemplateWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordPaddingPtrOutput {
	return o
}

func (o TemplateWordCloudWordPaddingPtrOutput) Elem() TemplateWordCloudWordPaddingOutput {
	return o.ApplyT(func(v *TemplateWordCloudWordPadding) TemplateWordCloudWordPadding {
		if v != nil {
			return *v
		}
		var ret TemplateWordCloudWordPadding
		return ret
	}).(TemplateWordCloudWordPaddingOutput)
}

func (o TemplateWordCloudWordPaddingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordPaddingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateWordCloudWordPadding) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateWordCloudWordPaddingInput is an input type that accepts values of the TemplateWordCloudWordPadding enum
// A concrete instance of `TemplateWordCloudWordPaddingInput` can be one of the following:
//
//	TemplateWordCloudWordPaddingNone
//	TemplateWordCloudWordPaddingSmall
//	TemplateWordCloudWordPaddingMedium
//	TemplateWordCloudWordPaddingLarge
type TemplateWordCloudWordPaddingInput interface {
	pulumi.Input

	ToTemplateWordCloudWordPaddingOutput() TemplateWordCloudWordPaddingOutput
	ToTemplateWordCloudWordPaddingOutputWithContext(context.Context) TemplateWordCloudWordPaddingOutput
}

var templateWordCloudWordPaddingPtrType = reflect.TypeOf((**TemplateWordCloudWordPadding)(nil)).Elem()

type TemplateWordCloudWordPaddingPtrInput interface {
	pulumi.Input

	ToTemplateWordCloudWordPaddingPtrOutput() TemplateWordCloudWordPaddingPtrOutput
	ToTemplateWordCloudWordPaddingPtrOutputWithContext(context.Context) TemplateWordCloudWordPaddingPtrOutput
}

type templateWordCloudWordPaddingPtr string

func TemplateWordCloudWordPaddingPtr(v string) TemplateWordCloudWordPaddingPtrInput {
	return (*templateWordCloudWordPaddingPtr)(&v)
}

func (*templateWordCloudWordPaddingPtr) ElementType() reflect.Type {
	return templateWordCloudWordPaddingPtrType
}

func (in *templateWordCloudWordPaddingPtr) ToTemplateWordCloudWordPaddingPtrOutput() TemplateWordCloudWordPaddingPtrOutput {
	return pulumi.ToOutput(in).(TemplateWordCloudWordPaddingPtrOutput)
}

func (in *templateWordCloudWordPaddingPtr) ToTemplateWordCloudWordPaddingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordPaddingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateWordCloudWordPaddingPtrOutput)
}

type TemplateWordCloudWordScaling string

const (
	TemplateWordCloudWordScalingEmphasize = TemplateWordCloudWordScaling("EMPHASIZE")
	TemplateWordCloudWordScalingNormal    = TemplateWordCloudWordScaling("NORMAL")
)

func (TemplateWordCloudWordScaling) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWordCloudWordScaling)(nil)).Elem()
}

func (e TemplateWordCloudWordScaling) ToTemplateWordCloudWordScalingOutput() TemplateWordCloudWordScalingOutput {
	return pulumi.ToOutput(e).(TemplateWordCloudWordScalingOutput)
}

func (e TemplateWordCloudWordScaling) ToTemplateWordCloudWordScalingOutputWithContext(ctx context.Context) TemplateWordCloudWordScalingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateWordCloudWordScalingOutput)
}

func (e TemplateWordCloudWordScaling) ToTemplateWordCloudWordScalingPtrOutput() TemplateWordCloudWordScalingPtrOutput {
	return e.ToTemplateWordCloudWordScalingPtrOutputWithContext(context.Background())
}

func (e TemplateWordCloudWordScaling) ToTemplateWordCloudWordScalingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordScalingPtrOutput {
	return TemplateWordCloudWordScaling(e).ToTemplateWordCloudWordScalingOutputWithContext(ctx).ToTemplateWordCloudWordScalingPtrOutputWithContext(ctx)
}

func (e TemplateWordCloudWordScaling) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWordCloudWordScaling) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateWordCloudWordScaling) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateWordCloudWordScaling) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateWordCloudWordScalingOutput struct{ *pulumi.OutputState }

func (TemplateWordCloudWordScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateWordCloudWordScaling)(nil)).Elem()
}

func (o TemplateWordCloudWordScalingOutput) ToTemplateWordCloudWordScalingOutput() TemplateWordCloudWordScalingOutput {
	return o
}

func (o TemplateWordCloudWordScalingOutput) ToTemplateWordCloudWordScalingOutputWithContext(ctx context.Context) TemplateWordCloudWordScalingOutput {
	return o
}

func (o TemplateWordCloudWordScalingOutput) ToTemplateWordCloudWordScalingPtrOutput() TemplateWordCloudWordScalingPtrOutput {
	return o.ToTemplateWordCloudWordScalingPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordScalingOutput) ToTemplateWordCloudWordScalingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateWordCloudWordScaling) *TemplateWordCloudWordScaling {
		return &v
	}).(TemplateWordCloudWordScalingPtrOutput)
}

func (o TemplateWordCloudWordScalingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordScalingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWordCloudWordScaling) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateWordCloudWordScalingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordScalingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateWordCloudWordScaling) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateWordCloudWordScalingPtrOutput struct{ *pulumi.OutputState }

func (TemplateWordCloudWordScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateWordCloudWordScaling)(nil)).Elem()
}

func (o TemplateWordCloudWordScalingPtrOutput) ToTemplateWordCloudWordScalingPtrOutput() TemplateWordCloudWordScalingPtrOutput {
	return o
}

func (o TemplateWordCloudWordScalingPtrOutput) ToTemplateWordCloudWordScalingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordScalingPtrOutput {
	return o
}

func (o TemplateWordCloudWordScalingPtrOutput) Elem() TemplateWordCloudWordScalingOutput {
	return o.ApplyT(func(v *TemplateWordCloudWordScaling) TemplateWordCloudWordScaling {
		if v != nil {
			return *v
		}
		var ret TemplateWordCloudWordScaling
		return ret
	}).(TemplateWordCloudWordScalingOutput)
}

func (o TemplateWordCloudWordScalingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateWordCloudWordScalingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateWordCloudWordScaling) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateWordCloudWordScalingInput is an input type that accepts values of the TemplateWordCloudWordScaling enum
// A concrete instance of `TemplateWordCloudWordScalingInput` can be one of the following:
//
//	TemplateWordCloudWordScalingEmphasize
//	TemplateWordCloudWordScalingNormal
type TemplateWordCloudWordScalingInput interface {
	pulumi.Input

	ToTemplateWordCloudWordScalingOutput() TemplateWordCloudWordScalingOutput
	ToTemplateWordCloudWordScalingOutputWithContext(context.Context) TemplateWordCloudWordScalingOutput
}

var templateWordCloudWordScalingPtrType = reflect.TypeOf((**TemplateWordCloudWordScaling)(nil)).Elem()

type TemplateWordCloudWordScalingPtrInput interface {
	pulumi.Input

	ToTemplateWordCloudWordScalingPtrOutput() TemplateWordCloudWordScalingPtrOutput
	ToTemplateWordCloudWordScalingPtrOutputWithContext(context.Context) TemplateWordCloudWordScalingPtrOutput
}

type templateWordCloudWordScalingPtr string

func TemplateWordCloudWordScalingPtr(v string) TemplateWordCloudWordScalingPtrInput {
	return (*templateWordCloudWordScalingPtr)(&v)
}

func (*templateWordCloudWordScalingPtr) ElementType() reflect.Type {
	return templateWordCloudWordScalingPtrType
}

func (in *templateWordCloudWordScalingPtr) ToTemplateWordCloudWordScalingPtrOutput() TemplateWordCloudWordScalingPtrOutput {
	return pulumi.ToOutput(in).(TemplateWordCloudWordScalingPtrOutput)
}

func (in *templateWordCloudWordScalingPtr) ToTemplateWordCloudWordScalingPtrOutputWithContext(ctx context.Context) TemplateWordCloudWordScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateWordCloudWordScalingPtrOutput)
}

type ThemeErrorType string

const (
	ThemeErrorTypeInternalFailure = ThemeErrorType("INTERNAL_FAILURE")
)

type ThemeErrorTypeOutput struct{ *pulumi.OutputState }

func (ThemeErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeErrorType)(nil)).Elem()
}

func (o ThemeErrorTypeOutput) ToThemeErrorTypeOutput() ThemeErrorTypeOutput {
	return o
}

func (o ThemeErrorTypeOutput) ToThemeErrorTypeOutputWithContext(ctx context.Context) ThemeErrorTypeOutput {
	return o
}

func (o ThemeErrorTypeOutput) ToThemeErrorTypePtrOutput() ThemeErrorTypePtrOutput {
	return o.ToThemeErrorTypePtrOutputWithContext(context.Background())
}

func (o ThemeErrorTypeOutput) ToThemeErrorTypePtrOutputWithContext(ctx context.Context) ThemeErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeErrorType) *ThemeErrorType {
		return &v
	}).(ThemeErrorTypePtrOutput)
}

func (o ThemeErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThemeErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThemeErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeErrorTypePtrOutput struct{ *pulumi.OutputState }

func (ThemeErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeErrorType)(nil)).Elem()
}

func (o ThemeErrorTypePtrOutput) ToThemeErrorTypePtrOutput() ThemeErrorTypePtrOutput {
	return o
}

func (o ThemeErrorTypePtrOutput) ToThemeErrorTypePtrOutputWithContext(ctx context.Context) ThemeErrorTypePtrOutput {
	return o
}

func (o ThemeErrorTypePtrOutput) Elem() ThemeErrorTypeOutput {
	return o.ApplyT(func(v *ThemeErrorType) ThemeErrorType {
		if v != nil {
			return *v
		}
		var ret ThemeErrorType
		return ret
	}).(ThemeErrorTypeOutput)
}

func (o ThemeErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ThemeErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeResourceStatus string

const (
	ThemeResourceStatusCreationInProgress = ThemeResourceStatus("CREATION_IN_PROGRESS")
	ThemeResourceStatusCreationSuccessful = ThemeResourceStatus("CREATION_SUCCESSFUL")
	ThemeResourceStatusCreationFailed     = ThemeResourceStatus("CREATION_FAILED")
	ThemeResourceStatusUpdateInProgress   = ThemeResourceStatus("UPDATE_IN_PROGRESS")
	ThemeResourceStatusUpdateSuccessful   = ThemeResourceStatus("UPDATE_SUCCESSFUL")
	ThemeResourceStatusUpdateFailed       = ThemeResourceStatus("UPDATE_FAILED")
	ThemeResourceStatusDeleted            = ThemeResourceStatus("DELETED")
)

type ThemeResourceStatusOutput struct{ *pulumi.OutputState }

func (ThemeResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeResourceStatus)(nil)).Elem()
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusOutput() ThemeResourceStatusOutput {
	return o
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusOutputWithContext(ctx context.Context) ThemeResourceStatusOutput {
	return o
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput {
	return o.ToThemeResourceStatusPtrOutputWithContext(context.Background())
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusPtrOutputWithContext(ctx context.Context) ThemeResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeResourceStatus) *ThemeResourceStatus {
		return &v
	}).(ThemeResourceStatusPtrOutput)
}

func (o ThemeResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThemeResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThemeResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (ThemeResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeResourceStatus)(nil)).Elem()
}

func (o ThemeResourceStatusPtrOutput) ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput {
	return o
}

func (o ThemeResourceStatusPtrOutput) ToThemeResourceStatusPtrOutputWithContext(ctx context.Context) ThemeResourceStatusPtrOutput {
	return o
}

func (o ThemeResourceStatusPtrOutput) Elem() ThemeResourceStatusOutput {
	return o.ApplyT(func(v *ThemeResourceStatus) ThemeResourceStatus {
		if v != nil {
			return *v
		}
		var ret ThemeResourceStatus
		return ret
	}).(ThemeResourceStatusOutput)
}

func (o ThemeResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ThemeResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeType string

const (
	ThemeTypeQuicksight = ThemeType("QUICKSIGHT")
	ThemeTypeCustom     = ThemeType("CUSTOM")
	ThemeTypeAll        = ThemeType("ALL")
)

type ThemeTypeOutput struct{ *pulumi.OutputState }

func (ThemeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeType)(nil)).Elem()
}

func (o ThemeTypeOutput) ToThemeTypeOutput() ThemeTypeOutput {
	return o
}

func (o ThemeTypeOutput) ToThemeTypeOutputWithContext(ctx context.Context) ThemeTypeOutput {
	return o
}

func (o ThemeTypeOutput) ToThemeTypePtrOutput() ThemeTypePtrOutput {
	return o.ToThemeTypePtrOutputWithContext(context.Background())
}

func (o ThemeTypeOutput) ToThemeTypePtrOutputWithContext(ctx context.Context) ThemeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeType) *ThemeType {
		return &v
	}).(ThemeTypePtrOutput)
}

func (o ThemeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThemeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThemeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeTypePtrOutput struct{ *pulumi.OutputState }

func (ThemeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeType)(nil)).Elem()
}

func (o ThemeTypePtrOutput) ToThemeTypePtrOutput() ThemeTypePtrOutput {
	return o
}

func (o ThemeTypePtrOutput) ToThemeTypePtrOutputWithContext(ctx context.Context) ThemeTypePtrOutput {
	return o
}

func (o ThemeTypePtrOutput) Elem() ThemeTypeOutput {
	return o.ApplyT(func(v *ThemeType) ThemeType {
		if v != nil {
			return *v
		}
		var ret ThemeType
		return ret
	}).(ThemeTypeOutput)
}

func (o ThemeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ThemeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicAuthorSpecifiedAggregation string

const (
	TopicAuthorSpecifiedAggregationCount         = TopicAuthorSpecifiedAggregation("COUNT")
	TopicAuthorSpecifiedAggregationDistinctCount = TopicAuthorSpecifiedAggregation("DISTINCT_COUNT")
	TopicAuthorSpecifiedAggregationMin           = TopicAuthorSpecifiedAggregation("MIN")
	TopicAuthorSpecifiedAggregationMax           = TopicAuthorSpecifiedAggregation("MAX")
	TopicAuthorSpecifiedAggregationMedian        = TopicAuthorSpecifiedAggregation("MEDIAN")
	TopicAuthorSpecifiedAggregationSum           = TopicAuthorSpecifiedAggregation("SUM")
	TopicAuthorSpecifiedAggregationAverage       = TopicAuthorSpecifiedAggregation("AVERAGE")
	TopicAuthorSpecifiedAggregationStdev         = TopicAuthorSpecifiedAggregation("STDEV")
	TopicAuthorSpecifiedAggregationStdevp        = TopicAuthorSpecifiedAggregation("STDEVP")
	TopicAuthorSpecifiedAggregationVar           = TopicAuthorSpecifiedAggregation("VAR")
	TopicAuthorSpecifiedAggregationVarp          = TopicAuthorSpecifiedAggregation("VARP")
	TopicAuthorSpecifiedAggregationPercentile    = TopicAuthorSpecifiedAggregation("PERCENTILE")
)

func (TopicAuthorSpecifiedAggregation) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicAuthorSpecifiedAggregation)(nil)).Elem()
}

func (e TopicAuthorSpecifiedAggregation) ToTopicAuthorSpecifiedAggregationOutput() TopicAuthorSpecifiedAggregationOutput {
	return pulumi.ToOutput(e).(TopicAuthorSpecifiedAggregationOutput)
}

func (e TopicAuthorSpecifiedAggregation) ToTopicAuthorSpecifiedAggregationOutputWithContext(ctx context.Context) TopicAuthorSpecifiedAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicAuthorSpecifiedAggregationOutput)
}

func (e TopicAuthorSpecifiedAggregation) ToTopicAuthorSpecifiedAggregationPtrOutput() TopicAuthorSpecifiedAggregationPtrOutput {
	return e.ToTopicAuthorSpecifiedAggregationPtrOutputWithContext(context.Background())
}

func (e TopicAuthorSpecifiedAggregation) ToTopicAuthorSpecifiedAggregationPtrOutputWithContext(ctx context.Context) TopicAuthorSpecifiedAggregationPtrOutput {
	return TopicAuthorSpecifiedAggregation(e).ToTopicAuthorSpecifiedAggregationOutputWithContext(ctx).ToTopicAuthorSpecifiedAggregationPtrOutputWithContext(ctx)
}

func (e TopicAuthorSpecifiedAggregation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicAuthorSpecifiedAggregation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicAuthorSpecifiedAggregation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicAuthorSpecifiedAggregation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicAuthorSpecifiedAggregationOutput struct{ *pulumi.OutputState }

func (TopicAuthorSpecifiedAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicAuthorSpecifiedAggregation)(nil)).Elem()
}

func (o TopicAuthorSpecifiedAggregationOutput) ToTopicAuthorSpecifiedAggregationOutput() TopicAuthorSpecifiedAggregationOutput {
	return o
}

func (o TopicAuthorSpecifiedAggregationOutput) ToTopicAuthorSpecifiedAggregationOutputWithContext(ctx context.Context) TopicAuthorSpecifiedAggregationOutput {
	return o
}

func (o TopicAuthorSpecifiedAggregationOutput) ToTopicAuthorSpecifiedAggregationPtrOutput() TopicAuthorSpecifiedAggregationPtrOutput {
	return o.ToTopicAuthorSpecifiedAggregationPtrOutputWithContext(context.Background())
}

func (o TopicAuthorSpecifiedAggregationOutput) ToTopicAuthorSpecifiedAggregationPtrOutputWithContext(ctx context.Context) TopicAuthorSpecifiedAggregationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicAuthorSpecifiedAggregation) *TopicAuthorSpecifiedAggregation {
		return &v
	}).(TopicAuthorSpecifiedAggregationPtrOutput)
}

func (o TopicAuthorSpecifiedAggregationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicAuthorSpecifiedAggregationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicAuthorSpecifiedAggregation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicAuthorSpecifiedAggregationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicAuthorSpecifiedAggregationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicAuthorSpecifiedAggregation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicAuthorSpecifiedAggregationPtrOutput struct{ *pulumi.OutputState }

func (TopicAuthorSpecifiedAggregationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicAuthorSpecifiedAggregation)(nil)).Elem()
}

func (o TopicAuthorSpecifiedAggregationPtrOutput) ToTopicAuthorSpecifiedAggregationPtrOutput() TopicAuthorSpecifiedAggregationPtrOutput {
	return o
}

func (o TopicAuthorSpecifiedAggregationPtrOutput) ToTopicAuthorSpecifiedAggregationPtrOutputWithContext(ctx context.Context) TopicAuthorSpecifiedAggregationPtrOutput {
	return o
}

func (o TopicAuthorSpecifiedAggregationPtrOutput) Elem() TopicAuthorSpecifiedAggregationOutput {
	return o.ApplyT(func(v *TopicAuthorSpecifiedAggregation) TopicAuthorSpecifiedAggregation {
		if v != nil {
			return *v
		}
		var ret TopicAuthorSpecifiedAggregation
		return ret
	}).(TopicAuthorSpecifiedAggregationOutput)
}

func (o TopicAuthorSpecifiedAggregationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicAuthorSpecifiedAggregationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicAuthorSpecifiedAggregation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicAuthorSpecifiedAggregationInput is an input type that accepts values of the TopicAuthorSpecifiedAggregation enum
// A concrete instance of `TopicAuthorSpecifiedAggregationInput` can be one of the following:
//
//	TopicAuthorSpecifiedAggregationCount
//	TopicAuthorSpecifiedAggregationDistinctCount
//	TopicAuthorSpecifiedAggregationMin
//	TopicAuthorSpecifiedAggregationMax
//	TopicAuthorSpecifiedAggregationMedian
//	TopicAuthorSpecifiedAggregationSum
//	TopicAuthorSpecifiedAggregationAverage
//	TopicAuthorSpecifiedAggregationStdev
//	TopicAuthorSpecifiedAggregationStdevp
//	TopicAuthorSpecifiedAggregationVar
//	TopicAuthorSpecifiedAggregationVarp
//	TopicAuthorSpecifiedAggregationPercentile
type TopicAuthorSpecifiedAggregationInput interface {
	pulumi.Input

	ToTopicAuthorSpecifiedAggregationOutput() TopicAuthorSpecifiedAggregationOutput
	ToTopicAuthorSpecifiedAggregationOutputWithContext(context.Context) TopicAuthorSpecifiedAggregationOutput
}

var topicAuthorSpecifiedAggregationPtrType = reflect.TypeOf((**TopicAuthorSpecifiedAggregation)(nil)).Elem()

type TopicAuthorSpecifiedAggregationPtrInput interface {
	pulumi.Input

	ToTopicAuthorSpecifiedAggregationPtrOutput() TopicAuthorSpecifiedAggregationPtrOutput
	ToTopicAuthorSpecifiedAggregationPtrOutputWithContext(context.Context) TopicAuthorSpecifiedAggregationPtrOutput
}

type topicAuthorSpecifiedAggregationPtr string

func TopicAuthorSpecifiedAggregationPtr(v string) TopicAuthorSpecifiedAggregationPtrInput {
	return (*topicAuthorSpecifiedAggregationPtr)(&v)
}

func (*topicAuthorSpecifiedAggregationPtr) ElementType() reflect.Type {
	return topicAuthorSpecifiedAggregationPtrType
}

func (in *topicAuthorSpecifiedAggregationPtr) ToTopicAuthorSpecifiedAggregationPtrOutput() TopicAuthorSpecifiedAggregationPtrOutput {
	return pulumi.ToOutput(in).(TopicAuthorSpecifiedAggregationPtrOutput)
}

func (in *topicAuthorSpecifiedAggregationPtr) ToTopicAuthorSpecifiedAggregationPtrOutputWithContext(ctx context.Context) TopicAuthorSpecifiedAggregationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicAuthorSpecifiedAggregationPtrOutput)
}

// TopicAuthorSpecifiedAggregationArrayInput is an input type that accepts TopicAuthorSpecifiedAggregationArray and TopicAuthorSpecifiedAggregationArrayOutput values.
// You can construct a concrete instance of `TopicAuthorSpecifiedAggregationArrayInput` via:
//
//	TopicAuthorSpecifiedAggregationArray{ TopicAuthorSpecifiedAggregationArgs{...} }
type TopicAuthorSpecifiedAggregationArrayInput interface {
	pulumi.Input

	ToTopicAuthorSpecifiedAggregationArrayOutput() TopicAuthorSpecifiedAggregationArrayOutput
	ToTopicAuthorSpecifiedAggregationArrayOutputWithContext(context.Context) TopicAuthorSpecifiedAggregationArrayOutput
}

type TopicAuthorSpecifiedAggregationArray []TopicAuthorSpecifiedAggregation

func (TopicAuthorSpecifiedAggregationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicAuthorSpecifiedAggregation)(nil)).Elem()
}

func (i TopicAuthorSpecifiedAggregationArray) ToTopicAuthorSpecifiedAggregationArrayOutput() TopicAuthorSpecifiedAggregationArrayOutput {
	return i.ToTopicAuthorSpecifiedAggregationArrayOutputWithContext(context.Background())
}

func (i TopicAuthorSpecifiedAggregationArray) ToTopicAuthorSpecifiedAggregationArrayOutputWithContext(ctx context.Context) TopicAuthorSpecifiedAggregationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicAuthorSpecifiedAggregationArrayOutput)
}

type TopicAuthorSpecifiedAggregationArrayOutput struct{ *pulumi.OutputState }

func (TopicAuthorSpecifiedAggregationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicAuthorSpecifiedAggregation)(nil)).Elem()
}

func (o TopicAuthorSpecifiedAggregationArrayOutput) ToTopicAuthorSpecifiedAggregationArrayOutput() TopicAuthorSpecifiedAggregationArrayOutput {
	return o
}

func (o TopicAuthorSpecifiedAggregationArrayOutput) ToTopicAuthorSpecifiedAggregationArrayOutputWithContext(ctx context.Context) TopicAuthorSpecifiedAggregationArrayOutput {
	return o
}

func (o TopicAuthorSpecifiedAggregationArrayOutput) Index(i pulumi.IntInput) TopicAuthorSpecifiedAggregationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicAuthorSpecifiedAggregation {
		return vs[0].([]TopicAuthorSpecifiedAggregation)[vs[1].(int)]
	}).(TopicAuthorSpecifiedAggregationOutput)
}

type TopicCategoryFilterFunction string

const (
	TopicCategoryFilterFunctionExact    = TopicCategoryFilterFunction("EXACT")
	TopicCategoryFilterFunctionContains = TopicCategoryFilterFunction("CONTAINS")
)

func (TopicCategoryFilterFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicCategoryFilterFunction)(nil)).Elem()
}

func (e TopicCategoryFilterFunction) ToTopicCategoryFilterFunctionOutput() TopicCategoryFilterFunctionOutput {
	return pulumi.ToOutput(e).(TopicCategoryFilterFunctionOutput)
}

func (e TopicCategoryFilterFunction) ToTopicCategoryFilterFunctionOutputWithContext(ctx context.Context) TopicCategoryFilterFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicCategoryFilterFunctionOutput)
}

func (e TopicCategoryFilterFunction) ToTopicCategoryFilterFunctionPtrOutput() TopicCategoryFilterFunctionPtrOutput {
	return e.ToTopicCategoryFilterFunctionPtrOutputWithContext(context.Background())
}

func (e TopicCategoryFilterFunction) ToTopicCategoryFilterFunctionPtrOutputWithContext(ctx context.Context) TopicCategoryFilterFunctionPtrOutput {
	return TopicCategoryFilterFunction(e).ToTopicCategoryFilterFunctionOutputWithContext(ctx).ToTopicCategoryFilterFunctionPtrOutputWithContext(ctx)
}

func (e TopicCategoryFilterFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicCategoryFilterFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicCategoryFilterFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicCategoryFilterFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicCategoryFilterFunctionOutput struct{ *pulumi.OutputState }

func (TopicCategoryFilterFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicCategoryFilterFunction)(nil)).Elem()
}

func (o TopicCategoryFilterFunctionOutput) ToTopicCategoryFilterFunctionOutput() TopicCategoryFilterFunctionOutput {
	return o
}

func (o TopicCategoryFilterFunctionOutput) ToTopicCategoryFilterFunctionOutputWithContext(ctx context.Context) TopicCategoryFilterFunctionOutput {
	return o
}

func (o TopicCategoryFilterFunctionOutput) ToTopicCategoryFilterFunctionPtrOutput() TopicCategoryFilterFunctionPtrOutput {
	return o.ToTopicCategoryFilterFunctionPtrOutputWithContext(context.Background())
}

func (o TopicCategoryFilterFunctionOutput) ToTopicCategoryFilterFunctionPtrOutputWithContext(ctx context.Context) TopicCategoryFilterFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicCategoryFilterFunction) *TopicCategoryFilterFunction {
		return &v
	}).(TopicCategoryFilterFunctionPtrOutput)
}

func (o TopicCategoryFilterFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicCategoryFilterFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicCategoryFilterFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicCategoryFilterFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicCategoryFilterFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicCategoryFilterFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicCategoryFilterFunctionPtrOutput struct{ *pulumi.OutputState }

func (TopicCategoryFilterFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicCategoryFilterFunction)(nil)).Elem()
}

func (o TopicCategoryFilterFunctionPtrOutput) ToTopicCategoryFilterFunctionPtrOutput() TopicCategoryFilterFunctionPtrOutput {
	return o
}

func (o TopicCategoryFilterFunctionPtrOutput) ToTopicCategoryFilterFunctionPtrOutputWithContext(ctx context.Context) TopicCategoryFilterFunctionPtrOutput {
	return o
}

func (o TopicCategoryFilterFunctionPtrOutput) Elem() TopicCategoryFilterFunctionOutput {
	return o.ApplyT(func(v *TopicCategoryFilterFunction) TopicCategoryFilterFunction {
		if v != nil {
			return *v
		}
		var ret TopicCategoryFilterFunction
		return ret
	}).(TopicCategoryFilterFunctionOutput)
}

func (o TopicCategoryFilterFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicCategoryFilterFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicCategoryFilterFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicCategoryFilterFunctionInput is an input type that accepts values of the TopicCategoryFilterFunction enum
// A concrete instance of `TopicCategoryFilterFunctionInput` can be one of the following:
//
//	TopicCategoryFilterFunctionExact
//	TopicCategoryFilterFunctionContains
type TopicCategoryFilterFunctionInput interface {
	pulumi.Input

	ToTopicCategoryFilterFunctionOutput() TopicCategoryFilterFunctionOutput
	ToTopicCategoryFilterFunctionOutputWithContext(context.Context) TopicCategoryFilterFunctionOutput
}

var topicCategoryFilterFunctionPtrType = reflect.TypeOf((**TopicCategoryFilterFunction)(nil)).Elem()

type TopicCategoryFilterFunctionPtrInput interface {
	pulumi.Input

	ToTopicCategoryFilterFunctionPtrOutput() TopicCategoryFilterFunctionPtrOutput
	ToTopicCategoryFilterFunctionPtrOutputWithContext(context.Context) TopicCategoryFilterFunctionPtrOutput
}

type topicCategoryFilterFunctionPtr string

func TopicCategoryFilterFunctionPtr(v string) TopicCategoryFilterFunctionPtrInput {
	return (*topicCategoryFilterFunctionPtr)(&v)
}

func (*topicCategoryFilterFunctionPtr) ElementType() reflect.Type {
	return topicCategoryFilterFunctionPtrType
}

func (in *topicCategoryFilterFunctionPtr) ToTopicCategoryFilterFunctionPtrOutput() TopicCategoryFilterFunctionPtrOutput {
	return pulumi.ToOutput(in).(TopicCategoryFilterFunctionPtrOutput)
}

func (in *topicCategoryFilterFunctionPtr) ToTopicCategoryFilterFunctionPtrOutputWithContext(ctx context.Context) TopicCategoryFilterFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicCategoryFilterFunctionPtrOutput)
}

type TopicCategoryFilterType string

const (
	TopicCategoryFilterTypeCustomFilter     = TopicCategoryFilterType("CUSTOM_FILTER")
	TopicCategoryFilterTypeCustomFilterList = TopicCategoryFilterType("CUSTOM_FILTER_LIST")
	TopicCategoryFilterTypeFilterList       = TopicCategoryFilterType("FILTER_LIST")
)

func (TopicCategoryFilterType) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicCategoryFilterType)(nil)).Elem()
}

func (e TopicCategoryFilterType) ToTopicCategoryFilterTypeOutput() TopicCategoryFilterTypeOutput {
	return pulumi.ToOutput(e).(TopicCategoryFilterTypeOutput)
}

func (e TopicCategoryFilterType) ToTopicCategoryFilterTypeOutputWithContext(ctx context.Context) TopicCategoryFilterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicCategoryFilterTypeOutput)
}

func (e TopicCategoryFilterType) ToTopicCategoryFilterTypePtrOutput() TopicCategoryFilterTypePtrOutput {
	return e.ToTopicCategoryFilterTypePtrOutputWithContext(context.Background())
}

func (e TopicCategoryFilterType) ToTopicCategoryFilterTypePtrOutputWithContext(ctx context.Context) TopicCategoryFilterTypePtrOutput {
	return TopicCategoryFilterType(e).ToTopicCategoryFilterTypeOutputWithContext(ctx).ToTopicCategoryFilterTypePtrOutputWithContext(ctx)
}

func (e TopicCategoryFilterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicCategoryFilterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicCategoryFilterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicCategoryFilterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicCategoryFilterTypeOutput struct{ *pulumi.OutputState }

func (TopicCategoryFilterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicCategoryFilterType)(nil)).Elem()
}

func (o TopicCategoryFilterTypeOutput) ToTopicCategoryFilterTypeOutput() TopicCategoryFilterTypeOutput {
	return o
}

func (o TopicCategoryFilterTypeOutput) ToTopicCategoryFilterTypeOutputWithContext(ctx context.Context) TopicCategoryFilterTypeOutput {
	return o
}

func (o TopicCategoryFilterTypeOutput) ToTopicCategoryFilterTypePtrOutput() TopicCategoryFilterTypePtrOutput {
	return o.ToTopicCategoryFilterTypePtrOutputWithContext(context.Background())
}

func (o TopicCategoryFilterTypeOutput) ToTopicCategoryFilterTypePtrOutputWithContext(ctx context.Context) TopicCategoryFilterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicCategoryFilterType) *TopicCategoryFilterType {
		return &v
	}).(TopicCategoryFilterTypePtrOutput)
}

func (o TopicCategoryFilterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicCategoryFilterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicCategoryFilterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicCategoryFilterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicCategoryFilterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicCategoryFilterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicCategoryFilterTypePtrOutput struct{ *pulumi.OutputState }

func (TopicCategoryFilterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicCategoryFilterType)(nil)).Elem()
}

func (o TopicCategoryFilterTypePtrOutput) ToTopicCategoryFilterTypePtrOutput() TopicCategoryFilterTypePtrOutput {
	return o
}

func (o TopicCategoryFilterTypePtrOutput) ToTopicCategoryFilterTypePtrOutputWithContext(ctx context.Context) TopicCategoryFilterTypePtrOutput {
	return o
}

func (o TopicCategoryFilterTypePtrOutput) Elem() TopicCategoryFilterTypeOutput {
	return o.ApplyT(func(v *TopicCategoryFilterType) TopicCategoryFilterType {
		if v != nil {
			return *v
		}
		var ret TopicCategoryFilterType
		return ret
	}).(TopicCategoryFilterTypeOutput)
}

func (o TopicCategoryFilterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicCategoryFilterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicCategoryFilterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicCategoryFilterTypeInput is an input type that accepts values of the TopicCategoryFilterType enum
// A concrete instance of `TopicCategoryFilterTypeInput` can be one of the following:
//
//	TopicCategoryFilterTypeCustomFilter
//	TopicCategoryFilterTypeCustomFilterList
//	TopicCategoryFilterTypeFilterList
type TopicCategoryFilterTypeInput interface {
	pulumi.Input

	ToTopicCategoryFilterTypeOutput() TopicCategoryFilterTypeOutput
	ToTopicCategoryFilterTypeOutputWithContext(context.Context) TopicCategoryFilterTypeOutput
}

var topicCategoryFilterTypePtrType = reflect.TypeOf((**TopicCategoryFilterType)(nil)).Elem()

type TopicCategoryFilterTypePtrInput interface {
	pulumi.Input

	ToTopicCategoryFilterTypePtrOutput() TopicCategoryFilterTypePtrOutput
	ToTopicCategoryFilterTypePtrOutputWithContext(context.Context) TopicCategoryFilterTypePtrOutput
}

type topicCategoryFilterTypePtr string

func TopicCategoryFilterTypePtr(v string) TopicCategoryFilterTypePtrInput {
	return (*topicCategoryFilterTypePtr)(&v)
}

func (*topicCategoryFilterTypePtr) ElementType() reflect.Type {
	return topicCategoryFilterTypePtrType
}

func (in *topicCategoryFilterTypePtr) ToTopicCategoryFilterTypePtrOutput() TopicCategoryFilterTypePtrOutput {
	return pulumi.ToOutput(in).(TopicCategoryFilterTypePtrOutput)
}

func (in *topicCategoryFilterTypePtr) ToTopicCategoryFilterTypePtrOutputWithContext(ctx context.Context) TopicCategoryFilterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicCategoryFilterTypePtrOutput)
}

type TopicColumnDataRole string

const (
	TopicColumnDataRoleDimension = TopicColumnDataRole("DIMENSION")
	TopicColumnDataRoleMeasure   = TopicColumnDataRole("MEASURE")
)

func (TopicColumnDataRole) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicColumnDataRole)(nil)).Elem()
}

func (e TopicColumnDataRole) ToTopicColumnDataRoleOutput() TopicColumnDataRoleOutput {
	return pulumi.ToOutput(e).(TopicColumnDataRoleOutput)
}

func (e TopicColumnDataRole) ToTopicColumnDataRoleOutputWithContext(ctx context.Context) TopicColumnDataRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicColumnDataRoleOutput)
}

func (e TopicColumnDataRole) ToTopicColumnDataRolePtrOutput() TopicColumnDataRolePtrOutput {
	return e.ToTopicColumnDataRolePtrOutputWithContext(context.Background())
}

func (e TopicColumnDataRole) ToTopicColumnDataRolePtrOutputWithContext(ctx context.Context) TopicColumnDataRolePtrOutput {
	return TopicColumnDataRole(e).ToTopicColumnDataRoleOutputWithContext(ctx).ToTopicColumnDataRolePtrOutputWithContext(ctx)
}

func (e TopicColumnDataRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicColumnDataRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicColumnDataRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicColumnDataRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicColumnDataRoleOutput struct{ *pulumi.OutputState }

func (TopicColumnDataRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicColumnDataRole)(nil)).Elem()
}

func (o TopicColumnDataRoleOutput) ToTopicColumnDataRoleOutput() TopicColumnDataRoleOutput {
	return o
}

func (o TopicColumnDataRoleOutput) ToTopicColumnDataRoleOutputWithContext(ctx context.Context) TopicColumnDataRoleOutput {
	return o
}

func (o TopicColumnDataRoleOutput) ToTopicColumnDataRolePtrOutput() TopicColumnDataRolePtrOutput {
	return o.ToTopicColumnDataRolePtrOutputWithContext(context.Background())
}

func (o TopicColumnDataRoleOutput) ToTopicColumnDataRolePtrOutputWithContext(ctx context.Context) TopicColumnDataRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicColumnDataRole) *TopicColumnDataRole {
		return &v
	}).(TopicColumnDataRolePtrOutput)
}

func (o TopicColumnDataRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicColumnDataRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicColumnDataRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicColumnDataRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicColumnDataRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicColumnDataRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicColumnDataRolePtrOutput struct{ *pulumi.OutputState }

func (TopicColumnDataRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicColumnDataRole)(nil)).Elem()
}

func (o TopicColumnDataRolePtrOutput) ToTopicColumnDataRolePtrOutput() TopicColumnDataRolePtrOutput {
	return o
}

func (o TopicColumnDataRolePtrOutput) ToTopicColumnDataRolePtrOutputWithContext(ctx context.Context) TopicColumnDataRolePtrOutput {
	return o
}

func (o TopicColumnDataRolePtrOutput) Elem() TopicColumnDataRoleOutput {
	return o.ApplyT(func(v *TopicColumnDataRole) TopicColumnDataRole {
		if v != nil {
			return *v
		}
		var ret TopicColumnDataRole
		return ret
	}).(TopicColumnDataRoleOutput)
}

func (o TopicColumnDataRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicColumnDataRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicColumnDataRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicColumnDataRoleInput is an input type that accepts values of the TopicColumnDataRole enum
// A concrete instance of `TopicColumnDataRoleInput` can be one of the following:
//
//	TopicColumnDataRoleDimension
//	TopicColumnDataRoleMeasure
type TopicColumnDataRoleInput interface {
	pulumi.Input

	ToTopicColumnDataRoleOutput() TopicColumnDataRoleOutput
	ToTopicColumnDataRoleOutputWithContext(context.Context) TopicColumnDataRoleOutput
}

var topicColumnDataRolePtrType = reflect.TypeOf((**TopicColumnDataRole)(nil)).Elem()

type TopicColumnDataRolePtrInput interface {
	pulumi.Input

	ToTopicColumnDataRolePtrOutput() TopicColumnDataRolePtrOutput
	ToTopicColumnDataRolePtrOutputWithContext(context.Context) TopicColumnDataRolePtrOutput
}

type topicColumnDataRolePtr string

func TopicColumnDataRolePtr(v string) TopicColumnDataRolePtrInput {
	return (*topicColumnDataRolePtr)(&v)
}

func (*topicColumnDataRolePtr) ElementType() reflect.Type {
	return topicColumnDataRolePtrType
}

func (in *topicColumnDataRolePtr) ToTopicColumnDataRolePtrOutput() TopicColumnDataRolePtrOutput {
	return pulumi.ToOutput(in).(TopicColumnDataRolePtrOutput)
}

func (in *topicColumnDataRolePtr) ToTopicColumnDataRolePtrOutputWithContext(ctx context.Context) TopicColumnDataRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicColumnDataRolePtrOutput)
}

type TopicColumnOrderingType string

const (
	TopicColumnOrderingTypeGreaterIsBetter = TopicColumnOrderingType("GREATER_IS_BETTER")
	TopicColumnOrderingTypeLesserIsBetter  = TopicColumnOrderingType("LESSER_IS_BETTER")
	TopicColumnOrderingTypeSpecified       = TopicColumnOrderingType("SPECIFIED")
)

func (TopicColumnOrderingType) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicColumnOrderingType)(nil)).Elem()
}

func (e TopicColumnOrderingType) ToTopicColumnOrderingTypeOutput() TopicColumnOrderingTypeOutput {
	return pulumi.ToOutput(e).(TopicColumnOrderingTypeOutput)
}

func (e TopicColumnOrderingType) ToTopicColumnOrderingTypeOutputWithContext(ctx context.Context) TopicColumnOrderingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicColumnOrderingTypeOutput)
}

func (e TopicColumnOrderingType) ToTopicColumnOrderingTypePtrOutput() TopicColumnOrderingTypePtrOutput {
	return e.ToTopicColumnOrderingTypePtrOutputWithContext(context.Background())
}

func (e TopicColumnOrderingType) ToTopicColumnOrderingTypePtrOutputWithContext(ctx context.Context) TopicColumnOrderingTypePtrOutput {
	return TopicColumnOrderingType(e).ToTopicColumnOrderingTypeOutputWithContext(ctx).ToTopicColumnOrderingTypePtrOutputWithContext(ctx)
}

func (e TopicColumnOrderingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicColumnOrderingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicColumnOrderingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicColumnOrderingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicColumnOrderingTypeOutput struct{ *pulumi.OutputState }

func (TopicColumnOrderingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicColumnOrderingType)(nil)).Elem()
}

func (o TopicColumnOrderingTypeOutput) ToTopicColumnOrderingTypeOutput() TopicColumnOrderingTypeOutput {
	return o
}

func (o TopicColumnOrderingTypeOutput) ToTopicColumnOrderingTypeOutputWithContext(ctx context.Context) TopicColumnOrderingTypeOutput {
	return o
}

func (o TopicColumnOrderingTypeOutput) ToTopicColumnOrderingTypePtrOutput() TopicColumnOrderingTypePtrOutput {
	return o.ToTopicColumnOrderingTypePtrOutputWithContext(context.Background())
}

func (o TopicColumnOrderingTypeOutput) ToTopicColumnOrderingTypePtrOutputWithContext(ctx context.Context) TopicColumnOrderingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicColumnOrderingType) *TopicColumnOrderingType {
		return &v
	}).(TopicColumnOrderingTypePtrOutput)
}

func (o TopicColumnOrderingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicColumnOrderingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicColumnOrderingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicColumnOrderingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicColumnOrderingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicColumnOrderingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicColumnOrderingTypePtrOutput struct{ *pulumi.OutputState }

func (TopicColumnOrderingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicColumnOrderingType)(nil)).Elem()
}

func (o TopicColumnOrderingTypePtrOutput) ToTopicColumnOrderingTypePtrOutput() TopicColumnOrderingTypePtrOutput {
	return o
}

func (o TopicColumnOrderingTypePtrOutput) ToTopicColumnOrderingTypePtrOutputWithContext(ctx context.Context) TopicColumnOrderingTypePtrOutput {
	return o
}

func (o TopicColumnOrderingTypePtrOutput) Elem() TopicColumnOrderingTypeOutput {
	return o.ApplyT(func(v *TopicColumnOrderingType) TopicColumnOrderingType {
		if v != nil {
			return *v
		}
		var ret TopicColumnOrderingType
		return ret
	}).(TopicColumnOrderingTypeOutput)
}

func (o TopicColumnOrderingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicColumnOrderingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicColumnOrderingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicColumnOrderingTypeInput is an input type that accepts values of the TopicColumnOrderingType enum
// A concrete instance of `TopicColumnOrderingTypeInput` can be one of the following:
//
//	TopicColumnOrderingTypeGreaterIsBetter
//	TopicColumnOrderingTypeLesserIsBetter
//	TopicColumnOrderingTypeSpecified
type TopicColumnOrderingTypeInput interface {
	pulumi.Input

	ToTopicColumnOrderingTypeOutput() TopicColumnOrderingTypeOutput
	ToTopicColumnOrderingTypeOutputWithContext(context.Context) TopicColumnOrderingTypeOutput
}

var topicColumnOrderingTypePtrType = reflect.TypeOf((**TopicColumnOrderingType)(nil)).Elem()

type TopicColumnOrderingTypePtrInput interface {
	pulumi.Input

	ToTopicColumnOrderingTypePtrOutput() TopicColumnOrderingTypePtrOutput
	ToTopicColumnOrderingTypePtrOutputWithContext(context.Context) TopicColumnOrderingTypePtrOutput
}

type topicColumnOrderingTypePtr string

func TopicColumnOrderingTypePtr(v string) TopicColumnOrderingTypePtrInput {
	return (*topicColumnOrderingTypePtr)(&v)
}

func (*topicColumnOrderingTypePtr) ElementType() reflect.Type {
	return topicColumnOrderingTypePtrType
}

func (in *topicColumnOrderingTypePtr) ToTopicColumnOrderingTypePtrOutput() TopicColumnOrderingTypePtrOutput {
	return pulumi.ToOutput(in).(TopicColumnOrderingTypePtrOutput)
}

func (in *topicColumnOrderingTypePtr) ToTopicColumnOrderingTypePtrOutputWithContext(ctx context.Context) TopicColumnOrderingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicColumnOrderingTypePtrOutput)
}

type TopicConstantType string

const (
	TopicConstantTypeSingular   = TopicConstantType("SINGULAR")
	TopicConstantTypeRange      = TopicConstantType("RANGE")
	TopicConstantTypeCollective = TopicConstantType("COLLECTIVE")
)

func (TopicConstantType) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicConstantType)(nil)).Elem()
}

func (e TopicConstantType) ToTopicConstantTypeOutput() TopicConstantTypeOutput {
	return pulumi.ToOutput(e).(TopicConstantTypeOutput)
}

func (e TopicConstantType) ToTopicConstantTypeOutputWithContext(ctx context.Context) TopicConstantTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicConstantTypeOutput)
}

func (e TopicConstantType) ToTopicConstantTypePtrOutput() TopicConstantTypePtrOutput {
	return e.ToTopicConstantTypePtrOutputWithContext(context.Background())
}

func (e TopicConstantType) ToTopicConstantTypePtrOutputWithContext(ctx context.Context) TopicConstantTypePtrOutput {
	return TopicConstantType(e).ToTopicConstantTypeOutputWithContext(ctx).ToTopicConstantTypePtrOutputWithContext(ctx)
}

func (e TopicConstantType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicConstantType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicConstantType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicConstantType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicConstantTypeOutput struct{ *pulumi.OutputState }

func (TopicConstantTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicConstantType)(nil)).Elem()
}

func (o TopicConstantTypeOutput) ToTopicConstantTypeOutput() TopicConstantTypeOutput {
	return o
}

func (o TopicConstantTypeOutput) ToTopicConstantTypeOutputWithContext(ctx context.Context) TopicConstantTypeOutput {
	return o
}

func (o TopicConstantTypeOutput) ToTopicConstantTypePtrOutput() TopicConstantTypePtrOutput {
	return o.ToTopicConstantTypePtrOutputWithContext(context.Background())
}

func (o TopicConstantTypeOutput) ToTopicConstantTypePtrOutputWithContext(ctx context.Context) TopicConstantTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicConstantType) *TopicConstantType {
		return &v
	}).(TopicConstantTypePtrOutput)
}

func (o TopicConstantTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicConstantTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicConstantType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicConstantTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicConstantTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicConstantType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicConstantTypePtrOutput struct{ *pulumi.OutputState }

func (TopicConstantTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicConstantType)(nil)).Elem()
}

func (o TopicConstantTypePtrOutput) ToTopicConstantTypePtrOutput() TopicConstantTypePtrOutput {
	return o
}

func (o TopicConstantTypePtrOutput) ToTopicConstantTypePtrOutputWithContext(ctx context.Context) TopicConstantTypePtrOutput {
	return o
}

func (o TopicConstantTypePtrOutput) Elem() TopicConstantTypeOutput {
	return o.ApplyT(func(v *TopicConstantType) TopicConstantType {
		if v != nil {
			return *v
		}
		var ret TopicConstantType
		return ret
	}).(TopicConstantTypeOutput)
}

func (o TopicConstantTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicConstantTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicConstantType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicConstantTypeInput is an input type that accepts values of the TopicConstantType enum
// A concrete instance of `TopicConstantTypeInput` can be one of the following:
//
//	TopicConstantTypeSingular
//	TopicConstantTypeRange
//	TopicConstantTypeCollective
type TopicConstantTypeInput interface {
	pulumi.Input

	ToTopicConstantTypeOutput() TopicConstantTypeOutput
	ToTopicConstantTypeOutputWithContext(context.Context) TopicConstantTypeOutput
}

var topicConstantTypePtrType = reflect.TypeOf((**TopicConstantType)(nil)).Elem()

type TopicConstantTypePtrInput interface {
	pulumi.Input

	ToTopicConstantTypePtrOutput() TopicConstantTypePtrOutput
	ToTopicConstantTypePtrOutputWithContext(context.Context) TopicConstantTypePtrOutput
}

type topicConstantTypePtr string

func TopicConstantTypePtr(v string) TopicConstantTypePtrInput {
	return (*topicConstantTypePtr)(&v)
}

func (*topicConstantTypePtr) ElementType() reflect.Type {
	return topicConstantTypePtrType
}

func (in *topicConstantTypePtr) ToTopicConstantTypePtrOutput() TopicConstantTypePtrOutput {
	return pulumi.ToOutput(in).(TopicConstantTypePtrOutput)
}

func (in *topicConstantTypePtr) ToTopicConstantTypePtrOutputWithContext(ctx context.Context) TopicConstantTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicConstantTypePtrOutput)
}

type TopicDefaultAggregation string

const (
	TopicDefaultAggregationSum           = TopicDefaultAggregation("SUM")
	TopicDefaultAggregationMax           = TopicDefaultAggregation("MAX")
	TopicDefaultAggregationMin           = TopicDefaultAggregation("MIN")
	TopicDefaultAggregationCount         = TopicDefaultAggregation("COUNT")
	TopicDefaultAggregationDistinctCount = TopicDefaultAggregation("DISTINCT_COUNT")
	TopicDefaultAggregationAverage       = TopicDefaultAggregation("AVERAGE")
	TopicDefaultAggregationMedian        = TopicDefaultAggregation("MEDIAN")
	TopicDefaultAggregationStdev         = TopicDefaultAggregation("STDEV")
	TopicDefaultAggregationStdevp        = TopicDefaultAggregation("STDEVP")
	TopicDefaultAggregationVar           = TopicDefaultAggregation("VAR")
	TopicDefaultAggregationVarp          = TopicDefaultAggregation("VARP")
)

func (TopicDefaultAggregation) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicDefaultAggregation)(nil)).Elem()
}

func (e TopicDefaultAggregation) ToTopicDefaultAggregationOutput() TopicDefaultAggregationOutput {
	return pulumi.ToOutput(e).(TopicDefaultAggregationOutput)
}

func (e TopicDefaultAggregation) ToTopicDefaultAggregationOutputWithContext(ctx context.Context) TopicDefaultAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicDefaultAggregationOutput)
}

func (e TopicDefaultAggregation) ToTopicDefaultAggregationPtrOutput() TopicDefaultAggregationPtrOutput {
	return e.ToTopicDefaultAggregationPtrOutputWithContext(context.Background())
}

func (e TopicDefaultAggregation) ToTopicDefaultAggregationPtrOutputWithContext(ctx context.Context) TopicDefaultAggregationPtrOutput {
	return TopicDefaultAggregation(e).ToTopicDefaultAggregationOutputWithContext(ctx).ToTopicDefaultAggregationPtrOutputWithContext(ctx)
}

func (e TopicDefaultAggregation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicDefaultAggregation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicDefaultAggregation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicDefaultAggregation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicDefaultAggregationOutput struct{ *pulumi.OutputState }

func (TopicDefaultAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicDefaultAggregation)(nil)).Elem()
}

func (o TopicDefaultAggregationOutput) ToTopicDefaultAggregationOutput() TopicDefaultAggregationOutput {
	return o
}

func (o TopicDefaultAggregationOutput) ToTopicDefaultAggregationOutputWithContext(ctx context.Context) TopicDefaultAggregationOutput {
	return o
}

func (o TopicDefaultAggregationOutput) ToTopicDefaultAggregationPtrOutput() TopicDefaultAggregationPtrOutput {
	return o.ToTopicDefaultAggregationPtrOutputWithContext(context.Background())
}

func (o TopicDefaultAggregationOutput) ToTopicDefaultAggregationPtrOutputWithContext(ctx context.Context) TopicDefaultAggregationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicDefaultAggregation) *TopicDefaultAggregation {
		return &v
	}).(TopicDefaultAggregationPtrOutput)
}

func (o TopicDefaultAggregationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicDefaultAggregationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicDefaultAggregation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicDefaultAggregationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicDefaultAggregationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicDefaultAggregation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicDefaultAggregationPtrOutput struct{ *pulumi.OutputState }

func (TopicDefaultAggregationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicDefaultAggregation)(nil)).Elem()
}

func (o TopicDefaultAggregationPtrOutput) ToTopicDefaultAggregationPtrOutput() TopicDefaultAggregationPtrOutput {
	return o
}

func (o TopicDefaultAggregationPtrOutput) ToTopicDefaultAggregationPtrOutputWithContext(ctx context.Context) TopicDefaultAggregationPtrOutput {
	return o
}

func (o TopicDefaultAggregationPtrOutput) Elem() TopicDefaultAggregationOutput {
	return o.ApplyT(func(v *TopicDefaultAggregation) TopicDefaultAggregation {
		if v != nil {
			return *v
		}
		var ret TopicDefaultAggregation
		return ret
	}).(TopicDefaultAggregationOutput)
}

func (o TopicDefaultAggregationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicDefaultAggregationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicDefaultAggregation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicDefaultAggregationInput is an input type that accepts values of the TopicDefaultAggregation enum
// A concrete instance of `TopicDefaultAggregationInput` can be one of the following:
//
//	TopicDefaultAggregationSum
//	TopicDefaultAggregationMax
//	TopicDefaultAggregationMin
//	TopicDefaultAggregationCount
//	TopicDefaultAggregationDistinctCount
//	TopicDefaultAggregationAverage
//	TopicDefaultAggregationMedian
//	TopicDefaultAggregationStdev
//	TopicDefaultAggregationStdevp
//	TopicDefaultAggregationVar
//	TopicDefaultAggregationVarp
type TopicDefaultAggregationInput interface {
	pulumi.Input

	ToTopicDefaultAggregationOutput() TopicDefaultAggregationOutput
	ToTopicDefaultAggregationOutputWithContext(context.Context) TopicDefaultAggregationOutput
}

var topicDefaultAggregationPtrType = reflect.TypeOf((**TopicDefaultAggregation)(nil)).Elem()

type TopicDefaultAggregationPtrInput interface {
	pulumi.Input

	ToTopicDefaultAggregationPtrOutput() TopicDefaultAggregationPtrOutput
	ToTopicDefaultAggregationPtrOutputWithContext(context.Context) TopicDefaultAggregationPtrOutput
}

type topicDefaultAggregationPtr string

func TopicDefaultAggregationPtr(v string) TopicDefaultAggregationPtrInput {
	return (*topicDefaultAggregationPtr)(&v)
}

func (*topicDefaultAggregationPtr) ElementType() reflect.Type {
	return topicDefaultAggregationPtrType
}

func (in *topicDefaultAggregationPtr) ToTopicDefaultAggregationPtrOutput() TopicDefaultAggregationPtrOutput {
	return pulumi.ToOutput(in).(TopicDefaultAggregationPtrOutput)
}

func (in *topicDefaultAggregationPtr) ToTopicDefaultAggregationPtrOutputWithContext(ctx context.Context) TopicDefaultAggregationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicDefaultAggregationPtrOutput)
}

type TopicDisplayFormat string

const (
	TopicDisplayFormatAuto     = TopicDisplayFormat("AUTO")
	TopicDisplayFormatPercent  = TopicDisplayFormat("PERCENT")
	TopicDisplayFormatCurrency = TopicDisplayFormat("CURRENCY")
	TopicDisplayFormatNumber   = TopicDisplayFormat("NUMBER")
	TopicDisplayFormatDate     = TopicDisplayFormat("DATE")
	TopicDisplayFormatString   = TopicDisplayFormat("STRING")
)

func (TopicDisplayFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicDisplayFormat)(nil)).Elem()
}

func (e TopicDisplayFormat) ToTopicDisplayFormatOutput() TopicDisplayFormatOutput {
	return pulumi.ToOutput(e).(TopicDisplayFormatOutput)
}

func (e TopicDisplayFormat) ToTopicDisplayFormatOutputWithContext(ctx context.Context) TopicDisplayFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicDisplayFormatOutput)
}

func (e TopicDisplayFormat) ToTopicDisplayFormatPtrOutput() TopicDisplayFormatPtrOutput {
	return e.ToTopicDisplayFormatPtrOutputWithContext(context.Background())
}

func (e TopicDisplayFormat) ToTopicDisplayFormatPtrOutputWithContext(ctx context.Context) TopicDisplayFormatPtrOutput {
	return TopicDisplayFormat(e).ToTopicDisplayFormatOutputWithContext(ctx).ToTopicDisplayFormatPtrOutputWithContext(ctx)
}

func (e TopicDisplayFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicDisplayFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicDisplayFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicDisplayFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicDisplayFormatOutput struct{ *pulumi.OutputState }

func (TopicDisplayFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicDisplayFormat)(nil)).Elem()
}

func (o TopicDisplayFormatOutput) ToTopicDisplayFormatOutput() TopicDisplayFormatOutput {
	return o
}

func (o TopicDisplayFormatOutput) ToTopicDisplayFormatOutputWithContext(ctx context.Context) TopicDisplayFormatOutput {
	return o
}

func (o TopicDisplayFormatOutput) ToTopicDisplayFormatPtrOutput() TopicDisplayFormatPtrOutput {
	return o.ToTopicDisplayFormatPtrOutputWithContext(context.Background())
}

func (o TopicDisplayFormatOutput) ToTopicDisplayFormatPtrOutputWithContext(ctx context.Context) TopicDisplayFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicDisplayFormat) *TopicDisplayFormat {
		return &v
	}).(TopicDisplayFormatPtrOutput)
}

func (o TopicDisplayFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicDisplayFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicDisplayFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicDisplayFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicDisplayFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicDisplayFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicDisplayFormatPtrOutput struct{ *pulumi.OutputState }

func (TopicDisplayFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicDisplayFormat)(nil)).Elem()
}

func (o TopicDisplayFormatPtrOutput) ToTopicDisplayFormatPtrOutput() TopicDisplayFormatPtrOutput {
	return o
}

func (o TopicDisplayFormatPtrOutput) ToTopicDisplayFormatPtrOutputWithContext(ctx context.Context) TopicDisplayFormatPtrOutput {
	return o
}

func (o TopicDisplayFormatPtrOutput) Elem() TopicDisplayFormatOutput {
	return o.ApplyT(func(v *TopicDisplayFormat) TopicDisplayFormat {
		if v != nil {
			return *v
		}
		var ret TopicDisplayFormat
		return ret
	}).(TopicDisplayFormatOutput)
}

func (o TopicDisplayFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicDisplayFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicDisplayFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicDisplayFormatInput is an input type that accepts values of the TopicDisplayFormat enum
// A concrete instance of `TopicDisplayFormatInput` can be one of the following:
//
//	TopicDisplayFormatAuto
//	TopicDisplayFormatPercent
//	TopicDisplayFormatCurrency
//	TopicDisplayFormatNumber
//	TopicDisplayFormatDate
//	TopicDisplayFormatString
type TopicDisplayFormatInput interface {
	pulumi.Input

	ToTopicDisplayFormatOutput() TopicDisplayFormatOutput
	ToTopicDisplayFormatOutputWithContext(context.Context) TopicDisplayFormatOutput
}

var topicDisplayFormatPtrType = reflect.TypeOf((**TopicDisplayFormat)(nil)).Elem()

type TopicDisplayFormatPtrInput interface {
	pulumi.Input

	ToTopicDisplayFormatPtrOutput() TopicDisplayFormatPtrOutput
	ToTopicDisplayFormatPtrOutputWithContext(context.Context) TopicDisplayFormatPtrOutput
}

type topicDisplayFormatPtr string

func TopicDisplayFormatPtr(v string) TopicDisplayFormatPtrInput {
	return (*topicDisplayFormatPtr)(&v)
}

func (*topicDisplayFormatPtr) ElementType() reflect.Type {
	return topicDisplayFormatPtrType
}

func (in *topicDisplayFormatPtr) ToTopicDisplayFormatPtrOutput() TopicDisplayFormatPtrOutput {
	return pulumi.ToOutput(in).(TopicDisplayFormatPtrOutput)
}

func (in *topicDisplayFormatPtr) ToTopicDisplayFormatPtrOutputWithContext(ctx context.Context) TopicDisplayFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicDisplayFormatPtrOutput)
}

type TopicFilterClass string

const (
	TopicFilterClassEnforcedValueFilter    = TopicFilterClass("ENFORCED_VALUE_FILTER")
	TopicFilterClassConditionalValueFilter = TopicFilterClass("CONDITIONAL_VALUE_FILTER")
	TopicFilterClassNamedValueFilter       = TopicFilterClass("NAMED_VALUE_FILTER")
)

func (TopicFilterClass) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicFilterClass)(nil)).Elem()
}

func (e TopicFilterClass) ToTopicFilterClassOutput() TopicFilterClassOutput {
	return pulumi.ToOutput(e).(TopicFilterClassOutput)
}

func (e TopicFilterClass) ToTopicFilterClassOutputWithContext(ctx context.Context) TopicFilterClassOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicFilterClassOutput)
}

func (e TopicFilterClass) ToTopicFilterClassPtrOutput() TopicFilterClassPtrOutput {
	return e.ToTopicFilterClassPtrOutputWithContext(context.Background())
}

func (e TopicFilterClass) ToTopicFilterClassPtrOutputWithContext(ctx context.Context) TopicFilterClassPtrOutput {
	return TopicFilterClass(e).ToTopicFilterClassOutputWithContext(ctx).ToTopicFilterClassPtrOutputWithContext(ctx)
}

func (e TopicFilterClass) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicFilterClass) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicFilterClass) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicFilterClass) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicFilterClassOutput struct{ *pulumi.OutputState }

func (TopicFilterClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicFilterClass)(nil)).Elem()
}

func (o TopicFilterClassOutput) ToTopicFilterClassOutput() TopicFilterClassOutput {
	return o
}

func (o TopicFilterClassOutput) ToTopicFilterClassOutputWithContext(ctx context.Context) TopicFilterClassOutput {
	return o
}

func (o TopicFilterClassOutput) ToTopicFilterClassPtrOutput() TopicFilterClassPtrOutput {
	return o.ToTopicFilterClassPtrOutputWithContext(context.Background())
}

func (o TopicFilterClassOutput) ToTopicFilterClassPtrOutputWithContext(ctx context.Context) TopicFilterClassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicFilterClass) *TopicFilterClass {
		return &v
	}).(TopicFilterClassPtrOutput)
}

func (o TopicFilterClassOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicFilterClassOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicFilterClass) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicFilterClassOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicFilterClassOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicFilterClass) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicFilterClassPtrOutput struct{ *pulumi.OutputState }

func (TopicFilterClassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicFilterClass)(nil)).Elem()
}

func (o TopicFilterClassPtrOutput) ToTopicFilterClassPtrOutput() TopicFilterClassPtrOutput {
	return o
}

func (o TopicFilterClassPtrOutput) ToTopicFilterClassPtrOutputWithContext(ctx context.Context) TopicFilterClassPtrOutput {
	return o
}

func (o TopicFilterClassPtrOutput) Elem() TopicFilterClassOutput {
	return o.ApplyT(func(v *TopicFilterClass) TopicFilterClass {
		if v != nil {
			return *v
		}
		var ret TopicFilterClass
		return ret
	}).(TopicFilterClassOutput)
}

func (o TopicFilterClassPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicFilterClassPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicFilterClass) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicFilterClassInput is an input type that accepts values of the TopicFilterClass enum
// A concrete instance of `TopicFilterClassInput` can be one of the following:
//
//	TopicFilterClassEnforcedValueFilter
//	TopicFilterClassConditionalValueFilter
//	TopicFilterClassNamedValueFilter
type TopicFilterClassInput interface {
	pulumi.Input

	ToTopicFilterClassOutput() TopicFilterClassOutput
	ToTopicFilterClassOutputWithContext(context.Context) TopicFilterClassOutput
}

var topicFilterClassPtrType = reflect.TypeOf((**TopicFilterClass)(nil)).Elem()

type TopicFilterClassPtrInput interface {
	pulumi.Input

	ToTopicFilterClassPtrOutput() TopicFilterClassPtrOutput
	ToTopicFilterClassPtrOutputWithContext(context.Context) TopicFilterClassPtrOutput
}

type topicFilterClassPtr string

func TopicFilterClassPtr(v string) TopicFilterClassPtrInput {
	return (*topicFilterClassPtr)(&v)
}

func (*topicFilterClassPtr) ElementType() reflect.Type {
	return topicFilterClassPtrType
}

func (in *topicFilterClassPtr) ToTopicFilterClassPtrOutput() TopicFilterClassPtrOutput {
	return pulumi.ToOutput(in).(TopicFilterClassPtrOutput)
}

func (in *topicFilterClassPtr) ToTopicFilterClassPtrOutputWithContext(ctx context.Context) TopicFilterClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicFilterClassPtrOutput)
}

type TopicNamedEntityAggType string

const (
	TopicNamedEntityAggTypeSum           = TopicNamedEntityAggType("SUM")
	TopicNamedEntityAggTypeMin           = TopicNamedEntityAggType("MIN")
	TopicNamedEntityAggTypeMax           = TopicNamedEntityAggType("MAX")
	TopicNamedEntityAggTypeCount         = TopicNamedEntityAggType("COUNT")
	TopicNamedEntityAggTypeAverage       = TopicNamedEntityAggType("AVERAGE")
	TopicNamedEntityAggTypeDistinctCount = TopicNamedEntityAggType("DISTINCT_COUNT")
	TopicNamedEntityAggTypeStdev         = TopicNamedEntityAggType("STDEV")
	TopicNamedEntityAggTypeStdevp        = TopicNamedEntityAggType("STDEVP")
	TopicNamedEntityAggTypeVar           = TopicNamedEntityAggType("VAR")
	TopicNamedEntityAggTypeVarp          = TopicNamedEntityAggType("VARP")
	TopicNamedEntityAggTypePercentile    = TopicNamedEntityAggType("PERCENTILE")
	TopicNamedEntityAggTypeMedian        = TopicNamedEntityAggType("MEDIAN")
	TopicNamedEntityAggTypeCustom        = TopicNamedEntityAggType("CUSTOM")
)

func (TopicNamedEntityAggType) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicNamedEntityAggType)(nil)).Elem()
}

func (e TopicNamedEntityAggType) ToTopicNamedEntityAggTypeOutput() TopicNamedEntityAggTypeOutput {
	return pulumi.ToOutput(e).(TopicNamedEntityAggTypeOutput)
}

func (e TopicNamedEntityAggType) ToTopicNamedEntityAggTypeOutputWithContext(ctx context.Context) TopicNamedEntityAggTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicNamedEntityAggTypeOutput)
}

func (e TopicNamedEntityAggType) ToTopicNamedEntityAggTypePtrOutput() TopicNamedEntityAggTypePtrOutput {
	return e.ToTopicNamedEntityAggTypePtrOutputWithContext(context.Background())
}

func (e TopicNamedEntityAggType) ToTopicNamedEntityAggTypePtrOutputWithContext(ctx context.Context) TopicNamedEntityAggTypePtrOutput {
	return TopicNamedEntityAggType(e).ToTopicNamedEntityAggTypeOutputWithContext(ctx).ToTopicNamedEntityAggTypePtrOutputWithContext(ctx)
}

func (e TopicNamedEntityAggType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicNamedEntityAggType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicNamedEntityAggType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicNamedEntityAggType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicNamedEntityAggTypeOutput struct{ *pulumi.OutputState }

func (TopicNamedEntityAggTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicNamedEntityAggType)(nil)).Elem()
}

func (o TopicNamedEntityAggTypeOutput) ToTopicNamedEntityAggTypeOutput() TopicNamedEntityAggTypeOutput {
	return o
}

func (o TopicNamedEntityAggTypeOutput) ToTopicNamedEntityAggTypeOutputWithContext(ctx context.Context) TopicNamedEntityAggTypeOutput {
	return o
}

func (o TopicNamedEntityAggTypeOutput) ToTopicNamedEntityAggTypePtrOutput() TopicNamedEntityAggTypePtrOutput {
	return o.ToTopicNamedEntityAggTypePtrOutputWithContext(context.Background())
}

func (o TopicNamedEntityAggTypeOutput) ToTopicNamedEntityAggTypePtrOutputWithContext(ctx context.Context) TopicNamedEntityAggTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicNamedEntityAggType) *TopicNamedEntityAggType {
		return &v
	}).(TopicNamedEntityAggTypePtrOutput)
}

func (o TopicNamedEntityAggTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicNamedEntityAggTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicNamedEntityAggType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicNamedEntityAggTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicNamedEntityAggTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicNamedEntityAggType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicNamedEntityAggTypePtrOutput struct{ *pulumi.OutputState }

func (TopicNamedEntityAggTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicNamedEntityAggType)(nil)).Elem()
}

func (o TopicNamedEntityAggTypePtrOutput) ToTopicNamedEntityAggTypePtrOutput() TopicNamedEntityAggTypePtrOutput {
	return o
}

func (o TopicNamedEntityAggTypePtrOutput) ToTopicNamedEntityAggTypePtrOutputWithContext(ctx context.Context) TopicNamedEntityAggTypePtrOutput {
	return o
}

func (o TopicNamedEntityAggTypePtrOutput) Elem() TopicNamedEntityAggTypeOutput {
	return o.ApplyT(func(v *TopicNamedEntityAggType) TopicNamedEntityAggType {
		if v != nil {
			return *v
		}
		var ret TopicNamedEntityAggType
		return ret
	}).(TopicNamedEntityAggTypeOutput)
}

func (o TopicNamedEntityAggTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicNamedEntityAggTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicNamedEntityAggType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicNamedEntityAggTypeInput is an input type that accepts values of the TopicNamedEntityAggType enum
// A concrete instance of `TopicNamedEntityAggTypeInput` can be one of the following:
//
//	TopicNamedEntityAggTypeSum
//	TopicNamedEntityAggTypeMin
//	TopicNamedEntityAggTypeMax
//	TopicNamedEntityAggTypeCount
//	TopicNamedEntityAggTypeAverage
//	TopicNamedEntityAggTypeDistinctCount
//	TopicNamedEntityAggTypeStdev
//	TopicNamedEntityAggTypeStdevp
//	TopicNamedEntityAggTypeVar
//	TopicNamedEntityAggTypeVarp
//	TopicNamedEntityAggTypePercentile
//	TopicNamedEntityAggTypeMedian
//	TopicNamedEntityAggTypeCustom
type TopicNamedEntityAggTypeInput interface {
	pulumi.Input

	ToTopicNamedEntityAggTypeOutput() TopicNamedEntityAggTypeOutput
	ToTopicNamedEntityAggTypeOutputWithContext(context.Context) TopicNamedEntityAggTypeOutput
}

var topicNamedEntityAggTypePtrType = reflect.TypeOf((**TopicNamedEntityAggType)(nil)).Elem()

type TopicNamedEntityAggTypePtrInput interface {
	pulumi.Input

	ToTopicNamedEntityAggTypePtrOutput() TopicNamedEntityAggTypePtrOutput
	ToTopicNamedEntityAggTypePtrOutputWithContext(context.Context) TopicNamedEntityAggTypePtrOutput
}

type topicNamedEntityAggTypePtr string

func TopicNamedEntityAggTypePtr(v string) TopicNamedEntityAggTypePtrInput {
	return (*topicNamedEntityAggTypePtr)(&v)
}

func (*topicNamedEntityAggTypePtr) ElementType() reflect.Type {
	return topicNamedEntityAggTypePtrType
}

func (in *topicNamedEntityAggTypePtr) ToTopicNamedEntityAggTypePtrOutput() TopicNamedEntityAggTypePtrOutput {
	return pulumi.ToOutput(in).(TopicNamedEntityAggTypePtrOutput)
}

func (in *topicNamedEntityAggTypePtr) ToTopicNamedEntityAggTypePtrOutputWithContext(ctx context.Context) TopicNamedEntityAggTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicNamedEntityAggTypePtrOutput)
}

type TopicNamedFilterAggType string

const (
	TopicNamedFilterAggTypeNoAggregation = TopicNamedFilterAggType("NO_AGGREGATION")
	TopicNamedFilterAggTypeSum           = TopicNamedFilterAggType("SUM")
	TopicNamedFilterAggTypeAverage       = TopicNamedFilterAggType("AVERAGE")
	TopicNamedFilterAggTypeCount         = TopicNamedFilterAggType("COUNT")
	TopicNamedFilterAggTypeDistinctCount = TopicNamedFilterAggType("DISTINCT_COUNT")
	TopicNamedFilterAggTypeMax           = TopicNamedFilterAggType("MAX")
	TopicNamedFilterAggTypeMedian        = TopicNamedFilterAggType("MEDIAN")
	TopicNamedFilterAggTypeMin           = TopicNamedFilterAggType("MIN")
	TopicNamedFilterAggTypeStdev         = TopicNamedFilterAggType("STDEV")
	TopicNamedFilterAggTypeStdevp        = TopicNamedFilterAggType("STDEVP")
	TopicNamedFilterAggTypeVar           = TopicNamedFilterAggType("VAR")
	TopicNamedFilterAggTypeVarp          = TopicNamedFilterAggType("VARP")
)

func (TopicNamedFilterAggType) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicNamedFilterAggType)(nil)).Elem()
}

func (e TopicNamedFilterAggType) ToTopicNamedFilterAggTypeOutput() TopicNamedFilterAggTypeOutput {
	return pulumi.ToOutput(e).(TopicNamedFilterAggTypeOutput)
}

func (e TopicNamedFilterAggType) ToTopicNamedFilterAggTypeOutputWithContext(ctx context.Context) TopicNamedFilterAggTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicNamedFilterAggTypeOutput)
}

func (e TopicNamedFilterAggType) ToTopicNamedFilterAggTypePtrOutput() TopicNamedFilterAggTypePtrOutput {
	return e.ToTopicNamedFilterAggTypePtrOutputWithContext(context.Background())
}

func (e TopicNamedFilterAggType) ToTopicNamedFilterAggTypePtrOutputWithContext(ctx context.Context) TopicNamedFilterAggTypePtrOutput {
	return TopicNamedFilterAggType(e).ToTopicNamedFilterAggTypeOutputWithContext(ctx).ToTopicNamedFilterAggTypePtrOutputWithContext(ctx)
}

func (e TopicNamedFilterAggType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicNamedFilterAggType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicNamedFilterAggType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicNamedFilterAggType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicNamedFilterAggTypeOutput struct{ *pulumi.OutputState }

func (TopicNamedFilterAggTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicNamedFilterAggType)(nil)).Elem()
}

func (o TopicNamedFilterAggTypeOutput) ToTopicNamedFilterAggTypeOutput() TopicNamedFilterAggTypeOutput {
	return o
}

func (o TopicNamedFilterAggTypeOutput) ToTopicNamedFilterAggTypeOutputWithContext(ctx context.Context) TopicNamedFilterAggTypeOutput {
	return o
}

func (o TopicNamedFilterAggTypeOutput) ToTopicNamedFilterAggTypePtrOutput() TopicNamedFilterAggTypePtrOutput {
	return o.ToTopicNamedFilterAggTypePtrOutputWithContext(context.Background())
}

func (o TopicNamedFilterAggTypeOutput) ToTopicNamedFilterAggTypePtrOutputWithContext(ctx context.Context) TopicNamedFilterAggTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicNamedFilterAggType) *TopicNamedFilterAggType {
		return &v
	}).(TopicNamedFilterAggTypePtrOutput)
}

func (o TopicNamedFilterAggTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicNamedFilterAggTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicNamedFilterAggType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicNamedFilterAggTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicNamedFilterAggTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicNamedFilterAggType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicNamedFilterAggTypePtrOutput struct{ *pulumi.OutputState }

func (TopicNamedFilterAggTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicNamedFilterAggType)(nil)).Elem()
}

func (o TopicNamedFilterAggTypePtrOutput) ToTopicNamedFilterAggTypePtrOutput() TopicNamedFilterAggTypePtrOutput {
	return o
}

func (o TopicNamedFilterAggTypePtrOutput) ToTopicNamedFilterAggTypePtrOutputWithContext(ctx context.Context) TopicNamedFilterAggTypePtrOutput {
	return o
}

func (o TopicNamedFilterAggTypePtrOutput) Elem() TopicNamedFilterAggTypeOutput {
	return o.ApplyT(func(v *TopicNamedFilterAggType) TopicNamedFilterAggType {
		if v != nil {
			return *v
		}
		var ret TopicNamedFilterAggType
		return ret
	}).(TopicNamedFilterAggTypeOutput)
}

func (o TopicNamedFilterAggTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicNamedFilterAggTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicNamedFilterAggType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicNamedFilterAggTypeInput is an input type that accepts values of the TopicNamedFilterAggType enum
// A concrete instance of `TopicNamedFilterAggTypeInput` can be one of the following:
//
//	TopicNamedFilterAggTypeNoAggregation
//	TopicNamedFilterAggTypeSum
//	TopicNamedFilterAggTypeAverage
//	TopicNamedFilterAggTypeCount
//	TopicNamedFilterAggTypeDistinctCount
//	TopicNamedFilterAggTypeMax
//	TopicNamedFilterAggTypeMedian
//	TopicNamedFilterAggTypeMin
//	TopicNamedFilterAggTypeStdev
//	TopicNamedFilterAggTypeStdevp
//	TopicNamedFilterAggTypeVar
//	TopicNamedFilterAggTypeVarp
type TopicNamedFilterAggTypeInput interface {
	pulumi.Input

	ToTopicNamedFilterAggTypeOutput() TopicNamedFilterAggTypeOutput
	ToTopicNamedFilterAggTypeOutputWithContext(context.Context) TopicNamedFilterAggTypeOutput
}

var topicNamedFilterAggTypePtrType = reflect.TypeOf((**TopicNamedFilterAggType)(nil)).Elem()

type TopicNamedFilterAggTypePtrInput interface {
	pulumi.Input

	ToTopicNamedFilterAggTypePtrOutput() TopicNamedFilterAggTypePtrOutput
	ToTopicNamedFilterAggTypePtrOutputWithContext(context.Context) TopicNamedFilterAggTypePtrOutput
}

type topicNamedFilterAggTypePtr string

func TopicNamedFilterAggTypePtr(v string) TopicNamedFilterAggTypePtrInput {
	return (*topicNamedFilterAggTypePtr)(&v)
}

func (*topicNamedFilterAggTypePtr) ElementType() reflect.Type {
	return topicNamedFilterAggTypePtrType
}

func (in *topicNamedFilterAggTypePtr) ToTopicNamedFilterAggTypePtrOutput() TopicNamedFilterAggTypePtrOutput {
	return pulumi.ToOutput(in).(TopicNamedFilterAggTypePtrOutput)
}

func (in *topicNamedFilterAggTypePtr) ToTopicNamedFilterAggTypePtrOutputWithContext(ctx context.Context) TopicNamedFilterAggTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicNamedFilterAggTypePtrOutput)
}

type TopicNamedFilterType string

const (
	TopicNamedFilterTypeCategoryFilter        = TopicNamedFilterType("CATEGORY_FILTER")
	TopicNamedFilterTypeNumericEqualityFilter = TopicNamedFilterType("NUMERIC_EQUALITY_FILTER")
	TopicNamedFilterTypeNumericRangeFilter    = TopicNamedFilterType("NUMERIC_RANGE_FILTER")
	TopicNamedFilterTypeDateRangeFilter       = TopicNamedFilterType("DATE_RANGE_FILTER")
	TopicNamedFilterTypeRelativeDateFilter    = TopicNamedFilterType("RELATIVE_DATE_FILTER")
)

func (TopicNamedFilterType) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicNamedFilterType)(nil)).Elem()
}

func (e TopicNamedFilterType) ToTopicNamedFilterTypeOutput() TopicNamedFilterTypeOutput {
	return pulumi.ToOutput(e).(TopicNamedFilterTypeOutput)
}

func (e TopicNamedFilterType) ToTopicNamedFilterTypeOutputWithContext(ctx context.Context) TopicNamedFilterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicNamedFilterTypeOutput)
}

func (e TopicNamedFilterType) ToTopicNamedFilterTypePtrOutput() TopicNamedFilterTypePtrOutput {
	return e.ToTopicNamedFilterTypePtrOutputWithContext(context.Background())
}

func (e TopicNamedFilterType) ToTopicNamedFilterTypePtrOutputWithContext(ctx context.Context) TopicNamedFilterTypePtrOutput {
	return TopicNamedFilterType(e).ToTopicNamedFilterTypeOutputWithContext(ctx).ToTopicNamedFilterTypePtrOutputWithContext(ctx)
}

func (e TopicNamedFilterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicNamedFilterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicNamedFilterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicNamedFilterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicNamedFilterTypeOutput struct{ *pulumi.OutputState }

func (TopicNamedFilterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicNamedFilterType)(nil)).Elem()
}

func (o TopicNamedFilterTypeOutput) ToTopicNamedFilterTypeOutput() TopicNamedFilterTypeOutput {
	return o
}

func (o TopicNamedFilterTypeOutput) ToTopicNamedFilterTypeOutputWithContext(ctx context.Context) TopicNamedFilterTypeOutput {
	return o
}

func (o TopicNamedFilterTypeOutput) ToTopicNamedFilterTypePtrOutput() TopicNamedFilterTypePtrOutput {
	return o.ToTopicNamedFilterTypePtrOutputWithContext(context.Background())
}

func (o TopicNamedFilterTypeOutput) ToTopicNamedFilterTypePtrOutputWithContext(ctx context.Context) TopicNamedFilterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicNamedFilterType) *TopicNamedFilterType {
		return &v
	}).(TopicNamedFilterTypePtrOutput)
}

func (o TopicNamedFilterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicNamedFilterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicNamedFilterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicNamedFilterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicNamedFilterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicNamedFilterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicNamedFilterTypePtrOutput struct{ *pulumi.OutputState }

func (TopicNamedFilterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicNamedFilterType)(nil)).Elem()
}

func (o TopicNamedFilterTypePtrOutput) ToTopicNamedFilterTypePtrOutput() TopicNamedFilterTypePtrOutput {
	return o
}

func (o TopicNamedFilterTypePtrOutput) ToTopicNamedFilterTypePtrOutputWithContext(ctx context.Context) TopicNamedFilterTypePtrOutput {
	return o
}

func (o TopicNamedFilterTypePtrOutput) Elem() TopicNamedFilterTypeOutput {
	return o.ApplyT(func(v *TopicNamedFilterType) TopicNamedFilterType {
		if v != nil {
			return *v
		}
		var ret TopicNamedFilterType
		return ret
	}).(TopicNamedFilterTypeOutput)
}

func (o TopicNamedFilterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicNamedFilterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicNamedFilterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicNamedFilterTypeInput is an input type that accepts values of the TopicNamedFilterType enum
// A concrete instance of `TopicNamedFilterTypeInput` can be one of the following:
//
//	TopicNamedFilterTypeCategoryFilter
//	TopicNamedFilterTypeNumericEqualityFilter
//	TopicNamedFilterTypeNumericRangeFilter
//	TopicNamedFilterTypeDateRangeFilter
//	TopicNamedFilterTypeRelativeDateFilter
type TopicNamedFilterTypeInput interface {
	pulumi.Input

	ToTopicNamedFilterTypeOutput() TopicNamedFilterTypeOutput
	ToTopicNamedFilterTypeOutputWithContext(context.Context) TopicNamedFilterTypeOutput
}

var topicNamedFilterTypePtrType = reflect.TypeOf((**TopicNamedFilterType)(nil)).Elem()

type TopicNamedFilterTypePtrInput interface {
	pulumi.Input

	ToTopicNamedFilterTypePtrOutput() TopicNamedFilterTypePtrOutput
	ToTopicNamedFilterTypePtrOutputWithContext(context.Context) TopicNamedFilterTypePtrOutput
}

type topicNamedFilterTypePtr string

func TopicNamedFilterTypePtr(v string) TopicNamedFilterTypePtrInput {
	return (*topicNamedFilterTypePtr)(&v)
}

func (*topicNamedFilterTypePtr) ElementType() reflect.Type {
	return topicNamedFilterTypePtrType
}

func (in *topicNamedFilterTypePtr) ToTopicNamedFilterTypePtrOutput() TopicNamedFilterTypePtrOutput {
	return pulumi.ToOutput(in).(TopicNamedFilterTypePtrOutput)
}

func (in *topicNamedFilterTypePtr) ToTopicNamedFilterTypePtrOutputWithContext(ctx context.Context) TopicNamedFilterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicNamedFilterTypePtrOutput)
}

type TopicNumberScale string

const (
	TopicNumberScaleNone      = TopicNumberScale("NONE")
	TopicNumberScaleAuto      = TopicNumberScale("AUTO")
	TopicNumberScaleThousands = TopicNumberScale("THOUSANDS")
	TopicNumberScaleMillions  = TopicNumberScale("MILLIONS")
	TopicNumberScaleBillions  = TopicNumberScale("BILLIONS")
	TopicNumberScaleTrillions = TopicNumberScale("TRILLIONS")
)

func (TopicNumberScale) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicNumberScale)(nil)).Elem()
}

func (e TopicNumberScale) ToTopicNumberScaleOutput() TopicNumberScaleOutput {
	return pulumi.ToOutput(e).(TopicNumberScaleOutput)
}

func (e TopicNumberScale) ToTopicNumberScaleOutputWithContext(ctx context.Context) TopicNumberScaleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicNumberScaleOutput)
}

func (e TopicNumberScale) ToTopicNumberScalePtrOutput() TopicNumberScalePtrOutput {
	return e.ToTopicNumberScalePtrOutputWithContext(context.Background())
}

func (e TopicNumberScale) ToTopicNumberScalePtrOutputWithContext(ctx context.Context) TopicNumberScalePtrOutput {
	return TopicNumberScale(e).ToTopicNumberScaleOutputWithContext(ctx).ToTopicNumberScalePtrOutputWithContext(ctx)
}

func (e TopicNumberScale) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicNumberScale) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicNumberScale) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicNumberScale) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicNumberScaleOutput struct{ *pulumi.OutputState }

func (TopicNumberScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicNumberScale)(nil)).Elem()
}

func (o TopicNumberScaleOutput) ToTopicNumberScaleOutput() TopicNumberScaleOutput {
	return o
}

func (o TopicNumberScaleOutput) ToTopicNumberScaleOutputWithContext(ctx context.Context) TopicNumberScaleOutput {
	return o
}

func (o TopicNumberScaleOutput) ToTopicNumberScalePtrOutput() TopicNumberScalePtrOutput {
	return o.ToTopicNumberScalePtrOutputWithContext(context.Background())
}

func (o TopicNumberScaleOutput) ToTopicNumberScalePtrOutputWithContext(ctx context.Context) TopicNumberScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicNumberScale) *TopicNumberScale {
		return &v
	}).(TopicNumberScalePtrOutput)
}

func (o TopicNumberScaleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicNumberScaleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicNumberScale) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicNumberScaleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicNumberScaleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicNumberScale) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicNumberScalePtrOutput struct{ *pulumi.OutputState }

func (TopicNumberScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicNumberScale)(nil)).Elem()
}

func (o TopicNumberScalePtrOutput) ToTopicNumberScalePtrOutput() TopicNumberScalePtrOutput {
	return o
}

func (o TopicNumberScalePtrOutput) ToTopicNumberScalePtrOutputWithContext(ctx context.Context) TopicNumberScalePtrOutput {
	return o
}

func (o TopicNumberScalePtrOutput) Elem() TopicNumberScaleOutput {
	return o.ApplyT(func(v *TopicNumberScale) TopicNumberScale {
		if v != nil {
			return *v
		}
		var ret TopicNumberScale
		return ret
	}).(TopicNumberScaleOutput)
}

func (o TopicNumberScalePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicNumberScalePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicNumberScale) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicNumberScaleInput is an input type that accepts values of the TopicNumberScale enum
// A concrete instance of `TopicNumberScaleInput` can be one of the following:
//
//	TopicNumberScaleNone
//	TopicNumberScaleAuto
//	TopicNumberScaleThousands
//	TopicNumberScaleMillions
//	TopicNumberScaleBillions
//	TopicNumberScaleTrillions
type TopicNumberScaleInput interface {
	pulumi.Input

	ToTopicNumberScaleOutput() TopicNumberScaleOutput
	ToTopicNumberScaleOutputWithContext(context.Context) TopicNumberScaleOutput
}

var topicNumberScalePtrType = reflect.TypeOf((**TopicNumberScale)(nil)).Elem()

type TopicNumberScalePtrInput interface {
	pulumi.Input

	ToTopicNumberScalePtrOutput() TopicNumberScalePtrOutput
	ToTopicNumberScalePtrOutputWithContext(context.Context) TopicNumberScalePtrOutput
}

type topicNumberScalePtr string

func TopicNumberScalePtr(v string) TopicNumberScalePtrInput {
	return (*topicNumberScalePtr)(&v)
}

func (*topicNumberScalePtr) ElementType() reflect.Type {
	return topicNumberScalePtrType
}

func (in *topicNumberScalePtr) ToTopicNumberScalePtrOutput() TopicNumberScalePtrOutput {
	return pulumi.ToOutput(in).(TopicNumberScalePtrOutput)
}

func (in *topicNumberScalePtr) ToTopicNumberScalePtrOutputWithContext(ctx context.Context) TopicNumberScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicNumberScalePtrOutput)
}

type TopicNumericSeparatorSymbol string

const (
	TopicNumericSeparatorSymbolComma = TopicNumericSeparatorSymbol("COMMA")
	TopicNumericSeparatorSymbolDot   = TopicNumericSeparatorSymbol("DOT")
)

func (TopicNumericSeparatorSymbol) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicNumericSeparatorSymbol)(nil)).Elem()
}

func (e TopicNumericSeparatorSymbol) ToTopicNumericSeparatorSymbolOutput() TopicNumericSeparatorSymbolOutput {
	return pulumi.ToOutput(e).(TopicNumericSeparatorSymbolOutput)
}

func (e TopicNumericSeparatorSymbol) ToTopicNumericSeparatorSymbolOutputWithContext(ctx context.Context) TopicNumericSeparatorSymbolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicNumericSeparatorSymbolOutput)
}

func (e TopicNumericSeparatorSymbol) ToTopicNumericSeparatorSymbolPtrOutput() TopicNumericSeparatorSymbolPtrOutput {
	return e.ToTopicNumericSeparatorSymbolPtrOutputWithContext(context.Background())
}

func (e TopicNumericSeparatorSymbol) ToTopicNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) TopicNumericSeparatorSymbolPtrOutput {
	return TopicNumericSeparatorSymbol(e).ToTopicNumericSeparatorSymbolOutputWithContext(ctx).ToTopicNumericSeparatorSymbolPtrOutputWithContext(ctx)
}

func (e TopicNumericSeparatorSymbol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicNumericSeparatorSymbol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicNumericSeparatorSymbol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicNumericSeparatorSymbol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicNumericSeparatorSymbolOutput struct{ *pulumi.OutputState }

func (TopicNumericSeparatorSymbolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicNumericSeparatorSymbol)(nil)).Elem()
}

func (o TopicNumericSeparatorSymbolOutput) ToTopicNumericSeparatorSymbolOutput() TopicNumericSeparatorSymbolOutput {
	return o
}

func (o TopicNumericSeparatorSymbolOutput) ToTopicNumericSeparatorSymbolOutputWithContext(ctx context.Context) TopicNumericSeparatorSymbolOutput {
	return o
}

func (o TopicNumericSeparatorSymbolOutput) ToTopicNumericSeparatorSymbolPtrOutput() TopicNumericSeparatorSymbolPtrOutput {
	return o.ToTopicNumericSeparatorSymbolPtrOutputWithContext(context.Background())
}

func (o TopicNumericSeparatorSymbolOutput) ToTopicNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) TopicNumericSeparatorSymbolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicNumericSeparatorSymbol) *TopicNumericSeparatorSymbol {
		return &v
	}).(TopicNumericSeparatorSymbolPtrOutput)
}

func (o TopicNumericSeparatorSymbolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicNumericSeparatorSymbolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicNumericSeparatorSymbol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicNumericSeparatorSymbolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicNumericSeparatorSymbolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicNumericSeparatorSymbol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicNumericSeparatorSymbolPtrOutput struct{ *pulumi.OutputState }

func (TopicNumericSeparatorSymbolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicNumericSeparatorSymbol)(nil)).Elem()
}

func (o TopicNumericSeparatorSymbolPtrOutput) ToTopicNumericSeparatorSymbolPtrOutput() TopicNumericSeparatorSymbolPtrOutput {
	return o
}

func (o TopicNumericSeparatorSymbolPtrOutput) ToTopicNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) TopicNumericSeparatorSymbolPtrOutput {
	return o
}

func (o TopicNumericSeparatorSymbolPtrOutput) Elem() TopicNumericSeparatorSymbolOutput {
	return o.ApplyT(func(v *TopicNumericSeparatorSymbol) TopicNumericSeparatorSymbol {
		if v != nil {
			return *v
		}
		var ret TopicNumericSeparatorSymbol
		return ret
	}).(TopicNumericSeparatorSymbolOutput)
}

func (o TopicNumericSeparatorSymbolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicNumericSeparatorSymbolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicNumericSeparatorSymbol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicNumericSeparatorSymbolInput is an input type that accepts values of the TopicNumericSeparatorSymbol enum
// A concrete instance of `TopicNumericSeparatorSymbolInput` can be one of the following:
//
//	TopicNumericSeparatorSymbolComma
//	TopicNumericSeparatorSymbolDot
type TopicNumericSeparatorSymbolInput interface {
	pulumi.Input

	ToTopicNumericSeparatorSymbolOutput() TopicNumericSeparatorSymbolOutput
	ToTopicNumericSeparatorSymbolOutputWithContext(context.Context) TopicNumericSeparatorSymbolOutput
}

var topicNumericSeparatorSymbolPtrType = reflect.TypeOf((**TopicNumericSeparatorSymbol)(nil)).Elem()

type TopicNumericSeparatorSymbolPtrInput interface {
	pulumi.Input

	ToTopicNumericSeparatorSymbolPtrOutput() TopicNumericSeparatorSymbolPtrOutput
	ToTopicNumericSeparatorSymbolPtrOutputWithContext(context.Context) TopicNumericSeparatorSymbolPtrOutput
}

type topicNumericSeparatorSymbolPtr string

func TopicNumericSeparatorSymbolPtr(v string) TopicNumericSeparatorSymbolPtrInput {
	return (*topicNumericSeparatorSymbolPtr)(&v)
}

func (*topicNumericSeparatorSymbolPtr) ElementType() reflect.Type {
	return topicNumericSeparatorSymbolPtrType
}

func (in *topicNumericSeparatorSymbolPtr) ToTopicNumericSeparatorSymbolPtrOutput() TopicNumericSeparatorSymbolPtrOutput {
	return pulumi.ToOutput(in).(TopicNumericSeparatorSymbolPtrOutput)
}

func (in *topicNumericSeparatorSymbolPtr) ToTopicNumericSeparatorSymbolPtrOutputWithContext(ctx context.Context) TopicNumericSeparatorSymbolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicNumericSeparatorSymbolPtrOutput)
}

type TopicPropertyRole string

const (
	TopicPropertyRolePrimary = TopicPropertyRole("PRIMARY")
	TopicPropertyRoleId      = TopicPropertyRole("ID")
)

func (TopicPropertyRole) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicPropertyRole)(nil)).Elem()
}

func (e TopicPropertyRole) ToTopicPropertyRoleOutput() TopicPropertyRoleOutput {
	return pulumi.ToOutput(e).(TopicPropertyRoleOutput)
}

func (e TopicPropertyRole) ToTopicPropertyRoleOutputWithContext(ctx context.Context) TopicPropertyRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicPropertyRoleOutput)
}

func (e TopicPropertyRole) ToTopicPropertyRolePtrOutput() TopicPropertyRolePtrOutput {
	return e.ToTopicPropertyRolePtrOutputWithContext(context.Background())
}

func (e TopicPropertyRole) ToTopicPropertyRolePtrOutputWithContext(ctx context.Context) TopicPropertyRolePtrOutput {
	return TopicPropertyRole(e).ToTopicPropertyRoleOutputWithContext(ctx).ToTopicPropertyRolePtrOutputWithContext(ctx)
}

func (e TopicPropertyRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicPropertyRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicPropertyRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicPropertyRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicPropertyRoleOutput struct{ *pulumi.OutputState }

func (TopicPropertyRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicPropertyRole)(nil)).Elem()
}

func (o TopicPropertyRoleOutput) ToTopicPropertyRoleOutput() TopicPropertyRoleOutput {
	return o
}

func (o TopicPropertyRoleOutput) ToTopicPropertyRoleOutputWithContext(ctx context.Context) TopicPropertyRoleOutput {
	return o
}

func (o TopicPropertyRoleOutput) ToTopicPropertyRolePtrOutput() TopicPropertyRolePtrOutput {
	return o.ToTopicPropertyRolePtrOutputWithContext(context.Background())
}

func (o TopicPropertyRoleOutput) ToTopicPropertyRolePtrOutputWithContext(ctx context.Context) TopicPropertyRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicPropertyRole) *TopicPropertyRole {
		return &v
	}).(TopicPropertyRolePtrOutput)
}

func (o TopicPropertyRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicPropertyRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicPropertyRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicPropertyRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicPropertyRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicPropertyRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicPropertyRolePtrOutput struct{ *pulumi.OutputState }

func (TopicPropertyRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicPropertyRole)(nil)).Elem()
}

func (o TopicPropertyRolePtrOutput) ToTopicPropertyRolePtrOutput() TopicPropertyRolePtrOutput {
	return o
}

func (o TopicPropertyRolePtrOutput) ToTopicPropertyRolePtrOutputWithContext(ctx context.Context) TopicPropertyRolePtrOutput {
	return o
}

func (o TopicPropertyRolePtrOutput) Elem() TopicPropertyRoleOutput {
	return o.ApplyT(func(v *TopicPropertyRole) TopicPropertyRole {
		if v != nil {
			return *v
		}
		var ret TopicPropertyRole
		return ret
	}).(TopicPropertyRoleOutput)
}

func (o TopicPropertyRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicPropertyRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicPropertyRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicPropertyRoleInput is an input type that accepts values of the TopicPropertyRole enum
// A concrete instance of `TopicPropertyRoleInput` can be one of the following:
//
//	TopicPropertyRolePrimary
//	TopicPropertyRoleId
type TopicPropertyRoleInput interface {
	pulumi.Input

	ToTopicPropertyRoleOutput() TopicPropertyRoleOutput
	ToTopicPropertyRoleOutputWithContext(context.Context) TopicPropertyRoleOutput
}

var topicPropertyRolePtrType = reflect.TypeOf((**TopicPropertyRole)(nil)).Elem()

type TopicPropertyRolePtrInput interface {
	pulumi.Input

	ToTopicPropertyRolePtrOutput() TopicPropertyRolePtrOutput
	ToTopicPropertyRolePtrOutputWithContext(context.Context) TopicPropertyRolePtrOutput
}

type topicPropertyRolePtr string

func TopicPropertyRolePtr(v string) TopicPropertyRolePtrInput {
	return (*topicPropertyRolePtr)(&v)
}

func (*topicPropertyRolePtr) ElementType() reflect.Type {
	return topicPropertyRolePtrType
}

func (in *topicPropertyRolePtr) ToTopicPropertyRolePtrOutput() TopicPropertyRolePtrOutput {
	return pulumi.ToOutput(in).(TopicPropertyRolePtrOutput)
}

func (in *topicPropertyRolePtr) ToTopicPropertyRolePtrOutputWithContext(ctx context.Context) TopicPropertyRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicPropertyRolePtrOutput)
}

type TopicPropertyUsage string

const (
	TopicPropertyUsageInherit   = TopicPropertyUsage("INHERIT")
	TopicPropertyUsageDimension = TopicPropertyUsage("DIMENSION")
	TopicPropertyUsageMeasure   = TopicPropertyUsage("MEASURE")
)

func (TopicPropertyUsage) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicPropertyUsage)(nil)).Elem()
}

func (e TopicPropertyUsage) ToTopicPropertyUsageOutput() TopicPropertyUsageOutput {
	return pulumi.ToOutput(e).(TopicPropertyUsageOutput)
}

func (e TopicPropertyUsage) ToTopicPropertyUsageOutputWithContext(ctx context.Context) TopicPropertyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicPropertyUsageOutput)
}

func (e TopicPropertyUsage) ToTopicPropertyUsagePtrOutput() TopicPropertyUsagePtrOutput {
	return e.ToTopicPropertyUsagePtrOutputWithContext(context.Background())
}

func (e TopicPropertyUsage) ToTopicPropertyUsagePtrOutputWithContext(ctx context.Context) TopicPropertyUsagePtrOutput {
	return TopicPropertyUsage(e).ToTopicPropertyUsageOutputWithContext(ctx).ToTopicPropertyUsagePtrOutputWithContext(ctx)
}

func (e TopicPropertyUsage) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicPropertyUsage) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicPropertyUsage) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicPropertyUsage) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicPropertyUsageOutput struct{ *pulumi.OutputState }

func (TopicPropertyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicPropertyUsage)(nil)).Elem()
}

func (o TopicPropertyUsageOutput) ToTopicPropertyUsageOutput() TopicPropertyUsageOutput {
	return o
}

func (o TopicPropertyUsageOutput) ToTopicPropertyUsageOutputWithContext(ctx context.Context) TopicPropertyUsageOutput {
	return o
}

func (o TopicPropertyUsageOutput) ToTopicPropertyUsagePtrOutput() TopicPropertyUsagePtrOutput {
	return o.ToTopicPropertyUsagePtrOutputWithContext(context.Background())
}

func (o TopicPropertyUsageOutput) ToTopicPropertyUsagePtrOutputWithContext(ctx context.Context) TopicPropertyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicPropertyUsage) *TopicPropertyUsage {
		return &v
	}).(TopicPropertyUsagePtrOutput)
}

func (o TopicPropertyUsageOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicPropertyUsageOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicPropertyUsage) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicPropertyUsageOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicPropertyUsageOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicPropertyUsage) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicPropertyUsagePtrOutput struct{ *pulumi.OutputState }

func (TopicPropertyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicPropertyUsage)(nil)).Elem()
}

func (o TopicPropertyUsagePtrOutput) ToTopicPropertyUsagePtrOutput() TopicPropertyUsagePtrOutput {
	return o
}

func (o TopicPropertyUsagePtrOutput) ToTopicPropertyUsagePtrOutputWithContext(ctx context.Context) TopicPropertyUsagePtrOutput {
	return o
}

func (o TopicPropertyUsagePtrOutput) Elem() TopicPropertyUsageOutput {
	return o.ApplyT(func(v *TopicPropertyUsage) TopicPropertyUsage {
		if v != nil {
			return *v
		}
		var ret TopicPropertyUsage
		return ret
	}).(TopicPropertyUsageOutput)
}

func (o TopicPropertyUsagePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicPropertyUsagePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicPropertyUsage) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicPropertyUsageInput is an input type that accepts values of the TopicPropertyUsage enum
// A concrete instance of `TopicPropertyUsageInput` can be one of the following:
//
//	TopicPropertyUsageInherit
//	TopicPropertyUsageDimension
//	TopicPropertyUsageMeasure
type TopicPropertyUsageInput interface {
	pulumi.Input

	ToTopicPropertyUsageOutput() TopicPropertyUsageOutput
	ToTopicPropertyUsageOutputWithContext(context.Context) TopicPropertyUsageOutput
}

var topicPropertyUsagePtrType = reflect.TypeOf((**TopicPropertyUsage)(nil)).Elem()

type TopicPropertyUsagePtrInput interface {
	pulumi.Input

	ToTopicPropertyUsagePtrOutput() TopicPropertyUsagePtrOutput
	ToTopicPropertyUsagePtrOutputWithContext(context.Context) TopicPropertyUsagePtrOutput
}

type topicPropertyUsagePtr string

func TopicPropertyUsagePtr(v string) TopicPropertyUsagePtrInput {
	return (*topicPropertyUsagePtr)(&v)
}

func (*topicPropertyUsagePtr) ElementType() reflect.Type {
	return topicPropertyUsagePtrType
}

func (in *topicPropertyUsagePtr) ToTopicPropertyUsagePtrOutput() TopicPropertyUsagePtrOutput {
	return pulumi.ToOutput(in).(TopicPropertyUsagePtrOutput)
}

func (in *topicPropertyUsagePtr) ToTopicPropertyUsagePtrOutputWithContext(ctx context.Context) TopicPropertyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicPropertyUsagePtrOutput)
}

type TopicRelativeDateFilterFunction string

const (
	TopicRelativeDateFilterFunctionPrevious = TopicRelativeDateFilterFunction("PREVIOUS")
	TopicRelativeDateFilterFunctionThis     = TopicRelativeDateFilterFunction("THIS")
	TopicRelativeDateFilterFunctionLast     = TopicRelativeDateFilterFunction("LAST")
	TopicRelativeDateFilterFunctionNext     = TopicRelativeDateFilterFunction("NEXT")
	TopicRelativeDateFilterFunctionNow      = TopicRelativeDateFilterFunction("NOW")
)

func (TopicRelativeDateFilterFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRelativeDateFilterFunction)(nil)).Elem()
}

func (e TopicRelativeDateFilterFunction) ToTopicRelativeDateFilterFunctionOutput() TopicRelativeDateFilterFunctionOutput {
	return pulumi.ToOutput(e).(TopicRelativeDateFilterFunctionOutput)
}

func (e TopicRelativeDateFilterFunction) ToTopicRelativeDateFilterFunctionOutputWithContext(ctx context.Context) TopicRelativeDateFilterFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicRelativeDateFilterFunctionOutput)
}

func (e TopicRelativeDateFilterFunction) ToTopicRelativeDateFilterFunctionPtrOutput() TopicRelativeDateFilterFunctionPtrOutput {
	return e.ToTopicRelativeDateFilterFunctionPtrOutputWithContext(context.Background())
}

func (e TopicRelativeDateFilterFunction) ToTopicRelativeDateFilterFunctionPtrOutputWithContext(ctx context.Context) TopicRelativeDateFilterFunctionPtrOutput {
	return TopicRelativeDateFilterFunction(e).ToTopicRelativeDateFilterFunctionOutputWithContext(ctx).ToTopicRelativeDateFilterFunctionPtrOutputWithContext(ctx)
}

func (e TopicRelativeDateFilterFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicRelativeDateFilterFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicRelativeDateFilterFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicRelativeDateFilterFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicRelativeDateFilterFunctionOutput struct{ *pulumi.OutputState }

func (TopicRelativeDateFilterFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRelativeDateFilterFunction)(nil)).Elem()
}

func (o TopicRelativeDateFilterFunctionOutput) ToTopicRelativeDateFilterFunctionOutput() TopicRelativeDateFilterFunctionOutput {
	return o
}

func (o TopicRelativeDateFilterFunctionOutput) ToTopicRelativeDateFilterFunctionOutputWithContext(ctx context.Context) TopicRelativeDateFilterFunctionOutput {
	return o
}

func (o TopicRelativeDateFilterFunctionOutput) ToTopicRelativeDateFilterFunctionPtrOutput() TopicRelativeDateFilterFunctionPtrOutput {
	return o.ToTopicRelativeDateFilterFunctionPtrOutputWithContext(context.Background())
}

func (o TopicRelativeDateFilterFunctionOutput) ToTopicRelativeDateFilterFunctionPtrOutputWithContext(ctx context.Context) TopicRelativeDateFilterFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRelativeDateFilterFunction) *TopicRelativeDateFilterFunction {
		return &v
	}).(TopicRelativeDateFilterFunctionPtrOutput)
}

func (o TopicRelativeDateFilterFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicRelativeDateFilterFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicRelativeDateFilterFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicRelativeDateFilterFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicRelativeDateFilterFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicRelativeDateFilterFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicRelativeDateFilterFunctionPtrOutput struct{ *pulumi.OutputState }

func (TopicRelativeDateFilterFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRelativeDateFilterFunction)(nil)).Elem()
}

func (o TopicRelativeDateFilterFunctionPtrOutput) ToTopicRelativeDateFilterFunctionPtrOutput() TopicRelativeDateFilterFunctionPtrOutput {
	return o
}

func (o TopicRelativeDateFilterFunctionPtrOutput) ToTopicRelativeDateFilterFunctionPtrOutputWithContext(ctx context.Context) TopicRelativeDateFilterFunctionPtrOutput {
	return o
}

func (o TopicRelativeDateFilterFunctionPtrOutput) Elem() TopicRelativeDateFilterFunctionOutput {
	return o.ApplyT(func(v *TopicRelativeDateFilterFunction) TopicRelativeDateFilterFunction {
		if v != nil {
			return *v
		}
		var ret TopicRelativeDateFilterFunction
		return ret
	}).(TopicRelativeDateFilterFunctionOutput)
}

func (o TopicRelativeDateFilterFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicRelativeDateFilterFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicRelativeDateFilterFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicRelativeDateFilterFunctionInput is an input type that accepts values of the TopicRelativeDateFilterFunction enum
// A concrete instance of `TopicRelativeDateFilterFunctionInput` can be one of the following:
//
//	TopicRelativeDateFilterFunctionPrevious
//	TopicRelativeDateFilterFunctionThis
//	TopicRelativeDateFilterFunctionLast
//	TopicRelativeDateFilterFunctionNext
//	TopicRelativeDateFilterFunctionNow
type TopicRelativeDateFilterFunctionInput interface {
	pulumi.Input

	ToTopicRelativeDateFilterFunctionOutput() TopicRelativeDateFilterFunctionOutput
	ToTopicRelativeDateFilterFunctionOutputWithContext(context.Context) TopicRelativeDateFilterFunctionOutput
}

var topicRelativeDateFilterFunctionPtrType = reflect.TypeOf((**TopicRelativeDateFilterFunction)(nil)).Elem()

type TopicRelativeDateFilterFunctionPtrInput interface {
	pulumi.Input

	ToTopicRelativeDateFilterFunctionPtrOutput() TopicRelativeDateFilterFunctionPtrOutput
	ToTopicRelativeDateFilterFunctionPtrOutputWithContext(context.Context) TopicRelativeDateFilterFunctionPtrOutput
}

type topicRelativeDateFilterFunctionPtr string

func TopicRelativeDateFilterFunctionPtr(v string) TopicRelativeDateFilterFunctionPtrInput {
	return (*topicRelativeDateFilterFunctionPtr)(&v)
}

func (*topicRelativeDateFilterFunctionPtr) ElementType() reflect.Type {
	return topicRelativeDateFilterFunctionPtrType
}

func (in *topicRelativeDateFilterFunctionPtr) ToTopicRelativeDateFilterFunctionPtrOutput() TopicRelativeDateFilterFunctionPtrOutput {
	return pulumi.ToOutput(in).(TopicRelativeDateFilterFunctionPtrOutput)
}

func (in *topicRelativeDateFilterFunctionPtr) ToTopicRelativeDateFilterFunctionPtrOutputWithContext(ctx context.Context) TopicRelativeDateFilterFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicRelativeDateFilterFunctionPtrOutput)
}

type TopicTimeGranularity string

const (
	TopicTimeGranularitySecond  = TopicTimeGranularity("SECOND")
	TopicTimeGranularityMinute  = TopicTimeGranularity("MINUTE")
	TopicTimeGranularityHour    = TopicTimeGranularity("HOUR")
	TopicTimeGranularityDay     = TopicTimeGranularity("DAY")
	TopicTimeGranularityWeek    = TopicTimeGranularity("WEEK")
	TopicTimeGranularityMonth   = TopicTimeGranularity("MONTH")
	TopicTimeGranularityQuarter = TopicTimeGranularity("QUARTER")
	TopicTimeGranularityYear    = TopicTimeGranularity("YEAR")
)

func (TopicTimeGranularity) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicTimeGranularity)(nil)).Elem()
}

func (e TopicTimeGranularity) ToTopicTimeGranularityOutput() TopicTimeGranularityOutput {
	return pulumi.ToOutput(e).(TopicTimeGranularityOutput)
}

func (e TopicTimeGranularity) ToTopicTimeGranularityOutputWithContext(ctx context.Context) TopicTimeGranularityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicTimeGranularityOutput)
}

func (e TopicTimeGranularity) ToTopicTimeGranularityPtrOutput() TopicTimeGranularityPtrOutput {
	return e.ToTopicTimeGranularityPtrOutputWithContext(context.Background())
}

func (e TopicTimeGranularity) ToTopicTimeGranularityPtrOutputWithContext(ctx context.Context) TopicTimeGranularityPtrOutput {
	return TopicTimeGranularity(e).ToTopicTimeGranularityOutputWithContext(ctx).ToTopicTimeGranularityPtrOutputWithContext(ctx)
}

func (e TopicTimeGranularity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicTimeGranularity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicTimeGranularity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicTimeGranularity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicTimeGranularityOutput struct{ *pulumi.OutputState }

func (TopicTimeGranularityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicTimeGranularity)(nil)).Elem()
}

func (o TopicTimeGranularityOutput) ToTopicTimeGranularityOutput() TopicTimeGranularityOutput {
	return o
}

func (o TopicTimeGranularityOutput) ToTopicTimeGranularityOutputWithContext(ctx context.Context) TopicTimeGranularityOutput {
	return o
}

func (o TopicTimeGranularityOutput) ToTopicTimeGranularityPtrOutput() TopicTimeGranularityPtrOutput {
	return o.ToTopicTimeGranularityPtrOutputWithContext(context.Background())
}

func (o TopicTimeGranularityOutput) ToTopicTimeGranularityPtrOutputWithContext(ctx context.Context) TopicTimeGranularityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicTimeGranularity) *TopicTimeGranularity {
		return &v
	}).(TopicTimeGranularityPtrOutput)
}

func (o TopicTimeGranularityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicTimeGranularityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicTimeGranularity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicTimeGranularityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicTimeGranularityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicTimeGranularity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicTimeGranularityPtrOutput struct{ *pulumi.OutputState }

func (TopicTimeGranularityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicTimeGranularity)(nil)).Elem()
}

func (o TopicTimeGranularityPtrOutput) ToTopicTimeGranularityPtrOutput() TopicTimeGranularityPtrOutput {
	return o
}

func (o TopicTimeGranularityPtrOutput) ToTopicTimeGranularityPtrOutputWithContext(ctx context.Context) TopicTimeGranularityPtrOutput {
	return o
}

func (o TopicTimeGranularityPtrOutput) Elem() TopicTimeGranularityOutput {
	return o.ApplyT(func(v *TopicTimeGranularity) TopicTimeGranularity {
		if v != nil {
			return *v
		}
		var ret TopicTimeGranularity
		return ret
	}).(TopicTimeGranularityOutput)
}

func (o TopicTimeGranularityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicTimeGranularityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicTimeGranularity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicTimeGranularityInput is an input type that accepts values of the TopicTimeGranularity enum
// A concrete instance of `TopicTimeGranularityInput` can be one of the following:
//
//	TopicTimeGranularitySecond
//	TopicTimeGranularityMinute
//	TopicTimeGranularityHour
//	TopicTimeGranularityDay
//	TopicTimeGranularityWeek
//	TopicTimeGranularityMonth
//	TopicTimeGranularityQuarter
//	TopicTimeGranularityYear
type TopicTimeGranularityInput interface {
	pulumi.Input

	ToTopicTimeGranularityOutput() TopicTimeGranularityOutput
	ToTopicTimeGranularityOutputWithContext(context.Context) TopicTimeGranularityOutput
}

var topicTimeGranularityPtrType = reflect.TypeOf((**TopicTimeGranularity)(nil)).Elem()

type TopicTimeGranularityPtrInput interface {
	pulumi.Input

	ToTopicTimeGranularityPtrOutput() TopicTimeGranularityPtrOutput
	ToTopicTimeGranularityPtrOutputWithContext(context.Context) TopicTimeGranularityPtrOutput
}

type topicTimeGranularityPtr string

func TopicTimeGranularityPtr(v string) TopicTimeGranularityPtrInput {
	return (*topicTimeGranularityPtr)(&v)
}

func (*topicTimeGranularityPtr) ElementType() reflect.Type {
	return topicTimeGranularityPtrType
}

func (in *topicTimeGranularityPtr) ToTopicTimeGranularityPtrOutput() TopicTimeGranularityPtrOutput {
	return pulumi.ToOutput(in).(TopicTimeGranularityPtrOutput)
}

func (in *topicTimeGranularityPtr) ToTopicTimeGranularityPtrOutputWithContext(ctx context.Context) TopicTimeGranularityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicTimeGranularityPtrOutput)
}

type TopicUndefinedSpecifiedValueType string

const (
	TopicUndefinedSpecifiedValueTypeLeast = TopicUndefinedSpecifiedValueType("LEAST")
	TopicUndefinedSpecifiedValueTypeMost  = TopicUndefinedSpecifiedValueType("MOST")
)

func (TopicUndefinedSpecifiedValueType) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicUndefinedSpecifiedValueType)(nil)).Elem()
}

func (e TopicUndefinedSpecifiedValueType) ToTopicUndefinedSpecifiedValueTypeOutput() TopicUndefinedSpecifiedValueTypeOutput {
	return pulumi.ToOutput(e).(TopicUndefinedSpecifiedValueTypeOutput)
}

func (e TopicUndefinedSpecifiedValueType) ToTopicUndefinedSpecifiedValueTypeOutputWithContext(ctx context.Context) TopicUndefinedSpecifiedValueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicUndefinedSpecifiedValueTypeOutput)
}

func (e TopicUndefinedSpecifiedValueType) ToTopicUndefinedSpecifiedValueTypePtrOutput() TopicUndefinedSpecifiedValueTypePtrOutput {
	return e.ToTopicUndefinedSpecifiedValueTypePtrOutputWithContext(context.Background())
}

func (e TopicUndefinedSpecifiedValueType) ToTopicUndefinedSpecifiedValueTypePtrOutputWithContext(ctx context.Context) TopicUndefinedSpecifiedValueTypePtrOutput {
	return TopicUndefinedSpecifiedValueType(e).ToTopicUndefinedSpecifiedValueTypeOutputWithContext(ctx).ToTopicUndefinedSpecifiedValueTypePtrOutputWithContext(ctx)
}

func (e TopicUndefinedSpecifiedValueType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicUndefinedSpecifiedValueType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicUndefinedSpecifiedValueType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicUndefinedSpecifiedValueType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicUndefinedSpecifiedValueTypeOutput struct{ *pulumi.OutputState }

func (TopicUndefinedSpecifiedValueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicUndefinedSpecifiedValueType)(nil)).Elem()
}

func (o TopicUndefinedSpecifiedValueTypeOutput) ToTopicUndefinedSpecifiedValueTypeOutput() TopicUndefinedSpecifiedValueTypeOutput {
	return o
}

func (o TopicUndefinedSpecifiedValueTypeOutput) ToTopicUndefinedSpecifiedValueTypeOutputWithContext(ctx context.Context) TopicUndefinedSpecifiedValueTypeOutput {
	return o
}

func (o TopicUndefinedSpecifiedValueTypeOutput) ToTopicUndefinedSpecifiedValueTypePtrOutput() TopicUndefinedSpecifiedValueTypePtrOutput {
	return o.ToTopicUndefinedSpecifiedValueTypePtrOutputWithContext(context.Background())
}

func (o TopicUndefinedSpecifiedValueTypeOutput) ToTopicUndefinedSpecifiedValueTypePtrOutputWithContext(ctx context.Context) TopicUndefinedSpecifiedValueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicUndefinedSpecifiedValueType) *TopicUndefinedSpecifiedValueType {
		return &v
	}).(TopicUndefinedSpecifiedValueTypePtrOutput)
}

func (o TopicUndefinedSpecifiedValueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicUndefinedSpecifiedValueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicUndefinedSpecifiedValueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicUndefinedSpecifiedValueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicUndefinedSpecifiedValueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicUndefinedSpecifiedValueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicUndefinedSpecifiedValueTypePtrOutput struct{ *pulumi.OutputState }

func (TopicUndefinedSpecifiedValueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicUndefinedSpecifiedValueType)(nil)).Elem()
}

func (o TopicUndefinedSpecifiedValueTypePtrOutput) ToTopicUndefinedSpecifiedValueTypePtrOutput() TopicUndefinedSpecifiedValueTypePtrOutput {
	return o
}

func (o TopicUndefinedSpecifiedValueTypePtrOutput) ToTopicUndefinedSpecifiedValueTypePtrOutputWithContext(ctx context.Context) TopicUndefinedSpecifiedValueTypePtrOutput {
	return o
}

func (o TopicUndefinedSpecifiedValueTypePtrOutput) Elem() TopicUndefinedSpecifiedValueTypeOutput {
	return o.ApplyT(func(v *TopicUndefinedSpecifiedValueType) TopicUndefinedSpecifiedValueType {
		if v != nil {
			return *v
		}
		var ret TopicUndefinedSpecifiedValueType
		return ret
	}).(TopicUndefinedSpecifiedValueTypeOutput)
}

func (o TopicUndefinedSpecifiedValueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicUndefinedSpecifiedValueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicUndefinedSpecifiedValueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicUndefinedSpecifiedValueTypeInput is an input type that accepts values of the TopicUndefinedSpecifiedValueType enum
// A concrete instance of `TopicUndefinedSpecifiedValueTypeInput` can be one of the following:
//
//	TopicUndefinedSpecifiedValueTypeLeast
//	TopicUndefinedSpecifiedValueTypeMost
type TopicUndefinedSpecifiedValueTypeInput interface {
	pulumi.Input

	ToTopicUndefinedSpecifiedValueTypeOutput() TopicUndefinedSpecifiedValueTypeOutput
	ToTopicUndefinedSpecifiedValueTypeOutputWithContext(context.Context) TopicUndefinedSpecifiedValueTypeOutput
}

var topicUndefinedSpecifiedValueTypePtrType = reflect.TypeOf((**TopicUndefinedSpecifiedValueType)(nil)).Elem()

type TopicUndefinedSpecifiedValueTypePtrInput interface {
	pulumi.Input

	ToTopicUndefinedSpecifiedValueTypePtrOutput() TopicUndefinedSpecifiedValueTypePtrOutput
	ToTopicUndefinedSpecifiedValueTypePtrOutputWithContext(context.Context) TopicUndefinedSpecifiedValueTypePtrOutput
}

type topicUndefinedSpecifiedValueTypePtr string

func TopicUndefinedSpecifiedValueTypePtr(v string) TopicUndefinedSpecifiedValueTypePtrInput {
	return (*topicUndefinedSpecifiedValueTypePtr)(&v)
}

func (*topicUndefinedSpecifiedValueTypePtr) ElementType() reflect.Type {
	return topicUndefinedSpecifiedValueTypePtrType
}

func (in *topicUndefinedSpecifiedValueTypePtr) ToTopicUndefinedSpecifiedValueTypePtrOutput() TopicUndefinedSpecifiedValueTypePtrOutput {
	return pulumi.ToOutput(in).(TopicUndefinedSpecifiedValueTypePtrOutput)
}

func (in *topicUndefinedSpecifiedValueTypePtr) ToTopicUndefinedSpecifiedValueTypePtrOutputWithContext(ctx context.Context) TopicUndefinedSpecifiedValueTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicUndefinedSpecifiedValueTypePtrOutput)
}

type TopicUserExperienceVersion string

const (
	TopicUserExperienceVersionLegacy              = TopicUserExperienceVersion("LEGACY")
	TopicUserExperienceVersionNewReaderExperience = TopicUserExperienceVersion("NEW_READER_EXPERIENCE")
)

func (TopicUserExperienceVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicUserExperienceVersion)(nil)).Elem()
}

func (e TopicUserExperienceVersion) ToTopicUserExperienceVersionOutput() TopicUserExperienceVersionOutput {
	return pulumi.ToOutput(e).(TopicUserExperienceVersionOutput)
}

func (e TopicUserExperienceVersion) ToTopicUserExperienceVersionOutputWithContext(ctx context.Context) TopicUserExperienceVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TopicUserExperienceVersionOutput)
}

func (e TopicUserExperienceVersion) ToTopicUserExperienceVersionPtrOutput() TopicUserExperienceVersionPtrOutput {
	return e.ToTopicUserExperienceVersionPtrOutputWithContext(context.Background())
}

func (e TopicUserExperienceVersion) ToTopicUserExperienceVersionPtrOutputWithContext(ctx context.Context) TopicUserExperienceVersionPtrOutput {
	return TopicUserExperienceVersion(e).ToTopicUserExperienceVersionOutputWithContext(ctx).ToTopicUserExperienceVersionPtrOutputWithContext(ctx)
}

func (e TopicUserExperienceVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicUserExperienceVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TopicUserExperienceVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TopicUserExperienceVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TopicUserExperienceVersionOutput struct{ *pulumi.OutputState }

func (TopicUserExperienceVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicUserExperienceVersion)(nil)).Elem()
}

func (o TopicUserExperienceVersionOutput) ToTopicUserExperienceVersionOutput() TopicUserExperienceVersionOutput {
	return o
}

func (o TopicUserExperienceVersionOutput) ToTopicUserExperienceVersionOutputWithContext(ctx context.Context) TopicUserExperienceVersionOutput {
	return o
}

func (o TopicUserExperienceVersionOutput) ToTopicUserExperienceVersionPtrOutput() TopicUserExperienceVersionPtrOutput {
	return o.ToTopicUserExperienceVersionPtrOutputWithContext(context.Background())
}

func (o TopicUserExperienceVersionOutput) ToTopicUserExperienceVersionPtrOutputWithContext(ctx context.Context) TopicUserExperienceVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicUserExperienceVersion) *TopicUserExperienceVersion {
		return &v
	}).(TopicUserExperienceVersionPtrOutput)
}

func (o TopicUserExperienceVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TopicUserExperienceVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicUserExperienceVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TopicUserExperienceVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicUserExperienceVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TopicUserExperienceVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TopicUserExperienceVersionPtrOutput struct{ *pulumi.OutputState }

func (TopicUserExperienceVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicUserExperienceVersion)(nil)).Elem()
}

func (o TopicUserExperienceVersionPtrOutput) ToTopicUserExperienceVersionPtrOutput() TopicUserExperienceVersionPtrOutput {
	return o
}

func (o TopicUserExperienceVersionPtrOutput) ToTopicUserExperienceVersionPtrOutputWithContext(ctx context.Context) TopicUserExperienceVersionPtrOutput {
	return o
}

func (o TopicUserExperienceVersionPtrOutput) Elem() TopicUserExperienceVersionOutput {
	return o.ApplyT(func(v *TopicUserExperienceVersion) TopicUserExperienceVersion {
		if v != nil {
			return *v
		}
		var ret TopicUserExperienceVersion
		return ret
	}).(TopicUserExperienceVersionOutput)
}

func (o TopicUserExperienceVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TopicUserExperienceVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TopicUserExperienceVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TopicUserExperienceVersionInput is an input type that accepts values of the TopicUserExperienceVersion enum
// A concrete instance of `TopicUserExperienceVersionInput` can be one of the following:
//
//	TopicUserExperienceVersionLegacy
//	TopicUserExperienceVersionNewReaderExperience
type TopicUserExperienceVersionInput interface {
	pulumi.Input

	ToTopicUserExperienceVersionOutput() TopicUserExperienceVersionOutput
	ToTopicUserExperienceVersionOutputWithContext(context.Context) TopicUserExperienceVersionOutput
}

var topicUserExperienceVersionPtrType = reflect.TypeOf((**TopicUserExperienceVersion)(nil)).Elem()

type TopicUserExperienceVersionPtrInput interface {
	pulumi.Input

	ToTopicUserExperienceVersionPtrOutput() TopicUserExperienceVersionPtrOutput
	ToTopicUserExperienceVersionPtrOutputWithContext(context.Context) TopicUserExperienceVersionPtrOutput
}

type topicUserExperienceVersionPtr string

func TopicUserExperienceVersionPtr(v string) TopicUserExperienceVersionPtrInput {
	return (*topicUserExperienceVersionPtr)(&v)
}

func (*topicUserExperienceVersionPtr) ElementType() reflect.Type {
	return topicUserExperienceVersionPtrType
}

func (in *topicUserExperienceVersionPtr) ToTopicUserExperienceVersionPtrOutput() TopicUserExperienceVersionPtrOutput {
	return pulumi.ToOutput(in).(TopicUserExperienceVersionPtrOutput)
}

func (in *topicUserExperienceVersionPtr) ToTopicUserExperienceVersionPtrOutputWithContext(ctx context.Context) TopicUserExperienceVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TopicUserExperienceVersionPtrOutput)
}

type VpcConnectionNetworkInterfaceStatus string

const (
	VpcConnectionNetworkInterfaceStatusCreating                       = VpcConnectionNetworkInterfaceStatus("CREATING")
	VpcConnectionNetworkInterfaceStatusAvailable                      = VpcConnectionNetworkInterfaceStatus("AVAILABLE")
	VpcConnectionNetworkInterfaceStatusCreationFailed                 = VpcConnectionNetworkInterfaceStatus("CREATION_FAILED")
	VpcConnectionNetworkInterfaceStatusUpdating                       = VpcConnectionNetworkInterfaceStatus("UPDATING")
	VpcConnectionNetworkInterfaceStatusUpdateFailed                   = VpcConnectionNetworkInterfaceStatus("UPDATE_FAILED")
	VpcConnectionNetworkInterfaceStatusDeleting                       = VpcConnectionNetworkInterfaceStatus("DELETING")
	VpcConnectionNetworkInterfaceStatusDeleted                        = VpcConnectionNetworkInterfaceStatus("DELETED")
	VpcConnectionNetworkInterfaceStatusDeletionFailed                 = VpcConnectionNetworkInterfaceStatus("DELETION_FAILED")
	VpcConnectionNetworkInterfaceStatusDeletionScheduled              = VpcConnectionNetworkInterfaceStatus("DELETION_SCHEDULED")
	VpcConnectionNetworkInterfaceStatusAttachmentFailedRollbackFailed = VpcConnectionNetworkInterfaceStatus("ATTACHMENT_FAILED_ROLLBACK_FAILED")
)

type VpcConnectionNetworkInterfaceStatusOutput struct{ *pulumi.OutputState }

func (VpcConnectionNetworkInterfaceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConnectionNetworkInterfaceStatus)(nil)).Elem()
}

func (o VpcConnectionNetworkInterfaceStatusOutput) ToVpcConnectionNetworkInterfaceStatusOutput() VpcConnectionNetworkInterfaceStatusOutput {
	return o
}

func (o VpcConnectionNetworkInterfaceStatusOutput) ToVpcConnectionNetworkInterfaceStatusOutputWithContext(ctx context.Context) VpcConnectionNetworkInterfaceStatusOutput {
	return o
}

func (o VpcConnectionNetworkInterfaceStatusOutput) ToVpcConnectionNetworkInterfaceStatusPtrOutput() VpcConnectionNetworkInterfaceStatusPtrOutput {
	return o.ToVpcConnectionNetworkInterfaceStatusPtrOutputWithContext(context.Background())
}

func (o VpcConnectionNetworkInterfaceStatusOutput) ToVpcConnectionNetworkInterfaceStatusPtrOutputWithContext(ctx context.Context) VpcConnectionNetworkInterfaceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcConnectionNetworkInterfaceStatus) *VpcConnectionNetworkInterfaceStatus {
		return &v
	}).(VpcConnectionNetworkInterfaceStatusPtrOutput)
}

func (o VpcConnectionNetworkInterfaceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VpcConnectionNetworkInterfaceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VpcConnectionNetworkInterfaceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VpcConnectionNetworkInterfaceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VpcConnectionNetworkInterfaceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VpcConnectionNetworkInterfaceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VpcConnectionNetworkInterfaceStatusPtrOutput struct{ *pulumi.OutputState }

func (VpcConnectionNetworkInterfaceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConnectionNetworkInterfaceStatus)(nil)).Elem()
}

func (o VpcConnectionNetworkInterfaceStatusPtrOutput) ToVpcConnectionNetworkInterfaceStatusPtrOutput() VpcConnectionNetworkInterfaceStatusPtrOutput {
	return o
}

func (o VpcConnectionNetworkInterfaceStatusPtrOutput) ToVpcConnectionNetworkInterfaceStatusPtrOutputWithContext(ctx context.Context) VpcConnectionNetworkInterfaceStatusPtrOutput {
	return o
}

func (o VpcConnectionNetworkInterfaceStatusPtrOutput) Elem() VpcConnectionNetworkInterfaceStatusOutput {
	return o.ApplyT(func(v *VpcConnectionNetworkInterfaceStatus) VpcConnectionNetworkInterfaceStatus {
		if v != nil {
			return *v
		}
		var ret VpcConnectionNetworkInterfaceStatus
		return ret
	}).(VpcConnectionNetworkInterfaceStatusOutput)
}

func (o VpcConnectionNetworkInterfaceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VpcConnectionNetworkInterfaceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VpcConnectionNetworkInterfaceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VpcConnectionVpcConnectionAvailabilityStatus string

const (
	VpcConnectionVpcConnectionAvailabilityStatusAvailable          = VpcConnectionVpcConnectionAvailabilityStatus("AVAILABLE")
	VpcConnectionVpcConnectionAvailabilityStatusUnavailable        = VpcConnectionVpcConnectionAvailabilityStatus("UNAVAILABLE")
	VpcConnectionVpcConnectionAvailabilityStatusPartiallyAvailable = VpcConnectionVpcConnectionAvailabilityStatus("PARTIALLY_AVAILABLE")
)

func (VpcConnectionVpcConnectionAvailabilityStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConnectionVpcConnectionAvailabilityStatus)(nil)).Elem()
}

func (e VpcConnectionVpcConnectionAvailabilityStatus) ToVpcConnectionVpcConnectionAvailabilityStatusOutput() VpcConnectionVpcConnectionAvailabilityStatusOutput {
	return pulumi.ToOutput(e).(VpcConnectionVpcConnectionAvailabilityStatusOutput)
}

func (e VpcConnectionVpcConnectionAvailabilityStatus) ToVpcConnectionVpcConnectionAvailabilityStatusOutputWithContext(ctx context.Context) VpcConnectionVpcConnectionAvailabilityStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VpcConnectionVpcConnectionAvailabilityStatusOutput)
}

func (e VpcConnectionVpcConnectionAvailabilityStatus) ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutput() VpcConnectionVpcConnectionAvailabilityStatusPtrOutput {
	return e.ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutputWithContext(context.Background())
}

func (e VpcConnectionVpcConnectionAvailabilityStatus) ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutputWithContext(ctx context.Context) VpcConnectionVpcConnectionAvailabilityStatusPtrOutput {
	return VpcConnectionVpcConnectionAvailabilityStatus(e).ToVpcConnectionVpcConnectionAvailabilityStatusOutputWithContext(ctx).ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutputWithContext(ctx)
}

func (e VpcConnectionVpcConnectionAvailabilityStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VpcConnectionVpcConnectionAvailabilityStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VpcConnectionVpcConnectionAvailabilityStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VpcConnectionVpcConnectionAvailabilityStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VpcConnectionVpcConnectionAvailabilityStatusOutput struct{ *pulumi.OutputState }

func (VpcConnectionVpcConnectionAvailabilityStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConnectionVpcConnectionAvailabilityStatus)(nil)).Elem()
}

func (o VpcConnectionVpcConnectionAvailabilityStatusOutput) ToVpcConnectionVpcConnectionAvailabilityStatusOutput() VpcConnectionVpcConnectionAvailabilityStatusOutput {
	return o
}

func (o VpcConnectionVpcConnectionAvailabilityStatusOutput) ToVpcConnectionVpcConnectionAvailabilityStatusOutputWithContext(ctx context.Context) VpcConnectionVpcConnectionAvailabilityStatusOutput {
	return o
}

func (o VpcConnectionVpcConnectionAvailabilityStatusOutput) ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutput() VpcConnectionVpcConnectionAvailabilityStatusPtrOutput {
	return o.ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutputWithContext(context.Background())
}

func (o VpcConnectionVpcConnectionAvailabilityStatusOutput) ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutputWithContext(ctx context.Context) VpcConnectionVpcConnectionAvailabilityStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcConnectionVpcConnectionAvailabilityStatus) *VpcConnectionVpcConnectionAvailabilityStatus {
		return &v
	}).(VpcConnectionVpcConnectionAvailabilityStatusPtrOutput)
}

func (o VpcConnectionVpcConnectionAvailabilityStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VpcConnectionVpcConnectionAvailabilityStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VpcConnectionVpcConnectionAvailabilityStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VpcConnectionVpcConnectionAvailabilityStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VpcConnectionVpcConnectionAvailabilityStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VpcConnectionVpcConnectionAvailabilityStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VpcConnectionVpcConnectionAvailabilityStatusPtrOutput struct{ *pulumi.OutputState }

func (VpcConnectionVpcConnectionAvailabilityStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConnectionVpcConnectionAvailabilityStatus)(nil)).Elem()
}

func (o VpcConnectionVpcConnectionAvailabilityStatusPtrOutput) ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutput() VpcConnectionVpcConnectionAvailabilityStatusPtrOutput {
	return o
}

func (o VpcConnectionVpcConnectionAvailabilityStatusPtrOutput) ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutputWithContext(ctx context.Context) VpcConnectionVpcConnectionAvailabilityStatusPtrOutput {
	return o
}

func (o VpcConnectionVpcConnectionAvailabilityStatusPtrOutput) Elem() VpcConnectionVpcConnectionAvailabilityStatusOutput {
	return o.ApplyT(func(v *VpcConnectionVpcConnectionAvailabilityStatus) VpcConnectionVpcConnectionAvailabilityStatus {
		if v != nil {
			return *v
		}
		var ret VpcConnectionVpcConnectionAvailabilityStatus
		return ret
	}).(VpcConnectionVpcConnectionAvailabilityStatusOutput)
}

func (o VpcConnectionVpcConnectionAvailabilityStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VpcConnectionVpcConnectionAvailabilityStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VpcConnectionVpcConnectionAvailabilityStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VpcConnectionVpcConnectionAvailabilityStatusInput is an input type that accepts values of the VpcConnectionVpcConnectionAvailabilityStatus enum
// A concrete instance of `VpcConnectionVpcConnectionAvailabilityStatusInput` can be one of the following:
//
//	VpcConnectionVpcConnectionAvailabilityStatusAvailable
//	VpcConnectionVpcConnectionAvailabilityStatusUnavailable
//	VpcConnectionVpcConnectionAvailabilityStatusPartiallyAvailable
type VpcConnectionVpcConnectionAvailabilityStatusInput interface {
	pulumi.Input

	ToVpcConnectionVpcConnectionAvailabilityStatusOutput() VpcConnectionVpcConnectionAvailabilityStatusOutput
	ToVpcConnectionVpcConnectionAvailabilityStatusOutputWithContext(context.Context) VpcConnectionVpcConnectionAvailabilityStatusOutput
}

var vpcConnectionVpcConnectionAvailabilityStatusPtrType = reflect.TypeOf((**VpcConnectionVpcConnectionAvailabilityStatus)(nil)).Elem()

type VpcConnectionVpcConnectionAvailabilityStatusPtrInput interface {
	pulumi.Input

	ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutput() VpcConnectionVpcConnectionAvailabilityStatusPtrOutput
	ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutputWithContext(context.Context) VpcConnectionVpcConnectionAvailabilityStatusPtrOutput
}

type vpcConnectionVpcConnectionAvailabilityStatusPtr string

func VpcConnectionVpcConnectionAvailabilityStatusPtr(v string) VpcConnectionVpcConnectionAvailabilityStatusPtrInput {
	return (*vpcConnectionVpcConnectionAvailabilityStatusPtr)(&v)
}

func (*vpcConnectionVpcConnectionAvailabilityStatusPtr) ElementType() reflect.Type {
	return vpcConnectionVpcConnectionAvailabilityStatusPtrType
}

func (in *vpcConnectionVpcConnectionAvailabilityStatusPtr) ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutput() VpcConnectionVpcConnectionAvailabilityStatusPtrOutput {
	return pulumi.ToOutput(in).(VpcConnectionVpcConnectionAvailabilityStatusPtrOutput)
}

func (in *vpcConnectionVpcConnectionAvailabilityStatusPtr) ToVpcConnectionVpcConnectionAvailabilityStatusPtrOutputWithContext(ctx context.Context) VpcConnectionVpcConnectionAvailabilityStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VpcConnectionVpcConnectionAvailabilityStatusPtrOutput)
}

type VpcConnectionVpcConnectionResourceStatus string

const (
	VpcConnectionVpcConnectionResourceStatusCreationInProgress = VpcConnectionVpcConnectionResourceStatus("CREATION_IN_PROGRESS")
	VpcConnectionVpcConnectionResourceStatusCreationSuccessful = VpcConnectionVpcConnectionResourceStatus("CREATION_SUCCESSFUL")
	VpcConnectionVpcConnectionResourceStatusCreationFailed     = VpcConnectionVpcConnectionResourceStatus("CREATION_FAILED")
	VpcConnectionVpcConnectionResourceStatusUpdateInProgress   = VpcConnectionVpcConnectionResourceStatus("UPDATE_IN_PROGRESS")
	VpcConnectionVpcConnectionResourceStatusUpdateSuccessful   = VpcConnectionVpcConnectionResourceStatus("UPDATE_SUCCESSFUL")
	VpcConnectionVpcConnectionResourceStatusUpdateFailed       = VpcConnectionVpcConnectionResourceStatus("UPDATE_FAILED")
	VpcConnectionVpcConnectionResourceStatusDeletionInProgress = VpcConnectionVpcConnectionResourceStatus("DELETION_IN_PROGRESS")
	VpcConnectionVpcConnectionResourceStatusDeletionFailed     = VpcConnectionVpcConnectionResourceStatus("DELETION_FAILED")
	VpcConnectionVpcConnectionResourceStatusDeleted            = VpcConnectionVpcConnectionResourceStatus("DELETED")
)

type VpcConnectionVpcConnectionResourceStatusOutput struct{ *pulumi.OutputState }

func (VpcConnectionVpcConnectionResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConnectionVpcConnectionResourceStatus)(nil)).Elem()
}

func (o VpcConnectionVpcConnectionResourceStatusOutput) ToVpcConnectionVpcConnectionResourceStatusOutput() VpcConnectionVpcConnectionResourceStatusOutput {
	return o
}

func (o VpcConnectionVpcConnectionResourceStatusOutput) ToVpcConnectionVpcConnectionResourceStatusOutputWithContext(ctx context.Context) VpcConnectionVpcConnectionResourceStatusOutput {
	return o
}

func (o VpcConnectionVpcConnectionResourceStatusOutput) ToVpcConnectionVpcConnectionResourceStatusPtrOutput() VpcConnectionVpcConnectionResourceStatusPtrOutput {
	return o.ToVpcConnectionVpcConnectionResourceStatusPtrOutputWithContext(context.Background())
}

func (o VpcConnectionVpcConnectionResourceStatusOutput) ToVpcConnectionVpcConnectionResourceStatusPtrOutputWithContext(ctx context.Context) VpcConnectionVpcConnectionResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcConnectionVpcConnectionResourceStatus) *VpcConnectionVpcConnectionResourceStatus {
		return &v
	}).(VpcConnectionVpcConnectionResourceStatusPtrOutput)
}

func (o VpcConnectionVpcConnectionResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VpcConnectionVpcConnectionResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VpcConnectionVpcConnectionResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VpcConnectionVpcConnectionResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VpcConnectionVpcConnectionResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VpcConnectionVpcConnectionResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VpcConnectionVpcConnectionResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (VpcConnectionVpcConnectionResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConnectionVpcConnectionResourceStatus)(nil)).Elem()
}

func (o VpcConnectionVpcConnectionResourceStatusPtrOutput) ToVpcConnectionVpcConnectionResourceStatusPtrOutput() VpcConnectionVpcConnectionResourceStatusPtrOutput {
	return o
}

func (o VpcConnectionVpcConnectionResourceStatusPtrOutput) ToVpcConnectionVpcConnectionResourceStatusPtrOutputWithContext(ctx context.Context) VpcConnectionVpcConnectionResourceStatusPtrOutput {
	return o
}

func (o VpcConnectionVpcConnectionResourceStatusPtrOutput) Elem() VpcConnectionVpcConnectionResourceStatusOutput {
	return o.ApplyT(func(v *VpcConnectionVpcConnectionResourceStatus) VpcConnectionVpcConnectionResourceStatus {
		if v != nil {
			return *v
		}
		var ret VpcConnectionVpcConnectionResourceStatus
		return ret
	}).(VpcConnectionVpcConnectionResourceStatusOutput)
}

func (o VpcConnectionVpcConnectionResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VpcConnectionVpcConnectionResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VpcConnectionVpcConnectionResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAnchorOptionInput)(nil)).Elem(), AnalysisAnchorOption("NOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAnchorOptionPtrInput)(nil)).Elem(), AnalysisAnchorOption("NOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcThicknessInput)(nil)).Elem(), AnalysisArcThickness("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcThicknessPtrInput)(nil)).Elem(), AnalysisArcThickness("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcThicknessOptionsInput)(nil)).Elem(), AnalysisArcThicknessOptions("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArcThicknessOptionsPtrInput)(nil)).Elem(), AnalysisArcThicknessOptions("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisBindingInput)(nil)).Elem(), AnalysisAxisBinding("PRIMARY_YAXIS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisAxisBindingPtrInput)(nil)).Elem(), AnalysisAxisBinding("PRIMARY_YAXIS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartOrientationInput)(nil)).Elem(), AnalysisBarChartOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarChartOrientationPtrInput)(nil)).Elem(), AnalysisBarChartOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarsArrangementInput)(nil)).Elem(), AnalysisBarsArrangement("CLUSTERED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBarsArrangementPtrInput)(nil)).Elem(), AnalysisBarsArrangement("CLUSTERED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBaseMapStyleTypeInput)(nil)).Elem(), AnalysisBaseMapStyleType("LIGHT_GRAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBaseMapStyleTypePtrInput)(nil)).Elem(), AnalysisBaseMapStyleType("LIGHT_GRAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotFillStyleInput)(nil)).Elem(), AnalysisBoxPlotFillStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisBoxPlotFillStylePtrInput)(nil)).Elem(), AnalysisBoxPlotFillStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoricalAggregationFunctionInput)(nil)).Elem(), AnalysisCategoricalAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoricalAggregationFunctionPtrInput)(nil)).Elem(), AnalysisCategoricalAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoryFilterMatchOperatorInput)(nil)).Elem(), AnalysisCategoryFilterMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoryFilterMatchOperatorPtrInput)(nil)).Elem(), AnalysisCategoryFilterMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoryFilterSelectAllOptionsInput)(nil)).Elem(), AnalysisCategoryFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCategoryFilterSelectAllOptionsPtrInput)(nil)).Elem(), AnalysisCategoryFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColorFillTypeInput)(nil)).Elem(), AnalysisColorFillType("DISCRETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColorFillTypePtrInput)(nil)).Elem(), AnalysisColorFillType("DISCRETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnRoleInput)(nil)).Elem(), AnalysisColumnRole("DIMENSION"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisColumnRolePtrInput)(nil)).Elem(), AnalysisColumnRole("DIMENSION"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComparisonMethodInput)(nil)).Elem(), AnalysisComparisonMethod("DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisComparisonMethodPtrInput)(nil)).Elem(), AnalysisComparisonMethod("DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingIconDisplayOptionInput)(nil)).Elem(), AnalysisConditionalFormattingIconDisplayOption("ICON_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingIconDisplayOptionPtrInput)(nil)).Elem(), AnalysisConditionalFormattingIconDisplayOption("ICON_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingIconSetTypeInput)(nil)).Elem(), AnalysisConditionalFormattingIconSetType("PLUS_MINUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisConditionalFormattingIconSetTypePtrInput)(nil)).Elem(), AnalysisConditionalFormattingIconSetType("PLUS_MINUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCrossDatasetTypesInput)(nil)).Elem(), AnalysisCrossDatasetTypes("ALL_DATASETS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCrossDatasetTypesPtrInput)(nil)).Elem(), AnalysisCrossDatasetTypes("ALL_DATASETS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomContentImageScalingConfigurationInput)(nil)).Elem(), AnalysisCustomContentImageScalingConfiguration("FIT_TO_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomContentImageScalingConfigurationPtrInput)(nil)).Elem(), AnalysisCustomContentImageScalingConfiguration("FIT_TO_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomContentTypeInput)(nil)).Elem(), AnalysisCustomContentType("IMAGE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisCustomContentTypePtrInput)(nil)).Elem(), AnalysisCustomContentType("IMAGE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataLabelContentInput)(nil)).Elem(), AnalysisDataLabelContent("VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataLabelContentPtrInput)(nil)).Elem(), AnalysisDataLabelContent("VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataLabelOverlapInput)(nil)).Elem(), AnalysisDataLabelOverlap("DISABLE_OVERLAP"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataLabelOverlapPtrInput)(nil)).Elem(), AnalysisDataLabelOverlap("DISABLE_OVERLAP"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataLabelPositionInput)(nil)).Elem(), AnalysisDataLabelPosition("INSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDataLabelPositionPtrInput)(nil)).Elem(), AnalysisDataLabelPosition("INSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateAggregationFunctionInput)(nil)).Elem(), AnalysisDateAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDateAggregationFunctionPtrInput)(nil)).Elem(), AnalysisDateAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDayOfTheWeekInput)(nil)).Elem(), AnalysisDayOfTheWeek("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisDayOfTheWeekPtrInput)(nil)).Elem(), AnalysisDayOfTheWeek("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisErrorTypeInput)(nil)).Elem(), AnalysisErrorType("ACCESS_DENIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisErrorTypePtrInput)(nil)).Elem(), AnalysisErrorType("ACCESS_DENIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterNullOptionInput)(nil)).Elem(), AnalysisFilterNullOption("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterNullOptionPtrInput)(nil)).Elem(), AnalysisFilterNullOption("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterVisualScopeInput)(nil)).Elem(), AnalysisFilterVisualScope("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFilterVisualScopePtrInput)(nil)).Elem(), AnalysisFilterVisualScope("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontDecorationInput)(nil)).Elem(), AnalysisFontDecoration("UNDERLINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontDecorationPtrInput)(nil)).Elem(), AnalysisFontDecoration("UNDERLINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontStyleInput)(nil)).Elem(), AnalysisFontStyle("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontStylePtrInput)(nil)).Elem(), AnalysisFontStyle("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontWeightNameInput)(nil)).Elem(), AnalysisFontWeightName("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFontWeightNamePtrInput)(nil)).Elem(), AnalysisFontWeightName("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisForecastComputationSeasonalityInput)(nil)).Elem(), AnalysisForecastComputationSeasonality("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisForecastComputationSeasonalityPtrInput)(nil)).Elem(), AnalysisForecastComputationSeasonality("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartMeasureDataLabelStyleInput)(nil)).Elem(), AnalysisFunnelChartMeasureDataLabelStyle("VALUE_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisFunnelChartMeasureDataLabelStylePtrInput)(nil)).Elem(), AnalysisFunnelChartMeasureDataLabelStyle("VALUE_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialSelectedPointStyleInput)(nil)).Elem(), AnalysisGeospatialSelectedPointStyle("POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisGeospatialSelectedPointStylePtrInput)(nil)).Elem(), AnalysisGeospatialSelectedPointStyle("POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramBinTypeInput)(nil)).Elem(), AnalysisHistogramBinType("BIN_COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHistogramBinTypePtrInput)(nil)).Elem(), AnalysisHistogramBinType("BIN_COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHorizontalTextAlignmentInput)(nil)).Elem(), AnalysisHorizontalTextAlignment("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisHorizontalTextAlignmentPtrInput)(nil)).Elem(), AnalysisHorizontalTextAlignment("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisIconInput)(nil)).Elem(), AnalysisIcon("CARET_UP"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisIconPtrInput)(nil)).Elem(), AnalysisIcon("CARET_UP"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKpiSparklineTypeInput)(nil)).Elem(), AnalysisKpiSparklineType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKpiSparklineTypePtrInput)(nil)).Elem(), AnalysisKpiSparklineType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKpiVisualStandardLayoutTypeInput)(nil)).Elem(), AnalysisKpiVisualStandardLayoutType("CLASSIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisKpiVisualStandardLayoutTypePtrInput)(nil)).Elem(), AnalysisKpiVisualStandardLayoutType("CLASSIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLayoutElementTypeInput)(nil)).Elem(), AnalysisLayoutElementType("VISUAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLayoutElementTypePtrInput)(nil)).Elem(), AnalysisLayoutElementType("VISUAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLegendPositionInput)(nil)).Elem(), AnalysisLegendPosition("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLegendPositionPtrInput)(nil)).Elem(), AnalysisLegendPosition("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartLineStyleInput)(nil)).Elem(), AnalysisLineChartLineStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartLineStylePtrInput)(nil)).Elem(), AnalysisLineChartLineStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartMarkerShapeInput)(nil)).Elem(), AnalysisLineChartMarkerShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartMarkerShapePtrInput)(nil)).Elem(), AnalysisLineChartMarkerShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartTypeInput)(nil)).Elem(), AnalysisLineChartType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineChartTypePtrInput)(nil)).Elem(), AnalysisLineChartType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineInterpolationInput)(nil)).Elem(), AnalysisLineInterpolation("LINEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisLineInterpolationPtrInput)(nil)).Elem(), AnalysisLineInterpolation("LINEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMapZoomModeInput)(nil)).Elem(), AnalysisMapZoomMode("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMapZoomModePtrInput)(nil)).Elem(), AnalysisMapZoomMode("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMaximumMinimumComputationTypeInput)(nil)).Elem(), AnalysisMaximumMinimumComputationType("MAXIMUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMaximumMinimumComputationTypePtrInput)(nil)).Elem(), AnalysisMaximumMinimumComputationType("MAXIMUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMissingDataTreatmentOptionInput)(nil)).Elem(), AnalysisMissingDataTreatmentOption("INTERPOLATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMissingDataTreatmentOptionPtrInput)(nil)).Elem(), AnalysisMissingDataTreatmentOption("INTERPOLATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNegativeValueDisplayModeInput)(nil)).Elem(), AnalysisNegativeValueDisplayMode("POSITIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNegativeValueDisplayModePtrInput)(nil)).Elem(), AnalysisNegativeValueDisplayMode("POSITIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumberScaleInput)(nil)).Elem(), AnalysisNumberScale("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumberScalePtrInput)(nil)).Elem(), AnalysisNumberScale("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericEqualityMatchOperatorInput)(nil)).Elem(), AnalysisNumericEqualityMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericEqualityMatchOperatorPtrInput)(nil)).Elem(), AnalysisNumericEqualityMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericFilterSelectAllOptionsInput)(nil)).Elem(), AnalysisNumericFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericFilterSelectAllOptionsPtrInput)(nil)).Elem(), AnalysisNumericFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericSeparatorSymbolInput)(nil)).Elem(), AnalysisNumericSeparatorSymbol("COMMA"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisNumericSeparatorSymbolPtrInput)(nil)).Elem(), AnalysisNumericSeparatorSymbol("COMMA"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisOtherCategoriesInput)(nil)).Elem(), AnalysisOtherCategories("INCLUDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisOtherCategoriesPtrInput)(nil)).Elem(), AnalysisOtherCategories("INCLUDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPanelBorderStyleInput)(nil)).Elem(), AnalysisPanelBorderStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPanelBorderStylePtrInput)(nil)).Elem(), AnalysisPanelBorderStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPaperOrientationInput)(nil)).Elem(), AnalysisPaperOrientation("PORTRAIT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPaperOrientationPtrInput)(nil)).Elem(), AnalysisPaperOrientation("PORTRAIT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPaperSizeInput)(nil)).Elem(), AnalysisPaperSize("US_LETTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPaperSizePtrInput)(nil)).Elem(), AnalysisPaperSize("US_LETTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterValueTypeInput)(nil)).Elem(), AnalysisParameterValueType("MULTI_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisParameterValueTypePtrInput)(nil)).Elem(), AnalysisParameterValueType("MULTI_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableConditionalFormattingScopeRoleInput)(nil)).Elem(), AnalysisPivotTableConditionalFormattingScopeRole("FIELD"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableConditionalFormattingScopeRolePtrInput)(nil)).Elem(), AnalysisPivotTableConditionalFormattingScopeRole("FIELD"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableDataPathTypeInput)(nil)).Elem(), AnalysisPivotTableDataPathType("HIERARCHY_ROWS_LAYOUT_COLUMN"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableDataPathTypePtrInput)(nil)).Elem(), AnalysisPivotTableDataPathType("HIERARCHY_ROWS_LAYOUT_COLUMN"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableFieldCollapseStateInput)(nil)).Elem(), AnalysisPivotTableFieldCollapseState("COLLAPSED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableFieldCollapseStatePtrInput)(nil)).Elem(), AnalysisPivotTableFieldCollapseState("COLLAPSED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableMetricPlacementInput)(nil)).Elem(), AnalysisPivotTableMetricPlacement("ROW"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableMetricPlacementPtrInput)(nil)).Elem(), AnalysisPivotTableMetricPlacement("ROW"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableRowsLayoutInput)(nil)).Elem(), AnalysisPivotTableRowsLayout("TABULAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableRowsLayoutPtrInput)(nil)).Elem(), AnalysisPivotTableRowsLayout("TABULAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableSubtotalLevelInput)(nil)).Elem(), AnalysisPivotTableSubtotalLevel("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPivotTableSubtotalLevelPtrInput)(nil)).Elem(), AnalysisPivotTableSubtotalLevel("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPrimaryValueDisplayTypeInput)(nil)).Elem(), AnalysisPrimaryValueDisplayType("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisPrimaryValueDisplayTypePtrInput)(nil)).Elem(), AnalysisPrimaryValueDisplayType("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartAxesRangeScaleInput)(nil)).Elem(), AnalysisRadarChartAxesRangeScale("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartAxesRangeScalePtrInput)(nil)).Elem(), AnalysisRadarChartAxesRangeScale("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartShapeInput)(nil)).Elem(), AnalysisRadarChartShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRadarChartShapePtrInput)(nil)).Elem(), AnalysisRadarChartShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineLabelHorizontalPositionInput)(nil)).Elem(), AnalysisReferenceLineLabelHorizontalPosition("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineLabelHorizontalPositionPtrInput)(nil)).Elem(), AnalysisReferenceLineLabelHorizontalPosition("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineLabelVerticalPositionInput)(nil)).Elem(), AnalysisReferenceLineLabelVerticalPosition("ABOVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineLabelVerticalPositionPtrInput)(nil)).Elem(), AnalysisReferenceLineLabelVerticalPosition("ABOVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLinePatternTypeInput)(nil)).Elem(), AnalysisReferenceLinePatternType("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLinePatternTypePtrInput)(nil)).Elem(), AnalysisReferenceLinePatternType("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineSeriesTypeInput)(nil)).Elem(), AnalysisReferenceLineSeriesType("BAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineSeriesTypePtrInput)(nil)).Elem(), AnalysisReferenceLineSeriesType("BAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineValueLabelRelativePositionInput)(nil)).Elem(), AnalysisReferenceLineValueLabelRelativePosition("BEFORE_CUSTOM_LABEL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisReferenceLineValueLabelRelativePositionPtrInput)(nil)).Elem(), AnalysisReferenceLineValueLabelRelativePosition("BEFORE_CUSTOM_LABEL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRelativeDateTypeInput)(nil)).Elem(), AnalysisRelativeDateType("PREVIOUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRelativeDateTypePtrInput)(nil)).Elem(), AnalysisRelativeDateType("PREVIOUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRelativeFontSizeInput)(nil)).Elem(), AnalysisRelativeFontSize("EXTRA_SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisRelativeFontSizePtrInput)(nil)).Elem(), AnalysisRelativeFontSize("EXTRA_SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisResizeOptionInput)(nil)).Elem(), AnalysisResizeOption("FIXED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisResizeOptionPtrInput)(nil)).Elem(), AnalysisResizeOption("FIXED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisResourceStatusInput)(nil)).Elem(), AnalysisResourceStatus("CREATION_IN_PROGRESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisResourceStatusPtrInput)(nil)).Elem(), AnalysisResourceStatus("CREATION_IN_PROGRESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionPageBreakStatusInput)(nil)).Elem(), AnalysisSectionPageBreakStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSectionPageBreakStatusPtrInput)(nil)).Elem(), AnalysisSectionPageBreakStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSelectAllValueOptionsInput)(nil)).Elem(), AnalysisSelectAllValueOptions("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSelectAllValueOptionsPtrInput)(nil)).Elem(), AnalysisSelectAllValueOptions("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSelectedFieldOptionsInput)(nil)).Elem(), AnalysisSelectedFieldOptions("ALL_FIELDS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSelectedFieldOptionsPtrInput)(nil)).Elem(), AnalysisSelectedFieldOptions("ALL_FIELDS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSelectedTooltipTypeInput)(nil)).Elem(), AnalysisSelectedTooltipType("BASIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSelectedTooltipTypePtrInput)(nil)).Elem(), AnalysisSelectedTooltipType("BASIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetContentTypeInput)(nil)).Elem(), AnalysisSheetContentType("PAGINATED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetContentTypePtrInput)(nil)).Elem(), AnalysisSheetContentType("PAGINATED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetControlDateTimePickerTypeInput)(nil)).Elem(), AnalysisSheetControlDateTimePickerType("SINGLE_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetControlDateTimePickerTypePtrInput)(nil)).Elem(), AnalysisSheetControlDateTimePickerType("SINGLE_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetControlListTypeInput)(nil)).Elem(), AnalysisSheetControlListType("MULTI_SELECT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetControlListTypePtrInput)(nil)).Elem(), AnalysisSheetControlListType("MULTI_SELECT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetControlSliderTypeInput)(nil)).Elem(), AnalysisSheetControlSliderType("SINGLE_POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSheetControlSliderTypePtrInput)(nil)).Elem(), AnalysisSheetControlSliderType("SINGLE_POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSimpleAttributeAggregationFunctionInput)(nil)).Elem(), AnalysisSimpleAttributeAggregationFunction("UNIQUE_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSimpleAttributeAggregationFunctionPtrInput)(nil)).Elem(), AnalysisSimpleAttributeAggregationFunction("UNIQUE_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSimpleNumericalAggregationFunctionInput)(nil)).Elem(), AnalysisSimpleNumericalAggregationFunction("SUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSimpleNumericalAggregationFunctionPtrInput)(nil)).Elem(), AnalysisSimpleNumericalAggregationFunction("SUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSimpleTotalAggregationFunctionInput)(nil)).Elem(), AnalysisSimpleTotalAggregationFunction("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSimpleTotalAggregationFunctionPtrInput)(nil)).Elem(), AnalysisSimpleTotalAggregationFunction("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSmallMultiplesAxisPlacementInput)(nil)).Elem(), AnalysisSmallMultiplesAxisPlacement("OUTSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSmallMultiplesAxisPlacementPtrInput)(nil)).Elem(), AnalysisSmallMultiplesAxisPlacement("OUTSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSmallMultiplesAxisScaleInput)(nil)).Elem(), AnalysisSmallMultiplesAxisScale("SHARED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSmallMultiplesAxisScalePtrInput)(nil)).Elem(), AnalysisSmallMultiplesAxisScale("SHARED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSortDirectionInput)(nil)).Elem(), AnalysisSortDirection("ASC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSortDirectionPtrInput)(nil)).Elem(), AnalysisSortDirection("ASC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSpecialValueInput)(nil)).Elem(), AnalysisSpecialValue("EMPTY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisSpecialValuePtrInput)(nil)).Elem(), AnalysisSpecialValue("EMPTY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStyledCellTypeInput)(nil)).Elem(), AnalysisStyledCellType("TOTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisStyledCellTypePtrInput)(nil)).Elem(), AnalysisStyledCellType("TOTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableBorderStyleInput)(nil)).Elem(), AnalysisTableBorderStyle("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableBorderStylePtrInput)(nil)).Elem(), AnalysisTableBorderStyle("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableCellImageScalingConfigurationInput)(nil)).Elem(), AnalysisTableCellImageScalingConfiguration("FIT_TO_CELL_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableCellImageScalingConfigurationPtrInput)(nil)).Elem(), AnalysisTableCellImageScalingConfiguration("FIT_TO_CELL_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldIconSetTypeInput)(nil)).Elem(), AnalysisTableFieldIconSetType("LINK"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableFieldIconSetTypePtrInput)(nil)).Elem(), AnalysisTableFieldIconSetType("LINK"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableOrientationInput)(nil)).Elem(), AnalysisTableOrientation("VERTICAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableOrientationPtrInput)(nil)).Elem(), AnalysisTableOrientation("VERTICAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableTotalsPlacementInput)(nil)).Elem(), AnalysisTableTotalsPlacement("START"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableTotalsPlacementPtrInput)(nil)).Elem(), AnalysisTableTotalsPlacement("START"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableTotalsScrollStatusInput)(nil)).Elem(), AnalysisTableTotalsScrollStatus("PINNED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTableTotalsScrollStatusPtrInput)(nil)).Elem(), AnalysisTableTotalsScrollStatus("PINNED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTargetVisualOptionsInput)(nil)).Elem(), AnalysisTargetVisualOptions("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTargetVisualOptionsPtrInput)(nil)).Elem(), AnalysisTargetVisualOptions("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTextWrapInput)(nil)).Elem(), AnalysisTextWrap("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTextWrapPtrInput)(nil)).Elem(), AnalysisTextWrap("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeGranularityInput)(nil)).Elem(), AnalysisTimeGranularity("YEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTimeGranularityPtrInput)(nil)).Elem(), AnalysisTimeGranularity("YEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTooltipTitleTypeInput)(nil)).Elem(), AnalysisTooltipTitleType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTooltipTitleTypePtrInput)(nil)).Elem(), AnalysisTooltipTitleType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTopBottomComputationTypeInput)(nil)).Elem(), AnalysisTopBottomComputationType("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTopBottomComputationTypePtrInput)(nil)).Elem(), AnalysisTopBottomComputationType("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTopBottomSortOrderInput)(nil)).Elem(), AnalysisTopBottomSortOrder("PERCENT_DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisTopBottomSortOrderPtrInput)(nil)).Elem(), AnalysisTopBottomSortOrder("PERCENT_DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisUrlTargetConfigurationInput)(nil)).Elem(), AnalysisUrlTargetConfiguration("NEW_TAB"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisUrlTargetConfigurationPtrInput)(nil)).Elem(), AnalysisUrlTargetConfiguration("NEW_TAB"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisValidationStrategyModeInput)(nil)).Elem(), AnalysisValidationStrategyMode("STRICT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisValidationStrategyModePtrInput)(nil)).Elem(), AnalysisValidationStrategyMode("STRICT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisValueWhenUnsetOptionInput)(nil)).Elem(), AnalysisValueWhenUnsetOption("RECOMMENDED_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisValueWhenUnsetOptionPtrInput)(nil)).Elem(), AnalysisValueWhenUnsetOption("RECOMMENDED_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVerticalTextAlignmentInput)(nil)).Elem(), AnalysisVerticalTextAlignment("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVerticalTextAlignmentPtrInput)(nil)).Elem(), AnalysisVerticalTextAlignment("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisibilityInput)(nil)).Elem(), AnalysisVisibility("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisibilityPtrInput)(nil)).Elem(), AnalysisVisibility("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualCustomActionTriggerInput)(nil)).Elem(), AnalysisVisualCustomActionTrigger("DATA_POINT_CLICK"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisVisualCustomActionTriggerPtrInput)(nil)).Elem(), AnalysisVisualCustomActionTrigger("DATA_POINT_CLICK"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWidgetStatusInput)(nil)).Elem(), AnalysisWidgetStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWidgetStatusPtrInput)(nil)).Elem(), AnalysisWidgetStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudCloudLayoutInput)(nil)).Elem(), AnalysisWordCloudCloudLayout("FLUID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudCloudLayoutPtrInput)(nil)).Elem(), AnalysisWordCloudCloudLayout("FLUID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudWordCasingInput)(nil)).Elem(), AnalysisWordCloudWordCasing("LOWER_CASE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudWordCasingPtrInput)(nil)).Elem(), AnalysisWordCloudWordCasing("LOWER_CASE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudWordOrientationInput)(nil)).Elem(), AnalysisWordCloudWordOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudWordOrientationPtrInput)(nil)).Elem(), AnalysisWordCloudWordOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudWordPaddingInput)(nil)).Elem(), AnalysisWordCloudWordPadding("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudWordPaddingPtrInput)(nil)).Elem(), AnalysisWordCloudWordPadding("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudWordScalingInput)(nil)).Elem(), AnalysisWordCloudWordScaling("EMPHASIZE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisWordCloudWordScalingPtrInput)(nil)).Elem(), AnalysisWordCloudWordScaling("EMPHASIZE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAnchorOptionInput)(nil)).Elem(), DashboardAnchorOption("NOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAnchorOptionPtrInput)(nil)).Elem(), DashboardAnchorOption("NOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcThicknessInput)(nil)).Elem(), DashboardArcThickness("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcThicknessPtrInput)(nil)).Elem(), DashboardArcThickness("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcThicknessOptionsInput)(nil)).Elem(), DashboardArcThicknessOptions("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArcThicknessOptionsPtrInput)(nil)).Elem(), DashboardArcThicknessOptions("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisBindingInput)(nil)).Elem(), DashboardAxisBinding("PRIMARY_YAXIS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardAxisBindingPtrInput)(nil)).Elem(), DashboardAxisBinding("PRIMARY_YAXIS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartOrientationInput)(nil)).Elem(), DashboardBarChartOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarChartOrientationPtrInput)(nil)).Elem(), DashboardBarChartOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarsArrangementInput)(nil)).Elem(), DashboardBarsArrangement("CLUSTERED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBarsArrangementPtrInput)(nil)).Elem(), DashboardBarsArrangement("CLUSTERED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBaseMapStyleTypeInput)(nil)).Elem(), DashboardBaseMapStyleType("LIGHT_GRAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBaseMapStyleTypePtrInput)(nil)).Elem(), DashboardBaseMapStyleType("LIGHT_GRAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBehaviorInput)(nil)).Elem(), DashboardBehavior("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBehaviorPtrInput)(nil)).Elem(), DashboardBehavior("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotFillStyleInput)(nil)).Elem(), DashboardBoxPlotFillStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardBoxPlotFillStylePtrInput)(nil)).Elem(), DashboardBoxPlotFillStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoricalAggregationFunctionInput)(nil)).Elem(), DashboardCategoricalAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoricalAggregationFunctionPtrInput)(nil)).Elem(), DashboardCategoricalAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoryFilterMatchOperatorInput)(nil)).Elem(), DashboardCategoryFilterMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoryFilterMatchOperatorPtrInput)(nil)).Elem(), DashboardCategoryFilterMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoryFilterSelectAllOptionsInput)(nil)).Elem(), DashboardCategoryFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCategoryFilterSelectAllOptionsPtrInput)(nil)).Elem(), DashboardCategoryFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColorFillTypeInput)(nil)).Elem(), DashboardColorFillType("DISCRETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColorFillTypePtrInput)(nil)).Elem(), DashboardColorFillType("DISCRETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnRoleInput)(nil)).Elem(), DashboardColumnRole("DIMENSION"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnRolePtrInput)(nil)).Elem(), DashboardColumnRole("DIMENSION"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComparisonMethodInput)(nil)).Elem(), DashboardComparisonMethod("DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComparisonMethodPtrInput)(nil)).Elem(), DashboardComparisonMethod("DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingIconDisplayOptionInput)(nil)).Elem(), DashboardConditionalFormattingIconDisplayOption("ICON_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingIconDisplayOptionPtrInput)(nil)).Elem(), DashboardConditionalFormattingIconDisplayOption("ICON_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingIconSetTypeInput)(nil)).Elem(), DashboardConditionalFormattingIconSetType("PLUS_MINUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingIconSetTypePtrInput)(nil)).Elem(), DashboardConditionalFormattingIconSetType("PLUS_MINUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCrossDatasetTypesInput)(nil)).Elem(), DashboardCrossDatasetTypes("ALL_DATASETS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCrossDatasetTypesPtrInput)(nil)).Elem(), DashboardCrossDatasetTypes("ALL_DATASETS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomContentImageScalingConfigurationInput)(nil)).Elem(), DashboardCustomContentImageScalingConfiguration("FIT_TO_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomContentImageScalingConfigurationPtrInput)(nil)).Elem(), DashboardCustomContentImageScalingConfiguration("FIT_TO_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomContentTypeInput)(nil)).Elem(), DashboardCustomContentType("IMAGE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomContentTypePtrInput)(nil)).Elem(), DashboardCustomContentType("IMAGE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataLabelContentInput)(nil)).Elem(), DashboardDataLabelContent("VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataLabelContentPtrInput)(nil)).Elem(), DashboardDataLabelContent("VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataLabelOverlapInput)(nil)).Elem(), DashboardDataLabelOverlap("DISABLE_OVERLAP"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataLabelOverlapPtrInput)(nil)).Elem(), DashboardDataLabelOverlap("DISABLE_OVERLAP"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataLabelPositionInput)(nil)).Elem(), DashboardDataLabelPosition("INSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataLabelPositionPtrInput)(nil)).Elem(), DashboardDataLabelPosition("INSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateAggregationFunctionInput)(nil)).Elem(), DashboardDateAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateAggregationFunctionPtrInput)(nil)).Elem(), DashboardDateAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDayOfTheWeekInput)(nil)).Elem(), DashboardDayOfTheWeek("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDayOfTheWeekPtrInput)(nil)).Elem(), DashboardDayOfTheWeek("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterNullOptionInput)(nil)).Elem(), DashboardFilterNullOption("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterNullOptionPtrInput)(nil)).Elem(), DashboardFilterNullOption("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterVisualScopeInput)(nil)).Elem(), DashboardFilterVisualScope("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterVisualScopePtrInput)(nil)).Elem(), DashboardFilterVisualScope("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontDecorationInput)(nil)).Elem(), DashboardFontDecoration("UNDERLINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontDecorationPtrInput)(nil)).Elem(), DashboardFontDecoration("UNDERLINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontStyleInput)(nil)).Elem(), DashboardFontStyle("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontStylePtrInput)(nil)).Elem(), DashboardFontStyle("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontWeightNameInput)(nil)).Elem(), DashboardFontWeightName("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontWeightNamePtrInput)(nil)).Elem(), DashboardFontWeightName("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardForecastComputationSeasonalityInput)(nil)).Elem(), DashboardForecastComputationSeasonality("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardForecastComputationSeasonalityPtrInput)(nil)).Elem(), DashboardForecastComputationSeasonality("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartMeasureDataLabelStyleInput)(nil)).Elem(), DashboardFunnelChartMeasureDataLabelStyle("VALUE_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartMeasureDataLabelStylePtrInput)(nil)).Elem(), DashboardFunnelChartMeasureDataLabelStyle("VALUE_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialSelectedPointStyleInput)(nil)).Elem(), DashboardGeospatialSelectedPointStyle("POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialSelectedPointStylePtrInput)(nil)).Elem(), DashboardGeospatialSelectedPointStyle("POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramBinTypeInput)(nil)).Elem(), DashboardHistogramBinType("BIN_COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramBinTypePtrInput)(nil)).Elem(), DashboardHistogramBinType("BIN_COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHorizontalTextAlignmentInput)(nil)).Elem(), DashboardHorizontalTextAlignment("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHorizontalTextAlignmentPtrInput)(nil)).Elem(), DashboardHorizontalTextAlignment("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardIconInput)(nil)).Elem(), DashboardIcon("CARET_UP"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardIconPtrInput)(nil)).Elem(), DashboardIcon("CARET_UP"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKpiSparklineTypeInput)(nil)).Elem(), DashboardKpiSparklineType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKpiSparklineTypePtrInput)(nil)).Elem(), DashboardKpiSparklineType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKpiVisualStandardLayoutTypeInput)(nil)).Elem(), DashboardKpiVisualStandardLayoutType("CLASSIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKpiVisualStandardLayoutTypePtrInput)(nil)).Elem(), DashboardKpiVisualStandardLayoutType("CLASSIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutElementTypeInput)(nil)).Elem(), DashboardLayoutElementType("VISUAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutElementTypePtrInput)(nil)).Elem(), DashboardLayoutElementType("VISUAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLegendPositionInput)(nil)).Elem(), DashboardLegendPosition("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLegendPositionPtrInput)(nil)).Elem(), DashboardLegendPosition("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartLineStyleInput)(nil)).Elem(), DashboardLineChartLineStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartLineStylePtrInput)(nil)).Elem(), DashboardLineChartLineStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartMarkerShapeInput)(nil)).Elem(), DashboardLineChartMarkerShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartMarkerShapePtrInput)(nil)).Elem(), DashboardLineChartMarkerShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartTypeInput)(nil)).Elem(), DashboardLineChartType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartTypePtrInput)(nil)).Elem(), DashboardLineChartType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineInterpolationInput)(nil)).Elem(), DashboardLineInterpolation("LINEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineInterpolationPtrInput)(nil)).Elem(), DashboardLineInterpolation("LINEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMapZoomModeInput)(nil)).Elem(), DashboardMapZoomMode("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMapZoomModePtrInput)(nil)).Elem(), DashboardMapZoomMode("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMaximumMinimumComputationTypeInput)(nil)).Elem(), DashboardMaximumMinimumComputationType("MAXIMUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMaximumMinimumComputationTypePtrInput)(nil)).Elem(), DashboardMaximumMinimumComputationType("MAXIMUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMissingDataTreatmentOptionInput)(nil)).Elem(), DashboardMissingDataTreatmentOption("INTERPOLATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMissingDataTreatmentOptionPtrInput)(nil)).Elem(), DashboardMissingDataTreatmentOption("INTERPOLATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNegativeValueDisplayModeInput)(nil)).Elem(), DashboardNegativeValueDisplayMode("POSITIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNegativeValueDisplayModePtrInput)(nil)).Elem(), DashboardNegativeValueDisplayMode("POSITIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumberScaleInput)(nil)).Elem(), DashboardNumberScale("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumberScalePtrInput)(nil)).Elem(), DashboardNumberScale("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericEqualityMatchOperatorInput)(nil)).Elem(), DashboardNumericEqualityMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericEqualityMatchOperatorPtrInput)(nil)).Elem(), DashboardNumericEqualityMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericFilterSelectAllOptionsInput)(nil)).Elem(), DashboardNumericFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericFilterSelectAllOptionsPtrInput)(nil)).Elem(), DashboardNumericFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericSeparatorSymbolInput)(nil)).Elem(), DashboardNumericSeparatorSymbol("COMMA"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericSeparatorSymbolPtrInput)(nil)).Elem(), DashboardNumericSeparatorSymbol("COMMA"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardOtherCategoriesInput)(nil)).Elem(), DashboardOtherCategories("INCLUDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardOtherCategoriesPtrInput)(nil)).Elem(), DashboardOtherCategories("INCLUDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelBorderStyleInput)(nil)).Elem(), DashboardPanelBorderStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelBorderStylePtrInput)(nil)).Elem(), DashboardPanelBorderStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPaperOrientationInput)(nil)).Elem(), DashboardPaperOrientation("PORTRAIT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPaperOrientationPtrInput)(nil)).Elem(), DashboardPaperOrientation("PORTRAIT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPaperSizeInput)(nil)).Elem(), DashboardPaperSize("US_LETTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPaperSizePtrInput)(nil)).Elem(), DashboardPaperSize("US_LETTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterValueTypeInput)(nil)).Elem(), DashboardParameterValueType("MULTI_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterValueTypePtrInput)(nil)).Elem(), DashboardParameterValueType("MULTI_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableConditionalFormattingScopeRoleInput)(nil)).Elem(), DashboardPivotTableConditionalFormattingScopeRole("FIELD"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableConditionalFormattingScopeRolePtrInput)(nil)).Elem(), DashboardPivotTableConditionalFormattingScopeRole("FIELD"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableDataPathTypeInput)(nil)).Elem(), DashboardPivotTableDataPathType("HIERARCHY_ROWS_LAYOUT_COLUMN"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableDataPathTypePtrInput)(nil)).Elem(), DashboardPivotTableDataPathType("HIERARCHY_ROWS_LAYOUT_COLUMN"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableFieldCollapseStateInput)(nil)).Elem(), DashboardPivotTableFieldCollapseState("COLLAPSED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableFieldCollapseStatePtrInput)(nil)).Elem(), DashboardPivotTableFieldCollapseState("COLLAPSED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableMetricPlacementInput)(nil)).Elem(), DashboardPivotTableMetricPlacement("ROW"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableMetricPlacementPtrInput)(nil)).Elem(), DashboardPivotTableMetricPlacement("ROW"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableRowsLayoutInput)(nil)).Elem(), DashboardPivotTableRowsLayout("TABULAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableRowsLayoutPtrInput)(nil)).Elem(), DashboardPivotTableRowsLayout("TABULAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableSubtotalLevelInput)(nil)).Elem(), DashboardPivotTableSubtotalLevel("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableSubtotalLevelPtrInput)(nil)).Elem(), DashboardPivotTableSubtotalLevel("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPrimaryValueDisplayTypeInput)(nil)).Elem(), DashboardPrimaryValueDisplayType("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPrimaryValueDisplayTypePtrInput)(nil)).Elem(), DashboardPrimaryValueDisplayType("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartAxesRangeScaleInput)(nil)).Elem(), DashboardRadarChartAxesRangeScale("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartAxesRangeScalePtrInput)(nil)).Elem(), DashboardRadarChartAxesRangeScale("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartShapeInput)(nil)).Elem(), DashboardRadarChartShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartShapePtrInput)(nil)).Elem(), DashboardRadarChartShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineLabelHorizontalPositionInput)(nil)).Elem(), DashboardReferenceLineLabelHorizontalPosition("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineLabelHorizontalPositionPtrInput)(nil)).Elem(), DashboardReferenceLineLabelHorizontalPosition("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineLabelVerticalPositionInput)(nil)).Elem(), DashboardReferenceLineLabelVerticalPosition("ABOVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineLabelVerticalPositionPtrInput)(nil)).Elem(), DashboardReferenceLineLabelVerticalPosition("ABOVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLinePatternTypeInput)(nil)).Elem(), DashboardReferenceLinePatternType("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLinePatternTypePtrInput)(nil)).Elem(), DashboardReferenceLinePatternType("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineSeriesTypeInput)(nil)).Elem(), DashboardReferenceLineSeriesType("BAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineSeriesTypePtrInput)(nil)).Elem(), DashboardReferenceLineSeriesType("BAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineValueLabelRelativePositionInput)(nil)).Elem(), DashboardReferenceLineValueLabelRelativePosition("BEFORE_CUSTOM_LABEL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineValueLabelRelativePositionPtrInput)(nil)).Elem(), DashboardReferenceLineValueLabelRelativePosition("BEFORE_CUSTOM_LABEL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRelativeDateTypeInput)(nil)).Elem(), DashboardRelativeDateType("PREVIOUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRelativeDateTypePtrInput)(nil)).Elem(), DashboardRelativeDateType("PREVIOUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRelativeFontSizeInput)(nil)).Elem(), DashboardRelativeFontSize("EXTRA_SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRelativeFontSizePtrInput)(nil)).Elem(), DashboardRelativeFontSize("EXTRA_SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardResizeOptionInput)(nil)).Elem(), DashboardResizeOption("FIXED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardResizeOptionPtrInput)(nil)).Elem(), DashboardResizeOption("FIXED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionPageBreakStatusInput)(nil)).Elem(), DashboardSectionPageBreakStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionPageBreakStatusPtrInput)(nil)).Elem(), DashboardSectionPageBreakStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSelectAllValueOptionsInput)(nil)).Elem(), DashboardSelectAllValueOptions("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSelectAllValueOptionsPtrInput)(nil)).Elem(), DashboardSelectAllValueOptions("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSelectedFieldOptionsInput)(nil)).Elem(), DashboardSelectedFieldOptions("ALL_FIELDS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSelectedFieldOptionsPtrInput)(nil)).Elem(), DashboardSelectedFieldOptions("ALL_FIELDS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSelectedTooltipTypeInput)(nil)).Elem(), DashboardSelectedTooltipType("BASIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSelectedTooltipTypePtrInput)(nil)).Elem(), DashboardSelectedTooltipType("BASIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetContentTypeInput)(nil)).Elem(), DashboardSheetContentType("PAGINATED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetContentTypePtrInput)(nil)).Elem(), DashboardSheetContentType("PAGINATED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlDateTimePickerTypeInput)(nil)).Elem(), DashboardSheetControlDateTimePickerType("SINGLE_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlDateTimePickerTypePtrInput)(nil)).Elem(), DashboardSheetControlDateTimePickerType("SINGLE_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlListTypeInput)(nil)).Elem(), DashboardSheetControlListType("MULTI_SELECT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlListTypePtrInput)(nil)).Elem(), DashboardSheetControlListType("MULTI_SELECT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlSliderTypeInput)(nil)).Elem(), DashboardSheetControlSliderType("SINGLE_POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlSliderTypePtrInput)(nil)).Elem(), DashboardSheetControlSliderType("SINGLE_POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSimpleAttributeAggregationFunctionInput)(nil)).Elem(), DashboardSimpleAttributeAggregationFunction("UNIQUE_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSimpleAttributeAggregationFunctionPtrInput)(nil)).Elem(), DashboardSimpleAttributeAggregationFunction("UNIQUE_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSimpleNumericalAggregationFunctionInput)(nil)).Elem(), DashboardSimpleNumericalAggregationFunction("SUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSimpleNumericalAggregationFunctionPtrInput)(nil)).Elem(), DashboardSimpleNumericalAggregationFunction("SUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSimpleTotalAggregationFunctionInput)(nil)).Elem(), DashboardSimpleTotalAggregationFunction("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSimpleTotalAggregationFunctionPtrInput)(nil)).Elem(), DashboardSimpleTotalAggregationFunction("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSmallMultiplesAxisPlacementInput)(nil)).Elem(), DashboardSmallMultiplesAxisPlacement("OUTSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSmallMultiplesAxisPlacementPtrInput)(nil)).Elem(), DashboardSmallMultiplesAxisPlacement("OUTSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSmallMultiplesAxisScaleInput)(nil)).Elem(), DashboardSmallMultiplesAxisScale("SHARED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSmallMultiplesAxisScalePtrInput)(nil)).Elem(), DashboardSmallMultiplesAxisScale("SHARED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSortDirectionInput)(nil)).Elem(), DashboardSortDirection("ASC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSortDirectionPtrInput)(nil)).Elem(), DashboardSortDirection("ASC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSpecialValueInput)(nil)).Elem(), DashboardSpecialValue("EMPTY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSpecialValuePtrInput)(nil)).Elem(), DashboardSpecialValue("EMPTY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStyledCellTypeInput)(nil)).Elem(), DashboardStyledCellType("TOTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStyledCellTypePtrInput)(nil)).Elem(), DashboardStyledCellType("TOTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableBorderStyleInput)(nil)).Elem(), DashboardTableBorderStyle("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableBorderStylePtrInput)(nil)).Elem(), DashboardTableBorderStyle("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableCellImageScalingConfigurationInput)(nil)).Elem(), DashboardTableCellImageScalingConfiguration("FIT_TO_CELL_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableCellImageScalingConfigurationPtrInput)(nil)).Elem(), DashboardTableCellImageScalingConfiguration("FIT_TO_CELL_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldIconSetTypeInput)(nil)).Elem(), DashboardTableFieldIconSetType("LINK"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldIconSetTypePtrInput)(nil)).Elem(), DashboardTableFieldIconSetType("LINK"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableOrientationInput)(nil)).Elem(), DashboardTableOrientation("VERTICAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableOrientationPtrInput)(nil)).Elem(), DashboardTableOrientation("VERTICAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableTotalsPlacementInput)(nil)).Elem(), DashboardTableTotalsPlacement("START"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableTotalsPlacementPtrInput)(nil)).Elem(), DashboardTableTotalsPlacement("START"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableTotalsScrollStatusInput)(nil)).Elem(), DashboardTableTotalsScrollStatus("PINNED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableTotalsScrollStatusPtrInput)(nil)).Elem(), DashboardTableTotalsScrollStatus("PINNED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTargetVisualOptionsInput)(nil)).Elem(), DashboardTargetVisualOptions("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTargetVisualOptionsPtrInput)(nil)).Elem(), DashboardTargetVisualOptions("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTextWrapInput)(nil)).Elem(), DashboardTextWrap("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTextWrapPtrInput)(nil)).Elem(), DashboardTextWrap("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeGranularityInput)(nil)).Elem(), DashboardTimeGranularity("YEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeGranularityPtrInput)(nil)).Elem(), DashboardTimeGranularity("YEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTooltipTitleTypeInput)(nil)).Elem(), DashboardTooltipTitleType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTooltipTitleTypePtrInput)(nil)).Elem(), DashboardTooltipTitleType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopBottomComputationTypeInput)(nil)).Elem(), DashboardTopBottomComputationType("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopBottomComputationTypePtrInput)(nil)).Elem(), DashboardTopBottomComputationType("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopBottomSortOrderInput)(nil)).Elem(), DashboardTopBottomSortOrder("PERCENT_DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopBottomSortOrderPtrInput)(nil)).Elem(), DashboardTopBottomSortOrder("PERCENT_DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardUiStateInput)(nil)).Elem(), DashboardUiState("EXPANDED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardUiStatePtrInput)(nil)).Elem(), DashboardUiState("EXPANDED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardUrlTargetConfigurationInput)(nil)).Elem(), DashboardUrlTargetConfiguration("NEW_TAB"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardUrlTargetConfigurationPtrInput)(nil)).Elem(), DashboardUrlTargetConfiguration("NEW_TAB"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardValidationStrategyModeInput)(nil)).Elem(), DashboardValidationStrategyMode("STRICT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardValidationStrategyModePtrInput)(nil)).Elem(), DashboardValidationStrategyMode("STRICT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardValueWhenUnsetOptionInput)(nil)).Elem(), DashboardValueWhenUnsetOption("RECOMMENDED_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardValueWhenUnsetOptionPtrInput)(nil)).Elem(), DashboardValueWhenUnsetOption("RECOMMENDED_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVerticalTextAlignmentInput)(nil)).Elem(), DashboardVerticalTextAlignment("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVerticalTextAlignmentPtrInput)(nil)).Elem(), DashboardVerticalTextAlignment("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisibilityInput)(nil)).Elem(), DashboardVisibility("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisibilityPtrInput)(nil)).Elem(), DashboardVisibility("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualCustomActionTriggerInput)(nil)).Elem(), DashboardVisualCustomActionTrigger("DATA_POINT_CLICK"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualCustomActionTriggerPtrInput)(nil)).Elem(), DashboardVisualCustomActionTrigger("DATA_POINT_CLICK"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWidgetStatusInput)(nil)).Elem(), DashboardWidgetStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWidgetStatusPtrInput)(nil)).Elem(), DashboardWidgetStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudCloudLayoutInput)(nil)).Elem(), DashboardWordCloudCloudLayout("FLUID"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudCloudLayoutPtrInput)(nil)).Elem(), DashboardWordCloudCloudLayout("FLUID"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudWordCasingInput)(nil)).Elem(), DashboardWordCloudWordCasing("LOWER_CASE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudWordCasingPtrInput)(nil)).Elem(), DashboardWordCloudWordCasing("LOWER_CASE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudWordOrientationInput)(nil)).Elem(), DashboardWordCloudWordOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudWordOrientationPtrInput)(nil)).Elem(), DashboardWordCloudWordOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudWordPaddingInput)(nil)).Elem(), DashboardWordCloudWordPadding("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudWordPaddingPtrInput)(nil)).Elem(), DashboardWordCloudWordPadding("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudWordScalingInput)(nil)).Elem(), DashboardWordCloudWordScaling("EMPHASIZE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudWordScalingPtrInput)(nil)).Elem(), DashboardWordCloudWordScaling("EMPHASIZE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetColumnDataTypeInput)(nil)).Elem(), DataSetColumnDataType("STRING"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetColumnDataTypePtrInput)(nil)).Elem(), DataSetColumnDataType("STRING"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetColumnSubDataTypeInput)(nil)).Elem(), DataSetColumnSubDataType("FIXED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetColumnSubDataTypePtrInput)(nil)).Elem(), DataSetColumnSubDataType("FIXED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetDatasetParameterValueTypeInput)(nil)).Elem(), DataSetDatasetParameterValueType("MULTI_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetDatasetParameterValueTypePtrInput)(nil)).Elem(), DataSetDatasetParameterValueType("MULTI_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetFileFormatInput)(nil)).Elem(), DataSetFileFormat("CSV"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetFileFormatPtrInput)(nil)).Elem(), DataSetFileFormat("CSV"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetGeoSpatialCountryCodeInput)(nil)).Elem(), DataSetGeoSpatialCountryCode("US"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetGeoSpatialCountryCodePtrInput)(nil)).Elem(), DataSetGeoSpatialCountryCode("US"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetGeoSpatialDataRoleInput)(nil)).Elem(), DataSetGeoSpatialDataRole("COUNTRY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetGeoSpatialDataRolePtrInput)(nil)).Elem(), DataSetGeoSpatialDataRole("COUNTRY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetImportModeInput)(nil)).Elem(), DataSetImportMode("SPICE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetImportModePtrInput)(nil)).Elem(), DataSetImportMode("SPICE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetInputColumnDataTypeInput)(nil)).Elem(), DataSetInputColumnDataType("STRING"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetInputColumnDataTypePtrInput)(nil)).Elem(), DataSetInputColumnDataType("STRING"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetJoinTypeInput)(nil)).Elem(), DataSetJoinType("INNER"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetJoinTypePtrInput)(nil)).Elem(), DataSetJoinType("INNER"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetRowLevelPermissionFormatVersionInput)(nil)).Elem(), DataSetRowLevelPermissionFormatVersion("VERSION_1"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetRowLevelPermissionFormatVersionPtrInput)(nil)).Elem(), DataSetRowLevelPermissionFormatVersion("VERSION_1"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetRowLevelPermissionPolicyInput)(nil)).Elem(), DataSetRowLevelPermissionPolicy("GRANT_ACCESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetRowLevelPermissionPolicyPtrInput)(nil)).Elem(), DataSetRowLevelPermissionPolicy("GRANT_ACCESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetSizeUnitInput)(nil)).Elem(), DataSetSizeUnit("HOUR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetSizeUnitPtrInput)(nil)).Elem(), DataSetSizeUnit("HOUR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetStatusInput)(nil)).Elem(), DataSetStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetStatusPtrInput)(nil)).Elem(), DataSetStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetTextQualifierInput)(nil)).Elem(), DataSetTextQualifier("DOUBLE_QUOTE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetTextQualifierPtrInput)(nil)).Elem(), DataSetTextQualifier("DOUBLE_QUOTE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetTimeGranularityInput)(nil)).Elem(), DataSetTimeGranularity("YEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetTimeGranularityPtrInput)(nil)).Elem(), DataSetTimeGranularity("YEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceErrorInfoTypeInput)(nil)).Elem(), DataSourceErrorInfoType("ACCESS_DENIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceErrorInfoTypePtrInput)(nil)).Elem(), DataSourceErrorInfoType("ACCESS_DENIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceStarburstProductTypeInput)(nil)).Elem(), DataSourceStarburstProductType("GALAXY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceStarburstProductTypePtrInput)(nil)).Elem(), DataSourceStarburstProductType("GALAXY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTypeInput)(nil)).Elem(), DataSourceType("ADOBE_ANALYTICS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTypePtrInput)(nil)).Elem(), DataSourceType("ADOBE_ANALYTICS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapRefreshTypeInput)(nil)).Elem(), RefreshScheduleMapRefreshType("FULL_REFRESH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapRefreshTypePtrInput)(nil)).Elem(), RefreshScheduleMapRefreshType("FULL_REFRESH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesIntervalInput)(nil)).Elem(), RefreshScheduleMapScheduleFrequencyPropertiesInterval("MINUTE15"))
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrInput)(nil)).Elem(), RefreshScheduleMapScheduleFrequencyPropertiesInterval("MINUTE15"))
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekInput)(nil)).Elem(), RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrInput)(nil)).Elem(), RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAnchorOptionInput)(nil)).Elem(), TemplateAnchorOption("NOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAnchorOptionPtrInput)(nil)).Elem(), TemplateAnchorOption("NOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcThicknessInput)(nil)).Elem(), TemplateArcThickness("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcThicknessPtrInput)(nil)).Elem(), TemplateArcThickness("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcThicknessOptionsInput)(nil)).Elem(), TemplateArcThicknessOptions("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcThicknessOptionsPtrInput)(nil)).Elem(), TemplateArcThicknessOptions("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisBindingInput)(nil)).Elem(), TemplateAxisBinding("PRIMARY_YAXIS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisBindingPtrInput)(nil)).Elem(), TemplateAxisBinding("PRIMARY_YAXIS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartOrientationInput)(nil)).Elem(), TemplateBarChartOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartOrientationPtrInput)(nil)).Elem(), TemplateBarChartOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarsArrangementInput)(nil)).Elem(), TemplateBarsArrangement("CLUSTERED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarsArrangementPtrInput)(nil)).Elem(), TemplateBarsArrangement("CLUSTERED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBaseMapStyleTypeInput)(nil)).Elem(), TemplateBaseMapStyleType("LIGHT_GRAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBaseMapStyleTypePtrInput)(nil)).Elem(), TemplateBaseMapStyleType("LIGHT_GRAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotFillStyleInput)(nil)).Elem(), TemplateBoxPlotFillStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotFillStylePtrInput)(nil)).Elem(), TemplateBoxPlotFillStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoricalAggregationFunctionInput)(nil)).Elem(), TemplateCategoricalAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoricalAggregationFunctionPtrInput)(nil)).Elem(), TemplateCategoricalAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryFilterMatchOperatorInput)(nil)).Elem(), TemplateCategoryFilterMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryFilterMatchOperatorPtrInput)(nil)).Elem(), TemplateCategoryFilterMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryFilterSelectAllOptionsInput)(nil)).Elem(), TemplateCategoryFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryFilterSelectAllOptionsPtrInput)(nil)).Elem(), TemplateCategoryFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColorFillTypeInput)(nil)).Elem(), TemplateColorFillType("DISCRETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColorFillTypePtrInput)(nil)).Elem(), TemplateColorFillType("DISCRETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnRoleInput)(nil)).Elem(), TemplateColumnRole("DIMENSION"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnRolePtrInput)(nil)).Elem(), TemplateColumnRole("DIMENSION"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComparisonMethodInput)(nil)).Elem(), TemplateComparisonMethod("DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComparisonMethodPtrInput)(nil)).Elem(), TemplateComparisonMethod("DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingIconDisplayOptionInput)(nil)).Elem(), TemplateConditionalFormattingIconDisplayOption("ICON_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingIconDisplayOptionPtrInput)(nil)).Elem(), TemplateConditionalFormattingIconDisplayOption("ICON_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingIconSetTypeInput)(nil)).Elem(), TemplateConditionalFormattingIconSetType("PLUS_MINUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingIconSetTypePtrInput)(nil)).Elem(), TemplateConditionalFormattingIconSetType("PLUS_MINUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCrossDatasetTypesInput)(nil)).Elem(), TemplateCrossDatasetTypes("ALL_DATASETS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCrossDatasetTypesPtrInput)(nil)).Elem(), TemplateCrossDatasetTypes("ALL_DATASETS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomContentImageScalingConfigurationInput)(nil)).Elem(), TemplateCustomContentImageScalingConfiguration("FIT_TO_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomContentImageScalingConfigurationPtrInput)(nil)).Elem(), TemplateCustomContentImageScalingConfiguration("FIT_TO_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomContentTypeInput)(nil)).Elem(), TemplateCustomContentType("IMAGE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomContentTypePtrInput)(nil)).Elem(), TemplateCustomContentType("IMAGE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataLabelContentInput)(nil)).Elem(), TemplateDataLabelContent("VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataLabelContentPtrInput)(nil)).Elem(), TemplateDataLabelContent("VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataLabelOverlapInput)(nil)).Elem(), TemplateDataLabelOverlap("DISABLE_OVERLAP"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataLabelOverlapPtrInput)(nil)).Elem(), TemplateDataLabelOverlap("DISABLE_OVERLAP"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataLabelPositionInput)(nil)).Elem(), TemplateDataLabelPosition("INSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataLabelPositionPtrInput)(nil)).Elem(), TemplateDataLabelPosition("INSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateAggregationFunctionInput)(nil)).Elem(), TemplateDateAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateAggregationFunctionPtrInput)(nil)).Elem(), TemplateDateAggregationFunction("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDayOfTheWeekInput)(nil)).Elem(), TemplateDayOfTheWeek("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDayOfTheWeekPtrInput)(nil)).Elem(), TemplateDayOfTheWeek("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterNullOptionInput)(nil)).Elem(), TemplateFilterNullOption("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterNullOptionPtrInput)(nil)).Elem(), TemplateFilterNullOption("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterVisualScopeInput)(nil)).Elem(), TemplateFilterVisualScope("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterVisualScopePtrInput)(nil)).Elem(), TemplateFilterVisualScope("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontDecorationInput)(nil)).Elem(), TemplateFontDecoration("UNDERLINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontDecorationPtrInput)(nil)).Elem(), TemplateFontDecoration("UNDERLINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontStyleInput)(nil)).Elem(), TemplateFontStyle("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontStylePtrInput)(nil)).Elem(), TemplateFontStyle("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontWeightNameInput)(nil)).Elem(), TemplateFontWeightName("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontWeightNamePtrInput)(nil)).Elem(), TemplateFontWeightName("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateForecastComputationSeasonalityInput)(nil)).Elem(), TemplateForecastComputationSeasonality("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateForecastComputationSeasonalityPtrInput)(nil)).Elem(), TemplateForecastComputationSeasonality("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartMeasureDataLabelStyleInput)(nil)).Elem(), TemplateFunnelChartMeasureDataLabelStyle("VALUE_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartMeasureDataLabelStylePtrInput)(nil)).Elem(), TemplateFunnelChartMeasureDataLabelStyle("VALUE_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialSelectedPointStyleInput)(nil)).Elem(), TemplateGeospatialSelectedPointStyle("POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialSelectedPointStylePtrInput)(nil)).Elem(), TemplateGeospatialSelectedPointStyle("POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramBinTypeInput)(nil)).Elem(), TemplateHistogramBinType("BIN_COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramBinTypePtrInput)(nil)).Elem(), TemplateHistogramBinType("BIN_COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHorizontalTextAlignmentInput)(nil)).Elem(), TemplateHorizontalTextAlignment("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHorizontalTextAlignmentPtrInput)(nil)).Elem(), TemplateHorizontalTextAlignment("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateIconInput)(nil)).Elem(), TemplateIcon("CARET_UP"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateIconPtrInput)(nil)).Elem(), TemplateIcon("CARET_UP"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiSparklineTypeInput)(nil)).Elem(), TemplateKpiSparklineType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiSparklineTypePtrInput)(nil)).Elem(), TemplateKpiSparklineType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiVisualStandardLayoutTypeInput)(nil)).Elem(), TemplateKpiVisualStandardLayoutType("CLASSIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiVisualStandardLayoutTypePtrInput)(nil)).Elem(), TemplateKpiVisualStandardLayoutType("CLASSIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLayoutElementTypeInput)(nil)).Elem(), TemplateLayoutElementType("VISUAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLayoutElementTypePtrInput)(nil)).Elem(), TemplateLayoutElementType("VISUAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLegendPositionInput)(nil)).Elem(), TemplateLegendPosition("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLegendPositionPtrInput)(nil)).Elem(), TemplateLegendPosition("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartLineStyleInput)(nil)).Elem(), TemplateLineChartLineStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartLineStylePtrInput)(nil)).Elem(), TemplateLineChartLineStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartMarkerShapeInput)(nil)).Elem(), TemplateLineChartMarkerShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartMarkerShapePtrInput)(nil)).Elem(), TemplateLineChartMarkerShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartTypeInput)(nil)).Elem(), TemplateLineChartType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartTypePtrInput)(nil)).Elem(), TemplateLineChartType("LINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineInterpolationInput)(nil)).Elem(), TemplateLineInterpolation("LINEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineInterpolationPtrInput)(nil)).Elem(), TemplateLineInterpolation("LINEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMapZoomModeInput)(nil)).Elem(), TemplateMapZoomMode("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMapZoomModePtrInput)(nil)).Elem(), TemplateMapZoomMode("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMaximumMinimumComputationTypeInput)(nil)).Elem(), TemplateMaximumMinimumComputationType("MAXIMUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMaximumMinimumComputationTypePtrInput)(nil)).Elem(), TemplateMaximumMinimumComputationType("MAXIMUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMissingDataTreatmentOptionInput)(nil)).Elem(), TemplateMissingDataTreatmentOption("INTERPOLATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMissingDataTreatmentOptionPtrInput)(nil)).Elem(), TemplateMissingDataTreatmentOption("INTERPOLATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNegativeValueDisplayModeInput)(nil)).Elem(), TemplateNegativeValueDisplayMode("POSITIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNegativeValueDisplayModePtrInput)(nil)).Elem(), TemplateNegativeValueDisplayMode("POSITIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumberScaleInput)(nil)).Elem(), TemplateNumberScale("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumberScalePtrInput)(nil)).Elem(), TemplateNumberScale("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericEqualityMatchOperatorInput)(nil)).Elem(), TemplateNumericEqualityMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericEqualityMatchOperatorPtrInput)(nil)).Elem(), TemplateNumericEqualityMatchOperator("EQUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericFilterSelectAllOptionsInput)(nil)).Elem(), TemplateNumericFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericFilterSelectAllOptionsPtrInput)(nil)).Elem(), TemplateNumericFilterSelectAllOptions("FILTER_ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericSeparatorSymbolInput)(nil)).Elem(), TemplateNumericSeparatorSymbol("COMMA"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericSeparatorSymbolPtrInput)(nil)).Elem(), TemplateNumericSeparatorSymbol("COMMA"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateOtherCategoriesInput)(nil)).Elem(), TemplateOtherCategories("INCLUDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateOtherCategoriesPtrInput)(nil)).Elem(), TemplateOtherCategories("INCLUDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePanelBorderStyleInput)(nil)).Elem(), TemplatePanelBorderStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePanelBorderStylePtrInput)(nil)).Elem(), TemplatePanelBorderStyle("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePaperOrientationInput)(nil)).Elem(), TemplatePaperOrientation("PORTRAIT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePaperOrientationPtrInput)(nil)).Elem(), TemplatePaperOrientation("PORTRAIT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePaperSizeInput)(nil)).Elem(), TemplatePaperSize("US_LETTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePaperSizePtrInput)(nil)).Elem(), TemplatePaperSize("US_LETTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterValueTypeInput)(nil)).Elem(), TemplateParameterValueType("MULTI_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterValueTypePtrInput)(nil)).Elem(), TemplateParameterValueType("MULTI_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConditionalFormattingScopeRoleInput)(nil)).Elem(), TemplatePivotTableConditionalFormattingScopeRole("FIELD"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConditionalFormattingScopeRolePtrInput)(nil)).Elem(), TemplatePivotTableConditionalFormattingScopeRole("FIELD"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableDataPathTypeInput)(nil)).Elem(), TemplatePivotTableDataPathType("HIERARCHY_ROWS_LAYOUT_COLUMN"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableDataPathTypePtrInput)(nil)).Elem(), TemplatePivotTableDataPathType("HIERARCHY_ROWS_LAYOUT_COLUMN"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldCollapseStateInput)(nil)).Elem(), TemplatePivotTableFieldCollapseState("COLLAPSED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldCollapseStatePtrInput)(nil)).Elem(), TemplatePivotTableFieldCollapseState("COLLAPSED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableMetricPlacementInput)(nil)).Elem(), TemplatePivotTableMetricPlacement("ROW"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableMetricPlacementPtrInput)(nil)).Elem(), TemplatePivotTableMetricPlacement("ROW"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableRowsLayoutInput)(nil)).Elem(), TemplatePivotTableRowsLayout("TABULAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableRowsLayoutPtrInput)(nil)).Elem(), TemplatePivotTableRowsLayout("TABULAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableSubtotalLevelInput)(nil)).Elem(), TemplatePivotTableSubtotalLevel("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableSubtotalLevelPtrInput)(nil)).Elem(), TemplatePivotTableSubtotalLevel("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePrimaryValueDisplayTypeInput)(nil)).Elem(), TemplatePrimaryValueDisplayType("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePrimaryValueDisplayTypePtrInput)(nil)).Elem(), TemplatePrimaryValueDisplayType("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartAxesRangeScaleInput)(nil)).Elem(), TemplateRadarChartAxesRangeScale("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartAxesRangeScalePtrInput)(nil)).Elem(), TemplateRadarChartAxesRangeScale("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartShapeInput)(nil)).Elem(), TemplateRadarChartShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartShapePtrInput)(nil)).Elem(), TemplateRadarChartShape("CIRCLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineLabelHorizontalPositionInput)(nil)).Elem(), TemplateReferenceLineLabelHorizontalPosition("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineLabelHorizontalPositionPtrInput)(nil)).Elem(), TemplateReferenceLineLabelHorizontalPosition("LEFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineLabelVerticalPositionInput)(nil)).Elem(), TemplateReferenceLineLabelVerticalPosition("ABOVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineLabelVerticalPositionPtrInput)(nil)).Elem(), TemplateReferenceLineLabelVerticalPosition("ABOVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLinePatternTypeInput)(nil)).Elem(), TemplateReferenceLinePatternType("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLinePatternTypePtrInput)(nil)).Elem(), TemplateReferenceLinePatternType("SOLID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineSeriesTypeInput)(nil)).Elem(), TemplateReferenceLineSeriesType("BAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineSeriesTypePtrInput)(nil)).Elem(), TemplateReferenceLineSeriesType("BAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineValueLabelRelativePositionInput)(nil)).Elem(), TemplateReferenceLineValueLabelRelativePosition("BEFORE_CUSTOM_LABEL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineValueLabelRelativePositionPtrInput)(nil)).Elem(), TemplateReferenceLineValueLabelRelativePosition("BEFORE_CUSTOM_LABEL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRelativeDateTypeInput)(nil)).Elem(), TemplateRelativeDateType("PREVIOUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRelativeDateTypePtrInput)(nil)).Elem(), TemplateRelativeDateType("PREVIOUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRelativeFontSizeInput)(nil)).Elem(), TemplateRelativeFontSize("EXTRA_SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRelativeFontSizePtrInput)(nil)).Elem(), TemplateRelativeFontSize("EXTRA_SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateResizeOptionInput)(nil)).Elem(), TemplateResizeOption("FIXED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateResizeOptionPtrInput)(nil)).Elem(), TemplateResizeOption("FIXED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionPageBreakStatusInput)(nil)).Elem(), TemplateSectionPageBreakStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionPageBreakStatusPtrInput)(nil)).Elem(), TemplateSectionPageBreakStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSelectAllValueOptionsInput)(nil)).Elem(), TemplateSelectAllValueOptions("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSelectAllValueOptionsPtrInput)(nil)).Elem(), TemplateSelectAllValueOptions("ALL_VALUES"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSelectedFieldOptionsInput)(nil)).Elem(), TemplateSelectedFieldOptions("ALL_FIELDS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSelectedFieldOptionsPtrInput)(nil)).Elem(), TemplateSelectedFieldOptions("ALL_FIELDS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSelectedTooltipTypeInput)(nil)).Elem(), TemplateSelectedTooltipType("BASIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSelectedTooltipTypePtrInput)(nil)).Elem(), TemplateSelectedTooltipType("BASIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetContentTypeInput)(nil)).Elem(), TemplateSheetContentType("PAGINATED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetContentTypePtrInput)(nil)).Elem(), TemplateSheetContentType("PAGINATED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlDateTimePickerTypeInput)(nil)).Elem(), TemplateSheetControlDateTimePickerType("SINGLE_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlDateTimePickerTypePtrInput)(nil)).Elem(), TemplateSheetControlDateTimePickerType("SINGLE_VALUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlListTypeInput)(nil)).Elem(), TemplateSheetControlListType("MULTI_SELECT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlListTypePtrInput)(nil)).Elem(), TemplateSheetControlListType("MULTI_SELECT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlSliderTypeInput)(nil)).Elem(), TemplateSheetControlSliderType("SINGLE_POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlSliderTypePtrInput)(nil)).Elem(), TemplateSheetControlSliderType("SINGLE_POINT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSimpleAttributeAggregationFunctionInput)(nil)).Elem(), TemplateSimpleAttributeAggregationFunction("UNIQUE_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSimpleAttributeAggregationFunctionPtrInput)(nil)).Elem(), TemplateSimpleAttributeAggregationFunction("UNIQUE_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSimpleNumericalAggregationFunctionInput)(nil)).Elem(), TemplateSimpleNumericalAggregationFunction("SUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSimpleNumericalAggregationFunctionPtrInput)(nil)).Elem(), TemplateSimpleNumericalAggregationFunction("SUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSimpleTotalAggregationFunctionInput)(nil)).Elem(), TemplateSimpleTotalAggregationFunction("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSimpleTotalAggregationFunctionPtrInput)(nil)).Elem(), TemplateSimpleTotalAggregationFunction("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSmallMultiplesAxisPlacementInput)(nil)).Elem(), TemplateSmallMultiplesAxisPlacement("OUTSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSmallMultiplesAxisPlacementPtrInput)(nil)).Elem(), TemplateSmallMultiplesAxisPlacement("OUTSIDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSmallMultiplesAxisScaleInput)(nil)).Elem(), TemplateSmallMultiplesAxisScale("SHARED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSmallMultiplesAxisScalePtrInput)(nil)).Elem(), TemplateSmallMultiplesAxisScale("SHARED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSortDirectionInput)(nil)).Elem(), TemplateSortDirection("ASC"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSortDirectionPtrInput)(nil)).Elem(), TemplateSortDirection("ASC"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSpecialValueInput)(nil)).Elem(), TemplateSpecialValue("EMPTY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSpecialValuePtrInput)(nil)).Elem(), TemplateSpecialValue("EMPTY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateStyledCellTypeInput)(nil)).Elem(), TemplateStyledCellType("TOTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateStyledCellTypePtrInput)(nil)).Elem(), TemplateStyledCellType("TOTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableBorderStyleInput)(nil)).Elem(), TemplateTableBorderStyle("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableBorderStylePtrInput)(nil)).Elem(), TemplateTableBorderStyle("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableCellImageScalingConfigurationInput)(nil)).Elem(), TemplateTableCellImageScalingConfiguration("FIT_TO_CELL_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableCellImageScalingConfigurationPtrInput)(nil)).Elem(), TemplateTableCellImageScalingConfiguration("FIT_TO_CELL_HEIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldIconSetTypeInput)(nil)).Elem(), TemplateTableFieldIconSetType("LINK"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldIconSetTypePtrInput)(nil)).Elem(), TemplateTableFieldIconSetType("LINK"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableOrientationInput)(nil)).Elem(), TemplateTableOrientation("VERTICAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableOrientationPtrInput)(nil)).Elem(), TemplateTableOrientation("VERTICAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableTotalsPlacementInput)(nil)).Elem(), TemplateTableTotalsPlacement("START"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableTotalsPlacementPtrInput)(nil)).Elem(), TemplateTableTotalsPlacement("START"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableTotalsScrollStatusInput)(nil)).Elem(), TemplateTableTotalsScrollStatus("PINNED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableTotalsScrollStatusPtrInput)(nil)).Elem(), TemplateTableTotalsScrollStatus("PINNED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTargetVisualOptionsInput)(nil)).Elem(), TemplateTargetVisualOptions("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTargetVisualOptionsPtrInput)(nil)).Elem(), TemplateTargetVisualOptions("ALL_VISUALS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTextWrapInput)(nil)).Elem(), TemplateTextWrap("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTextWrapPtrInput)(nil)).Elem(), TemplateTextWrap("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeGranularityInput)(nil)).Elem(), TemplateTimeGranularity("YEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeGranularityPtrInput)(nil)).Elem(), TemplateTimeGranularity("YEAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTooltipTitleTypeInput)(nil)).Elem(), TemplateTooltipTitleType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTooltipTitleTypePtrInput)(nil)).Elem(), TemplateTooltipTitleType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTopBottomComputationTypeInput)(nil)).Elem(), TemplateTopBottomComputationType("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTopBottomComputationTypePtrInput)(nil)).Elem(), TemplateTopBottomComputationType("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTopBottomSortOrderInput)(nil)).Elem(), TemplateTopBottomSortOrder("PERCENT_DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTopBottomSortOrderPtrInput)(nil)).Elem(), TemplateTopBottomSortOrder("PERCENT_DIFFERENCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateUrlTargetConfigurationInput)(nil)).Elem(), TemplateUrlTargetConfiguration("NEW_TAB"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateUrlTargetConfigurationPtrInput)(nil)).Elem(), TemplateUrlTargetConfiguration("NEW_TAB"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateValidationStrategyModeInput)(nil)).Elem(), TemplateValidationStrategyMode("STRICT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateValidationStrategyModePtrInput)(nil)).Elem(), TemplateValidationStrategyMode("STRICT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateValueWhenUnsetOptionInput)(nil)).Elem(), TemplateValueWhenUnsetOption("RECOMMENDED_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateValueWhenUnsetOptionPtrInput)(nil)).Elem(), TemplateValueWhenUnsetOption("RECOMMENDED_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVerticalTextAlignmentInput)(nil)).Elem(), TemplateVerticalTextAlignment("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVerticalTextAlignmentPtrInput)(nil)).Elem(), TemplateVerticalTextAlignment("TOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisibilityInput)(nil)).Elem(), TemplateVisibility("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisibilityPtrInput)(nil)).Elem(), TemplateVisibility("HIDDEN"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisualCustomActionTriggerInput)(nil)).Elem(), TemplateVisualCustomActionTrigger("DATA_POINT_CLICK"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisualCustomActionTriggerPtrInput)(nil)).Elem(), TemplateVisualCustomActionTrigger("DATA_POINT_CLICK"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWidgetStatusInput)(nil)).Elem(), TemplateWidgetStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWidgetStatusPtrInput)(nil)).Elem(), TemplateWidgetStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWordCloudCloudLayoutInput)(nil)).Elem(), TemplateWordCloudCloudLayout("FLUID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWordCloudCloudLayoutPtrInput)(nil)).Elem(), TemplateWordCloudCloudLayout("FLUID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWordCloudWordCasingInput)(nil)).Elem(), TemplateWordCloudWordCasing("LOWER_CASE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWordCloudWordCasingPtrInput)(nil)).Elem(), TemplateWordCloudWordCasing("LOWER_CASE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWordCloudWordOrientationInput)(nil)).Elem(), TemplateWordCloudWordOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWordCloudWordOrientationPtrInput)(nil)).Elem(), TemplateWordCloudWordOrientation("HORIZONTAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWordCloudWordPaddingInput)(nil)).Elem(), TemplateWordCloudWordPadding("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWordCloudWordPaddingPtrInput)(nil)).Elem(), TemplateWordCloudWordPadding("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWordCloudWordScalingInput)(nil)).Elem(), TemplateWordCloudWordScaling("EMPHASIZE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateWordCloudWordScalingPtrInput)(nil)).Elem(), TemplateWordCloudWordScaling("EMPHASIZE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicAuthorSpecifiedAggregationInput)(nil)).Elem(), TopicAuthorSpecifiedAggregation("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicAuthorSpecifiedAggregationPtrInput)(nil)).Elem(), TopicAuthorSpecifiedAggregation("COUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicAuthorSpecifiedAggregationArrayInput)(nil)).Elem(), TopicAuthorSpecifiedAggregationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicCategoryFilterFunctionInput)(nil)).Elem(), TopicCategoryFilterFunction("EXACT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicCategoryFilterFunctionPtrInput)(nil)).Elem(), TopicCategoryFilterFunction("EXACT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicCategoryFilterTypeInput)(nil)).Elem(), TopicCategoryFilterType("CUSTOM_FILTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicCategoryFilterTypePtrInput)(nil)).Elem(), TopicCategoryFilterType("CUSTOM_FILTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicColumnDataRoleInput)(nil)).Elem(), TopicColumnDataRole("DIMENSION"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicColumnDataRolePtrInput)(nil)).Elem(), TopicColumnDataRole("DIMENSION"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicColumnOrderingTypeInput)(nil)).Elem(), TopicColumnOrderingType("GREATER_IS_BETTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicColumnOrderingTypePtrInput)(nil)).Elem(), TopicColumnOrderingType("GREATER_IS_BETTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicConstantTypeInput)(nil)).Elem(), TopicConstantType("SINGULAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicConstantTypePtrInput)(nil)).Elem(), TopicConstantType("SINGULAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicDefaultAggregationInput)(nil)).Elem(), TopicDefaultAggregation("SUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicDefaultAggregationPtrInput)(nil)).Elem(), TopicDefaultAggregation("SUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicDisplayFormatInput)(nil)).Elem(), TopicDisplayFormat("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicDisplayFormatPtrInput)(nil)).Elem(), TopicDisplayFormat("AUTO"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicFilterClassInput)(nil)).Elem(), TopicFilterClass("ENFORCED_VALUE_FILTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicFilterClassPtrInput)(nil)).Elem(), TopicFilterClass("ENFORCED_VALUE_FILTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicNamedEntityAggTypeInput)(nil)).Elem(), TopicNamedEntityAggType("SUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicNamedEntityAggTypePtrInput)(nil)).Elem(), TopicNamedEntityAggType("SUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicNamedFilterAggTypeInput)(nil)).Elem(), TopicNamedFilterAggType("NO_AGGREGATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicNamedFilterAggTypePtrInput)(nil)).Elem(), TopicNamedFilterAggType("NO_AGGREGATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicNamedFilterTypeInput)(nil)).Elem(), TopicNamedFilterType("CATEGORY_FILTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicNamedFilterTypePtrInput)(nil)).Elem(), TopicNamedFilterType("CATEGORY_FILTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicNumberScaleInput)(nil)).Elem(), TopicNumberScale("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicNumberScalePtrInput)(nil)).Elem(), TopicNumberScale("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicNumericSeparatorSymbolInput)(nil)).Elem(), TopicNumericSeparatorSymbol("COMMA"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicNumericSeparatorSymbolPtrInput)(nil)).Elem(), TopicNumericSeparatorSymbol("COMMA"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicPropertyRoleInput)(nil)).Elem(), TopicPropertyRole("PRIMARY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicPropertyRolePtrInput)(nil)).Elem(), TopicPropertyRole("PRIMARY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicPropertyUsageInput)(nil)).Elem(), TopicPropertyUsage("INHERIT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicPropertyUsagePtrInput)(nil)).Elem(), TopicPropertyUsage("INHERIT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRelativeDateFilterFunctionInput)(nil)).Elem(), TopicRelativeDateFilterFunction("PREVIOUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRelativeDateFilterFunctionPtrInput)(nil)).Elem(), TopicRelativeDateFilterFunction("PREVIOUS"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicTimeGranularityInput)(nil)).Elem(), TopicTimeGranularity("SECOND"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicTimeGranularityPtrInput)(nil)).Elem(), TopicTimeGranularity("SECOND"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicUndefinedSpecifiedValueTypeInput)(nil)).Elem(), TopicUndefinedSpecifiedValueType("LEAST"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicUndefinedSpecifiedValueTypePtrInput)(nil)).Elem(), TopicUndefinedSpecifiedValueType("LEAST"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicUserExperienceVersionInput)(nil)).Elem(), TopicUserExperienceVersion("LEGACY"))
	pulumi.RegisterInputType(reflect.TypeOf((*TopicUserExperienceVersionPtrInput)(nil)).Elem(), TopicUserExperienceVersion("LEGACY"))
	pulumi.RegisterInputType(reflect.TypeOf((*VpcConnectionVpcConnectionAvailabilityStatusInput)(nil)).Elem(), VpcConnectionVpcConnectionAvailabilityStatus("AVAILABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*VpcConnectionVpcConnectionAvailabilityStatusPtrInput)(nil)).Elem(), VpcConnectionVpcConnectionAvailabilityStatus("AVAILABLE"))
	pulumi.RegisterOutputType(AnalysisAnchorOptionOutput{})
	pulumi.RegisterOutputType(AnalysisAnchorOptionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisArcThicknessOutput{})
	pulumi.RegisterOutputType(AnalysisArcThicknessPtrOutput{})
	pulumi.RegisterOutputType(AnalysisArcThicknessOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisArcThicknessOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisAxisBindingOutput{})
	pulumi.RegisterOutputType(AnalysisAxisBindingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartOrientationOutput{})
	pulumi.RegisterOutputType(AnalysisBarChartOrientationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBarsArrangementOutput{})
	pulumi.RegisterOutputType(AnalysisBarsArrangementPtrOutput{})
	pulumi.RegisterOutputType(AnalysisBaseMapStyleTypeOutput{})
	pulumi.RegisterOutputType(AnalysisBaseMapStyleTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotFillStyleOutput{})
	pulumi.RegisterOutputType(AnalysisBoxPlotFillStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisCategoricalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(AnalysisCategoricalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCategoryFilterMatchOperatorOutput{})
	pulumi.RegisterOutputType(AnalysisCategoryFilterMatchOperatorPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCategoryFilterSelectAllOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisCategoryFilterSelectAllOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisColorFillTypeOutput{})
	pulumi.RegisterOutputType(AnalysisColorFillTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisColumnRoleOutput{})
	pulumi.RegisterOutputType(AnalysisColumnRolePtrOutput{})
	pulumi.RegisterOutputType(AnalysisComparisonMethodOutput{})
	pulumi.RegisterOutputType(AnalysisComparisonMethodPtrOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingIconDisplayOptionOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingIconDisplayOptionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingIconSetTypeOutput{})
	pulumi.RegisterOutputType(AnalysisConditionalFormattingIconSetTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisCrossDatasetTypesOutput{})
	pulumi.RegisterOutputType(AnalysisCrossDatasetTypesPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomContentImageScalingConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisCustomContentImageScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisCustomContentTypeOutput{})
	pulumi.RegisterOutputType(AnalysisCustomContentTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataLabelContentOutput{})
	pulumi.RegisterOutputType(AnalysisDataLabelContentPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataLabelOverlapOutput{})
	pulumi.RegisterOutputType(AnalysisDataLabelOverlapPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDataLabelPositionOutput{})
	pulumi.RegisterOutputType(AnalysisDataLabelPositionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDateAggregationFunctionOutput{})
	pulumi.RegisterOutputType(AnalysisDateAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisDayOfTheWeekOutput{})
	pulumi.RegisterOutputType(AnalysisDayOfTheWeekPtrOutput{})
	pulumi.RegisterOutputType(AnalysisErrorTypeOutput{})
	pulumi.RegisterOutputType(AnalysisErrorTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterNullOptionOutput{})
	pulumi.RegisterOutputType(AnalysisFilterNullOptionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFilterVisualScopeOutput{})
	pulumi.RegisterOutputType(AnalysisFilterVisualScopePtrOutput{})
	pulumi.RegisterOutputType(AnalysisFontDecorationOutput{})
	pulumi.RegisterOutputType(AnalysisFontDecorationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFontStyleOutput{})
	pulumi.RegisterOutputType(AnalysisFontStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisFontWeightNameOutput{})
	pulumi.RegisterOutputType(AnalysisFontWeightNamePtrOutput{})
	pulumi.RegisterOutputType(AnalysisForecastComputationSeasonalityOutput{})
	pulumi.RegisterOutputType(AnalysisForecastComputationSeasonalityPtrOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartMeasureDataLabelStyleOutput{})
	pulumi.RegisterOutputType(AnalysisFunnelChartMeasureDataLabelStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialSelectedPointStyleOutput{})
	pulumi.RegisterOutputType(AnalysisGeospatialSelectedPointStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramBinTypeOutput{})
	pulumi.RegisterOutputType(AnalysisHistogramBinTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisHorizontalTextAlignmentOutput{})
	pulumi.RegisterOutputType(AnalysisHorizontalTextAlignmentPtrOutput{})
	pulumi.RegisterOutputType(AnalysisIconOutput{})
	pulumi.RegisterOutputType(AnalysisIconPtrOutput{})
	pulumi.RegisterOutputType(AnalysisKpiSparklineTypeOutput{})
	pulumi.RegisterOutputType(AnalysisKpiSparklineTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisKpiVisualStandardLayoutTypeOutput{})
	pulumi.RegisterOutputType(AnalysisKpiVisualStandardLayoutTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisLayoutElementTypeOutput{})
	pulumi.RegisterOutputType(AnalysisLayoutElementTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisLegendPositionOutput{})
	pulumi.RegisterOutputType(AnalysisLegendPositionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartLineStyleOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartLineStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartMarkerShapeOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartMarkerShapePtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartTypeOutput{})
	pulumi.RegisterOutputType(AnalysisLineChartTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisLineInterpolationOutput{})
	pulumi.RegisterOutputType(AnalysisLineInterpolationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisMapZoomModeOutput{})
	pulumi.RegisterOutputType(AnalysisMapZoomModePtrOutput{})
	pulumi.RegisterOutputType(AnalysisMaximumMinimumComputationTypeOutput{})
	pulumi.RegisterOutputType(AnalysisMaximumMinimumComputationTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisMissingDataTreatmentOptionOutput{})
	pulumi.RegisterOutputType(AnalysisMissingDataTreatmentOptionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNegativeValueDisplayModeOutput{})
	pulumi.RegisterOutputType(AnalysisNegativeValueDisplayModePtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumberScaleOutput{})
	pulumi.RegisterOutputType(AnalysisNumberScalePtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericEqualityMatchOperatorOutput{})
	pulumi.RegisterOutputType(AnalysisNumericEqualityMatchOperatorPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericFilterSelectAllOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisNumericFilterSelectAllOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisNumericSeparatorSymbolOutput{})
	pulumi.RegisterOutputType(AnalysisNumericSeparatorSymbolPtrOutput{})
	pulumi.RegisterOutputType(AnalysisOtherCategoriesOutput{})
	pulumi.RegisterOutputType(AnalysisOtherCategoriesPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPanelBorderStyleOutput{})
	pulumi.RegisterOutputType(AnalysisPanelBorderStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisPaperOrientationOutput{})
	pulumi.RegisterOutputType(AnalysisPaperOrientationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPaperSizeOutput{})
	pulumi.RegisterOutputType(AnalysisPaperSizePtrOutput{})
	pulumi.RegisterOutputType(AnalysisParameterValueTypeOutput{})
	pulumi.RegisterOutputType(AnalysisParameterValueTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableConditionalFormattingScopeRoleOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableConditionalFormattingScopeRolePtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableDataPathTypeOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableDataPathTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableFieldCollapseStateOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableFieldCollapseStatePtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableMetricPlacementOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableMetricPlacementPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableRowsLayoutOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableRowsLayoutPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableSubtotalLevelOutput{})
	pulumi.RegisterOutputType(AnalysisPivotTableSubtotalLevelPtrOutput{})
	pulumi.RegisterOutputType(AnalysisPrimaryValueDisplayTypeOutput{})
	pulumi.RegisterOutputType(AnalysisPrimaryValueDisplayTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartAxesRangeScaleOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartAxesRangeScalePtrOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartShapeOutput{})
	pulumi.RegisterOutputType(AnalysisRadarChartShapePtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineLabelHorizontalPositionOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineLabelHorizontalPositionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineLabelVerticalPositionOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineLabelVerticalPositionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLinePatternTypeOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLinePatternTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineSeriesTypeOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineSeriesTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineValueLabelRelativePositionOutput{})
	pulumi.RegisterOutputType(AnalysisReferenceLineValueLabelRelativePositionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisRelativeDateTypeOutput{})
	pulumi.RegisterOutputType(AnalysisRelativeDateTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisRelativeFontSizeOutput{})
	pulumi.RegisterOutputType(AnalysisRelativeFontSizePtrOutput{})
	pulumi.RegisterOutputType(AnalysisResizeOptionOutput{})
	pulumi.RegisterOutputType(AnalysisResizeOptionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisResourceStatusOutput{})
	pulumi.RegisterOutputType(AnalysisResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSectionPageBreakStatusOutput{})
	pulumi.RegisterOutputType(AnalysisSectionPageBreakStatusPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSelectAllValueOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisSelectAllValueOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSelectedFieldOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisSelectedFieldOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSelectedTooltipTypeOutput{})
	pulumi.RegisterOutputType(AnalysisSelectedTooltipTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisSheetContentTypeOutput{})
	pulumi.RegisterOutputType(AnalysisSheetContentTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisSheetControlDateTimePickerTypeOutput{})
	pulumi.RegisterOutputType(AnalysisSheetControlDateTimePickerTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisSheetControlListTypeOutput{})
	pulumi.RegisterOutputType(AnalysisSheetControlListTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisSheetControlSliderTypeOutput{})
	pulumi.RegisterOutputType(AnalysisSheetControlSliderTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisSimpleAttributeAggregationFunctionOutput{})
	pulumi.RegisterOutputType(AnalysisSimpleAttributeAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSimpleNumericalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(AnalysisSimpleNumericalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSimpleTotalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(AnalysisSimpleTotalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSmallMultiplesAxisPlacementOutput{})
	pulumi.RegisterOutputType(AnalysisSmallMultiplesAxisPlacementPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSmallMultiplesAxisScaleOutput{})
	pulumi.RegisterOutputType(AnalysisSmallMultiplesAxisScalePtrOutput{})
	pulumi.RegisterOutputType(AnalysisSortDirectionOutput{})
	pulumi.RegisterOutputType(AnalysisSortDirectionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisSpecialValueOutput{})
	pulumi.RegisterOutputType(AnalysisSpecialValuePtrOutput{})
	pulumi.RegisterOutputType(AnalysisStyledCellTypeOutput{})
	pulumi.RegisterOutputType(AnalysisStyledCellTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableBorderStyleOutput{})
	pulumi.RegisterOutputType(AnalysisTableBorderStylePtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableCellImageScalingConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisTableCellImageScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldIconSetTypeOutput{})
	pulumi.RegisterOutputType(AnalysisTableFieldIconSetTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableOrientationOutput{})
	pulumi.RegisterOutputType(AnalysisTableOrientationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableTotalsPlacementOutput{})
	pulumi.RegisterOutputType(AnalysisTableTotalsPlacementPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTableTotalsScrollStatusOutput{})
	pulumi.RegisterOutputType(AnalysisTableTotalsScrollStatusPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTargetVisualOptionsOutput{})
	pulumi.RegisterOutputType(AnalysisTargetVisualOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTextWrapOutput{})
	pulumi.RegisterOutputType(AnalysisTextWrapPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTimeGranularityOutput{})
	pulumi.RegisterOutputType(AnalysisTimeGranularityPtrOutput{})
	pulumi.RegisterOutputType(AnalysisTooltipTitleTypeOutput{})
	pulumi.RegisterOutputType(AnalysisTooltipTitleTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisTopBottomComputationTypeOutput{})
	pulumi.RegisterOutputType(AnalysisTopBottomComputationTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisTopBottomSortOrderOutput{})
	pulumi.RegisterOutputType(AnalysisTopBottomSortOrderPtrOutput{})
	pulumi.RegisterOutputType(AnalysisUrlTargetConfigurationOutput{})
	pulumi.RegisterOutputType(AnalysisUrlTargetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisValidationStrategyModeOutput{})
	pulumi.RegisterOutputType(AnalysisValidationStrategyModePtrOutput{})
	pulumi.RegisterOutputType(AnalysisValueWhenUnsetOptionOutput{})
	pulumi.RegisterOutputType(AnalysisValueWhenUnsetOptionPtrOutput{})
	pulumi.RegisterOutputType(AnalysisVerticalTextAlignmentOutput{})
	pulumi.RegisterOutputType(AnalysisVerticalTextAlignmentPtrOutput{})
	pulumi.RegisterOutputType(AnalysisVisibilityOutput{})
	pulumi.RegisterOutputType(AnalysisVisibilityPtrOutput{})
	pulumi.RegisterOutputType(AnalysisVisualCustomActionTriggerOutput{})
	pulumi.RegisterOutputType(AnalysisVisualCustomActionTriggerPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWidgetStatusOutput{})
	pulumi.RegisterOutputType(AnalysisWidgetStatusPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudCloudLayoutOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudCloudLayoutPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudWordCasingOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudWordCasingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudWordOrientationOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudWordOrientationPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudWordPaddingOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudWordPaddingPtrOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudWordScalingOutput{})
	pulumi.RegisterOutputType(AnalysisWordCloudWordScalingPtrOutput{})
	pulumi.RegisterOutputType(DashboardAnchorOptionOutput{})
	pulumi.RegisterOutputType(DashboardAnchorOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardArcThicknessOutput{})
	pulumi.RegisterOutputType(DashboardArcThicknessPtrOutput{})
	pulumi.RegisterOutputType(DashboardArcThicknessOptionsOutput{})
	pulumi.RegisterOutputType(DashboardArcThicknessOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardAxisBindingOutput{})
	pulumi.RegisterOutputType(DashboardAxisBindingPtrOutput{})
	pulumi.RegisterOutputType(DashboardBarChartOrientationOutput{})
	pulumi.RegisterOutputType(DashboardBarChartOrientationPtrOutput{})
	pulumi.RegisterOutputType(DashboardBarsArrangementOutput{})
	pulumi.RegisterOutputType(DashboardBarsArrangementPtrOutput{})
	pulumi.RegisterOutputType(DashboardBaseMapStyleTypeOutput{})
	pulumi.RegisterOutputType(DashboardBaseMapStyleTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardBehaviorOutput{})
	pulumi.RegisterOutputType(DashboardBehaviorPtrOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotFillStyleOutput{})
	pulumi.RegisterOutputType(DashboardBoxPlotFillStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardCategoricalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(DashboardCategoricalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(DashboardCategoryFilterMatchOperatorOutput{})
	pulumi.RegisterOutputType(DashboardCategoryFilterMatchOperatorPtrOutput{})
	pulumi.RegisterOutputType(DashboardCategoryFilterSelectAllOptionsOutput{})
	pulumi.RegisterOutputType(DashboardCategoryFilterSelectAllOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardColorFillTypeOutput{})
	pulumi.RegisterOutputType(DashboardColorFillTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardColumnRoleOutput{})
	pulumi.RegisterOutputType(DashboardColumnRolePtrOutput{})
	pulumi.RegisterOutputType(DashboardComparisonMethodOutput{})
	pulumi.RegisterOutputType(DashboardComparisonMethodPtrOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingIconDisplayOptionOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingIconDisplayOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingIconSetTypeOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingIconSetTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardCrossDatasetTypesOutput{})
	pulumi.RegisterOutputType(DashboardCrossDatasetTypesPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomContentImageScalingConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardCustomContentImageScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomContentTypeOutput{})
	pulumi.RegisterOutputType(DashboardCustomContentTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardDataLabelContentOutput{})
	pulumi.RegisterOutputType(DashboardDataLabelContentPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataLabelOverlapOutput{})
	pulumi.RegisterOutputType(DashboardDataLabelOverlapPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataLabelPositionOutput{})
	pulumi.RegisterOutputType(DashboardDataLabelPositionPtrOutput{})
	pulumi.RegisterOutputType(DashboardDateAggregationFunctionOutput{})
	pulumi.RegisterOutputType(DashboardDateAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(DashboardDayOfTheWeekOutput{})
	pulumi.RegisterOutputType(DashboardDayOfTheWeekPtrOutput{})
	pulumi.RegisterOutputType(DashboardErrorTypeOutput{})
	pulumi.RegisterOutputType(DashboardErrorTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterNullOptionOutput{})
	pulumi.RegisterOutputType(DashboardFilterNullOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterVisualScopeOutput{})
	pulumi.RegisterOutputType(DashboardFilterVisualScopePtrOutput{})
	pulumi.RegisterOutputType(DashboardFontDecorationOutput{})
	pulumi.RegisterOutputType(DashboardFontDecorationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFontStyleOutput{})
	pulumi.RegisterOutputType(DashboardFontStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardFontWeightNameOutput{})
	pulumi.RegisterOutputType(DashboardFontWeightNamePtrOutput{})
	pulumi.RegisterOutputType(DashboardForecastComputationSeasonalityOutput{})
	pulumi.RegisterOutputType(DashboardForecastComputationSeasonalityPtrOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartMeasureDataLabelStyleOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartMeasureDataLabelStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialSelectedPointStyleOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialSelectedPointStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardHistogramBinTypeOutput{})
	pulumi.RegisterOutputType(DashboardHistogramBinTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardHorizontalTextAlignmentOutput{})
	pulumi.RegisterOutputType(DashboardHorizontalTextAlignmentPtrOutput{})
	pulumi.RegisterOutputType(DashboardIconOutput{})
	pulumi.RegisterOutputType(DashboardIconPtrOutput{})
	pulumi.RegisterOutputType(DashboardKpiSparklineTypeOutput{})
	pulumi.RegisterOutputType(DashboardKpiSparklineTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardKpiVisualStandardLayoutTypeOutput{})
	pulumi.RegisterOutputType(DashboardKpiVisualStandardLayoutTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardLayoutElementTypeOutput{})
	pulumi.RegisterOutputType(DashboardLayoutElementTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardLegendPositionOutput{})
	pulumi.RegisterOutputType(DashboardLegendPositionPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartLineStyleOutput{})
	pulumi.RegisterOutputType(DashboardLineChartLineStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartMarkerShapeOutput{})
	pulumi.RegisterOutputType(DashboardLineChartMarkerShapePtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartTypeOutput{})
	pulumi.RegisterOutputType(DashboardLineChartTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardLineInterpolationOutput{})
	pulumi.RegisterOutputType(DashboardLineInterpolationPtrOutput{})
	pulumi.RegisterOutputType(DashboardMapZoomModeOutput{})
	pulumi.RegisterOutputType(DashboardMapZoomModePtrOutput{})
	pulumi.RegisterOutputType(DashboardMaximumMinimumComputationTypeOutput{})
	pulumi.RegisterOutputType(DashboardMaximumMinimumComputationTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardMissingDataTreatmentOptionOutput{})
	pulumi.RegisterOutputType(DashboardMissingDataTreatmentOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardNegativeValueDisplayModeOutput{})
	pulumi.RegisterOutputType(DashboardNegativeValueDisplayModePtrOutput{})
	pulumi.RegisterOutputType(DashboardNumberScaleOutput{})
	pulumi.RegisterOutputType(DashboardNumberScalePtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericEqualityMatchOperatorOutput{})
	pulumi.RegisterOutputType(DashboardNumericEqualityMatchOperatorPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericFilterSelectAllOptionsOutput{})
	pulumi.RegisterOutputType(DashboardNumericFilterSelectAllOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericSeparatorSymbolOutput{})
	pulumi.RegisterOutputType(DashboardNumericSeparatorSymbolPtrOutput{})
	pulumi.RegisterOutputType(DashboardOtherCategoriesOutput{})
	pulumi.RegisterOutputType(DashboardOtherCategoriesPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelBorderStyleOutput{})
	pulumi.RegisterOutputType(DashboardPanelBorderStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardPaperOrientationOutput{})
	pulumi.RegisterOutputType(DashboardPaperOrientationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPaperSizeOutput{})
	pulumi.RegisterOutputType(DashboardPaperSizePtrOutput{})
	pulumi.RegisterOutputType(DashboardParameterValueTypeOutput{})
	pulumi.RegisterOutputType(DashboardParameterValueTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableConditionalFormattingScopeRoleOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableConditionalFormattingScopeRolePtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableDataPathTypeOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableDataPathTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableFieldCollapseStateOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableFieldCollapseStatePtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableMetricPlacementOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableMetricPlacementPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableRowsLayoutOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableRowsLayoutPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableSubtotalLevelOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableSubtotalLevelPtrOutput{})
	pulumi.RegisterOutputType(DashboardPrimaryValueDisplayTypeOutput{})
	pulumi.RegisterOutputType(DashboardPrimaryValueDisplayTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartAxesRangeScaleOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartAxesRangeScalePtrOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartShapeOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartShapePtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineLabelHorizontalPositionOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineLabelHorizontalPositionPtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineLabelVerticalPositionOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineLabelVerticalPositionPtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLinePatternTypeOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLinePatternTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineSeriesTypeOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineSeriesTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineValueLabelRelativePositionOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineValueLabelRelativePositionPtrOutput{})
	pulumi.RegisterOutputType(DashboardRelativeDateTypeOutput{})
	pulumi.RegisterOutputType(DashboardRelativeDateTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardRelativeFontSizeOutput{})
	pulumi.RegisterOutputType(DashboardRelativeFontSizePtrOutput{})
	pulumi.RegisterOutputType(DashboardResizeOptionOutput{})
	pulumi.RegisterOutputType(DashboardResizeOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardResourceStatusOutput{})
	pulumi.RegisterOutputType(DashboardResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(DashboardSectionPageBreakStatusOutput{})
	pulumi.RegisterOutputType(DashboardSectionPageBreakStatusPtrOutput{})
	pulumi.RegisterOutputType(DashboardSelectAllValueOptionsOutput{})
	pulumi.RegisterOutputType(DashboardSelectAllValueOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSelectedFieldOptionsOutput{})
	pulumi.RegisterOutputType(DashboardSelectedFieldOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSelectedTooltipTypeOutput{})
	pulumi.RegisterOutputType(DashboardSelectedTooltipTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardSheetContentTypeOutput{})
	pulumi.RegisterOutputType(DashboardSheetContentTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlDateTimePickerTypeOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlDateTimePickerTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlListTypeOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlListTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlSliderTypeOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlSliderTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardSimpleAttributeAggregationFunctionOutput{})
	pulumi.RegisterOutputType(DashboardSimpleAttributeAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(DashboardSimpleNumericalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(DashboardSimpleNumericalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(DashboardSimpleTotalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(DashboardSimpleTotalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(DashboardSmallMultiplesAxisPlacementOutput{})
	pulumi.RegisterOutputType(DashboardSmallMultiplesAxisPlacementPtrOutput{})
	pulumi.RegisterOutputType(DashboardSmallMultiplesAxisScaleOutput{})
	pulumi.RegisterOutputType(DashboardSmallMultiplesAxisScalePtrOutput{})
	pulumi.RegisterOutputType(DashboardSortDirectionOutput{})
	pulumi.RegisterOutputType(DashboardSortDirectionPtrOutput{})
	pulumi.RegisterOutputType(DashboardSpecialValueOutput{})
	pulumi.RegisterOutputType(DashboardSpecialValuePtrOutput{})
	pulumi.RegisterOutputType(DashboardStyledCellTypeOutput{})
	pulumi.RegisterOutputType(DashboardStyledCellTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardTableBorderStyleOutput{})
	pulumi.RegisterOutputType(DashboardTableBorderStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardTableCellImageScalingConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardTableCellImageScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldIconSetTypeOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldIconSetTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardTableOrientationOutput{})
	pulumi.RegisterOutputType(DashboardTableOrientationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableTotalsPlacementOutput{})
	pulumi.RegisterOutputType(DashboardTableTotalsPlacementPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableTotalsScrollStatusOutput{})
	pulumi.RegisterOutputType(DashboardTableTotalsScrollStatusPtrOutput{})
	pulumi.RegisterOutputType(DashboardTargetVisualOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTargetVisualOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTextWrapOutput{})
	pulumi.RegisterOutputType(DashboardTextWrapPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeGranularityOutput{})
	pulumi.RegisterOutputType(DashboardTimeGranularityPtrOutput{})
	pulumi.RegisterOutputType(DashboardTooltipTitleTypeOutput{})
	pulumi.RegisterOutputType(DashboardTooltipTitleTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardTopBottomComputationTypeOutput{})
	pulumi.RegisterOutputType(DashboardTopBottomComputationTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardTopBottomSortOrderOutput{})
	pulumi.RegisterOutputType(DashboardTopBottomSortOrderPtrOutput{})
	pulumi.RegisterOutputType(DashboardUiStateOutput{})
	pulumi.RegisterOutputType(DashboardUiStatePtrOutput{})
	pulumi.RegisterOutputType(DashboardUrlTargetConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardUrlTargetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardValidationStrategyModeOutput{})
	pulumi.RegisterOutputType(DashboardValidationStrategyModePtrOutput{})
	pulumi.RegisterOutputType(DashboardValueWhenUnsetOptionOutput{})
	pulumi.RegisterOutputType(DashboardValueWhenUnsetOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardVerticalTextAlignmentOutput{})
	pulumi.RegisterOutputType(DashboardVerticalTextAlignmentPtrOutput{})
	pulumi.RegisterOutputType(DashboardVisibilityOutput{})
	pulumi.RegisterOutputType(DashboardVisibilityPtrOutput{})
	pulumi.RegisterOutputType(DashboardVisualCustomActionTriggerOutput{})
	pulumi.RegisterOutputType(DashboardVisualCustomActionTriggerPtrOutput{})
	pulumi.RegisterOutputType(DashboardWidgetStatusOutput{})
	pulumi.RegisterOutputType(DashboardWidgetStatusPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudCloudLayoutOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudCloudLayoutPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudWordCasingOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudWordCasingPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudWordOrientationOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudWordOrientationPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudWordPaddingOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudWordPaddingPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudWordScalingOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudWordScalingPtrOutput{})
	pulumi.RegisterOutputType(DataSetColumnDataTypeOutput{})
	pulumi.RegisterOutputType(DataSetColumnDataTypePtrOutput{})
	pulumi.RegisterOutputType(DataSetColumnSubDataTypeOutput{})
	pulumi.RegisterOutputType(DataSetColumnSubDataTypePtrOutput{})
	pulumi.RegisterOutputType(DataSetDatasetParameterValueTypeOutput{})
	pulumi.RegisterOutputType(DataSetDatasetParameterValueTypePtrOutput{})
	pulumi.RegisterOutputType(DataSetFileFormatOutput{})
	pulumi.RegisterOutputType(DataSetFileFormatPtrOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialCountryCodeOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialCountryCodePtrOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialDataRoleOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialDataRolePtrOutput{})
	pulumi.RegisterOutputType(DataSetImportModeOutput{})
	pulumi.RegisterOutputType(DataSetImportModePtrOutput{})
	pulumi.RegisterOutputType(DataSetInputColumnDataTypeOutput{})
	pulumi.RegisterOutputType(DataSetInputColumnDataTypePtrOutput{})
	pulumi.RegisterOutputType(DataSetJoinTypeOutput{})
	pulumi.RegisterOutputType(DataSetJoinTypePtrOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionFormatVersionOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionFormatVersionPtrOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionPolicyOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionPolicyPtrOutput{})
	pulumi.RegisterOutputType(DataSetSizeUnitOutput{})
	pulumi.RegisterOutputType(DataSetSizeUnitPtrOutput{})
	pulumi.RegisterOutputType(DataSetStatusOutput{})
	pulumi.RegisterOutputType(DataSetStatusPtrOutput{})
	pulumi.RegisterOutputType(DataSetTextQualifierOutput{})
	pulumi.RegisterOutputType(DataSetTextQualifierPtrOutput{})
	pulumi.RegisterOutputType(DataSetTimeGranularityOutput{})
	pulumi.RegisterOutputType(DataSetTimeGranularityPtrOutput{})
	pulumi.RegisterOutputType(DataSourceErrorInfoTypeOutput{})
	pulumi.RegisterOutputType(DataSourceErrorInfoTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceResourceStatusOutput{})
	pulumi.RegisterOutputType(DataSourceResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(DataSourceStarburstProductTypeOutput{})
	pulumi.RegisterOutputType(DataSourceStarburstProductTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceTypeOutput{})
	pulumi.RegisterOutputType(DataSourceTypePtrOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapRefreshTypeOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapRefreshTypePtrOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapScheduleFrequencyPropertiesIntervalOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput{})
	pulumi.RegisterOutputType(TemplateAnchorOptionOutput{})
	pulumi.RegisterOutputType(TemplateAnchorOptionPtrOutput{})
	pulumi.RegisterOutputType(TemplateArcThicknessOutput{})
	pulumi.RegisterOutputType(TemplateArcThicknessPtrOutput{})
	pulumi.RegisterOutputType(TemplateArcThicknessOptionsOutput{})
	pulumi.RegisterOutputType(TemplateArcThicknessOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisBindingOutput{})
	pulumi.RegisterOutputType(TemplateAxisBindingPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartOrientationOutput{})
	pulumi.RegisterOutputType(TemplateBarChartOrientationPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarsArrangementOutput{})
	pulumi.RegisterOutputType(TemplateBarsArrangementPtrOutput{})
	pulumi.RegisterOutputType(TemplateBaseMapStyleTypeOutput{})
	pulumi.RegisterOutputType(TemplateBaseMapStyleTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotFillStyleOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotFillStylePtrOutput{})
	pulumi.RegisterOutputType(TemplateCategoricalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TemplateCategoricalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(TemplateCategoryFilterMatchOperatorOutput{})
	pulumi.RegisterOutputType(TemplateCategoryFilterMatchOperatorPtrOutput{})
	pulumi.RegisterOutputType(TemplateCategoryFilterSelectAllOptionsOutput{})
	pulumi.RegisterOutputType(TemplateCategoryFilterSelectAllOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateColorFillTypeOutput{})
	pulumi.RegisterOutputType(TemplateColorFillTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateColumnRoleOutput{})
	pulumi.RegisterOutputType(TemplateColumnRolePtrOutput{})
	pulumi.RegisterOutputType(TemplateComparisonMethodOutput{})
	pulumi.RegisterOutputType(TemplateComparisonMethodPtrOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingIconDisplayOptionOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingIconDisplayOptionPtrOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingIconSetTypeOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingIconSetTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateCrossDatasetTypesOutput{})
	pulumi.RegisterOutputType(TemplateCrossDatasetTypesPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomContentImageScalingConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateCustomContentImageScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomContentTypeOutput{})
	pulumi.RegisterOutputType(TemplateCustomContentTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateDataLabelContentOutput{})
	pulumi.RegisterOutputType(TemplateDataLabelContentPtrOutput{})
	pulumi.RegisterOutputType(TemplateDataLabelOverlapOutput{})
	pulumi.RegisterOutputType(TemplateDataLabelOverlapPtrOutput{})
	pulumi.RegisterOutputType(TemplateDataLabelPositionOutput{})
	pulumi.RegisterOutputType(TemplateDataLabelPositionPtrOutput{})
	pulumi.RegisterOutputType(TemplateDateAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TemplateDateAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(TemplateDayOfTheWeekOutput{})
	pulumi.RegisterOutputType(TemplateDayOfTheWeekPtrOutput{})
	pulumi.RegisterOutputType(TemplateErrorTypeOutput{})
	pulumi.RegisterOutputType(TemplateErrorTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterNullOptionOutput{})
	pulumi.RegisterOutputType(TemplateFilterNullOptionPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterVisualScopeOutput{})
	pulumi.RegisterOutputType(TemplateFilterVisualScopePtrOutput{})
	pulumi.RegisterOutputType(TemplateFontDecorationOutput{})
	pulumi.RegisterOutputType(TemplateFontDecorationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFontStyleOutput{})
	pulumi.RegisterOutputType(TemplateFontStylePtrOutput{})
	pulumi.RegisterOutputType(TemplateFontWeightNameOutput{})
	pulumi.RegisterOutputType(TemplateFontWeightNamePtrOutput{})
	pulumi.RegisterOutputType(TemplateForecastComputationSeasonalityOutput{})
	pulumi.RegisterOutputType(TemplateForecastComputationSeasonalityPtrOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartMeasureDataLabelStyleOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartMeasureDataLabelStylePtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialSelectedPointStyleOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialSelectedPointStylePtrOutput{})
	pulumi.RegisterOutputType(TemplateHistogramBinTypeOutput{})
	pulumi.RegisterOutputType(TemplateHistogramBinTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateHorizontalTextAlignmentOutput{})
	pulumi.RegisterOutputType(TemplateHorizontalTextAlignmentPtrOutput{})
	pulumi.RegisterOutputType(TemplateIconOutput{})
	pulumi.RegisterOutputType(TemplateIconPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiSparklineTypeOutput{})
	pulumi.RegisterOutputType(TemplateKpiSparklineTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiVisualStandardLayoutTypeOutput{})
	pulumi.RegisterOutputType(TemplateKpiVisualStandardLayoutTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateLayoutElementTypeOutput{})
	pulumi.RegisterOutputType(TemplateLayoutElementTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateLegendPositionOutput{})
	pulumi.RegisterOutputType(TemplateLegendPositionPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartLineStyleOutput{})
	pulumi.RegisterOutputType(TemplateLineChartLineStylePtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartMarkerShapeOutput{})
	pulumi.RegisterOutputType(TemplateLineChartMarkerShapePtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartTypeOutput{})
	pulumi.RegisterOutputType(TemplateLineChartTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateLineInterpolationOutput{})
	pulumi.RegisterOutputType(TemplateLineInterpolationPtrOutput{})
	pulumi.RegisterOutputType(TemplateMapZoomModeOutput{})
	pulumi.RegisterOutputType(TemplateMapZoomModePtrOutput{})
	pulumi.RegisterOutputType(TemplateMaximumMinimumComputationTypeOutput{})
	pulumi.RegisterOutputType(TemplateMaximumMinimumComputationTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateMissingDataTreatmentOptionOutput{})
	pulumi.RegisterOutputType(TemplateMissingDataTreatmentOptionPtrOutput{})
	pulumi.RegisterOutputType(TemplateNegativeValueDisplayModeOutput{})
	pulumi.RegisterOutputType(TemplateNegativeValueDisplayModePtrOutput{})
	pulumi.RegisterOutputType(TemplateNumberScaleOutput{})
	pulumi.RegisterOutputType(TemplateNumberScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericEqualityMatchOperatorOutput{})
	pulumi.RegisterOutputType(TemplateNumericEqualityMatchOperatorPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericFilterSelectAllOptionsOutput{})
	pulumi.RegisterOutputType(TemplateNumericFilterSelectAllOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericSeparatorSymbolOutput{})
	pulumi.RegisterOutputType(TemplateNumericSeparatorSymbolPtrOutput{})
	pulumi.RegisterOutputType(TemplateOtherCategoriesOutput{})
	pulumi.RegisterOutputType(TemplateOtherCategoriesPtrOutput{})
	pulumi.RegisterOutputType(TemplatePanelBorderStyleOutput{})
	pulumi.RegisterOutputType(TemplatePanelBorderStylePtrOutput{})
	pulumi.RegisterOutputType(TemplatePaperOrientationOutput{})
	pulumi.RegisterOutputType(TemplatePaperOrientationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePaperSizeOutput{})
	pulumi.RegisterOutputType(TemplatePaperSizePtrOutput{})
	pulumi.RegisterOutputType(TemplateParameterValueTypeOutput{})
	pulumi.RegisterOutputType(TemplateParameterValueTypePtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConditionalFormattingScopeRoleOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConditionalFormattingScopeRolePtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableDataPathTypeOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableDataPathTypePtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldCollapseStateOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldCollapseStatePtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableMetricPlacementOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableMetricPlacementPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableRowsLayoutOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableRowsLayoutPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableSubtotalLevelOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableSubtotalLevelPtrOutput{})
	pulumi.RegisterOutputType(TemplatePrimaryValueDisplayTypeOutput{})
	pulumi.RegisterOutputType(TemplatePrimaryValueDisplayTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartAxesRangeScaleOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartAxesRangeScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartShapeOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartShapePtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineLabelHorizontalPositionOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineLabelHorizontalPositionPtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineLabelVerticalPositionOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineLabelVerticalPositionPtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLinePatternTypeOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLinePatternTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineSeriesTypeOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineSeriesTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineValueLabelRelativePositionOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineValueLabelRelativePositionPtrOutput{})
	pulumi.RegisterOutputType(TemplateRelativeDateTypeOutput{})
	pulumi.RegisterOutputType(TemplateRelativeDateTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateRelativeFontSizeOutput{})
	pulumi.RegisterOutputType(TemplateRelativeFontSizePtrOutput{})
	pulumi.RegisterOutputType(TemplateResizeOptionOutput{})
	pulumi.RegisterOutputType(TemplateResizeOptionPtrOutput{})
	pulumi.RegisterOutputType(TemplateResourceStatusOutput{})
	pulumi.RegisterOutputType(TemplateResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(TemplateSectionPageBreakStatusOutput{})
	pulumi.RegisterOutputType(TemplateSectionPageBreakStatusPtrOutput{})
	pulumi.RegisterOutputType(TemplateSelectAllValueOptionsOutput{})
	pulumi.RegisterOutputType(TemplateSelectAllValueOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSelectedFieldOptionsOutput{})
	pulumi.RegisterOutputType(TemplateSelectedFieldOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSelectedTooltipTypeOutput{})
	pulumi.RegisterOutputType(TemplateSelectedTooltipTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateSheetContentTypeOutput{})
	pulumi.RegisterOutputType(TemplateSheetContentTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlDateTimePickerTypeOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlDateTimePickerTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlListTypeOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlListTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlSliderTypeOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlSliderTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateSimpleAttributeAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TemplateSimpleAttributeAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(TemplateSimpleNumericalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TemplateSimpleNumericalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(TemplateSimpleTotalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TemplateSimpleTotalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(TemplateSmallMultiplesAxisPlacementOutput{})
	pulumi.RegisterOutputType(TemplateSmallMultiplesAxisPlacementPtrOutput{})
	pulumi.RegisterOutputType(TemplateSmallMultiplesAxisScaleOutput{})
	pulumi.RegisterOutputType(TemplateSmallMultiplesAxisScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateSortDirectionOutput{})
	pulumi.RegisterOutputType(TemplateSortDirectionPtrOutput{})
	pulumi.RegisterOutputType(TemplateSpecialValueOutput{})
	pulumi.RegisterOutputType(TemplateSpecialValuePtrOutput{})
	pulumi.RegisterOutputType(TemplateStyledCellTypeOutput{})
	pulumi.RegisterOutputType(TemplateStyledCellTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateTableBorderStyleOutput{})
	pulumi.RegisterOutputType(TemplateTableBorderStylePtrOutput{})
	pulumi.RegisterOutputType(TemplateTableCellImageScalingConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateTableCellImageScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldIconSetTypeOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldIconSetTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateTableOrientationOutput{})
	pulumi.RegisterOutputType(TemplateTableOrientationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableTotalsPlacementOutput{})
	pulumi.RegisterOutputType(TemplateTableTotalsPlacementPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableTotalsScrollStatusOutput{})
	pulumi.RegisterOutputType(TemplateTableTotalsScrollStatusPtrOutput{})
	pulumi.RegisterOutputType(TemplateTargetVisualOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTargetVisualOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTextWrapOutput{})
	pulumi.RegisterOutputType(TemplateTextWrapPtrOutput{})
	pulumi.RegisterOutputType(TemplateTimeGranularityOutput{})
	pulumi.RegisterOutputType(TemplateTimeGranularityPtrOutput{})
	pulumi.RegisterOutputType(TemplateTooltipTitleTypeOutput{})
	pulumi.RegisterOutputType(TemplateTooltipTitleTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateTopBottomComputationTypeOutput{})
	pulumi.RegisterOutputType(TemplateTopBottomComputationTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateTopBottomSortOrderOutput{})
	pulumi.RegisterOutputType(TemplateTopBottomSortOrderPtrOutput{})
	pulumi.RegisterOutputType(TemplateUrlTargetConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateUrlTargetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateValidationStrategyModeOutput{})
	pulumi.RegisterOutputType(TemplateValidationStrategyModePtrOutput{})
	pulumi.RegisterOutputType(TemplateValueWhenUnsetOptionOutput{})
	pulumi.RegisterOutputType(TemplateValueWhenUnsetOptionPtrOutput{})
	pulumi.RegisterOutputType(TemplateVerticalTextAlignmentOutput{})
	pulumi.RegisterOutputType(TemplateVerticalTextAlignmentPtrOutput{})
	pulumi.RegisterOutputType(TemplateVisibilityOutput{})
	pulumi.RegisterOutputType(TemplateVisibilityPtrOutput{})
	pulumi.RegisterOutputType(TemplateVisualCustomActionTriggerOutput{})
	pulumi.RegisterOutputType(TemplateVisualCustomActionTriggerPtrOutput{})
	pulumi.RegisterOutputType(TemplateWidgetStatusOutput{})
	pulumi.RegisterOutputType(TemplateWidgetStatusPtrOutput{})
	pulumi.RegisterOutputType(TemplateWordCloudCloudLayoutOutput{})
	pulumi.RegisterOutputType(TemplateWordCloudCloudLayoutPtrOutput{})
	pulumi.RegisterOutputType(TemplateWordCloudWordCasingOutput{})
	pulumi.RegisterOutputType(TemplateWordCloudWordCasingPtrOutput{})
	pulumi.RegisterOutputType(TemplateWordCloudWordOrientationOutput{})
	pulumi.RegisterOutputType(TemplateWordCloudWordOrientationPtrOutput{})
	pulumi.RegisterOutputType(TemplateWordCloudWordPaddingOutput{})
	pulumi.RegisterOutputType(TemplateWordCloudWordPaddingPtrOutput{})
	pulumi.RegisterOutputType(TemplateWordCloudWordScalingOutput{})
	pulumi.RegisterOutputType(TemplateWordCloudWordScalingPtrOutput{})
	pulumi.RegisterOutputType(ThemeErrorTypeOutput{})
	pulumi.RegisterOutputType(ThemeErrorTypePtrOutput{})
	pulumi.RegisterOutputType(ThemeResourceStatusOutput{})
	pulumi.RegisterOutputType(ThemeResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(ThemeTypeOutput{})
	pulumi.RegisterOutputType(ThemeTypePtrOutput{})
	pulumi.RegisterOutputType(TopicAuthorSpecifiedAggregationOutput{})
	pulumi.RegisterOutputType(TopicAuthorSpecifiedAggregationPtrOutput{})
	pulumi.RegisterOutputType(TopicAuthorSpecifiedAggregationArrayOutput{})
	pulumi.RegisterOutputType(TopicCategoryFilterFunctionOutput{})
	pulumi.RegisterOutputType(TopicCategoryFilterFunctionPtrOutput{})
	pulumi.RegisterOutputType(TopicCategoryFilterTypeOutput{})
	pulumi.RegisterOutputType(TopicCategoryFilterTypePtrOutput{})
	pulumi.RegisterOutputType(TopicColumnDataRoleOutput{})
	pulumi.RegisterOutputType(TopicColumnDataRolePtrOutput{})
	pulumi.RegisterOutputType(TopicColumnOrderingTypeOutput{})
	pulumi.RegisterOutputType(TopicColumnOrderingTypePtrOutput{})
	pulumi.RegisterOutputType(TopicConstantTypeOutput{})
	pulumi.RegisterOutputType(TopicConstantTypePtrOutput{})
	pulumi.RegisterOutputType(TopicDefaultAggregationOutput{})
	pulumi.RegisterOutputType(TopicDefaultAggregationPtrOutput{})
	pulumi.RegisterOutputType(TopicDisplayFormatOutput{})
	pulumi.RegisterOutputType(TopicDisplayFormatPtrOutput{})
	pulumi.RegisterOutputType(TopicFilterClassOutput{})
	pulumi.RegisterOutputType(TopicFilterClassPtrOutput{})
	pulumi.RegisterOutputType(TopicNamedEntityAggTypeOutput{})
	pulumi.RegisterOutputType(TopicNamedEntityAggTypePtrOutput{})
	pulumi.RegisterOutputType(TopicNamedFilterAggTypeOutput{})
	pulumi.RegisterOutputType(TopicNamedFilterAggTypePtrOutput{})
	pulumi.RegisterOutputType(TopicNamedFilterTypeOutput{})
	pulumi.RegisterOutputType(TopicNamedFilterTypePtrOutput{})
	pulumi.RegisterOutputType(TopicNumberScaleOutput{})
	pulumi.RegisterOutputType(TopicNumberScalePtrOutput{})
	pulumi.RegisterOutputType(TopicNumericSeparatorSymbolOutput{})
	pulumi.RegisterOutputType(TopicNumericSeparatorSymbolPtrOutput{})
	pulumi.RegisterOutputType(TopicPropertyRoleOutput{})
	pulumi.RegisterOutputType(TopicPropertyRolePtrOutput{})
	pulumi.RegisterOutputType(TopicPropertyUsageOutput{})
	pulumi.RegisterOutputType(TopicPropertyUsagePtrOutput{})
	pulumi.RegisterOutputType(TopicRelativeDateFilterFunctionOutput{})
	pulumi.RegisterOutputType(TopicRelativeDateFilterFunctionPtrOutput{})
	pulumi.RegisterOutputType(TopicTimeGranularityOutput{})
	pulumi.RegisterOutputType(TopicTimeGranularityPtrOutput{})
	pulumi.RegisterOutputType(TopicUndefinedSpecifiedValueTypeOutput{})
	pulumi.RegisterOutputType(TopicUndefinedSpecifiedValueTypePtrOutput{})
	pulumi.RegisterOutputType(TopicUserExperienceVersionOutput{})
	pulumi.RegisterOutputType(TopicUserExperienceVersionPtrOutput{})
	pulumi.RegisterOutputType(VpcConnectionNetworkInterfaceStatusOutput{})
	pulumi.RegisterOutputType(VpcConnectionNetworkInterfaceStatusPtrOutput{})
	pulumi.RegisterOutputType(VpcConnectionVpcConnectionAvailabilityStatusOutput{})
	pulumi.RegisterOutputType(VpcConnectionVpcConnectionAvailabilityStatusPtrOutput{})
	pulumi.RegisterOutputType(VpcConnectionVpcConnectionResourceStatusOutput{})
	pulumi.RegisterOutputType(VpcConnectionVpcConnectionResourceStatusPtrOutput{})
}
