// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AnalysisAnalysisErrorType string

const (
	AnalysisAnalysisErrorTypeAccessDenied                 = AnalysisAnalysisErrorType("ACCESS_DENIED")
	AnalysisAnalysisErrorTypeSourceNotFound               = AnalysisAnalysisErrorType("SOURCE_NOT_FOUND")
	AnalysisAnalysisErrorTypeDataSetNotFound              = AnalysisAnalysisErrorType("DATA_SET_NOT_FOUND")
	AnalysisAnalysisErrorTypeInternalFailure              = AnalysisAnalysisErrorType("INTERNAL_FAILURE")
	AnalysisAnalysisErrorTypeParameterValueIncompatible   = AnalysisAnalysisErrorType("PARAMETER_VALUE_INCOMPATIBLE")
	AnalysisAnalysisErrorTypeParameterTypeInvalid         = AnalysisAnalysisErrorType("PARAMETER_TYPE_INVALID")
	AnalysisAnalysisErrorTypeParameterNotFound            = AnalysisAnalysisErrorType("PARAMETER_NOT_FOUND")
	AnalysisAnalysisErrorTypeColumnTypeMismatch           = AnalysisAnalysisErrorType("COLUMN_TYPE_MISMATCH")
	AnalysisAnalysisErrorTypeColumnGeographicRoleMismatch = AnalysisAnalysisErrorType("COLUMN_GEOGRAPHIC_ROLE_MISMATCH")
	AnalysisAnalysisErrorTypeColumnReplacementMissing     = AnalysisAnalysisErrorType("COLUMN_REPLACEMENT_MISSING")
)

func (AnalysisAnalysisErrorType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnalysisErrorType)(nil)).Elem()
}

func (e AnalysisAnalysisErrorType) ToAnalysisAnalysisErrorTypeOutput() AnalysisAnalysisErrorTypeOutput {
	return pulumi.ToOutput(e).(AnalysisAnalysisErrorTypeOutput)
}

func (e AnalysisAnalysisErrorType) ToAnalysisAnalysisErrorTypeOutputWithContext(ctx context.Context) AnalysisAnalysisErrorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisAnalysisErrorTypeOutput)
}

func (e AnalysisAnalysisErrorType) ToAnalysisAnalysisErrorTypePtrOutput() AnalysisAnalysisErrorTypePtrOutput {
	return e.ToAnalysisAnalysisErrorTypePtrOutputWithContext(context.Background())
}

func (e AnalysisAnalysisErrorType) ToAnalysisAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisAnalysisErrorTypePtrOutput {
	return AnalysisAnalysisErrorType(e).ToAnalysisAnalysisErrorTypeOutputWithContext(ctx).ToAnalysisAnalysisErrorTypePtrOutputWithContext(ctx)
}

func (e AnalysisAnalysisErrorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisAnalysisErrorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisAnalysisErrorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisAnalysisErrorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisAnalysisErrorTypeOutput struct{ *pulumi.OutputState }

func (AnalysisAnalysisErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisAnalysisErrorType)(nil)).Elem()
}

func (o AnalysisAnalysisErrorTypeOutput) ToAnalysisAnalysisErrorTypeOutput() AnalysisAnalysisErrorTypeOutput {
	return o
}

func (o AnalysisAnalysisErrorTypeOutput) ToAnalysisAnalysisErrorTypeOutputWithContext(ctx context.Context) AnalysisAnalysisErrorTypeOutput {
	return o
}

func (o AnalysisAnalysisErrorTypeOutput) ToAnalysisAnalysisErrorTypePtrOutput() AnalysisAnalysisErrorTypePtrOutput {
	return o.ToAnalysisAnalysisErrorTypePtrOutputWithContext(context.Background())
}

func (o AnalysisAnalysisErrorTypeOutput) ToAnalysisAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisAnalysisErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisAnalysisErrorType) *AnalysisAnalysisErrorType {
		return &v
	}).(AnalysisAnalysisErrorTypePtrOutput)
}

func (o AnalysisAnalysisErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisAnalysisErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisAnalysisErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisAnalysisErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisAnalysisErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisAnalysisErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisAnalysisErrorTypePtrOutput struct{ *pulumi.OutputState }

func (AnalysisAnalysisErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisAnalysisErrorType)(nil)).Elem()
}

func (o AnalysisAnalysisErrorTypePtrOutput) ToAnalysisAnalysisErrorTypePtrOutput() AnalysisAnalysisErrorTypePtrOutput {
	return o
}

func (o AnalysisAnalysisErrorTypePtrOutput) ToAnalysisAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisAnalysisErrorTypePtrOutput {
	return o
}

func (o AnalysisAnalysisErrorTypePtrOutput) Elem() AnalysisAnalysisErrorTypeOutput {
	return o.ApplyT(func(v *AnalysisAnalysisErrorType) AnalysisAnalysisErrorType {
		if v != nil {
			return *v
		}
		var ret AnalysisAnalysisErrorType
		return ret
	}).(AnalysisAnalysisErrorTypeOutput)
}

func (o AnalysisAnalysisErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisAnalysisErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisAnalysisErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisAnalysisErrorTypeInput is an input type that accepts AnalysisAnalysisErrorTypeArgs and AnalysisAnalysisErrorTypeOutput values.
// You can construct a concrete instance of `AnalysisAnalysisErrorTypeInput` via:
//
//          AnalysisAnalysisErrorTypeArgs{...}
type AnalysisAnalysisErrorTypeInput interface {
	pulumi.Input

	ToAnalysisAnalysisErrorTypeOutput() AnalysisAnalysisErrorTypeOutput
	ToAnalysisAnalysisErrorTypeOutputWithContext(context.Context) AnalysisAnalysisErrorTypeOutput
}

var analysisAnalysisErrorTypePtrType = reflect.TypeOf((**AnalysisAnalysisErrorType)(nil)).Elem()

type AnalysisAnalysisErrorTypePtrInput interface {
	pulumi.Input

	ToAnalysisAnalysisErrorTypePtrOutput() AnalysisAnalysisErrorTypePtrOutput
	ToAnalysisAnalysisErrorTypePtrOutputWithContext(context.Context) AnalysisAnalysisErrorTypePtrOutput
}

type analysisAnalysisErrorTypePtr string

func AnalysisAnalysisErrorTypePtr(v string) AnalysisAnalysisErrorTypePtrInput {
	return (*analysisAnalysisErrorTypePtr)(&v)
}

func (*analysisAnalysisErrorTypePtr) ElementType() reflect.Type {
	return analysisAnalysisErrorTypePtrType
}

func (in *analysisAnalysisErrorTypePtr) ToAnalysisAnalysisErrorTypePtrOutput() AnalysisAnalysisErrorTypePtrOutput {
	return pulumi.ToOutput(in).(AnalysisAnalysisErrorTypePtrOutput)
}

func (in *analysisAnalysisErrorTypePtr) ToAnalysisAnalysisErrorTypePtrOutputWithContext(ctx context.Context) AnalysisAnalysisErrorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisAnalysisErrorTypePtrOutput)
}

type AnalysisResourceStatus string

const (
	AnalysisResourceStatusCreationInProgress = AnalysisResourceStatus("CREATION_IN_PROGRESS")
	AnalysisResourceStatusCreationSuccessful = AnalysisResourceStatus("CREATION_SUCCESSFUL")
	AnalysisResourceStatusCreationFailed     = AnalysisResourceStatus("CREATION_FAILED")
	AnalysisResourceStatusUpdateInProgress   = AnalysisResourceStatus("UPDATE_IN_PROGRESS")
	AnalysisResourceStatusUpdateSuccessful   = AnalysisResourceStatus("UPDATE_SUCCESSFUL")
	AnalysisResourceStatusUpdateFailed       = AnalysisResourceStatus("UPDATE_FAILED")
	AnalysisResourceStatusDeleted            = AnalysisResourceStatus("DELETED")
)

func (AnalysisResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResourceStatus)(nil)).Elem()
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusOutput() AnalysisResourceStatusOutput {
	return pulumi.ToOutput(e).(AnalysisResourceStatusOutput)
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusOutputWithContext(ctx context.Context) AnalysisResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnalysisResourceStatusOutput)
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return e.ToAnalysisResourceStatusPtrOutputWithContext(context.Background())
}

func (e AnalysisResourceStatus) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return AnalysisResourceStatus(e).ToAnalysisResourceStatusOutputWithContext(ctx).ToAnalysisResourceStatusPtrOutputWithContext(ctx)
}

func (e AnalysisResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnalysisResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnalysisResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnalysisResourceStatusOutput struct{ *pulumi.OutputState }

func (AnalysisResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalysisResourceStatus)(nil)).Elem()
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusOutput() AnalysisResourceStatusOutput {
	return o
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusOutputWithContext(ctx context.Context) AnalysisResourceStatusOutput {
	return o
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return o.ToAnalysisResourceStatusPtrOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusOutput) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalysisResourceStatus) *AnalysisResourceStatus {
		return &v
	}).(AnalysisResourceStatusPtrOutput)
}

func (o AnalysisResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnalysisResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnalysisResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnalysisResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (AnalysisResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalysisResourceStatus)(nil)).Elem()
}

func (o AnalysisResourceStatusPtrOutput) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return o
}

func (o AnalysisResourceStatusPtrOutput) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return o
}

func (o AnalysisResourceStatusPtrOutput) Elem() AnalysisResourceStatusOutput {
	return o.ApplyT(func(v *AnalysisResourceStatus) AnalysisResourceStatus {
		if v != nil {
			return *v
		}
		var ret AnalysisResourceStatus
		return ret
	}).(AnalysisResourceStatusOutput)
}

func (o AnalysisResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnalysisResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnalysisResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnalysisResourceStatusInput is an input type that accepts AnalysisResourceStatusArgs and AnalysisResourceStatusOutput values.
// You can construct a concrete instance of `AnalysisResourceStatusInput` via:
//
//          AnalysisResourceStatusArgs{...}
type AnalysisResourceStatusInput interface {
	pulumi.Input

	ToAnalysisResourceStatusOutput() AnalysisResourceStatusOutput
	ToAnalysisResourceStatusOutputWithContext(context.Context) AnalysisResourceStatusOutput
}

var analysisResourceStatusPtrType = reflect.TypeOf((**AnalysisResourceStatus)(nil)).Elem()

type AnalysisResourceStatusPtrInput interface {
	pulumi.Input

	ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput
	ToAnalysisResourceStatusPtrOutputWithContext(context.Context) AnalysisResourceStatusPtrOutput
}

type analysisResourceStatusPtr string

func AnalysisResourceStatusPtr(v string) AnalysisResourceStatusPtrInput {
	return (*analysisResourceStatusPtr)(&v)
}

func (*analysisResourceStatusPtr) ElementType() reflect.Type {
	return analysisResourceStatusPtrType
}

func (in *analysisResourceStatusPtr) ToAnalysisResourceStatusPtrOutput() AnalysisResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(AnalysisResourceStatusPtrOutput)
}

func (in *analysisResourceStatusPtr) ToAnalysisResourceStatusPtrOutputWithContext(ctx context.Context) AnalysisResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnalysisResourceStatusPtrOutput)
}

type DashboardDashboardBehavior string

const (
	DashboardDashboardBehaviorEnabled  = DashboardDashboardBehavior("ENABLED")
	DashboardDashboardBehaviorDisabled = DashboardDashboardBehavior("DISABLED")
)

func (DashboardDashboardBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardBehavior)(nil)).Elem()
}

func (e DashboardDashboardBehavior) ToDashboardDashboardBehaviorOutput() DashboardDashboardBehaviorOutput {
	return pulumi.ToOutput(e).(DashboardDashboardBehaviorOutput)
}

func (e DashboardDashboardBehavior) ToDashboardDashboardBehaviorOutputWithContext(ctx context.Context) DashboardDashboardBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardDashboardBehaviorOutput)
}

func (e DashboardDashboardBehavior) ToDashboardDashboardBehaviorPtrOutput() DashboardDashboardBehaviorPtrOutput {
	return e.ToDashboardDashboardBehaviorPtrOutputWithContext(context.Background())
}

func (e DashboardDashboardBehavior) ToDashboardDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardDashboardBehaviorPtrOutput {
	return DashboardDashboardBehavior(e).ToDashboardDashboardBehaviorOutputWithContext(ctx).ToDashboardDashboardBehaviorPtrOutputWithContext(ctx)
}

func (e DashboardDashboardBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDashboardBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDashboardBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardDashboardBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardDashboardBehaviorOutput struct{ *pulumi.OutputState }

func (DashboardDashboardBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardBehavior)(nil)).Elem()
}

func (o DashboardDashboardBehaviorOutput) ToDashboardDashboardBehaviorOutput() DashboardDashboardBehaviorOutput {
	return o
}

func (o DashboardDashboardBehaviorOutput) ToDashboardDashboardBehaviorOutputWithContext(ctx context.Context) DashboardDashboardBehaviorOutput {
	return o
}

func (o DashboardDashboardBehaviorOutput) ToDashboardDashboardBehaviorPtrOutput() DashboardDashboardBehaviorPtrOutput {
	return o.ToDashboardDashboardBehaviorPtrOutputWithContext(context.Background())
}

func (o DashboardDashboardBehaviorOutput) ToDashboardDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardDashboardBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDashboardBehavior) *DashboardDashboardBehavior {
		return &v
	}).(DashboardDashboardBehaviorPtrOutput)
}

func (o DashboardDashboardBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardDashboardBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDashboardBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardDashboardBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDashboardBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDashboardBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardDashboardBehaviorPtrOutput struct{ *pulumi.OutputState }

func (DashboardDashboardBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDashboardBehavior)(nil)).Elem()
}

func (o DashboardDashboardBehaviorPtrOutput) ToDashboardDashboardBehaviorPtrOutput() DashboardDashboardBehaviorPtrOutput {
	return o
}

func (o DashboardDashboardBehaviorPtrOutput) ToDashboardDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardDashboardBehaviorPtrOutput {
	return o
}

func (o DashboardDashboardBehaviorPtrOutput) Elem() DashboardDashboardBehaviorOutput {
	return o.ApplyT(func(v *DashboardDashboardBehavior) DashboardDashboardBehavior {
		if v != nil {
			return *v
		}
		var ret DashboardDashboardBehavior
		return ret
	}).(DashboardDashboardBehaviorOutput)
}

func (o DashboardDashboardBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDashboardBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardDashboardBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardDashboardBehaviorInput is an input type that accepts DashboardDashboardBehaviorArgs and DashboardDashboardBehaviorOutput values.
// You can construct a concrete instance of `DashboardDashboardBehaviorInput` via:
//
//          DashboardDashboardBehaviorArgs{...}
type DashboardDashboardBehaviorInput interface {
	pulumi.Input

	ToDashboardDashboardBehaviorOutput() DashboardDashboardBehaviorOutput
	ToDashboardDashboardBehaviorOutputWithContext(context.Context) DashboardDashboardBehaviorOutput
}

var dashboardDashboardBehaviorPtrType = reflect.TypeOf((**DashboardDashboardBehavior)(nil)).Elem()

type DashboardDashboardBehaviorPtrInput interface {
	pulumi.Input

	ToDashboardDashboardBehaviorPtrOutput() DashboardDashboardBehaviorPtrOutput
	ToDashboardDashboardBehaviorPtrOutputWithContext(context.Context) DashboardDashboardBehaviorPtrOutput
}

type dashboardDashboardBehaviorPtr string

func DashboardDashboardBehaviorPtr(v string) DashboardDashboardBehaviorPtrInput {
	return (*dashboardDashboardBehaviorPtr)(&v)
}

func (*dashboardDashboardBehaviorPtr) ElementType() reflect.Type {
	return dashboardDashboardBehaviorPtrType
}

func (in *dashboardDashboardBehaviorPtr) ToDashboardDashboardBehaviorPtrOutput() DashboardDashboardBehaviorPtrOutput {
	return pulumi.ToOutput(in).(DashboardDashboardBehaviorPtrOutput)
}

func (in *dashboardDashboardBehaviorPtr) ToDashboardDashboardBehaviorPtrOutputWithContext(ctx context.Context) DashboardDashboardBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardDashboardBehaviorPtrOutput)
}

type DashboardDashboardErrorType string

const (
	DashboardDashboardErrorTypeAccessDenied                 = DashboardDashboardErrorType("ACCESS_DENIED")
	DashboardDashboardErrorTypeSourceNotFound               = DashboardDashboardErrorType("SOURCE_NOT_FOUND")
	DashboardDashboardErrorTypeDataSetNotFound              = DashboardDashboardErrorType("DATA_SET_NOT_FOUND")
	DashboardDashboardErrorTypeInternalFailure              = DashboardDashboardErrorType("INTERNAL_FAILURE")
	DashboardDashboardErrorTypeParameterValueIncompatible   = DashboardDashboardErrorType("PARAMETER_VALUE_INCOMPATIBLE")
	DashboardDashboardErrorTypeParameterTypeInvalid         = DashboardDashboardErrorType("PARAMETER_TYPE_INVALID")
	DashboardDashboardErrorTypeParameterNotFound            = DashboardDashboardErrorType("PARAMETER_NOT_FOUND")
	DashboardDashboardErrorTypeColumnTypeMismatch           = DashboardDashboardErrorType("COLUMN_TYPE_MISMATCH")
	DashboardDashboardErrorTypeColumnGeographicRoleMismatch = DashboardDashboardErrorType("COLUMN_GEOGRAPHIC_ROLE_MISMATCH")
	DashboardDashboardErrorTypeColumnReplacementMissing     = DashboardDashboardErrorType("COLUMN_REPLACEMENT_MISSING")
)

func (DashboardDashboardErrorType) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardErrorType)(nil)).Elem()
}

func (e DashboardDashboardErrorType) ToDashboardDashboardErrorTypeOutput() DashboardDashboardErrorTypeOutput {
	return pulumi.ToOutput(e).(DashboardDashboardErrorTypeOutput)
}

func (e DashboardDashboardErrorType) ToDashboardDashboardErrorTypeOutputWithContext(ctx context.Context) DashboardDashboardErrorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardDashboardErrorTypeOutput)
}

func (e DashboardDashboardErrorType) ToDashboardDashboardErrorTypePtrOutput() DashboardDashboardErrorTypePtrOutput {
	return e.ToDashboardDashboardErrorTypePtrOutputWithContext(context.Background())
}

func (e DashboardDashboardErrorType) ToDashboardDashboardErrorTypePtrOutputWithContext(ctx context.Context) DashboardDashboardErrorTypePtrOutput {
	return DashboardDashboardErrorType(e).ToDashboardDashboardErrorTypeOutputWithContext(ctx).ToDashboardDashboardErrorTypePtrOutputWithContext(ctx)
}

func (e DashboardDashboardErrorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDashboardErrorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDashboardErrorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardDashboardErrorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardDashboardErrorTypeOutput struct{ *pulumi.OutputState }

func (DashboardDashboardErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardErrorType)(nil)).Elem()
}

func (o DashboardDashboardErrorTypeOutput) ToDashboardDashboardErrorTypeOutput() DashboardDashboardErrorTypeOutput {
	return o
}

func (o DashboardDashboardErrorTypeOutput) ToDashboardDashboardErrorTypeOutputWithContext(ctx context.Context) DashboardDashboardErrorTypeOutput {
	return o
}

func (o DashboardDashboardErrorTypeOutput) ToDashboardDashboardErrorTypePtrOutput() DashboardDashboardErrorTypePtrOutput {
	return o.ToDashboardDashboardErrorTypePtrOutputWithContext(context.Background())
}

func (o DashboardDashboardErrorTypeOutput) ToDashboardDashboardErrorTypePtrOutputWithContext(ctx context.Context) DashboardDashboardErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDashboardErrorType) *DashboardDashboardErrorType {
		return &v
	}).(DashboardDashboardErrorTypePtrOutput)
}

func (o DashboardDashboardErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardDashboardErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDashboardErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardDashboardErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDashboardErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDashboardErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardDashboardErrorTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardDashboardErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDashboardErrorType)(nil)).Elem()
}

func (o DashboardDashboardErrorTypePtrOutput) ToDashboardDashboardErrorTypePtrOutput() DashboardDashboardErrorTypePtrOutput {
	return o
}

func (o DashboardDashboardErrorTypePtrOutput) ToDashboardDashboardErrorTypePtrOutputWithContext(ctx context.Context) DashboardDashboardErrorTypePtrOutput {
	return o
}

func (o DashboardDashboardErrorTypePtrOutput) Elem() DashboardDashboardErrorTypeOutput {
	return o.ApplyT(func(v *DashboardDashboardErrorType) DashboardDashboardErrorType {
		if v != nil {
			return *v
		}
		var ret DashboardDashboardErrorType
		return ret
	}).(DashboardDashboardErrorTypeOutput)
}

func (o DashboardDashboardErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDashboardErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardDashboardErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardDashboardErrorTypeInput is an input type that accepts DashboardDashboardErrorTypeArgs and DashboardDashboardErrorTypeOutput values.
// You can construct a concrete instance of `DashboardDashboardErrorTypeInput` via:
//
//          DashboardDashboardErrorTypeArgs{...}
type DashboardDashboardErrorTypeInput interface {
	pulumi.Input

	ToDashboardDashboardErrorTypeOutput() DashboardDashboardErrorTypeOutput
	ToDashboardDashboardErrorTypeOutputWithContext(context.Context) DashboardDashboardErrorTypeOutput
}

var dashboardDashboardErrorTypePtrType = reflect.TypeOf((**DashboardDashboardErrorType)(nil)).Elem()

type DashboardDashboardErrorTypePtrInput interface {
	pulumi.Input

	ToDashboardDashboardErrorTypePtrOutput() DashboardDashboardErrorTypePtrOutput
	ToDashboardDashboardErrorTypePtrOutputWithContext(context.Context) DashboardDashboardErrorTypePtrOutput
}

type dashboardDashboardErrorTypePtr string

func DashboardDashboardErrorTypePtr(v string) DashboardDashboardErrorTypePtrInput {
	return (*dashboardDashboardErrorTypePtr)(&v)
}

func (*dashboardDashboardErrorTypePtr) ElementType() reflect.Type {
	return dashboardDashboardErrorTypePtrType
}

func (in *dashboardDashboardErrorTypePtr) ToDashboardDashboardErrorTypePtrOutput() DashboardDashboardErrorTypePtrOutput {
	return pulumi.ToOutput(in).(DashboardDashboardErrorTypePtrOutput)
}

func (in *dashboardDashboardErrorTypePtr) ToDashboardDashboardErrorTypePtrOutputWithContext(ctx context.Context) DashboardDashboardErrorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardDashboardErrorTypePtrOutput)
}

type DashboardDashboardUIState string

const (
	DashboardDashboardUIStateExpanded  = DashboardDashboardUIState("EXPANDED")
	DashboardDashboardUIStateCollapsed = DashboardDashboardUIState("COLLAPSED")
)

func (DashboardDashboardUIState) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardUIState)(nil)).Elem()
}

func (e DashboardDashboardUIState) ToDashboardDashboardUIStateOutput() DashboardDashboardUIStateOutput {
	return pulumi.ToOutput(e).(DashboardDashboardUIStateOutput)
}

func (e DashboardDashboardUIState) ToDashboardDashboardUIStateOutputWithContext(ctx context.Context) DashboardDashboardUIStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardDashboardUIStateOutput)
}

func (e DashboardDashboardUIState) ToDashboardDashboardUIStatePtrOutput() DashboardDashboardUIStatePtrOutput {
	return e.ToDashboardDashboardUIStatePtrOutputWithContext(context.Background())
}

func (e DashboardDashboardUIState) ToDashboardDashboardUIStatePtrOutputWithContext(ctx context.Context) DashboardDashboardUIStatePtrOutput {
	return DashboardDashboardUIState(e).ToDashboardDashboardUIStateOutputWithContext(ctx).ToDashboardDashboardUIStatePtrOutputWithContext(ctx)
}

func (e DashboardDashboardUIState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDashboardUIState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardDashboardUIState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardDashboardUIState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardDashboardUIStateOutput struct{ *pulumi.OutputState }

func (DashboardDashboardUIStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDashboardUIState)(nil)).Elem()
}

func (o DashboardDashboardUIStateOutput) ToDashboardDashboardUIStateOutput() DashboardDashboardUIStateOutput {
	return o
}

func (o DashboardDashboardUIStateOutput) ToDashboardDashboardUIStateOutputWithContext(ctx context.Context) DashboardDashboardUIStateOutput {
	return o
}

func (o DashboardDashboardUIStateOutput) ToDashboardDashboardUIStatePtrOutput() DashboardDashboardUIStatePtrOutput {
	return o.ToDashboardDashboardUIStatePtrOutputWithContext(context.Background())
}

func (o DashboardDashboardUIStateOutput) ToDashboardDashboardUIStatePtrOutputWithContext(ctx context.Context) DashboardDashboardUIStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDashboardUIState) *DashboardDashboardUIState {
		return &v
	}).(DashboardDashboardUIStatePtrOutput)
}

func (o DashboardDashboardUIStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardDashboardUIStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDashboardUIState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardDashboardUIStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDashboardUIStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardDashboardUIState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardDashboardUIStatePtrOutput struct{ *pulumi.OutputState }

func (DashboardDashboardUIStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDashboardUIState)(nil)).Elem()
}

func (o DashboardDashboardUIStatePtrOutput) ToDashboardDashboardUIStatePtrOutput() DashboardDashboardUIStatePtrOutput {
	return o
}

func (o DashboardDashboardUIStatePtrOutput) ToDashboardDashboardUIStatePtrOutputWithContext(ctx context.Context) DashboardDashboardUIStatePtrOutput {
	return o
}

func (o DashboardDashboardUIStatePtrOutput) Elem() DashboardDashboardUIStateOutput {
	return o.ApplyT(func(v *DashboardDashboardUIState) DashboardDashboardUIState {
		if v != nil {
			return *v
		}
		var ret DashboardDashboardUIState
		return ret
	}).(DashboardDashboardUIStateOutput)
}

func (o DashboardDashboardUIStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardDashboardUIStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardDashboardUIState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardDashboardUIStateInput is an input type that accepts DashboardDashboardUIStateArgs and DashboardDashboardUIStateOutput values.
// You can construct a concrete instance of `DashboardDashboardUIStateInput` via:
//
//          DashboardDashboardUIStateArgs{...}
type DashboardDashboardUIStateInput interface {
	pulumi.Input

	ToDashboardDashboardUIStateOutput() DashboardDashboardUIStateOutput
	ToDashboardDashboardUIStateOutputWithContext(context.Context) DashboardDashboardUIStateOutput
}

var dashboardDashboardUIStatePtrType = reflect.TypeOf((**DashboardDashboardUIState)(nil)).Elem()

type DashboardDashboardUIStatePtrInput interface {
	pulumi.Input

	ToDashboardDashboardUIStatePtrOutput() DashboardDashboardUIStatePtrOutput
	ToDashboardDashboardUIStatePtrOutputWithContext(context.Context) DashboardDashboardUIStatePtrOutput
}

type dashboardDashboardUIStatePtr string

func DashboardDashboardUIStatePtr(v string) DashboardDashboardUIStatePtrInput {
	return (*dashboardDashboardUIStatePtr)(&v)
}

func (*dashboardDashboardUIStatePtr) ElementType() reflect.Type {
	return dashboardDashboardUIStatePtrType
}

func (in *dashboardDashboardUIStatePtr) ToDashboardDashboardUIStatePtrOutput() DashboardDashboardUIStatePtrOutput {
	return pulumi.ToOutput(in).(DashboardDashboardUIStatePtrOutput)
}

func (in *dashboardDashboardUIStatePtr) ToDashboardDashboardUIStatePtrOutputWithContext(ctx context.Context) DashboardDashboardUIStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardDashboardUIStatePtrOutput)
}

type DashboardResourceStatus string

const (
	DashboardResourceStatusCreationInProgress = DashboardResourceStatus("CREATION_IN_PROGRESS")
	DashboardResourceStatusCreationSuccessful = DashboardResourceStatus("CREATION_SUCCESSFUL")
	DashboardResourceStatusCreationFailed     = DashboardResourceStatus("CREATION_FAILED")
	DashboardResourceStatusUpdateInProgress   = DashboardResourceStatus("UPDATE_IN_PROGRESS")
	DashboardResourceStatusUpdateSuccessful   = DashboardResourceStatus("UPDATE_SUCCESSFUL")
	DashboardResourceStatusUpdateFailed       = DashboardResourceStatus("UPDATE_FAILED")
	DashboardResourceStatusDeleted            = DashboardResourceStatus("DELETED")
)

func (DashboardResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResourceStatus)(nil)).Elem()
}

func (e DashboardResourceStatus) ToDashboardResourceStatusOutput() DashboardResourceStatusOutput {
	return pulumi.ToOutput(e).(DashboardResourceStatusOutput)
}

func (e DashboardResourceStatus) ToDashboardResourceStatusOutputWithContext(ctx context.Context) DashboardResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DashboardResourceStatusOutput)
}

func (e DashboardResourceStatus) ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput {
	return e.ToDashboardResourceStatusPtrOutputWithContext(context.Background())
}

func (e DashboardResourceStatus) ToDashboardResourceStatusPtrOutputWithContext(ctx context.Context) DashboardResourceStatusPtrOutput {
	return DashboardResourceStatus(e).ToDashboardResourceStatusOutputWithContext(ctx).ToDashboardResourceStatusPtrOutputWithContext(ctx)
}

func (e DashboardResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DashboardResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DashboardResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DashboardResourceStatusOutput struct{ *pulumi.OutputState }

func (DashboardResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResourceStatus)(nil)).Elem()
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusOutput() DashboardResourceStatusOutput {
	return o
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusOutputWithContext(ctx context.Context) DashboardResourceStatusOutput {
	return o
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput {
	return o.ToDashboardResourceStatusPtrOutputWithContext(context.Background())
}

func (o DashboardResourceStatusOutput) ToDashboardResourceStatusPtrOutputWithContext(ctx context.Context) DashboardResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardResourceStatus) *DashboardResourceStatus {
		return &v
	}).(DashboardResourceStatusPtrOutput)
}

func (o DashboardResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DashboardResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DashboardResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DashboardResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DashboardResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (DashboardResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardResourceStatus)(nil)).Elem()
}

func (o DashboardResourceStatusPtrOutput) ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput {
	return o
}

func (o DashboardResourceStatusPtrOutput) ToDashboardResourceStatusPtrOutputWithContext(ctx context.Context) DashboardResourceStatusPtrOutput {
	return o
}

func (o DashboardResourceStatusPtrOutput) Elem() DashboardResourceStatusOutput {
	return o.ApplyT(func(v *DashboardResourceStatus) DashboardResourceStatus {
		if v != nil {
			return *v
		}
		var ret DashboardResourceStatus
		return ret
	}).(DashboardResourceStatusOutput)
}

func (o DashboardResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DashboardResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DashboardResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DashboardResourceStatusInput is an input type that accepts DashboardResourceStatusArgs and DashboardResourceStatusOutput values.
// You can construct a concrete instance of `DashboardResourceStatusInput` via:
//
//          DashboardResourceStatusArgs{...}
type DashboardResourceStatusInput interface {
	pulumi.Input

	ToDashboardResourceStatusOutput() DashboardResourceStatusOutput
	ToDashboardResourceStatusOutputWithContext(context.Context) DashboardResourceStatusOutput
}

var dashboardResourceStatusPtrType = reflect.TypeOf((**DashboardResourceStatus)(nil)).Elem()

type DashboardResourceStatusPtrInput interface {
	pulumi.Input

	ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput
	ToDashboardResourceStatusPtrOutputWithContext(context.Context) DashboardResourceStatusPtrOutput
}

type dashboardResourceStatusPtr string

func DashboardResourceStatusPtr(v string) DashboardResourceStatusPtrInput {
	return (*dashboardResourceStatusPtr)(&v)
}

func (*dashboardResourceStatusPtr) ElementType() reflect.Type {
	return dashboardResourceStatusPtrType
}

func (in *dashboardResourceStatusPtr) ToDashboardResourceStatusPtrOutput() DashboardResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(DashboardResourceStatusPtrOutput)
}

func (in *dashboardResourceStatusPtr) ToDashboardResourceStatusPtrOutputWithContext(ctx context.Context) DashboardResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DashboardResourceStatusPtrOutput)
}

type DataSetColumnDataType string

const (
	DataSetColumnDataTypeString   = DataSetColumnDataType("STRING")
	DataSetColumnDataTypeInteger  = DataSetColumnDataType("INTEGER")
	DataSetColumnDataTypeDecimal  = DataSetColumnDataType("DECIMAL")
	DataSetColumnDataTypeDatetime = DataSetColumnDataType("DATETIME")
)

func (DataSetColumnDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnDataType)(nil)).Elem()
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypeOutput() DataSetColumnDataTypeOutput {
	return pulumi.ToOutput(e).(DataSetColumnDataTypeOutput)
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypeOutputWithContext(ctx context.Context) DataSetColumnDataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetColumnDataTypeOutput)
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return e.ToDataSetColumnDataTypePtrOutputWithContext(context.Background())
}

func (e DataSetColumnDataType) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return DataSetColumnDataType(e).ToDataSetColumnDataTypeOutputWithContext(ctx).ToDataSetColumnDataTypePtrOutputWithContext(ctx)
}

func (e DataSetColumnDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetColumnDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetColumnDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetColumnDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetColumnDataTypeOutput struct{ *pulumi.OutputState }

func (DataSetColumnDataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnDataType)(nil)).Elem()
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypeOutput() DataSetColumnDataTypeOutput {
	return o
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypeOutputWithContext(ctx context.Context) DataSetColumnDataTypeOutput {
	return o
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return o.ToDataSetColumnDataTypePtrOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypeOutput) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetColumnDataType) *DataSetColumnDataType {
		return &v
	}).(DataSetColumnDataTypePtrOutput)
}

func (o DataSetColumnDataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetColumnDataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetColumnDataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetColumnDataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetColumnDataTypePtrOutput struct{ *pulumi.OutputState }

func (DataSetColumnDataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetColumnDataType)(nil)).Elem()
}

func (o DataSetColumnDataTypePtrOutput) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return o
}

func (o DataSetColumnDataTypePtrOutput) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return o
}

func (o DataSetColumnDataTypePtrOutput) Elem() DataSetColumnDataTypeOutput {
	return o.ApplyT(func(v *DataSetColumnDataType) DataSetColumnDataType {
		if v != nil {
			return *v
		}
		var ret DataSetColumnDataType
		return ret
	}).(DataSetColumnDataTypeOutput)
}

func (o DataSetColumnDataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetColumnDataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetColumnDataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetColumnDataTypeInput is an input type that accepts DataSetColumnDataTypeArgs and DataSetColumnDataTypeOutput values.
// You can construct a concrete instance of `DataSetColumnDataTypeInput` via:
//
//          DataSetColumnDataTypeArgs{...}
type DataSetColumnDataTypeInput interface {
	pulumi.Input

	ToDataSetColumnDataTypeOutput() DataSetColumnDataTypeOutput
	ToDataSetColumnDataTypeOutputWithContext(context.Context) DataSetColumnDataTypeOutput
}

var dataSetColumnDataTypePtrType = reflect.TypeOf((**DataSetColumnDataType)(nil)).Elem()

type DataSetColumnDataTypePtrInput interface {
	pulumi.Input

	ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput
	ToDataSetColumnDataTypePtrOutputWithContext(context.Context) DataSetColumnDataTypePtrOutput
}

type dataSetColumnDataTypePtr string

func DataSetColumnDataTypePtr(v string) DataSetColumnDataTypePtrInput {
	return (*dataSetColumnDataTypePtr)(&v)
}

func (*dataSetColumnDataTypePtr) ElementType() reflect.Type {
	return dataSetColumnDataTypePtrType
}

func (in *dataSetColumnDataTypePtr) ToDataSetColumnDataTypePtrOutput() DataSetColumnDataTypePtrOutput {
	return pulumi.ToOutput(in).(DataSetColumnDataTypePtrOutput)
}

func (in *dataSetColumnDataTypePtr) ToDataSetColumnDataTypePtrOutputWithContext(ctx context.Context) DataSetColumnDataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetColumnDataTypePtrOutput)
}

type DataSetDataSetImportMode string

const (
	DataSetDataSetImportModeSpice       = DataSetDataSetImportMode("SPICE")
	DataSetDataSetImportModeDirectQuery = DataSetDataSetImportMode("DIRECT_QUERY")
)

func (DataSetDataSetImportMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetDataSetImportMode)(nil)).Elem()
}

func (e DataSetDataSetImportMode) ToDataSetDataSetImportModeOutput() DataSetDataSetImportModeOutput {
	return pulumi.ToOutput(e).(DataSetDataSetImportModeOutput)
}

func (e DataSetDataSetImportMode) ToDataSetDataSetImportModeOutputWithContext(ctx context.Context) DataSetDataSetImportModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetDataSetImportModeOutput)
}

func (e DataSetDataSetImportMode) ToDataSetDataSetImportModePtrOutput() DataSetDataSetImportModePtrOutput {
	return e.ToDataSetDataSetImportModePtrOutputWithContext(context.Background())
}

func (e DataSetDataSetImportMode) ToDataSetDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetDataSetImportModePtrOutput {
	return DataSetDataSetImportMode(e).ToDataSetDataSetImportModeOutputWithContext(ctx).ToDataSetDataSetImportModePtrOutputWithContext(ctx)
}

func (e DataSetDataSetImportMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetDataSetImportMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetDataSetImportMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetDataSetImportMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetDataSetImportModeOutput struct{ *pulumi.OutputState }

func (DataSetDataSetImportModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetDataSetImportMode)(nil)).Elem()
}

func (o DataSetDataSetImportModeOutput) ToDataSetDataSetImportModeOutput() DataSetDataSetImportModeOutput {
	return o
}

func (o DataSetDataSetImportModeOutput) ToDataSetDataSetImportModeOutputWithContext(ctx context.Context) DataSetDataSetImportModeOutput {
	return o
}

func (o DataSetDataSetImportModeOutput) ToDataSetDataSetImportModePtrOutput() DataSetDataSetImportModePtrOutput {
	return o.ToDataSetDataSetImportModePtrOutputWithContext(context.Background())
}

func (o DataSetDataSetImportModeOutput) ToDataSetDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetDataSetImportModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetDataSetImportMode) *DataSetDataSetImportMode {
		return &v
	}).(DataSetDataSetImportModePtrOutput)
}

func (o DataSetDataSetImportModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetDataSetImportModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetDataSetImportMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetDataSetImportModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetDataSetImportModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetDataSetImportMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetDataSetImportModePtrOutput struct{ *pulumi.OutputState }

func (DataSetDataSetImportModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetDataSetImportMode)(nil)).Elem()
}

func (o DataSetDataSetImportModePtrOutput) ToDataSetDataSetImportModePtrOutput() DataSetDataSetImportModePtrOutput {
	return o
}

func (o DataSetDataSetImportModePtrOutput) ToDataSetDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetDataSetImportModePtrOutput {
	return o
}

func (o DataSetDataSetImportModePtrOutput) Elem() DataSetDataSetImportModeOutput {
	return o.ApplyT(func(v *DataSetDataSetImportMode) DataSetDataSetImportMode {
		if v != nil {
			return *v
		}
		var ret DataSetDataSetImportMode
		return ret
	}).(DataSetDataSetImportModeOutput)
}

func (o DataSetDataSetImportModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetDataSetImportModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetDataSetImportMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetDataSetImportModeInput is an input type that accepts DataSetDataSetImportModeArgs and DataSetDataSetImportModeOutput values.
// You can construct a concrete instance of `DataSetDataSetImportModeInput` via:
//
//          DataSetDataSetImportModeArgs{...}
type DataSetDataSetImportModeInput interface {
	pulumi.Input

	ToDataSetDataSetImportModeOutput() DataSetDataSetImportModeOutput
	ToDataSetDataSetImportModeOutputWithContext(context.Context) DataSetDataSetImportModeOutput
}

var dataSetDataSetImportModePtrType = reflect.TypeOf((**DataSetDataSetImportMode)(nil)).Elem()

type DataSetDataSetImportModePtrInput interface {
	pulumi.Input

	ToDataSetDataSetImportModePtrOutput() DataSetDataSetImportModePtrOutput
	ToDataSetDataSetImportModePtrOutputWithContext(context.Context) DataSetDataSetImportModePtrOutput
}

type dataSetDataSetImportModePtr string

func DataSetDataSetImportModePtr(v string) DataSetDataSetImportModePtrInput {
	return (*dataSetDataSetImportModePtr)(&v)
}

func (*dataSetDataSetImportModePtr) ElementType() reflect.Type {
	return dataSetDataSetImportModePtrType
}

func (in *dataSetDataSetImportModePtr) ToDataSetDataSetImportModePtrOutput() DataSetDataSetImportModePtrOutput {
	return pulumi.ToOutput(in).(DataSetDataSetImportModePtrOutput)
}

func (in *dataSetDataSetImportModePtr) ToDataSetDataSetImportModePtrOutputWithContext(ctx context.Context) DataSetDataSetImportModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetDataSetImportModePtrOutput)
}

type DataSetGeoSpatialCountryCode string

const (
	DataSetGeoSpatialCountryCodeUs = DataSetGeoSpatialCountryCode("US")
)

func (DataSetGeoSpatialCountryCode) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialCountryCode)(nil)).Elem()
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodeOutput() DataSetGeoSpatialCountryCodeOutput {
	return pulumi.ToOutput(e).(DataSetGeoSpatialCountryCodeOutput)
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodeOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetGeoSpatialCountryCodeOutput)
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return e.ToDataSetGeoSpatialCountryCodePtrOutputWithContext(context.Background())
}

func (e DataSetGeoSpatialCountryCode) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return DataSetGeoSpatialCountryCode(e).ToDataSetGeoSpatialCountryCodeOutputWithContext(ctx).ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx)
}

func (e DataSetGeoSpatialCountryCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetGeoSpatialCountryCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetGeoSpatialCountryCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetGeoSpatialCountryCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetGeoSpatialCountryCodeOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialCountryCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialCountryCode)(nil)).Elem()
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodeOutput() DataSetGeoSpatialCountryCodeOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodeOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodeOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return o.ToDataSetGeoSpatialCountryCodePtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodeOutput) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetGeoSpatialCountryCode) *DataSetGeoSpatialCountryCode {
		return &v
	}).(DataSetGeoSpatialCountryCodePtrOutput)
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetGeoSpatialCountryCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetGeoSpatialCountryCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetGeoSpatialCountryCodePtrOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialCountryCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetGeoSpatialCountryCode)(nil)).Elem()
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return o
}

func (o DataSetGeoSpatialCountryCodePtrOutput) Elem() DataSetGeoSpatialCountryCodeOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialCountryCode) DataSetGeoSpatialCountryCode {
		if v != nil {
			return *v
		}
		var ret DataSetGeoSpatialCountryCode
		return ret
	}).(DataSetGeoSpatialCountryCodeOutput)
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialCountryCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetGeoSpatialCountryCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetGeoSpatialCountryCodeInput is an input type that accepts DataSetGeoSpatialCountryCodeArgs and DataSetGeoSpatialCountryCodeOutput values.
// You can construct a concrete instance of `DataSetGeoSpatialCountryCodeInput` via:
//
//          DataSetGeoSpatialCountryCodeArgs{...}
type DataSetGeoSpatialCountryCodeInput interface {
	pulumi.Input

	ToDataSetGeoSpatialCountryCodeOutput() DataSetGeoSpatialCountryCodeOutput
	ToDataSetGeoSpatialCountryCodeOutputWithContext(context.Context) DataSetGeoSpatialCountryCodeOutput
}

var dataSetGeoSpatialCountryCodePtrType = reflect.TypeOf((**DataSetGeoSpatialCountryCode)(nil)).Elem()

type DataSetGeoSpatialCountryCodePtrInput interface {
	pulumi.Input

	ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput
	ToDataSetGeoSpatialCountryCodePtrOutputWithContext(context.Context) DataSetGeoSpatialCountryCodePtrOutput
}

type dataSetGeoSpatialCountryCodePtr string

func DataSetGeoSpatialCountryCodePtr(v string) DataSetGeoSpatialCountryCodePtrInput {
	return (*dataSetGeoSpatialCountryCodePtr)(&v)
}

func (*dataSetGeoSpatialCountryCodePtr) ElementType() reflect.Type {
	return dataSetGeoSpatialCountryCodePtrType
}

func (in *dataSetGeoSpatialCountryCodePtr) ToDataSetGeoSpatialCountryCodePtrOutput() DataSetGeoSpatialCountryCodePtrOutput {
	return pulumi.ToOutput(in).(DataSetGeoSpatialCountryCodePtrOutput)
}

func (in *dataSetGeoSpatialCountryCodePtr) ToDataSetGeoSpatialCountryCodePtrOutputWithContext(ctx context.Context) DataSetGeoSpatialCountryCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetGeoSpatialCountryCodePtrOutput)
}

type DataSetRowLevelPermissionFormatVersion string

const (
	DataSetRowLevelPermissionFormatVersionVersion1 = DataSetRowLevelPermissionFormatVersion("VERSION_1")
	DataSetRowLevelPermissionFormatVersionVersion2 = DataSetRowLevelPermissionFormatVersion("VERSION_2")
)

func (DataSetRowLevelPermissionFormatVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionFormatVersion)(nil)).Elem()
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionOutput() DataSetRowLevelPermissionFormatVersionOutput {
	return pulumi.ToOutput(e).(DataSetRowLevelPermissionFormatVersionOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetRowLevelPermissionFormatVersionOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return e.ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionFormatVersion) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return DataSetRowLevelPermissionFormatVersion(e).ToDataSetRowLevelPermissionFormatVersionOutputWithContext(ctx).ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx)
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionFormatVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetRowLevelPermissionFormatVersionOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionFormatVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionFormatVersion)(nil)).Elem()
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionOutput() DataSetRowLevelPermissionFormatVersionOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o.ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRowLevelPermissionFormatVersion) *DataSetRowLevelPermissionFormatVersion {
		return &v
	}).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionFormatVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionFormatVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetRowLevelPermissionFormatVersionPtrOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionFormatVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionFormatVersion)(nil)).Elem()
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) Elem() DataSetRowLevelPermissionFormatVersionOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionFormatVersion) DataSetRowLevelPermissionFormatVersion {
		if v != nil {
			return *v
		}
		var ret DataSetRowLevelPermissionFormatVersion
		return ret
	}).(DataSetRowLevelPermissionFormatVersionOutput)
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionFormatVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetRowLevelPermissionFormatVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetRowLevelPermissionFormatVersionInput is an input type that accepts DataSetRowLevelPermissionFormatVersionArgs and DataSetRowLevelPermissionFormatVersionOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionFormatVersionInput` via:
//
//          DataSetRowLevelPermissionFormatVersionArgs{...}
type DataSetRowLevelPermissionFormatVersionInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionFormatVersionOutput() DataSetRowLevelPermissionFormatVersionOutput
	ToDataSetRowLevelPermissionFormatVersionOutputWithContext(context.Context) DataSetRowLevelPermissionFormatVersionOutput
}

var dataSetRowLevelPermissionFormatVersionPtrType = reflect.TypeOf((**DataSetRowLevelPermissionFormatVersion)(nil)).Elem()

type DataSetRowLevelPermissionFormatVersionPtrInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput
	ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput
}

type dataSetRowLevelPermissionFormatVersionPtr string

func DataSetRowLevelPermissionFormatVersionPtr(v string) DataSetRowLevelPermissionFormatVersionPtrInput {
	return (*dataSetRowLevelPermissionFormatVersionPtr)(&v)
}

func (*dataSetRowLevelPermissionFormatVersionPtr) ElementType() reflect.Type {
	return dataSetRowLevelPermissionFormatVersionPtrType
}

func (in *dataSetRowLevelPermissionFormatVersionPtr) ToDataSetRowLevelPermissionFormatVersionPtrOutput() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return pulumi.ToOutput(in).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

func (in *dataSetRowLevelPermissionFormatVersionPtr) ToDataSetRowLevelPermissionFormatVersionPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionFormatVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

type DataSetRowLevelPermissionPolicy string

const (
	DataSetRowLevelPermissionPolicyGrantAccess = DataSetRowLevelPermissionPolicy("GRANT_ACCESS")
	DataSetRowLevelPermissionPolicyDenyAccess  = DataSetRowLevelPermissionPolicy("DENY_ACCESS")
)

func (DataSetRowLevelPermissionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionPolicy)(nil)).Elem()
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyOutput() DataSetRowLevelPermissionPolicyOutput {
	return pulumi.ToOutput(e).(DataSetRowLevelPermissionPolicyOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSetRowLevelPermissionPolicyOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return e.ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionPolicy) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return DataSetRowLevelPermissionPolicy(e).ToDataSetRowLevelPermissionPolicyOutputWithContext(ctx).ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx)
}

func (e DataSetRowLevelPermissionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSetRowLevelPermissionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSetRowLevelPermissionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSetRowLevelPermissionPolicyOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionPolicy)(nil)).Elem()
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyOutput() DataSetRowLevelPermissionPolicyOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return o.ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyOutput) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRowLevelPermissionPolicy) *DataSetRowLevelPermissionPolicy {
		return &v
	}).(DataSetRowLevelPermissionPolicyPtrOutput)
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSetRowLevelPermissionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSetRowLevelPermissionPolicyPtrOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionPolicy)(nil)).Elem()
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) Elem() DataSetRowLevelPermissionPolicyOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionPolicy) DataSetRowLevelPermissionPolicy {
		if v != nil {
			return *v
		}
		var ret DataSetRowLevelPermissionPolicy
		return ret
	}).(DataSetRowLevelPermissionPolicyOutput)
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSetRowLevelPermissionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSetRowLevelPermissionPolicyInput is an input type that accepts DataSetRowLevelPermissionPolicyArgs and DataSetRowLevelPermissionPolicyOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionPolicyInput` via:
//
//          DataSetRowLevelPermissionPolicyArgs{...}
type DataSetRowLevelPermissionPolicyInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionPolicyOutput() DataSetRowLevelPermissionPolicyOutput
	ToDataSetRowLevelPermissionPolicyOutputWithContext(context.Context) DataSetRowLevelPermissionPolicyOutput
}

var dataSetRowLevelPermissionPolicyPtrType = reflect.TypeOf((**DataSetRowLevelPermissionPolicy)(nil)).Elem()

type DataSetRowLevelPermissionPolicyPtrInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput
	ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(context.Context) DataSetRowLevelPermissionPolicyPtrOutput
}

type dataSetRowLevelPermissionPolicyPtr string

func DataSetRowLevelPermissionPolicyPtr(v string) DataSetRowLevelPermissionPolicyPtrInput {
	return (*dataSetRowLevelPermissionPolicyPtr)(&v)
}

func (*dataSetRowLevelPermissionPolicyPtr) ElementType() reflect.Type {
	return dataSetRowLevelPermissionPolicyPtrType
}

func (in *dataSetRowLevelPermissionPolicyPtr) ToDataSetRowLevelPermissionPolicyPtrOutput() DataSetRowLevelPermissionPolicyPtrOutput {
	return pulumi.ToOutput(in).(DataSetRowLevelPermissionPolicyPtrOutput)
}

func (in *dataSetRowLevelPermissionPolicyPtr) ToDataSetRowLevelPermissionPolicyPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSetRowLevelPermissionPolicyPtrOutput)
}

type DataSourceDataSourceErrorInfoType string

const (
	DataSourceDataSourceErrorInfoTypeAccessDenied              = DataSourceDataSourceErrorInfoType("ACCESS_DENIED")
	DataSourceDataSourceErrorInfoTypeCopySourceNotFound        = DataSourceDataSourceErrorInfoType("COPY_SOURCE_NOT_FOUND")
	DataSourceDataSourceErrorInfoTypeTimeout                   = DataSourceDataSourceErrorInfoType("TIMEOUT")
	DataSourceDataSourceErrorInfoTypeEngineVersionNotSupported = DataSourceDataSourceErrorInfoType("ENGINE_VERSION_NOT_SUPPORTED")
	DataSourceDataSourceErrorInfoTypeUnknownHost               = DataSourceDataSourceErrorInfoType("UNKNOWN_HOST")
	DataSourceDataSourceErrorInfoTypeGenericSqlFailure         = DataSourceDataSourceErrorInfoType("GENERIC_SQL_FAILURE")
	DataSourceDataSourceErrorInfoTypeConflict                  = DataSourceDataSourceErrorInfoType("CONFLICT")
	DataSourceDataSourceErrorInfoTypeUnknown                   = DataSourceDataSourceErrorInfoType("UNKNOWN")
)

func (DataSourceDataSourceErrorInfoType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDataSourceErrorInfoType)(nil)).Elem()
}

func (e DataSourceDataSourceErrorInfoType) ToDataSourceDataSourceErrorInfoTypeOutput() DataSourceDataSourceErrorInfoTypeOutput {
	return pulumi.ToOutput(e).(DataSourceDataSourceErrorInfoTypeOutput)
}

func (e DataSourceDataSourceErrorInfoType) ToDataSourceDataSourceErrorInfoTypeOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceDataSourceErrorInfoTypeOutput)
}

func (e DataSourceDataSourceErrorInfoType) ToDataSourceDataSourceErrorInfoTypePtrOutput() DataSourceDataSourceErrorInfoTypePtrOutput {
	return e.ToDataSourceDataSourceErrorInfoTypePtrOutputWithContext(context.Background())
}

func (e DataSourceDataSourceErrorInfoType) ToDataSourceDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoTypePtrOutput {
	return DataSourceDataSourceErrorInfoType(e).ToDataSourceDataSourceErrorInfoTypeOutputWithContext(ctx).ToDataSourceDataSourceErrorInfoTypePtrOutputWithContext(ctx)
}

func (e DataSourceDataSourceErrorInfoType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceDataSourceErrorInfoType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceDataSourceErrorInfoType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceDataSourceErrorInfoType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceDataSourceErrorInfoTypeOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceErrorInfoTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDataSourceErrorInfoType)(nil)).Elem()
}

func (o DataSourceDataSourceErrorInfoTypeOutput) ToDataSourceDataSourceErrorInfoTypeOutput() DataSourceDataSourceErrorInfoTypeOutput {
	return o
}

func (o DataSourceDataSourceErrorInfoTypeOutput) ToDataSourceDataSourceErrorInfoTypeOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoTypeOutput {
	return o
}

func (o DataSourceDataSourceErrorInfoTypeOutput) ToDataSourceDataSourceErrorInfoTypePtrOutput() DataSourceDataSourceErrorInfoTypePtrOutput {
	return o.ToDataSourceDataSourceErrorInfoTypePtrOutputWithContext(context.Background())
}

func (o DataSourceDataSourceErrorInfoTypeOutput) ToDataSourceDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDataSourceErrorInfoType) *DataSourceDataSourceErrorInfoType {
		return &v
	}).(DataSourceDataSourceErrorInfoTypePtrOutput)
}

func (o DataSourceDataSourceErrorInfoTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceDataSourceErrorInfoTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceDataSourceErrorInfoType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceDataSourceErrorInfoTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceDataSourceErrorInfoTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceDataSourceErrorInfoType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceDataSourceErrorInfoTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceErrorInfoTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDataSourceErrorInfoType)(nil)).Elem()
}

func (o DataSourceDataSourceErrorInfoTypePtrOutput) ToDataSourceDataSourceErrorInfoTypePtrOutput() DataSourceDataSourceErrorInfoTypePtrOutput {
	return o
}

func (o DataSourceDataSourceErrorInfoTypePtrOutput) ToDataSourceDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoTypePtrOutput {
	return o
}

func (o DataSourceDataSourceErrorInfoTypePtrOutput) Elem() DataSourceDataSourceErrorInfoTypeOutput {
	return o.ApplyT(func(v *DataSourceDataSourceErrorInfoType) DataSourceDataSourceErrorInfoType {
		if v != nil {
			return *v
		}
		var ret DataSourceDataSourceErrorInfoType
		return ret
	}).(DataSourceDataSourceErrorInfoTypeOutput)
}

func (o DataSourceDataSourceErrorInfoTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceDataSourceErrorInfoTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceDataSourceErrorInfoType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceDataSourceErrorInfoTypeInput is an input type that accepts DataSourceDataSourceErrorInfoTypeArgs and DataSourceDataSourceErrorInfoTypeOutput values.
// You can construct a concrete instance of `DataSourceDataSourceErrorInfoTypeInput` via:
//
//          DataSourceDataSourceErrorInfoTypeArgs{...}
type DataSourceDataSourceErrorInfoTypeInput interface {
	pulumi.Input

	ToDataSourceDataSourceErrorInfoTypeOutput() DataSourceDataSourceErrorInfoTypeOutput
	ToDataSourceDataSourceErrorInfoTypeOutputWithContext(context.Context) DataSourceDataSourceErrorInfoTypeOutput
}

var dataSourceDataSourceErrorInfoTypePtrType = reflect.TypeOf((**DataSourceDataSourceErrorInfoType)(nil)).Elem()

type DataSourceDataSourceErrorInfoTypePtrInput interface {
	pulumi.Input

	ToDataSourceDataSourceErrorInfoTypePtrOutput() DataSourceDataSourceErrorInfoTypePtrOutput
	ToDataSourceDataSourceErrorInfoTypePtrOutputWithContext(context.Context) DataSourceDataSourceErrorInfoTypePtrOutput
}

type dataSourceDataSourceErrorInfoTypePtr string

func DataSourceDataSourceErrorInfoTypePtr(v string) DataSourceDataSourceErrorInfoTypePtrInput {
	return (*dataSourceDataSourceErrorInfoTypePtr)(&v)
}

func (*dataSourceDataSourceErrorInfoTypePtr) ElementType() reflect.Type {
	return dataSourceDataSourceErrorInfoTypePtrType
}

func (in *dataSourceDataSourceErrorInfoTypePtr) ToDataSourceDataSourceErrorInfoTypePtrOutput() DataSourceDataSourceErrorInfoTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceDataSourceErrorInfoTypePtrOutput)
}

func (in *dataSourceDataSourceErrorInfoTypePtr) ToDataSourceDataSourceErrorInfoTypePtrOutputWithContext(ctx context.Context) DataSourceDataSourceErrorInfoTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceDataSourceErrorInfoTypePtrOutput)
}

type DataSourceDataSourceType string

const (
	DataSourceDataSourceTypeAdobeAnalytics      = DataSourceDataSourceType("ADOBE_ANALYTICS")
	DataSourceDataSourceTypeAmazonElasticsearch = DataSourceDataSourceType("AMAZON_ELASTICSEARCH")
	DataSourceDataSourceTypeAthena              = DataSourceDataSourceType("ATHENA")
	DataSourceDataSourceTypeAurora              = DataSourceDataSourceType("AURORA")
	DataSourceDataSourceTypeAuroraPostgresql    = DataSourceDataSourceType("AURORA_POSTGRESQL")
	DataSourceDataSourceTypeAwsIotAnalytics     = DataSourceDataSourceType("AWS_IOT_ANALYTICS")
	DataSourceDataSourceTypeGithub              = DataSourceDataSourceType("GITHUB")
	DataSourceDataSourceTypeJira                = DataSourceDataSourceType("JIRA")
	DataSourceDataSourceTypeMariadb             = DataSourceDataSourceType("MARIADB")
	DataSourceDataSourceTypeMysql               = DataSourceDataSourceType("MYSQL")
	DataSourceDataSourceTypeOracle              = DataSourceDataSourceType("ORACLE")
	DataSourceDataSourceTypePostgresql          = DataSourceDataSourceType("POSTGRESQL")
	DataSourceDataSourceTypePresto              = DataSourceDataSourceType("PRESTO")
	DataSourceDataSourceTypeRedshift            = DataSourceDataSourceType("REDSHIFT")
	DataSourceDataSourceTypeS3                  = DataSourceDataSourceType("S3")
	DataSourceDataSourceTypeSalesforce          = DataSourceDataSourceType("SALESFORCE")
	DataSourceDataSourceTypeServicenow          = DataSourceDataSourceType("SERVICENOW")
	DataSourceDataSourceTypeSnowflake           = DataSourceDataSourceType("SNOWFLAKE")
	DataSourceDataSourceTypeSpark               = DataSourceDataSourceType("SPARK")
	DataSourceDataSourceTypeSqlserver           = DataSourceDataSourceType("SQLSERVER")
	DataSourceDataSourceTypeTeradata            = DataSourceDataSourceType("TERADATA")
	DataSourceDataSourceTypeTwitter             = DataSourceDataSourceType("TWITTER")
	DataSourceDataSourceTypeTimestream          = DataSourceDataSourceType("TIMESTREAM")
)

func (DataSourceDataSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDataSourceType)(nil)).Elem()
}

func (e DataSourceDataSourceType) ToDataSourceDataSourceTypeOutput() DataSourceDataSourceTypeOutput {
	return pulumi.ToOutput(e).(DataSourceDataSourceTypeOutput)
}

func (e DataSourceDataSourceType) ToDataSourceDataSourceTypeOutputWithContext(ctx context.Context) DataSourceDataSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceDataSourceTypeOutput)
}

func (e DataSourceDataSourceType) ToDataSourceDataSourceTypePtrOutput() DataSourceDataSourceTypePtrOutput {
	return e.ToDataSourceDataSourceTypePtrOutputWithContext(context.Background())
}

func (e DataSourceDataSourceType) ToDataSourceDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceDataSourceTypePtrOutput {
	return DataSourceDataSourceType(e).ToDataSourceDataSourceTypeOutputWithContext(ctx).ToDataSourceDataSourceTypePtrOutputWithContext(ctx)
}

func (e DataSourceDataSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceDataSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceDataSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceDataSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceDataSourceTypeOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDataSourceType)(nil)).Elem()
}

func (o DataSourceDataSourceTypeOutput) ToDataSourceDataSourceTypeOutput() DataSourceDataSourceTypeOutput {
	return o
}

func (o DataSourceDataSourceTypeOutput) ToDataSourceDataSourceTypeOutputWithContext(ctx context.Context) DataSourceDataSourceTypeOutput {
	return o
}

func (o DataSourceDataSourceTypeOutput) ToDataSourceDataSourceTypePtrOutput() DataSourceDataSourceTypePtrOutput {
	return o.ToDataSourceDataSourceTypePtrOutputWithContext(context.Background())
}

func (o DataSourceDataSourceTypeOutput) ToDataSourceDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceDataSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDataSourceType) *DataSourceDataSourceType {
		return &v
	}).(DataSourceDataSourceTypePtrOutput)
}

func (o DataSourceDataSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceDataSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceDataSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceDataSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceDataSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceDataSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceDataSourceTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceDataSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDataSourceType)(nil)).Elem()
}

func (o DataSourceDataSourceTypePtrOutput) ToDataSourceDataSourceTypePtrOutput() DataSourceDataSourceTypePtrOutput {
	return o
}

func (o DataSourceDataSourceTypePtrOutput) ToDataSourceDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceDataSourceTypePtrOutput {
	return o
}

func (o DataSourceDataSourceTypePtrOutput) Elem() DataSourceDataSourceTypeOutput {
	return o.ApplyT(func(v *DataSourceDataSourceType) DataSourceDataSourceType {
		if v != nil {
			return *v
		}
		var ret DataSourceDataSourceType
		return ret
	}).(DataSourceDataSourceTypeOutput)
}

func (o DataSourceDataSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceDataSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceDataSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceDataSourceTypeInput is an input type that accepts DataSourceDataSourceTypeArgs and DataSourceDataSourceTypeOutput values.
// You can construct a concrete instance of `DataSourceDataSourceTypeInput` via:
//
//          DataSourceDataSourceTypeArgs{...}
type DataSourceDataSourceTypeInput interface {
	pulumi.Input

	ToDataSourceDataSourceTypeOutput() DataSourceDataSourceTypeOutput
	ToDataSourceDataSourceTypeOutputWithContext(context.Context) DataSourceDataSourceTypeOutput
}

var dataSourceDataSourceTypePtrType = reflect.TypeOf((**DataSourceDataSourceType)(nil)).Elem()

type DataSourceDataSourceTypePtrInput interface {
	pulumi.Input

	ToDataSourceDataSourceTypePtrOutput() DataSourceDataSourceTypePtrOutput
	ToDataSourceDataSourceTypePtrOutputWithContext(context.Context) DataSourceDataSourceTypePtrOutput
}

type dataSourceDataSourceTypePtr string

func DataSourceDataSourceTypePtr(v string) DataSourceDataSourceTypePtrInput {
	return (*dataSourceDataSourceTypePtr)(&v)
}

func (*dataSourceDataSourceTypePtr) ElementType() reflect.Type {
	return dataSourceDataSourceTypePtrType
}

func (in *dataSourceDataSourceTypePtr) ToDataSourceDataSourceTypePtrOutput() DataSourceDataSourceTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceDataSourceTypePtrOutput)
}

func (in *dataSourceDataSourceTypePtr) ToDataSourceDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceDataSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceDataSourceTypePtrOutput)
}

type DataSourceResourceStatus string

const (
	DataSourceResourceStatusCreationInProgress = DataSourceResourceStatus("CREATION_IN_PROGRESS")
	DataSourceResourceStatusCreationSuccessful = DataSourceResourceStatus("CREATION_SUCCESSFUL")
	DataSourceResourceStatusCreationFailed     = DataSourceResourceStatus("CREATION_FAILED")
	DataSourceResourceStatusUpdateInProgress   = DataSourceResourceStatus("UPDATE_IN_PROGRESS")
	DataSourceResourceStatusUpdateSuccessful   = DataSourceResourceStatus("UPDATE_SUCCESSFUL")
	DataSourceResourceStatusUpdateFailed       = DataSourceResourceStatus("UPDATE_FAILED")
	DataSourceResourceStatusDeleted            = DataSourceResourceStatus("DELETED")
)

func (DataSourceResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourceStatus)(nil)).Elem()
}

func (e DataSourceResourceStatus) ToDataSourceResourceStatusOutput() DataSourceResourceStatusOutput {
	return pulumi.ToOutput(e).(DataSourceResourceStatusOutput)
}

func (e DataSourceResourceStatus) ToDataSourceResourceStatusOutputWithContext(ctx context.Context) DataSourceResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceResourceStatusOutput)
}

func (e DataSourceResourceStatus) ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput {
	return e.ToDataSourceResourceStatusPtrOutputWithContext(context.Background())
}

func (e DataSourceResourceStatus) ToDataSourceResourceStatusPtrOutputWithContext(ctx context.Context) DataSourceResourceStatusPtrOutput {
	return DataSourceResourceStatus(e).ToDataSourceResourceStatusOutputWithContext(ctx).ToDataSourceResourceStatusPtrOutputWithContext(ctx)
}

func (e DataSourceResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceResourceStatusOutput struct{ *pulumi.OutputState }

func (DataSourceResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourceStatus)(nil)).Elem()
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusOutput() DataSourceResourceStatusOutput {
	return o
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusOutputWithContext(ctx context.Context) DataSourceResourceStatusOutput {
	return o
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput {
	return o.ToDataSourceResourceStatusPtrOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusOutput) ToDataSourceResourceStatusPtrOutputWithContext(ctx context.Context) DataSourceResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceResourceStatus) *DataSourceResourceStatus {
		return &v
	}).(DataSourceResourceStatusPtrOutput)
}

func (o DataSourceResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (DataSourceResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceResourceStatus)(nil)).Elem()
}

func (o DataSourceResourceStatusPtrOutput) ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput {
	return o
}

func (o DataSourceResourceStatusPtrOutput) ToDataSourceResourceStatusPtrOutputWithContext(ctx context.Context) DataSourceResourceStatusPtrOutput {
	return o
}

func (o DataSourceResourceStatusPtrOutput) Elem() DataSourceResourceStatusOutput {
	return o.ApplyT(func(v *DataSourceResourceStatus) DataSourceResourceStatus {
		if v != nil {
			return *v
		}
		var ret DataSourceResourceStatus
		return ret
	}).(DataSourceResourceStatusOutput)
}

func (o DataSourceResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceResourceStatusInput is an input type that accepts DataSourceResourceStatusArgs and DataSourceResourceStatusOutput values.
// You can construct a concrete instance of `DataSourceResourceStatusInput` via:
//
//          DataSourceResourceStatusArgs{...}
type DataSourceResourceStatusInput interface {
	pulumi.Input

	ToDataSourceResourceStatusOutput() DataSourceResourceStatusOutput
	ToDataSourceResourceStatusOutputWithContext(context.Context) DataSourceResourceStatusOutput
}

var dataSourceResourceStatusPtrType = reflect.TypeOf((**DataSourceResourceStatus)(nil)).Elem()

type DataSourceResourceStatusPtrInput interface {
	pulumi.Input

	ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput
	ToDataSourceResourceStatusPtrOutputWithContext(context.Context) DataSourceResourceStatusPtrOutput
}

type dataSourceResourceStatusPtr string

func DataSourceResourceStatusPtr(v string) DataSourceResourceStatusPtrInput {
	return (*dataSourceResourceStatusPtr)(&v)
}

func (*dataSourceResourceStatusPtr) ElementType() reflect.Type {
	return dataSourceResourceStatusPtrType
}

func (in *dataSourceResourceStatusPtr) ToDataSourceResourceStatusPtrOutput() DataSourceResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(DataSourceResourceStatusPtrOutput)
}

func (in *dataSourceResourceStatusPtr) ToDataSourceResourceStatusPtrOutputWithContext(ctx context.Context) DataSourceResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceResourceStatusPtrOutput)
}

type TemplateResourceStatus string

const (
	TemplateResourceStatusCreationInProgress = TemplateResourceStatus("CREATION_IN_PROGRESS")
	TemplateResourceStatusCreationSuccessful = TemplateResourceStatus("CREATION_SUCCESSFUL")
	TemplateResourceStatusCreationFailed     = TemplateResourceStatus("CREATION_FAILED")
	TemplateResourceStatusUpdateInProgress   = TemplateResourceStatus("UPDATE_IN_PROGRESS")
	TemplateResourceStatusUpdateSuccessful   = TemplateResourceStatus("UPDATE_SUCCESSFUL")
	TemplateResourceStatusUpdateFailed       = TemplateResourceStatus("UPDATE_FAILED")
	TemplateResourceStatusDeleted            = TemplateResourceStatus("DELETED")
)

func (TemplateResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResourceStatus)(nil)).Elem()
}

func (e TemplateResourceStatus) ToTemplateResourceStatusOutput() TemplateResourceStatusOutput {
	return pulumi.ToOutput(e).(TemplateResourceStatusOutput)
}

func (e TemplateResourceStatus) ToTemplateResourceStatusOutputWithContext(ctx context.Context) TemplateResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateResourceStatusOutput)
}

func (e TemplateResourceStatus) ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput {
	return e.ToTemplateResourceStatusPtrOutputWithContext(context.Background())
}

func (e TemplateResourceStatus) ToTemplateResourceStatusPtrOutputWithContext(ctx context.Context) TemplateResourceStatusPtrOutput {
	return TemplateResourceStatus(e).ToTemplateResourceStatusOutputWithContext(ctx).ToTemplateResourceStatusPtrOutputWithContext(ctx)
}

func (e TemplateResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateResourceStatusOutput struct{ *pulumi.OutputState }

func (TemplateResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResourceStatus)(nil)).Elem()
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusOutput() TemplateResourceStatusOutput {
	return o
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusOutputWithContext(ctx context.Context) TemplateResourceStatusOutput {
	return o
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput {
	return o.ToTemplateResourceStatusPtrOutputWithContext(context.Background())
}

func (o TemplateResourceStatusOutput) ToTemplateResourceStatusPtrOutputWithContext(ctx context.Context) TemplateResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateResourceStatus) *TemplateResourceStatus {
		return &v
	}).(TemplateResourceStatusPtrOutput)
}

func (o TemplateResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (TemplateResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateResourceStatus)(nil)).Elem()
}

func (o TemplateResourceStatusPtrOutput) ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput {
	return o
}

func (o TemplateResourceStatusPtrOutput) ToTemplateResourceStatusPtrOutputWithContext(ctx context.Context) TemplateResourceStatusPtrOutput {
	return o
}

func (o TemplateResourceStatusPtrOutput) Elem() TemplateResourceStatusOutput {
	return o.ApplyT(func(v *TemplateResourceStatus) TemplateResourceStatus {
		if v != nil {
			return *v
		}
		var ret TemplateResourceStatus
		return ret
	}).(TemplateResourceStatusOutput)
}

func (o TemplateResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateResourceStatusInput is an input type that accepts TemplateResourceStatusArgs and TemplateResourceStatusOutput values.
// You can construct a concrete instance of `TemplateResourceStatusInput` via:
//
//          TemplateResourceStatusArgs{...}
type TemplateResourceStatusInput interface {
	pulumi.Input

	ToTemplateResourceStatusOutput() TemplateResourceStatusOutput
	ToTemplateResourceStatusOutputWithContext(context.Context) TemplateResourceStatusOutput
}

var templateResourceStatusPtrType = reflect.TypeOf((**TemplateResourceStatus)(nil)).Elem()

type TemplateResourceStatusPtrInput interface {
	pulumi.Input

	ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput
	ToTemplateResourceStatusPtrOutputWithContext(context.Context) TemplateResourceStatusPtrOutput
}

type templateResourceStatusPtr string

func TemplateResourceStatusPtr(v string) TemplateResourceStatusPtrInput {
	return (*templateResourceStatusPtr)(&v)
}

func (*templateResourceStatusPtr) ElementType() reflect.Type {
	return templateResourceStatusPtrType
}

func (in *templateResourceStatusPtr) ToTemplateResourceStatusPtrOutput() TemplateResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(TemplateResourceStatusPtrOutput)
}

func (in *templateResourceStatusPtr) ToTemplateResourceStatusPtrOutputWithContext(ctx context.Context) TemplateResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateResourceStatusPtrOutput)
}

type TemplateTemplateErrorType string

const (
	TemplateTemplateErrorTypeSourceNotFound  = TemplateTemplateErrorType("SOURCE_NOT_FOUND")
	TemplateTemplateErrorTypeDataSetNotFound = TemplateTemplateErrorType("DATA_SET_NOT_FOUND")
	TemplateTemplateErrorTypeInternalFailure = TemplateTemplateErrorType("INTERNAL_FAILURE")
	TemplateTemplateErrorTypeAccessDenied    = TemplateTemplateErrorType("ACCESS_DENIED")
)

func (TemplateTemplateErrorType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTemplateErrorType)(nil)).Elem()
}

func (e TemplateTemplateErrorType) ToTemplateTemplateErrorTypeOutput() TemplateTemplateErrorTypeOutput {
	return pulumi.ToOutput(e).(TemplateTemplateErrorTypeOutput)
}

func (e TemplateTemplateErrorType) ToTemplateTemplateErrorTypeOutputWithContext(ctx context.Context) TemplateTemplateErrorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTemplateErrorTypeOutput)
}

func (e TemplateTemplateErrorType) ToTemplateTemplateErrorTypePtrOutput() TemplateTemplateErrorTypePtrOutput {
	return e.ToTemplateTemplateErrorTypePtrOutputWithContext(context.Background())
}

func (e TemplateTemplateErrorType) ToTemplateTemplateErrorTypePtrOutputWithContext(ctx context.Context) TemplateTemplateErrorTypePtrOutput {
	return TemplateTemplateErrorType(e).ToTemplateTemplateErrorTypeOutputWithContext(ctx).ToTemplateTemplateErrorTypePtrOutputWithContext(ctx)
}

func (e TemplateTemplateErrorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTemplateErrorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateTemplateErrorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateTemplateErrorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTemplateErrorTypeOutput struct{ *pulumi.OutputState }

func (TemplateTemplateErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTemplateErrorType)(nil)).Elem()
}

func (o TemplateTemplateErrorTypeOutput) ToTemplateTemplateErrorTypeOutput() TemplateTemplateErrorTypeOutput {
	return o
}

func (o TemplateTemplateErrorTypeOutput) ToTemplateTemplateErrorTypeOutputWithContext(ctx context.Context) TemplateTemplateErrorTypeOutput {
	return o
}

func (o TemplateTemplateErrorTypeOutput) ToTemplateTemplateErrorTypePtrOutput() TemplateTemplateErrorTypePtrOutput {
	return o.ToTemplateTemplateErrorTypePtrOutputWithContext(context.Background())
}

func (o TemplateTemplateErrorTypeOutput) ToTemplateTemplateErrorTypePtrOutputWithContext(ctx context.Context) TemplateTemplateErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTemplateErrorType) *TemplateTemplateErrorType {
		return &v
	}).(TemplateTemplateErrorTypePtrOutput)
}

func (o TemplateTemplateErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTemplateErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTemplateErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTemplateErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTemplateErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateTemplateErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTemplateErrorTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateTemplateErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTemplateErrorType)(nil)).Elem()
}

func (o TemplateTemplateErrorTypePtrOutput) ToTemplateTemplateErrorTypePtrOutput() TemplateTemplateErrorTypePtrOutput {
	return o
}

func (o TemplateTemplateErrorTypePtrOutput) ToTemplateTemplateErrorTypePtrOutputWithContext(ctx context.Context) TemplateTemplateErrorTypePtrOutput {
	return o
}

func (o TemplateTemplateErrorTypePtrOutput) Elem() TemplateTemplateErrorTypeOutput {
	return o.ApplyT(func(v *TemplateTemplateErrorType) TemplateTemplateErrorType {
		if v != nil {
			return *v
		}
		var ret TemplateTemplateErrorType
		return ret
	}).(TemplateTemplateErrorTypeOutput)
}

func (o TemplateTemplateErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTemplateErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateTemplateErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTemplateErrorTypeInput is an input type that accepts TemplateTemplateErrorTypeArgs and TemplateTemplateErrorTypeOutput values.
// You can construct a concrete instance of `TemplateTemplateErrorTypeInput` via:
//
//          TemplateTemplateErrorTypeArgs{...}
type TemplateTemplateErrorTypeInput interface {
	pulumi.Input

	ToTemplateTemplateErrorTypeOutput() TemplateTemplateErrorTypeOutput
	ToTemplateTemplateErrorTypeOutputWithContext(context.Context) TemplateTemplateErrorTypeOutput
}

var templateTemplateErrorTypePtrType = reflect.TypeOf((**TemplateTemplateErrorType)(nil)).Elem()

type TemplateTemplateErrorTypePtrInput interface {
	pulumi.Input

	ToTemplateTemplateErrorTypePtrOutput() TemplateTemplateErrorTypePtrOutput
	ToTemplateTemplateErrorTypePtrOutputWithContext(context.Context) TemplateTemplateErrorTypePtrOutput
}

type templateTemplateErrorTypePtr string

func TemplateTemplateErrorTypePtr(v string) TemplateTemplateErrorTypePtrInput {
	return (*templateTemplateErrorTypePtr)(&v)
}

func (*templateTemplateErrorTypePtr) ElementType() reflect.Type {
	return templateTemplateErrorTypePtrType
}

func (in *templateTemplateErrorTypePtr) ToTemplateTemplateErrorTypePtrOutput() TemplateTemplateErrorTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateTemplateErrorTypePtrOutput)
}

func (in *templateTemplateErrorTypePtr) ToTemplateTemplateErrorTypePtrOutputWithContext(ctx context.Context) TemplateTemplateErrorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTemplateErrorTypePtrOutput)
}

type ThemeResourceStatus string

const (
	ThemeResourceStatusCreationInProgress = ThemeResourceStatus("CREATION_IN_PROGRESS")
	ThemeResourceStatusCreationSuccessful = ThemeResourceStatus("CREATION_SUCCESSFUL")
	ThemeResourceStatusCreationFailed     = ThemeResourceStatus("CREATION_FAILED")
	ThemeResourceStatusUpdateInProgress   = ThemeResourceStatus("UPDATE_IN_PROGRESS")
	ThemeResourceStatusUpdateSuccessful   = ThemeResourceStatus("UPDATE_SUCCESSFUL")
	ThemeResourceStatusUpdateFailed       = ThemeResourceStatus("UPDATE_FAILED")
	ThemeResourceStatusDeleted            = ThemeResourceStatus("DELETED")
)

func (ThemeResourceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeResourceStatus)(nil)).Elem()
}

func (e ThemeResourceStatus) ToThemeResourceStatusOutput() ThemeResourceStatusOutput {
	return pulumi.ToOutput(e).(ThemeResourceStatusOutput)
}

func (e ThemeResourceStatus) ToThemeResourceStatusOutputWithContext(ctx context.Context) ThemeResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ThemeResourceStatusOutput)
}

func (e ThemeResourceStatus) ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput {
	return e.ToThemeResourceStatusPtrOutputWithContext(context.Background())
}

func (e ThemeResourceStatus) ToThemeResourceStatusPtrOutputWithContext(ctx context.Context) ThemeResourceStatusPtrOutput {
	return ThemeResourceStatus(e).ToThemeResourceStatusOutputWithContext(ctx).ToThemeResourceStatusPtrOutputWithContext(ctx)
}

func (e ThemeResourceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeResourceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeResourceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ThemeResourceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ThemeResourceStatusOutput struct{ *pulumi.OutputState }

func (ThemeResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeResourceStatus)(nil)).Elem()
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusOutput() ThemeResourceStatusOutput {
	return o
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusOutputWithContext(ctx context.Context) ThemeResourceStatusOutput {
	return o
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput {
	return o.ToThemeResourceStatusPtrOutputWithContext(context.Background())
}

func (o ThemeResourceStatusOutput) ToThemeResourceStatusPtrOutputWithContext(ctx context.Context) ThemeResourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeResourceStatus) *ThemeResourceStatus {
		return &v
	}).(ThemeResourceStatusPtrOutput)
}

func (o ThemeResourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThemeResourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeResourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThemeResourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeResourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeResourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (ThemeResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeResourceStatus)(nil)).Elem()
}

func (o ThemeResourceStatusPtrOutput) ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput {
	return o
}

func (o ThemeResourceStatusPtrOutput) ToThemeResourceStatusPtrOutputWithContext(ctx context.Context) ThemeResourceStatusPtrOutput {
	return o
}

func (o ThemeResourceStatusPtrOutput) Elem() ThemeResourceStatusOutput {
	return o.ApplyT(func(v *ThemeResourceStatus) ThemeResourceStatus {
		if v != nil {
			return *v
		}
		var ret ThemeResourceStatus
		return ret
	}).(ThemeResourceStatusOutput)
}

func (o ThemeResourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeResourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ThemeResourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ThemeResourceStatusInput is an input type that accepts ThemeResourceStatusArgs and ThemeResourceStatusOutput values.
// You can construct a concrete instance of `ThemeResourceStatusInput` via:
//
//          ThemeResourceStatusArgs{...}
type ThemeResourceStatusInput interface {
	pulumi.Input

	ToThemeResourceStatusOutput() ThemeResourceStatusOutput
	ToThemeResourceStatusOutputWithContext(context.Context) ThemeResourceStatusOutput
}

var themeResourceStatusPtrType = reflect.TypeOf((**ThemeResourceStatus)(nil)).Elem()

type ThemeResourceStatusPtrInput interface {
	pulumi.Input

	ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput
	ToThemeResourceStatusPtrOutputWithContext(context.Context) ThemeResourceStatusPtrOutput
}

type themeResourceStatusPtr string

func ThemeResourceStatusPtr(v string) ThemeResourceStatusPtrInput {
	return (*themeResourceStatusPtr)(&v)
}

func (*themeResourceStatusPtr) ElementType() reflect.Type {
	return themeResourceStatusPtrType
}

func (in *themeResourceStatusPtr) ToThemeResourceStatusPtrOutput() ThemeResourceStatusPtrOutput {
	return pulumi.ToOutput(in).(ThemeResourceStatusPtrOutput)
}

func (in *themeResourceStatusPtr) ToThemeResourceStatusPtrOutputWithContext(ctx context.Context) ThemeResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ThemeResourceStatusPtrOutput)
}

type ThemeThemeErrorType string

const (
	ThemeThemeErrorTypeInternalFailure = ThemeThemeErrorType("INTERNAL_FAILURE")
)

func (ThemeThemeErrorType) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeThemeErrorType)(nil)).Elem()
}

func (e ThemeThemeErrorType) ToThemeThemeErrorTypeOutput() ThemeThemeErrorTypeOutput {
	return pulumi.ToOutput(e).(ThemeThemeErrorTypeOutput)
}

func (e ThemeThemeErrorType) ToThemeThemeErrorTypeOutputWithContext(ctx context.Context) ThemeThemeErrorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ThemeThemeErrorTypeOutput)
}

func (e ThemeThemeErrorType) ToThemeThemeErrorTypePtrOutput() ThemeThemeErrorTypePtrOutput {
	return e.ToThemeThemeErrorTypePtrOutputWithContext(context.Background())
}

func (e ThemeThemeErrorType) ToThemeThemeErrorTypePtrOutputWithContext(ctx context.Context) ThemeThemeErrorTypePtrOutput {
	return ThemeThemeErrorType(e).ToThemeThemeErrorTypeOutputWithContext(ctx).ToThemeThemeErrorTypePtrOutputWithContext(ctx)
}

func (e ThemeThemeErrorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeThemeErrorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeThemeErrorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ThemeThemeErrorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ThemeThemeErrorTypeOutput struct{ *pulumi.OutputState }

func (ThemeThemeErrorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeThemeErrorType)(nil)).Elem()
}

func (o ThemeThemeErrorTypeOutput) ToThemeThemeErrorTypeOutput() ThemeThemeErrorTypeOutput {
	return o
}

func (o ThemeThemeErrorTypeOutput) ToThemeThemeErrorTypeOutputWithContext(ctx context.Context) ThemeThemeErrorTypeOutput {
	return o
}

func (o ThemeThemeErrorTypeOutput) ToThemeThemeErrorTypePtrOutput() ThemeThemeErrorTypePtrOutput {
	return o.ToThemeThemeErrorTypePtrOutputWithContext(context.Background())
}

func (o ThemeThemeErrorTypeOutput) ToThemeThemeErrorTypePtrOutputWithContext(ctx context.Context) ThemeThemeErrorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeThemeErrorType) *ThemeThemeErrorType {
		return &v
	}).(ThemeThemeErrorTypePtrOutput)
}

func (o ThemeThemeErrorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThemeThemeErrorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeThemeErrorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThemeThemeErrorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeThemeErrorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeThemeErrorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeThemeErrorTypePtrOutput struct{ *pulumi.OutputState }

func (ThemeThemeErrorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeThemeErrorType)(nil)).Elem()
}

func (o ThemeThemeErrorTypePtrOutput) ToThemeThemeErrorTypePtrOutput() ThemeThemeErrorTypePtrOutput {
	return o
}

func (o ThemeThemeErrorTypePtrOutput) ToThemeThemeErrorTypePtrOutputWithContext(ctx context.Context) ThemeThemeErrorTypePtrOutput {
	return o
}

func (o ThemeThemeErrorTypePtrOutput) Elem() ThemeThemeErrorTypeOutput {
	return o.ApplyT(func(v *ThemeThemeErrorType) ThemeThemeErrorType {
		if v != nil {
			return *v
		}
		var ret ThemeThemeErrorType
		return ret
	}).(ThemeThemeErrorTypeOutput)
}

func (o ThemeThemeErrorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeThemeErrorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ThemeThemeErrorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ThemeThemeErrorTypeInput is an input type that accepts ThemeThemeErrorTypeArgs and ThemeThemeErrorTypeOutput values.
// You can construct a concrete instance of `ThemeThemeErrorTypeInput` via:
//
//          ThemeThemeErrorTypeArgs{...}
type ThemeThemeErrorTypeInput interface {
	pulumi.Input

	ToThemeThemeErrorTypeOutput() ThemeThemeErrorTypeOutput
	ToThemeThemeErrorTypeOutputWithContext(context.Context) ThemeThemeErrorTypeOutput
}

var themeThemeErrorTypePtrType = reflect.TypeOf((**ThemeThemeErrorType)(nil)).Elem()

type ThemeThemeErrorTypePtrInput interface {
	pulumi.Input

	ToThemeThemeErrorTypePtrOutput() ThemeThemeErrorTypePtrOutput
	ToThemeThemeErrorTypePtrOutputWithContext(context.Context) ThemeThemeErrorTypePtrOutput
}

type themeThemeErrorTypePtr string

func ThemeThemeErrorTypePtr(v string) ThemeThemeErrorTypePtrInput {
	return (*themeThemeErrorTypePtr)(&v)
}

func (*themeThemeErrorTypePtr) ElementType() reflect.Type {
	return themeThemeErrorTypePtrType
}

func (in *themeThemeErrorTypePtr) ToThemeThemeErrorTypePtrOutput() ThemeThemeErrorTypePtrOutput {
	return pulumi.ToOutput(in).(ThemeThemeErrorTypePtrOutput)
}

func (in *themeThemeErrorTypePtr) ToThemeThemeErrorTypePtrOutputWithContext(ctx context.Context) ThemeThemeErrorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ThemeThemeErrorTypePtrOutput)
}

type ThemeThemeType string

const (
	ThemeThemeTypeQuicksight = ThemeThemeType("QUICKSIGHT")
	ThemeThemeTypeCustom     = ThemeThemeType("CUSTOM")
	ThemeThemeTypeAll        = ThemeThemeType("ALL")
)

func (ThemeThemeType) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeThemeType)(nil)).Elem()
}

func (e ThemeThemeType) ToThemeThemeTypeOutput() ThemeThemeTypeOutput {
	return pulumi.ToOutput(e).(ThemeThemeTypeOutput)
}

func (e ThemeThemeType) ToThemeThemeTypeOutputWithContext(ctx context.Context) ThemeThemeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ThemeThemeTypeOutput)
}

func (e ThemeThemeType) ToThemeThemeTypePtrOutput() ThemeThemeTypePtrOutput {
	return e.ToThemeThemeTypePtrOutputWithContext(context.Background())
}

func (e ThemeThemeType) ToThemeThemeTypePtrOutputWithContext(ctx context.Context) ThemeThemeTypePtrOutput {
	return ThemeThemeType(e).ToThemeThemeTypeOutputWithContext(ctx).ToThemeThemeTypePtrOutputWithContext(ctx)
}

func (e ThemeThemeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeThemeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThemeThemeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ThemeThemeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ThemeThemeTypeOutput struct{ *pulumi.OutputState }

func (ThemeThemeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThemeThemeType)(nil)).Elem()
}

func (o ThemeThemeTypeOutput) ToThemeThemeTypeOutput() ThemeThemeTypeOutput {
	return o
}

func (o ThemeThemeTypeOutput) ToThemeThemeTypeOutputWithContext(ctx context.Context) ThemeThemeTypeOutput {
	return o
}

func (o ThemeThemeTypeOutput) ToThemeThemeTypePtrOutput() ThemeThemeTypePtrOutput {
	return o.ToThemeThemeTypePtrOutputWithContext(context.Background())
}

func (o ThemeThemeTypeOutput) ToThemeThemeTypePtrOutputWithContext(ctx context.Context) ThemeThemeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThemeThemeType) *ThemeThemeType {
		return &v
	}).(ThemeThemeTypePtrOutput)
}

func (o ThemeThemeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThemeThemeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeThemeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThemeThemeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeThemeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThemeThemeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThemeThemeTypePtrOutput struct{ *pulumi.OutputState }

func (ThemeThemeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThemeThemeType)(nil)).Elem()
}

func (o ThemeThemeTypePtrOutput) ToThemeThemeTypePtrOutput() ThemeThemeTypePtrOutput {
	return o
}

func (o ThemeThemeTypePtrOutput) ToThemeThemeTypePtrOutputWithContext(ctx context.Context) ThemeThemeTypePtrOutput {
	return o
}

func (o ThemeThemeTypePtrOutput) Elem() ThemeThemeTypeOutput {
	return o.ApplyT(func(v *ThemeThemeType) ThemeThemeType {
		if v != nil {
			return *v
		}
		var ret ThemeThemeType
		return ret
	}).(ThemeThemeTypeOutput)
}

func (o ThemeThemeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThemeThemeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ThemeThemeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ThemeThemeTypeInput is an input type that accepts ThemeThemeTypeArgs and ThemeThemeTypeOutput values.
// You can construct a concrete instance of `ThemeThemeTypeInput` via:
//
//          ThemeThemeTypeArgs{...}
type ThemeThemeTypeInput interface {
	pulumi.Input

	ToThemeThemeTypeOutput() ThemeThemeTypeOutput
	ToThemeThemeTypeOutputWithContext(context.Context) ThemeThemeTypeOutput
}

var themeThemeTypePtrType = reflect.TypeOf((**ThemeThemeType)(nil)).Elem()

type ThemeThemeTypePtrInput interface {
	pulumi.Input

	ToThemeThemeTypePtrOutput() ThemeThemeTypePtrOutput
	ToThemeThemeTypePtrOutputWithContext(context.Context) ThemeThemeTypePtrOutput
}

type themeThemeTypePtr string

func ThemeThemeTypePtr(v string) ThemeThemeTypePtrInput {
	return (*themeThemeTypePtr)(&v)
}

func (*themeThemeTypePtr) ElementType() reflect.Type {
	return themeThemeTypePtrType
}

func (in *themeThemeTypePtr) ToThemeThemeTypePtrOutput() ThemeThemeTypePtrOutput {
	return pulumi.ToOutput(in).(ThemeThemeTypePtrOutput)
}

func (in *themeThemeTypePtr) ToThemeThemeTypePtrOutputWithContext(ctx context.Context) ThemeThemeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ThemeThemeTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalysisAnalysisErrorTypeOutput{})
	pulumi.RegisterOutputType(AnalysisAnalysisErrorTypePtrOutput{})
	pulumi.RegisterOutputType(AnalysisResourceStatusOutput{})
	pulumi.RegisterOutputType(AnalysisResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(DashboardDashboardBehaviorOutput{})
	pulumi.RegisterOutputType(DashboardDashboardBehaviorPtrOutput{})
	pulumi.RegisterOutputType(DashboardDashboardErrorTypeOutput{})
	pulumi.RegisterOutputType(DashboardDashboardErrorTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardDashboardUIStateOutput{})
	pulumi.RegisterOutputType(DashboardDashboardUIStatePtrOutput{})
	pulumi.RegisterOutputType(DashboardResourceStatusOutput{})
	pulumi.RegisterOutputType(DashboardResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(DataSetColumnDataTypeOutput{})
	pulumi.RegisterOutputType(DataSetColumnDataTypePtrOutput{})
	pulumi.RegisterOutputType(DataSetDataSetImportModeOutput{})
	pulumi.RegisterOutputType(DataSetDataSetImportModePtrOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialCountryCodeOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialCountryCodePtrOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionFormatVersionOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionFormatVersionPtrOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionPolicyOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionPolicyPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceErrorInfoTypeOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceErrorInfoTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceTypeOutput{})
	pulumi.RegisterOutputType(DataSourceDataSourceTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceResourceStatusOutput{})
	pulumi.RegisterOutputType(DataSourceResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(TemplateResourceStatusOutput{})
	pulumi.RegisterOutputType(TemplateResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(TemplateTemplateErrorTypeOutput{})
	pulumi.RegisterOutputType(TemplateTemplateErrorTypePtrOutput{})
	pulumi.RegisterOutputType(ThemeResourceStatusOutput{})
	pulumi.RegisterOutputType(ThemeResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(ThemeThemeErrorTypeOutput{})
	pulumi.RegisterOutputType(ThemeThemeErrorTypePtrOutput{})
	pulumi.RegisterOutputType(ThemeThemeTypeOutput{})
	pulumi.RegisterOutputType(ThemeThemeTypePtrOutput{})
}
